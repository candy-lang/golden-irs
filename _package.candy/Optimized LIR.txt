# Optimized LIR for module Examples:_package
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# Constants
%0 = Examples:_package:
%1 = builtinEquals
%2 = builtinGetArgumentCount
%3 = builtinIfElse
%4 = builtinStructGet
%5 = builtinTypeOf
%6 = Function
%7 = Main
%8 = Nothing
%9 = 1
%10 = "The module doesn't export a main function."
%11 = { body_0 }
%12 = []
%13 = "The exported main value is not a function."
%14 = { body_1 }
%15 = "The exported main function doesn't accept exactly one parameter."
%16 = { body_2 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Examples:_package:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %8<Nothing>
body_1 (responsible $0) =
  # Original HIR IDs: Examples:_package:else
  # Captured IDs: none
  $1 = %13<"The exported main value is not a function.">
  $2 = %0<Examples:_package:>
  $3 = panicking because $1<%13<"The exported main value is not a function.">> ($2<%0<Examples:_package:>> is at fault)
body_2 (responsible $0) =
  # Original HIR IDs: Examples:_package:else
  # Captured IDs: none
  $1 = %15<"The exported main function doesn't accept exactly one parameter.">
  $2 = %0<Examples:_package:>
  $3 = panicking because $1<%15<"The exported main function doesn't accept exactly one parameter.">> ($2<%0<Examples:_package:>> is at fault)
body_3 (responsible $0) =
  # Original HIR IDs: Examples:_package:
  # Captured IDs: none
  $1 = %10<"The module doesn't export a main function.">
  $2 = %0<Examples:_package:>
  $3 = panicking because $1<%10<"The module doesn't export a main function.">> ($2<%0<Examples:_package:>> is at fault)
  $4 = %4<builtinStructGet>
  $5 = %12<[]>
  $6 = %7<Main>
  $7 = call $4<%4<builtinStructGet>> with $5<%12<[]>> $6<%7<Main>> ($2<%0<Examples:_package:>> is responsible)
  $8 = dup $7 by 2
  $9 = %5<builtinTypeOf>
  $10 = call $9<%5<builtinTypeOf>> with $7 ($2<%0<Examples:_package:>> is responsible)
  $11 = %1<builtinEquals>
  $12 = %6<Function>
  $13 = call $11<%1<builtinEquals>> with $10 $12<%6<Function>> ($2<%0<Examples:_package:>> is responsible)
  $14 = %3<builtinIfElse>
  $15 = %11<{ body_0 }>
  $16 = %14<{ body_1 }>
  $17 = call $14<%3<builtinIfElse>> with $13 $15<%11<{ body_0 }>> $16<%14<{ body_1 }>> ($2<%0<Examples:_package:>> is responsible)
  $18 = %2<builtinGetArgumentCount>
  $19 = call $18<%2<builtinGetArgumentCount>> with $7 ($2<%0<Examples:_package:>> is responsible)
  $20 = %9<1>
  $21 = call $11<%1<builtinEquals>> with $19 $20<%9<1>> ($2<%0<Examples:_package:>> is responsible)
  $22 = %16<{ body_2 }>
  $23 = call $14<%3<builtinIfElse>> with $21 $15<%11<{ body_0 }>> $22<%16<{ body_2 }>> ($2<%0<Examples:_package:>> is responsible)
  $24 = drop $3
  $25 = drop $17
  $26 = drop $23
  $27 = $7
