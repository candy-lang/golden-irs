# MIR for module Examples:_package
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# anonymous:$generated::needs
$49 = { $2 $3 $4 (+ responsible $1) ->
  $5 = anonymous:$generated::needs
  $6 = builtinEquals
  $7 = Nothing
  $8 = True
  $9 = False
  $10 = call $6 with $2 $8 ($5 is responsible)
  $11 = builtinIfElse
  # anonymous:$generated::needs:isConditionTrue:then
  $14 = { (responsible $12) ->
    $13 = $8
  }
  # anonymous:$generated::needs:isConditionTrue:else
  $17 = { (responsible $15) ->
    $16 = call $6 with $2 $9 ($5 is responsible)
  }
  $18 = call $11 with $10 $14 $17 ($5 is responsible)
  $19 = builtinIfElse
  # anonymous:$generated::needs:isConditionBool:then
  $22 = { (responsible $20) ->
    $21 = $7
  }
  # anonymous:$generated::needs:isConditionBool:else
  $26 = { (responsible $23) ->
    $24 = "The `condition` must be either `True` or `False`."
    $25 = panicking because $24 ($1 is at fault)
  }
  $27 = call $19 with $18 $22 $26 ($5 is responsible)
  $28 = builtinTypeOf
  $29 = call $28 with $3 ($1 is responsible)
  $30 = Text
  $31 = call $6 with $29 $30 ($1 is responsible)
  $32 = builtinIfElse
  # anonymous:$generated::needs:isReasonText:then
  $35 = { (responsible $33) ->
    $34 = $7
  }
  # anonymous:$generated::needs:isReasonText:else
  $39 = { (responsible $36) ->
    $37 = "The `reason` must be a text."
    $38 = panicking because $37 ($1 is at fault)
  }
  $40 = call $32 with $31 $35 $39 ($5 is responsible)
  $41 = builtinIfElse
  # anonymous:$generated::needs:condition:then
  $44 = { (responsible $42) ->
    $43 = $7
  }
  # anonymous:$generated::needs:condition:else
  $47 = { (responsible $45) ->
    $46 = panicking because $3 ($4 is at fault)
  }
  $48 = call $41 with $2 $44 $47 ($5 is responsible)
}
$50 = Examples:_package:
# Examples:_package:use
$54 = { $52 (+ responsible $51) ->
  $53 = use $52 (relative to Examples:_package; $51 is responsible)
}
$55 = Nothing
$56 = []
$57 = builtinStructHasKey
$58 = Main
$59 = call $57 with $56 $58 ($50 is responsible)
$60 = "The module doesn't export a main function."
$61 = builtinIfElse
# Examples:_package:then
$64 = { (responsible $62) ->
  $63 = Nothing
}
# Examples:_package:else
$67 = { (responsible $65) ->
  $66 = panicking because $60 ($50 is at fault)
}
$68 = call $61 with $59 $64 $67 ($50 is responsible)
$69 = builtinStructGet
$70 = call $69 with $56 $58 ($50 is responsible)
$71 = builtinTypeOf
$72 = call $71 with $70 ($50 is responsible)
$73 = builtinEquals
$74 = Function
$75 = call $73 with $72 $74 ($50 is responsible)
$76 = "The exported main value is not a function."
$77 = builtinIfElse
# Examples:_package:then
$80 = { (responsible $78) ->
  $79 = Nothing
}
# Examples:_package:else
$83 = { (responsible $81) ->
  $82 = panicking because $76 ($50 is at fault)
}
$84 = call $77 with $75 $80 $83 ($50 is responsible)
$85 = builtinGetArgumentCount
$86 = call $85 with $70 ($50 is responsible)
$87 = 1
$88 = call $73 with $86 $87 ($50 is responsible)
$89 = "The exported main function doesn't accept exactly one parameter."
$90 = builtinIfElse
# Examples:_package:then
$93 = { (responsible $91) ->
  $92 = Nothing
}
# Examples:_package:else
$96 = { (responsible $94) ->
  $95 = panicking because $89 ($50 is at fault)
}
$97 = call $90 with $88 $93 $96 ($50 is responsible)
$98 = $70
