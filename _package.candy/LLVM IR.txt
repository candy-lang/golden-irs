; ModuleID = 'module'
source_filename = "module"

@"Examples:_package:" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Function = global ptr null
@tag_Main = global ptr null
@tag_Nothing = global ptr null
@num_1 = global ptr null
@"text_The module doesn't export a main function." = global ptr null
@"fun_Examples__package_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Examples:_package:\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Examples:_package:", align 8
  %2 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %2, ptr @fun_candy_builtin_equals, align 8
  %3 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %3, ptr @fun_candy_builtin_get_argument_count, align 8
  %4 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %4, ptr @fun_candy_builtin_if_else, align 8
  %5 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %5, ptr @fun_candy_builtin_struct_get, align 8
  %6 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %6, ptr @fun_candy_builtin_type_of, align 8
  %7 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr null)
  store ptr %8, ptr @tag_Function, align 8
  %9 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %9, align 1
  %10 = call ptr @make_candy_tag(ptr %9, ptr null)
  store ptr %10, ptr @tag_Main, align 8
  %11 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %11, align 1
  %12 = call ptr @make_candy_tag(ptr %11, ptr null)
  store ptr %12, ptr @tag_Nothing, align 8
  %13 = call ptr @make_candy_int(i64 1)
  store ptr %13, ptr @num_1, align 8
  %14 = alloca i8, i64 43, align 1
  store [43 x i8] c"The module doesn't export a main function.\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"text_The module doesn't export a main function.", align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %17 = call ptr @make_candy_function(ptr @"Examples__package_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %16, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %17, ptr @"fun_Examples__package_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %18 = alloca ptr, i64 1, align 8
  %19 = alloca ptr, i64 1, align 8
  %20 = getelementptr ptr, ptr %18, i64 0
  store ptr null, ptr %20, align 8
  %21 = getelementptr ptr, ptr %19, i64 0
  store ptr null, ptr %21, align 8
  %22 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %23 = load ptr, ptr @"text_The module doesn't export a main function.", align 8
  call void @candy_panic(ptr %23)
  unreachable
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Examples__package_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Examples__package_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}
