# AST for module Examples:average
assignment: struct
  identifier $6@"int"
  identifier $8@"iterable"
  identifier $10@"list"
  identifier $12@"result" = 
  call identifier $0@"use" with these arguments:
    text
      textPart $2@"Core"
assignment: struct
  identifier $18@"divideTruncating" = 
  identifier $16@"int"
assignment: $95@"average" = function (fuzzable) { identifier $96@"a" ->
  call identifier $22@"needs" with these arguments:
    call struct access identifier $24@"list".$26@"Is" with these arguments:
      identifier $28@"a"
  call identifier $32@"needs" with these arguments:
    call struct access identifier $41@"bool".$43@"Not" with these arguments:
      call struct access identifier $36@"list".$38@"IsEmpty" with these arguments:
        identifier $34@"a"
  call identifier $47@"needs" with these arguments:
    call struct access identifier $56@"iterable".$58@"All" with these arguments:
      call struct access identifier $51@"iterable".$53@"FromList" with these arguments:
        identifier $49@"a"
      function (non-fuzzable) { identifier $60@"a" ->
        call struct access identifier $62@"int".$64@"Is" with these arguments:
          identifier $66@"a"
      }
  call identifier $73@"divideTruncating" with these arguments:
    call struct access identifier $82@"iterable".$84@"Sum" with these arguments:
      call struct access identifier $77@"iterable".$79@"FromList" with these arguments:
        identifier $75@"a"
    call struct access identifier $89@"list".$91@"Length" with these arguments:
      identifier $87@"a"
}
assignment: $106@"main" := function (fuzzable) { identifier $107@"environment" ->
  call identifier $99@"average" with these arguments:
    list
      int 1
      int 2
      int 3
}
