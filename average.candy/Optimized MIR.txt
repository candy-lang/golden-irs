# Optimized MIR for module Examples:average
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::functionRun:11
$3 = Builtins::functionRun:16
$4 = Builtins::functionRun:22
$5 = Builtins::functionRun:5
$6 = Builtins::getArgumentCount:11
$7 = Builtins::getArgumentCount:5
$8 = Builtins::ifElse:1
$9 = Builtins::ifElse:11
$10 = Builtins::ifElse:14
$11 = Builtins::ifElse:19
$12 = Builtins::ifElse:25
$13 = Builtins::ifElse:28
$14 = Builtins::ifElse:33
$15 = Builtins::ifElse:41
$16 = Builtins::ifElse:5
$17 = Builtins::intAdd:11
$18 = Builtins::intAdd:18
$19 = Builtins::intAdd:5
$20 = Builtins::intBitwiseAnd:18
$21 = Builtins::intBitwiseAnd:5
$22 = Builtins::intCompareTo:11
$23 = Builtins::intCompareTo:18
$24 = Builtins::intCompareTo:5
$25 = Builtins::intDivideTruncating:11
$26 = Builtins::intDivideTruncating:17
$27 = Builtins::intDivideTruncating:25
$28 = Builtins::intDivideTruncating:32
$29 = Builtins::intDivideTruncating:5
$30 = Builtins::intMultiply:18
$31 = Builtins::intMultiply:5
$32 = Builtins::intSubtract:18
$33 = Builtins::intSubtract:5
$34 = Builtins::isLessThanOrEqualTo:11
$35 = Builtins::isLessThanOrEqualTo:18
$36 = Builtins::isLessThanOrEqualTo:19
$37 = Builtins::isLessThanOrEqualTo:5
$38 = Builtins::isNonNegative:12
$39 = Builtins::isNonNegative:13
$40 = Builtins::isNonNegative:5
$41 = Builtins::listGet:11
$42 = Builtins::listGet:14
$43 = Builtins::listGet:16
$44 = Builtins::listGet:24
$45 = Builtins::listGet:25
$46 = Builtins::listGet:30
$47 = Builtins::listGet:37
$48 = Builtins::listGet:5
$49 = Builtins::listInsert:11
$50 = Builtins::listInsert:14
$51 = Builtins::listInsert:16
$52 = Builtins::listInsert:24
$53 = Builtins::listInsert:25
$54 = Builtins::listInsert:27
$55 = Builtins::listInsert:35
$56 = Builtins::listInsert:5
$57 = Builtins::listLength:11
$58 = Builtins::listLength:5
$59 = Builtins::not:1
$60 = Builtins::structGet:12
$61 = Builtins::structGet:14
$62 = Builtins::structGet:21
$63 = Builtins::structGet:5
$64 = Builtins::textConcatenate:11
$65 = Builtins::textConcatenate:18
$66 = Builtins::textConcatenate:5
$67 = Builtins::toDebugText:5
$68 = Builtins::typeIs:19
$69 = Builtins::typeIs:25
$70 = Builtins::typeOf:5
$71 = Core:bool:and:13
$72 = Core:bool:and:2
$73 = Core:bool:and:4
$74 = Core:bool:and:7
$75 = Core:bool:and:9
$76 = Core:bool:is:1
$77 = Core:bool:lazyAnd:12
$78 = Core:bool:lazyAnd:14
$79 = Core:bool:lazyAnd:16
$80 = Core:bool:lazyAnd:16:11
$81 = Core:bool:lazyAnd:16:19
$82 = Core:bool:lazyAnd:16:7
$83 = Core:bool:lazyAnd:2
$84 = Core:bool:lazyAnd:4
$85 = Core:bool:lazyOr:12
$86 = Core:bool:lazyOr:14
$87 = Core:bool:lazyOr:16
$88 = Core:bool:lazyOr:16:12
$89 = Core:bool:lazyOr:16:20
$90 = Core:bool:lazyOr:16:8
$91 = Core:bool:lazyOr:2
$92 = Core:bool:lazyOr:4
$93 = Core:bool:not:2
$94 = Core:bool:not:4
$95 = Core:bool:not:6
$96 = Core:bool:or:13
$97 = Core:bool:or:2
$98 = Core:bool:or:4
$99 = Core:bool:or:7
$100 = Core:bool:or:9
$101 = Core:check:checkEquals:12
$102 = Core:check:checkEquals:13
$103 = Core:check:checkEquals:15:0
$104 = Core:check:checkEquals:16
$105 = Core:check:checkEquals:19
$106 = Core:check:checkEquals:20
$107 = Core:check:checkEquals:22:0
$108 = Core:check:checkEquals:23
$109 = Core:check:checkEquals:25
$110 = Core:check:checkEquals:26
$111 = Core:check:checkEquals:27
$112 = Core:check:checkEquals:28
$113 = Core:check:checkEquals:29
$114 = Core:controlFlow:if:17
$115 = Core:controlFlow:if:19
$116 = Core:controlFlow:if:24
$117 = Core:controlFlow:if:7
$118 = Core:controlFlow:if:9
$119 = Core:controlFlow:recursive:15
$120 = Core:controlFlow:recursive:16:0:3
$121 = Core:controlFlow:recursive:16:5
$122 = Core:controlFlow:recursive:21
$123 = Core:controlFlow:recursive:7
$124 = Core:fixedDecimal:fromInt:13
$125 = Core:fixedDecimal:fromIntScaled:14
$126 = Core:fixedDecimal:fromIntScaled:9
$127 = Core:fixedDecimal:isScale:14:7
$128 = Core:fixedDecimal:isScale:15
$129 = Core:function:is0:11
$130 = Core:function:is0:9:3
$131 = Core:function:is2:11
$132 = Core:function:is2:9:3
$133 = Core:function:run:12
$134 = Core:function:run:2
$135 = Core:function:run:4
$136 = Core:int:compareTo:18
$137 = Core:int:compareTo:4
$138 = Core:int:compareTo:9
$139 = Core:int:isGreaterThan:13
$140 = Core:int:isGreaterThan:4
$141 = Core:int:isGreaterThan:9
$142 = Core:int:isLessThan:13
$143 = Core:int:isLessThan:4
$144 = Core:int:isLessThan:9
$145 = Core:int:isNegative:4
$146 = Core:int:isNegative:8
$147 = Core:int:isNonNegative:14
$148 = Core:int:isNonNegative:4
$149 = Core:int:isNonNegative:7
$150 = anonymous:$generated::needs
$151 = builtinEquals
$152 = builtinGetArgumentCount
$153 = builtinIfElse
$154 = builtinIntAdd
$155 = builtinIntBitwiseAnd
$156 = builtinIntCompareTo
$157 = builtinIntDivideTruncating
$158 = builtinIntMultiply
$159 = builtinIntSubtract
$160 = builtinListGet
$161 = builtinListInsert
$162 = builtinListLength
$163 = builtinStructGet
$164 = builtinStructHasKey
$165 = builtinTagGetValue
$166 = builtinTagHasValue
$167 = builtinTagWithoutValue
$168 = builtinTextConcatenate
$169 = builtinToDebugText
$170 = builtinTypeOf
$171 = Equal
$172 = False
$173 = Function
$174 = Greater
$175 = Int
$176 = Less
$177 = List
$178 = Match
$179 = MinorUnits
$180 = NoMatch
$181 = Nothing
$182 = Scale
$183 = Struct
$184 = Tag
$185 = Text
$186 = True
$187 = 0
$188 = 1
$189 = 2
$190 = 3
$191 = 4
$192 = 5
$193 = 10
$194 = " to be "
$195 = "."
$196 = "A check failed: Expected "
$197 = "Expected `Equal`, got `"
$198 = "Expected `False`, got `"
$199 = "Expected `Greater`, got `"
$200 = "Expected `Less`, got `"
$201 = "Expected `True`, got `"
$202 = "Expected a Struct, got `"
$203 = "Expected a Tag, got `"
$204 = "Expected tag to have a value, but it doesn't have any."
$205 = "No case matched the given expression."
$206 = "The `body` should take the recursive function and the argument."
$207 = "The `condition` must be either `True` or `False`."
$208 = "The `reason` must be a text."
$209 = "You can't divide by zero."
$210 = "`."
$211 = "`False` was not satisfied"
$212 = "`a | typeIs Int` was not satisfied"
$213 = "`a | typeIs Text` was not satisfied"
$214 = "`b | typeIs Int` was not satisfied"
$215 = "`b | typeIs Text` was not satisfied"
$216 = "`b` didn't return a bool."
$217 = "`bool.is condition` was not satisfied"
$218 = "`conditionIsBool` was not satisfied"
$219 = "`dividend | typeIs Int` was not satisfied"
$220 = "`divisor | typeIs Int` was not satisfied"
$221 = "`else | getArgumentCount | equals 0` was not satisfied"
$222 = "`else | typeIs Function` was not satisfied"
$223 = "`factorA | typeIs Int` was not satisfied"
$224 = "`function | typeIs Function` was not satisfied"
$225 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
$226 = "`function.is0 b` was not satisfied"
$227 = "`function.is0 then` was not satisfied"
$228 = "`index | intCompareTo (list | ✨.listLength) | equals Less` was not satisfied"
$229 = "`index | isLessThanOrEqualTo (list | ✨.listLength)` was not satisfied"
$230 = "`index | isNonNegative` was not satisfied"
$231 = "`index | typeIs Int` was not satisfied"
$232 = "`int | typeIs Int` was not satisfied"
$233 = "`int.is minorUnits` was not satisfied"
$234 = "`is a` was not satisfied"
$235 = "`is b` was not satisfied"
$236 = "`is valueA` was not satisfied"
$237 = "`is valueB` was not satisfied"
$238 = "`is value` was not satisfied"
$239 = "`is0 body` was not satisfied"
$240 = "`isScale scale` was not satisfied"
$241 = "`list | typeIs List` was not satisfied"
$242 = "`minuend | typeIs Int` was not satisfied"
$243 = "`struct | typeIs Struct` was not satisfied"
$244 = "`struct | ✨.structHasKey key` was not satisfied"
$245 = "`then | getArgumentCount | equals 0` was not satisfied"
$246 = "`then | typeIs Function` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
$247 = { (responsible $248) ->
  $249 = $186
}
# Core::21:isMatch:then, Core::32:isMatch:then, Core::43:isMatch:then, Core::104:isMatch:then, Core::155:isMatch:then, Core::166:isMatch:then, Core:bool:11:isMatch:then, Core:check:11:isMatch:then, Core:controlFlow:if:23, Core:controlFlow:31:isMatch:then, Core:controlFlow:52:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:fixedDecimal:divideTruncating:35:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:40:isMatch:then, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:function:21:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:31:isMatch:then, Core:int:42:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:32:isMatch:then, Core:iterator:93:isMatch:then, Core:iterator:104:isMatch:then, Core:iterator:130:isMatch:then, Core:iterator:139:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core:list:31:isMatch:then, Core:list:42:isMatch:then, Core:result:21:isMatch:then, Core:result:32:isMatch:then, Core:struct:21:isMatch:then, Core:tag:31:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:text:31:isMatch:then, Core:text:42:isMatch:then, Core:type:21:isMatch:then, Examples:average:then, Examples:average:11:isMatch:then, Examples:average:14:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$250 = { (responsible $251) ->
  $252 = $181
}
# anonymous:$generated::needs
$253 = { $254 $255 $256 (+ responsible $257) ->
  $258 = call $151 with $254 $186 ($150 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $259 = { (responsible $260) ->
    $261 = call $151 with $254 $172 ($150 is responsible)
  }
  $262 = call $153 with $258 $247 $259 ($150 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $263 = { (responsible $264) ->
    $265 = panicking because $207 ($257 is at fault)
  }
  $266 = call $153 with $262 $250 $263 ($150 is responsible)
  $267 = call $170 with $255 ($257 is responsible)
  $268 = call $151 with $267 $185 ($257 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $269 = { (responsible $270) ->
    $271 = panicking because $208 ($257 is at fault)
  }
  $272 = call $153 with $268 $250 $269 ($150 is responsible)
  # anonymous:$generated::needs:condition:else
  $273 = { (responsible $274) ->
    $275 = panicking because $255 ($256 is at fault)
  }
  $276 = call $153 with $254 $250 $273 ($150 is responsible)
}
$277 = ($178,)
# Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:16:equals:then, Core:bool:lazyOr:16:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:iterator:generateWithState:12:1:3:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:reduceLeft:16:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:17:2:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:19:equals:then, Core:list:lastWhere:19:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
$278 = { (responsible $279) ->
  $280 = $277
}
# Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:lazyAnd:16:case-1:matched, Core:bool:not:6:case-0:matched, Core:function:is0:10, Core:function:is1:10, Core:function:is2:10, Core:function:is3:10, Core:function:is4:10, Core:function:is5:10, Core:list:isValidIndex:19, Core:list:isValidInsertIndex:19, anonymous:$generated::needs:isConditionTrue:else
$281 = { (responsible $282) ->
  $283 = $172
}
# Builtins::not
$284 = { $285 (+ responsible $286) ->
  $287 = call $151 with $186 $285 ($59 is responsible)
  # Builtins::not:1:equals:else
  $288 = { (responsible $289) ->
    $290 = call $169 with $285 ($59 is responsible)
    $291 = call $168 with $201 $290 ($59 is responsible)
    $292 = call $168 with $291 $210 ($59 is responsible)
    $293 = ($180, $292)
  }
  $294 = call $153 with $287 $278 $288 ($59 is responsible)
  $295 = call $160 with $294 $187 ($59 is responsible)
  $296 = call $151 with $295 $178 ($59 is responsible)
  # Builtins::not:1:case-0:didNotMatch
  $297 = { (responsible $298) ->
    $299 = call $160 with $294 $188 ($59 is responsible)
    $300 = call $151 with $172 $285 ($59 is responsible)
    # Builtins::not:1:equals:else
    $301 = { (responsible $302) ->
      $303 = call $169 with $285 ($59 is responsible)
      $304 = call $168 with $198 $303 ($59 is responsible)
      $305 = call $168 with $304 $210 ($59 is responsible)
      $306 = ($180, $305)
    }
    $307 = call $153 with $300 $278 $301 ($59 is responsible)
    $308 = call $160 with $307 $187 ($59 is responsible)
    $309 = call $151 with $308 $178 ($59 is responsible)
    # Builtins::not:1:case-1:didNotMatch
    $310 = { (responsible $311) ->
      $312 = call $160 with $307 $188 ($59 is responsible)
      $313 = panicking because $211 ($286 is at fault)
    }
    $314 = call $153 with $309 $247 $310 ($59 is responsible)
  }
  $315 = call $153 with $296 $281 $297 ($59 is responsible)
}
# Builtins::isNonNegative
$316 = { $317 (+ responsible $318) ->
  $319 = call $170 with $317 ($68 is responsible)
  $320 = call $151 with $319 $175 ($69 is responsible)
  $321 = call $253 with $320 $232 $318 ($40 is responsible)
  $322 = call $156 with $317 $187 ($38 is responsible)
  $323 = call $151 with $174 $322 ($39 is responsible)
  # Builtins::isNonNegative:13:equals:else
  $324 = { (responsible $325) ->
    $326 = call $169 with $322 ($39 is responsible)
    $327 = call $168 with $199 $326 ($39 is responsible)
    $328 = call $168 with $327 $210 ($39 is responsible)
    $329 = ($180, $328)
  }
  $330 = call $153 with $323 $278 $324 ($39 is responsible)
  $331 = call $160 with $330 $187 ($39 is responsible)
  $332 = call $151 with $331 $178 ($39 is responsible)
  # Builtins::isNonNegative:13:isMatch:then
  $333 = { (responsible $334) ->
    $335 = $330
  }
  # Builtins::isNonNegative:13:isMatch:else
  $336 = { (responsible $337) ->
    $338 = call $151 with $171 $322 ($39 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $339 = { (responsible $340) ->
      $341 = call $169 with $322 ($39 is responsible)
      $342 = call $168 with $197 $341 ($39 is responsible)
      $343 = call $168 with $342 $210 ($39 is responsible)
      $344 = ($180, $343)
    }
    $345 = call $153 with $338 $278 $339 ($39 is responsible)
  }
  $346 = call $153 with $332 $333 $336 ($39 is responsible)
  $347 = call $160 with $346 $187 ($39 is responsible)
  $348 = call $151 with $347 $178 ($39 is responsible)
  # Builtins::isNonNegative:13:case-0:didNotMatch
  $349 = { (responsible $350) ->
    $351 = call $160 with $346 $188 ($39 is responsible)
    $352 = call $151 with $176 $322 ($39 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $353 = { (responsible $354) ->
      $355 = call $169 with $322 ($39 is responsible)
      $356 = call $168 with $200 $355 ($39 is responsible)
      $357 = call $168 with $356 $210 ($39 is responsible)
      $358 = ($180, $357)
    }
    $359 = call $153 with $352 $278 $353 ($39 is responsible)
    $360 = call $160 with $359 $187 ($39 is responsible)
    $361 = call $151 with $360 $178 ($39 is responsible)
    # Builtins::isNonNegative:13:case-1:didNotMatch
    $362 = { (responsible $363) ->
      $364 = call $160 with $359 $188 ($39 is responsible)
      $365 = panicking because $205 ($39 is at fault)
    }
    $366 = call $153 with $361 $281 $362 ($39 is responsible)
  }
  $367 = call $153 with $348 $247 $349 ($39 is responsible)
}
# Builtins::isLessThanOrEqualTo
$368 = { $369 $370 (+ responsible $371) ->
  $372 = call $170 with $369 ($68 is responsible)
  $373 = call $151 with $372 $175 ($69 is responsible)
  $374 = call $253 with $373 $212 $371 ($37 is responsible)
  $375 = call $170 with $370 ($68 is responsible)
  $376 = call $151 with $375 $175 ($69 is responsible)
  $377 = call $253 with $376 $214 $371 ($34 is responsible)
  $378 = call $156 with $369 $370 ($35 is responsible)
  $379 = call $151 with $176 $378 ($36 is responsible)
  # Builtins::isLessThanOrEqualTo:19:equals:else
  $380 = { (responsible $381) ->
    $382 = call $169 with $378 ($36 is responsible)
    $383 = call $168 with $200 $382 ($36 is responsible)
    $384 = call $168 with $383 $210 ($36 is responsible)
    $385 = ($180, $384)
  }
  $386 = call $153 with $379 $278 $380 ($36 is responsible)
  $387 = call $160 with $386 $187 ($36 is responsible)
  $388 = call $151 with $387 $178 ($36 is responsible)
  # Builtins::isLessThanOrEqualTo:19:isMatch:then
  $389 = { (responsible $390) ->
    $391 = $386
  }
  # Builtins::isLessThanOrEqualTo:19:isMatch:else
  $392 = { (responsible $393) ->
    $394 = call $151 with $171 $378 ($36 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $395 = { (responsible $396) ->
      $397 = call $169 with $378 ($36 is responsible)
      $398 = call $168 with $197 $397 ($36 is responsible)
      $399 = call $168 with $398 $210 ($36 is responsible)
      $400 = ($180, $399)
    }
    $401 = call $153 with $394 $278 $395 ($36 is responsible)
  }
  $402 = call $153 with $388 $389 $392 ($36 is responsible)
  $403 = call $160 with $402 $187 ($36 is responsible)
  $404 = call $151 with $403 $178 ($36 is responsible)
  # Builtins::isLessThanOrEqualTo:19:case-0:didNotMatch
  $405 = { (responsible $406) ->
    $407 = call $160 with $402 $188 ($36 is responsible)
    $408 = call $151 with $174 $378 ($36 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $409 = { (responsible $410) ->
      $411 = call $169 with $378 ($36 is responsible)
      $412 = call $168 with $199 $411 ($36 is responsible)
      $413 = call $168 with $412 $210 ($36 is responsible)
      $414 = ($180, $413)
    }
    $415 = call $153 with $408 $278 $409 ($36 is responsible)
    $416 = call $160 with $415 $187 ($36 is responsible)
    $417 = call $151 with $416 $178 ($36 is responsible)
    # Builtins::isLessThanOrEqualTo:19:case-1:didNotMatch
    $418 = { (responsible $419) ->
      $420 = call $160 with $415 $188 ($36 is responsible)
      $421 = panicking because $205 ($36 is at fault)
    }
    $422 = call $153 with $417 $281 $418 ($36 is responsible)
  }
  $423 = call $153 with $404 $247 $405 ($36 is responsible)
}
# Builtins::ifElse
$424 = { $425 $426 $427 (+ responsible $428) ->
  $429 = call $151 with $186 $425 ($8 is responsible)
  # Builtins::ifElse:1:equals:else
  $430 = { (responsible $431) ->
    $432 = call $169 with $425 ($8 is responsible)
    $433 = call $168 with $201 $432 ($8 is responsible)
    $434 = call $168 with $433 $210 ($8 is responsible)
    $435 = ($180, $434)
  }
  $436 = call $153 with $429 $278 $430 ($8 is responsible)
  $437 = call $160 with $436 $187 ($8 is responsible)
  $438 = call $151 with $437 $178 ($8 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $439 = { (responsible $440) ->
    $441 = $436
  }
  # Builtins::ifElse:1:isMatch:else
  $442 = { (responsible $443) ->
    $444 = call $151 with $172 $425 ($8 is responsible)
    # Builtins::ifElse:1:equals:else
    $445 = { (responsible $446) ->
      $447 = call $169 with $425 ($8 is responsible)
      $448 = call $168 with $198 $447 ($8 is responsible)
      $449 = call $168 with $448 $210 ($8 is responsible)
      $450 = ($180, $449)
    }
    $451 = call $153 with $444 $278 $445 ($8 is responsible)
  }
  $452 = call $153 with $438 $439 $442 ($8 is responsible)
  $453 = call $160 with $452 $187 ($8 is responsible)
  $454 = call $151 with $453 $178 ($8 is responsible)
  # Builtins::ifElse:1:case-0:didNotMatch
  $455 = { (responsible $456) ->
    $457 = call $160 with $452 $188 ($8 is responsible)
    $458 = $172
  }
  $459 = call $153 with $454 $247 $455 ($8 is responsible)
  $460 = call $253 with $459 $218 $428 ($16 is responsible)
  $461 = call $170 with $426 ($68 is responsible)
  $462 = call $151 with $461 $173 ($69 is responsible)
  $463 = call $253 with $462 $246 $428 ($9 is responsible)
  $464 = call $170 with $426 ($68 is responsible)
  $465 = call $151 with $464 $173 ($69 is responsible)
  $466 = call $253 with $465 $224 $10 ($7 is responsible)
  $467 = call $152 with $426 ($6 is responsible)
  $468 = call $151 with $467 $187 ($1 is responsible)
  $469 = call $253 with $468 $245 $428 ($11 is responsible)
  $470 = call $170 with $427 ($68 is responsible)
  $471 = call $151 with $470 $173 ($69 is responsible)
  $472 = call $253 with $471 $222 $428 ($12 is responsible)
  $473 = call $170 with $427 ($68 is responsible)
  $474 = call $151 with $473 $173 ($69 is responsible)
  $475 = call $253 with $474 $224 $13 ($7 is responsible)
  $476 = call $152 with $427 ($6 is responsible)
  $477 = call $151 with $476 $187 ($1 is responsible)
  $478 = call $253 with $477 $221 $428 ($14 is responsible)
  $479 = call $153 with $425 $426 $427 ($15 is responsible)
}
# Builtins::intDivideTruncating
$480 = { $481 $482 (+ responsible $483) ->
  $484 = call $170 with $481 ($68 is responsible)
  $485 = call $151 with $484 $175 ($69 is responsible)
  $486 = call $253 with $485 $219 $483 ($29 is responsible)
  $487 = call $170 with $482 ($68 is responsible)
  $488 = call $151 with $487 $175 ($69 is responsible)
  $489 = call $253 with $488 $220 $483 ($25 is responsible)
  $490 = call $151 with $482 $187 ($1 is responsible)
  $491 = call $284 with $490 ($26 is responsible)
  $492 = call $253 with $491 $209 $483 ($27 is responsible)
  $493 = call $157 with $481 $482 ($28 is responsible)
}
# Builtins::listGet
$494 = { $495 $496 (+ responsible $497) ->
  $498 = call $170 with $495 ($68 is responsible)
  $499 = call $151 with $498 $177 ($69 is responsible)
  $500 = call $253 with $499 $241 $497 ($48 is responsible)
  $501 = call $170 with $496 ($68 is responsible)
  $502 = call $151 with $501 $175 ($69 is responsible)
  $503 = call $253 with $502 $231 $497 ($41 is responsible)
  $504 = call $316 with $496 ($42 is responsible)
  $505 = call $253 with $504 $230 $497 ($43 is responsible)
  $506 = call $162 with $495 ($44 is responsible)
  $507 = call $170 with $496 ($68 is responsible)
  $508 = call $151 with $507 $175 ($69 is responsible)
  $509 = call $253 with $508 $212 $45 ($24 is responsible)
  $510 = call $156 with $496 $506 ($23 is responsible)
  $511 = call $151 with $510 $176 ($1 is responsible)
  $512 = call $253 with $511 $228 $497 ($46 is responsible)
  $513 = call $160 with $495 $496 ($47 is responsible)
}
# Builtins::listInsert
$514 = { $515 $516 $517 (+ responsible $518) ->
  $519 = call $170 with $515 ($68 is responsible)
  $520 = call $151 with $519 $177 ($69 is responsible)
  $521 = call $253 with $520 $241 $518 ($56 is responsible)
  $522 = call $170 with $516 ($68 is responsible)
  $523 = call $151 with $522 $175 ($69 is responsible)
  $524 = call $253 with $523 $231 $518 ($49 is responsible)
  $525 = call $316 with $516 ($50 is responsible)
  $526 = call $253 with $525 $230 $518 ($51 is responsible)
  $527 = call $162 with $515 ($52 is responsible)
  $528 = call $368 with $516 $527 ($53 is responsible)
  $529 = call $253 with $528 $229 $518 ($54 is responsible)
  $530 = call $161 with $515 $516 $517 ($55 is responsible)
}
# Builtins::toDebugText, Core:iterator:201, Core:toDebugText:toDebugText
$531 = { $532 (+ responsible $533) ->
  $534 = call $169 with $532 ($67 is responsible)
}
# Core:function:is0
$535 = { $536 (+ responsible $537) ->
  $538 = call $170 with $536 ($70 is responsible)
  $539 = call $151 with $538 $173 ($1 is responsible)
  # Core:function:is0:9
  $540 = { (responsible $541) ->
    $542 = call $170 with $536 ($68 is responsible)
    $543 = call $151 with $542 $173 ($69 is responsible)
    $544 = call $253 with $543 $224 $130 ($7 is responsible)
    $545 = call $152 with $536 ($6 is responsible)
    $546 = call $151 with $545 $187 ($1 is responsible)
  }
  $547 = call $424 with $539 $540 $281 ($129 is responsible)
}
# Core:function:run
$548 = { $549 (+ responsible $550) ->
  $551 = call $535 with $549 ($134 is responsible)
  $552 = call $253 with $551 $239 $550 ($135 is responsible)
  $553 = call $170 with $549 ($68 is responsible)
  $554 = call $151 with $553 $173 ($69 is responsible)
  $555 = call $253 with $554 $224 $133 ($5 is responsible)
  $556 = call $152 with $549 ($2 is responsible)
  $557 = call $151 with $556 $187 ($1 is responsible)
  $558 = call $253 with $557 $225 $133 ($3 is responsible)
  $559 = call $549 with no arguments ($4 is responsible)
}
# Core:bool:is
$560 = { $561 (+ responsible $562) ->
  $563 = call $151 with $186 $561 ($76 is responsible)
  # Core:bool:is:1:equals:else
  $564 = { (responsible $565) ->
    $566 = call $169 with $561 ($76 is responsible)
    $567 = call $168 with $201 $566 ($76 is responsible)
    $568 = call $168 with $567 $210 ($76 is responsible)
    $569 = ($180, $568)
  }
  $570 = call $153 with $563 $278 $564 ($76 is responsible)
  $571 = call $160 with $570 $187 ($76 is responsible)
  $572 = call $151 with $571 $178 ($76 is responsible)
  # Core:bool:is:1:isMatch:then
  $573 = { (responsible $574) ->
    $575 = $570
  }
  # Core:bool:is:1:isMatch:else
  $576 = { (responsible $577) ->
    $578 = call $151 with $172 $561 ($76 is responsible)
    # Core:bool:is:1:equals:else
    $579 = { (responsible $580) ->
      $581 = call $169 with $561 ($76 is responsible)
      $582 = call $168 with $198 $581 ($76 is responsible)
      $583 = call $168 with $582 $210 ($76 is responsible)
      $584 = ($180, $583)
    }
    $585 = call $153 with $578 $278 $579 ($76 is responsible)
  }
  $586 = call $153 with $572 $573 $576 ($76 is responsible)
  $587 = call $160 with $586 $187 ($76 is responsible)
  $588 = call $151 with $587 $178 ($76 is responsible)
  # Core:bool:is:1:case-0:didNotMatch
  $589 = { (responsible $590) ->
    $591 = call $160 with $586 $188 ($76 is responsible)
    $592 = $172
  }
  $593 = call $153 with $588 $247 $589 ($76 is responsible)
}
# Core:bool:not
$594 = { $595 (+ responsible $596) ->
  $597 = call $560 with $595 ($93 is responsible)
  $598 = call $253 with $597 $238 $596 ($94 is responsible)
  $599 = call $151 with $186 $595 ($95 is responsible)
  # Core:bool:not:6:equals:else
  $600 = { (responsible $601) ->
    $602 = call $169 with $595 ($95 is responsible)
    $603 = call $168 with $201 $602 ($95 is responsible)
    $604 = call $168 with $603 $210 ($95 is responsible)
    $605 = ($180, $604)
  }
  $606 = call $153 with $599 $278 $600 ($95 is responsible)
  $607 = call $160 with $606 $187 ($95 is responsible)
  $608 = call $151 with $607 $178 ($95 is responsible)
  # Core:bool:not:6:case-0:didNotMatch
  $609 = { (responsible $610) ->
    $611 = call $160 with $606 $188 ($95 is responsible)
    $612 = call $151 with $172 $595 ($95 is responsible)
    # Core:bool:not:6:equals:else
    $613 = { (responsible $614) ->
      $615 = call $169 with $595 ($95 is responsible)
      $616 = call $168 with $198 $615 ($95 is responsible)
      $617 = call $168 with $616 $210 ($95 is responsible)
      $618 = ($180, $617)
    }
    $619 = call $153 with $612 $278 $613 ($95 is responsible)
    $620 = call $160 with $619 $187 ($95 is responsible)
    $621 = call $151 with $620 $178 ($95 is responsible)
    # Core:bool:not:6:case-1:didNotMatch
    $622 = { (responsible $623) ->
      $624 = call $160 with $619 $188 ($95 is responsible)
      $625 = panicking because $205 ($95 is at fault)
    }
    $626 = call $153 with $621 $247 $622 ($95 is responsible)
  }
  $627 = call $153 with $608 $281 $609 ($95 is responsible)
}
# Core:bool:lazyAnd
$628 = { $629 $630 (+ responsible $631) ->
  $632 = call $560 with $629 ($83 is responsible)
  $633 = call $253 with $632 $234 $631 ($84 is responsible)
  $634 = call $535 with $630 ($77 is responsible)
  $635 = call $253 with $634 $226 $631 ($78 is responsible)
  $636 = call $151 with $186 $629 ($79 is responsible)
  # Core:bool:lazyAnd:16:equals:else
  $637 = { (responsible $638) ->
    $639 = call $169 with $629 ($79 is responsible)
    $640 = call $168 with $201 $639 ($79 is responsible)
    $641 = call $168 with $640 $210 ($79 is responsible)
    $642 = ($180, $641)
  }
  $643 = call $153 with $636 $278 $637 ($79 is responsible)
  $644 = call $160 with $643 $187 ($79 is responsible)
  $645 = call $151 with $644 $178 ($79 is responsible)
  # Core:bool:lazyAnd:16:case-0:matched
  $646 = { (responsible $647) ->
    $648 = call $548 with $630 ($82 is responsible)
    $649 = $648
    $650 = call $560 with $648 ($80 is responsible)
    $651 = call $253 with $650 $216 $631 ($81 is responsible)
    $652 = $649
  }
  # Core:bool:lazyAnd:16:case-0:didNotMatch
  $653 = { (responsible $654) ->
    $655 = call $160 with $643 $188 ($79 is responsible)
    $656 = call $151 with $172 $629 ($79 is responsible)
    # Core:bool:lazyAnd:16:equals:else
    $657 = { (responsible $658) ->
      $659 = call $169 with $629 ($79 is responsible)
      $660 = call $168 with $198 $659 ($79 is responsible)
      $661 = call $168 with $660 $210 ($79 is responsible)
      $662 = ($180, $661)
    }
    $663 = call $153 with $656 $278 $657 ($79 is responsible)
    $664 = call $160 with $663 $187 ($79 is responsible)
    $665 = call $151 with $664 $178 ($79 is responsible)
    # Core:bool:lazyAnd:16:case-1:didNotMatch
    $666 = { (responsible $667) ->
      $668 = call $160 with $663 $188 ($79 is responsible)
      $669 = panicking because $205 ($79 is at fault)
    }
    $670 = call $153 with $665 $281 $666 ($79 is responsible)
  }
  $671 = call $153 with $645 $646 $653 ($79 is responsible)
}
# Core:bool:lazyOr
$672 = { $673 $674 (+ responsible $675) ->
  $676 = call $560 with $673 ($91 is responsible)
  $677 = call $253 with $676 $234 $675 ($92 is responsible)
  $678 = call $535 with $674 ($85 is responsible)
  $679 = call $253 with $678 $226 $675 ($86 is responsible)
  $680 = call $151 with $186 $673 ($87 is responsible)
  # Core:bool:lazyOr:16:equals:else
  $681 = { (responsible $682) ->
    $683 = call $169 with $673 ($87 is responsible)
    $684 = call $168 with $201 $683 ($87 is responsible)
    $685 = call $168 with $684 $210 ($87 is responsible)
    $686 = ($180, $685)
  }
  $687 = call $153 with $680 $278 $681 ($87 is responsible)
  $688 = call $160 with $687 $187 ($87 is responsible)
  $689 = call $151 with $688 $178 ($87 is responsible)
  # Core:bool:lazyOr:16:case-0:didNotMatch
  $690 = { (responsible $691) ->
    $692 = call $160 with $687 $188 ($87 is responsible)
    $693 = call $151 with $172 $673 ($87 is responsible)
    # Core:bool:lazyOr:16:equals:else
    $694 = { (responsible $695) ->
      $696 = call $169 with $673 ($87 is responsible)
      $697 = call $168 with $198 $696 ($87 is responsible)
      $698 = call $168 with $697 $210 ($87 is responsible)
      $699 = ($180, $698)
    }
    $700 = call $153 with $693 $278 $694 ($87 is responsible)
    $701 = call $160 with $700 $187 ($87 is responsible)
    $702 = call $151 with $701 $178 ($87 is responsible)
    # Core:bool:lazyOr:16:case-1:matched
    $703 = { (responsible $704) ->
      $705 = call $548 with $674 ($90 is responsible)
      $706 = $705
      $707 = call $560 with $705 ($88 is responsible)
      $708 = call $253 with $707 $216 $675 ($89 is responsible)
      $709 = $706
    }
    # Core:bool:lazyOr:16:case-1:didNotMatch
    $710 = { (responsible $711) ->
      $712 = call $160 with $700 $188 ($87 is responsible)
      $713 = panicking because $205 ($87 is at fault)
    }
    $714 = call $153 with $702 $703 $710 ($87 is responsible)
  }
  $715 = call $153 with $689 $247 $690 ($87 is responsible)
}
# Core:check:checkEquals
$716 = { $717 $718 (+ responsible $719) ->
  $720 = call $151 with $717 $718 ($1 is responsible)
  $721 = call $170 with $717 ($101 is responsible)
  $722 = call $151 with $721 $185 ($102 is responsible)
  # Core:check:checkEquals:14
  $723 = { (responsible $724) ->
    $725 = $717
  }
  # Core:check:checkEquals:15
  $726 = { (responsible $727) ->
    $728 = call $169 with $717 ($103 is responsible)
  }
  $729 = call $153 with $722 $723 $726 ($104 is responsible)
  $730 = call $170 with $718 ($105 is responsible)
  $731 = call $151 with $730 $185 ($106 is responsible)
  # Core:check:checkEquals:21
  $732 = { (responsible $733) ->
    $734 = $718
  }
  # Core:check:checkEquals:22
  $735 = { (responsible $736) ->
    $737 = call $169 with $718 ($107 is responsible)
  }
  $738 = call $153 with $731 $732 $735 ($108 is responsible)
  $739 = call $168 with $196 $729 ($109 is responsible)
  $740 = call $168 with $739 $194 ($110 is responsible)
  $741 = call $168 with $740 $738 ($111 is responsible)
  $742 = call $168 with $741 $195 ($112 is responsible)
  $743 = call $253 with $720 $742 $719 ($113 is responsible)
}
# Core:function:is2
$744 = { $745 (+ responsible $746) ->
  $747 = call $170 with $745 ($70 is responsible)
  $748 = call $151 with $747 $173 ($1 is responsible)
  # Core:function:is2:9
  $749 = { (responsible $750) ->
    $751 = call $170 with $745 ($68 is responsible)
    $752 = call $151 with $751 $173 ($69 is responsible)
    $753 = call $253 with $752 $224 $132 ($7 is responsible)
    $754 = call $152 with $745 ($6 is responsible)
    $755 = call $151 with $754 $189 ($1 is responsible)
  }
  $756 = call $424 with $748 $749 $281 ($131 is responsible)
}
# Core:int:compareTo
$757 = { $758 $759 (+ responsible $760) ->
  $761 = call $170 with $758 ($70 is responsible)
  $762 = call $151 with $761 $175 ($1 is responsible)
  $763 = call $253 with $762 $236 $760 ($137 is responsible)
  $764 = call $170 with $759 ($70 is responsible)
  $765 = call $151 with $764 $175 ($1 is responsible)
  $766 = call $253 with $765 $237 $760 ($138 is responsible)
  $767 = call $170 with $758 ($68 is responsible)
  $768 = call $151 with $767 $175 ($69 is responsible)
  $769 = call $253 with $768 $212 $136 ($24 is responsible)
  $770 = call $170 with $759 ($68 is responsible)
  $771 = call $151 with $770 $175 ($69 is responsible)
  $772 = call $253 with $771 $214 $136 ($22 is responsible)
  $773 = call $156 with $758 $759 ($23 is responsible)
}
# Core:int:isLessThan
$774 = { $775 $776 (+ responsible $777) ->
  $778 = call $170 with $775 ($70 is responsible)
  $779 = call $151 with $778 $175 ($1 is responsible)
  $780 = call $253 with $779 $236 $777 ($143 is responsible)
  $781 = call $170 with $776 ($70 is responsible)
  $782 = call $151 with $781 $175 ($1 is responsible)
  $783 = call $253 with $782 $237 $777 ($144 is responsible)
  $784 = call $757 with $775 $776 ($142 is responsible)
  $785 = call $151 with $784 $176 ($1 is responsible)
}
# Core:int:isGreaterThan
$786 = { $787 $788 (+ responsible $789) ->
  $790 = call $170 with $787 ($70 is responsible)
  $791 = call $151 with $790 $175 ($1 is responsible)
  $792 = call $253 with $791 $236 $789 ($140 is responsible)
  $793 = call $170 with $788 ($70 is responsible)
  $794 = call $151 with $793 $175 ($1 is responsible)
  $795 = call $253 with $794 $237 $789 ($141 is responsible)
  $796 = call $757 with $787 $788 ($139 is responsible)
  $797 = call $151 with $796 $174 ($1 is responsible)
}
# Core:int:isNonNegative
$798 = { $799 (+ responsible $800) ->
  $801 = call $170 with $799 ($70 is responsible)
  $802 = call $151 with $801 $175 ($1 is responsible)
  $803 = call $253 with $802 $238 $800 ($148 is responsible)
  $804 = call $170 with $799 ($70 is responsible)
  $805 = call $151 with $804 $175 ($1 is responsible)
  $806 = call $253 with $805 $238 $149 ($145 is responsible)
  $807 = call $774 with $799 $187 ($146 is responsible)
  $808 = call $594 with $807 ($147 is responsible)
}
$809 = ($180, $204)
# Core:fixedDecimal:fromIntScaled
$810 = { $811 $812 (+ responsible $813) ->
  $814 = call $170 with $811 ($70 is responsible)
  $815 = call $151 with $814 $175 ($1 is responsible)
  $816 = call $253 with $815 $233 $813 ($126 is responsible)
  $817 = call $170 with $812 ($70 is responsible)
  $818 = call $151 with $817 $175 ($1 is responsible)
  # Core:fixedDecimal:isScale:14
  $819 = { (responsible $820) ->
    $821 = call $798 with $812 ($127 is responsible)
  }
  $822 = call $628 with $818 $819 ($128 is responsible)
  $823 = call $253 with $822 $240 $813 ($125 is responsible)
  $824 = [$179: $811, $182: $812]
  $825 = FixedDecimal $824
}
$826 = call $810 with $187 $187 ($124 is responsible)
$827 = Core:function:is1:11
$828 = Core:function:is1:9:3
# Core:function:is1
$829 = { $830 (+ responsible $831) ->
  $832 = call $170 with $830 ($70 is responsible)
  $833 = call $151 with $832 $173 ($1 is responsible)
  # Core:function:is1:9
  $834 = { (responsible $835) ->
    $836 = call $170 with $830 ($68 is responsible)
    $837 = call $151 with $836 $173 ($69 is responsible)
    $838 = call $253 with $837 $224 $828 ($7 is responsible)
    $839 = call $152 with $830 ($6 is responsible)
    $840 = call $151 with $839 $188 ($1 is responsible)
  }
  $841 = call $424 with $833 $834 $281 ($827 is responsible)
}
$842 = Core:int:fitsInRustU32:15
$843 = Core:int:fitsInRustU32:4
$844 = Core:int:fitsInRustU32:7
$845 = Core:int:fitsInRustU32:9
$846 = Core:int:isOdd:4
$847 = Core:int:isOdd:8
$848 = Core:int:isPositive:4
$849 = Core:int:isPositive:8
$850 = 4294967295
$851 = "`isNonNegative value` was not satisfied"
# Core:int:is, Examples:average:average:41
$852 = { $853 (+ responsible $854) ->
  $855 = call $170 with $853 ($70 is responsible)
  $856 = call $151 with $855 $175 ($1 is responsible)
}
# Core:int:isOdd
$857 = { $858 (+ responsible $859) ->
  $860 = call $170 with $858 ($70 is responsible)
  $861 = call $151 with $860 $175 ($1 is responsible)
  $862 = call $253 with $861 $238 $859 ($846 is responsible)
  $863 = call $170 with $858 ($68 is responsible)
  $864 = call $151 with $863 $175 ($69 is responsible)
  $865 = call $253 with $864 $212 $847 ($21 is responsible)
  $866 = call $155 with $858 $188 ($20 is responsible)
  $867 = call $151 with $866 $188 ($1 is responsible)
}
$868 = Core:iterator:111
$869 = Core:iterator:all:13
$870 = Core:iterator:all:16:11
$871 = Core:iterator:all:16:13
$872 = Core:iterator:all:16:2
$873 = Core:iterator:all:16:22
$874 = Core:iterator:all:17
$875 = Core:iterator:all:7
$876 = Core:iterator:all:9
$877 = Core:iterator:any:13
$878 = Core:iterator:any:16:11
$879 = Core:iterator:any:16:13
$880 = Core:iterator:any:16:2
$881 = Core:iterator:any:16:22
$882 = Core:iterator:any:17
$883 = Core:iterator:any:7
$884 = Core:iterator:any:9
$885 = Core:iterator:chunked:17
$886 = Core:iterator:chunked:19
$887 = Core:iterator:chunked:23
$888 = Core:iterator:chunked:28
$889 = Core:iterator:chunked:9
$890 = Core:iterator:ensure:13
$891 = Core:iterator:ensure:17:2
$892 = Core:iterator:ensure:18
$893 = Core:iterator:ensure:7
$894 = Core:iterator:ensure:9
$895 = Core:iterator:foldLeft:12
$896 = Core:iterator:foldLeft:14
$897 = Core:iterator:foldLeft:21:1
$898 = Core:iterator:foldLeft:21:4
$899 = Core:iterator:foldLeft:21:5
$900 = Core:iterator:foldLeft:21:5:10
$901 = Core:iterator:foldLeft:21:5:8
$902 = Core:iterator:foldLeft:21:5:item
$903 = Core:iterator:foldLeft:21:5:rest
$904 = Core:iterator:foldLeft:21:iterator
$905 = Core:iterator:foldLeft:21:value
$906 = Core:iterator:foldLeft:22
$907 = Core:iterator:foldLeft:3
$908 = Core:iterator:fromList:18
$909 = Core:iterator:fromList:19:8
$910 = Core:iterator:fromList:20
$911 = Core:iterator:fromList:9
$912 = Core:iterator:generate:17
$913 = Core:iterator:generate:19
$914 = Core:iterator:generate:27
$915 = Core:iterator:generate:29
$916 = Core:iterator:generate:37
$917 = Core:iterator:generate:39
$918 = Core:iterator:generate:42:6:14
$919 = Core:iterator:generate:42:6:4
$920 = Core:iterator:generate:42:7
$921 = Core:iterator:generate:43
$922 = Core:iterator:generate:9
$923 = Core:iterator:generateWithState:12:1:2
$924 = Core:iterator:generateWithState:12:1:3
$925 = Core:iterator:generateWithState:12:1:3:19
$926 = Core:iterator:generateWithState:12:1:3:20
$927 = Core:iterator:generateWithState:12:1:3:22:0
$928 = Core:iterator:generateWithState:12:1:3:23
$929 = Core:iterator:generateWithState:12:1:3:25
$930 = Core:iterator:generateWithState:12:1:3:26
$931 = Core:iterator:generateWithState:12:1:3:27
$932 = Core:iterator:generateWithState:12:1:3:6
$933 = Core:iterator:generateWithState:12:1:3:item
$934 = Core:iterator:generateWithState:12:1:3:state
$935 = Core:iterator:generateWithState:13
$936 = Core:iterator:generateWithState:7
$937 = Core:iterator:generateWithState:9
$938 = Core:iterator:isEmpty:3
$939 = Core:iterator:isEmpty:7
$940 = Core:iterator:joinToText:12:18
$941 = Core:iterator:joinToText:12:9
$942 = Core:iterator:joinToText:13
$943 = Core:iterator:joinToText:3
$944 = Core:iterator:length:3
$945 = Core:iterator:length:6
$946 = Core:iterator:length:8
$947 = Core:iterator:map:12
$948 = Core:iterator:map:14
$949 = Core:iterator:map:17:2
$950 = Core:iterator:map:17:3
$951 = Core:iterator:map:17:3:5
$952 = Core:iterator:map:17:3:item
$953 = Core:iterator:map:17:3:rest
$954 = Core:iterator:map:18
$955 = Core:iterator:map:3
$956 = Core:iterator:next:15
$957 = Core:iterator:next:3
$958 = Core:iterator:next:6
$959 = Core:iterator:next:nextFunction
$960 = Core:iterator:reduceLeft:13
$961 = Core:iterator:reduceLeft:15
$962 = Core:iterator:reduceLeft:16
$963 = Core:iterator:reduceLeft:16:14
$964 = Core:iterator:reduceLeft:16:item
$965 = Core:iterator:reduceLeft:16:rest
$966 = Core:iterator:reduceLeft:7
$967 = Core:iterator:reduceLeft:9
$968 = Core:iterator:skip:14
$969 = Core:iterator:skip:22
$970 = Core:iterator:skip:24
$971 = Core:iterator:skip:26:6:1
$972 = Core:iterator:skip:26:6:7:2
$973 = Core:iterator:skip:26:6:8:2
$974 = Core:iterator:skip:26:6:8:3
$975 = Core:iterator:skip:26:6:8:3:13
$976 = Core:iterator:skip:26:6:8:3:15
$977 = Core:iterator:skip:26:6:8:3:rest
$978 = Core:iterator:skip:26:6:9
$979 = Core:iterator:skip:26:6:iterator
$980 = Core:iterator:skip:26:6:n
$981 = Core:iterator:skip:26:7
$982 = Core:iterator:skip:3
$983 = Core:iterator:sum:17
$984 = Core:iterator:sum:3
$985 = Core:iterator:sum:5:15
$986 = Core:iterator:sum:6
$987 = Core:iterator:sum:8:8
$988 = Core:iterator:sum:9
$989 = Core:iterator:take:17
$990 = Core:iterator:take:19
$991 = Core:iterator:take:23
$992 = Core:iterator:take:25
$993 = Core:iterator:take:27:1
$994 = Core:iterator:take:27:10
$995 = Core:iterator:take:27:index
$996 = Core:iterator:take:27:item
$997 = Core:iterator:take:28
$998 = Core:iterator:take:30:5
$999 = Core:iterator:take:31
$1000 = Core:iterator:take:9
$1001 = Core:iterator:takeWhile:3
$1002 = Core:iterator:takeWhile:7:2
$1003 = Core:iterator:takeWhile:7:3
$1004 = Core:iterator:takeWhile:7:3:4
$1005 = Core:iterator:takeWhile:7:3:7
$1006 = Core:iterator:takeWhile:7:3:item
$1007 = Core:iterator:takeWhile:7:3:rest
$1008 = Core:iterator:takeWhile:8
$1009 = Core:iterator:toList:3
$1010 = Core:iterator:toList:6:8
$1011 = Core:iterator:toList:7
$1012 = Core:iterator:where:12
$1013 = Core:iterator:where:14
$1014 = Core:iterator:where:17:2:2
$1015 = Core:iterator:where:17:2:3
$1016 = Core:iterator:where:17:2:3:4
$1017 = Core:iterator:where:17:2:3:6:2
$1018 = Core:iterator:where:17:2:3:6:4
$1019 = Core:iterator:where:17:2:3:6:5
$1020 = Core:iterator:where:17:2:3:6:5:item
$1021 = Core:iterator:where:17:2:3:6:5:rest
$1022 = Core:iterator:where:17:2:3:7
$1023 = Core:iterator:where:17:2:3:item
$1024 = Core:iterator:where:17:2:3:rest
$1025 = Core:iterator:where:17:3
$1026 = Core:iterator:where:18
$1027 = Core:iterator:where:3
$1028 = Core:iterator:windowed:14
$1029 = Core:iterator:windowed:22
$1030 = Core:iterator:windowed:24
$1031 = Core:iterator:windowed:3
$1032 = Core:iterator:windowed:34
$1033 = Core:iterator:windowed:42
$1034 = Core:iterator:windowed:44
$1035 = Core:iterator:windowed:52
$1036 = Core:iterator:windowed:54
$1037 = Core:iterator:windowed:57:14
$1038 = Core:iterator:windowed:57:20
$1039 = Core:iterator:windowed:57:24:7
$1040 = Core:iterator:windowed:57:26
$1041 = Core:iterator:windowed:57:3
$1042 = Core:iterator:windowed:57:5
$1043 = Core:iterator:windowed:58
$1044 = Core:iterator:withIndex:11:1
$1045 = Core:iterator:withIndex:11:4
$1046 = Core:iterator:withIndex:11:5
$1047 = Core:iterator:withIndex:11:5:20
$1048 = Core:iterator:withIndex:11:5:item
$1049 = Core:iterator:withIndex:11:5:rest
$1050 = Core:iterator:withIndex:11:index
$1051 = Core:iterator:withIndex:11:iterator
$1052 = Core:iterator:withIndex:12
$1053 = Core:iterator:withIndex:3
$1054 = Core:iterator:wrapSafe:10:7
$1055 = Core:iterator:wrapSafe:14:1
$1056 = Core:iterator:wrapSafe:14:11
$1057 = Core:iterator:wrapSafe:14:18
$1058 = Core:iterator:wrapSafe:14:1:8
$1059 = Core:iterator:wrapSafe:14:1:function
$1060 = Core:iterator:wrapSafe:14:20
$1061 = Core:iterator:wrapSafe:14:22:7
$1062 = Core:iterator:wrapSafe:14:22:8
$1063 = Core:iterator:wrapSafe:14:22:8:17
$1064 = Core:iterator:wrapSafe:14:22:8:7
$1065 = Core:iterator:wrapSafe:14:22:8:item
$1066 = Core:iterator:wrapSafe:14:22:8:rest
$1067 = Core:iterator:wrapSafe:15
$1068 = Core:iterator:wrapSafe:7
$1069 = Core:iterator:wrapSafe:9
$1070 = Core:list:append:11
$1071 = Core:list:append:4
$1072 = Core:list:append:9
$1073 = Core:result:is:1
$1074 = Core:result:is:1:_
$1075 = Core:result:mapOrElse:12
$1076 = Core:result:mapOrElse:14
$1077 = Core:result:mapOrElse:2
$1078 = Core:result:mapOrElse:22
$1079 = Core:result:mapOrElse:24
$1080 = Core:result:mapOrElse:26
$1081 = Core:result:mapOrElse:26:2
$1082 = Core:result:mapOrElse:26:5
$1083 = Core:result:mapOrElse:26:value
$1084 = Core:result:mapOrElse:26:value#1
$1085 = Core:result:mapOrElse:4
$1086 = Core:result:unwrapOr:2
$1087 = Core:result:unwrapOr:4
$1088 = Core:result:unwrapOr:8
$1089 = Core:result:unwrapOrElse:12
$1090 = Core:result:unwrapOrElse:14
$1091 = Core:result:unwrapOrElse:18:7
$1092 = Core:result:unwrapOrElse:19
$1093 = Core:result:unwrapOrElse:2
$1094 = Core:result:unwrapOrElse:4
$1095 = Empty
$1096 = Error
$1097 = Index
$1098 = Item
$1099 = Iterator
$1100 = More
$1101 = N
$1102 = Ok
$1103 = Rest
$1104 = State
$1105 = Value
$1106 = ""
$1107 = "Can't `reduceLeft` an empty iterator"
$1108 = "Expected Error, got "
$1109 = "Expected Iterator, got "
$1110 = "Expected More, got "
$1111 = "Expected Ok, got "
$1112 = "Expected `Empty`, got `"
$1113 = "Iterator items need to be ints."
$1114 = "Struct doesn't contain key `Index`: `"
$1115 = "Struct doesn't contain key `Item`: `"
$1116 = "Struct doesn't contain key `Iterator`: `"
$1117 = "Struct doesn't contain key `N`: `"
$1118 = "Struct doesn't contain key `Rest`: `"
$1119 = "Struct doesn't contain key `State`: `"
$1120 = "Struct doesn't contain key `Value`: `"
$1121 = "The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `"
$1122 = "The guard needs to panic."
$1123 = "`"
$1124 = "`all` needs an iterator."
$1125 = "`any` needs an iterator."
$1126 = "`bool.is allowPartialWindows` was not satisfied"
$1127 = "`bool.is itemResult` was not satisfied"
$1128 = "`chunked` needs an iterator."
$1129 = "`ensure` needs an iterator."
$1130 = "`foldLeft` needs an iterator."
$1131 = "`function.is0 defaultGetter` was not satisfied"
$1132 = "`function.is0 notIteratorGuard` was not satisfied"
$1133 = "`function.is1 errorMapper` was not satisfied"
$1134 = "`function.is1 guard` was not satisfied"
$1135 = "`function.is1 mapper` was not satisfied"
$1136 = "`function.is1 okMapper` was not satisfied"
$1137 = "`function.is1 tester` was not satisfied"
$1138 = "`function.is1 valueGetter` was not satisfied"
$1139 = "`function.is2 combine` was not satisfied"
$1140 = "`int.fitsInRustU32 length` was not satisfied"
$1141 = "`int.is length` was not satisfied"
$1142 = "`int.is n` was not satisfied"
$1143 = "`int.is size` was not satisfied"
$1144 = "`int.is step` was not satisfied"
$1145 = "`int.isNonNegative length` was not satisfied"
$1146 = "`int.isNonNegative n` was not satisfied"
$1147 = "`int.isPositive size` was not satisfied"
$1148 = "`int.isPositive step` was not satisfied"
$1149 = "`is list` was not satisfied"
$1150 = "`is result` was not satisfied"
$1151 = "`isEmpty` needs an iterator."
$1152 = "`joinToText` needs an iterator."
$1153 = "`length` needs an iterator."
$1154 = "`list.is l` was not satisfied"
$1155 = "`map` needs an iterator."
$1156 = "`next` needs an iterator."
$1157 = "`reduceLeft` needs an iterator."
$1158 = "`skip` needs an iterator."
$1159 = "`sum` needs an iterator."
$1160 = "`takeWhile` needs an iterator."
$1161 = "`take` needs an iterator."
$1162 = "`text.is item` was not satisfied"
$1163 = "`toList` needs an iterator."
$1164 = "`where` needs an iterator."
$1165 = "`windowed` needs an iterator."
$1166 = "`withIndex` needs an iterator."
# Core:result:is
$1167 = { $1168 (+ responsible $1169) ->
  $1170 = call $170 with $1168 ($1073 is responsible)
  $1171 = call $151 with $184 $1170 ($1073 is responsible)
  # Core:result:is:1:equals:then
  $1172 = { (responsible $1173) ->
    $1174 = call $167 with $1168 ($1073 is responsible)
    $1175 = call $151 with $1102 $1174 ($1073 is responsible)
    # Core:result:is:1:equals:then
    $1176 = { (responsible $1177) ->
      $1178 = call $166 with $1168 ($1073 is responsible)
      $1179 = call $151 with $186 $1178 ($1073 is responsible)
      # Core:result:is:1:equals:then
      $1180 = { (responsible $1181) ->
        $1182 = call $165 with $1168 ($1073 is responsible)
        $1183 = ($178, $1182)
      }
      # Core:result:is:1:equals:else
      $1184 = { (responsible $1185) ->
        $1186 = call $169 with $1178 ($1073 is responsible)
        $1187 = $809
      }
      $1188 = call $153 with $1179 $1180 $1184 ($1073 is responsible)
    }
    # Core:result:is:1:equals:else
    $1189 = { (responsible $1190) ->
      $1191 = call $169 with $1174 ($1073 is responsible)
      $1192 = call $168 with $1111 $1191 ($1073 is responsible)
      $1193 = call $168 with $1192 $195 ($1073 is responsible)
      $1194 = ($180, $1193)
    }
    $1195 = call $153 with $1175 $1176 $1189 ($1073 is responsible)
  }
  # Core:result:is:1:equals:else
  $1196 = { (responsible $1197) ->
    $1198 = call $169 with $1170 ($1073 is responsible)
    $1199 = call $168 with $203 $1198 ($1073 is responsible)
    $1200 = call $168 with $1199 $210 ($1073 is responsible)
    $1201 = ($180, $1200)
  }
  $1202 = call $153 with $1171 $1172 $1196 ($1073 is responsible)
  $1203 = call $160 with $1202 $187 ($1073 is responsible)
  $1204 = call $151 with $1203 $178 ($1073 is responsible)
  # Core:result:is:1:isMatch:then
  $1205 = { (responsible $1206) ->
    $1207 = $1202
  }
  # Core:result:is:1:isMatch:else
  $1208 = { (responsible $1209) ->
    $1210 = call $170 with $1168 ($1073 is responsible)
    $1211 = call $151 with $184 $1210 ($1073 is responsible)
    # Core:result:is:1:equals:then
    $1212 = { (responsible $1213) ->
      $1214 = call $167 with $1168 ($1073 is responsible)
      $1215 = call $151 with $1096 $1214 ($1073 is responsible)
      # Core:result:is:1:equals:then
      $1216 = { (responsible $1217) ->
        $1218 = call $166 with $1168 ($1073 is responsible)
        $1219 = call $151 with $186 $1218 ($1073 is responsible)
        # Core:result:is:1:equals:then
        $1220 = { (responsible $1221) ->
          $1222 = call $165 with $1168 ($1073 is responsible)
          $1223 = ($178, $1222)
        }
        # Core:result:is:1:equals:else
        $1224 = { (responsible $1225) ->
          $1226 = call $169 with $1218 ($1073 is responsible)
          $1227 = $809
        }
        $1228 = call $153 with $1219 $1220 $1224 ($1073 is responsible)
      }
      # Core:result:is:1:equals:else
      $1229 = { (responsible $1230) ->
        $1231 = call $169 with $1214 ($1073 is responsible)
        $1232 = call $168 with $1108 $1231 ($1073 is responsible)
        $1233 = call $168 with $1232 $195 ($1073 is responsible)
        $1234 = ($180, $1233)
      }
      $1235 = call $153 with $1215 $1216 $1229 ($1073 is responsible)
    }
    # Core:result:is:1:equals:else
    $1236 = { (responsible $1237) ->
      $1238 = call $169 with $1210 ($1073 is responsible)
      $1239 = call $168 with $203 $1238 ($1073 is responsible)
      $1240 = call $168 with $1239 $210 ($1073 is responsible)
      $1241 = ($180, $1240)
    }
    $1242 = call $153 with $1211 $1212 $1236 ($1073 is responsible)
  }
  $1243 = call $153 with $1204 $1205 $1208 ($1073 is responsible)
  $1244 = call $160 with $1243 $187 ($1073 is responsible)
  $1245 = call $151 with $1244 $178 ($1073 is responsible)
  # Core:result:is:1:case-0:matched
  $1246 = { (responsible $1247) ->
    $1248 = call $160 with $1243 $188 ($1074 is responsible)
    $1249 = $186
  }
  # Core:result:is:1:case-0:didNotMatch
  $1250 = { (responsible $1251) ->
    $1252 = call $160 with $1243 $188 ($1073 is responsible)
    $1253 = $172
  }
  $1254 = call $153 with $1245 $1246 $1250 ($1073 is responsible)
}
# Core:result:mapOrElse
$1255 = { $1256 $1257 $1258 (+ responsible $1259) ->
  $1260 = call $1167 with $1256 ($1077 is responsible)
  $1261 = call $253 with $1260 $1150 $1259 ($1085 is responsible)
  $1262 = call $829 with $1257 ($1075 is responsible)
  $1263 = call $253 with $1262 $1136 $1259 ($1076 is responsible)
  $1264 = call $829 with $1258 ($1078 is responsible)
  $1265 = call $253 with $1264 $1133 $1259 ($1079 is responsible)
  $1266 = call $170 with $1256 ($1080 is responsible)
  $1267 = call $151 with $184 $1266 ($1080 is responsible)
  # Core:result:mapOrElse:26:equals:then
  $1268 = { (responsible $1269) ->
    $1270 = call $167 with $1256 ($1080 is responsible)
    $1271 = call $151 with $1102 $1270 ($1080 is responsible)
    # Core:result:mapOrElse:26:equals:then
    $1272 = { (responsible $1273) ->
      $1274 = call $166 with $1256 ($1080 is responsible)
      $1275 = call $151 with $186 $1274 ($1080 is responsible)
      # Core:result:mapOrElse:26:equals:then
      $1276 = { (responsible $1277) ->
        $1278 = call $165 with $1256 ($1080 is responsible)
        $1279 = ($178, $1278)
      }
      # Core:result:mapOrElse:26:equals:else
      $1280 = { (responsible $1281) ->
        $1282 = call $169 with $1274 ($1080 is responsible)
        $1283 = $809
      }
      $1284 = call $153 with $1275 $1276 $1280 ($1080 is responsible)
    }
    # Core:result:mapOrElse:26:equals:else
    $1285 = { (responsible $1286) ->
      $1287 = call $169 with $1270 ($1080 is responsible)
      $1288 = call $168 with $1111 $1287 ($1080 is responsible)
      $1289 = call $168 with $1288 $195 ($1080 is responsible)
      $1290 = ($180, $1289)
    }
    $1291 = call $153 with $1271 $1272 $1285 ($1080 is responsible)
  }
  # Core:result:mapOrElse:26:equals:else
  $1292 = { (responsible $1293) ->
    $1294 = call $169 with $1266 ($1080 is responsible)
    $1295 = call $168 with $203 $1294 ($1080 is responsible)
    $1296 = call $168 with $1295 $210 ($1080 is responsible)
    $1297 = ($180, $1296)
  }
  $1298 = call $153 with $1267 $1268 $1292 ($1080 is responsible)
  $1299 = call $160 with $1298 $187 ($1080 is responsible)
  $1300 = call $151 with $1299 $178 ($1080 is responsible)
  # Core:result:mapOrElse:26:case-0:matched
  $1301 = { (responsible $1302) ->
    $1303 = call $160 with $1298 $188 ($1083 is responsible)
    $1304 = call $1257 with $1303 ($1081 is responsible)
  }
  # Core:result:mapOrElse:26:case-0:didNotMatch
  $1305 = { (responsible $1306) ->
    $1307 = call $160 with $1298 $188 ($1080 is responsible)
    $1308 = call $170 with $1256 ($1080 is responsible)
    $1309 = call $151 with $184 $1308 ($1080 is responsible)
    # Core:result:mapOrElse:26:equals:then
    $1310 = { (responsible $1311) ->
      $1312 = call $167 with $1256 ($1080 is responsible)
      $1313 = call $151 with $1096 $1312 ($1080 is responsible)
      # Core:result:mapOrElse:26:equals:then
      $1314 = { (responsible $1315) ->
        $1316 = call $166 with $1256 ($1080 is responsible)
        $1317 = call $151 with $186 $1316 ($1080 is responsible)
        # Core:result:mapOrElse:26:equals:then
        $1318 = { (responsible $1319) ->
          $1320 = call $165 with $1256 ($1080 is responsible)
          $1321 = ($178, $1320)
        }
        # Core:result:mapOrElse:26:equals:else
        $1322 = { (responsible $1323) ->
          $1324 = call $169 with $1316 ($1080 is responsible)
          $1325 = $809
        }
        $1326 = call $153 with $1317 $1318 $1322 ($1080 is responsible)
      }
      # Core:result:mapOrElse:26:equals:else
      $1327 = { (responsible $1328) ->
        $1329 = call $169 with $1312 ($1080 is responsible)
        $1330 = call $168 with $1108 $1329 ($1080 is responsible)
        $1331 = call $168 with $1330 $195 ($1080 is responsible)
        $1332 = ($180, $1331)
      }
      $1333 = call $153 with $1313 $1314 $1327 ($1080 is responsible)
    }
    # Core:result:mapOrElse:26:equals:else
    $1334 = { (responsible $1335) ->
      $1336 = call $169 with $1308 ($1080 is responsible)
      $1337 = call $168 with $203 $1336 ($1080 is responsible)
      $1338 = call $168 with $1337 $210 ($1080 is responsible)
      $1339 = ($180, $1338)
    }
    $1340 = call $153 with $1309 $1310 $1334 ($1080 is responsible)
    $1341 = call $160 with $1340 $187 ($1080 is responsible)
    $1342 = call $151 with $1341 $178 ($1080 is responsible)
    # Core:result:mapOrElse:26:case-1:matched
    $1343 = { (responsible $1344) ->
      $1345 = call $160 with $1340 $188 ($1084 is responsible)
      $1346 = call $1258 with $1345 ($1082 is responsible)
    }
    # Core:result:mapOrElse:26:case-1:didNotMatch
    $1347 = { (responsible $1348) ->
      $1349 = call $160 with $1340 $188 ($1080 is responsible)
      $1350 = panicking because $205 ($1080 is at fault)
    }
    $1351 = call $153 with $1342 $1343 $1347 ($1080 is responsible)
  }
  $1352 = call $153 with $1300 $1301 $1305 ($1080 is responsible)
}
# Core:iterator:range:32, Core:result:unwrapOrElse:17
$1353 = { $1354 (+ responsible $1355) ->
  $1356 = $1354
}
# Core:result:unwrapOr
$1357 = { $1358 $1359 (+ responsible $1360) ->
  $1361 = call $1167 with $1358 ($1086 is responsible)
  $1362 = call $253 with $1361 $1150 $1360 ($1087 is responsible)
  # Core:result:unwrapOr:7
  $1363 = { (responsible $1364) ->
    $1365 = $1359
  }
  $1366 = call $1167 with $1358 ($1093 is responsible)
  $1367 = call $253 with $1366 $1150 $1088 ($1094 is responsible)
  $1368 = call $535 with $1363 ($1089 is responsible)
  $1369 = call $253 with $1368 $1131 $1088 ($1090 is responsible)
  # Core:result:unwrapOrElse:18
  $1370 = { $1371 (+ responsible $1372) ->
    $1373 = call $548 with $1363 ($1091 is responsible)
  }
  $1374 = call $1255 with $1358 $1353 $1370 ($1092 is responsible)
}
# Core:list:append
$1375 = { $1376 $1377 (+ responsible $1378) ->
  $1379 = call $170 with $1376 ($70 is responsible)
  $1380 = call $151 with $1379 $177 ($1 is responsible)
  $1381 = call $253 with $1380 $1149 $1378 ($1071 is responsible)
  $1382 = call $170 with $1376 ($68 is responsible)
  $1383 = call $151 with $1382 $177 ($69 is responsible)
  $1384 = call $253 with $1383 $241 $1072 ($58 is responsible)
  $1385 = call $162 with $1376 ($57 is responsible)
  $1386 = call $514 with $1376 $1385 $1377 ($1070 is responsible)
}
# Core:iterator:generate:42:5, Core:iterator:generateWithState:12:1:3:case-1:matched, Core:iterator:map:17:3:case-0:matched, Core:iterator:skip:26:6:8:3:case-0:matched, Core:iterator:takeWhile:7:3:case-0:matched, Core:iterator:takeWhile:7:3:6, Core:iterator:where:17:2:3:case-0:matched, Core:iterator:where:17:2:3:6:5:case-0:matched, Core:iterator:windowed:57:25, Core:iterator:withIndex:11:5:case-0:matched, Core:iterator:wrapSafe:14:22:8:case-0:matched
$1387 = { (responsible $1388) ->
  $1389 = $1095
}
# Core:iterator:wrapSafe
$1390 = { $1391 $1392 (+ responsible $1393) ->
  $1394 = call $535 with $1392 ($1068 is responsible)
  $1395 = call $253 with $1394 $1132 $1393 ($1069 is responsible)
  # Core:iterator:wrapSafe:10
  $1396 = { (responsible $1397) ->
    $1398 = call $548 with $1392 ($1054 is responsible)
    $1399 = panicking because $1122 ($1393 is at fault)
  }
  # Core:iterator:wrapSafe:14
  $1400 = { $1401 $1402 (+ responsible $1403) ->
    $1404 = call $170 with $1402 ($1055 is responsible)
    $1405 = call $151 with $184 $1404 ($1055 is responsible)
    # Core:iterator:wrapSafe:14:1:equals:then
    $1406 = { (responsible $1407) ->
      $1408 = call $167 with $1402 ($1055 is responsible)
      $1409 = call $151 with $1099 $1408 ($1055 is responsible)
      # Core:iterator:wrapSafe:14:1:equals:then
      $1410 = { (responsible $1411) ->
        $1412 = call $166 with $1402 ($1055 is responsible)
        $1413 = call $151 with $186 $1412 ($1055 is responsible)
        # Core:iterator:wrapSafe:14:1:equals:then
        $1414 = { (responsible $1415) ->
          $1416 = call $165 with $1402 ($1055 is responsible)
          $1417 = ($178, $1416)
        }
        # Core:iterator:wrapSafe:14:1:equals:else
        $1418 = { (responsible $1419) ->
          $1420 = call $169 with $1412 ($1055 is responsible)
          $1421 = $809
        }
        $1422 = call $153 with $1413 $1414 $1418 ($1055 is responsible)
      }
      # Core:iterator:wrapSafe:14:1:equals:else
      $1423 = { (responsible $1424) ->
        $1425 = call $169 with $1408 ($1055 is responsible)
        $1426 = call $168 with $1109 $1425 ($1055 is responsible)
        $1427 = call $168 with $1426 $195 ($1055 is responsible)
        $1428 = ($180, $1427)
      }
      $1429 = call $153 with $1409 $1410 $1423 ($1055 is responsible)
    }
    # Core:iterator:wrapSafe:14:1:equals:else
    $1430 = { (responsible $1431) ->
      $1432 = call $169 with $1404 ($1055 is responsible)
      $1433 = call $168 with $203 $1432 ($1055 is responsible)
      $1434 = call $168 with $1433 $210 ($1055 is responsible)
      $1435 = ($180, $1434)
    }
    $1436 = call $153 with $1405 $1406 $1430 ($1055 is responsible)
    $1437 = call $160 with $1436 $187 ($1055 is responsible)
    $1438 = call $151 with $1437 $178 ($1055 is responsible)
    # Core:iterator:wrapSafe:14:1:case-0:matched
    $1439 = { (responsible $1440) ->
      $1441 = call $160 with $1436 $188 ($1059 is responsible)
    }
    # Core:iterator:wrapSafe:14:1:case-0:didNotMatch
    $1442 = { (responsible $1443) ->
      $1444 = call $160 with $1436 $188 ($1055 is responsible)
      $1445 = call $548 with $1396 ($1058 is responsible)
    }
    $1446 = call $153 with $1438 $1439 $1442 ($1055 is responsible)
    $1447 = call $535 with $1446 ($1056 is responsible)
    $1448 = call $594 with $1447 ($1057 is responsible)
    $1449 = call $560 with $1448 ($117 is responsible)
    $1450 = call $253 with $1449 $217 $1060 ($118 is responsible)
    $1451 = call $535 with $1396 ($114 is responsible)
    $1452 = call $253 with $1451 $227 $1060 ($115 is responsible)
    $1453 = call $424 with $1448 $1396 $250 ($116 is responsible)
    # Core:iterator:wrapSafe:14:22
    $1454 = { (responsible $1455) ->
      $1456 = call $548 with $1446 ($1061 is responsible)
      $1457 = call $151 with $1095 $1456 ($1062 is responsible)
      # Core:iterator:wrapSafe:14:22:8:equals:else
      $1458 = { (responsible $1459) ->
        $1460 = call $169 with $1456 ($1062 is responsible)
        $1461 = call $168 with $1112 $1460 ($1062 is responsible)
        $1462 = call $168 with $1461 $210 ($1062 is responsible)
        $1463 = ($180, $1462)
      }
      $1464 = call $153 with $1457 $278 $1458 ($1062 is responsible)
      $1465 = call $160 with $1464 $187 ($1062 is responsible)
      $1466 = call $151 with $1465 $178 ($1062 is responsible)
      # Core:iterator:wrapSafe:14:22:8:case-0:didNotMatch
      $1467 = { (responsible $1468) ->
        $1469 = call $160 with $1464 $188 ($1062 is responsible)
        $1470 = call $170 with $1456 ($1062 is responsible)
        $1471 = call $151 with $184 $1470 ($1062 is responsible)
        # Core:iterator:wrapSafe:14:22:8:equals:then
        $1472 = { (responsible $1473) ->
          $1474 = call $167 with $1456 ($1062 is responsible)
          $1475 = call $151 with $1100 $1474 ($1062 is responsible)
          # Core:iterator:wrapSafe:14:22:8:equals:then
          $1476 = { (responsible $1477) ->
            $1478 = call $166 with $1456 ($1062 is responsible)
            $1479 = call $151 with $186 $1478 ($1062 is responsible)
            # Core:iterator:wrapSafe:14:22:8:equals:then
            $1480 = { (responsible $1481) ->
              $1482 = call $165 with $1456 ($1062 is responsible)
              $1483 = call $170 with $1482 ($1062 is responsible)
              $1484 = call $151 with $183 $1483 ($1062 is responsible)
              # Core:iterator:wrapSafe:14:22:8:equals:then
              $1485 = { (responsible $1486) ->
                $1487 = call $164 with $1482 $1098 ($1062 is responsible)
                # Core:iterator:wrapSafe:14:22:8:hasKey:then
                $1488 = { (responsible $1489) ->
                  $1490 = call $163 with $1482 $1098 ($1062 is responsible)
                  $1491 = ($178, $1490)
                }
                # Core:iterator:wrapSafe:14:22:8:hasKey:else
                $1492 = { (responsible $1493) ->
                  $1494 = call $169 with $1482 ($1062 is responsible)
                  $1495 = call $168 with $1115 $1494 ($1062 is responsible)
                  $1496 = call $168 with $1495 $210 ($1062 is responsible)
                  $1497 = ($180, $1496)
                }
                $1498 = call $153 with $1487 $1488 $1492 ($1062 is responsible)
                $1499 = call $160 with $1498 $187 ($1062 is responsible)
                $1500 = call $151 with $1499 $178 ($1062 is responsible)
                # Core:iterator:wrapSafe:14:22:8:isMatch:then
                $1501 = { (responsible $1502) ->
                  $1503 = call $160 with $1498 $188 ($1062 is responsible)
                  $1504 = call $164 with $1482 $1103 ($1062 is responsible)
                  # Core:iterator:wrapSafe:14:22:8:hasKey:then
                  $1505 = { (responsible $1506) ->
                    $1507 = call $163 with $1482 $1103 ($1062 is responsible)
                    $1508 = ($178, $1507)
                  }
                  # Core:iterator:wrapSafe:14:22:8:hasKey:else
                  $1509 = { (responsible $1510) ->
                    $1511 = call $169 with $1482 ($1062 is responsible)
                    $1512 = call $168 with $1118 $1511 ($1062 is responsible)
                    $1513 = call $168 with $1512 $210 ($1062 is responsible)
                    $1514 = ($180, $1513)
                  }
                  $1515 = call $153 with $1504 $1505 $1509 ($1062 is responsible)
                  $1516 = call $160 with $1515 $187 ($1062 is responsible)
                  $1517 = call $151 with $1516 $178 ($1062 is responsible)
                  # Core:iterator:wrapSafe:14:22:8:isMatch:then
                  $1518 = { (responsible $1519) ->
                    $1520 = call $160 with $1515 $188 ($1062 is responsible)
                    $1521 = ($178, $1503, $1520)
                  }
                  # Core:iterator:wrapSafe:14:22:8:isMatch:else
                  $1522 = { (responsible $1523) ->
                    $1524 = $1515
                  }
                  $1525 = call $153 with $1517 $1518 $1522 ($1062 is responsible)
                }
                # Core:iterator:wrapSafe:14:22:8:isMatch:else
                $1526 = { (responsible $1527) ->
                  $1528 = $1498
                }
                $1529 = call $153 with $1500 $1501 $1526 ($1062 is responsible)
              }
              # Core:iterator:wrapSafe:14:22:8:equals:else
              $1530 = { (responsible $1531) ->
                $1532 = call $169 with $1483 ($1062 is responsible)
                $1533 = call $168 with $202 $1532 ($1062 is responsible)
                $1534 = call $168 with $1533 $210 ($1062 is responsible)
                $1535 = ($180, $1534)
              }
              $1536 = call $153 with $1484 $1485 $1530 ($1062 is responsible)
            }
            # Core:iterator:wrapSafe:14:22:8:equals:else
            $1537 = { (responsible $1538) ->
              $1539 = call $169 with $1478 ($1062 is responsible)
              $1540 = $809
            }
            $1541 = call $153 with $1479 $1480 $1537 ($1062 is responsible)
          }
          # Core:iterator:wrapSafe:14:22:8:equals:else
          $1542 = { (responsible $1543) ->
            $1544 = call $169 with $1474 ($1062 is responsible)
            $1545 = call $168 with $1110 $1544 ($1062 is responsible)
            $1546 = call $168 with $1545 $195 ($1062 is responsible)
            $1547 = ($180, $1546)
          }
          $1548 = call $153 with $1475 $1476 $1542 ($1062 is responsible)
        }
        # Core:iterator:wrapSafe:14:22:8:equals:else
        $1549 = { (responsible $1550) ->
          $1551 = call $169 with $1470 ($1062 is responsible)
          $1552 = call $168 with $203 $1551 ($1062 is responsible)
          $1553 = call $168 with $1552 $210 ($1062 is responsible)
          $1554 = ($180, $1553)
        }
        $1555 = call $153 with $1471 $1472 $1549 ($1062 is responsible)
        $1556 = call $160 with $1555 $187 ($1062 is responsible)
        $1557 = call $151 with $1556 $178 ($1062 is responsible)
        # Core:iterator:wrapSafe:14:22:8:case-1:matched
        $1558 = { (responsible $1559) ->
          $1560 = call $160 with $1555 $188 ($1065 is responsible)
          $1561 = call $160 with $1555 $189 ($1066 is responsible)
          $1562 = call $1401 with $1561 ($1064 is responsible)
          $1563 = [$1103: $1562, $1098: $1560]
          $1564 = More $1563
        }
        # Core:iterator:wrapSafe:14:22:8:case-1:didNotMatch
        $1565 = { (responsible $1566) ->
          $1567 = call $160 with $1555 $188 ($1062 is responsible)
          $1568 = call $548 with $1396 ($1063 is responsible)
        }
        $1569 = call $153 with $1557 $1558 $1565 ($1062 is responsible)
      }
      $1570 = call $153 with $1466 $1387 $1467 ($1062 is responsible)
    }
    $1571 = Iterator $1454
  }
  $1572 = call $744 with $1400 ($123 is responsible)
  $1573 = call $253 with $1572 $206 $1067 ($119 is responsible)
  # Core:controlFlow:recursive:16
  $1574 = { $1575 $1576 (+ responsible $1577) ->
    # Core:controlFlow:recursive:16:0
    $1578 = { $1579 (+ responsible $1580) ->
      $1581 = call $1575 with $1575 $1579 ($120 is responsible)
    }
    $1582 = call $1400 with $1578 $1576 ($121 is responsible)
  }
  $1583 = call $1574 with $1574 $1391 ($122 is responsible)
}
# Core:iterator:next
$1584 = { $1585 (+ responsible $1586) ->
  # Core:iterator:next:2
  $1587 = { (responsible $1588) ->
    $1589 = panicking because $1156 ($1586 is at fault)
  }
  $1590 = call $1390 with $1585 $1587 ($957 is responsible)
  $1591 = call $170 with $1590 ($958 is responsible)
  $1592 = call $151 with $184 $1591 ($958 is responsible)
  # Core:iterator:next:6:equals:then
  $1593 = { (responsible $1594) ->
    $1595 = call $167 with $1590 ($958 is responsible)
    $1596 = call $151 with $1099 $1595 ($958 is responsible)
    # Core:iterator:next:6:equals:then
    $1597 = { (responsible $1598) ->
      $1599 = call $166 with $1590 ($958 is responsible)
      $1600 = call $151 with $186 $1599 ($958 is responsible)
      # Core:iterator:next:6:equals:then
      $1601 = { (responsible $1602) ->
        $1603 = call $165 with $1590 ($958 is responsible)
        $1604 = ($178, $1603)
      }
      # Core:iterator:next:6:equals:else
      $1605 = { (responsible $1606) ->
        $1607 = call $169 with $1599 ($958 is responsible)
        $1608 = $809
      }
      $1609 = call $153 with $1600 $1601 $1605 ($958 is responsible)
    }
    # Core:iterator:next:6:equals:else
    $1610 = { (responsible $1611) ->
      $1612 = call $169 with $1595 ($958 is responsible)
      $1613 = call $168 with $1109 $1612 ($958 is responsible)
      $1614 = call $168 with $1613 $195 ($958 is responsible)
      $1615 = ($180, $1614)
    }
    $1616 = call $153 with $1596 $1597 $1610 ($958 is responsible)
  }
  # Core:iterator:next:6:equals:else
  $1617 = { (responsible $1618) ->
    $1619 = call $169 with $1591 ($958 is responsible)
    $1620 = call $168 with $203 $1619 ($958 is responsible)
    $1621 = call $168 with $1620 $210 ($958 is responsible)
    $1622 = ($180, $1621)
  }
  $1623 = call $153 with $1592 $1593 $1617 ($958 is responsible)
  $1624 = call $160 with $1623 $187 ($958 is responsible)
  $1625 = call $151 with $1624 $178 ($958 is responsible)
  # Core:iterator:next:6:isMatch:else
  $1626 = { (responsible $1627) ->
    $1628 = call $160 with $1623 $188 ($958 is responsible)
    $1629 = panicking because $1628 ($958 is at fault)
  }
  $1630 = call $153 with $1625 $250 $1626 ($958 is responsible)
  $1631 = call $160 with $1623 $188 ($959 is responsible)
  $1632 = call $548 with $1631 ($956 is responsible)
}
# Core:iterator:generateWithState
$1633 = { $1634 $1635 (+ responsible $1636) ->
  $1637 = call $829 with $1635 ($936 is responsible)
  $1638 = call $253 with $1637 $1135 $1636 ($937 is responsible)
  # Core:iterator:generateWithState:12
  $1639 = { $1640 $1641 (+ responsible $1642) ->
    # Core:iterator:generateWithState:12:1
    $1643 = { (responsible $1644) ->
      $1645 = call $1635 with $1641 ($923 is responsible)
      $1646 = call $170 with $1645 ($924 is responsible)
      $1647 = call $151 with $184 $1646 ($924 is responsible)
      # Core:iterator:generateWithState:12:1:3:equals:then
      $1648 = { (responsible $1649) ->
        $1650 = call $167 with $1645 ($924 is responsible)
        $1651 = call $151 with $1100 $1650 ($924 is responsible)
        # Core:iterator:generateWithState:12:1:3:equals:then
        $1652 = { (responsible $1653) ->
          $1654 = call $166 with $1645 ($924 is responsible)
          $1655 = call $151 with $186 $1654 ($924 is responsible)
          # Core:iterator:generateWithState:12:1:3:equals:then
          $1656 = { (responsible $1657) ->
            $1658 = call $165 with $1645 ($924 is responsible)
            $1659 = call $170 with $1658 ($924 is responsible)
            $1660 = call $151 with $183 $1659 ($924 is responsible)
            # Core:iterator:generateWithState:12:1:3:equals:then
            $1661 = { (responsible $1662) ->
              $1663 = call $164 with $1658 $1098 ($924 is responsible)
              # Core:iterator:generateWithState:12:1:3:hasKey:then
              $1664 = { (responsible $1665) ->
                $1666 = call $163 with $1658 $1098 ($924 is responsible)
                $1667 = ($178, $1666)
              }
              # Core:iterator:generateWithState:12:1:3:hasKey:else
              $1668 = { (responsible $1669) ->
                $1670 = call $169 with $1658 ($924 is responsible)
                $1671 = call $168 with $1115 $1670 ($924 is responsible)
                $1672 = call $168 with $1671 $210 ($924 is responsible)
                $1673 = ($180, $1672)
              }
              $1674 = call $153 with $1663 $1664 $1668 ($924 is responsible)
              $1675 = call $160 with $1674 $187 ($924 is responsible)
              $1676 = call $151 with $1675 $178 ($924 is responsible)
              # Core:iterator:generateWithState:12:1:3:isMatch:then
              $1677 = { (responsible $1678) ->
                $1679 = call $160 with $1674 $188 ($924 is responsible)
                $1680 = call $164 with $1658 $1104 ($924 is responsible)
                # Core:iterator:generateWithState:12:1:3:hasKey:then
                $1681 = { (responsible $1682) ->
                  $1683 = call $163 with $1658 $1104 ($924 is responsible)
                  $1684 = ($178, $1683)
                }
                # Core:iterator:generateWithState:12:1:3:hasKey:else
                $1685 = { (responsible $1686) ->
                  $1687 = call $169 with $1658 ($924 is responsible)
                  $1688 = call $168 with $1119 $1687 ($924 is responsible)
                  $1689 = call $168 with $1688 $210 ($924 is responsible)
                  $1690 = ($180, $1689)
                }
                $1691 = call $153 with $1680 $1681 $1685 ($924 is responsible)
                $1692 = call $160 with $1691 $187 ($924 is responsible)
                $1693 = call $151 with $1692 $178 ($924 is responsible)
                # Core:iterator:generateWithState:12:1:3:isMatch:then
                $1694 = { (responsible $1695) ->
                  $1696 = call $160 with $1691 $188 ($924 is responsible)
                  $1697 = ($178, $1679, $1696)
                }
                # Core:iterator:generateWithState:12:1:3:isMatch:else
                $1698 = { (responsible $1699) ->
                  $1700 = $1691
                }
                $1701 = call $153 with $1693 $1694 $1698 ($924 is responsible)
              }
              # Core:iterator:generateWithState:12:1:3:isMatch:else
              $1702 = { (responsible $1703) ->
                $1704 = $1674
              }
              $1705 = call $153 with $1676 $1677 $1702 ($924 is responsible)
            }
            # Core:iterator:generateWithState:12:1:3:equals:else
            $1706 = { (responsible $1707) ->
              $1708 = call $169 with $1659 ($924 is responsible)
              $1709 = call $168 with $202 $1708 ($924 is responsible)
              $1710 = call $168 with $1709 $210 ($924 is responsible)
              $1711 = ($180, $1710)
            }
            $1712 = call $153 with $1660 $1661 $1706 ($924 is responsible)
          }
          # Core:iterator:generateWithState:12:1:3:equals:else
          $1713 = { (responsible $1714) ->
            $1715 = call $169 with $1654 ($924 is responsible)
            $1716 = $809
          }
          $1717 = call $153 with $1655 $1656 $1713 ($924 is responsible)
        }
        # Core:iterator:generateWithState:12:1:3:equals:else
        $1718 = { (responsible $1719) ->
          $1720 = call $169 with $1650 ($924 is responsible)
          $1721 = call $168 with $1110 $1720 ($924 is responsible)
          $1722 = call $168 with $1721 $195 ($924 is responsible)
          $1723 = ($180, $1722)
        }
        $1724 = call $153 with $1651 $1652 $1718 ($924 is responsible)
      }
      # Core:iterator:generateWithState:12:1:3:equals:else
      $1725 = { (responsible $1726) ->
        $1727 = call $169 with $1646 ($924 is responsible)
        $1728 = call $168 with $203 $1727 ($924 is responsible)
        $1729 = call $168 with $1728 $210 ($924 is responsible)
        $1730 = ($180, $1729)
      }
      $1731 = call $153 with $1647 $1648 $1725 ($924 is responsible)
      $1732 = call $160 with $1731 $187 ($924 is responsible)
      $1733 = call $151 with $1732 $178 ($924 is responsible)
      # Core:iterator:generateWithState:12:1:3:case-0:matched
      $1734 = { (responsible $1735) ->
        $1736 = call $160 with $1731 $188 ($933 is responsible)
        $1737 = call $160 with $1731 $189 ($934 is responsible)
        $1738 = call $1640 with $1737 ($932 is responsible)
        $1739 = [$1098: $1736, $1103: $1738]
        $1740 = More $1739
      }
      # Core:iterator:generateWithState:12:1:3:case-0:didNotMatch
      $1741 = { (responsible $1742) ->
        $1743 = call $160 with $1731 $188 ($924 is responsible)
        $1744 = call $151 with $1095 $1645 ($924 is responsible)
        # Core:iterator:generateWithState:12:1:3:equals:else
        $1745 = { (responsible $1746) ->
          $1747 = call $169 with $1645 ($924 is responsible)
          $1748 = call $168 with $1112 $1747 ($924 is responsible)
          $1749 = call $168 with $1748 $210 ($924 is responsible)
          $1750 = ($180, $1749)
        }
        $1751 = call $153 with $1744 $278 $1745 ($924 is responsible)
        $1752 = call $160 with $1751 $187 ($924 is responsible)
        $1753 = call $151 with $1752 $178 ($924 is responsible)
        # Core:iterator:generateWithState:12:1:3:case-1:didNotMatch
        $1754 = { (responsible $1755) ->
          $1756 = call $160 with $1751 $188 ($924 is responsible)
          # Core:iterator:generateWithState:12:1:3:case-2:matched
          $1757 = { (responsible $1758) ->
            $1759 = call $170 with $1645 ($925 is responsible)
            $1760 = call $151 with $1759 $185 ($926 is responsible)
            # Core:iterator:generateWithState:12:1:3:21
            $1761 = { (responsible $1762) ->
              $1763 = $1645
            }
            # Core:iterator:generateWithState:12:1:3:22
            $1764 = { (responsible $1765) ->
              $1766 = call $169 with $1645 ($927 is responsible)
            }
            $1767 = call $153 with $1760 $1761 $1764 ($928 is responsible)
            $1768 = call $168 with $1121 $1767 ($929 is responsible)
            $1769 = call $168 with $1768 $1123 ($930 is responsible)
            $1770 = call $253 with $172 $1769 $1636 ($931 is responsible)
          }
          $1771 = call $1757 with no arguments ($924 is responsible)
        }
        $1772 = call $153 with $1753 $1387 $1754 ($924 is responsible)
      }
      $1773 = call $153 with $1733 $1734 $1741 ($924 is responsible)
    }
    $1774 = Iterator $1643
  }
  $1775 = call $744 with $1639 ($123 is responsible)
  $1776 = call $253 with $1775 $206 $935 ($119 is responsible)
  # Core:controlFlow:recursive:16
  $1777 = { $1778 $1779 (+ responsible $1780) ->
    # Core:controlFlow:recursive:16:0
    $1781 = { $1782 (+ responsible $1783) ->
      $1784 = call $1778 with $1778 $1782 ($120 is responsible)
    }
    $1785 = call $1639 with $1781 $1779 ($121 is responsible)
  }
  $1786 = call $1777 with $1777 $1634 ($122 is responsible)
}
# Core:iterator:generate
$1787 = { $1788 $1789 (+ responsible $1790) ->
  $1791 = call $170 with $1788 ($70 is responsible)
  $1792 = call $151 with $1791 $175 ($1 is responsible)
  $1793 = call $253 with $1792 $1141 $1790 ($922 is responsible)
  $1794 = call $798 with $1788 ($912 is responsible)
  $1795 = call $253 with $1794 $1145 $1790 ($913 is responsible)
  $1796 = call $170 with $1788 ($70 is responsible)
  $1797 = call $151 with $1796 $175 ($1 is responsible)
  $1798 = call $253 with $1797 $238 $914 ($843 is responsible)
  $1799 = call $798 with $1788 ($844 is responsible)
  $1800 = call $253 with $1799 $851 $914 ($845 is responsible)
  $1801 = call $774 with $1788 $850 ($842 is responsible)
  $1802 = call $253 with $1801 $1140 $1790 ($915 is responsible)
  $1803 = call $829 with $1789 ($916 is responsible)
  $1804 = call $253 with $1803 $1138 $1790 ($917 is responsible)
  # Core:iterator:generate:42
  $1805 = { $1806 (+ responsible $1807) ->
    $1808 = call $151 with $1806 $1788 ($1 is responsible)
    # Core:iterator:generate:42:6
    $1809 = { (responsible $1810) ->
      $1811 = call $1789 with $1806 ($919 is responsible)
      $1812 = call $170 with $1806 ($68 is responsible)
      $1813 = call $151 with $1812 $175 ($69 is responsible)
      $1814 = call $253 with $1813 $212 $918 ($19 is responsible)
      $1815 = call $154 with $1806 $188 ($18 is responsible)
      $1816 = [$1098: $1811, $1104: $1815]
      $1817 = More $1816
    }
    $1818 = call $424 with $1808 $1387 $1809 ($920 is responsible)
  }
  $1819 = call $1633 with $187 $1805 ($921 is responsible)
}
# Core:iterator:map
$1820 = { $1821 $1822 (+ responsible $1823) ->
  # Core:iterator:map:2
  $1824 = { (responsible $1825) ->
    $1826 = panicking because $1155 ($1823 is at fault)
  }
  $1827 = call $1390 with $1821 $1824 ($955 is responsible)
  $1828 = call $829 with $1822 ($947 is responsible)
  $1829 = call $253 with $1828 $1135 $1823 ($948 is responsible)
  # Core:iterator:map:17
  $1830 = { $1831 (+ responsible $1832) ->
    $1833 = call $1584 with $1831 ($949 is responsible)
    $1834 = call $151 with $1095 $1833 ($950 is responsible)
    # Core:iterator:map:17:3:equals:else
    $1835 = { (responsible $1836) ->
      $1837 = call $169 with $1833 ($950 is responsible)
      $1838 = call $168 with $1112 $1837 ($950 is responsible)
      $1839 = call $168 with $1838 $210 ($950 is responsible)
      $1840 = ($180, $1839)
    }
    $1841 = call $153 with $1834 $278 $1835 ($950 is responsible)
    $1842 = call $160 with $1841 $187 ($950 is responsible)
    $1843 = call $151 with $1842 $178 ($950 is responsible)
    # Core:iterator:map:17:3:case-0:didNotMatch
    $1844 = { (responsible $1845) ->
      $1846 = call $160 with $1841 $188 ($950 is responsible)
      $1847 = call $170 with $1833 ($950 is responsible)
      $1848 = call $151 with $184 $1847 ($950 is responsible)
      # Core:iterator:map:17:3:equals:then
      $1849 = { (responsible $1850) ->
        $1851 = call $167 with $1833 ($950 is responsible)
        $1852 = call $151 with $1100 $1851 ($950 is responsible)
        # Core:iterator:map:17:3:equals:then
        $1853 = { (responsible $1854) ->
          $1855 = call $166 with $1833 ($950 is responsible)
          $1856 = call $151 with $186 $1855 ($950 is responsible)
          # Core:iterator:map:17:3:equals:then
          $1857 = { (responsible $1858) ->
            $1859 = call $165 with $1833 ($950 is responsible)
            $1860 = call $170 with $1859 ($950 is responsible)
            $1861 = call $151 with $183 $1860 ($950 is responsible)
            # Core:iterator:map:17:3:equals:then
            $1862 = { (responsible $1863) ->
              $1864 = call $164 with $1859 $1098 ($950 is responsible)
              # Core:iterator:map:17:3:hasKey:then
              $1865 = { (responsible $1866) ->
                $1867 = call $163 with $1859 $1098 ($950 is responsible)
                $1868 = ($178, $1867)
              }
              # Core:iterator:map:17:3:hasKey:else
              $1869 = { (responsible $1870) ->
                $1871 = call $169 with $1859 ($950 is responsible)
                $1872 = call $168 with $1115 $1871 ($950 is responsible)
                $1873 = call $168 with $1872 $210 ($950 is responsible)
                $1874 = ($180, $1873)
              }
              $1875 = call $153 with $1864 $1865 $1869 ($950 is responsible)
              $1876 = call $160 with $1875 $187 ($950 is responsible)
              $1877 = call $151 with $1876 $178 ($950 is responsible)
              # Core:iterator:map:17:3:isMatch:then
              $1878 = { (responsible $1879) ->
                $1880 = call $160 with $1875 $188 ($950 is responsible)
                $1881 = call $164 with $1859 $1103 ($950 is responsible)
                # Core:iterator:map:17:3:hasKey:then
                $1882 = { (responsible $1883) ->
                  $1884 = call $163 with $1859 $1103 ($950 is responsible)
                  $1885 = ($178, $1884)
                }
                # Core:iterator:map:17:3:hasKey:else
                $1886 = { (responsible $1887) ->
                  $1888 = call $169 with $1859 ($950 is responsible)
                  $1889 = call $168 with $1118 $1888 ($950 is responsible)
                  $1890 = call $168 with $1889 $210 ($950 is responsible)
                  $1891 = ($180, $1890)
                }
                $1892 = call $153 with $1881 $1882 $1886 ($950 is responsible)
                $1893 = call $160 with $1892 $187 ($950 is responsible)
                $1894 = call $151 with $1893 $178 ($950 is responsible)
                # Core:iterator:map:17:3:isMatch:then
                $1895 = { (responsible $1896) ->
                  $1897 = call $160 with $1892 $188 ($950 is responsible)
                  $1898 = ($178, $1880, $1897)
                }
                # Core:iterator:map:17:3:isMatch:else
                $1899 = { (responsible $1900) ->
                  $1901 = $1892
                }
                $1902 = call $153 with $1894 $1895 $1899 ($950 is responsible)
              }
              # Core:iterator:map:17:3:isMatch:else
              $1903 = { (responsible $1904) ->
                $1905 = $1875
              }
              $1906 = call $153 with $1877 $1878 $1903 ($950 is responsible)
            }
            # Core:iterator:map:17:3:equals:else
            $1907 = { (responsible $1908) ->
              $1909 = call $169 with $1860 ($950 is responsible)
              $1910 = call $168 with $202 $1909 ($950 is responsible)
              $1911 = call $168 with $1910 $210 ($950 is responsible)
              $1912 = ($180, $1911)
            }
            $1913 = call $153 with $1861 $1862 $1907 ($950 is responsible)
          }
          # Core:iterator:map:17:3:equals:else
          $1914 = { (responsible $1915) ->
            $1916 = call $169 with $1855 ($950 is responsible)
            $1917 = $809
          }
          $1918 = call $153 with $1856 $1857 $1914 ($950 is responsible)
        }
        # Core:iterator:map:17:3:equals:else
        $1919 = { (responsible $1920) ->
          $1921 = call $169 with $1851 ($950 is responsible)
          $1922 = call $168 with $1110 $1921 ($950 is responsible)
          $1923 = call $168 with $1922 $195 ($950 is responsible)
          $1924 = ($180, $1923)
        }
        $1925 = call $153 with $1852 $1853 $1919 ($950 is responsible)
      }
      # Core:iterator:map:17:3:equals:else
      $1926 = { (responsible $1927) ->
        $1928 = call $169 with $1847 ($950 is responsible)
        $1929 = call $168 with $203 $1928 ($950 is responsible)
        $1930 = call $168 with $1929 $210 ($950 is responsible)
        $1931 = ($180, $1930)
      }
      $1932 = call $153 with $1848 $1849 $1926 ($950 is responsible)
      $1933 = call $160 with $1932 $187 ($950 is responsible)
      $1934 = call $151 with $1933 $178 ($950 is responsible)
      # Core:iterator:map:17:3:case-1:matched
      $1935 = { (responsible $1936) ->
        $1937 = call $160 with $1932 $188 ($952 is responsible)
        $1938 = call $160 with $1932 $189 ($953 is responsible)
        $1939 = call $1822 with $1937 ($951 is responsible)
        $1940 = [$1098: $1939, $1104: $1938]
        $1941 = More $1940
      }
      # Core:iterator:map:17:3:case-1:didNotMatch
      $1942 = { (responsible $1943) ->
        $1944 = call $160 with $1932 $188 ($950 is responsible)
        $1945 = panicking because $205 ($950 is at fault)
      }
      $1946 = call $153 with $1934 $1935 $1942 ($950 is responsible)
    }
    $1947 = call $153 with $1843 $1387 $1844 ($950 is responsible)
  }
  $1948 = call $1633 with $1827 $1830 ($954 is responsible)
}
# Core:iterator:withIndex:11
$1949 = { $1950 (+ responsible $1951) ->
  $1952 = call $170 with $1950 ($1044 is responsible)
  $1953 = call $151 with $183 $1952 ($1044 is responsible)
  # Core:iterator:withIndex:11:1:equals:then
  $1954 = { (responsible $1955) ->
    $1956 = call $164 with $1950 $1099 ($1044 is responsible)
    # Core:iterator:withIndex:11:1:hasKey:then
    $1957 = { (responsible $1958) ->
      $1959 = call $163 with $1950 $1099 ($1044 is responsible)
      $1960 = ($178, $1959)
    }
    # Core:iterator:withIndex:11:1:hasKey:else
    $1961 = { (responsible $1962) ->
      $1963 = call $169 with $1950 ($1044 is responsible)
      $1964 = call $168 with $1116 $1963 ($1044 is responsible)
      $1965 = call $168 with $1964 $210 ($1044 is responsible)
      $1966 = ($180, $1965)
    }
    $1967 = call $153 with $1956 $1957 $1961 ($1044 is responsible)
    $1968 = call $160 with $1967 $187 ($1044 is responsible)
    $1969 = call $151 with $1968 $178 ($1044 is responsible)
    # Core:iterator:withIndex:11:1:isMatch:then
    $1970 = { (responsible $1971) ->
      $1972 = call $160 with $1967 $188 ($1044 is responsible)
      $1973 = call $164 with $1950 $1097 ($1044 is responsible)
      # Core:iterator:withIndex:11:1:hasKey:then
      $1974 = { (responsible $1975) ->
        $1976 = call $163 with $1950 $1097 ($1044 is responsible)
        $1977 = ($178, $1976)
      }
      # Core:iterator:withIndex:11:1:hasKey:else
      $1978 = { (responsible $1979) ->
        $1980 = call $169 with $1950 ($1044 is responsible)
        $1981 = call $168 with $1114 $1980 ($1044 is responsible)
        $1982 = call $168 with $1981 $210 ($1044 is responsible)
        $1983 = ($180, $1982)
      }
      $1984 = call $153 with $1973 $1974 $1978 ($1044 is responsible)
      $1985 = call $160 with $1984 $187 ($1044 is responsible)
      $1986 = call $151 with $1985 $178 ($1044 is responsible)
      # Core:iterator:withIndex:11:1:isMatch:then
      $1987 = { (responsible $1988) ->
        $1989 = call $160 with $1984 $188 ($1044 is responsible)
        $1990 = ($178, $1972, $1989)
      }
      # Core:iterator:withIndex:11:1:isMatch:else
      $1991 = { (responsible $1992) ->
        $1993 = $1984
      }
      $1994 = call $153 with $1986 $1987 $1991 ($1044 is responsible)
    }
    # Core:iterator:withIndex:11:1:isMatch:else
    $1995 = { (responsible $1996) ->
      $1997 = $1967
    }
    $1998 = call $153 with $1969 $1970 $1995 ($1044 is responsible)
  }
  # Core:iterator:withIndex:11:1:equals:else
  $1999 = { (responsible $2000) ->
    $2001 = call $169 with $1952 ($1044 is responsible)
    $2002 = call $168 with $202 $2001 ($1044 is responsible)
    $2003 = call $168 with $2002 $210 ($1044 is responsible)
    $2004 = ($180, $2003)
  }
  $2005 = call $153 with $1953 $1954 $1999 ($1044 is responsible)
  $2006 = call $160 with $2005 $187 ($1044 is responsible)
  $2007 = call $151 with $2006 $178 ($1044 is responsible)
  # Core:iterator:withIndex:11:1:isMatch:else
  $2008 = { (responsible $2009) ->
    $2010 = call $160 with $2005 $188 ($1044 is responsible)
    $2011 = panicking because $2010 ($1044 is at fault)
  }
  $2012 = call $153 with $2007 $250 $2008 ($1044 is responsible)
  $2013 = call $160 with $2005 $188 ($1051 is responsible)
  $2014 = call $160 with $2005 $189 ($1050 is responsible)
  $2015 = call $1584 with $2013 ($1045 is responsible)
  $2016 = call $151 with $1095 $2015 ($1046 is responsible)
  # Core:iterator:withIndex:11:5:equals:else
  $2017 = { (responsible $2018) ->
    $2019 = call $169 with $2015 ($1046 is responsible)
    $2020 = call $168 with $1112 $2019 ($1046 is responsible)
    $2021 = call $168 with $2020 $210 ($1046 is responsible)
    $2022 = ($180, $2021)
  }
  $2023 = call $153 with $2016 $278 $2017 ($1046 is responsible)
  $2024 = call $160 with $2023 $187 ($1046 is responsible)
  $2025 = call $151 with $2024 $178 ($1046 is responsible)
  # Core:iterator:withIndex:11:5:case-0:didNotMatch
  $2026 = { (responsible $2027) ->
    $2028 = call $160 with $2023 $188 ($1046 is responsible)
    $2029 = call $170 with $2015 ($1046 is responsible)
    $2030 = call $151 with $184 $2029 ($1046 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $2031 = { (responsible $2032) ->
      $2033 = call $167 with $2015 ($1046 is responsible)
      $2034 = call $151 with $1100 $2033 ($1046 is responsible)
      # Core:iterator:withIndex:11:5:equals:then
      $2035 = { (responsible $2036) ->
        $2037 = call $166 with $2015 ($1046 is responsible)
        $2038 = call $151 with $186 $2037 ($1046 is responsible)
        # Core:iterator:withIndex:11:5:equals:then
        $2039 = { (responsible $2040) ->
          $2041 = call $165 with $2015 ($1046 is responsible)
          $2042 = call $170 with $2041 ($1046 is responsible)
          $2043 = call $151 with $183 $2042 ($1046 is responsible)
          # Core:iterator:withIndex:11:5:equals:then
          $2044 = { (responsible $2045) ->
            $2046 = call $164 with $2041 $1098 ($1046 is responsible)
            # Core:iterator:withIndex:11:5:hasKey:then
            $2047 = { (responsible $2048) ->
              $2049 = call $163 with $2041 $1098 ($1046 is responsible)
              $2050 = ($178, $2049)
            }
            # Core:iterator:withIndex:11:5:hasKey:else
            $2051 = { (responsible $2052) ->
              $2053 = call $169 with $2041 ($1046 is responsible)
              $2054 = call $168 with $1115 $2053 ($1046 is responsible)
              $2055 = call $168 with $2054 $210 ($1046 is responsible)
              $2056 = ($180, $2055)
            }
            $2057 = call $153 with $2046 $2047 $2051 ($1046 is responsible)
            $2058 = call $160 with $2057 $187 ($1046 is responsible)
            $2059 = call $151 with $2058 $178 ($1046 is responsible)
            # Core:iterator:withIndex:11:5:isMatch:then
            $2060 = { (responsible $2061) ->
              $2062 = call $160 with $2057 $188 ($1046 is responsible)
              $2063 = call $164 with $2041 $1103 ($1046 is responsible)
              # Core:iterator:withIndex:11:5:hasKey:then
              $2064 = { (responsible $2065) ->
                $2066 = call $163 with $2041 $1103 ($1046 is responsible)
                $2067 = ($178, $2066)
              }
              # Core:iterator:withIndex:11:5:hasKey:else
              $2068 = { (responsible $2069) ->
                $2070 = call $169 with $2041 ($1046 is responsible)
                $2071 = call $168 with $1118 $2070 ($1046 is responsible)
                $2072 = call $168 with $2071 $210 ($1046 is responsible)
                $2073 = ($180, $2072)
              }
              $2074 = call $153 with $2063 $2064 $2068 ($1046 is responsible)
              $2075 = call $160 with $2074 $187 ($1046 is responsible)
              $2076 = call $151 with $2075 $178 ($1046 is responsible)
              # Core:iterator:withIndex:11:5:isMatch:then
              $2077 = { (responsible $2078) ->
                $2079 = call $160 with $2074 $188 ($1046 is responsible)
                $2080 = ($178, $2062, $2079)
              }
              # Core:iterator:withIndex:11:5:isMatch:else
              $2081 = { (responsible $2082) ->
                $2083 = $2074
              }
              $2084 = call $153 with $2076 $2077 $2081 ($1046 is responsible)
            }
            # Core:iterator:withIndex:11:5:isMatch:else
            $2085 = { (responsible $2086) ->
              $2087 = $2057
            }
            $2088 = call $153 with $2059 $2060 $2085 ($1046 is responsible)
          }
          # Core:iterator:withIndex:11:5:equals:else
          $2089 = { (responsible $2090) ->
            $2091 = call $169 with $2042 ($1046 is responsible)
            $2092 = call $168 with $202 $2091 ($1046 is responsible)
            $2093 = call $168 with $2092 $210 ($1046 is responsible)
            $2094 = ($180, $2093)
          }
          $2095 = call $153 with $2043 $2044 $2089 ($1046 is responsible)
        }
        # Core:iterator:withIndex:11:5:equals:else
        $2096 = { (responsible $2097) ->
          $2098 = call $169 with $2037 ($1046 is responsible)
          $2099 = $809
        }
        $2100 = call $153 with $2038 $2039 $2096 ($1046 is responsible)
      }
      # Core:iterator:withIndex:11:5:equals:else
      $2101 = { (responsible $2102) ->
        $2103 = call $169 with $2033 ($1046 is responsible)
        $2104 = call $168 with $1110 $2103 ($1046 is responsible)
        $2105 = call $168 with $2104 $195 ($1046 is responsible)
        $2106 = ($180, $2105)
      }
      $2107 = call $153 with $2034 $2035 $2101 ($1046 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2108 = { (responsible $2109) ->
      $2110 = call $169 with $2029 ($1046 is responsible)
      $2111 = call $168 with $203 $2110 ($1046 is responsible)
      $2112 = call $168 with $2111 $210 ($1046 is responsible)
      $2113 = ($180, $2112)
    }
    $2114 = call $153 with $2030 $2031 $2108 ($1046 is responsible)
    $2115 = call $160 with $2114 $187 ($1046 is responsible)
    $2116 = call $151 with $2115 $178 ($1046 is responsible)
    # Core:iterator:withIndex:11:5:case-1:matched
    $2117 = { (responsible $2118) ->
      $2119 = call $160 with $2114 $188 ($1048 is responsible)
      $2120 = call $160 with $2114 $189 ($1049 is responsible)
      $2121 = [$1098: $2119, $1097: $2014]
      $2122 = call $170 with $2014 ($68 is responsible)
      $2123 = call $151 with $2122 $175 ($69 is responsible)
      $2124 = call $253 with $2123 $212 $1047 ($19 is responsible)
      $2125 = call $154 with $2014 $188 ($18 is responsible)
      $2126 = [$1097: $2125, $1099: $2120]
      $2127 = [$1098: $2121, $1104: $2126]
      $2128 = More $2127
    }
    # Core:iterator:withIndex:11:5:case-1:didNotMatch
    $2129 = { (responsible $2130) ->
      $2131 = call $160 with $2114 $188 ($1046 is responsible)
      $2132 = panicking because $205 ($1046 is at fault)
    }
    $2133 = call $153 with $2116 $2117 $2129 ($1046 is responsible)
  }
  $2134 = call $153 with $2025 $1387 $2026 ($1046 is responsible)
}
# Core:iterator:ensure
$2135 = { $2136 $2137 (+ responsible $2138) ->
  $2139 = call $829 with $2137 ($893 is responsible)
  $2140 = call $253 with $2139 $1134 $2138 ($894 is responsible)
  # Core:iterator:ensure:12
  $2141 = { (responsible $2142) ->
    $2143 = panicking because $1129 ($2138 is at fault)
  }
  $2144 = call $1390 with $2136 $2141 ($890 is responsible)
  # Core:iterator:ensure:17
  $2145 = { $2146 (+ responsible $2147) ->
    $2148 = $2146
    $2149 = call $2137 with $2146 ($891 is responsible)
    $2150 = $2148
  }
  $2151 = call $1820 with $2144 $2145 ($892 is responsible)
}
# Core:iterator:foldLeft
$2152 = { $2153 $2154 $2155 (+ responsible $2156) ->
  # Core:iterator:foldLeft:2
  $2157 = { (responsible $2158) ->
    $2159 = panicking because $1130 ($2156 is at fault)
  }
  $2160 = call $1390 with $2153 $2157 ($907 is responsible)
  $2161 = call $744 with $2155 ($895 is responsible)
  $2162 = call $253 with $2161 $1139 $2156 ($896 is responsible)
  $2163 = [$1099: $2160, $1105: $2154]
  # Core:iterator:foldLeft:21
  $2164 = { $2165 $2166 (+ responsible $2167) ->
    $2168 = call $170 with $2166 ($897 is responsible)
    $2169 = call $151 with $183 $2168 ($897 is responsible)
    # Core:iterator:foldLeft:21:1:equals:then
    $2170 = { (responsible $2171) ->
      $2172 = call $164 with $2166 $1099 ($897 is responsible)
      # Core:iterator:foldLeft:21:1:hasKey:then
      $2173 = { (responsible $2174) ->
        $2175 = call $163 with $2166 $1099 ($897 is responsible)
        $2176 = ($178, $2175)
      }
      # Core:iterator:foldLeft:21:1:hasKey:else
      $2177 = { (responsible $2178) ->
        $2179 = call $169 with $2166 ($897 is responsible)
        $2180 = call $168 with $1116 $2179 ($897 is responsible)
        $2181 = call $168 with $2180 $210 ($897 is responsible)
        $2182 = ($180, $2181)
      }
      $2183 = call $153 with $2172 $2173 $2177 ($897 is responsible)
      $2184 = call $160 with $2183 $187 ($897 is responsible)
      $2185 = call $151 with $2184 $178 ($897 is responsible)
      # Core:iterator:foldLeft:21:1:isMatch:then
      $2186 = { (responsible $2187) ->
        $2188 = call $160 with $2183 $188 ($897 is responsible)
        $2189 = call $164 with $2166 $1105 ($897 is responsible)
        # Core:iterator:foldLeft:21:1:hasKey:then
        $2190 = { (responsible $2191) ->
          $2192 = call $163 with $2166 $1105 ($897 is responsible)
          $2193 = ($178, $2192)
        }
        # Core:iterator:foldLeft:21:1:hasKey:else
        $2194 = { (responsible $2195) ->
          $2196 = call $169 with $2166 ($897 is responsible)
          $2197 = call $168 with $1120 $2196 ($897 is responsible)
          $2198 = call $168 with $2197 $210 ($897 is responsible)
          $2199 = ($180, $2198)
        }
        $2200 = call $153 with $2189 $2190 $2194 ($897 is responsible)
        $2201 = call $160 with $2200 $187 ($897 is responsible)
        $2202 = call $151 with $2201 $178 ($897 is responsible)
        # Core:iterator:foldLeft:21:1:isMatch:then
        $2203 = { (responsible $2204) ->
          $2205 = call $160 with $2200 $188 ($897 is responsible)
          $2206 = ($178, $2188, $2205)
        }
        # Core:iterator:foldLeft:21:1:isMatch:else
        $2207 = { (responsible $2208) ->
          $2209 = $2200
        }
        $2210 = call $153 with $2202 $2203 $2207 ($897 is responsible)
      }
      # Core:iterator:foldLeft:21:1:isMatch:else
      $2211 = { (responsible $2212) ->
        $2213 = $2183
      }
      $2214 = call $153 with $2185 $2186 $2211 ($897 is responsible)
    }
    # Core:iterator:foldLeft:21:1:equals:else
    $2215 = { (responsible $2216) ->
      $2217 = call $169 with $2168 ($897 is responsible)
      $2218 = call $168 with $202 $2217 ($897 is responsible)
      $2219 = call $168 with $2218 $210 ($897 is responsible)
      $2220 = ($180, $2219)
    }
    $2221 = call $153 with $2169 $2170 $2215 ($897 is responsible)
    $2222 = call $160 with $2221 $187 ($897 is responsible)
    $2223 = call $151 with $2222 $178 ($897 is responsible)
    # Core:iterator:foldLeft:21:1:isMatch:else
    $2224 = { (responsible $2225) ->
      $2226 = call $160 with $2221 $188 ($897 is responsible)
      $2227 = panicking because $2226 ($897 is at fault)
    }
    $2228 = call $153 with $2223 $250 $2224 ($897 is responsible)
    $2229 = call $160 with $2221 $188 ($904 is responsible)
    $2230 = call $160 with $2221 $189 ($905 is responsible)
    $2231 = call $1584 with $2229 ($898 is responsible)
    $2232 = call $151 with $1095 $2231 ($899 is responsible)
    # Core:iterator:foldLeft:21:5:equals:else
    $2233 = { (responsible $2234) ->
      $2235 = call $169 with $2231 ($899 is responsible)
      $2236 = call $168 with $1112 $2235 ($899 is responsible)
      $2237 = call $168 with $2236 $210 ($899 is responsible)
      $2238 = ($180, $2237)
    }
    $2239 = call $153 with $2232 $278 $2233 ($899 is responsible)
    $2240 = call $160 with $2239 $187 ($899 is responsible)
    $2241 = call $151 with $2240 $178 ($899 is responsible)
    # Core:iterator:foldLeft:21:5:case-0:matched
    $2242 = { (responsible $2243) ->
      $2244 = $2230
    }
    # Core:iterator:foldLeft:21:5:case-0:didNotMatch
    $2245 = { (responsible $2246) ->
      $2247 = call $160 with $2239 $188 ($899 is responsible)
      $2248 = call $170 with $2231 ($899 is responsible)
      $2249 = call $151 with $184 $2248 ($899 is responsible)
      # Core:iterator:foldLeft:21:5:equals:then
      $2250 = { (responsible $2251) ->
        $2252 = call $167 with $2231 ($899 is responsible)
        $2253 = call $151 with $1100 $2252 ($899 is responsible)
        # Core:iterator:foldLeft:21:5:equals:then
        $2254 = { (responsible $2255) ->
          $2256 = call $166 with $2231 ($899 is responsible)
          $2257 = call $151 with $186 $2256 ($899 is responsible)
          # Core:iterator:foldLeft:21:5:equals:then
          $2258 = { (responsible $2259) ->
            $2260 = call $165 with $2231 ($899 is responsible)
            $2261 = call $170 with $2260 ($899 is responsible)
            $2262 = call $151 with $183 $2261 ($899 is responsible)
            # Core:iterator:foldLeft:21:5:equals:then
            $2263 = { (responsible $2264) ->
              $2265 = call $164 with $2260 $1098 ($899 is responsible)
              # Core:iterator:foldLeft:21:5:hasKey:then
              $2266 = { (responsible $2267) ->
                $2268 = call $163 with $2260 $1098 ($899 is responsible)
                $2269 = ($178, $2268)
              }
              # Core:iterator:foldLeft:21:5:hasKey:else
              $2270 = { (responsible $2271) ->
                $2272 = call $169 with $2260 ($899 is responsible)
                $2273 = call $168 with $1115 $2272 ($899 is responsible)
                $2274 = call $168 with $2273 $210 ($899 is responsible)
                $2275 = ($180, $2274)
              }
              $2276 = call $153 with $2265 $2266 $2270 ($899 is responsible)
              $2277 = call $160 with $2276 $187 ($899 is responsible)
              $2278 = call $151 with $2277 $178 ($899 is responsible)
              # Core:iterator:foldLeft:21:5:isMatch:then
              $2279 = { (responsible $2280) ->
                $2281 = call $160 with $2276 $188 ($899 is responsible)
                $2282 = call $164 with $2260 $1103 ($899 is responsible)
                # Core:iterator:foldLeft:21:5:hasKey:then
                $2283 = { (responsible $2284) ->
                  $2285 = call $163 with $2260 $1103 ($899 is responsible)
                  $2286 = ($178, $2285)
                }
                # Core:iterator:foldLeft:21:5:hasKey:else
                $2287 = { (responsible $2288) ->
                  $2289 = call $169 with $2260 ($899 is responsible)
                  $2290 = call $168 with $1118 $2289 ($899 is responsible)
                  $2291 = call $168 with $2290 $210 ($899 is responsible)
                  $2292 = ($180, $2291)
                }
                $2293 = call $153 with $2282 $2283 $2287 ($899 is responsible)
                $2294 = call $160 with $2293 $187 ($899 is responsible)
                $2295 = call $151 with $2294 $178 ($899 is responsible)
                # Core:iterator:foldLeft:21:5:isMatch:then
                $2296 = { (responsible $2297) ->
                  $2298 = call $160 with $2293 $188 ($899 is responsible)
                  $2299 = ($178, $2281, $2298)
                }
                # Core:iterator:foldLeft:21:5:isMatch:else
                $2300 = { (responsible $2301) ->
                  $2302 = $2293
                }
                $2303 = call $153 with $2295 $2296 $2300 ($899 is responsible)
              }
              # Core:iterator:foldLeft:21:5:isMatch:else
              $2304 = { (responsible $2305) ->
                $2306 = $2276
              }
              $2307 = call $153 with $2278 $2279 $2304 ($899 is responsible)
            }
            # Core:iterator:foldLeft:21:5:equals:else
            $2308 = { (responsible $2309) ->
              $2310 = call $169 with $2261 ($899 is responsible)
              $2311 = call $168 with $202 $2310 ($899 is responsible)
              $2312 = call $168 with $2311 $210 ($899 is responsible)
              $2313 = ($180, $2312)
            }
            $2314 = call $153 with $2262 $2263 $2308 ($899 is responsible)
          }
          # Core:iterator:foldLeft:21:5:equals:else
          $2315 = { (responsible $2316) ->
            $2317 = call $169 with $2256 ($899 is responsible)
            $2318 = $809
          }
          $2319 = call $153 with $2257 $2258 $2315 ($899 is responsible)
        }
        # Core:iterator:foldLeft:21:5:equals:else
        $2320 = { (responsible $2321) ->
          $2322 = call $169 with $2252 ($899 is responsible)
          $2323 = call $168 with $1110 $2322 ($899 is responsible)
          $2324 = call $168 with $2323 $195 ($899 is responsible)
          $2325 = ($180, $2324)
        }
        $2326 = call $153 with $2253 $2254 $2320 ($899 is responsible)
      }
      # Core:iterator:foldLeft:21:5:equals:else
      $2327 = { (responsible $2328) ->
        $2329 = call $169 with $2248 ($899 is responsible)
        $2330 = call $168 with $203 $2329 ($899 is responsible)
        $2331 = call $168 with $2330 $210 ($899 is responsible)
        $2332 = ($180, $2331)
      }
      $2333 = call $153 with $2249 $2250 $2327 ($899 is responsible)
      $2334 = call $160 with $2333 $187 ($899 is responsible)
      $2335 = call $151 with $2334 $178 ($899 is responsible)
      # Core:iterator:foldLeft:21:5:case-1:matched
      $2336 = { (responsible $2337) ->
        $2338 = call $160 with $2333 $188 ($902 is responsible)
        $2339 = call $160 with $2333 $189 ($903 is responsible)
        $2340 = call $2155 with $2230 $2338 ($901 is responsible)
        $2341 = [$1099: $2339, $1105: $2340]
        $2342 = call $2165 with $2341 ($900 is responsible)
      }
      # Core:iterator:foldLeft:21:5:case-1:didNotMatch
      $2343 = { (responsible $2344) ->
        $2345 = call $160 with $2333 $188 ($899 is responsible)
        $2346 = panicking because $205 ($899 is at fault)
      }
      $2347 = call $153 with $2335 $2336 $2343 ($899 is responsible)
    }
    $2348 = call $153 with $2241 $2242 $2245 ($899 is responsible)
  }
  $2349 = call $744 with $2164 ($123 is responsible)
  $2350 = call $253 with $2349 $206 $906 ($119 is responsible)
  # Core:controlFlow:recursive:16
  $2351 = { $2352 $2353 (+ responsible $2354) ->
    # Core:controlFlow:recursive:16:0
    $2355 = { $2356 (+ responsible $2357) ->
      $2358 = call $2352 with $2352 $2356 ($120 is responsible)
    }
    $2359 = call $2164 with $2355 $2353 ($121 is responsible)
  }
  $2360 = call $2351 with $2351 $2163 ($122 is responsible)
}
$2361 = Error $1107
# Core:iterator:reduceLeft:16:case-0:matched
$2362 = { (responsible $2363) ->
  $2364 = $2361
}
# Core:iterator:reduceLeft
$2365 = { $2366 $2367 (+ responsible $2368) ->
  $2369 = call $744 with $2367 ($966 is responsible)
  $2370 = call $253 with $2369 $1139 $2368 ($967 is responsible)
  # Core:iterator:reduceLeft:12
  $2371 = { (responsible $2372) ->
    $2373 = panicking because $1157 ($2368 is at fault)
  }
  $2374 = call $1390 with $2366 $2371 ($960 is responsible)
  $2375 = call $1584 with $2374 ($961 is responsible)
  $2376 = call $151 with $1095 $2375 ($962 is responsible)
  # Core:iterator:reduceLeft:16:equals:else
  $2377 = { (responsible $2378) ->
    $2379 = call $169 with $2375 ($962 is responsible)
    $2380 = call $168 with $1112 $2379 ($962 is responsible)
    $2381 = call $168 with $2380 $210 ($962 is responsible)
    $2382 = ($180, $2381)
  }
  $2383 = call $153 with $2376 $278 $2377 ($962 is responsible)
  $2384 = call $160 with $2383 $187 ($962 is responsible)
  $2385 = call $151 with $2384 $178 ($962 is responsible)
  # Core:iterator:reduceLeft:16:case-0:didNotMatch
  $2386 = { (responsible $2387) ->
    $2388 = call $160 with $2383 $188 ($962 is responsible)
    $2389 = call $170 with $2375 ($962 is responsible)
    $2390 = call $151 with $184 $2389 ($962 is responsible)
    # Core:iterator:reduceLeft:16:equals:then
    $2391 = { (responsible $2392) ->
      $2393 = call $167 with $2375 ($962 is responsible)
      $2394 = call $151 with $1100 $2393 ($962 is responsible)
      # Core:iterator:reduceLeft:16:equals:then
      $2395 = { (responsible $2396) ->
        $2397 = call $166 with $2375 ($962 is responsible)
        $2398 = call $151 with $186 $2397 ($962 is responsible)
        # Core:iterator:reduceLeft:16:equals:then
        $2399 = { (responsible $2400) ->
          $2401 = call $165 with $2375 ($962 is responsible)
          $2402 = call $170 with $2401 ($962 is responsible)
          $2403 = call $151 with $183 $2402 ($962 is responsible)
          # Core:iterator:reduceLeft:16:equals:then
          $2404 = { (responsible $2405) ->
            $2406 = call $164 with $2401 $1098 ($962 is responsible)
            # Core:iterator:reduceLeft:16:hasKey:then
            $2407 = { (responsible $2408) ->
              $2409 = call $163 with $2401 $1098 ($962 is responsible)
              $2410 = ($178, $2409)
            }
            # Core:iterator:reduceLeft:16:hasKey:else
            $2411 = { (responsible $2412) ->
              $2413 = call $169 with $2401 ($962 is responsible)
              $2414 = call $168 with $1115 $2413 ($962 is responsible)
              $2415 = call $168 with $2414 $210 ($962 is responsible)
              $2416 = ($180, $2415)
            }
            $2417 = call $153 with $2406 $2407 $2411 ($962 is responsible)
            $2418 = call $160 with $2417 $187 ($962 is responsible)
            $2419 = call $151 with $2418 $178 ($962 is responsible)
            # Core:iterator:reduceLeft:16:isMatch:then
            $2420 = { (responsible $2421) ->
              $2422 = call $160 with $2417 $188 ($962 is responsible)
              $2423 = call $164 with $2401 $1103 ($962 is responsible)
              # Core:iterator:reduceLeft:16:hasKey:then
              $2424 = { (responsible $2425) ->
                $2426 = call $163 with $2401 $1103 ($962 is responsible)
                $2427 = ($178, $2426)
              }
              # Core:iterator:reduceLeft:16:hasKey:else
              $2428 = { (responsible $2429) ->
                $2430 = call $169 with $2401 ($962 is responsible)
                $2431 = call $168 with $1118 $2430 ($962 is responsible)
                $2432 = call $168 with $2431 $210 ($962 is responsible)
                $2433 = ($180, $2432)
              }
              $2434 = call $153 with $2423 $2424 $2428 ($962 is responsible)
              $2435 = call $160 with $2434 $187 ($962 is responsible)
              $2436 = call $151 with $2435 $178 ($962 is responsible)
              # Core:iterator:reduceLeft:16:isMatch:then
              $2437 = { (responsible $2438) ->
                $2439 = call $160 with $2434 $188 ($962 is responsible)
                $2440 = ($178, $2422, $2439)
              }
              # Core:iterator:reduceLeft:16:isMatch:else
              $2441 = { (responsible $2442) ->
                $2443 = $2434
              }
              $2444 = call $153 with $2436 $2437 $2441 ($962 is responsible)
            }
            # Core:iterator:reduceLeft:16:isMatch:else
            $2445 = { (responsible $2446) ->
              $2447 = $2417
            }
            $2448 = call $153 with $2419 $2420 $2445 ($962 is responsible)
          }
          # Core:iterator:reduceLeft:16:equals:else
          $2449 = { (responsible $2450) ->
            $2451 = call $169 with $2402 ($962 is responsible)
            $2452 = call $168 with $202 $2451 ($962 is responsible)
            $2453 = call $168 with $2452 $210 ($962 is responsible)
            $2454 = ($180, $2453)
          }
          $2455 = call $153 with $2403 $2404 $2449 ($962 is responsible)
        }
        # Core:iterator:reduceLeft:16:equals:else
        $2456 = { (responsible $2457) ->
          $2458 = call $169 with $2397 ($962 is responsible)
          $2459 = $809
        }
        $2460 = call $153 with $2398 $2399 $2456 ($962 is responsible)
      }
      # Core:iterator:reduceLeft:16:equals:else
      $2461 = { (responsible $2462) ->
        $2463 = call $169 with $2393 ($962 is responsible)
        $2464 = call $168 with $1110 $2463 ($962 is responsible)
        $2465 = call $168 with $2464 $195 ($962 is responsible)
        $2466 = ($180, $2465)
      }
      $2467 = call $153 with $2394 $2395 $2461 ($962 is responsible)
    }
    # Core:iterator:reduceLeft:16:equals:else
    $2468 = { (responsible $2469) ->
      $2470 = call $169 with $2389 ($962 is responsible)
      $2471 = call $168 with $203 $2470 ($962 is responsible)
      $2472 = call $168 with $2471 $210 ($962 is responsible)
      $2473 = ($180, $2472)
    }
    $2474 = call $153 with $2390 $2391 $2468 ($962 is responsible)
    $2475 = call $160 with $2474 $187 ($962 is responsible)
    $2476 = call $151 with $2475 $178 ($962 is responsible)
    # Core:iterator:reduceLeft:16:case-1:matched
    $2477 = { (responsible $2478) ->
      $2479 = call $160 with $2474 $188 ($964 is responsible)
      $2480 = call $160 with $2474 $189 ($965 is responsible)
      $2481 = call $2152 with $2480 $2479 $2367 ($963 is responsible)
      $2482 = Ok $2481
    }
    # Core:iterator:reduceLeft:16:case-1:didNotMatch
    $2483 = { (responsible $2484) ->
      $2485 = call $160 with $2474 $188 ($962 is responsible)
      $2486 = panicking because $205 ($962 is at fault)
    }
    $2487 = call $153 with $2476 $2477 $2483 ($962 is responsible)
  }
  $2488 = call $153 with $2385 $2362 $2386 ($962 is responsible)
}
# Core:iterator:sum:8
$2489 = { $2490 $2491 (+ responsible $2492) ->
  $2493 = call $170 with $2490 ($68 is responsible)
  $2494 = call $151 with $2493 $175 ($69 is responsible)
  $2495 = call $253 with $2494 $212 $987 ($19 is responsible)
  $2496 = call $170 with $2491 ($68 is responsible)
  $2497 = call $151 with $2496 $175 ($69 is responsible)
  $2498 = call $253 with $2497 $214 $987 ($17 is responsible)
  $2499 = call $154 with $2490 $2491 ($18 is responsible)
}
# Core:iterator:sum
$2500 = { $2501 (+ responsible $2502) ->
  # Core:iterator:sum:2
  $2503 = { (responsible $2504) ->
    $2505 = panicking because $1159 ($2502 is at fault)
  }
  $2506 = call $1390 with $2501 $2503 ($984 is responsible)
  # Core:iterator:sum:5
  $2507 = { $2508 (+ responsible $2509) ->
    $2510 = call $170 with $2508 ($70 is responsible)
    $2511 = call $151 with $2510 $175 ($1 is responsible)
    $2512 = call $253 with $2511 $1113 $2502 ($985 is responsible)
  }
  $2513 = call $2135 with $2506 $2507 ($986 is responsible)
  $2514 = call $2365 with $2513 $2489 ($988 is responsible)
  $2515 = call $1357 with $2514 $187 ($983 is responsible)
}
# Core:iterator:length:5
$2516 = { $2517 (+ responsible $2518) ->
  $2519 = $188
}
# Core:iterator:all
$2520 = { $2521 $2522 (+ responsible $2523) ->
  $2524 = call $829 with $2522 ($875 is responsible)
  $2525 = call $253 with $2524 $1137 $2523 ($876 is responsible)
  # Core:iterator:all:12
  $2526 = { (responsible $2527) ->
    $2528 = panicking because $1124 ($2523 is at fault)
  }
  $2529 = call $1390 with $2521 $2526 ($869 is responsible)
  # Core:iterator:all:16
  $2530 = { $2531 $2532 (+ responsible $2533) ->
    $2534 = call $2522 with $2532 ($872 is responsible)
    $2535 = call $560 with $2534 ($870 is responsible)
    $2536 = call $253 with $2535 $1127 $2523 ($871 is responsible)
    $2537 = call $560 with $2531 ($72 is responsible)
    $2538 = call $253 with $2537 $234 $873 ($73 is responsible)
    $2539 = call $560 with $2534 ($74 is responsible)
    $2540 = call $253 with $2539 $235 $873 ($75 is responsible)
    # Core:bool:and:12
    $2541 = { (responsible $2542) ->
      $2543 = $2534
    }
    $2544 = call $628 with $2531 $2541 ($71 is responsible)
  }
  $2545 = call $2152 with $2529 $186 $2530 ($874 is responsible)
}
# Core:iterator:any
$2546 = { $2547 $2548 (+ responsible $2549) ->
  $2550 = call $829 with $2548 ($883 is responsible)
  $2551 = call $253 with $2550 $1137 $2549 ($884 is responsible)
  # Core:iterator:any:12
  $2552 = { (responsible $2553) ->
    $2554 = panicking because $1125 ($2549 is at fault)
  }
  $2555 = call $1390 with $2547 $2552 ($877 is responsible)
  # Core:iterator:any:16
  $2556 = { $2557 $2558 (+ responsible $2559) ->
    $2560 = call $2548 with $2558 ($880 is responsible)
    $2561 = call $560 with $2560 ($878 is responsible)
    $2562 = call $253 with $2561 $1127 $2549 ($879 is responsible)
    $2563 = call $560 with $2557 ($97 is responsible)
    $2564 = call $253 with $2563 $234 $881 ($98 is responsible)
    $2565 = call $560 with $2560 ($99 is responsible)
    $2566 = call $253 with $2565 $235 $881 ($100 is responsible)
    # Core:bool:or:12
    $2567 = { (responsible $2568) ->
      $2569 = $2560
    }
    $2570 = call $672 with $2557 $2567 ($96 is responsible)
  }
  $2571 = call $2152 with $2555 $172 $2556 ($882 is responsible)
}
# Core:iterator:joinToText
$2572 = { $2573 (+ responsible $2574) ->
  # Core:iterator:joinToText:2
  $2575 = { (responsible $2576) ->
    $2577 = panicking because $1152 ($2574 is at fault)
  }
  $2578 = call $1390 with $2573 $2575 ($943 is responsible)
  # Core:iterator:joinToText:12
  $2579 = { $2580 $2581 (+ responsible $2582) ->
    $2583 = call $170 with $2581 ($70 is responsible)
    $2584 = call $151 with $2583 $185 ($1 is responsible)
    $2585 = call $253 with $2584 $1162 $2574 ($941 is responsible)
    $2586 = call $170 with $2580 ($68 is responsible)
    $2587 = call $151 with $2586 $185 ($69 is responsible)
    $2588 = call $253 with $2587 $213 $940 ($66 is responsible)
    $2589 = call $170 with $2581 ($68 is responsible)
    $2590 = call $151 with $2589 $185 ($69 is responsible)
    $2591 = call $253 with $2590 $215 $940 ($64 is responsible)
    $2592 = call $168 with $2580 $2581 ($65 is responsible)
  }
  $2593 = call $2152 with $2578 $1106 $2579 ($942 is responsible)
}
# Core:iterator:where
$2594 = { $2595 $2596 (+ responsible $2597) ->
  # Core:iterator:where:2
  $2598 = { (responsible $2599) ->
    $2600 = panicking because $1164 ($2597 is at fault)
  }
  $2601 = call $1390 with $2595 $2598 ($1027 is responsible)
  $2602 = call $829 with $2596 ($1012 is responsible)
  $2603 = call $253 with $2602 $1137 $2597 ($1013 is responsible)
  # Core:iterator:where:17
  $2604 = { $2605 $2606 (+ responsible $2607) ->
    # Core:iterator:where:17:2
    $2608 = { $2609 (+ responsible $2610) ->
      $2611 = call $1584 with $2609 ($1014 is responsible)
      $2612 = call $151 with $1095 $2611 ($1015 is responsible)
      # Core:iterator:where:17:2:3:equals:else
      $2613 = { (responsible $2614) ->
        $2615 = call $169 with $2611 ($1015 is responsible)
        $2616 = call $168 with $1112 $2615 ($1015 is responsible)
        $2617 = call $168 with $2616 $210 ($1015 is responsible)
        $2618 = ($180, $2617)
      }
      $2619 = call $153 with $2612 $278 $2613 ($1015 is responsible)
      $2620 = call $160 with $2619 $187 ($1015 is responsible)
      $2621 = call $151 with $2620 $178 ($1015 is responsible)
      # Core:iterator:where:17:2:3:case-0:didNotMatch
      $2622 = { (responsible $2623) ->
        $2624 = call $160 with $2619 $188 ($1015 is responsible)
        $2625 = call $170 with $2611 ($1015 is responsible)
        $2626 = call $151 with $184 $2625 ($1015 is responsible)
        # Core:iterator:where:17:2:3:equals:then
        $2627 = { (responsible $2628) ->
          $2629 = call $167 with $2611 ($1015 is responsible)
          $2630 = call $151 with $1100 $2629 ($1015 is responsible)
          # Core:iterator:where:17:2:3:equals:then
          $2631 = { (responsible $2632) ->
            $2633 = call $166 with $2611 ($1015 is responsible)
            $2634 = call $151 with $186 $2633 ($1015 is responsible)
            # Core:iterator:where:17:2:3:equals:then
            $2635 = { (responsible $2636) ->
              $2637 = call $165 with $2611 ($1015 is responsible)
              $2638 = call $170 with $2637 ($1015 is responsible)
              $2639 = call $151 with $183 $2638 ($1015 is responsible)
              # Core:iterator:where:17:2:3:equals:then
              $2640 = { (responsible $2641) ->
                $2642 = call $164 with $2637 $1098 ($1015 is responsible)
                # Core:iterator:where:17:2:3:hasKey:then
                $2643 = { (responsible $2644) ->
                  $2645 = call $163 with $2637 $1098 ($1015 is responsible)
                  $2646 = ($178, $2645)
                }
                # Core:iterator:where:17:2:3:hasKey:else
                $2647 = { (responsible $2648) ->
                  $2649 = call $169 with $2637 ($1015 is responsible)
                  $2650 = call $168 with $1115 $2649 ($1015 is responsible)
                  $2651 = call $168 with $2650 $210 ($1015 is responsible)
                  $2652 = ($180, $2651)
                }
                $2653 = call $153 with $2642 $2643 $2647 ($1015 is responsible)
                $2654 = call $160 with $2653 $187 ($1015 is responsible)
                $2655 = call $151 with $2654 $178 ($1015 is responsible)
                # Core:iterator:where:17:2:3:isMatch:then
                $2656 = { (responsible $2657) ->
                  $2658 = call $160 with $2653 $188 ($1015 is responsible)
                  $2659 = call $164 with $2637 $1103 ($1015 is responsible)
                  # Core:iterator:where:17:2:3:hasKey:then
                  $2660 = { (responsible $2661) ->
                    $2662 = call $163 with $2637 $1103 ($1015 is responsible)
                    $2663 = ($178, $2662)
                  }
                  # Core:iterator:where:17:2:3:hasKey:else
                  $2664 = { (responsible $2665) ->
                    $2666 = call $169 with $2637 ($1015 is responsible)
                    $2667 = call $168 with $1118 $2666 ($1015 is responsible)
                    $2668 = call $168 with $2667 $210 ($1015 is responsible)
                    $2669 = ($180, $2668)
                  }
                  $2670 = call $153 with $2659 $2660 $2664 ($1015 is responsible)
                  $2671 = call $160 with $2670 $187 ($1015 is responsible)
                  $2672 = call $151 with $2671 $178 ($1015 is responsible)
                  # Core:iterator:where:17:2:3:isMatch:then
                  $2673 = { (responsible $2674) ->
                    $2675 = call $160 with $2670 $188 ($1015 is responsible)
                    $2676 = ($178, $2658, $2675)
                  }
                  # Core:iterator:where:17:2:3:isMatch:else
                  $2677 = { (responsible $2678) ->
                    $2679 = $2670
                  }
                  $2680 = call $153 with $2672 $2673 $2677 ($1015 is responsible)
                }
                # Core:iterator:where:17:2:3:isMatch:else
                $2681 = { (responsible $2682) ->
                  $2683 = $2653
                }
                $2684 = call $153 with $2655 $2656 $2681 ($1015 is responsible)
              }
              # Core:iterator:where:17:2:3:equals:else
              $2685 = { (responsible $2686) ->
                $2687 = call $169 with $2638 ($1015 is responsible)
                $2688 = call $168 with $202 $2687 ($1015 is responsible)
                $2689 = call $168 with $2688 $210 ($1015 is responsible)
                $2690 = ($180, $2689)
              }
              $2691 = call $153 with $2639 $2640 $2685 ($1015 is responsible)
            }
            # Core:iterator:where:17:2:3:equals:else
            $2692 = { (responsible $2693) ->
              $2694 = call $169 with $2633 ($1015 is responsible)
              $2695 = $809
            }
            $2696 = call $153 with $2634 $2635 $2692 ($1015 is responsible)
          }
          # Core:iterator:where:17:2:3:equals:else
          $2697 = { (responsible $2698) ->
            $2699 = call $169 with $2629 ($1015 is responsible)
            $2700 = call $168 with $1110 $2699 ($1015 is responsible)
            $2701 = call $168 with $2700 $195 ($1015 is responsible)
            $2702 = ($180, $2701)
          }
          $2703 = call $153 with $2630 $2631 $2697 ($1015 is responsible)
        }
        # Core:iterator:where:17:2:3:equals:else
        $2704 = { (responsible $2705) ->
          $2706 = call $169 with $2625 ($1015 is responsible)
          $2707 = call $168 with $203 $2706 ($1015 is responsible)
          $2708 = call $168 with $2707 $210 ($1015 is responsible)
          $2709 = ($180, $2708)
        }
        $2710 = call $153 with $2626 $2627 $2704 ($1015 is responsible)
        $2711 = call $160 with $2710 $187 ($1015 is responsible)
        $2712 = call $151 with $2711 $178 ($1015 is responsible)
        # Core:iterator:where:17:2:3:case-1:matched
        $2713 = { (responsible $2714) ->
          $2715 = call $160 with $2710 $188 ($1023 is responsible)
          $2716 = call $160 with $2710 $189 ($1024 is responsible)
          $2717 = call $2596 with $2715 ($1016 is responsible)
          # Core:iterator:where:17:2:3:5
          $2718 = { (responsible $2719) ->
            $2720 = [$1104: $2716, $1098: $2715]
            $2721 = More $2720
          }
          # Core:iterator:where:17:2:3:6
          $2722 = { (responsible $2723) ->
            $2724 = call $2605 with $2716 ($1017 is responsible)
            $2725 = call $1584 with $2724 ($1018 is responsible)
            $2726 = call $151 with $1095 $2725 ($1019 is responsible)
            # Core:iterator:where:17:2:3:6:5:equals:else
            $2727 = { (responsible $2728) ->
              $2729 = call $169 with $2725 ($1019 is responsible)
              $2730 = call $168 with $1112 $2729 ($1019 is responsible)
              $2731 = call $168 with $2730 $210 ($1019 is responsible)
              $2732 = ($180, $2731)
            }
            $2733 = call $153 with $2726 $278 $2727 ($1019 is responsible)
            $2734 = call $160 with $2733 $187 ($1019 is responsible)
            $2735 = call $151 with $2734 $178 ($1019 is responsible)
            # Core:iterator:where:17:2:3:6:5:case-0:didNotMatch
            $2736 = { (responsible $2737) ->
              $2738 = call $160 with $2733 $188 ($1019 is responsible)
              $2739 = call $170 with $2725 ($1019 is responsible)
              $2740 = call $151 with $184 $2739 ($1019 is responsible)
              # Core:iterator:where:17:2:3:6:5:equals:then
              $2741 = { (responsible $2742) ->
                $2743 = call $167 with $2725 ($1019 is responsible)
                $2744 = call $151 with $1100 $2743 ($1019 is responsible)
                # Core:iterator:where:17:2:3:6:5:equals:then
                $2745 = { (responsible $2746) ->
                  $2747 = call $166 with $2725 ($1019 is responsible)
                  $2748 = call $151 with $186 $2747 ($1019 is responsible)
                  # Core:iterator:where:17:2:3:6:5:equals:then
                  $2749 = { (responsible $2750) ->
                    $2751 = call $165 with $2725 ($1019 is responsible)
                    $2752 = call $170 with $2751 ($1019 is responsible)
                    $2753 = call $151 with $183 $2752 ($1019 is responsible)
                    # Core:iterator:where:17:2:3:6:5:equals:then
                    $2754 = { (responsible $2755) ->
                      $2756 = call $164 with $2751 $1098 ($1019 is responsible)
                      # Core:iterator:where:17:2:3:6:5:hasKey:then
                      $2757 = { (responsible $2758) ->
                        $2759 = call $163 with $2751 $1098 ($1019 is responsible)
                        $2760 = ($178, $2759)
                      }
                      # Core:iterator:where:17:2:3:6:5:hasKey:else
                      $2761 = { (responsible $2762) ->
                        $2763 = call $169 with $2751 ($1019 is responsible)
                        $2764 = call $168 with $1115 $2763 ($1019 is responsible)
                        $2765 = call $168 with $2764 $210 ($1019 is responsible)
                        $2766 = ($180, $2765)
                      }
                      $2767 = call $153 with $2756 $2757 $2761 ($1019 is responsible)
                      $2768 = call $160 with $2767 $187 ($1019 is responsible)
                      $2769 = call $151 with $2768 $178 ($1019 is responsible)
                      # Core:iterator:where:17:2:3:6:5:isMatch:then
                      $2770 = { (responsible $2771) ->
                        $2772 = call $160 with $2767 $188 ($1019 is responsible)
                        $2773 = call $164 with $2751 $1103 ($1019 is responsible)
                        # Core:iterator:where:17:2:3:6:5:hasKey:then
                        $2774 = { (responsible $2775) ->
                          $2776 = call $163 with $2751 $1103 ($1019 is responsible)
                          $2777 = ($178, $2776)
                        }
                        # Core:iterator:where:17:2:3:6:5:hasKey:else
                        $2778 = { (responsible $2779) ->
                          $2780 = call $169 with $2751 ($1019 is responsible)
                          $2781 = call $168 with $1118 $2780 ($1019 is responsible)
                          $2782 = call $168 with $2781 $210 ($1019 is responsible)
                          $2783 = ($180, $2782)
                        }
                        $2784 = call $153 with $2773 $2774 $2778 ($1019 is responsible)
                        $2785 = call $160 with $2784 $187 ($1019 is responsible)
                        $2786 = call $151 with $2785 $178 ($1019 is responsible)
                        # Core:iterator:where:17:2:3:6:5:isMatch:then
                        $2787 = { (responsible $2788) ->
                          $2789 = call $160 with $2784 $188 ($1019 is responsible)
                          $2790 = ($178, $2772, $2789)
                        }
                        # Core:iterator:where:17:2:3:6:5:isMatch:else
                        $2791 = { (responsible $2792) ->
                          $2793 = $2784
                        }
                        $2794 = call $153 with $2786 $2787 $2791 ($1019 is responsible)
                      }
                      # Core:iterator:where:17:2:3:6:5:isMatch:else
                      $2795 = { (responsible $2796) ->
                        $2797 = $2767
                      }
                      $2798 = call $153 with $2769 $2770 $2795 ($1019 is responsible)
                    }
                    # Core:iterator:where:17:2:3:6:5:equals:else
                    $2799 = { (responsible $2800) ->
                      $2801 = call $169 with $2752 ($1019 is responsible)
                      $2802 = call $168 with $202 $2801 ($1019 is responsible)
                      $2803 = call $168 with $2802 $210 ($1019 is responsible)
                      $2804 = ($180, $2803)
                    }
                    $2805 = call $153 with $2753 $2754 $2799 ($1019 is responsible)
                  }
                  # Core:iterator:where:17:2:3:6:5:equals:else
                  $2806 = { (responsible $2807) ->
                    $2808 = call $169 with $2747 ($1019 is responsible)
                    $2809 = $809
                  }
                  $2810 = call $153 with $2748 $2749 $2806 ($1019 is responsible)
                }
                # Core:iterator:where:17:2:3:6:5:equals:else
                $2811 = { (responsible $2812) ->
                  $2813 = call $169 with $2743 ($1019 is responsible)
                  $2814 = call $168 with $1110 $2813 ($1019 is responsible)
                  $2815 = call $168 with $2814 $195 ($1019 is responsible)
                  $2816 = ($180, $2815)
                }
                $2817 = call $153 with $2744 $2745 $2811 ($1019 is responsible)
              }
              # Core:iterator:where:17:2:3:6:5:equals:else
              $2818 = { (responsible $2819) ->
                $2820 = call $169 with $2739 ($1019 is responsible)
                $2821 = call $168 with $203 $2820 ($1019 is responsible)
                $2822 = call $168 with $2821 $210 ($1019 is responsible)
                $2823 = ($180, $2822)
              }
              $2824 = call $153 with $2740 $2741 $2818 ($1019 is responsible)
              $2825 = call $160 with $2824 $187 ($1019 is responsible)
              $2826 = call $151 with $2825 $178 ($1019 is responsible)
              # Core:iterator:where:17:2:3:6:5:case-1:matched
              $2827 = { (responsible $2828) ->
                $2829 = call $160 with $2824 $188 ($1020 is responsible)
                $2830 = call $160 with $2824 $189 ($1021 is responsible)
                $2831 = [$1098: $2829, $1104: $2830]
                $2832 = More $2831
              }
              # Core:iterator:where:17:2:3:6:5:case-1:didNotMatch
              $2833 = { (responsible $2834) ->
                $2835 = call $160 with $2824 $188 ($1019 is responsible)
                $2836 = panicking because $205 ($1019 is at fault)
              }
              $2837 = call $153 with $2826 $2827 $2833 ($1019 is responsible)
            }
            $2838 = call $153 with $2735 $1387 $2736 ($1019 is responsible)
          }
          $2839 = call $424 with $2717 $2718 $2722 ($1022 is responsible)
        }
        # Core:iterator:where:17:2:3:case-1:didNotMatch
        $2840 = { (responsible $2841) ->
          $2842 = call $160 with $2710 $188 ($1015 is responsible)
          $2843 = panicking because $205 ($1015 is at fault)
        }
        $2844 = call $153 with $2712 $2713 $2840 ($1015 is responsible)
      }
      $2845 = call $153 with $2621 $1387 $2622 ($1015 is responsible)
    }
    $2846 = call $1633 with $2606 $2608 ($1025 is responsible)
  }
  $2847 = call $744 with $2604 ($123 is responsible)
  $2848 = call $253 with $2847 $206 $1026 ($119 is responsible)
  # Core:controlFlow:recursive:16
  $2849 = { $2850 $2851 (+ responsible $2852) ->
    # Core:controlFlow:recursive:16:0
    $2853 = { $2854 (+ responsible $2855) ->
      $2856 = call $2850 with $2850 $2854 ($120 is responsible)
    }
    $2857 = call $2604 with $2853 $2851 ($121 is responsible)
  }
  $2858 = call $2849 with $2849 $2601 ($122 is responsible)
}
# Core:iterator:takeWhile
$2859 = { $2860 $2861 (+ responsible $2862) ->
  # Core:iterator:takeWhile:2
  $2863 = { (responsible $2864) ->
    $2865 = panicking because $1160 ($2862 is at fault)
  }
  $2866 = call $1390 with $2860 $2863 ($1001 is responsible)
  # Core:iterator:takeWhile:7
  $2867 = { $2868 (+ responsible $2869) ->
    $2870 = call $1584 with $2868 ($1002 is responsible)
    $2871 = call $151 with $1095 $2870 ($1003 is responsible)
    # Core:iterator:takeWhile:7:3:equals:else
    $2872 = { (responsible $2873) ->
      $2874 = call $169 with $2870 ($1003 is responsible)
      $2875 = call $168 with $1112 $2874 ($1003 is responsible)
      $2876 = call $168 with $2875 $210 ($1003 is responsible)
      $2877 = ($180, $2876)
    }
    $2878 = call $153 with $2871 $278 $2872 ($1003 is responsible)
    $2879 = call $160 with $2878 $187 ($1003 is responsible)
    $2880 = call $151 with $2879 $178 ($1003 is responsible)
    # Core:iterator:takeWhile:7:3:case-0:didNotMatch
    $2881 = { (responsible $2882) ->
      $2883 = call $160 with $2878 $188 ($1003 is responsible)
      $2884 = call $170 with $2870 ($1003 is responsible)
      $2885 = call $151 with $184 $2884 ($1003 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $2886 = { (responsible $2887) ->
        $2888 = call $167 with $2870 ($1003 is responsible)
        $2889 = call $151 with $1100 $2888 ($1003 is responsible)
        # Core:iterator:takeWhile:7:3:equals:then
        $2890 = { (responsible $2891) ->
          $2892 = call $166 with $2870 ($1003 is responsible)
          $2893 = call $151 with $186 $2892 ($1003 is responsible)
          # Core:iterator:takeWhile:7:3:equals:then
          $2894 = { (responsible $2895) ->
            $2896 = call $165 with $2870 ($1003 is responsible)
            $2897 = call $170 with $2896 ($1003 is responsible)
            $2898 = call $151 with $183 $2897 ($1003 is responsible)
            # Core:iterator:takeWhile:7:3:equals:then
            $2899 = { (responsible $2900) ->
              $2901 = call $164 with $2896 $1098 ($1003 is responsible)
              # Core:iterator:takeWhile:7:3:hasKey:then
              $2902 = { (responsible $2903) ->
                $2904 = call $163 with $2896 $1098 ($1003 is responsible)
                $2905 = ($178, $2904)
              }
              # Core:iterator:takeWhile:7:3:hasKey:else
              $2906 = { (responsible $2907) ->
                $2908 = call $169 with $2896 ($1003 is responsible)
                $2909 = call $168 with $1115 $2908 ($1003 is responsible)
                $2910 = call $168 with $2909 $210 ($1003 is responsible)
                $2911 = ($180, $2910)
              }
              $2912 = call $153 with $2901 $2902 $2906 ($1003 is responsible)
              $2913 = call $160 with $2912 $187 ($1003 is responsible)
              $2914 = call $151 with $2913 $178 ($1003 is responsible)
              # Core:iterator:takeWhile:7:3:isMatch:then
              $2915 = { (responsible $2916) ->
                $2917 = call $160 with $2912 $188 ($1003 is responsible)
                $2918 = call $164 with $2896 $1103 ($1003 is responsible)
                # Core:iterator:takeWhile:7:3:hasKey:then
                $2919 = { (responsible $2920) ->
                  $2921 = call $163 with $2896 $1103 ($1003 is responsible)
                  $2922 = ($178, $2921)
                }
                # Core:iterator:takeWhile:7:3:hasKey:else
                $2923 = { (responsible $2924) ->
                  $2925 = call $169 with $2896 ($1003 is responsible)
                  $2926 = call $168 with $1118 $2925 ($1003 is responsible)
                  $2927 = call $168 with $2926 $210 ($1003 is responsible)
                  $2928 = ($180, $2927)
                }
                $2929 = call $153 with $2918 $2919 $2923 ($1003 is responsible)
                $2930 = call $160 with $2929 $187 ($1003 is responsible)
                $2931 = call $151 with $2930 $178 ($1003 is responsible)
                # Core:iterator:takeWhile:7:3:isMatch:then
                $2932 = { (responsible $2933) ->
                  $2934 = call $160 with $2929 $188 ($1003 is responsible)
                  $2935 = ($178, $2917, $2934)
                }
                # Core:iterator:takeWhile:7:3:isMatch:else
                $2936 = { (responsible $2937) ->
                  $2938 = $2929
                }
                $2939 = call $153 with $2931 $2932 $2936 ($1003 is responsible)
              }
              # Core:iterator:takeWhile:7:3:isMatch:else
              $2940 = { (responsible $2941) ->
                $2942 = $2912
              }
              $2943 = call $153 with $2914 $2915 $2940 ($1003 is responsible)
            }
            # Core:iterator:takeWhile:7:3:equals:else
            $2944 = { (responsible $2945) ->
              $2946 = call $169 with $2897 ($1003 is responsible)
              $2947 = call $168 with $202 $2946 ($1003 is responsible)
              $2948 = call $168 with $2947 $210 ($1003 is responsible)
              $2949 = ($180, $2948)
            }
            $2950 = call $153 with $2898 $2899 $2944 ($1003 is responsible)
          }
          # Core:iterator:takeWhile:7:3:equals:else
          $2951 = { (responsible $2952) ->
            $2953 = call $169 with $2892 ($1003 is responsible)
            $2954 = $809
          }
          $2955 = call $153 with $2893 $2894 $2951 ($1003 is responsible)
        }
        # Core:iterator:takeWhile:7:3:equals:else
        $2956 = { (responsible $2957) ->
          $2958 = call $169 with $2888 ($1003 is responsible)
          $2959 = call $168 with $1110 $2958 ($1003 is responsible)
          $2960 = call $168 with $2959 $195 ($1003 is responsible)
          $2961 = ($180, $2960)
        }
        $2962 = call $153 with $2889 $2890 $2956 ($1003 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $2963 = { (responsible $2964) ->
        $2965 = call $169 with $2884 ($1003 is responsible)
        $2966 = call $168 with $203 $2965 ($1003 is responsible)
        $2967 = call $168 with $2966 $210 ($1003 is responsible)
        $2968 = ($180, $2967)
      }
      $2969 = call $153 with $2885 $2886 $2963 ($1003 is responsible)
      $2970 = call $160 with $2969 $187 ($1003 is responsible)
      $2971 = call $151 with $2970 $178 ($1003 is responsible)
      # Core:iterator:takeWhile:7:3:case-1:matched
      $2972 = { (responsible $2973) ->
        $2974 = call $160 with $2969 $188 ($1006 is responsible)
        $2975 = call $160 with $2969 $189 ($1007 is responsible)
        $2976 = call $2861 with $2974 ($1004 is responsible)
        # Core:iterator:takeWhile:7:3:5
        $2977 = { (responsible $2978) ->
          $2979 = [$1098: $2974, $1104: $2975]
          $2980 = More $2979
        }
        $2981 = call $424 with $2976 $2977 $1387 ($1005 is responsible)
      }
      # Core:iterator:takeWhile:7:3:case-1:didNotMatch
      $2982 = { (responsible $2983) ->
        $2984 = call $160 with $2969 $188 ($1003 is responsible)
        $2985 = panicking because $205 ($1003 is at fault)
      }
      $2986 = call $153 with $2971 $2972 $2982 ($1003 is responsible)
    }
    $2987 = call $153 with $2880 $1387 $2881 ($1003 is responsible)
  }
  $2988 = call $1633 with $2866 $2867 ($1008 is responsible)
}
# Core:iterator:withIndex:2
$2989 = { (responsible $2990) ->
  $2991 = panicking because $1166 ($992 is at fault)
}
# Core:iterator:take:30
$2992 = { $2993 (+ responsible $2994) ->
  $2995 = call $170 with $2993 ($68 is responsible)
  $2996 = call $151 with $2995 $183 ($69 is responsible)
  $2997 = call $253 with $2996 $243 $998 ($63 is responsible)
  $2998 = call $164 with $2993 $1098 ($60 is responsible)
  $2999 = call $253 with $2998 $244 $998 ($61 is responsible)
  $3000 = call $163 with $2993 $1098 ($62 is responsible)
}
# Core:iterator:take
$3001 = { $3002 $3003 (+ responsible $3004) ->
  $3005 = call $170 with $3003 ($70 is responsible)
  $3006 = call $151 with $3005 $175 ($1 is responsible)
  $3007 = call $253 with $3006 $1142 $3004 ($1000 is responsible)
  $3008 = call $798 with $3003 ($989 is responsible)
  $3009 = call $253 with $3008 $1146 $3004 ($990 is responsible)
  # Core:iterator:take:22
  $3010 = { (responsible $3011) ->
    $3012 = panicking because $1161 ($3004 is at fault)
  }
  $3013 = call $1390 with $3002 $3010 ($991 is responsible)
  $3014 = call $1390 with $3013 $2989 ($1053 is responsible)
  $3015 = [$1099: $3014, $1097: $187]
  $3016 = call $1633 with $3015 $1949 ($1052 is responsible)
  # Core:iterator:take:27
  $3017 = { $3018 (+ responsible $3019) ->
    $3020 = call $170 with $3018 ($993 is responsible)
    $3021 = call $151 with $183 $3020 ($993 is responsible)
    # Core:iterator:take:27:1:equals:then
    $3022 = { (responsible $3023) ->
      $3024 = call $164 with $3018 $1098 ($993 is responsible)
      # Core:iterator:take:27:1:hasKey:then
      $3025 = { (responsible $3026) ->
        $3027 = call $163 with $3018 $1098 ($993 is responsible)
        $3028 = ($178, $3027)
      }
      # Core:iterator:take:27:1:hasKey:else
      $3029 = { (responsible $3030) ->
        $3031 = call $169 with $3018 ($993 is responsible)
        $3032 = call $168 with $1115 $3031 ($993 is responsible)
        $3033 = call $168 with $3032 $210 ($993 is responsible)
        $3034 = ($180, $3033)
      }
      $3035 = call $153 with $3024 $3025 $3029 ($993 is responsible)
      $3036 = call $160 with $3035 $187 ($993 is responsible)
      $3037 = call $151 with $3036 $178 ($993 is responsible)
      # Core:iterator:take:27:1:isMatch:then
      $3038 = { (responsible $3039) ->
        $3040 = call $160 with $3035 $188 ($993 is responsible)
        $3041 = call $164 with $3018 $1097 ($993 is responsible)
        # Core:iterator:take:27:1:hasKey:then
        $3042 = { (responsible $3043) ->
          $3044 = call $163 with $3018 $1097 ($993 is responsible)
          $3045 = ($178, $3044)
        }
        # Core:iterator:take:27:1:hasKey:else
        $3046 = { (responsible $3047) ->
          $3048 = call $169 with $3018 ($993 is responsible)
          $3049 = call $168 with $1114 $3048 ($993 is responsible)
          $3050 = call $168 with $3049 $210 ($993 is responsible)
          $3051 = ($180, $3050)
        }
        $3052 = call $153 with $3041 $3042 $3046 ($993 is responsible)
        $3053 = call $160 with $3052 $187 ($993 is responsible)
        $3054 = call $151 with $3053 $178 ($993 is responsible)
        # Core:iterator:take:27:1:isMatch:then
        $3055 = { (responsible $3056) ->
          $3057 = call $160 with $3052 $188 ($993 is responsible)
          $3058 = ($178, $3040, $3057)
        }
        # Core:iterator:take:27:1:isMatch:else
        $3059 = { (responsible $3060) ->
          $3061 = $3052
        }
        $3062 = call $153 with $3054 $3055 $3059 ($993 is responsible)
      }
      # Core:iterator:take:27:1:isMatch:else
      $3063 = { (responsible $3064) ->
        $3065 = $3035
      }
      $3066 = call $153 with $3037 $3038 $3063 ($993 is responsible)
    }
    # Core:iterator:take:27:1:equals:else
    $3067 = { (responsible $3068) ->
      $3069 = call $169 with $3020 ($993 is responsible)
      $3070 = call $168 with $202 $3069 ($993 is responsible)
      $3071 = call $168 with $3070 $210 ($993 is responsible)
      $3072 = ($180, $3071)
    }
    $3073 = call $153 with $3021 $3022 $3067 ($993 is responsible)
    $3074 = call $160 with $3073 $187 ($993 is responsible)
    $3075 = call $151 with $3074 $178 ($993 is responsible)
    # Core:iterator:take:27:1:isMatch:else
    $3076 = { (responsible $3077) ->
      $3078 = call $160 with $3073 $188 ($993 is responsible)
      $3079 = panicking because $3078 ($993 is at fault)
    }
    $3080 = call $153 with $3075 $250 $3076 ($993 is responsible)
    $3081 = call $160 with $3073 $188 ($996 is responsible)
    $3082 = call $160 with $3073 $189 ($995 is responsible)
    $3083 = call $774 with $3082 $3003 ($994 is responsible)
  }
  $3084 = call $2859 with $3016 $3017 ($997 is responsible)
  $3085 = call $1820 with $3084 $2992 ($999 is responsible)
}
# Core:iterator:skip:26:6
$3086 = { $3087 $3088 (+ responsible $3089) ->
  $3090 = call $170 with $3088 ($971 is responsible)
  $3091 = call $151 with $183 $3090 ($971 is responsible)
  # Core:iterator:skip:26:6:1:equals:then
  $3092 = { (responsible $3093) ->
    $3094 = call $164 with $3088 $1099 ($971 is responsible)
    # Core:iterator:skip:26:6:1:hasKey:then
    $3095 = { (responsible $3096) ->
      $3097 = call $163 with $3088 $1099 ($971 is responsible)
      $3098 = ($178, $3097)
    }
    # Core:iterator:skip:26:6:1:hasKey:else
    $3099 = { (responsible $3100) ->
      $3101 = call $169 with $3088 ($971 is responsible)
      $3102 = call $168 with $1116 $3101 ($971 is responsible)
      $3103 = call $168 with $3102 $210 ($971 is responsible)
      $3104 = ($180, $3103)
    }
    $3105 = call $153 with $3094 $3095 $3099 ($971 is responsible)
    $3106 = call $160 with $3105 $187 ($971 is responsible)
    $3107 = call $151 with $3106 $178 ($971 is responsible)
    # Core:iterator:skip:26:6:1:isMatch:then
    $3108 = { (responsible $3109) ->
      $3110 = call $160 with $3105 $188 ($971 is responsible)
      $3111 = call $164 with $3088 $1101 ($971 is responsible)
      # Core:iterator:skip:26:6:1:hasKey:then
      $3112 = { (responsible $3113) ->
        $3114 = call $163 with $3088 $1101 ($971 is responsible)
        $3115 = ($178, $3114)
      }
      # Core:iterator:skip:26:6:1:hasKey:else
      $3116 = { (responsible $3117) ->
        $3118 = call $169 with $3088 ($971 is responsible)
        $3119 = call $168 with $1117 $3118 ($971 is responsible)
        $3120 = call $168 with $3119 $210 ($971 is responsible)
        $3121 = ($180, $3120)
      }
      $3122 = call $153 with $3111 $3112 $3116 ($971 is responsible)
      $3123 = call $160 with $3122 $187 ($971 is responsible)
      $3124 = call $151 with $3123 $178 ($971 is responsible)
      # Core:iterator:skip:26:6:1:isMatch:then
      $3125 = { (responsible $3126) ->
        $3127 = call $160 with $3122 $188 ($971 is responsible)
        $3128 = ($178, $3110, $3127)
      }
      # Core:iterator:skip:26:6:1:isMatch:else
      $3129 = { (responsible $3130) ->
        $3131 = $3122
      }
      $3132 = call $153 with $3124 $3125 $3129 ($971 is responsible)
    }
    # Core:iterator:skip:26:6:1:isMatch:else
    $3133 = { (responsible $3134) ->
      $3135 = $3105
    }
    $3136 = call $153 with $3107 $3108 $3133 ($971 is responsible)
  }
  # Core:iterator:skip:26:6:1:equals:else
  $3137 = { (responsible $3138) ->
    $3139 = call $169 with $3090 ($971 is responsible)
    $3140 = call $168 with $202 $3139 ($971 is responsible)
    $3141 = call $168 with $3140 $210 ($971 is responsible)
    $3142 = ($180, $3141)
  }
  $3143 = call $153 with $3091 $3092 $3137 ($971 is responsible)
  $3144 = call $160 with $3143 $187 ($971 is responsible)
  $3145 = call $151 with $3144 $178 ($971 is responsible)
  # Core:iterator:skip:26:6:1:isMatch:else
  $3146 = { (responsible $3147) ->
    $3148 = call $160 with $3143 $188 ($971 is responsible)
    $3149 = panicking because $3148 ($971 is at fault)
  }
  $3150 = call $153 with $3145 $250 $3146 ($971 is responsible)
  $3151 = call $160 with $3143 $188 ($979 is responsible)
  $3152 = call $160 with $3143 $189 ($980 is responsible)
  $3153 = call $151 with $3152 $187 ($1 is responsible)
  # Core:iterator:skip:26:6:7
  $3154 = { (responsible $3155) ->
    $3156 = call $1584 with $3151 ($972 is responsible)
  }
  # Core:iterator:skip:26:6:8
  $3157 = { (responsible $3158) ->
    $3159 = call $1584 with $3151 ($973 is responsible)
    $3160 = call $151 with $1095 $3159 ($974 is responsible)
    # Core:iterator:skip:26:6:8:3:equals:else
    $3161 = { (responsible $3162) ->
      $3163 = call $169 with $3159 ($974 is responsible)
      $3164 = call $168 with $1112 $3163 ($974 is responsible)
      $3165 = call $168 with $3164 $210 ($974 is responsible)
      $3166 = ($180, $3165)
    }
    $3167 = call $153 with $3160 $278 $3161 ($974 is responsible)
    $3168 = call $160 with $3167 $187 ($974 is responsible)
    $3169 = call $151 with $3168 $178 ($974 is responsible)
    # Core:iterator:skip:26:6:8:3:case-0:didNotMatch
    $3170 = { (responsible $3171) ->
      $3172 = call $160 with $3167 $188 ($974 is responsible)
      $3173 = call $170 with $3159 ($974 is responsible)
      $3174 = call $151 with $184 $3173 ($974 is responsible)
      # Core:iterator:skip:26:6:8:3:equals:then
      $3175 = { (responsible $3176) ->
        $3177 = call $167 with $3159 ($974 is responsible)
        $3178 = call $151 with $1100 $3177 ($974 is responsible)
        # Core:iterator:skip:26:6:8:3:equals:then
        $3179 = { (responsible $3180) ->
          $3181 = call $166 with $3159 ($974 is responsible)
          $3182 = call $151 with $186 $3181 ($974 is responsible)
          # Core:iterator:skip:26:6:8:3:equals:then
          $3183 = { (responsible $3184) ->
            $3185 = call $165 with $3159 ($974 is responsible)
            $3186 = call $170 with $3185 ($974 is responsible)
            $3187 = call $151 with $183 $3186 ($974 is responsible)
            # Core:iterator:skip:26:6:8:3:equals:then
            $3188 = { (responsible $3189) ->
              $3190 = call $164 with $3185 $1103 ($974 is responsible)
              # Core:iterator:skip:26:6:8:3:hasKey:then
              $3191 = { (responsible $3192) ->
                $3193 = call $163 with $3185 $1103 ($974 is responsible)
                $3194 = ($178, $3193)
              }
              # Core:iterator:skip:26:6:8:3:hasKey:else
              $3195 = { (responsible $3196) ->
                $3197 = call $169 with $3185 ($974 is responsible)
                $3198 = call $168 with $1118 $3197 ($974 is responsible)
                $3199 = call $168 with $3198 $210 ($974 is responsible)
                $3200 = ($180, $3199)
              }
              $3201 = call $153 with $3190 $3191 $3195 ($974 is responsible)
              $3202 = call $160 with $3201 $187 ($974 is responsible)
              $3203 = call $151 with $3202 $178 ($974 is responsible)
              # Core:iterator:skip:26:6:8:3:isMatch:then
              $3204 = { (responsible $3205) ->
                $3206 = call $160 with $3201 $188 ($974 is responsible)
                $3207 = ($178, $3206)
              }
              # Core:iterator:skip:26:6:8:3:isMatch:else
              $3208 = { (responsible $3209) ->
                $3210 = $3201
              }
              $3211 = call $153 with $3203 $3204 $3208 ($974 is responsible)
            }
            # Core:iterator:skip:26:6:8:3:equals:else
            $3212 = { (responsible $3213) ->
              $3214 = call $169 with $3186 ($974 is responsible)
              $3215 = call $168 with $202 $3214 ($974 is responsible)
              $3216 = call $168 with $3215 $210 ($974 is responsible)
              $3217 = ($180, $3216)
            }
            $3218 = call $153 with $3187 $3188 $3212 ($974 is responsible)
          }
          # Core:iterator:skip:26:6:8:3:equals:else
          $3219 = { (responsible $3220) ->
            $3221 = call $169 with $3181 ($974 is responsible)
            $3222 = $809
          }
          $3223 = call $153 with $3182 $3183 $3219 ($974 is responsible)
        }
        # Core:iterator:skip:26:6:8:3:equals:else
        $3224 = { (responsible $3225) ->
          $3226 = call $169 with $3177 ($974 is responsible)
          $3227 = call $168 with $1110 $3226 ($974 is responsible)
          $3228 = call $168 with $3227 $195 ($974 is responsible)
          $3229 = ($180, $3228)
        }
        $3230 = call $153 with $3178 $3179 $3224 ($974 is responsible)
      }
      # Core:iterator:skip:26:6:8:3:equals:else
      $3231 = { (responsible $3232) ->
        $3233 = call $169 with $3173 ($974 is responsible)
        $3234 = call $168 with $203 $3233 ($974 is responsible)
        $3235 = call $168 with $3234 $210 ($974 is responsible)
        $3236 = ($180, $3235)
      }
      $3237 = call $153 with $3174 $3175 $3231 ($974 is responsible)
      $3238 = call $160 with $3237 $187 ($974 is responsible)
      $3239 = call $151 with $3238 $178 ($974 is responsible)
      # Core:iterator:skip:26:6:8:3:case-1:matched
      $3240 = { (responsible $3241) ->
        $3242 = call $160 with $3237 $188 ($977 is responsible)
        $3243 = call $170 with $3152 ($68 is responsible)
        $3244 = call $151 with $3243 $175 ($69 is responsible)
        $3245 = call $253 with $3244 $242 $975 ($33 is responsible)
        $3246 = call $159 with $3152 $188 ($32 is responsible)
        $3247 = [$1099: $3242, $1101: $3246]
        $3248 = call $3087 with $3247 ($976 is responsible)
      }
      # Core:iterator:skip:26:6:8:3:case-1:didNotMatch
      $3249 = { (responsible $3250) ->
        $3251 = call $160 with $3237 $188 ($974 is responsible)
        $3252 = panicking because $205 ($974 is at fault)
      }
      $3253 = call $153 with $3239 $3240 $3249 ($974 is responsible)
    }
    $3254 = call $153 with $3169 $1387 $3170 ($974 is responsible)
  }
  $3255 = call $424 with $3153 $3154 $3157 ($978 is responsible)
}
# Core:controlFlow:recursive:16
$3256 = { $3257 $3258 (+ responsible $3259) ->
  # Core:controlFlow:recursive:16:0
  $3260 = { $3261 (+ responsible $3262) ->
    $3263 = call $3257 with $3257 $3261 ($120 is responsible)
  }
  $3264 = call $3086 with $3260 $3258 ($121 is responsible)
}
# Core:iterator:skip
$3265 = { $3266 $3267 (+ responsible $3268) ->
  # Core:iterator:skip:2
  $3269 = { (responsible $3270) ->
    $3271 = panicking because $1158 ($3268 is at fault)
  }
  $3272 = call $1390 with $3266 $3269 ($982 is responsible)
  $3273 = call $170 with $3267 ($70 is responsible)
  $3274 = call $151 with $3273 $175 ($1 is responsible)
  $3275 = call $253 with $3274 $1142 $3268 ($968 is responsible)
  $3276 = call $798 with $3267 ($969 is responsible)
  $3277 = call $253 with $3276 $1146 $3268 ($970 is responsible)
  # Core:iterator:skip:26
  $3278 = { (responsible $3279) ->
    $3280 = [$1099: $3272, $1101: $3267]
    $3281 = call $744 with $3086 ($123 is responsible)
    $3282 = call $253 with $3281 $206 $981 ($119 is responsible)
    $3283 = call $3256 with $3256 $3280 ($122 is responsible)
  }
  $3284 = Iterator $3278
}
# Core:iterator:fromList
$3285 = { $3286 (+ responsible $3287) ->
  $3288 = call $170 with $3286 ($70 is responsible)
  $3289 = call $151 with $3288 $177 ($1 is responsible)
  $3290 = call $253 with $3289 $1154 $3287 ($911 is responsible)
  $3291 = call $170 with $3286 ($68 is responsible)
  $3292 = call $151 with $3291 $177 ($69 is responsible)
  $3293 = call $253 with $3292 $241 $908 ($58 is responsible)
  $3294 = call $162 with $3286 ($57 is responsible)
  # Core:iterator:fromList:19
  $3295 = { $3296 (+ responsible $3297) ->
    $3298 = call $494 with $3286 $3296 ($909 is responsible)
  }
  $3299 = call $1787 with $3294 $3295 ($910 is responsible)
}
$3300 = (,)
# Core:iterator:toList:6
$3301 = { $3302 $3303 (+ responsible $3304) ->
  $3305 = call $1375 with $3302 $3303 ($1010 is responsible)
}
# Core:iterator:toList:2
$3306 = { (responsible $3307) ->
  $3308 = panicking because $1163 ($1042 is at fault)
}
# Core:iterator:windowed
$3309 = { $3310 $3311 $3312 $3313 (+ responsible $3314) ->
  # Core:iterator:windowed:2
  $3315 = { (responsible $3316) ->
    $3317 = panicking because $1165 ($3314 is at fault)
  }
  $3318 = call $1390 with $3310 $3315 ($1031 is responsible)
  $3319 = call $170 with $3311 ($70 is responsible)
  $3320 = call $151 with $3319 $175 ($1 is responsible)
  $3321 = call $253 with $3320 $1143 $3314 ($1028 is responsible)
  $3322 = call $170 with $3311 ($70 is responsible)
  $3323 = call $151 with $3322 $175 ($1 is responsible)
  $3324 = call $253 with $3323 $238 $1029 ($848 is responsible)
  $3325 = call $786 with $3311 $187 ($849 is responsible)
  $3326 = call $253 with $3325 $1147 $3314 ($1030 is responsible)
  $3327 = call $170 with $3312 ($70 is responsible)
  $3328 = call $151 with $3327 $175 ($1 is responsible)
  $3329 = call $253 with $3328 $1144 $3314 ($1032 is responsible)
  $3330 = call $170 with $3312 ($70 is responsible)
  $3331 = call $151 with $3330 $175 ($1 is responsible)
  $3332 = call $253 with $3331 $238 $1033 ($848 is responsible)
  $3333 = call $786 with $3312 $187 ($849 is responsible)
  $3334 = call $253 with $3333 $1148 $3314 ($1034 is responsible)
  $3335 = call $560 with $3313 ($1035 is responsible)
  $3336 = call $253 with $3335 $1126 $3314 ($1036 is responsible)
  # Core:iterator:windowed:57
  $3337 = { $3338 (+ responsible $3339) ->
    $3340 = call $3001 with $3338 $3311 ($1041 is responsible)
    $3341 = call $1390 with $3340 $3306 ($1009 is responsible)
    $3342 = call $2152 with $3341 $3300 $3301 ($1011 is responsible)
    $3343 = call $170 with $3342 ($68 is responsible)
    $3344 = call $151 with $3343 $177 ($69 is responsible)
    $3345 = call $253 with $3344 $241 $1037 ($58 is responsible)
    $3346 = call $162 with $3342 ($57 is responsible)
    # Core:iterator:windowed:57:18
    $3347 = { (responsible $3348) ->
      $3349 = call $786 with $3346 $187 ($849 is responsible)
    }
    # Core:iterator:windowed:57:19
    $3350 = { (responsible $3351) ->
      $3352 = call $151 with $3346 $3311 ($1 is responsible)
    }
    $3353 = call $424 with $3313 $3347 $3350 ($1038 is responsible)
    # Core:iterator:windowed:57:24
    $3354 = { (responsible $3355) ->
      $3356 = call $3265 with $3338 $3312 ($1039 is responsible)
      $3357 = [$1104: $3356, $1098: $3342]
      $3358 = More $3357
    }
    $3359 = call $424 with $3353 $3354 $1387 ($1040 is responsible)
  }
  $3360 = call $1633 with $3318 $3337 ($1043 is responsible)
}
# Core:iterator:chunked
$3361 = { $3362 $3363 (+ responsible $3364) ->
  $3365 = call $170 with $3363 ($70 is responsible)
  $3366 = call $151 with $3365 $175 ($1 is responsible)
  $3367 = call $253 with $3366 $1143 $3364 ($889 is responsible)
  $3368 = call $170 with $3363 ($70 is responsible)
  $3369 = call $151 with $3368 $175 ($1 is responsible)
  $3370 = call $253 with $3369 $238 $885 ($848 is responsible)
  $3371 = call $786 with $3363 $187 ($849 is responsible)
  $3372 = call $253 with $3371 $1147 $3364 ($886 is responsible)
  # Core:iterator:chunked:22
  $3373 = { (responsible $3374) ->
    $3375 = panicking because $1128 ($3364 is at fault)
  }
  $3376 = call $1390 with $3362 $3373 ($887 is responsible)
  $3377 = call $3309 with $3376 $3363 $3363 $186 ($888 is responsible)
}
$3378 = ($188, $189, $190)
$3379 = call $3285 with $3378 ($868 is responsible)
$3380 = 6
$3381 = 7
$3382 = 8
$3383 = 9
$3384 = ($188, $189, $190, $191, $192, $3380, $3381, $3382, $3383, $193)
$3385 = Core:iterator:125
$3386 = call $3285 with $3384 ($3385 is responsible)
$3387 = Core:iterator:129
$3388 = call $1584 with $3379 ($3387 is responsible)
$3389 = Core:iterator:130
$3390 = call $170 with $3388 ($3389 is responsible)
$3391 = call $151 with $184 $3390 ($3389 is responsible)
# Core:iterator:130:equals:then
$3392 = { (responsible $3393) ->
  $3394 = call $167 with $3388 ($3389 is responsible)
  $3395 = call $151 with $1100 $3394 ($3389 is responsible)
  # Core:iterator:130:equals:then
  $3396 = { (responsible $3397) ->
    $3398 = call $166 with $3388 ($3389 is responsible)
    $3399 = call $151 with $186 $3398 ($3389 is responsible)
    # Core:iterator:130:equals:then
    $3400 = { (responsible $3401) ->
      $3402 = call $165 with $3388 ($3389 is responsible)
      $3403 = call $170 with $3402 ($3389 is responsible)
      $3404 = call $151 with $183 $3403 ($3389 is responsible)
      # Core:iterator:130:equals:then
      $3405 = { (responsible $3406) ->
        $3407 = call $164 with $3402 $1098 ($3389 is responsible)
        # Core:iterator:130:hasKey:then
        $3408 = { (responsible $3409) ->
          $3410 = call $163 with $3402 $1098 ($3389 is responsible)
          $3411 = ($178, $3410)
        }
        # Core:iterator:130:hasKey:else
        $3412 = { (responsible $3413) ->
          $3414 = call $169 with $3402 ($3389 is responsible)
          $3415 = call $168 with $1115 $3414 ($3389 is responsible)
          $3416 = call $168 with $3415 $210 ($3389 is responsible)
          $3417 = ($180, $3416)
        }
        $3418 = call $153 with $3407 $3408 $3412 ($3389 is responsible)
        $3419 = call $160 with $3418 $187 ($3389 is responsible)
        $3420 = call $151 with $3419 $178 ($3389 is responsible)
        # Core:iterator:130:isMatch:then
        $3421 = { (responsible $3422) ->
          $3423 = call $160 with $3418 $188 ($3389 is responsible)
          $3424 = call $164 with $3402 $1103 ($3389 is responsible)
          # Core:iterator:130:hasKey:then
          $3425 = { (responsible $3426) ->
            $3427 = call $163 with $3402 $1103 ($3389 is responsible)
            $3428 = ($178, $3427)
          }
          # Core:iterator:130:hasKey:else
          $3429 = { (responsible $3430) ->
            $3431 = call $169 with $3402 ($3389 is responsible)
            $3432 = call $168 with $1118 $3431 ($3389 is responsible)
            $3433 = call $168 with $3432 $210 ($3389 is responsible)
            $3434 = ($180, $3433)
          }
          $3435 = call $153 with $3424 $3425 $3429 ($3389 is responsible)
          $3436 = call $160 with $3435 $187 ($3389 is responsible)
          $3437 = call $151 with $3436 $178 ($3389 is responsible)
          # Core:iterator:130:isMatch:then
          $3438 = { (responsible $3439) ->
            $3440 = call $160 with $3435 $188 ($3389 is responsible)
            $3441 = ($178, $3423, $3440)
          }
          # Core:iterator:130:isMatch:else
          $3442 = { (responsible $3443) ->
            $3444 = $3435
          }
          $3445 = call $153 with $3437 $3438 $3442 ($3389 is responsible)
        }
        # Core:iterator:130:isMatch:else
        $3446 = { (responsible $3447) ->
          $3448 = $3418
        }
        $3449 = call $153 with $3420 $3421 $3446 ($3389 is responsible)
      }
      # Core:iterator:130:equals:else
      $3450 = { (responsible $3451) ->
        $3452 = call $169 with $3403 ($3389 is responsible)
        $3453 = call $168 with $202 $3452 ($3389 is responsible)
        $3454 = call $168 with $3453 $210 ($3389 is responsible)
        $3455 = ($180, $3454)
      }
      $3456 = call $153 with $3404 $3405 $3450 ($3389 is responsible)
    }
    # Core:iterator:130:equals:else
    $3457 = { (responsible $3458) ->
      $3459 = call $169 with $3398 ($3389 is responsible)
      $3460 = $809
    }
    $3461 = call $153 with $3399 $3400 $3457 ($3389 is responsible)
  }
  # Core:iterator:130:equals:else
  $3462 = { (responsible $3463) ->
    $3464 = call $169 with $3394 ($3389 is responsible)
    $3465 = call $168 with $1110 $3464 ($3389 is responsible)
    $3466 = call $168 with $3465 $195 ($3389 is responsible)
    $3467 = ($180, $3466)
  }
  $3468 = call $153 with $3395 $3396 $3462 ($3389 is responsible)
}
# Core:iterator:130:equals:else
$3469 = { (responsible $3470) ->
  $3471 = call $169 with $3390 ($3389 is responsible)
  $3472 = call $168 with $203 $3471 ($3389 is responsible)
  $3473 = call $168 with $3472 $210 ($3389 is responsible)
  $3474 = ($180, $3473)
}
$3475 = call $153 with $3391 $3392 $3469 ($3389 is responsible)
$3476 = call $160 with $3475 $187 ($3389 is responsible)
$3477 = call $151 with $3476 $178 ($3389 is responsible)
# Core:iterator:130:isMatch:else
$3478 = { (responsible $3479) ->
  $3480 = call $160 with $3475 $188 ($3389 is responsible)
  $3481 = panicking because $3480 ($3389 is at fault)
}
$3482 = call $153 with $3477 $250 $3478 ($3389 is responsible)
$3483 = Core:iterator:item
$3484 = call $160 with $3475 $188 ($3483 is responsible)
$3485 = Core:iterator:rest
$3486 = call $160 with $3475 $189 ($3485 is responsible)
$3487 = Core:iterator:135
$3488 = call $716 with $3484 $188 ($3487 is responsible)
$3489 = Core:iterator:138
$3490 = call $1584 with $3486 ($3489 is responsible)
$3491 = Core:iterator:139
$3492 = call $170 with $3490 ($3491 is responsible)
$3493 = call $151 with $184 $3492 ($3491 is responsible)
# Core:iterator:139:equals:then
$3494 = { (responsible $3495) ->
  $3496 = call $167 with $3490 ($3491 is responsible)
  $3497 = call $151 with $1100 $3496 ($3491 is responsible)
  # Core:iterator:139:equals:then
  $3498 = { (responsible $3499) ->
    $3500 = call $166 with $3490 ($3491 is responsible)
    $3501 = call $151 with $186 $3500 ($3491 is responsible)
    # Core:iterator:139:equals:then
    $3502 = { (responsible $3503) ->
      $3504 = call $165 with $3490 ($3491 is responsible)
      $3505 = call $170 with $3504 ($3491 is responsible)
      $3506 = call $151 with $183 $3505 ($3491 is responsible)
      # Core:iterator:139:equals:then
      $3507 = { (responsible $3508) ->
        $3509 = call $164 with $3504 $1098 ($3491 is responsible)
        # Core:iterator:139:hasKey:then
        $3510 = { (responsible $3511) ->
          $3512 = call $163 with $3504 $1098 ($3491 is responsible)
          $3513 = ($178, $3512)
        }
        # Core:iterator:139:hasKey:else
        $3514 = { (responsible $3515) ->
          $3516 = call $169 with $3504 ($3491 is responsible)
          $3517 = call $168 with $1115 $3516 ($3491 is responsible)
          $3518 = call $168 with $3517 $210 ($3491 is responsible)
          $3519 = ($180, $3518)
        }
        $3520 = call $153 with $3509 $3510 $3514 ($3491 is responsible)
        $3521 = call $160 with $3520 $187 ($3491 is responsible)
        $3522 = call $151 with $3521 $178 ($3491 is responsible)
        # Core:iterator:139:isMatch:then
        $3523 = { (responsible $3524) ->
          $3525 = call $160 with $3520 $188 ($3491 is responsible)
          $3526 = call $164 with $3504 $1103 ($3491 is responsible)
          # Core:iterator:139:hasKey:then
          $3527 = { (responsible $3528) ->
            $3529 = call $163 with $3504 $1103 ($3491 is responsible)
            $3530 = ($178, $3529)
          }
          # Core:iterator:139:hasKey:else
          $3531 = { (responsible $3532) ->
            $3533 = call $169 with $3504 ($3491 is responsible)
            $3534 = call $168 with $1118 $3533 ($3491 is responsible)
            $3535 = call $168 with $3534 $210 ($3491 is responsible)
            $3536 = ($180, $3535)
          }
          $3537 = call $153 with $3526 $3527 $3531 ($3491 is responsible)
          $3538 = call $160 with $3537 $187 ($3491 is responsible)
          $3539 = call $151 with $3538 $178 ($3491 is responsible)
          # Core:iterator:139:isMatch:then
          $3540 = { (responsible $3541) ->
            $3542 = call $160 with $3537 $188 ($3491 is responsible)
            $3543 = ($178, $3525, $3542)
          }
          # Core:iterator:139:isMatch:else
          $3544 = { (responsible $3545) ->
            $3546 = $3537
          }
          $3547 = call $153 with $3539 $3540 $3544 ($3491 is responsible)
        }
        # Core:iterator:139:isMatch:else
        $3548 = { (responsible $3549) ->
          $3550 = $3520
        }
        $3551 = call $153 with $3522 $3523 $3548 ($3491 is responsible)
      }
      # Core:iterator:139:equals:else
      $3552 = { (responsible $3553) ->
        $3554 = call $169 with $3505 ($3491 is responsible)
        $3555 = call $168 with $202 $3554 ($3491 is responsible)
        $3556 = call $168 with $3555 $210 ($3491 is responsible)
        $3557 = ($180, $3556)
      }
      $3558 = call $153 with $3506 $3507 $3552 ($3491 is responsible)
    }
    # Core:iterator:139:equals:else
    $3559 = { (responsible $3560) ->
      $3561 = call $169 with $3500 ($3491 is responsible)
      $3562 = $809
    }
    $3563 = call $153 with $3501 $3502 $3559 ($3491 is responsible)
  }
  # Core:iterator:139:equals:else
  $3564 = { (responsible $3565) ->
    $3566 = call $169 with $3496 ($3491 is responsible)
    $3567 = call $168 with $1110 $3566 ($3491 is responsible)
    $3568 = call $168 with $3567 $195 ($3491 is responsible)
    $3569 = ($180, $3568)
  }
  $3570 = call $153 with $3497 $3498 $3564 ($3491 is responsible)
}
# Core:iterator:139:equals:else
$3571 = { (responsible $3572) ->
  $3573 = call $169 with $3492 ($3491 is responsible)
  $3574 = call $168 with $203 $3573 ($3491 is responsible)
  $3575 = call $168 with $3574 $210 ($3491 is responsible)
  $3576 = ($180, $3575)
}
$3577 = call $153 with $3493 $3494 $3571 ($3491 is responsible)
$3578 = call $160 with $3577 $187 ($3491 is responsible)
$3579 = call $151 with $3578 $178 ($3491 is responsible)
# Core:iterator:139:isMatch:else
$3580 = { (responsible $3581) ->
  $3582 = call $160 with $3577 $188 ($3491 is responsible)
  $3583 = panicking because $3582 ($3491 is at fault)
}
$3584 = call $153 with $3579 $250 $3580 ($3491 is responsible)
$3585 = Core:iterator:item#1
$3586 = call $160 with $3577 $188 ($3585 is responsible)
$3587 = Core:iterator:rest#1
$3588 = call $160 with $3577 $189 ($3587 is responsible)
$3589 = Core:iterator:144
$3590 = call $716 with $3586 $189 ($3589 is responsible)
$3591 = Core:iterator:149
# Core:iterator:isEmpty:2
$3592 = { (responsible $3593) ->
  $3594 = panicking because $1151 ($3591 is at fault)
}
$3595 = call $1390 with $3379 $3592 ($938 is responsible)
$3596 = call $1584 with $3595 ($939 is responsible)
$3597 = call $151 with $3596 $1095 ($1 is responsible)
$3598 = Core:iterator:151
$3599 = call $716 with $3597 $172 ($3598 is responsible)
$3600 = Core:iterator:156
$3601 = call $3285 with $3300 ($3600 is responsible)
$3602 = Core:iterator:157
# Core:iterator:isEmpty:2
$3603 = { (responsible $3604) ->
  $3605 = panicking because $1151 ($3602 is at fault)
}
$3606 = call $1390 with $3601 $3603 ($938 is responsible)
$3607 = call $1584 with $3606 ($939 is responsible)
$3608 = call $151 with $3607 $1095 ($1 is responsible)
$3609 = Core:iterator:159
$3610 = call $716 with $3608 $186 ($3609 is responsible)
$3611 = Core:iterator:163:8
# Core:iterator:163
$3612 = { $3613 (+ responsible $3614) ->
  $3615 = call $170 with $3613 ($68 is responsible)
  $3616 = call $151 with $3615 $175 ($69 is responsible)
  $3617 = call $253 with $3616 $223 $3611 ($31 is responsible)
  $3618 = call $158 with $3613 $189 ($30 is responsible)
}
$3619 = Core:iterator:164
$3620 = call $1820 with $3379 $3612 ($3619 is responsible)
$3621 = Core:iterator:166
# Core:iterator:toList:2
$3622 = { (responsible $3623) ->
  $3624 = panicking because $1163 ($3621 is at fault)
}
$3625 = call $1390 with $3620 $3622 ($1009 is responsible)
$3626 = call $2152 with $3625 $3300 $3301 ($1011 is responsible)
$3627 = ($189, $191, $3380)
$3628 = Core:iterator:171
$3629 = call $716 with $3626 $3627 ($3628 is responsible)
$3630 = Core:iterator:175
$3631 = call $2500 with $3379 ($3630 is responsible)
$3632 = Core:iterator:177
$3633 = call $716 with $3631 $3380 ($3632 is responsible)
$3634 = Core:iterator:181
# Core:iterator:length:2
$3635 = { (responsible $3636) ->
  $3637 = panicking because $1153 ($3634 is at fault)
}
$3638 = call $1390 with $3379 $3635 ($944 is responsible)
$3639 = call $1820 with $3638 $2516 ($945 is responsible)
$3640 = call $2500 with $3639 ($946 is responsible)
$3641 = Core:iterator:183
$3642 = call $716 with $3640 $190 ($3641 is responsible)
$3643 = Core:iterator:187:7
# Core:iterator:187
$3644 = { $3645 (+ responsible $3646) ->
  $3647 = call $170 with $3645 ($70 is responsible)
  $3648 = call $151 with $3647 $175 ($1 is responsible)
  $3649 = call $253 with $3648 $238 $3643 ($848 is responsible)
  $3650 = call $786 with $3645 $187 ($849 is responsible)
}
$3651 = Core:iterator:188
$3652 = call $2520 with $3379 $3644 ($3651 is responsible)
$3653 = Core:iterator:190
$3654 = call $716 with $3652 $186 ($3653 is responsible)
# Core:iterator:194
$3655 = { $3656 (+ responsible $3657) ->
  $3658 = call $151 with $3656 $189 ($1 is responsible)
}
$3659 = Core:iterator:195
$3660 = call $2546 with $3379 $3655 ($3659 is responsible)
$3661 = Core:iterator:197
$3662 = call $716 with $3660 $186 ($3661 is responsible)
$3663 = Core:iterator:202
$3664 = call $1820 with $3379 $531 ($3663 is responsible)
$3665 = Core:iterator:204
$3666 = call $2572 with $3664 ($3665 is responsible)
$3667 = "123"
$3668 = Core:iterator:212
$3669 = call $716 with $3666 $3667 ($3668 is responsible)
$3670 = Core:iterator:216:7
# Core:iterator:216
$3671 = { $3672 (+ responsible $3673) ->
  $3674 = call $857 with $3672 ($3670 is responsible)
}
$3675 = Core:iterator:217
$3676 = call $2594 with $3386 $3671 ($3675 is responsible)
$3677 = Core:iterator:219
# Core:iterator:toList:2
$3678 = { (responsible $3679) ->
  $3680 = panicking because $1163 ($3677 is at fault)
}
$3681 = call $1390 with $3676 $3678 ($1009 is responsible)
$3682 = call $2152 with $3681 $3300 $3301 ($1011 is responsible)
$3683 = ($188, $190, $192, $3381, $3383)
$3684 = Core:iterator:226
$3685 = call $716 with $3682 $3683 ($3684 is responsible)
$3686 = Core:iterator:230:8
# Core:iterator:230
$3687 = { $3688 (+ responsible $3689) ->
  $3690 = call $774 with $3688 $191 ($3686 is responsible)
}
$3691 = Core:iterator:231
$3692 = call $2859 with $3386 $3687 ($3691 is responsible)
$3693 = Core:iterator:233
# Core:iterator:toList:2
$3694 = { (responsible $3695) ->
  $3696 = panicking because $1163 ($3693 is at fault)
}
$3697 = call $1390 with $3692 $3694 ($1009 is responsible)
$3698 = call $2152 with $3697 $3300 $3301 ($1011 is responsible)
$3699 = Core:iterator:238
$3700 = call $716 with $3698 $3378 ($3699 is responsible)
$3701 = Core:iterator:243
$3702 = call $3001 with $3386 $191 ($3701 is responsible)
$3703 = Core:iterator:245
# Core:iterator:toList:2
$3704 = { (responsible $3705) ->
  $3706 = panicking because $1163 ($3703 is at fault)
}
$3707 = call $1390 with $3702 $3704 ($1009 is responsible)
$3708 = call $2152 with $3707 $3300 $3301 ($1011 is responsible)
$3709 = ($188, $189, $190, $191)
$3710 = Core:iterator:251
$3711 = call $716 with $3708 $3709 ($3710 is responsible)
$3712 = 12
$3713 = Core:iterator:256
$3714 = call $3001 with $3386 $3712 ($3713 is responsible)
$3715 = Core:iterator:258
# Core:iterator:toList:2
$3716 = { (responsible $3717) ->
  $3718 = panicking because $1163 ($3715 is at fault)
}
$3719 = call $1390 with $3714 $3716 ($1009 is responsible)
$3720 = call $2152 with $3719 $3300 $3301 ($1011 is responsible)
$3721 = Core:iterator:270
$3722 = call $716 with $3720 $3384 ($3721 is responsible)
$3723 = Core:iterator:275
$3724 = call $3265 with $3386 $191 ($3723 is responsible)
$3725 = Core:iterator:277
# Core:iterator:toList:2
$3726 = { (responsible $3727) ->
  $3728 = panicking because $1163 ($3725 is at fault)
}
$3729 = call $1390 with $3724 $3726 ($1009 is responsible)
$3730 = call $2152 with $3729 $3300 $3301 ($1011 is responsible)
$3731 = ($192, $3380, $3381, $3382, $3383, $193)
$3732 = Core:iterator:285
$3733 = call $716 with $3730 $3731 ($3732 is responsible)
$3734 = 40
$3735 = Core:iterator:290
$3736 = call $3265 with $3386 $3734 ($3735 is responsible)
$3737 = Core:iterator:292
# Core:iterator:toList:2
$3738 = { (responsible $3739) ->
  $3740 = panicking because $1163 ($3737 is at fault)
}
$3741 = call $1390 with $3736 $3738 ($1009 is responsible)
$3742 = call $2152 with $3741 $3300 $3301 ($1011 is responsible)
$3743 = Core:iterator:294
$3744 = call $716 with $3742 $3300 ($3743 is responsible)
$3745 = Core:iterator:301
$3746 = call $3309 with $3386 $191 $190 $172 ($3745 is responsible)
$3747 = Core:iterator:303
# Core:iterator:toList:2
$3748 = { (responsible $3749) ->
  $3750 = panicking because $1163 ($3747 is at fault)
}
$3751 = call $1390 with $3746 $3748 ($1009 is responsible)
$3752 = call $2152 with $3751 $3300 $3301 ($1011 is responsible)
$3753 = ($191, $192, $3380, $3381)
$3754 = ($3381, $3382, $3383, $193)
$3755 = ($3709, $3753, $3754)
$3756 = Core:iterator:320
$3757 = call $716 with $3752 $3755 ($3756 is responsible)
$3758 = Core:iterator:325
$3759 = call $3361 with $3386 $190 ($3758 is responsible)
$3760 = Core:iterator:327
# Core:iterator:toList:2
$3761 = { (responsible $3762) ->
  $3763 = panicking because $1163 ($3760 is at fault)
}
$3764 = call $1390 with $3759 $3761 ($1009 is responsible)
$3765 = call $2152 with $3764 $3300 $3301 ($1011 is responsible)
$3766 = ($191, $192, $3380)
$3767 = ($3381, $3382, $3383)
$3768 = ($193,)
$3769 = ($3378, $3766, $3767, $3768)
$3770 = Core:iterator:343
$3771 = call $716 with $3765 $3769 ($3770 is responsible)
$3772 = Core:list:isEmpty:4
$3773 = Core:list:isEmpty:8
# Core:list:isEmpty
$3774 = { $3775 (+ responsible $3776) ->
  $3777 = call $170 with $3775 ($70 is responsible)
  $3778 = call $151 with $3777 $177 ($1 is responsible)
  $3779 = call $253 with $3778 $1149 $3776 ($3772 is responsible)
  $3780 = call $170 with $3775 ($68 is responsible)
  $3781 = call $151 with $3780 $177 ($69 is responsible)
  $3782 = call $253 with $3781 $241 $3773 ($58 is responsible)
  $3783 = call $162 with $3775 ($57 is responsible)
  $3784 = call $151 with $3783 $187 ($1 is responsible)
}
$3785 = "`list.is a` was not satisfied"
$3786 = Examples:average:average:9
$3787 = Examples:average:average:17
$3788 = Examples:average:average:24
$3789 = "`a | list.isEmpty | bool.not` was not satisfied"
$3790 = Examples:average:average:26
$3791 = Examples:average:average:34
$3792 = Examples:average:average:42
$3793 = "`a | iterator.fromList | iterator.all { a -> int.is a }` was not satisfied"
$3794 = Examples:average:average:44
$3795 = Examples:average:average:53
$3796 = Examples:average:average:60
$3797 = Examples:average:average:68
$3798 = Examples:average:average:69
# Examples:average:average
$3799 = { $3800 (+ responsible $3801) ->
  $3802 = call $170 with $3800 ($70 is responsible)
  $3803 = call $151 with $3802 $177 ($1 is responsible)
  $3804 = call $253 with $3803 $3785 $3801 ($3786 is responsible)
  $3805 = call $3774 with $3800 ($3787 is responsible)
  $3806 = call $594 with $3805 ($3788 is responsible)
  $3807 = call $253 with $3806 $3789 $3801 ($3790 is responsible)
  $3808 = call $3285 with $3800 ($3791 is responsible)
  $3809 = call $2520 with $3808 $852 ($3792 is responsible)
  $3810 = call $253 with $3809 $3793 $3801 ($3794 is responsible)
  $3811 = call $3285 with $3800 ($3795 is responsible)
  $3812 = call $2500 with $3811 ($3796 is responsible)
  $3813 = call $170 with $3800 ($68 is responsible)
  $3814 = call $151 with $3813 $177 ($69 is responsible)
  $3815 = call $253 with $3814 $241 $3797 ($58 is responsible)
  $3816 = call $162 with $3800 ($57 is responsible)
  $3817 = call $480 with $3812 $3816 ($3798 is responsible)
}
$3818 = Examples:average:main:5
# Examples:average:main
$3819 = { $3820 (+ responsible $3821) ->
  $3822 = call $3799 with $3378 ($3818 is responsible)
}
