# Optimized MIR for module Examples:average
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::functionRun:11
$3 = Builtins::functionRun:16
$4 = Builtins::functionRun:22
$5 = Builtins::functionRun:5
$6 = Builtins::getArgumentCount:11
$7 = Builtins::getArgumentCount:5
$8 = Builtins::ifElse:1
$9 = Builtins::ifElse:11
$10 = Builtins::ifElse:14
$11 = Builtins::ifElse:19
$12 = Builtins::ifElse:25
$13 = Builtins::ifElse:28
$14 = Builtins::ifElse:33
$15 = Builtins::ifElse:41
$16 = Builtins::ifElse:5
$17 = Builtins::intAdd:11
$18 = Builtins::intAdd:18
$19 = Builtins::intAdd:5
$20 = Builtins::intBitwiseAnd:18
$21 = Builtins::intBitwiseAnd:5
$22 = Builtins::intCompareTo:11
$23 = Builtins::intCompareTo:18
$24 = Builtins::intCompareTo:5
$25 = Builtins::intDivideTruncating:11
$26 = Builtins::intDivideTruncating:17
$27 = Builtins::intDivideTruncating:25
$28 = Builtins::intDivideTruncating:32
$29 = Builtins::intDivideTruncating:5
$30 = Builtins::intMultiply:18
$31 = Builtins::intMultiply:5
$32 = Builtins::intSubtract:18
$33 = Builtins::intSubtract:5
$34 = Builtins::isLessThanOrEqualTo:11
$35 = Builtins::isLessThanOrEqualTo:18
$36 = Builtins::isLessThanOrEqualTo:19
$37 = Builtins::isLessThanOrEqualTo:5
$38 = Builtins::isNonNegative:12
$39 = Builtins::isNonNegative:13
$40 = Builtins::isNonNegative:5
$41 = Builtins::not:1
$42 = Builtins::structGet:12
$43 = Builtins::structGet:14
$44 = Builtins::structGet:21
$45 = Builtins::structGet:5
$46 = Builtins::toDebugText:5
$47 = Builtins::typeIs:19
$48 = Builtins::typeIs:25
$49 = Builtins::typeOf:5
$50 = Core:bool:and:13
$51 = Core:bool:and:2
$52 = Core:bool:and:4
$53 = Core:bool:and:7
$54 = Core:bool:and:9
$55 = Core:bool:is:1
$56 = Core:bool:lazyAnd:14
$57 = Core:bool:lazyAnd:16
$58 = Core:bool:lazyAnd:18
$59 = Core:bool:lazyAnd:18:13
$60 = Core:bool:lazyAnd:18:21
$61 = Core:bool:lazyAnd:18:9
$62 = Core:bool:lazyAnd:2
$63 = Core:bool:lazyAnd:4
$64 = Core:bool:lazyOr:14
$65 = Core:bool:lazyOr:16
$66 = Core:bool:lazyOr:18
$67 = Core:bool:lazyOr:18:10
$68 = Core:bool:lazyOr:18:14
$69 = Core:bool:lazyOr:18:22
$70 = Core:bool:lazyOr:2
$71 = Core:bool:lazyOr:4
$72 = Core:bool:not:2
$73 = Core:bool:not:4
$74 = Core:bool:not:6
$75 = Core:bool:or:13
$76 = Core:bool:or:2
$77 = Core:bool:or:4
$78 = Core:bool:or:7
$79 = Core:bool:or:9
$80 = Core:check:checkEquals:12
$81 = Core:check:checkEquals:13
$82 = Core:check:checkEquals:15:0
$83 = Core:check:checkEquals:16
$84 = Core:check:checkEquals:19
$85 = Core:check:checkEquals:20
$86 = Core:check:checkEquals:22:0
$87 = Core:check:checkEquals:23
$88 = Core:check:checkEquals:25
$89 = Core:check:checkEquals:26
$90 = Core:check:checkEquals:27
$91 = Core:check:checkEquals:28
$92 = Core:check:checkEquals:29
$93 = Core:controlFlow:if:11
$94 = Core:controlFlow:if:21
$95 = Core:controlFlow:if:23
$96 = Core:controlFlow:if:28
$97 = Core:controlFlow:if:9
$98 = Core:controlFlow:recursive:17
$99 = Core:controlFlow:recursive:18:0:3
$100 = Core:controlFlow:recursive:18:5
$101 = Core:controlFlow:recursive:23
$102 = Core:controlFlow:recursive:9
$103 = Core:fixedDecimal:fromInt:15
$104 = Core:fixedDecimal:fromIntScaled:11
$105 = Core:fixedDecimal:fromIntScaled:16
$106 = Core:fixedDecimal:isScale:18:9
$107 = Core:fixedDecimal:isScale:19
$108 = Core:function:is0:11:3
$109 = Core:function:is0:13
$110 = Core:function:is2:11:3
$111 = Core:function:is2:13
$112 = Core:function:run:14
$113 = Core:function:run:2
$114 = Core:function:run:4
$115 = Core:int:compareTo:20
$116 = Core:int:compareTo:4
$117 = Core:int:compareTo:9
$118 = Core:int:isGreaterThan:13
$119 = Core:int:isGreaterThan:4
$120 = Core:int:isGreaterThan:9
$121 = Core:int:isLessThan:13
$122 = Core:int:isLessThan:4
$123 = Core:int:isLessThan:9
$124 = Core:int:isNegative:4
$125 = Core:int:isNegative:8
$126 = Core:int:isNonNegative:16
$127 = Core:int:isNonNegative:4
$128 = Core:int:isNonNegative:7
$129 = anonymous:$generated::needs
$130 = builtinEquals
$131 = builtinGetArgumentCount
$132 = builtinIfElse
$133 = builtinIntAdd
$134 = builtinIntBitwiseAnd
$135 = builtinIntCompareTo
$136 = builtinIntDivideTruncating
$137 = builtinIntMultiply
$138 = builtinIntSubtract
$139 = builtinListGet
$140 = builtinStructGet
$141 = builtinStructHasKey
$142 = builtinTagGetValue
$143 = builtinTagHasValue
$144 = builtinTagWithoutValue
$145 = builtinTextConcatenate
$146 = builtinToDebugText
$147 = builtinTypeOf
$148 = Equal
$149 = False
$150 = Function
$151 = Greater
$152 = Int
$153 = Less
$154 = Match
$155 = MinorUnits
$156 = NoMatch
$157 = Nothing
$158 = Scale
$159 = Struct
$160 = Tag
$161 = Text
$162 = True
$163 = 0
$164 = 1
$165 = 2
$166 = 3
$167 = 4
$168 = 5
$169 = 10
$170 = " to be "
$171 = "."
$172 = "A check failed: Expected "
$173 = "Expected `Equal`, got `"
$174 = "Expected `False`, got `"
$175 = "Expected `Greater`, got `"
$176 = "Expected `Less`, got `"
$177 = "Expected `True`, got `"
$178 = "Expected a Struct, got `"
$179 = "Expected a Tag, got `"
$180 = "Expected tag to have a value, but it doesn't have any."
$181 = "No case matched the given expression."
$182 = "The `body` should take the recursive function and the argument."
$183 = "The `condition` must be either `True` or `False`."
$184 = "The `reason` must be a text."
$185 = "You can't divide by zero."
$186 = "`."
$187 = "`False` was not satisfied"
$188 = "`a | typeIs Int` was not satisfied"
$189 = "`b | typeIs Int` was not satisfied"
$190 = "`b` didn't return a bool."
$191 = "`bool.is condition` was not satisfied"
$192 = "`conditionIsBool` was not satisfied"
$193 = "`dividend | typeIs Int` was not satisfied"
$194 = "`divisor | typeIs Int` was not satisfied"
$195 = "`else | getArgumentCount | equals 0` was not satisfied"
$196 = "`else | typeIs Function` was not satisfied"
$197 = "`factorA | typeIs Int` was not satisfied"
$198 = "`function | typeIs Function` was not satisfied"
$199 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
$200 = "`function.is0 b` was not satisfied"
$201 = "`function.is0 then` was not satisfied"
$202 = "`int | typeIs Int` was not satisfied"
$203 = "`int.is minorUnits` was not satisfied"
$204 = "`is a` was not satisfied"
$205 = "`is b` was not satisfied"
$206 = "`is valueA` was not satisfied"
$207 = "`is valueB` was not satisfied"
$208 = "`is value` was not satisfied"
$209 = "`is0 body` was not satisfied"
$210 = "`isScale scale` was not satisfied"
$211 = "`minuend | typeIs Int` was not satisfied"
$212 = "`struct | typeIs Struct` was not satisfied"
$213 = "`struct | ✨.structHasKey key` was not satisfied"
$214 = "`then | getArgumentCount | equals 0` was not satisfied"
$215 = "`then | typeIs Function` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
$216 = { (responsible $217) ->
  $218 = $162
}
# Core::19:isMatch:then, Core::30:isMatch:then, Core::41:isMatch:then, Core::102:isMatch:then, Core::153:isMatch:then, Core::164:isMatch:then, Core:bool:9:isMatch:then, Core:check:9:isMatch:then, Core:controlFlow:if:27, Core:controlFlow:29:isMatch:then, Core:controlFlow:50:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:fixedDecimal:30:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:function:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:29:isMatch:then, Core:int:40:isMatch:then, Core:iterator:foldLeft:23:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:30:6:1:isMatch:then, Core:iterator:take:31:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:19:isMatch:then, Core:iterator:30:isMatch:then, Core:iterator:91:isMatch:then, Core:iterator:102:isMatch:then, Core:iterator:128:isMatch:then, Core:iterator:137:isMatch:then, Core:list:firstIndexWhere:23:1:isMatch:then, Core:list:generate:59:1:isMatch:then, Core:list:lastIndexWhere:44:1:isMatch:then, Core:list:29:isMatch:then, Core:list:40:isMatch:then, Core:result:19:isMatch:then, Core:result:30:isMatch:then, Core:struct:19:isMatch:then, Core:tag:29:isMatch:then, Core:text:repeat:34:1:isMatch:then, Core:text:29:isMatch:then, Core:text:40:isMatch:then, Core:type:19:isMatch:then, Examples:average:then, Examples:average:9:isMatch:then, Examples:average:12:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$219 = { (responsible $220) ->
  $221 = $157
}
# anonymous:$generated::needs
$222 = { $223 $224 $225 (+ responsible $226) ->
  $227 = call $130 with $223 $162 ($129 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $228 = { (responsible $229) ->
    $230 = call $130 with $223 $149 ($129 is responsible)
  }
  $231 = call $132 with $227 $216 $228 ($129 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $232 = { (responsible $233) ->
    $234 = panicking because $183 ($226 is at fault)
  }
  $235 = call $132 with $231 $219 $232 ($129 is responsible)
  $236 = call $147 with $224 ($226 is responsible)
  $237 = call $130 with $236 $161 ($226 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $238 = { (responsible $239) ->
    $240 = panicking because $184 ($226 is at fault)
  }
  $241 = call $132 with $237 $219 $238 ($129 is responsible)
  # anonymous:$generated::needs:condition:else
  $242 = { (responsible $243) ->
    $244 = panicking because $224 ($225 is at fault)
  }
  $245 = call $132 with $223 $219 $242 ($129 is responsible)
}
$246 = ($154,)
# Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:18:equals:then, Core:bool:lazyOr:18:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:23:5:equals:then, Core:iterator:generateWithState:14:1:3:equals:then, Core:iterator:map:19:3:equals:then, Core:iterator:reduceLeft:18:equals:then, Core:iterator:skip:30:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:19:2:3:equals:then, Core:iterator:where:19:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:16:26:10:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:21:equals:then, Core:list:lastWhere:21:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
$247 = { (responsible $248) ->
  $249 = $246
}
# Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:lazyAnd:18:case-1:matched, Core:bool:not:6:case-0:matched, Core:function:is0:12, Core:function:is1:12, Core:function:is2:12, Core:function:is3:12, Core:function:is4:12, Core:function:is5:12, Core:list:isValidIndex:21, Core:list:isValidInsertIndex:21, anonymous:$generated::needs:isConditionTrue:else
$250 = { (responsible $251) ->
  $252 = $149
}
# Builtins::ifElse
$253 = { $254 $255 $256 (+ responsible $257) ->
  $258 = call $130 with $162 $254 ($8 is responsible)
  # Builtins::ifElse:1:equals:else
  $259 = { (responsible $260) ->
    $261 = call $146 with $254 ($8 is responsible)
    $262 = call $145 with $177 $261 ($8 is responsible)
    $263 = call $145 with $262 $186 ($8 is responsible)
    $264 = ($156, $263)
  }
  $265 = call $132 with $258 $247 $259 ($8 is responsible)
  $266 = call $139 with $265 $163 ($8 is responsible)
  $267 = call $130 with $266 $154 ($8 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $268 = { (responsible $269) ->
    $270 = $265
  }
  # Builtins::ifElse:1:isMatch:else
  $271 = { (responsible $272) ->
    $273 = call $130 with $149 $254 ($8 is responsible)
    # Builtins::ifElse:1:equals:else
    $274 = { (responsible $275) ->
      $276 = call $146 with $254 ($8 is responsible)
      $277 = call $145 with $174 $276 ($8 is responsible)
      $278 = call $145 with $277 $186 ($8 is responsible)
      $279 = ($156, $278)
    }
    $280 = call $132 with $273 $247 $274 ($8 is responsible)
  }
  $281 = call $132 with $267 $268 $271 ($8 is responsible)
  $282 = call $139 with $281 $163 ($8 is responsible)
  $283 = call $130 with $282 $154 ($8 is responsible)
  # Builtins::ifElse:1:case-0:didNotMatch
  $284 = { (responsible $285) ->
    $286 = call $139 with $281 $164 ($8 is responsible)
    $287 = $149
  }
  $288 = call $132 with $283 $216 $284 ($8 is responsible)
  $289 = call $222 with $288 $192 $257 ($16 is responsible)
  $290 = call $147 with $255 ($47 is responsible)
  $291 = call $130 with $290 $150 ($48 is responsible)
  $292 = call $222 with $291 $215 $257 ($9 is responsible)
  $293 = call $147 with $255 ($47 is responsible)
  $294 = call $130 with $293 $150 ($48 is responsible)
  $295 = call $222 with $294 $198 $10 ($7 is responsible)
  $296 = call $131 with $255 ($6 is responsible)
  $297 = call $130 with $296 $163 ($1 is responsible)
  $298 = call $222 with $297 $214 $257 ($11 is responsible)
  $299 = call $147 with $256 ($47 is responsible)
  $300 = call $130 with $299 $150 ($48 is responsible)
  $301 = call $222 with $300 $196 $257 ($12 is responsible)
  $302 = call $147 with $256 ($47 is responsible)
  $303 = call $130 with $302 $150 ($48 is responsible)
  $304 = call $222 with $303 $198 $13 ($7 is responsible)
  $305 = call $131 with $256 ($6 is responsible)
  $306 = call $130 with $305 $163 ($1 is responsible)
  $307 = call $222 with $306 $195 $257 ($14 is responsible)
  $308 = call $132 with $254 $255 $256 ($15 is responsible)
}
# Core:function:is0
$309 = { $310 (+ responsible $311) ->
  $312 = call $147 with $310 ($49 is responsible)
  $313 = call $130 with $312 $150 ($1 is responsible)
  # Core:function:is0:11
  $314 = { (responsible $315) ->
    $316 = call $147 with $310 ($47 is responsible)
    $317 = call $130 with $316 $150 ($48 is responsible)
    $318 = call $222 with $317 $198 $108 ($7 is responsible)
    $319 = call $131 with $310 ($6 is responsible)
    $320 = call $130 with $319 $163 ($1 is responsible)
  }
  $321 = call $253 with $313 $314 $250 ($109 is responsible)
}
# Core:function:run
$322 = { $323 (+ responsible $324) ->
  $325 = call $309 with $323 ($113 is responsible)
  $326 = call $222 with $325 $209 $324 ($114 is responsible)
  $327 = call $147 with $323 ($47 is responsible)
  $328 = call $130 with $327 $150 ($48 is responsible)
  $329 = call $222 with $328 $198 $112 ($5 is responsible)
  $330 = call $131 with $323 ($2 is responsible)
  $331 = call $130 with $330 $163 ($1 is responsible)
  $332 = call $222 with $331 $199 $112 ($3 is responsible)
  $333 = call $323 with no arguments ($4 is responsible)
}
# Core:bool:is
$334 = { $335 (+ responsible $336) ->
  $337 = call $130 with $162 $335 ($55 is responsible)
  # Core:bool:is:1:equals:else
  $338 = { (responsible $339) ->
    $340 = call $146 with $335 ($55 is responsible)
    $341 = call $145 with $177 $340 ($55 is responsible)
    $342 = call $145 with $341 $186 ($55 is responsible)
    $343 = ($156, $342)
  }
  $344 = call $132 with $337 $247 $338 ($55 is responsible)
  $345 = call $139 with $344 $163 ($55 is responsible)
  $346 = call $130 with $345 $154 ($55 is responsible)
  # Core:bool:is:1:isMatch:then
  $347 = { (responsible $348) ->
    $349 = $344
  }
  # Core:bool:is:1:isMatch:else
  $350 = { (responsible $351) ->
    $352 = call $130 with $149 $335 ($55 is responsible)
    # Core:bool:is:1:equals:else
    $353 = { (responsible $354) ->
      $355 = call $146 with $335 ($55 is responsible)
      $356 = call $145 with $174 $355 ($55 is responsible)
      $357 = call $145 with $356 $186 ($55 is responsible)
      $358 = ($156, $357)
    }
    $359 = call $132 with $352 $247 $353 ($55 is responsible)
  }
  $360 = call $132 with $346 $347 $350 ($55 is responsible)
  $361 = call $139 with $360 $163 ($55 is responsible)
  $362 = call $130 with $361 $154 ($55 is responsible)
  # Core:bool:is:1:case-0:didNotMatch
  $363 = { (responsible $364) ->
    $365 = call $139 with $360 $164 ($55 is responsible)
    $366 = $149
  }
  $367 = call $132 with $362 $216 $363 ($55 is responsible)
}
# Core:bool:not
$368 = { $369 (+ responsible $370) ->
  $371 = call $334 with $369 ($72 is responsible)
  $372 = call $222 with $371 $208 $370 ($73 is responsible)
  $373 = call $130 with $162 $369 ($74 is responsible)
  # Core:bool:not:6:equals:else
  $374 = { (responsible $375) ->
    $376 = call $146 with $369 ($74 is responsible)
    $377 = call $145 with $177 $376 ($74 is responsible)
    $378 = call $145 with $377 $186 ($74 is responsible)
    $379 = ($156, $378)
  }
  $380 = call $132 with $373 $247 $374 ($74 is responsible)
  $381 = call $139 with $380 $163 ($74 is responsible)
  $382 = call $130 with $381 $154 ($74 is responsible)
  # Core:bool:not:6:case-0:didNotMatch
  $383 = { (responsible $384) ->
    $385 = call $139 with $380 $164 ($74 is responsible)
    $386 = call $130 with $149 $369 ($74 is responsible)
    # Core:bool:not:6:equals:else
    $387 = { (responsible $388) ->
      $389 = call $146 with $369 ($74 is responsible)
      $390 = call $145 with $174 $389 ($74 is responsible)
      $391 = call $145 with $390 $186 ($74 is responsible)
      $392 = ($156, $391)
    }
    $393 = call $132 with $386 $247 $387 ($74 is responsible)
    $394 = call $139 with $393 $163 ($74 is responsible)
    $395 = call $130 with $394 $154 ($74 is responsible)
    # Core:bool:not:6:case-1:didNotMatch
    $396 = { (responsible $397) ->
      $398 = call $139 with $393 $164 ($74 is responsible)
      $399 = panicking because $181 ($74 is at fault)
    }
    $400 = call $132 with $395 $216 $396 ($74 is responsible)
  }
  $401 = call $132 with $382 $250 $383 ($74 is responsible)
}
# Core:bool:lazyAnd
$402 = { $403 $404 (+ responsible $405) ->
  $406 = call $334 with $403 ($62 is responsible)
  $407 = call $222 with $406 $204 $405 ($63 is responsible)
  $408 = call $309 with $404 ($56 is responsible)
  $409 = call $222 with $408 $200 $405 ($57 is responsible)
  $410 = call $130 with $162 $403 ($58 is responsible)
  # Core:bool:lazyAnd:18:equals:else
  $411 = { (responsible $412) ->
    $413 = call $146 with $403 ($58 is responsible)
    $414 = call $145 with $177 $413 ($58 is responsible)
    $415 = call $145 with $414 $186 ($58 is responsible)
    $416 = ($156, $415)
  }
  $417 = call $132 with $410 $247 $411 ($58 is responsible)
  $418 = call $139 with $417 $163 ($58 is responsible)
  $419 = call $130 with $418 $154 ($58 is responsible)
  # Core:bool:lazyAnd:18:case-0:matched
  $420 = { (responsible $421) ->
    $422 = call $322 with $404 ($61 is responsible)
    $423 = $422
    $424 = call $334 with $422 ($59 is responsible)
    $425 = call $222 with $424 $190 $405 ($60 is responsible)
    $426 = $423
  }
  # Core:bool:lazyAnd:18:case-0:didNotMatch
  $427 = { (responsible $428) ->
    $429 = call $139 with $417 $164 ($58 is responsible)
    $430 = call $130 with $149 $403 ($58 is responsible)
    # Core:bool:lazyAnd:18:equals:else
    $431 = { (responsible $432) ->
      $433 = call $146 with $403 ($58 is responsible)
      $434 = call $145 with $174 $433 ($58 is responsible)
      $435 = call $145 with $434 $186 ($58 is responsible)
      $436 = ($156, $435)
    }
    $437 = call $132 with $430 $247 $431 ($58 is responsible)
    $438 = call $139 with $437 $163 ($58 is responsible)
    $439 = call $130 with $438 $154 ($58 is responsible)
    # Core:bool:lazyAnd:18:case-1:didNotMatch
    $440 = { (responsible $441) ->
      $442 = call $139 with $437 $164 ($58 is responsible)
      $443 = panicking because $181 ($58 is at fault)
    }
    $444 = call $132 with $439 $250 $440 ($58 is responsible)
  }
  $445 = call $132 with $419 $420 $427 ($58 is responsible)
}
# Core:bool:lazyOr
$446 = { $447 $448 (+ responsible $449) ->
  $450 = call $334 with $447 ($70 is responsible)
  $451 = call $222 with $450 $204 $449 ($71 is responsible)
  $452 = call $309 with $448 ($64 is responsible)
  $453 = call $222 with $452 $200 $449 ($65 is responsible)
  $454 = call $130 with $162 $447 ($66 is responsible)
  # Core:bool:lazyOr:18:equals:else
  $455 = { (responsible $456) ->
    $457 = call $146 with $447 ($66 is responsible)
    $458 = call $145 with $177 $457 ($66 is responsible)
    $459 = call $145 with $458 $186 ($66 is responsible)
    $460 = ($156, $459)
  }
  $461 = call $132 with $454 $247 $455 ($66 is responsible)
  $462 = call $139 with $461 $163 ($66 is responsible)
  $463 = call $130 with $462 $154 ($66 is responsible)
  # Core:bool:lazyOr:18:case-0:didNotMatch
  $464 = { (responsible $465) ->
    $466 = call $139 with $461 $164 ($66 is responsible)
    $467 = call $130 with $149 $447 ($66 is responsible)
    # Core:bool:lazyOr:18:equals:else
    $468 = { (responsible $469) ->
      $470 = call $146 with $447 ($66 is responsible)
      $471 = call $145 with $174 $470 ($66 is responsible)
      $472 = call $145 with $471 $186 ($66 is responsible)
      $473 = ($156, $472)
    }
    $474 = call $132 with $467 $247 $468 ($66 is responsible)
    $475 = call $139 with $474 $163 ($66 is responsible)
    $476 = call $130 with $475 $154 ($66 is responsible)
    # Core:bool:lazyOr:18:case-1:matched
    $477 = { (responsible $478) ->
      $479 = call $322 with $448 ($67 is responsible)
      $480 = $479
      $481 = call $334 with $479 ($68 is responsible)
      $482 = call $222 with $481 $190 $449 ($69 is responsible)
      $483 = $480
    }
    # Core:bool:lazyOr:18:case-1:didNotMatch
    $484 = { (responsible $485) ->
      $486 = call $139 with $474 $164 ($66 is responsible)
      $487 = panicking because $181 ($66 is at fault)
    }
    $488 = call $132 with $476 $477 $484 ($66 is responsible)
  }
  $489 = call $132 with $463 $216 $464 ($66 is responsible)
}
# Core:check:checkEquals
$490 = { $491 $492 (+ responsible $493) ->
  $494 = call $130 with $491 $492 ($1 is responsible)
  $495 = call $147 with $491 ($80 is responsible)
  $496 = call $130 with $495 $161 ($81 is responsible)
  # Core:check:checkEquals:14
  $497 = { (responsible $498) ->
    $499 = $491
  }
  # Core:check:checkEquals:15
  $500 = { (responsible $501) ->
    $502 = call $146 with $491 ($82 is responsible)
  }
  $503 = call $132 with $496 $497 $500 ($83 is responsible)
  $504 = call $147 with $492 ($84 is responsible)
  $505 = call $130 with $504 $161 ($85 is responsible)
  # Core:check:checkEquals:21
  $506 = { (responsible $507) ->
    $508 = $492
  }
  # Core:check:checkEquals:22
  $509 = { (responsible $510) ->
    $511 = call $146 with $492 ($86 is responsible)
  }
  $512 = call $132 with $505 $506 $509 ($87 is responsible)
  $513 = call $145 with $172 $503 ($88 is responsible)
  $514 = call $145 with $513 $170 ($89 is responsible)
  $515 = call $145 with $514 $512 ($90 is responsible)
  $516 = call $145 with $515 $171 ($91 is responsible)
  $517 = call $222 with $494 $516 $493 ($92 is responsible)
}
# Core:function:is2
$518 = { $519 (+ responsible $520) ->
  $521 = call $147 with $519 ($49 is responsible)
  $522 = call $130 with $521 $150 ($1 is responsible)
  # Core:function:is2:11
  $523 = { (responsible $524) ->
    $525 = call $147 with $519 ($47 is responsible)
    $526 = call $130 with $525 $150 ($48 is responsible)
    $527 = call $222 with $526 $198 $110 ($7 is responsible)
    $528 = call $131 with $519 ($6 is responsible)
    $529 = call $130 with $528 $165 ($1 is responsible)
  }
  $530 = call $253 with $522 $523 $250 ($111 is responsible)
}
# Builtins::not
$531 = { $532 (+ responsible $533) ->
  $534 = call $130 with $162 $532 ($41 is responsible)
  # Builtins::not:1:equals:else
  $535 = { (responsible $536) ->
    $537 = call $146 with $532 ($41 is responsible)
    $538 = call $145 with $177 $537 ($41 is responsible)
    $539 = call $145 with $538 $186 ($41 is responsible)
    $540 = ($156, $539)
  }
  $541 = call $132 with $534 $247 $535 ($41 is responsible)
  $542 = call $139 with $541 $163 ($41 is responsible)
  $543 = call $130 with $542 $154 ($41 is responsible)
  # Builtins::not:1:case-0:didNotMatch
  $544 = { (responsible $545) ->
    $546 = call $139 with $541 $164 ($41 is responsible)
    $547 = call $130 with $149 $532 ($41 is responsible)
    # Builtins::not:1:equals:else
    $548 = { (responsible $549) ->
      $550 = call $146 with $532 ($41 is responsible)
      $551 = call $145 with $174 $550 ($41 is responsible)
      $552 = call $145 with $551 $186 ($41 is responsible)
      $553 = ($156, $552)
    }
    $554 = call $132 with $547 $247 $548 ($41 is responsible)
    $555 = call $139 with $554 $163 ($41 is responsible)
    $556 = call $130 with $555 $154 ($41 is responsible)
    # Builtins::not:1:case-1:didNotMatch
    $557 = { (responsible $558) ->
      $559 = call $139 with $554 $164 ($41 is responsible)
      $560 = panicking because $187 ($533 is at fault)
    }
    $561 = call $132 with $556 $216 $557 ($41 is responsible)
  }
  $562 = call $132 with $543 $250 $544 ($41 is responsible)
}
# Builtins::isNonNegative
$563 = { $564 (+ responsible $565) ->
  $566 = call $147 with $564 ($47 is responsible)
  $567 = call $130 with $566 $152 ($48 is responsible)
  $568 = call $222 with $567 $202 $565 ($40 is responsible)
  $569 = call $135 with $564 $163 ($38 is responsible)
  $570 = call $130 with $151 $569 ($39 is responsible)
  # Builtins::isNonNegative:13:equals:else
  $571 = { (responsible $572) ->
    $573 = call $146 with $569 ($39 is responsible)
    $574 = call $145 with $175 $573 ($39 is responsible)
    $575 = call $145 with $574 $186 ($39 is responsible)
    $576 = ($156, $575)
  }
  $577 = call $132 with $570 $247 $571 ($39 is responsible)
  $578 = call $139 with $577 $163 ($39 is responsible)
  $579 = call $130 with $578 $154 ($39 is responsible)
  # Builtins::isNonNegative:13:isMatch:then
  $580 = { (responsible $581) ->
    $582 = $577
  }
  # Builtins::isNonNegative:13:isMatch:else
  $583 = { (responsible $584) ->
    $585 = call $130 with $148 $569 ($39 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $586 = { (responsible $587) ->
      $588 = call $146 with $569 ($39 is responsible)
      $589 = call $145 with $173 $588 ($39 is responsible)
      $590 = call $145 with $589 $186 ($39 is responsible)
      $591 = ($156, $590)
    }
    $592 = call $132 with $585 $247 $586 ($39 is responsible)
  }
  $593 = call $132 with $579 $580 $583 ($39 is responsible)
  $594 = call $139 with $593 $163 ($39 is responsible)
  $595 = call $130 with $594 $154 ($39 is responsible)
  # Builtins::isNonNegative:13:case-0:didNotMatch
  $596 = { (responsible $597) ->
    $598 = call $139 with $593 $164 ($39 is responsible)
    $599 = call $130 with $153 $569 ($39 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $600 = { (responsible $601) ->
      $602 = call $146 with $569 ($39 is responsible)
      $603 = call $145 with $176 $602 ($39 is responsible)
      $604 = call $145 with $603 $186 ($39 is responsible)
      $605 = ($156, $604)
    }
    $606 = call $132 with $599 $247 $600 ($39 is responsible)
    $607 = call $139 with $606 $163 ($39 is responsible)
    $608 = call $130 with $607 $154 ($39 is responsible)
    # Builtins::isNonNegative:13:case-1:didNotMatch
    $609 = { (responsible $610) ->
      $611 = call $139 with $606 $164 ($39 is responsible)
      $612 = panicking because $181 ($39 is at fault)
    }
    $613 = call $132 with $608 $250 $609 ($39 is responsible)
  }
  $614 = call $132 with $595 $216 $596 ($39 is responsible)
}
# Builtins::isLessThanOrEqualTo
$615 = { $616 $617 (+ responsible $618) ->
  $619 = call $147 with $616 ($47 is responsible)
  $620 = call $130 with $619 $152 ($48 is responsible)
  $621 = call $222 with $620 $188 $618 ($37 is responsible)
  $622 = call $147 with $617 ($47 is responsible)
  $623 = call $130 with $622 $152 ($48 is responsible)
  $624 = call $222 with $623 $189 $618 ($34 is responsible)
  $625 = call $135 with $616 $617 ($35 is responsible)
  $626 = call $130 with $153 $625 ($36 is responsible)
  # Builtins::isLessThanOrEqualTo:19:equals:else
  $627 = { (responsible $628) ->
    $629 = call $146 with $625 ($36 is responsible)
    $630 = call $145 with $176 $629 ($36 is responsible)
    $631 = call $145 with $630 $186 ($36 is responsible)
    $632 = ($156, $631)
  }
  $633 = call $132 with $626 $247 $627 ($36 is responsible)
  $634 = call $139 with $633 $163 ($36 is responsible)
  $635 = call $130 with $634 $154 ($36 is responsible)
  # Builtins::isLessThanOrEqualTo:19:isMatch:then
  $636 = { (responsible $637) ->
    $638 = $633
  }
  # Builtins::isLessThanOrEqualTo:19:isMatch:else
  $639 = { (responsible $640) ->
    $641 = call $130 with $148 $625 ($36 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $642 = { (responsible $643) ->
      $644 = call $146 with $625 ($36 is responsible)
      $645 = call $145 with $173 $644 ($36 is responsible)
      $646 = call $145 with $645 $186 ($36 is responsible)
      $647 = ($156, $646)
    }
    $648 = call $132 with $641 $247 $642 ($36 is responsible)
  }
  $649 = call $132 with $635 $636 $639 ($36 is responsible)
  $650 = call $139 with $649 $163 ($36 is responsible)
  $651 = call $130 with $650 $154 ($36 is responsible)
  # Builtins::isLessThanOrEqualTo:19:case-0:didNotMatch
  $652 = { (responsible $653) ->
    $654 = call $139 with $649 $164 ($36 is responsible)
    $655 = call $130 with $151 $625 ($36 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $656 = { (responsible $657) ->
      $658 = call $146 with $625 ($36 is responsible)
      $659 = call $145 with $175 $658 ($36 is responsible)
      $660 = call $145 with $659 $186 ($36 is responsible)
      $661 = ($156, $660)
    }
    $662 = call $132 with $655 $247 $656 ($36 is responsible)
    $663 = call $139 with $662 $163 ($36 is responsible)
    $664 = call $130 with $663 $154 ($36 is responsible)
    # Builtins::isLessThanOrEqualTo:19:case-1:didNotMatch
    $665 = { (responsible $666) ->
      $667 = call $139 with $662 $164 ($36 is responsible)
      $668 = panicking because $181 ($36 is at fault)
    }
    $669 = call $132 with $664 $250 $665 ($36 is responsible)
  }
  $670 = call $132 with $651 $216 $652 ($36 is responsible)
}
# Builtins::intDivideTruncating
$671 = { $672 $673 (+ responsible $674) ->
  $675 = call $147 with $672 ($47 is responsible)
  $676 = call $130 with $675 $152 ($48 is responsible)
  $677 = call $222 with $676 $193 $674 ($29 is responsible)
  $678 = call $147 with $673 ($47 is responsible)
  $679 = call $130 with $678 $152 ($48 is responsible)
  $680 = call $222 with $679 $194 $674 ($25 is responsible)
  $681 = call $130 with $673 $163 ($1 is responsible)
  $682 = call $531 with $681 ($26 is responsible)
  $683 = call $222 with $682 $185 $674 ($27 is responsible)
  $684 = call $136 with $672 $673 ($28 is responsible)
}
# Core:int:compareTo
$685 = { $686 $687 (+ responsible $688) ->
  $689 = call $147 with $686 ($49 is responsible)
  $690 = call $130 with $689 $152 ($1 is responsible)
  $691 = call $222 with $690 $206 $688 ($116 is responsible)
  $692 = call $147 with $687 ($49 is responsible)
  $693 = call $130 with $692 $152 ($1 is responsible)
  $694 = call $222 with $693 $207 $688 ($117 is responsible)
  $695 = call $147 with $686 ($47 is responsible)
  $696 = call $130 with $695 $152 ($48 is responsible)
  $697 = call $222 with $696 $188 $115 ($24 is responsible)
  $698 = call $147 with $687 ($47 is responsible)
  $699 = call $130 with $698 $152 ($48 is responsible)
  $700 = call $222 with $699 $189 $115 ($22 is responsible)
  $701 = call $135 with $686 $687 ($23 is responsible)
}
# Core:int:isLessThan
$702 = { $703 $704 (+ responsible $705) ->
  $706 = call $147 with $703 ($49 is responsible)
  $707 = call $130 with $706 $152 ($1 is responsible)
  $708 = call $222 with $707 $206 $705 ($122 is responsible)
  $709 = call $147 with $704 ($49 is responsible)
  $710 = call $130 with $709 $152 ($1 is responsible)
  $711 = call $222 with $710 $207 $705 ($123 is responsible)
  $712 = call $685 with $703 $704 ($121 is responsible)
  $713 = call $130 with $712 $153 ($1 is responsible)
}
# Core:int:isGreaterThan
$714 = { $715 $716 (+ responsible $717) ->
  $718 = call $147 with $715 ($49 is responsible)
  $719 = call $130 with $718 $152 ($1 is responsible)
  $720 = call $222 with $719 $206 $717 ($119 is responsible)
  $721 = call $147 with $716 ($49 is responsible)
  $722 = call $130 with $721 $152 ($1 is responsible)
  $723 = call $222 with $722 $207 $717 ($120 is responsible)
  $724 = call $685 with $715 $716 ($118 is responsible)
  $725 = call $130 with $724 $151 ($1 is responsible)
}
# Core:int:isNonNegative
$726 = { $727 (+ responsible $728) ->
  $729 = call $147 with $727 ($49 is responsible)
  $730 = call $130 with $729 $152 ($1 is responsible)
  $731 = call $222 with $730 $208 $728 ($127 is responsible)
  $732 = call $147 with $727 ($49 is responsible)
  $733 = call $130 with $732 $152 ($1 is responsible)
  $734 = call $222 with $733 $208 $128 ($124 is responsible)
  $735 = call $702 with $727 $163 ($125 is responsible)
  $736 = call $368 with $735 ($126 is responsible)
}
$737 = ($156, $180)
# Core:fixedDecimal:fromIntScaled
$738 = { $739 $740 (+ responsible $741) ->
  $742 = call $147 with $739 ($49 is responsible)
  $743 = call $130 with $742 $152 ($1 is responsible)
  $744 = call $222 with $743 $203 $741 ($104 is responsible)
  $745 = call $147 with $740 ($49 is responsible)
  $746 = call $130 with $745 $152 ($1 is responsible)
  # Core:fixedDecimal:isScale:18
  $747 = { (responsible $748) ->
    $749 = call $726 with $740 ($106 is responsible)
  }
  $750 = call $402 with $746 $747 ($107 is responsible)
  $751 = call $222 with $750 $210 $741 ($105 is responsible)
  $752 = [$158: $740, $155: $739]
  $753 = FixedDecimal $752
}
$754 = call $738 with $163 $163 ($103 is responsible)
$755 = Core:function:is1:11:3
$756 = Core:function:is1:13
# Core:function:is1
$757 = { $758 (+ responsible $759) ->
  $760 = call $147 with $758 ($49 is responsible)
  $761 = call $130 with $760 $150 ($1 is responsible)
  # Core:function:is1:11
  $762 = { (responsible $763) ->
    $764 = call $147 with $758 ($47 is responsible)
    $765 = call $130 with $764 $150 ($48 is responsible)
    $766 = call $222 with $765 $198 $755 ($7 is responsible)
    $767 = call $131 with $758 ($6 is responsible)
    $768 = call $130 with $767 $164 ($1 is responsible)
  }
  $769 = call $253 with $761 $762 $250 ($756 is responsible)
}
$770 = Core:int:fitsInRustU32:15
$771 = Core:int:fitsInRustU32:4
$772 = Core:int:fitsInRustU32:7
$773 = Core:int:fitsInRustU32:9
$774 = Core:int:isOdd:4
$775 = Core:int:isOdd:8
$776 = Core:int:isPositive:4
$777 = Core:int:isPositive:8
$778 = 4294967295
$779 = "`isNonNegative value` was not satisfied"
# Core:int:is, Examples:average:average:51
$780 = { $781 (+ responsible $782) ->
  $783 = call $147 with $781 ($49 is responsible)
  $784 = call $130 with $783 $152 ($1 is responsible)
}
# Core:int:isOdd
$785 = { $786 (+ responsible $787) ->
  $788 = call $147 with $786 ($49 is responsible)
  $789 = call $130 with $788 $152 ($1 is responsible)
  $790 = call $222 with $789 $208 $787 ($774 is responsible)
  $791 = call $147 with $786 ($47 is responsible)
  $792 = call $130 with $791 $152 ($48 is responsible)
  $793 = call $222 with $792 $188 $775 ($21 is responsible)
  $794 = call $134 with $786 $164 ($20 is responsible)
  $795 = call $130 with $794 $164 ($1 is responsible)
}
$796 = Builtins::listGet:11
$797 = Builtins::listGet:14
$798 = Builtins::listGet:16
$799 = Builtins::listGet:24
$800 = Builtins::listGet:25
$801 = Builtins::listGet:30
$802 = Builtins::listGet:37
$803 = Builtins::listGet:5
$804 = Builtins::listInsert:11
$805 = Builtins::listInsert:14
$806 = Builtins::listInsert:16
$807 = Builtins::listInsert:24
$808 = Builtins::listInsert:25
$809 = Builtins::listInsert:27
$810 = Builtins::listInsert:35
$811 = Builtins::listInsert:5
$812 = Builtins::listLength:11
$813 = Builtins::listLength:5
$814 = Builtins::textConcatenate:11
$815 = Builtins::textConcatenate:18
$816 = Builtins::textConcatenate:5
$817 = Core:iterator:109
$818 = Core:iterator:all:11
$819 = Core:iterator:all:15
$820 = Core:iterator:all:18:13
$821 = Core:iterator:all:18:15
$822 = Core:iterator:all:18:2
$823 = Core:iterator:all:18:26
$824 = Core:iterator:all:19
$825 = Core:iterator:all:9
$826 = Core:iterator:any:11
$827 = Core:iterator:any:15
$828 = Core:iterator:any:18:13
$829 = Core:iterator:any:18:15
$830 = Core:iterator:any:18:2
$831 = Core:iterator:any:18:26
$832 = Core:iterator:any:19
$833 = Core:iterator:any:9
$834 = Core:iterator:chunked:11
$835 = Core:iterator:chunked:21
$836 = Core:iterator:chunked:23
$837 = Core:iterator:chunked:27
$838 = Core:iterator:chunked:32
$839 = Core:iterator:ensure:11
$840 = Core:iterator:ensure:15
$841 = Core:iterator:ensure:19:2
$842 = Core:iterator:ensure:20
$843 = Core:iterator:ensure:9
$844 = Core:iterator:foldLeft:14
$845 = Core:iterator:foldLeft:16
$846 = Core:iterator:foldLeft:23:1
$847 = Core:iterator:foldLeft:23:4
$848 = Core:iterator:foldLeft:23:5
$849 = Core:iterator:foldLeft:23:5:10
$850 = Core:iterator:foldLeft:23:5:8
$851 = Core:iterator:foldLeft:23:5:item
$852 = Core:iterator:foldLeft:23:5:rest
$853 = Core:iterator:foldLeft:23:iterator
$854 = Core:iterator:foldLeft:23:value
$855 = Core:iterator:foldLeft:24
$856 = Core:iterator:foldLeft:3
$857 = Core:iterator:fromList:11
$858 = Core:iterator:fromList:22
$859 = Core:iterator:fromList:23:10
$860 = Core:iterator:fromList:24
$861 = Core:iterator:generate:11
$862 = Core:iterator:generate:21
$863 = Core:iterator:generate:23
$864 = Core:iterator:generate:33
$865 = Core:iterator:generate:35
$866 = Core:iterator:generate:45
$867 = Core:iterator:generate:47
$868 = Core:iterator:generate:50:6:16
$869 = Core:iterator:generate:50:6:4
$870 = Core:iterator:generate:50:7
$871 = Core:iterator:generate:51
$872 = Core:iterator:generateWithState:11
$873 = Core:iterator:generateWithState:14:1:2
$874 = Core:iterator:generateWithState:14:1:3
$875 = Core:iterator:generateWithState:14:1:3:19
$876 = Core:iterator:generateWithState:14:1:3:20
$877 = Core:iterator:generateWithState:14:1:3:22:0
$878 = Core:iterator:generateWithState:14:1:3:23
$879 = Core:iterator:generateWithState:14:1:3:25
$880 = Core:iterator:generateWithState:14:1:3:26
$881 = Core:iterator:generateWithState:14:1:3:27
$882 = Core:iterator:generateWithState:14:1:3:6
$883 = Core:iterator:generateWithState:14:1:3:item
$884 = Core:iterator:generateWithState:14:1:3:state
$885 = Core:iterator:generateWithState:15
$886 = Core:iterator:generateWithState:9
$887 = Core:iterator:isEmpty:3
$888 = Core:iterator:isEmpty:7
$889 = Core:iterator:joinToText:12:11
$890 = Core:iterator:joinToText:12:22
$891 = Core:iterator:joinToText:13
$892 = Core:iterator:joinToText:3
$893 = Core:iterator:length:3
$894 = Core:iterator:length:6
$895 = Core:iterator:length:8
$896 = Core:iterator:map:14
$897 = Core:iterator:map:16
$898 = Core:iterator:map:19:2
$899 = Core:iterator:map:19:3
$900 = Core:iterator:map:19:3:5
$901 = Core:iterator:map:19:3:item
$902 = Core:iterator:map:19:3:rest
$903 = Core:iterator:map:20
$904 = Core:iterator:map:3
$905 = Core:iterator:next:17
$906 = Core:iterator:next:3
$907 = Core:iterator:next:6
$908 = Core:iterator:next:nextFunction
$909 = Core:iterator:reduceLeft:11
$910 = Core:iterator:reduceLeft:15
$911 = Core:iterator:reduceLeft:17
$912 = Core:iterator:reduceLeft:18
$913 = Core:iterator:reduceLeft:18:14
$914 = Core:iterator:reduceLeft:18:item
$915 = Core:iterator:reduceLeft:18:rest
$916 = Core:iterator:reduceLeft:9
$917 = Core:iterator:skip:16
$918 = Core:iterator:skip:26
$919 = Core:iterator:skip:28
$920 = Core:iterator:skip:3
$921 = Core:iterator:skip:30:6:1
$922 = Core:iterator:skip:30:6:7:2
$923 = Core:iterator:skip:30:6:8:2
$924 = Core:iterator:skip:30:6:8:3
$925 = Core:iterator:skip:30:6:8:3:15
$926 = Core:iterator:skip:30:6:8:3:17
$927 = Core:iterator:skip:30:6:8:3:rest
$928 = Core:iterator:skip:30:6:9
$929 = Core:iterator:skip:30:6:iterator
$930 = Core:iterator:skip:30:6:n
$931 = Core:iterator:skip:30:7
$932 = Core:iterator:sum:19
$933 = Core:iterator:sum:3
$934 = Core:iterator:sum:5:17
$935 = Core:iterator:sum:6
$936 = Core:iterator:sum:8:10
$937 = Core:iterator:sum:9
$938 = Core:iterator:take:11
$939 = Core:iterator:take:21
$940 = Core:iterator:take:23
$941 = Core:iterator:take:27
$942 = Core:iterator:take:29
$943 = Core:iterator:take:31:1
$944 = Core:iterator:take:31:12
$945 = Core:iterator:take:31:index
$946 = Core:iterator:take:31:item
$947 = Core:iterator:take:32
$948 = Core:iterator:take:34:7
$949 = Core:iterator:take:35
$950 = Core:iterator:takeWhile:3
$951 = Core:iterator:takeWhile:7:2
$952 = Core:iterator:takeWhile:7:3
$953 = Core:iterator:takeWhile:7:3:4
$954 = Core:iterator:takeWhile:7:3:7
$955 = Core:iterator:takeWhile:7:3:item
$956 = Core:iterator:takeWhile:7:3:rest
$957 = Core:iterator:takeWhile:8
$958 = Core:iterator:toList:3
$959 = Core:iterator:toList:6:10
$960 = Core:iterator:toList:7
$961 = Core:iterator:where:14
$962 = Core:iterator:where:16
$963 = Core:iterator:where:19:2:2
$964 = Core:iterator:where:19:2:3
$965 = Core:iterator:where:19:2:3:4
$966 = Core:iterator:where:19:2:3:6:2
$967 = Core:iterator:where:19:2:3:6:4
$968 = Core:iterator:where:19:2:3:6:5
$969 = Core:iterator:where:19:2:3:6:5:item
$970 = Core:iterator:where:19:2:3:6:5:rest
$971 = Core:iterator:where:19:2:3:7
$972 = Core:iterator:where:19:2:3:item
$973 = Core:iterator:where:19:2:3:rest
$974 = Core:iterator:where:19:3
$975 = Core:iterator:where:20
$976 = Core:iterator:where:3
$977 = Core:iterator:windowed:16
$978 = Core:iterator:windowed:26
$979 = Core:iterator:windowed:28
$980 = Core:iterator:windowed:3
$981 = Core:iterator:windowed:40
$982 = Core:iterator:windowed:50
$983 = Core:iterator:windowed:52
$984 = Core:iterator:windowed:62
$985 = Core:iterator:windowed:64
$986 = Core:iterator:windowed:67:16
$987 = Core:iterator:windowed:67:22
$988 = Core:iterator:windowed:67:26:7
$989 = Core:iterator:windowed:67:28
$990 = Core:iterator:windowed:67:3
$991 = Core:iterator:windowed:67:5
$992 = Core:iterator:windowed:68
$993 = Core:iterator:withIndex:11:1
$994 = Core:iterator:withIndex:11:4
$995 = Core:iterator:withIndex:11:5
$996 = Core:iterator:withIndex:11:5:22
$997 = Core:iterator:withIndex:11:5:item
$998 = Core:iterator:withIndex:11:5:rest
$999 = Core:iterator:withIndex:11:index
$1000 = Core:iterator:withIndex:11:iterator
$1001 = Core:iterator:withIndex:12
$1002 = Core:iterator:withIndex:3
$1003 = Core:iterator:wrapSafe:11
$1004 = Core:iterator:wrapSafe:12:9
$1005 = Core:iterator:wrapSafe:16:1
$1006 = Core:iterator:wrapSafe:16:13
$1007 = Core:iterator:wrapSafe:16:1:10
$1008 = Core:iterator:wrapSafe:16:1:function
$1009 = Core:iterator:wrapSafe:16:22
$1010 = Core:iterator:wrapSafe:16:24
$1011 = Core:iterator:wrapSafe:16:26:10
$1012 = Core:iterator:wrapSafe:16:26:10:19
$1013 = Core:iterator:wrapSafe:16:26:10:7
$1014 = Core:iterator:wrapSafe:16:26:10:item
$1015 = Core:iterator:wrapSafe:16:26:10:rest
$1016 = Core:iterator:wrapSafe:16:26:9
$1017 = Core:iterator:wrapSafe:17
$1018 = Core:iterator:wrapSafe:9
$1019 = Core:list:append:11
$1020 = Core:list:append:4
$1021 = Core:list:append:9
$1022 = Core:result:is:1
$1023 = Core:result:is:1:_
$1024 = Core:result:mapOrElse:14
$1025 = Core:result:mapOrElse:16
$1026 = Core:result:mapOrElse:2
$1027 = Core:result:mapOrElse:26
$1028 = Core:result:mapOrElse:28
$1029 = Core:result:mapOrElse:30
$1030 = Core:result:mapOrElse:30:2
$1031 = Core:result:mapOrElse:30:5
$1032 = Core:result:mapOrElse:30:value
$1033 = Core:result:mapOrElse:30:value#1
$1034 = Core:result:mapOrElse:4
$1035 = Core:result:unwrapOr:2
$1036 = Core:result:unwrapOr:4
$1037 = Core:result:unwrapOr:8
$1038 = Core:result:unwrapOrElse:14
$1039 = Core:result:unwrapOrElse:16
$1040 = Core:result:unwrapOrElse:2
$1041 = Core:result:unwrapOrElse:20:9
$1042 = Core:result:unwrapOrElse:21
$1043 = Core:result:unwrapOrElse:4
$1044 = builtinListInsert
$1045 = builtinListLength
$1046 = Empty
$1047 = Error
$1048 = Index
$1049 = Item
$1050 = Iterator
$1051 = List
$1052 = More
$1053 = N
$1054 = Ok
$1055 = Rest
$1056 = State
$1057 = Value
$1058 = ""
$1059 = "Can't `reduceLeft` an empty iterator"
$1060 = "Expected Error, got "
$1061 = "Expected Iterator, got "
$1062 = "Expected More, got "
$1063 = "Expected Ok, got "
$1064 = "Expected `Empty`, got `"
$1065 = "Iterator items need to be ints."
$1066 = "Struct doesn't contain key `Index`: `"
$1067 = "Struct doesn't contain key `Item`: `"
$1068 = "Struct doesn't contain key `Iterator`: `"
$1069 = "Struct doesn't contain key `N`: `"
$1070 = "Struct doesn't contain key `Rest`: `"
$1071 = "Struct doesn't contain key `State`: `"
$1072 = "Struct doesn't contain key `Value`: `"
$1073 = "The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `"
$1074 = "The guard needs to panic."
$1075 = "`"
$1076 = "`a | typeIs Text` was not satisfied"
$1077 = "`all` needs an iterator."
$1078 = "`any` needs an iterator."
$1079 = "`b | typeIs Text` was not satisfied"
$1080 = "`bool.is allowPartialWindows` was not satisfied"
$1081 = "`bool.is itemResult` was not satisfied"
$1082 = "`chunked` needs an iterator."
$1083 = "`ensure` needs an iterator."
$1084 = "`foldLeft` needs an iterator."
$1085 = "`function.is0 defaultGetter` was not satisfied"
$1086 = "`function.is0 notIteratorGuard` was not satisfied"
$1087 = "`function.is1 errorMapper` was not satisfied"
$1088 = "`function.is1 guard` was not satisfied"
$1089 = "`function.is1 mapper` was not satisfied"
$1090 = "`function.is1 okMapper` was not satisfied"
$1091 = "`function.is1 tester` was not satisfied"
$1092 = "`function.is1 valueGetter` was not satisfied"
$1093 = "`function.is2 combine` was not satisfied"
$1094 = "`index | intCompareTo (list | ✨.listLength) | equals Less` was not satisfied"
$1095 = "`index | isLessThanOrEqualTo (list | ✨.listLength)` was not satisfied"
$1096 = "`index | isNonNegative` was not satisfied"
$1097 = "`index | typeIs Int` was not satisfied"
$1098 = "`int.fitsInRustU32 length` was not satisfied"
$1099 = "`int.is length` was not satisfied"
$1100 = "`int.is n` was not satisfied"
$1101 = "`int.is size` was not satisfied"
$1102 = "`int.is step` was not satisfied"
$1103 = "`int.isNonNegative length` was not satisfied"
$1104 = "`int.isNonNegative n` was not satisfied"
$1105 = "`int.isPositive size` was not satisfied"
$1106 = "`int.isPositive step` was not satisfied"
$1107 = "`is list` was not satisfied"
$1108 = "`is result` was not satisfied"
$1109 = "`isEmpty` needs an iterator."
$1110 = "`joinToText` needs an iterator."
$1111 = "`length` needs an iterator."
$1112 = "`list | typeIs List` was not satisfied"
$1113 = "`list.is l` was not satisfied"
$1114 = "`map` needs an iterator."
$1115 = "`next` needs an iterator."
$1116 = "`reduceLeft` needs an iterator."
$1117 = "`skip` needs an iterator."
$1118 = "`sum` needs an iterator."
$1119 = "`takeWhile` needs an iterator."
$1120 = "`take` needs an iterator."
$1121 = "`text.is item` was not satisfied"
$1122 = "`toList` needs an iterator."
$1123 = "`where` needs an iterator."
$1124 = "`windowed` needs an iterator."
$1125 = "`withIndex` needs an iterator."
# Core:result:is
$1126 = { $1127 (+ responsible $1128) ->
  $1129 = call $147 with $1127 ($1022 is responsible)
  $1130 = call $130 with $160 $1129 ($1022 is responsible)
  # Core:result:is:1:equals:then
  $1131 = { (responsible $1132) ->
    $1133 = call $144 with $1127 ($1022 is responsible)
    $1134 = call $130 with $1054 $1133 ($1022 is responsible)
    # Core:result:is:1:equals:then
    $1135 = { (responsible $1136) ->
      $1137 = call $143 with $1127 ($1022 is responsible)
      $1138 = call $130 with $162 $1137 ($1022 is responsible)
      # Core:result:is:1:equals:then
      $1139 = { (responsible $1140) ->
        $1141 = call $142 with $1127 ($1022 is responsible)
        $1142 = ($154, $1141)
      }
      # Core:result:is:1:equals:else
      $1143 = { (responsible $1144) ->
        $1145 = call $146 with $1137 ($1022 is responsible)
        $1146 = $737
      }
      $1147 = call $132 with $1138 $1139 $1143 ($1022 is responsible)
    }
    # Core:result:is:1:equals:else
    $1148 = { (responsible $1149) ->
      $1150 = call $146 with $1133 ($1022 is responsible)
      $1151 = call $145 with $1063 $1150 ($1022 is responsible)
      $1152 = call $145 with $1151 $171 ($1022 is responsible)
      $1153 = ($156, $1152)
    }
    $1154 = call $132 with $1134 $1135 $1148 ($1022 is responsible)
  }
  # Core:result:is:1:equals:else
  $1155 = { (responsible $1156) ->
    $1157 = call $146 with $1129 ($1022 is responsible)
    $1158 = call $145 with $179 $1157 ($1022 is responsible)
    $1159 = call $145 with $1158 $186 ($1022 is responsible)
    $1160 = ($156, $1159)
  }
  $1161 = call $132 with $1130 $1131 $1155 ($1022 is responsible)
  $1162 = call $139 with $1161 $163 ($1022 is responsible)
  $1163 = call $130 with $1162 $154 ($1022 is responsible)
  # Core:result:is:1:isMatch:then
  $1164 = { (responsible $1165) ->
    $1166 = $1161
  }
  # Core:result:is:1:isMatch:else
  $1167 = { (responsible $1168) ->
    $1169 = call $147 with $1127 ($1022 is responsible)
    $1170 = call $130 with $160 $1169 ($1022 is responsible)
    # Core:result:is:1:equals:then
    $1171 = { (responsible $1172) ->
      $1173 = call $144 with $1127 ($1022 is responsible)
      $1174 = call $130 with $1047 $1173 ($1022 is responsible)
      # Core:result:is:1:equals:then
      $1175 = { (responsible $1176) ->
        $1177 = call $143 with $1127 ($1022 is responsible)
        $1178 = call $130 with $162 $1177 ($1022 is responsible)
        # Core:result:is:1:equals:then
        $1179 = { (responsible $1180) ->
          $1181 = call $142 with $1127 ($1022 is responsible)
          $1182 = ($154, $1181)
        }
        # Core:result:is:1:equals:else
        $1183 = { (responsible $1184) ->
          $1185 = call $146 with $1177 ($1022 is responsible)
          $1186 = $737
        }
        $1187 = call $132 with $1178 $1179 $1183 ($1022 is responsible)
      }
      # Core:result:is:1:equals:else
      $1188 = { (responsible $1189) ->
        $1190 = call $146 with $1173 ($1022 is responsible)
        $1191 = call $145 with $1060 $1190 ($1022 is responsible)
        $1192 = call $145 with $1191 $171 ($1022 is responsible)
        $1193 = ($156, $1192)
      }
      $1194 = call $132 with $1174 $1175 $1188 ($1022 is responsible)
    }
    # Core:result:is:1:equals:else
    $1195 = { (responsible $1196) ->
      $1197 = call $146 with $1169 ($1022 is responsible)
      $1198 = call $145 with $179 $1197 ($1022 is responsible)
      $1199 = call $145 with $1198 $186 ($1022 is responsible)
      $1200 = ($156, $1199)
    }
    $1201 = call $132 with $1170 $1171 $1195 ($1022 is responsible)
  }
  $1202 = call $132 with $1163 $1164 $1167 ($1022 is responsible)
  $1203 = call $139 with $1202 $163 ($1022 is responsible)
  $1204 = call $130 with $1203 $154 ($1022 is responsible)
  # Core:result:is:1:case-0:matched
  $1205 = { (responsible $1206) ->
    $1207 = call $139 with $1202 $164 ($1023 is responsible)
    $1208 = $162
  }
  # Core:result:is:1:case-0:didNotMatch
  $1209 = { (responsible $1210) ->
    $1211 = call $139 with $1202 $164 ($1022 is responsible)
    $1212 = $149
  }
  $1213 = call $132 with $1204 $1205 $1209 ($1022 is responsible)
}
# Core:result:mapOrElse
$1214 = { $1215 $1216 $1217 (+ responsible $1218) ->
  $1219 = call $1126 with $1215 ($1026 is responsible)
  $1220 = call $222 with $1219 $1108 $1218 ($1034 is responsible)
  $1221 = call $757 with $1216 ($1024 is responsible)
  $1222 = call $222 with $1221 $1090 $1218 ($1025 is responsible)
  $1223 = call $757 with $1217 ($1027 is responsible)
  $1224 = call $222 with $1223 $1087 $1218 ($1028 is responsible)
  $1225 = call $147 with $1215 ($1029 is responsible)
  $1226 = call $130 with $160 $1225 ($1029 is responsible)
  # Core:result:mapOrElse:30:equals:then
  $1227 = { (responsible $1228) ->
    $1229 = call $144 with $1215 ($1029 is responsible)
    $1230 = call $130 with $1054 $1229 ($1029 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1231 = { (responsible $1232) ->
      $1233 = call $143 with $1215 ($1029 is responsible)
      $1234 = call $130 with $162 $1233 ($1029 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1235 = { (responsible $1236) ->
        $1237 = call $142 with $1215 ($1029 is responsible)
        $1238 = ($154, $1237)
      }
      # Core:result:mapOrElse:30:equals:else
      $1239 = { (responsible $1240) ->
        $1241 = call $146 with $1233 ($1029 is responsible)
        $1242 = $737
      }
      $1243 = call $132 with $1234 $1235 $1239 ($1029 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1244 = { (responsible $1245) ->
      $1246 = call $146 with $1229 ($1029 is responsible)
      $1247 = call $145 with $1063 $1246 ($1029 is responsible)
      $1248 = call $145 with $1247 $171 ($1029 is responsible)
      $1249 = ($156, $1248)
    }
    $1250 = call $132 with $1230 $1231 $1244 ($1029 is responsible)
  }
  # Core:result:mapOrElse:30:equals:else
  $1251 = { (responsible $1252) ->
    $1253 = call $146 with $1225 ($1029 is responsible)
    $1254 = call $145 with $179 $1253 ($1029 is responsible)
    $1255 = call $145 with $1254 $186 ($1029 is responsible)
    $1256 = ($156, $1255)
  }
  $1257 = call $132 with $1226 $1227 $1251 ($1029 is responsible)
  $1258 = call $139 with $1257 $163 ($1029 is responsible)
  $1259 = call $130 with $1258 $154 ($1029 is responsible)
  # Core:result:mapOrElse:30:case-0:matched
  $1260 = { (responsible $1261) ->
    $1262 = call $139 with $1257 $164 ($1032 is responsible)
    $1263 = call $1216 with $1262 ($1030 is responsible)
  }
  # Core:result:mapOrElse:30:case-0:didNotMatch
  $1264 = { (responsible $1265) ->
    $1266 = call $139 with $1257 $164 ($1029 is responsible)
    $1267 = call $147 with $1215 ($1029 is responsible)
    $1268 = call $130 with $160 $1267 ($1029 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1269 = { (responsible $1270) ->
      $1271 = call $144 with $1215 ($1029 is responsible)
      $1272 = call $130 with $1047 $1271 ($1029 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1273 = { (responsible $1274) ->
        $1275 = call $143 with $1215 ($1029 is responsible)
        $1276 = call $130 with $162 $1275 ($1029 is responsible)
        # Core:result:mapOrElse:30:equals:then
        $1277 = { (responsible $1278) ->
          $1279 = call $142 with $1215 ($1029 is responsible)
          $1280 = ($154, $1279)
        }
        # Core:result:mapOrElse:30:equals:else
        $1281 = { (responsible $1282) ->
          $1283 = call $146 with $1275 ($1029 is responsible)
          $1284 = $737
        }
        $1285 = call $132 with $1276 $1277 $1281 ($1029 is responsible)
      }
      # Core:result:mapOrElse:30:equals:else
      $1286 = { (responsible $1287) ->
        $1288 = call $146 with $1271 ($1029 is responsible)
        $1289 = call $145 with $1060 $1288 ($1029 is responsible)
        $1290 = call $145 with $1289 $171 ($1029 is responsible)
        $1291 = ($156, $1290)
      }
      $1292 = call $132 with $1272 $1273 $1286 ($1029 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1293 = { (responsible $1294) ->
      $1295 = call $146 with $1267 ($1029 is responsible)
      $1296 = call $145 with $179 $1295 ($1029 is responsible)
      $1297 = call $145 with $1296 $186 ($1029 is responsible)
      $1298 = ($156, $1297)
    }
    $1299 = call $132 with $1268 $1269 $1293 ($1029 is responsible)
    $1300 = call $139 with $1299 $163 ($1029 is responsible)
    $1301 = call $130 with $1300 $154 ($1029 is responsible)
    # Core:result:mapOrElse:30:case-1:matched
    $1302 = { (responsible $1303) ->
      $1304 = call $139 with $1299 $164 ($1033 is responsible)
      $1305 = call $1217 with $1304 ($1031 is responsible)
    }
    # Core:result:mapOrElse:30:case-1:didNotMatch
    $1306 = { (responsible $1307) ->
      $1308 = call $139 with $1299 $164 ($1029 is responsible)
      $1309 = panicking because $181 ($1029 is at fault)
    }
    $1310 = call $132 with $1301 $1302 $1306 ($1029 is responsible)
  }
  $1311 = call $132 with $1259 $1260 $1264 ($1029 is responsible)
}
# Core:iterator:range:38, Core:result:unwrapOrElse:19
$1312 = { $1313 (+ responsible $1314) ->
  $1315 = $1313
}
# Core:result:unwrapOr
$1316 = { $1317 $1318 (+ responsible $1319) ->
  $1320 = call $1126 with $1317 ($1035 is responsible)
  $1321 = call $222 with $1320 $1108 $1319 ($1036 is responsible)
  # Core:result:unwrapOr:7
  $1322 = { (responsible $1323) ->
    $1324 = $1318
  }
  $1325 = call $1126 with $1317 ($1040 is responsible)
  $1326 = call $222 with $1325 $1108 $1037 ($1043 is responsible)
  $1327 = call $309 with $1322 ($1038 is responsible)
  $1328 = call $222 with $1327 $1085 $1037 ($1039 is responsible)
  # Core:result:unwrapOrElse:20
  $1329 = { $1330 (+ responsible $1331) ->
    $1332 = call $322 with $1322 ($1041 is responsible)
  }
  $1333 = call $1214 with $1317 $1312 $1329 ($1042 is responsible)
}
# Builtins::listGet
$1334 = { $1335 $1336 (+ responsible $1337) ->
  $1338 = call $147 with $1335 ($47 is responsible)
  $1339 = call $130 with $1338 $1051 ($48 is responsible)
  $1340 = call $222 with $1339 $1112 $1337 ($803 is responsible)
  $1341 = call $147 with $1336 ($47 is responsible)
  $1342 = call $130 with $1341 $152 ($48 is responsible)
  $1343 = call $222 with $1342 $1097 $1337 ($796 is responsible)
  $1344 = call $563 with $1336 ($797 is responsible)
  $1345 = call $222 with $1344 $1096 $1337 ($798 is responsible)
  $1346 = call $1045 with $1335 ($799 is responsible)
  $1347 = call $147 with $1336 ($47 is responsible)
  $1348 = call $130 with $1347 $152 ($48 is responsible)
  $1349 = call $222 with $1348 $188 $800 ($24 is responsible)
  $1350 = call $135 with $1336 $1346 ($23 is responsible)
  $1351 = call $130 with $1350 $153 ($1 is responsible)
  $1352 = call $222 with $1351 $1094 $1337 ($801 is responsible)
  $1353 = call $139 with $1335 $1336 ($802 is responsible)
}
# Builtins::listInsert
$1354 = { $1355 $1356 $1357 (+ responsible $1358) ->
  $1359 = call $147 with $1355 ($47 is responsible)
  $1360 = call $130 with $1359 $1051 ($48 is responsible)
  $1361 = call $222 with $1360 $1112 $1358 ($811 is responsible)
  $1362 = call $147 with $1356 ($47 is responsible)
  $1363 = call $130 with $1362 $152 ($48 is responsible)
  $1364 = call $222 with $1363 $1097 $1358 ($804 is responsible)
  $1365 = call $563 with $1356 ($805 is responsible)
  $1366 = call $222 with $1365 $1096 $1358 ($806 is responsible)
  $1367 = call $1045 with $1355 ($807 is responsible)
  $1368 = call $615 with $1356 $1367 ($808 is responsible)
  $1369 = call $222 with $1368 $1095 $1358 ($809 is responsible)
  $1370 = call $1044 with $1355 $1356 $1357 ($810 is responsible)
}
# Core:list:append
$1371 = { $1372 $1373 (+ responsible $1374) ->
  $1375 = call $147 with $1372 ($49 is responsible)
  $1376 = call $130 with $1375 $1051 ($1 is responsible)
  $1377 = call $222 with $1376 $1107 $1374 ($1020 is responsible)
  $1378 = call $147 with $1372 ($47 is responsible)
  $1379 = call $130 with $1378 $1051 ($48 is responsible)
  $1380 = call $222 with $1379 $1112 $1021 ($813 is responsible)
  $1381 = call $1045 with $1372 ($812 is responsible)
  $1382 = call $1354 with $1372 $1381 $1373 ($1019 is responsible)
}
# Core:iterator:generate:50:5, Core:iterator:generateWithState:14:1:3:case-1:matched, Core:iterator:map:19:3:case-0:matched, Core:iterator:skip:30:6:8:3:case-0:matched, Core:iterator:takeWhile:7:3:case-0:matched, Core:iterator:takeWhile:7:3:6, Core:iterator:where:19:2:3:case-0:matched, Core:iterator:where:19:2:3:6:5:case-0:matched, Core:iterator:windowed:67:27, Core:iterator:withIndex:11:5:case-0:matched, Core:iterator:wrapSafe:16:26:10:case-0:matched
$1383 = { (responsible $1384) ->
  $1385 = $1046
}
# Core:iterator:wrapSafe
$1386 = { $1387 $1388 (+ responsible $1389) ->
  $1390 = call $309 with $1388 ($1018 is responsible)
  $1391 = call $222 with $1390 $1086 $1389 ($1003 is responsible)
  # Core:iterator:wrapSafe:12
  $1392 = { (responsible $1393) ->
    $1394 = call $322 with $1388 ($1004 is responsible)
    $1395 = panicking because $1074 ($1389 is at fault)
  }
  # Core:iterator:wrapSafe:16
  $1396 = { $1397 $1398 (+ responsible $1399) ->
    $1400 = call $147 with $1398 ($1005 is responsible)
    $1401 = call $130 with $160 $1400 ($1005 is responsible)
    # Core:iterator:wrapSafe:16:1:equals:then
    $1402 = { (responsible $1403) ->
      $1404 = call $144 with $1398 ($1005 is responsible)
      $1405 = call $130 with $1050 $1404 ($1005 is responsible)
      # Core:iterator:wrapSafe:16:1:equals:then
      $1406 = { (responsible $1407) ->
        $1408 = call $143 with $1398 ($1005 is responsible)
        $1409 = call $130 with $162 $1408 ($1005 is responsible)
        # Core:iterator:wrapSafe:16:1:equals:then
        $1410 = { (responsible $1411) ->
          $1412 = call $142 with $1398 ($1005 is responsible)
          $1413 = ($154, $1412)
        }
        # Core:iterator:wrapSafe:16:1:equals:else
        $1414 = { (responsible $1415) ->
          $1416 = call $146 with $1408 ($1005 is responsible)
          $1417 = $737
        }
        $1418 = call $132 with $1409 $1410 $1414 ($1005 is responsible)
      }
      # Core:iterator:wrapSafe:16:1:equals:else
      $1419 = { (responsible $1420) ->
        $1421 = call $146 with $1404 ($1005 is responsible)
        $1422 = call $145 with $1061 $1421 ($1005 is responsible)
        $1423 = call $145 with $1422 $171 ($1005 is responsible)
        $1424 = ($156, $1423)
      }
      $1425 = call $132 with $1405 $1406 $1419 ($1005 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:equals:else
    $1426 = { (responsible $1427) ->
      $1428 = call $146 with $1400 ($1005 is responsible)
      $1429 = call $145 with $179 $1428 ($1005 is responsible)
      $1430 = call $145 with $1429 $186 ($1005 is responsible)
      $1431 = ($156, $1430)
    }
    $1432 = call $132 with $1401 $1402 $1426 ($1005 is responsible)
    $1433 = call $139 with $1432 $163 ($1005 is responsible)
    $1434 = call $130 with $1433 $154 ($1005 is responsible)
    # Core:iterator:wrapSafe:16:1:case-0:matched
    $1435 = { (responsible $1436) ->
      $1437 = call $139 with $1432 $164 ($1008 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:case-0:didNotMatch
    $1438 = { (responsible $1439) ->
      $1440 = call $139 with $1432 $164 ($1005 is responsible)
      $1441 = call $322 with $1392 ($1007 is responsible)
    }
    $1442 = call $132 with $1434 $1435 $1438 ($1005 is responsible)
    $1443 = call $309 with $1442 ($1006 is responsible)
    $1444 = call $368 with $1443 ($1009 is responsible)
    $1445 = call $334 with $1444 ($97 is responsible)
    $1446 = call $222 with $1445 $191 $1010 ($93 is responsible)
    $1447 = call $309 with $1392 ($94 is responsible)
    $1448 = call $222 with $1447 $201 $1010 ($95 is responsible)
    $1449 = call $253 with $1444 $1392 $219 ($96 is responsible)
    # Core:iterator:wrapSafe:16:26
    $1450 = { (responsible $1451) ->
      $1452 = call $322 with $1442 ($1016 is responsible)
      $1453 = call $130 with $1046 $1452 ($1011 is responsible)
      # Core:iterator:wrapSafe:16:26:10:equals:else
      $1454 = { (responsible $1455) ->
        $1456 = call $146 with $1452 ($1011 is responsible)
        $1457 = call $145 with $1064 $1456 ($1011 is responsible)
        $1458 = call $145 with $1457 $186 ($1011 is responsible)
        $1459 = ($156, $1458)
      }
      $1460 = call $132 with $1453 $247 $1454 ($1011 is responsible)
      $1461 = call $139 with $1460 $163 ($1011 is responsible)
      $1462 = call $130 with $1461 $154 ($1011 is responsible)
      # Core:iterator:wrapSafe:16:26:10:case-0:didNotMatch
      $1463 = { (responsible $1464) ->
        $1465 = call $139 with $1460 $164 ($1011 is responsible)
        $1466 = call $147 with $1452 ($1011 is responsible)
        $1467 = call $130 with $160 $1466 ($1011 is responsible)
        # Core:iterator:wrapSafe:16:26:10:equals:then
        $1468 = { (responsible $1469) ->
          $1470 = call $144 with $1452 ($1011 is responsible)
          $1471 = call $130 with $1052 $1470 ($1011 is responsible)
          # Core:iterator:wrapSafe:16:26:10:equals:then
          $1472 = { (responsible $1473) ->
            $1474 = call $143 with $1452 ($1011 is responsible)
            $1475 = call $130 with $162 $1474 ($1011 is responsible)
            # Core:iterator:wrapSafe:16:26:10:equals:then
            $1476 = { (responsible $1477) ->
              $1478 = call $142 with $1452 ($1011 is responsible)
              $1479 = call $147 with $1478 ($1011 is responsible)
              $1480 = call $130 with $159 $1479 ($1011 is responsible)
              # Core:iterator:wrapSafe:16:26:10:equals:then
              $1481 = { (responsible $1482) ->
                $1483 = call $141 with $1478 $1049 ($1011 is responsible)
                # Core:iterator:wrapSafe:16:26:10:hasKey:then
                $1484 = { (responsible $1485) ->
                  $1486 = call $140 with $1478 $1049 ($1011 is responsible)
                  $1487 = ($154, $1486)
                }
                # Core:iterator:wrapSafe:16:26:10:hasKey:else
                $1488 = { (responsible $1489) ->
                  $1490 = call $146 with $1478 ($1011 is responsible)
                  $1491 = call $145 with $1067 $1490 ($1011 is responsible)
                  $1492 = call $145 with $1491 $186 ($1011 is responsible)
                  $1493 = ($156, $1492)
                }
                $1494 = call $132 with $1483 $1484 $1488 ($1011 is responsible)
                $1495 = call $139 with $1494 $163 ($1011 is responsible)
                $1496 = call $130 with $1495 $154 ($1011 is responsible)
                # Core:iterator:wrapSafe:16:26:10:isMatch:then
                $1497 = { (responsible $1498) ->
                  $1499 = call $139 with $1494 $164 ($1011 is responsible)
                  $1500 = call $141 with $1478 $1055 ($1011 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:hasKey:then
                  $1501 = { (responsible $1502) ->
                    $1503 = call $140 with $1478 $1055 ($1011 is responsible)
                    $1504 = ($154, $1503)
                  }
                  # Core:iterator:wrapSafe:16:26:10:hasKey:else
                  $1505 = { (responsible $1506) ->
                    $1507 = call $146 with $1478 ($1011 is responsible)
                    $1508 = call $145 with $1070 $1507 ($1011 is responsible)
                    $1509 = call $145 with $1508 $186 ($1011 is responsible)
                    $1510 = ($156, $1509)
                  }
                  $1511 = call $132 with $1500 $1501 $1505 ($1011 is responsible)
                  $1512 = call $139 with $1511 $163 ($1011 is responsible)
                  $1513 = call $130 with $1512 $154 ($1011 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:isMatch:then
                  $1514 = { (responsible $1515) ->
                    $1516 = call $139 with $1511 $164 ($1011 is responsible)
                    $1517 = ($154, $1499, $1516)
                  }
                  # Core:iterator:wrapSafe:16:26:10:isMatch:else
                  $1518 = { (responsible $1519) ->
                    $1520 = $1511
                  }
                  $1521 = call $132 with $1513 $1514 $1518 ($1011 is responsible)
                }
                # Core:iterator:wrapSafe:16:26:10:isMatch:else
                $1522 = { (responsible $1523) ->
                  $1524 = $1494
                }
                $1525 = call $132 with $1496 $1497 $1522 ($1011 is responsible)
              }
              # Core:iterator:wrapSafe:16:26:10:equals:else
              $1526 = { (responsible $1527) ->
                $1528 = call $146 with $1479 ($1011 is responsible)
                $1529 = call $145 with $178 $1528 ($1011 is responsible)
                $1530 = call $145 with $1529 $186 ($1011 is responsible)
                $1531 = ($156, $1530)
              }
              $1532 = call $132 with $1480 $1481 $1526 ($1011 is responsible)
            }
            # Core:iterator:wrapSafe:16:26:10:equals:else
            $1533 = { (responsible $1534) ->
              $1535 = call $146 with $1474 ($1011 is responsible)
              $1536 = $737
            }
            $1537 = call $132 with $1475 $1476 $1533 ($1011 is responsible)
          }
          # Core:iterator:wrapSafe:16:26:10:equals:else
          $1538 = { (responsible $1539) ->
            $1540 = call $146 with $1470 ($1011 is responsible)
            $1541 = call $145 with $1062 $1540 ($1011 is responsible)
            $1542 = call $145 with $1541 $171 ($1011 is responsible)
            $1543 = ($156, $1542)
          }
          $1544 = call $132 with $1471 $1472 $1538 ($1011 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:equals:else
        $1545 = { (responsible $1546) ->
          $1547 = call $146 with $1466 ($1011 is responsible)
          $1548 = call $145 with $179 $1547 ($1011 is responsible)
          $1549 = call $145 with $1548 $186 ($1011 is responsible)
          $1550 = ($156, $1549)
        }
        $1551 = call $132 with $1467 $1468 $1545 ($1011 is responsible)
        $1552 = call $139 with $1551 $163 ($1011 is responsible)
        $1553 = call $130 with $1552 $154 ($1011 is responsible)
        # Core:iterator:wrapSafe:16:26:10:case-1:matched
        $1554 = { (responsible $1555) ->
          $1556 = call $139 with $1551 $164 ($1014 is responsible)
          $1557 = call $139 with $1551 $165 ($1015 is responsible)
          $1558 = call $1397 with $1557 ($1013 is responsible)
          $1559 = [$1055: $1558, $1049: $1556]
          $1560 = More $1559
        }
        # Core:iterator:wrapSafe:16:26:10:case-1:didNotMatch
        $1561 = { (responsible $1562) ->
          $1563 = call $139 with $1551 $164 ($1011 is responsible)
          $1564 = call $322 with $1392 ($1012 is responsible)
        }
        $1565 = call $132 with $1553 $1554 $1561 ($1011 is responsible)
      }
      $1566 = call $132 with $1462 $1383 $1463 ($1011 is responsible)
    }
    $1567 = Iterator $1450
  }
  $1568 = call $518 with $1396 ($102 is responsible)
  $1569 = call $222 with $1568 $182 $1017 ($98 is responsible)
  # Core:controlFlow:recursive:18
  $1570 = { $1571 $1572 (+ responsible $1573) ->
    # Core:controlFlow:recursive:18:0
    $1574 = { $1575 (+ responsible $1576) ->
      $1577 = call $1571 with $1571 $1575 ($99 is responsible)
    }
    $1578 = call $1396 with $1574 $1572 ($100 is responsible)
  }
  $1579 = call $1570 with $1570 $1387 ($101 is responsible)
}
# Core:iterator:next
$1580 = { $1581 (+ responsible $1582) ->
  # Core:iterator:next:2
  $1583 = { (responsible $1584) ->
    $1585 = panicking because $1115 ($1582 is at fault)
  }
  $1586 = call $1386 with $1581 $1583 ($906 is responsible)
  $1587 = call $147 with $1586 ($907 is responsible)
  $1588 = call $130 with $160 $1587 ($907 is responsible)
  # Core:iterator:next:6:equals:then
  $1589 = { (responsible $1590) ->
    $1591 = call $144 with $1586 ($907 is responsible)
    $1592 = call $130 with $1050 $1591 ($907 is responsible)
    # Core:iterator:next:6:equals:then
    $1593 = { (responsible $1594) ->
      $1595 = call $143 with $1586 ($907 is responsible)
      $1596 = call $130 with $162 $1595 ($907 is responsible)
      # Core:iterator:next:6:equals:then
      $1597 = { (responsible $1598) ->
        $1599 = call $142 with $1586 ($907 is responsible)
        $1600 = ($154, $1599)
      }
      # Core:iterator:next:6:equals:else
      $1601 = { (responsible $1602) ->
        $1603 = call $146 with $1595 ($907 is responsible)
        $1604 = $737
      }
      $1605 = call $132 with $1596 $1597 $1601 ($907 is responsible)
    }
    # Core:iterator:next:6:equals:else
    $1606 = { (responsible $1607) ->
      $1608 = call $146 with $1591 ($907 is responsible)
      $1609 = call $145 with $1061 $1608 ($907 is responsible)
      $1610 = call $145 with $1609 $171 ($907 is responsible)
      $1611 = ($156, $1610)
    }
    $1612 = call $132 with $1592 $1593 $1606 ($907 is responsible)
  }
  # Core:iterator:next:6:equals:else
  $1613 = { (responsible $1614) ->
    $1615 = call $146 with $1587 ($907 is responsible)
    $1616 = call $145 with $179 $1615 ($907 is responsible)
    $1617 = call $145 with $1616 $186 ($907 is responsible)
    $1618 = ($156, $1617)
  }
  $1619 = call $132 with $1588 $1589 $1613 ($907 is responsible)
  $1620 = call $139 with $1619 $163 ($907 is responsible)
  $1621 = call $130 with $1620 $154 ($907 is responsible)
  # Core:iterator:next:6:isMatch:else
  $1622 = { (responsible $1623) ->
    $1624 = call $139 with $1619 $164 ($907 is responsible)
    $1625 = panicking because $1624 ($907 is at fault)
  }
  $1626 = call $132 with $1621 $219 $1622 ($907 is responsible)
  $1627 = call $139 with $1619 $164 ($908 is responsible)
  $1628 = call $322 with $1627 ($905 is responsible)
}
# Core:iterator:generateWithState
$1629 = { $1630 $1631 (+ responsible $1632) ->
  $1633 = call $757 with $1631 ($886 is responsible)
  $1634 = call $222 with $1633 $1089 $1632 ($872 is responsible)
  # Core:iterator:generateWithState:14
  $1635 = { $1636 $1637 (+ responsible $1638) ->
    # Core:iterator:generateWithState:14:1
    $1639 = { (responsible $1640) ->
      $1641 = call $1631 with $1637 ($873 is responsible)
      $1642 = call $147 with $1641 ($874 is responsible)
      $1643 = call $130 with $160 $1642 ($874 is responsible)
      # Core:iterator:generateWithState:14:1:3:equals:then
      $1644 = { (responsible $1645) ->
        $1646 = call $144 with $1641 ($874 is responsible)
        $1647 = call $130 with $1052 $1646 ($874 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:then
        $1648 = { (responsible $1649) ->
          $1650 = call $143 with $1641 ($874 is responsible)
          $1651 = call $130 with $162 $1650 ($874 is responsible)
          # Core:iterator:generateWithState:14:1:3:equals:then
          $1652 = { (responsible $1653) ->
            $1654 = call $142 with $1641 ($874 is responsible)
            $1655 = call $147 with $1654 ($874 is responsible)
            $1656 = call $130 with $159 $1655 ($874 is responsible)
            # Core:iterator:generateWithState:14:1:3:equals:then
            $1657 = { (responsible $1658) ->
              $1659 = call $141 with $1654 $1049 ($874 is responsible)
              # Core:iterator:generateWithState:14:1:3:hasKey:then
              $1660 = { (responsible $1661) ->
                $1662 = call $140 with $1654 $1049 ($874 is responsible)
                $1663 = ($154, $1662)
              }
              # Core:iterator:generateWithState:14:1:3:hasKey:else
              $1664 = { (responsible $1665) ->
                $1666 = call $146 with $1654 ($874 is responsible)
                $1667 = call $145 with $1067 $1666 ($874 is responsible)
                $1668 = call $145 with $1667 $186 ($874 is responsible)
                $1669 = ($156, $1668)
              }
              $1670 = call $132 with $1659 $1660 $1664 ($874 is responsible)
              $1671 = call $139 with $1670 $163 ($874 is responsible)
              $1672 = call $130 with $1671 $154 ($874 is responsible)
              # Core:iterator:generateWithState:14:1:3:isMatch:then
              $1673 = { (responsible $1674) ->
                $1675 = call $139 with $1670 $164 ($874 is responsible)
                $1676 = call $141 with $1654 $1056 ($874 is responsible)
                # Core:iterator:generateWithState:14:1:3:hasKey:then
                $1677 = { (responsible $1678) ->
                  $1679 = call $140 with $1654 $1056 ($874 is responsible)
                  $1680 = ($154, $1679)
                }
                # Core:iterator:generateWithState:14:1:3:hasKey:else
                $1681 = { (responsible $1682) ->
                  $1683 = call $146 with $1654 ($874 is responsible)
                  $1684 = call $145 with $1071 $1683 ($874 is responsible)
                  $1685 = call $145 with $1684 $186 ($874 is responsible)
                  $1686 = ($156, $1685)
                }
                $1687 = call $132 with $1676 $1677 $1681 ($874 is responsible)
                $1688 = call $139 with $1687 $163 ($874 is responsible)
                $1689 = call $130 with $1688 $154 ($874 is responsible)
                # Core:iterator:generateWithState:14:1:3:isMatch:then
                $1690 = { (responsible $1691) ->
                  $1692 = call $139 with $1687 $164 ($874 is responsible)
                  $1693 = ($154, $1675, $1692)
                }
                # Core:iterator:generateWithState:14:1:3:isMatch:else
                $1694 = { (responsible $1695) ->
                  $1696 = $1687
                }
                $1697 = call $132 with $1689 $1690 $1694 ($874 is responsible)
              }
              # Core:iterator:generateWithState:14:1:3:isMatch:else
              $1698 = { (responsible $1699) ->
                $1700 = $1670
              }
              $1701 = call $132 with $1672 $1673 $1698 ($874 is responsible)
            }
            # Core:iterator:generateWithState:14:1:3:equals:else
            $1702 = { (responsible $1703) ->
              $1704 = call $146 with $1655 ($874 is responsible)
              $1705 = call $145 with $178 $1704 ($874 is responsible)
              $1706 = call $145 with $1705 $186 ($874 is responsible)
              $1707 = ($156, $1706)
            }
            $1708 = call $132 with $1656 $1657 $1702 ($874 is responsible)
          }
          # Core:iterator:generateWithState:14:1:3:equals:else
          $1709 = { (responsible $1710) ->
            $1711 = call $146 with $1650 ($874 is responsible)
            $1712 = $737
          }
          $1713 = call $132 with $1651 $1652 $1709 ($874 is responsible)
        }
        # Core:iterator:generateWithState:14:1:3:equals:else
        $1714 = { (responsible $1715) ->
          $1716 = call $146 with $1646 ($874 is responsible)
          $1717 = call $145 with $1062 $1716 ($874 is responsible)
          $1718 = call $145 with $1717 $171 ($874 is responsible)
          $1719 = ($156, $1718)
        }
        $1720 = call $132 with $1647 $1648 $1714 ($874 is responsible)
      }
      # Core:iterator:generateWithState:14:1:3:equals:else
      $1721 = { (responsible $1722) ->
        $1723 = call $146 with $1642 ($874 is responsible)
        $1724 = call $145 with $179 $1723 ($874 is responsible)
        $1725 = call $145 with $1724 $186 ($874 is responsible)
        $1726 = ($156, $1725)
      }
      $1727 = call $132 with $1643 $1644 $1721 ($874 is responsible)
      $1728 = call $139 with $1727 $163 ($874 is responsible)
      $1729 = call $130 with $1728 $154 ($874 is responsible)
      # Core:iterator:generateWithState:14:1:3:case-0:matched
      $1730 = { (responsible $1731) ->
        $1732 = call $139 with $1727 $164 ($883 is responsible)
        $1733 = call $139 with $1727 $165 ($884 is responsible)
        $1734 = call $1636 with $1733 ($882 is responsible)
        $1735 = [$1055: $1734, $1049: $1732]
        $1736 = More $1735
      }
      # Core:iterator:generateWithState:14:1:3:case-0:didNotMatch
      $1737 = { (responsible $1738) ->
        $1739 = call $139 with $1727 $164 ($874 is responsible)
        $1740 = call $130 with $1046 $1641 ($874 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:else
        $1741 = { (responsible $1742) ->
          $1743 = call $146 with $1641 ($874 is responsible)
          $1744 = call $145 with $1064 $1743 ($874 is responsible)
          $1745 = call $145 with $1744 $186 ($874 is responsible)
          $1746 = ($156, $1745)
        }
        $1747 = call $132 with $1740 $247 $1741 ($874 is responsible)
        $1748 = call $139 with $1747 $163 ($874 is responsible)
        $1749 = call $130 with $1748 $154 ($874 is responsible)
        # Core:iterator:generateWithState:14:1:3:case-1:didNotMatch
        $1750 = { (responsible $1751) ->
          $1752 = call $139 with $1747 $164 ($874 is responsible)
          # Core:iterator:generateWithState:14:1:3:case-2:matched
          $1753 = { (responsible $1754) ->
            $1755 = call $147 with $1641 ($875 is responsible)
            $1756 = call $130 with $1755 $161 ($876 is responsible)
            # Core:iterator:generateWithState:14:1:3:21
            $1757 = { (responsible $1758) ->
              $1759 = $1641
            }
            # Core:iterator:generateWithState:14:1:3:22
            $1760 = { (responsible $1761) ->
              $1762 = call $146 with $1641 ($877 is responsible)
            }
            $1763 = call $132 with $1756 $1757 $1760 ($878 is responsible)
            $1764 = call $145 with $1073 $1763 ($879 is responsible)
            $1765 = call $145 with $1764 $1075 ($880 is responsible)
            $1766 = call $222 with $149 $1765 $1632 ($881 is responsible)
          }
          $1767 = call $1753 with no arguments ($874 is responsible)
        }
        $1768 = call $132 with $1749 $1383 $1750 ($874 is responsible)
      }
      $1769 = call $132 with $1729 $1730 $1737 ($874 is responsible)
    }
    $1770 = Iterator $1639
  }
  $1771 = call $518 with $1635 ($102 is responsible)
  $1772 = call $222 with $1771 $182 $885 ($98 is responsible)
  # Core:controlFlow:recursive:18
  $1773 = { $1774 $1775 (+ responsible $1776) ->
    # Core:controlFlow:recursive:18:0
    $1777 = { $1778 (+ responsible $1779) ->
      $1780 = call $1774 with $1774 $1778 ($99 is responsible)
    }
    $1781 = call $1635 with $1777 $1775 ($100 is responsible)
  }
  $1782 = call $1773 with $1773 $1630 ($101 is responsible)
}
# Core:iterator:generate
$1783 = { $1784 $1785 (+ responsible $1786) ->
  $1787 = call $147 with $1784 ($49 is responsible)
  $1788 = call $130 with $1787 $152 ($1 is responsible)
  $1789 = call $222 with $1788 $1099 $1786 ($861 is responsible)
  $1790 = call $726 with $1784 ($862 is responsible)
  $1791 = call $222 with $1790 $1103 $1786 ($863 is responsible)
  $1792 = call $147 with $1784 ($49 is responsible)
  $1793 = call $130 with $1792 $152 ($1 is responsible)
  $1794 = call $222 with $1793 $208 $864 ($771 is responsible)
  $1795 = call $726 with $1784 ($772 is responsible)
  $1796 = call $222 with $1795 $779 $864 ($773 is responsible)
  $1797 = call $702 with $1784 $778 ($770 is responsible)
  $1798 = call $222 with $1797 $1098 $1786 ($865 is responsible)
  $1799 = call $757 with $1785 ($866 is responsible)
  $1800 = call $222 with $1799 $1092 $1786 ($867 is responsible)
  # Core:iterator:generate:50
  $1801 = { $1802 (+ responsible $1803) ->
    $1804 = call $130 with $1802 $1784 ($1 is responsible)
    # Core:iterator:generate:50:6
    $1805 = { (responsible $1806) ->
      $1807 = call $1785 with $1802 ($869 is responsible)
      $1808 = call $147 with $1802 ($47 is responsible)
      $1809 = call $130 with $1808 $152 ($48 is responsible)
      $1810 = call $222 with $1809 $188 $868 ($19 is responsible)
      $1811 = call $133 with $1802 $164 ($18 is responsible)
      $1812 = [$1056: $1811, $1049: $1807]
      $1813 = More $1812
    }
    $1814 = call $253 with $1804 $1383 $1805 ($870 is responsible)
  }
  $1815 = call $1629 with $163 $1801 ($871 is responsible)
}
# Core:iterator:map
$1816 = { $1817 $1818 (+ responsible $1819) ->
  # Core:iterator:map:2
  $1820 = { (responsible $1821) ->
    $1822 = panicking because $1114 ($1819 is at fault)
  }
  $1823 = call $1386 with $1817 $1820 ($904 is responsible)
  $1824 = call $757 with $1818 ($896 is responsible)
  $1825 = call $222 with $1824 $1089 $1819 ($897 is responsible)
  # Core:iterator:map:19
  $1826 = { $1827 (+ responsible $1828) ->
    $1829 = call $1580 with $1827 ($898 is responsible)
    $1830 = call $130 with $1046 $1829 ($899 is responsible)
    # Core:iterator:map:19:3:equals:else
    $1831 = { (responsible $1832) ->
      $1833 = call $146 with $1829 ($899 is responsible)
      $1834 = call $145 with $1064 $1833 ($899 is responsible)
      $1835 = call $145 with $1834 $186 ($899 is responsible)
      $1836 = ($156, $1835)
    }
    $1837 = call $132 with $1830 $247 $1831 ($899 is responsible)
    $1838 = call $139 with $1837 $163 ($899 is responsible)
    $1839 = call $130 with $1838 $154 ($899 is responsible)
    # Core:iterator:map:19:3:case-0:didNotMatch
    $1840 = { (responsible $1841) ->
      $1842 = call $139 with $1837 $164 ($899 is responsible)
      $1843 = call $147 with $1829 ($899 is responsible)
      $1844 = call $130 with $160 $1843 ($899 is responsible)
      # Core:iterator:map:19:3:equals:then
      $1845 = { (responsible $1846) ->
        $1847 = call $144 with $1829 ($899 is responsible)
        $1848 = call $130 with $1052 $1847 ($899 is responsible)
        # Core:iterator:map:19:3:equals:then
        $1849 = { (responsible $1850) ->
          $1851 = call $143 with $1829 ($899 is responsible)
          $1852 = call $130 with $162 $1851 ($899 is responsible)
          # Core:iterator:map:19:3:equals:then
          $1853 = { (responsible $1854) ->
            $1855 = call $142 with $1829 ($899 is responsible)
            $1856 = call $147 with $1855 ($899 is responsible)
            $1857 = call $130 with $159 $1856 ($899 is responsible)
            # Core:iterator:map:19:3:equals:then
            $1858 = { (responsible $1859) ->
              $1860 = call $141 with $1855 $1049 ($899 is responsible)
              # Core:iterator:map:19:3:hasKey:then
              $1861 = { (responsible $1862) ->
                $1863 = call $140 with $1855 $1049 ($899 is responsible)
                $1864 = ($154, $1863)
              }
              # Core:iterator:map:19:3:hasKey:else
              $1865 = { (responsible $1866) ->
                $1867 = call $146 with $1855 ($899 is responsible)
                $1868 = call $145 with $1067 $1867 ($899 is responsible)
                $1869 = call $145 with $1868 $186 ($899 is responsible)
                $1870 = ($156, $1869)
              }
              $1871 = call $132 with $1860 $1861 $1865 ($899 is responsible)
              $1872 = call $139 with $1871 $163 ($899 is responsible)
              $1873 = call $130 with $1872 $154 ($899 is responsible)
              # Core:iterator:map:19:3:isMatch:then
              $1874 = { (responsible $1875) ->
                $1876 = call $139 with $1871 $164 ($899 is responsible)
                $1877 = call $141 with $1855 $1055 ($899 is responsible)
                # Core:iterator:map:19:3:hasKey:then
                $1878 = { (responsible $1879) ->
                  $1880 = call $140 with $1855 $1055 ($899 is responsible)
                  $1881 = ($154, $1880)
                }
                # Core:iterator:map:19:3:hasKey:else
                $1882 = { (responsible $1883) ->
                  $1884 = call $146 with $1855 ($899 is responsible)
                  $1885 = call $145 with $1070 $1884 ($899 is responsible)
                  $1886 = call $145 with $1885 $186 ($899 is responsible)
                  $1887 = ($156, $1886)
                }
                $1888 = call $132 with $1877 $1878 $1882 ($899 is responsible)
                $1889 = call $139 with $1888 $163 ($899 is responsible)
                $1890 = call $130 with $1889 $154 ($899 is responsible)
                # Core:iterator:map:19:3:isMatch:then
                $1891 = { (responsible $1892) ->
                  $1893 = call $139 with $1888 $164 ($899 is responsible)
                  $1894 = ($154, $1876, $1893)
                }
                # Core:iterator:map:19:3:isMatch:else
                $1895 = { (responsible $1896) ->
                  $1897 = $1888
                }
                $1898 = call $132 with $1890 $1891 $1895 ($899 is responsible)
              }
              # Core:iterator:map:19:3:isMatch:else
              $1899 = { (responsible $1900) ->
                $1901 = $1871
              }
              $1902 = call $132 with $1873 $1874 $1899 ($899 is responsible)
            }
            # Core:iterator:map:19:3:equals:else
            $1903 = { (responsible $1904) ->
              $1905 = call $146 with $1856 ($899 is responsible)
              $1906 = call $145 with $178 $1905 ($899 is responsible)
              $1907 = call $145 with $1906 $186 ($899 is responsible)
              $1908 = ($156, $1907)
            }
            $1909 = call $132 with $1857 $1858 $1903 ($899 is responsible)
          }
          # Core:iterator:map:19:3:equals:else
          $1910 = { (responsible $1911) ->
            $1912 = call $146 with $1851 ($899 is responsible)
            $1913 = $737
          }
          $1914 = call $132 with $1852 $1853 $1910 ($899 is responsible)
        }
        # Core:iterator:map:19:3:equals:else
        $1915 = { (responsible $1916) ->
          $1917 = call $146 with $1847 ($899 is responsible)
          $1918 = call $145 with $1062 $1917 ($899 is responsible)
          $1919 = call $145 with $1918 $171 ($899 is responsible)
          $1920 = ($156, $1919)
        }
        $1921 = call $132 with $1848 $1849 $1915 ($899 is responsible)
      }
      # Core:iterator:map:19:3:equals:else
      $1922 = { (responsible $1923) ->
        $1924 = call $146 with $1843 ($899 is responsible)
        $1925 = call $145 with $179 $1924 ($899 is responsible)
        $1926 = call $145 with $1925 $186 ($899 is responsible)
        $1927 = ($156, $1926)
      }
      $1928 = call $132 with $1844 $1845 $1922 ($899 is responsible)
      $1929 = call $139 with $1928 $163 ($899 is responsible)
      $1930 = call $130 with $1929 $154 ($899 is responsible)
      # Core:iterator:map:19:3:case-1:matched
      $1931 = { (responsible $1932) ->
        $1933 = call $139 with $1928 $164 ($901 is responsible)
        $1934 = call $139 with $1928 $165 ($902 is responsible)
        $1935 = call $1818 with $1933 ($900 is responsible)
        $1936 = [$1056: $1934, $1049: $1935]
        $1937 = More $1936
      }
      # Core:iterator:map:19:3:case-1:didNotMatch
      $1938 = { (responsible $1939) ->
        $1940 = call $139 with $1928 $164 ($899 is responsible)
        $1941 = panicking because $181 ($899 is at fault)
      }
      $1942 = call $132 with $1930 $1931 $1938 ($899 is responsible)
    }
    $1943 = call $132 with $1839 $1383 $1840 ($899 is responsible)
  }
  $1944 = call $1629 with $1823 $1826 ($903 is responsible)
}
# Core:iterator:withIndex:11
$1945 = { $1946 (+ responsible $1947) ->
  $1948 = call $147 with $1946 ($993 is responsible)
  $1949 = call $130 with $159 $1948 ($993 is responsible)
  # Core:iterator:withIndex:11:1:equals:then
  $1950 = { (responsible $1951) ->
    $1952 = call $141 with $1946 $1050 ($993 is responsible)
    # Core:iterator:withIndex:11:1:hasKey:then
    $1953 = { (responsible $1954) ->
      $1955 = call $140 with $1946 $1050 ($993 is responsible)
      $1956 = ($154, $1955)
    }
    # Core:iterator:withIndex:11:1:hasKey:else
    $1957 = { (responsible $1958) ->
      $1959 = call $146 with $1946 ($993 is responsible)
      $1960 = call $145 with $1068 $1959 ($993 is responsible)
      $1961 = call $145 with $1960 $186 ($993 is responsible)
      $1962 = ($156, $1961)
    }
    $1963 = call $132 with $1952 $1953 $1957 ($993 is responsible)
    $1964 = call $139 with $1963 $163 ($993 is responsible)
    $1965 = call $130 with $1964 $154 ($993 is responsible)
    # Core:iterator:withIndex:11:1:isMatch:then
    $1966 = { (responsible $1967) ->
      $1968 = call $139 with $1963 $164 ($993 is responsible)
      $1969 = call $141 with $1946 $1048 ($993 is responsible)
      # Core:iterator:withIndex:11:1:hasKey:then
      $1970 = { (responsible $1971) ->
        $1972 = call $140 with $1946 $1048 ($993 is responsible)
        $1973 = ($154, $1972)
      }
      # Core:iterator:withIndex:11:1:hasKey:else
      $1974 = { (responsible $1975) ->
        $1976 = call $146 with $1946 ($993 is responsible)
        $1977 = call $145 with $1066 $1976 ($993 is responsible)
        $1978 = call $145 with $1977 $186 ($993 is responsible)
        $1979 = ($156, $1978)
      }
      $1980 = call $132 with $1969 $1970 $1974 ($993 is responsible)
      $1981 = call $139 with $1980 $163 ($993 is responsible)
      $1982 = call $130 with $1981 $154 ($993 is responsible)
      # Core:iterator:withIndex:11:1:isMatch:then
      $1983 = { (responsible $1984) ->
        $1985 = call $139 with $1980 $164 ($993 is responsible)
        $1986 = ($154, $1968, $1985)
      }
      # Core:iterator:withIndex:11:1:isMatch:else
      $1987 = { (responsible $1988) ->
        $1989 = $1980
      }
      $1990 = call $132 with $1982 $1983 $1987 ($993 is responsible)
    }
    # Core:iterator:withIndex:11:1:isMatch:else
    $1991 = { (responsible $1992) ->
      $1993 = $1963
    }
    $1994 = call $132 with $1965 $1966 $1991 ($993 is responsible)
  }
  # Core:iterator:withIndex:11:1:equals:else
  $1995 = { (responsible $1996) ->
    $1997 = call $146 with $1948 ($993 is responsible)
    $1998 = call $145 with $178 $1997 ($993 is responsible)
    $1999 = call $145 with $1998 $186 ($993 is responsible)
    $2000 = ($156, $1999)
  }
  $2001 = call $132 with $1949 $1950 $1995 ($993 is responsible)
  $2002 = call $139 with $2001 $163 ($993 is responsible)
  $2003 = call $130 with $2002 $154 ($993 is responsible)
  # Core:iterator:withIndex:11:1:isMatch:else
  $2004 = { (responsible $2005) ->
    $2006 = call $139 with $2001 $164 ($993 is responsible)
    $2007 = panicking because $2006 ($993 is at fault)
  }
  $2008 = call $132 with $2003 $219 $2004 ($993 is responsible)
  $2009 = call $139 with $2001 $164 ($1000 is responsible)
  $2010 = call $139 with $2001 $165 ($999 is responsible)
  $2011 = call $1580 with $2009 ($994 is responsible)
  $2012 = call $130 with $1046 $2011 ($995 is responsible)
  # Core:iterator:withIndex:11:5:equals:else
  $2013 = { (responsible $2014) ->
    $2015 = call $146 with $2011 ($995 is responsible)
    $2016 = call $145 with $1064 $2015 ($995 is responsible)
    $2017 = call $145 with $2016 $186 ($995 is responsible)
    $2018 = ($156, $2017)
  }
  $2019 = call $132 with $2012 $247 $2013 ($995 is responsible)
  $2020 = call $139 with $2019 $163 ($995 is responsible)
  $2021 = call $130 with $2020 $154 ($995 is responsible)
  # Core:iterator:withIndex:11:5:case-0:didNotMatch
  $2022 = { (responsible $2023) ->
    $2024 = call $139 with $2019 $164 ($995 is responsible)
    $2025 = call $147 with $2011 ($995 is responsible)
    $2026 = call $130 with $160 $2025 ($995 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $2027 = { (responsible $2028) ->
      $2029 = call $144 with $2011 ($995 is responsible)
      $2030 = call $130 with $1052 $2029 ($995 is responsible)
      # Core:iterator:withIndex:11:5:equals:then
      $2031 = { (responsible $2032) ->
        $2033 = call $143 with $2011 ($995 is responsible)
        $2034 = call $130 with $162 $2033 ($995 is responsible)
        # Core:iterator:withIndex:11:5:equals:then
        $2035 = { (responsible $2036) ->
          $2037 = call $142 with $2011 ($995 is responsible)
          $2038 = call $147 with $2037 ($995 is responsible)
          $2039 = call $130 with $159 $2038 ($995 is responsible)
          # Core:iterator:withIndex:11:5:equals:then
          $2040 = { (responsible $2041) ->
            $2042 = call $141 with $2037 $1049 ($995 is responsible)
            # Core:iterator:withIndex:11:5:hasKey:then
            $2043 = { (responsible $2044) ->
              $2045 = call $140 with $2037 $1049 ($995 is responsible)
              $2046 = ($154, $2045)
            }
            # Core:iterator:withIndex:11:5:hasKey:else
            $2047 = { (responsible $2048) ->
              $2049 = call $146 with $2037 ($995 is responsible)
              $2050 = call $145 with $1067 $2049 ($995 is responsible)
              $2051 = call $145 with $2050 $186 ($995 is responsible)
              $2052 = ($156, $2051)
            }
            $2053 = call $132 with $2042 $2043 $2047 ($995 is responsible)
            $2054 = call $139 with $2053 $163 ($995 is responsible)
            $2055 = call $130 with $2054 $154 ($995 is responsible)
            # Core:iterator:withIndex:11:5:isMatch:then
            $2056 = { (responsible $2057) ->
              $2058 = call $139 with $2053 $164 ($995 is responsible)
              $2059 = call $141 with $2037 $1055 ($995 is responsible)
              # Core:iterator:withIndex:11:5:hasKey:then
              $2060 = { (responsible $2061) ->
                $2062 = call $140 with $2037 $1055 ($995 is responsible)
                $2063 = ($154, $2062)
              }
              # Core:iterator:withIndex:11:5:hasKey:else
              $2064 = { (responsible $2065) ->
                $2066 = call $146 with $2037 ($995 is responsible)
                $2067 = call $145 with $1070 $2066 ($995 is responsible)
                $2068 = call $145 with $2067 $186 ($995 is responsible)
                $2069 = ($156, $2068)
              }
              $2070 = call $132 with $2059 $2060 $2064 ($995 is responsible)
              $2071 = call $139 with $2070 $163 ($995 is responsible)
              $2072 = call $130 with $2071 $154 ($995 is responsible)
              # Core:iterator:withIndex:11:5:isMatch:then
              $2073 = { (responsible $2074) ->
                $2075 = call $139 with $2070 $164 ($995 is responsible)
                $2076 = ($154, $2058, $2075)
              }
              # Core:iterator:withIndex:11:5:isMatch:else
              $2077 = { (responsible $2078) ->
                $2079 = $2070
              }
              $2080 = call $132 with $2072 $2073 $2077 ($995 is responsible)
            }
            # Core:iterator:withIndex:11:5:isMatch:else
            $2081 = { (responsible $2082) ->
              $2083 = $2053
            }
            $2084 = call $132 with $2055 $2056 $2081 ($995 is responsible)
          }
          # Core:iterator:withIndex:11:5:equals:else
          $2085 = { (responsible $2086) ->
            $2087 = call $146 with $2038 ($995 is responsible)
            $2088 = call $145 with $178 $2087 ($995 is responsible)
            $2089 = call $145 with $2088 $186 ($995 is responsible)
            $2090 = ($156, $2089)
          }
          $2091 = call $132 with $2039 $2040 $2085 ($995 is responsible)
        }
        # Core:iterator:withIndex:11:5:equals:else
        $2092 = { (responsible $2093) ->
          $2094 = call $146 with $2033 ($995 is responsible)
          $2095 = $737
        }
        $2096 = call $132 with $2034 $2035 $2092 ($995 is responsible)
      }
      # Core:iterator:withIndex:11:5:equals:else
      $2097 = { (responsible $2098) ->
        $2099 = call $146 with $2029 ($995 is responsible)
        $2100 = call $145 with $1062 $2099 ($995 is responsible)
        $2101 = call $145 with $2100 $171 ($995 is responsible)
        $2102 = ($156, $2101)
      }
      $2103 = call $132 with $2030 $2031 $2097 ($995 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2104 = { (responsible $2105) ->
      $2106 = call $146 with $2025 ($995 is responsible)
      $2107 = call $145 with $179 $2106 ($995 is responsible)
      $2108 = call $145 with $2107 $186 ($995 is responsible)
      $2109 = ($156, $2108)
    }
    $2110 = call $132 with $2026 $2027 $2104 ($995 is responsible)
    $2111 = call $139 with $2110 $163 ($995 is responsible)
    $2112 = call $130 with $2111 $154 ($995 is responsible)
    # Core:iterator:withIndex:11:5:case-1:matched
    $2113 = { (responsible $2114) ->
      $2115 = call $139 with $2110 $164 ($997 is responsible)
      $2116 = call $139 with $2110 $165 ($998 is responsible)
      $2117 = [$1049: $2115, $1048: $2010]
      $2118 = call $147 with $2010 ($47 is responsible)
      $2119 = call $130 with $2118 $152 ($48 is responsible)
      $2120 = call $222 with $2119 $188 $996 ($19 is responsible)
      $2121 = call $133 with $2010 $164 ($18 is responsible)
      $2122 = [$1048: $2121, $1050: $2116]
      $2123 = [$1049: $2117, $1056: $2122]
      $2124 = More $2123
    }
    # Core:iterator:withIndex:11:5:case-1:didNotMatch
    $2125 = { (responsible $2126) ->
      $2127 = call $139 with $2110 $164 ($995 is responsible)
      $2128 = panicking because $181 ($995 is at fault)
    }
    $2129 = call $132 with $2112 $2113 $2125 ($995 is responsible)
  }
  $2130 = call $132 with $2021 $1383 $2022 ($995 is responsible)
}
# Core:iterator:ensure
$2131 = { $2132 $2133 (+ responsible $2134) ->
  $2135 = call $757 with $2133 ($843 is responsible)
  $2136 = call $222 with $2135 $1088 $2134 ($839 is responsible)
  # Core:iterator:ensure:14
  $2137 = { (responsible $2138) ->
    $2139 = panicking because $1083 ($2134 is at fault)
  }
  $2140 = call $1386 with $2132 $2137 ($840 is responsible)
  # Core:iterator:ensure:19
  $2141 = { $2142 (+ responsible $2143) ->
    $2144 = $2142
    $2145 = call $2133 with $2142 ($841 is responsible)
    $2146 = $2144
  }
  $2147 = call $1816 with $2140 $2141 ($842 is responsible)
}
# Core:iterator:foldLeft
$2148 = { $2149 $2150 $2151 (+ responsible $2152) ->
  # Core:iterator:foldLeft:2
  $2153 = { (responsible $2154) ->
    $2155 = panicking because $1084 ($2152 is at fault)
  }
  $2156 = call $1386 with $2149 $2153 ($856 is responsible)
  $2157 = call $518 with $2151 ($844 is responsible)
  $2158 = call $222 with $2157 $1093 $2152 ($845 is responsible)
  $2159 = [$1057: $2150, $1050: $2156]
  # Core:iterator:foldLeft:23
  $2160 = { $2161 $2162 (+ responsible $2163) ->
    $2164 = call $147 with $2162 ($846 is responsible)
    $2165 = call $130 with $159 $2164 ($846 is responsible)
    # Core:iterator:foldLeft:23:1:equals:then
    $2166 = { (responsible $2167) ->
      $2168 = call $141 with $2162 $1050 ($846 is responsible)
      # Core:iterator:foldLeft:23:1:hasKey:then
      $2169 = { (responsible $2170) ->
        $2171 = call $140 with $2162 $1050 ($846 is responsible)
        $2172 = ($154, $2171)
      }
      # Core:iterator:foldLeft:23:1:hasKey:else
      $2173 = { (responsible $2174) ->
        $2175 = call $146 with $2162 ($846 is responsible)
        $2176 = call $145 with $1068 $2175 ($846 is responsible)
        $2177 = call $145 with $2176 $186 ($846 is responsible)
        $2178 = ($156, $2177)
      }
      $2179 = call $132 with $2168 $2169 $2173 ($846 is responsible)
      $2180 = call $139 with $2179 $163 ($846 is responsible)
      $2181 = call $130 with $2180 $154 ($846 is responsible)
      # Core:iterator:foldLeft:23:1:isMatch:then
      $2182 = { (responsible $2183) ->
        $2184 = call $139 with $2179 $164 ($846 is responsible)
        $2185 = call $141 with $2162 $1057 ($846 is responsible)
        # Core:iterator:foldLeft:23:1:hasKey:then
        $2186 = { (responsible $2187) ->
          $2188 = call $140 with $2162 $1057 ($846 is responsible)
          $2189 = ($154, $2188)
        }
        # Core:iterator:foldLeft:23:1:hasKey:else
        $2190 = { (responsible $2191) ->
          $2192 = call $146 with $2162 ($846 is responsible)
          $2193 = call $145 with $1072 $2192 ($846 is responsible)
          $2194 = call $145 with $2193 $186 ($846 is responsible)
          $2195 = ($156, $2194)
        }
        $2196 = call $132 with $2185 $2186 $2190 ($846 is responsible)
        $2197 = call $139 with $2196 $163 ($846 is responsible)
        $2198 = call $130 with $2197 $154 ($846 is responsible)
        # Core:iterator:foldLeft:23:1:isMatch:then
        $2199 = { (responsible $2200) ->
          $2201 = call $139 with $2196 $164 ($846 is responsible)
          $2202 = ($154, $2184, $2201)
        }
        # Core:iterator:foldLeft:23:1:isMatch:else
        $2203 = { (responsible $2204) ->
          $2205 = $2196
        }
        $2206 = call $132 with $2198 $2199 $2203 ($846 is responsible)
      }
      # Core:iterator:foldLeft:23:1:isMatch:else
      $2207 = { (responsible $2208) ->
        $2209 = $2179
      }
      $2210 = call $132 with $2181 $2182 $2207 ($846 is responsible)
    }
    # Core:iterator:foldLeft:23:1:equals:else
    $2211 = { (responsible $2212) ->
      $2213 = call $146 with $2164 ($846 is responsible)
      $2214 = call $145 with $178 $2213 ($846 is responsible)
      $2215 = call $145 with $2214 $186 ($846 is responsible)
      $2216 = ($156, $2215)
    }
    $2217 = call $132 with $2165 $2166 $2211 ($846 is responsible)
    $2218 = call $139 with $2217 $163 ($846 is responsible)
    $2219 = call $130 with $2218 $154 ($846 is responsible)
    # Core:iterator:foldLeft:23:1:isMatch:else
    $2220 = { (responsible $2221) ->
      $2222 = call $139 with $2217 $164 ($846 is responsible)
      $2223 = panicking because $2222 ($846 is at fault)
    }
    $2224 = call $132 with $2219 $219 $2220 ($846 is responsible)
    $2225 = call $139 with $2217 $164 ($853 is responsible)
    $2226 = call $139 with $2217 $165 ($854 is responsible)
    $2227 = call $1580 with $2225 ($847 is responsible)
    $2228 = call $130 with $1046 $2227 ($848 is responsible)
    # Core:iterator:foldLeft:23:5:equals:else
    $2229 = { (responsible $2230) ->
      $2231 = call $146 with $2227 ($848 is responsible)
      $2232 = call $145 with $1064 $2231 ($848 is responsible)
      $2233 = call $145 with $2232 $186 ($848 is responsible)
      $2234 = ($156, $2233)
    }
    $2235 = call $132 with $2228 $247 $2229 ($848 is responsible)
    $2236 = call $139 with $2235 $163 ($848 is responsible)
    $2237 = call $130 with $2236 $154 ($848 is responsible)
    # Core:iterator:foldLeft:23:5:case-0:matched
    $2238 = { (responsible $2239) ->
      $2240 = $2226
    }
    # Core:iterator:foldLeft:23:5:case-0:didNotMatch
    $2241 = { (responsible $2242) ->
      $2243 = call $139 with $2235 $164 ($848 is responsible)
      $2244 = call $147 with $2227 ($848 is responsible)
      $2245 = call $130 with $160 $2244 ($848 is responsible)
      # Core:iterator:foldLeft:23:5:equals:then
      $2246 = { (responsible $2247) ->
        $2248 = call $144 with $2227 ($848 is responsible)
        $2249 = call $130 with $1052 $2248 ($848 is responsible)
        # Core:iterator:foldLeft:23:5:equals:then
        $2250 = { (responsible $2251) ->
          $2252 = call $143 with $2227 ($848 is responsible)
          $2253 = call $130 with $162 $2252 ($848 is responsible)
          # Core:iterator:foldLeft:23:5:equals:then
          $2254 = { (responsible $2255) ->
            $2256 = call $142 with $2227 ($848 is responsible)
            $2257 = call $147 with $2256 ($848 is responsible)
            $2258 = call $130 with $159 $2257 ($848 is responsible)
            # Core:iterator:foldLeft:23:5:equals:then
            $2259 = { (responsible $2260) ->
              $2261 = call $141 with $2256 $1049 ($848 is responsible)
              # Core:iterator:foldLeft:23:5:hasKey:then
              $2262 = { (responsible $2263) ->
                $2264 = call $140 with $2256 $1049 ($848 is responsible)
                $2265 = ($154, $2264)
              }
              # Core:iterator:foldLeft:23:5:hasKey:else
              $2266 = { (responsible $2267) ->
                $2268 = call $146 with $2256 ($848 is responsible)
                $2269 = call $145 with $1067 $2268 ($848 is responsible)
                $2270 = call $145 with $2269 $186 ($848 is responsible)
                $2271 = ($156, $2270)
              }
              $2272 = call $132 with $2261 $2262 $2266 ($848 is responsible)
              $2273 = call $139 with $2272 $163 ($848 is responsible)
              $2274 = call $130 with $2273 $154 ($848 is responsible)
              # Core:iterator:foldLeft:23:5:isMatch:then
              $2275 = { (responsible $2276) ->
                $2277 = call $139 with $2272 $164 ($848 is responsible)
                $2278 = call $141 with $2256 $1055 ($848 is responsible)
                # Core:iterator:foldLeft:23:5:hasKey:then
                $2279 = { (responsible $2280) ->
                  $2281 = call $140 with $2256 $1055 ($848 is responsible)
                  $2282 = ($154, $2281)
                }
                # Core:iterator:foldLeft:23:5:hasKey:else
                $2283 = { (responsible $2284) ->
                  $2285 = call $146 with $2256 ($848 is responsible)
                  $2286 = call $145 with $1070 $2285 ($848 is responsible)
                  $2287 = call $145 with $2286 $186 ($848 is responsible)
                  $2288 = ($156, $2287)
                }
                $2289 = call $132 with $2278 $2279 $2283 ($848 is responsible)
                $2290 = call $139 with $2289 $163 ($848 is responsible)
                $2291 = call $130 with $2290 $154 ($848 is responsible)
                # Core:iterator:foldLeft:23:5:isMatch:then
                $2292 = { (responsible $2293) ->
                  $2294 = call $139 with $2289 $164 ($848 is responsible)
                  $2295 = ($154, $2277, $2294)
                }
                # Core:iterator:foldLeft:23:5:isMatch:else
                $2296 = { (responsible $2297) ->
                  $2298 = $2289
                }
                $2299 = call $132 with $2291 $2292 $2296 ($848 is responsible)
              }
              # Core:iterator:foldLeft:23:5:isMatch:else
              $2300 = { (responsible $2301) ->
                $2302 = $2272
              }
              $2303 = call $132 with $2274 $2275 $2300 ($848 is responsible)
            }
            # Core:iterator:foldLeft:23:5:equals:else
            $2304 = { (responsible $2305) ->
              $2306 = call $146 with $2257 ($848 is responsible)
              $2307 = call $145 with $178 $2306 ($848 is responsible)
              $2308 = call $145 with $2307 $186 ($848 is responsible)
              $2309 = ($156, $2308)
            }
            $2310 = call $132 with $2258 $2259 $2304 ($848 is responsible)
          }
          # Core:iterator:foldLeft:23:5:equals:else
          $2311 = { (responsible $2312) ->
            $2313 = call $146 with $2252 ($848 is responsible)
            $2314 = $737
          }
          $2315 = call $132 with $2253 $2254 $2311 ($848 is responsible)
        }
        # Core:iterator:foldLeft:23:5:equals:else
        $2316 = { (responsible $2317) ->
          $2318 = call $146 with $2248 ($848 is responsible)
          $2319 = call $145 with $1062 $2318 ($848 is responsible)
          $2320 = call $145 with $2319 $171 ($848 is responsible)
          $2321 = ($156, $2320)
        }
        $2322 = call $132 with $2249 $2250 $2316 ($848 is responsible)
      }
      # Core:iterator:foldLeft:23:5:equals:else
      $2323 = { (responsible $2324) ->
        $2325 = call $146 with $2244 ($848 is responsible)
        $2326 = call $145 with $179 $2325 ($848 is responsible)
        $2327 = call $145 with $2326 $186 ($848 is responsible)
        $2328 = ($156, $2327)
      }
      $2329 = call $132 with $2245 $2246 $2323 ($848 is responsible)
      $2330 = call $139 with $2329 $163 ($848 is responsible)
      $2331 = call $130 with $2330 $154 ($848 is responsible)
      # Core:iterator:foldLeft:23:5:case-1:matched
      $2332 = { (responsible $2333) ->
        $2334 = call $139 with $2329 $164 ($851 is responsible)
        $2335 = call $139 with $2329 $165 ($852 is responsible)
        $2336 = call $2151 with $2226 $2334 ($850 is responsible)
        $2337 = [$1050: $2335, $1057: $2336]
        $2338 = call $2161 with $2337 ($849 is responsible)
      }
      # Core:iterator:foldLeft:23:5:case-1:didNotMatch
      $2339 = { (responsible $2340) ->
        $2341 = call $139 with $2329 $164 ($848 is responsible)
        $2342 = panicking because $181 ($848 is at fault)
      }
      $2343 = call $132 with $2331 $2332 $2339 ($848 is responsible)
    }
    $2344 = call $132 with $2237 $2238 $2241 ($848 is responsible)
  }
  $2345 = call $518 with $2160 ($102 is responsible)
  $2346 = call $222 with $2345 $182 $855 ($98 is responsible)
  # Core:controlFlow:recursive:18
  $2347 = { $2348 $2349 (+ responsible $2350) ->
    # Core:controlFlow:recursive:18:0
    $2351 = { $2352 (+ responsible $2353) ->
      $2354 = call $2348 with $2348 $2352 ($99 is responsible)
    }
    $2355 = call $2160 with $2351 $2349 ($100 is responsible)
  }
  $2356 = call $2347 with $2347 $2159 ($101 is responsible)
}
$2357 = Error $1059
# Core:iterator:reduceLeft:18:case-0:matched
$2358 = { (responsible $2359) ->
  $2360 = $2357
}
# Core:iterator:reduceLeft
$2361 = { $2362 $2363 (+ responsible $2364) ->
  $2365 = call $518 with $2363 ($916 is responsible)
  $2366 = call $222 with $2365 $1093 $2364 ($909 is responsible)
  # Core:iterator:reduceLeft:14
  $2367 = { (responsible $2368) ->
    $2369 = panicking because $1116 ($2364 is at fault)
  }
  $2370 = call $1386 with $2362 $2367 ($910 is responsible)
  $2371 = call $1580 with $2370 ($911 is responsible)
  $2372 = call $130 with $1046 $2371 ($912 is responsible)
  # Core:iterator:reduceLeft:18:equals:else
  $2373 = { (responsible $2374) ->
    $2375 = call $146 with $2371 ($912 is responsible)
    $2376 = call $145 with $1064 $2375 ($912 is responsible)
    $2377 = call $145 with $2376 $186 ($912 is responsible)
    $2378 = ($156, $2377)
  }
  $2379 = call $132 with $2372 $247 $2373 ($912 is responsible)
  $2380 = call $139 with $2379 $163 ($912 is responsible)
  $2381 = call $130 with $2380 $154 ($912 is responsible)
  # Core:iterator:reduceLeft:18:case-0:didNotMatch
  $2382 = { (responsible $2383) ->
    $2384 = call $139 with $2379 $164 ($912 is responsible)
    $2385 = call $147 with $2371 ($912 is responsible)
    $2386 = call $130 with $160 $2385 ($912 is responsible)
    # Core:iterator:reduceLeft:18:equals:then
    $2387 = { (responsible $2388) ->
      $2389 = call $144 with $2371 ($912 is responsible)
      $2390 = call $130 with $1052 $2389 ($912 is responsible)
      # Core:iterator:reduceLeft:18:equals:then
      $2391 = { (responsible $2392) ->
        $2393 = call $143 with $2371 ($912 is responsible)
        $2394 = call $130 with $162 $2393 ($912 is responsible)
        # Core:iterator:reduceLeft:18:equals:then
        $2395 = { (responsible $2396) ->
          $2397 = call $142 with $2371 ($912 is responsible)
          $2398 = call $147 with $2397 ($912 is responsible)
          $2399 = call $130 with $159 $2398 ($912 is responsible)
          # Core:iterator:reduceLeft:18:equals:then
          $2400 = { (responsible $2401) ->
            $2402 = call $141 with $2397 $1049 ($912 is responsible)
            # Core:iterator:reduceLeft:18:hasKey:then
            $2403 = { (responsible $2404) ->
              $2405 = call $140 with $2397 $1049 ($912 is responsible)
              $2406 = ($154, $2405)
            }
            # Core:iterator:reduceLeft:18:hasKey:else
            $2407 = { (responsible $2408) ->
              $2409 = call $146 with $2397 ($912 is responsible)
              $2410 = call $145 with $1067 $2409 ($912 is responsible)
              $2411 = call $145 with $2410 $186 ($912 is responsible)
              $2412 = ($156, $2411)
            }
            $2413 = call $132 with $2402 $2403 $2407 ($912 is responsible)
            $2414 = call $139 with $2413 $163 ($912 is responsible)
            $2415 = call $130 with $2414 $154 ($912 is responsible)
            # Core:iterator:reduceLeft:18:isMatch:then
            $2416 = { (responsible $2417) ->
              $2418 = call $139 with $2413 $164 ($912 is responsible)
              $2419 = call $141 with $2397 $1055 ($912 is responsible)
              # Core:iterator:reduceLeft:18:hasKey:then
              $2420 = { (responsible $2421) ->
                $2422 = call $140 with $2397 $1055 ($912 is responsible)
                $2423 = ($154, $2422)
              }
              # Core:iterator:reduceLeft:18:hasKey:else
              $2424 = { (responsible $2425) ->
                $2426 = call $146 with $2397 ($912 is responsible)
                $2427 = call $145 with $1070 $2426 ($912 is responsible)
                $2428 = call $145 with $2427 $186 ($912 is responsible)
                $2429 = ($156, $2428)
              }
              $2430 = call $132 with $2419 $2420 $2424 ($912 is responsible)
              $2431 = call $139 with $2430 $163 ($912 is responsible)
              $2432 = call $130 with $2431 $154 ($912 is responsible)
              # Core:iterator:reduceLeft:18:isMatch:then
              $2433 = { (responsible $2434) ->
                $2435 = call $139 with $2430 $164 ($912 is responsible)
                $2436 = ($154, $2418, $2435)
              }
              # Core:iterator:reduceLeft:18:isMatch:else
              $2437 = { (responsible $2438) ->
                $2439 = $2430
              }
              $2440 = call $132 with $2432 $2433 $2437 ($912 is responsible)
            }
            # Core:iterator:reduceLeft:18:isMatch:else
            $2441 = { (responsible $2442) ->
              $2443 = $2413
            }
            $2444 = call $132 with $2415 $2416 $2441 ($912 is responsible)
          }
          # Core:iterator:reduceLeft:18:equals:else
          $2445 = { (responsible $2446) ->
            $2447 = call $146 with $2398 ($912 is responsible)
            $2448 = call $145 with $178 $2447 ($912 is responsible)
            $2449 = call $145 with $2448 $186 ($912 is responsible)
            $2450 = ($156, $2449)
          }
          $2451 = call $132 with $2399 $2400 $2445 ($912 is responsible)
        }
        # Core:iterator:reduceLeft:18:equals:else
        $2452 = { (responsible $2453) ->
          $2454 = call $146 with $2393 ($912 is responsible)
          $2455 = $737
        }
        $2456 = call $132 with $2394 $2395 $2452 ($912 is responsible)
      }
      # Core:iterator:reduceLeft:18:equals:else
      $2457 = { (responsible $2458) ->
        $2459 = call $146 with $2389 ($912 is responsible)
        $2460 = call $145 with $1062 $2459 ($912 is responsible)
        $2461 = call $145 with $2460 $171 ($912 is responsible)
        $2462 = ($156, $2461)
      }
      $2463 = call $132 with $2390 $2391 $2457 ($912 is responsible)
    }
    # Core:iterator:reduceLeft:18:equals:else
    $2464 = { (responsible $2465) ->
      $2466 = call $146 with $2385 ($912 is responsible)
      $2467 = call $145 with $179 $2466 ($912 is responsible)
      $2468 = call $145 with $2467 $186 ($912 is responsible)
      $2469 = ($156, $2468)
    }
    $2470 = call $132 with $2386 $2387 $2464 ($912 is responsible)
    $2471 = call $139 with $2470 $163 ($912 is responsible)
    $2472 = call $130 with $2471 $154 ($912 is responsible)
    # Core:iterator:reduceLeft:18:case-1:matched
    $2473 = { (responsible $2474) ->
      $2475 = call $139 with $2470 $164 ($914 is responsible)
      $2476 = call $139 with $2470 $165 ($915 is responsible)
      $2477 = call $2148 with $2476 $2475 $2363 ($913 is responsible)
      $2478 = Ok $2477
    }
    # Core:iterator:reduceLeft:18:case-1:didNotMatch
    $2479 = { (responsible $2480) ->
      $2481 = call $139 with $2470 $164 ($912 is responsible)
      $2482 = panicking because $181 ($912 is at fault)
    }
    $2483 = call $132 with $2472 $2473 $2479 ($912 is responsible)
  }
  $2484 = call $132 with $2381 $2358 $2382 ($912 is responsible)
}
# Core:iterator:sum:8
$2485 = { $2486 $2487 (+ responsible $2488) ->
  $2489 = call $147 with $2486 ($47 is responsible)
  $2490 = call $130 with $2489 $152 ($48 is responsible)
  $2491 = call $222 with $2490 $188 $936 ($19 is responsible)
  $2492 = call $147 with $2487 ($47 is responsible)
  $2493 = call $130 with $2492 $152 ($48 is responsible)
  $2494 = call $222 with $2493 $189 $936 ($17 is responsible)
  $2495 = call $133 with $2486 $2487 ($18 is responsible)
}
# Core:iterator:sum
$2496 = { $2497 (+ responsible $2498) ->
  # Core:iterator:sum:2
  $2499 = { (responsible $2500) ->
    $2501 = panicking because $1118 ($2498 is at fault)
  }
  $2502 = call $1386 with $2497 $2499 ($933 is responsible)
  # Core:iterator:sum:5
  $2503 = { $2504 (+ responsible $2505) ->
    $2506 = call $147 with $2504 ($49 is responsible)
    $2507 = call $130 with $2506 $152 ($1 is responsible)
    $2508 = call $222 with $2507 $1065 $2498 ($934 is responsible)
  }
  $2509 = call $2131 with $2502 $2503 ($935 is responsible)
  $2510 = call $2361 with $2509 $2485 ($937 is responsible)
  $2511 = call $1316 with $2510 $163 ($932 is responsible)
}
# Core:iterator:length:5
$2512 = { $2513 (+ responsible $2514) ->
  $2515 = $164
}
# Core:iterator:all
$2516 = { $2517 $2518 (+ responsible $2519) ->
  $2520 = call $757 with $2518 ($825 is responsible)
  $2521 = call $222 with $2520 $1091 $2519 ($818 is responsible)
  # Core:iterator:all:14
  $2522 = { (responsible $2523) ->
    $2524 = panicking because $1077 ($2519 is at fault)
  }
  $2525 = call $1386 with $2517 $2522 ($819 is responsible)
  # Core:iterator:all:18
  $2526 = { $2527 $2528 (+ responsible $2529) ->
    $2530 = call $2518 with $2528 ($822 is responsible)
    $2531 = call $334 with $2530 ($820 is responsible)
    $2532 = call $222 with $2531 $1081 $2519 ($821 is responsible)
    $2533 = call $334 with $2527 ($51 is responsible)
    $2534 = call $222 with $2533 $204 $823 ($52 is responsible)
    $2535 = call $334 with $2530 ($53 is responsible)
    $2536 = call $222 with $2535 $205 $823 ($54 is responsible)
    # Core:bool:and:12
    $2537 = { (responsible $2538) ->
      $2539 = $2530
    }
    $2540 = call $402 with $2527 $2537 ($50 is responsible)
  }
  $2541 = call $2148 with $2525 $162 $2526 ($824 is responsible)
}
# Core:iterator:any
$2542 = { $2543 $2544 (+ responsible $2545) ->
  $2546 = call $757 with $2544 ($833 is responsible)
  $2547 = call $222 with $2546 $1091 $2545 ($826 is responsible)
  # Core:iterator:any:14
  $2548 = { (responsible $2549) ->
    $2550 = panicking because $1078 ($2545 is at fault)
  }
  $2551 = call $1386 with $2543 $2548 ($827 is responsible)
  # Core:iterator:any:18
  $2552 = { $2553 $2554 (+ responsible $2555) ->
    $2556 = call $2544 with $2554 ($830 is responsible)
    $2557 = call $334 with $2556 ($828 is responsible)
    $2558 = call $222 with $2557 $1081 $2545 ($829 is responsible)
    $2559 = call $334 with $2553 ($76 is responsible)
    $2560 = call $222 with $2559 $204 $831 ($77 is responsible)
    $2561 = call $334 with $2556 ($78 is responsible)
    $2562 = call $222 with $2561 $205 $831 ($79 is responsible)
    # Core:bool:or:12
    $2563 = { (responsible $2564) ->
      $2565 = $2556
    }
    $2566 = call $446 with $2553 $2563 ($75 is responsible)
  }
  $2567 = call $2148 with $2551 $149 $2552 ($832 is responsible)
}
# Core:iterator:joinToText
$2568 = { $2569 (+ responsible $2570) ->
  # Core:iterator:joinToText:2
  $2571 = { (responsible $2572) ->
    $2573 = panicking because $1110 ($2570 is at fault)
  }
  $2574 = call $1386 with $2569 $2571 ($892 is responsible)
  # Core:iterator:joinToText:12
  $2575 = { $2576 $2577 (+ responsible $2578) ->
    $2579 = call $147 with $2577 ($49 is responsible)
    $2580 = call $130 with $2579 $161 ($1 is responsible)
    $2581 = call $222 with $2580 $1121 $2570 ($889 is responsible)
    $2582 = call $147 with $2576 ($47 is responsible)
    $2583 = call $130 with $2582 $161 ($48 is responsible)
    $2584 = call $222 with $2583 $1076 $890 ($816 is responsible)
    $2585 = call $147 with $2577 ($47 is responsible)
    $2586 = call $130 with $2585 $161 ($48 is responsible)
    $2587 = call $222 with $2586 $1079 $890 ($814 is responsible)
    $2588 = call $145 with $2576 $2577 ($815 is responsible)
  }
  $2589 = call $2148 with $2574 $1058 $2575 ($891 is responsible)
}
# Core:iterator:where
$2590 = { $2591 $2592 (+ responsible $2593) ->
  # Core:iterator:where:2
  $2594 = { (responsible $2595) ->
    $2596 = panicking because $1123 ($2593 is at fault)
  }
  $2597 = call $1386 with $2591 $2594 ($976 is responsible)
  $2598 = call $757 with $2592 ($961 is responsible)
  $2599 = call $222 with $2598 $1091 $2593 ($962 is responsible)
  # Core:iterator:where:19
  $2600 = { $2601 $2602 (+ responsible $2603) ->
    # Core:iterator:where:19:2
    $2604 = { $2605 (+ responsible $2606) ->
      $2607 = call $1580 with $2605 ($963 is responsible)
      $2608 = call $130 with $1046 $2607 ($964 is responsible)
      # Core:iterator:where:19:2:3:equals:else
      $2609 = { (responsible $2610) ->
        $2611 = call $146 with $2607 ($964 is responsible)
        $2612 = call $145 with $1064 $2611 ($964 is responsible)
        $2613 = call $145 with $2612 $186 ($964 is responsible)
        $2614 = ($156, $2613)
      }
      $2615 = call $132 with $2608 $247 $2609 ($964 is responsible)
      $2616 = call $139 with $2615 $163 ($964 is responsible)
      $2617 = call $130 with $2616 $154 ($964 is responsible)
      # Core:iterator:where:19:2:3:case-0:didNotMatch
      $2618 = { (responsible $2619) ->
        $2620 = call $139 with $2615 $164 ($964 is responsible)
        $2621 = call $147 with $2607 ($964 is responsible)
        $2622 = call $130 with $160 $2621 ($964 is responsible)
        # Core:iterator:where:19:2:3:equals:then
        $2623 = { (responsible $2624) ->
          $2625 = call $144 with $2607 ($964 is responsible)
          $2626 = call $130 with $1052 $2625 ($964 is responsible)
          # Core:iterator:where:19:2:3:equals:then
          $2627 = { (responsible $2628) ->
            $2629 = call $143 with $2607 ($964 is responsible)
            $2630 = call $130 with $162 $2629 ($964 is responsible)
            # Core:iterator:where:19:2:3:equals:then
            $2631 = { (responsible $2632) ->
              $2633 = call $142 with $2607 ($964 is responsible)
              $2634 = call $147 with $2633 ($964 is responsible)
              $2635 = call $130 with $159 $2634 ($964 is responsible)
              # Core:iterator:where:19:2:3:equals:then
              $2636 = { (responsible $2637) ->
                $2638 = call $141 with $2633 $1049 ($964 is responsible)
                # Core:iterator:where:19:2:3:hasKey:then
                $2639 = { (responsible $2640) ->
                  $2641 = call $140 with $2633 $1049 ($964 is responsible)
                  $2642 = ($154, $2641)
                }
                # Core:iterator:where:19:2:3:hasKey:else
                $2643 = { (responsible $2644) ->
                  $2645 = call $146 with $2633 ($964 is responsible)
                  $2646 = call $145 with $1067 $2645 ($964 is responsible)
                  $2647 = call $145 with $2646 $186 ($964 is responsible)
                  $2648 = ($156, $2647)
                }
                $2649 = call $132 with $2638 $2639 $2643 ($964 is responsible)
                $2650 = call $139 with $2649 $163 ($964 is responsible)
                $2651 = call $130 with $2650 $154 ($964 is responsible)
                # Core:iterator:where:19:2:3:isMatch:then
                $2652 = { (responsible $2653) ->
                  $2654 = call $139 with $2649 $164 ($964 is responsible)
                  $2655 = call $141 with $2633 $1055 ($964 is responsible)
                  # Core:iterator:where:19:2:3:hasKey:then
                  $2656 = { (responsible $2657) ->
                    $2658 = call $140 with $2633 $1055 ($964 is responsible)
                    $2659 = ($154, $2658)
                  }
                  # Core:iterator:where:19:2:3:hasKey:else
                  $2660 = { (responsible $2661) ->
                    $2662 = call $146 with $2633 ($964 is responsible)
                    $2663 = call $145 with $1070 $2662 ($964 is responsible)
                    $2664 = call $145 with $2663 $186 ($964 is responsible)
                    $2665 = ($156, $2664)
                  }
                  $2666 = call $132 with $2655 $2656 $2660 ($964 is responsible)
                  $2667 = call $139 with $2666 $163 ($964 is responsible)
                  $2668 = call $130 with $2667 $154 ($964 is responsible)
                  # Core:iterator:where:19:2:3:isMatch:then
                  $2669 = { (responsible $2670) ->
                    $2671 = call $139 with $2666 $164 ($964 is responsible)
                    $2672 = ($154, $2654, $2671)
                  }
                  # Core:iterator:where:19:2:3:isMatch:else
                  $2673 = { (responsible $2674) ->
                    $2675 = $2666
                  }
                  $2676 = call $132 with $2668 $2669 $2673 ($964 is responsible)
                }
                # Core:iterator:where:19:2:3:isMatch:else
                $2677 = { (responsible $2678) ->
                  $2679 = $2649
                }
                $2680 = call $132 with $2651 $2652 $2677 ($964 is responsible)
              }
              # Core:iterator:where:19:2:3:equals:else
              $2681 = { (responsible $2682) ->
                $2683 = call $146 with $2634 ($964 is responsible)
                $2684 = call $145 with $178 $2683 ($964 is responsible)
                $2685 = call $145 with $2684 $186 ($964 is responsible)
                $2686 = ($156, $2685)
              }
              $2687 = call $132 with $2635 $2636 $2681 ($964 is responsible)
            }
            # Core:iterator:where:19:2:3:equals:else
            $2688 = { (responsible $2689) ->
              $2690 = call $146 with $2629 ($964 is responsible)
              $2691 = $737
            }
            $2692 = call $132 with $2630 $2631 $2688 ($964 is responsible)
          }
          # Core:iterator:where:19:2:3:equals:else
          $2693 = { (responsible $2694) ->
            $2695 = call $146 with $2625 ($964 is responsible)
            $2696 = call $145 with $1062 $2695 ($964 is responsible)
            $2697 = call $145 with $2696 $171 ($964 is responsible)
            $2698 = ($156, $2697)
          }
          $2699 = call $132 with $2626 $2627 $2693 ($964 is responsible)
        }
        # Core:iterator:where:19:2:3:equals:else
        $2700 = { (responsible $2701) ->
          $2702 = call $146 with $2621 ($964 is responsible)
          $2703 = call $145 with $179 $2702 ($964 is responsible)
          $2704 = call $145 with $2703 $186 ($964 is responsible)
          $2705 = ($156, $2704)
        }
        $2706 = call $132 with $2622 $2623 $2700 ($964 is responsible)
        $2707 = call $139 with $2706 $163 ($964 is responsible)
        $2708 = call $130 with $2707 $154 ($964 is responsible)
        # Core:iterator:where:19:2:3:case-1:matched
        $2709 = { (responsible $2710) ->
          $2711 = call $139 with $2706 $164 ($972 is responsible)
          $2712 = call $139 with $2706 $165 ($973 is responsible)
          $2713 = call $2592 with $2711 ($965 is responsible)
          # Core:iterator:where:19:2:3:5
          $2714 = { (responsible $2715) ->
            $2716 = [$1049: $2711, $1056: $2712]
            $2717 = More $2716
          }
          # Core:iterator:where:19:2:3:6
          $2718 = { (responsible $2719) ->
            $2720 = call $2601 with $2712 ($966 is responsible)
            $2721 = call $1580 with $2720 ($967 is responsible)
            $2722 = call $130 with $1046 $2721 ($968 is responsible)
            # Core:iterator:where:19:2:3:6:5:equals:else
            $2723 = { (responsible $2724) ->
              $2725 = call $146 with $2721 ($968 is responsible)
              $2726 = call $145 with $1064 $2725 ($968 is responsible)
              $2727 = call $145 with $2726 $186 ($968 is responsible)
              $2728 = ($156, $2727)
            }
            $2729 = call $132 with $2722 $247 $2723 ($968 is responsible)
            $2730 = call $139 with $2729 $163 ($968 is responsible)
            $2731 = call $130 with $2730 $154 ($968 is responsible)
            # Core:iterator:where:19:2:3:6:5:case-0:didNotMatch
            $2732 = { (responsible $2733) ->
              $2734 = call $139 with $2729 $164 ($968 is responsible)
              $2735 = call $147 with $2721 ($968 is responsible)
              $2736 = call $130 with $160 $2735 ($968 is responsible)
              # Core:iterator:where:19:2:3:6:5:equals:then
              $2737 = { (responsible $2738) ->
                $2739 = call $144 with $2721 ($968 is responsible)
                $2740 = call $130 with $1052 $2739 ($968 is responsible)
                # Core:iterator:where:19:2:3:6:5:equals:then
                $2741 = { (responsible $2742) ->
                  $2743 = call $143 with $2721 ($968 is responsible)
                  $2744 = call $130 with $162 $2743 ($968 is responsible)
                  # Core:iterator:where:19:2:3:6:5:equals:then
                  $2745 = { (responsible $2746) ->
                    $2747 = call $142 with $2721 ($968 is responsible)
                    $2748 = call $147 with $2747 ($968 is responsible)
                    $2749 = call $130 with $159 $2748 ($968 is responsible)
                    # Core:iterator:where:19:2:3:6:5:equals:then
                    $2750 = { (responsible $2751) ->
                      $2752 = call $141 with $2747 $1049 ($968 is responsible)
                      # Core:iterator:where:19:2:3:6:5:hasKey:then
                      $2753 = { (responsible $2754) ->
                        $2755 = call $140 with $2747 $1049 ($968 is responsible)
                        $2756 = ($154, $2755)
                      }
                      # Core:iterator:where:19:2:3:6:5:hasKey:else
                      $2757 = { (responsible $2758) ->
                        $2759 = call $146 with $2747 ($968 is responsible)
                        $2760 = call $145 with $1067 $2759 ($968 is responsible)
                        $2761 = call $145 with $2760 $186 ($968 is responsible)
                        $2762 = ($156, $2761)
                      }
                      $2763 = call $132 with $2752 $2753 $2757 ($968 is responsible)
                      $2764 = call $139 with $2763 $163 ($968 is responsible)
                      $2765 = call $130 with $2764 $154 ($968 is responsible)
                      # Core:iterator:where:19:2:3:6:5:isMatch:then
                      $2766 = { (responsible $2767) ->
                        $2768 = call $139 with $2763 $164 ($968 is responsible)
                        $2769 = call $141 with $2747 $1055 ($968 is responsible)
                        # Core:iterator:where:19:2:3:6:5:hasKey:then
                        $2770 = { (responsible $2771) ->
                          $2772 = call $140 with $2747 $1055 ($968 is responsible)
                          $2773 = ($154, $2772)
                        }
                        # Core:iterator:where:19:2:3:6:5:hasKey:else
                        $2774 = { (responsible $2775) ->
                          $2776 = call $146 with $2747 ($968 is responsible)
                          $2777 = call $145 with $1070 $2776 ($968 is responsible)
                          $2778 = call $145 with $2777 $186 ($968 is responsible)
                          $2779 = ($156, $2778)
                        }
                        $2780 = call $132 with $2769 $2770 $2774 ($968 is responsible)
                        $2781 = call $139 with $2780 $163 ($968 is responsible)
                        $2782 = call $130 with $2781 $154 ($968 is responsible)
                        # Core:iterator:where:19:2:3:6:5:isMatch:then
                        $2783 = { (responsible $2784) ->
                          $2785 = call $139 with $2780 $164 ($968 is responsible)
                          $2786 = ($154, $2768, $2785)
                        }
                        # Core:iterator:where:19:2:3:6:5:isMatch:else
                        $2787 = { (responsible $2788) ->
                          $2789 = $2780
                        }
                        $2790 = call $132 with $2782 $2783 $2787 ($968 is responsible)
                      }
                      # Core:iterator:where:19:2:3:6:5:isMatch:else
                      $2791 = { (responsible $2792) ->
                        $2793 = $2763
                      }
                      $2794 = call $132 with $2765 $2766 $2791 ($968 is responsible)
                    }
                    # Core:iterator:where:19:2:3:6:5:equals:else
                    $2795 = { (responsible $2796) ->
                      $2797 = call $146 with $2748 ($968 is responsible)
                      $2798 = call $145 with $178 $2797 ($968 is responsible)
                      $2799 = call $145 with $2798 $186 ($968 is responsible)
                      $2800 = ($156, $2799)
                    }
                    $2801 = call $132 with $2749 $2750 $2795 ($968 is responsible)
                  }
                  # Core:iterator:where:19:2:3:6:5:equals:else
                  $2802 = { (responsible $2803) ->
                    $2804 = call $146 with $2743 ($968 is responsible)
                    $2805 = $737
                  }
                  $2806 = call $132 with $2744 $2745 $2802 ($968 is responsible)
                }
                # Core:iterator:where:19:2:3:6:5:equals:else
                $2807 = { (responsible $2808) ->
                  $2809 = call $146 with $2739 ($968 is responsible)
                  $2810 = call $145 with $1062 $2809 ($968 is responsible)
                  $2811 = call $145 with $2810 $171 ($968 is responsible)
                  $2812 = ($156, $2811)
                }
                $2813 = call $132 with $2740 $2741 $2807 ($968 is responsible)
              }
              # Core:iterator:where:19:2:3:6:5:equals:else
              $2814 = { (responsible $2815) ->
                $2816 = call $146 with $2735 ($968 is responsible)
                $2817 = call $145 with $179 $2816 ($968 is responsible)
                $2818 = call $145 with $2817 $186 ($968 is responsible)
                $2819 = ($156, $2818)
              }
              $2820 = call $132 with $2736 $2737 $2814 ($968 is responsible)
              $2821 = call $139 with $2820 $163 ($968 is responsible)
              $2822 = call $130 with $2821 $154 ($968 is responsible)
              # Core:iterator:where:19:2:3:6:5:case-1:matched
              $2823 = { (responsible $2824) ->
                $2825 = call $139 with $2820 $164 ($969 is responsible)
                $2826 = call $139 with $2820 $165 ($970 is responsible)
                $2827 = [$1049: $2825, $1056: $2826]
                $2828 = More $2827
              }
              # Core:iterator:where:19:2:3:6:5:case-1:didNotMatch
              $2829 = { (responsible $2830) ->
                $2831 = call $139 with $2820 $164 ($968 is responsible)
                $2832 = panicking because $181 ($968 is at fault)
              }
              $2833 = call $132 with $2822 $2823 $2829 ($968 is responsible)
            }
            $2834 = call $132 with $2731 $1383 $2732 ($968 is responsible)
          }
          $2835 = call $253 with $2713 $2714 $2718 ($971 is responsible)
        }
        # Core:iterator:where:19:2:3:case-1:didNotMatch
        $2836 = { (responsible $2837) ->
          $2838 = call $139 with $2706 $164 ($964 is responsible)
          $2839 = panicking because $181 ($964 is at fault)
        }
        $2840 = call $132 with $2708 $2709 $2836 ($964 is responsible)
      }
      $2841 = call $132 with $2617 $1383 $2618 ($964 is responsible)
    }
    $2842 = call $1629 with $2602 $2604 ($974 is responsible)
  }
  $2843 = call $518 with $2600 ($102 is responsible)
  $2844 = call $222 with $2843 $182 $975 ($98 is responsible)
  # Core:controlFlow:recursive:18
  $2845 = { $2846 $2847 (+ responsible $2848) ->
    # Core:controlFlow:recursive:18:0
    $2849 = { $2850 (+ responsible $2851) ->
      $2852 = call $2846 with $2846 $2850 ($99 is responsible)
    }
    $2853 = call $2600 with $2849 $2847 ($100 is responsible)
  }
  $2854 = call $2845 with $2845 $2597 ($101 is responsible)
}
# Core:iterator:takeWhile
$2855 = { $2856 $2857 (+ responsible $2858) ->
  # Core:iterator:takeWhile:2
  $2859 = { (responsible $2860) ->
    $2861 = panicking because $1119 ($2858 is at fault)
  }
  $2862 = call $1386 with $2856 $2859 ($950 is responsible)
  # Core:iterator:takeWhile:7
  $2863 = { $2864 (+ responsible $2865) ->
    $2866 = call $1580 with $2864 ($951 is responsible)
    $2867 = call $130 with $1046 $2866 ($952 is responsible)
    # Core:iterator:takeWhile:7:3:equals:else
    $2868 = { (responsible $2869) ->
      $2870 = call $146 with $2866 ($952 is responsible)
      $2871 = call $145 with $1064 $2870 ($952 is responsible)
      $2872 = call $145 with $2871 $186 ($952 is responsible)
      $2873 = ($156, $2872)
    }
    $2874 = call $132 with $2867 $247 $2868 ($952 is responsible)
    $2875 = call $139 with $2874 $163 ($952 is responsible)
    $2876 = call $130 with $2875 $154 ($952 is responsible)
    # Core:iterator:takeWhile:7:3:case-0:didNotMatch
    $2877 = { (responsible $2878) ->
      $2879 = call $139 with $2874 $164 ($952 is responsible)
      $2880 = call $147 with $2866 ($952 is responsible)
      $2881 = call $130 with $160 $2880 ($952 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $2882 = { (responsible $2883) ->
        $2884 = call $144 with $2866 ($952 is responsible)
        $2885 = call $130 with $1052 $2884 ($952 is responsible)
        # Core:iterator:takeWhile:7:3:equals:then
        $2886 = { (responsible $2887) ->
          $2888 = call $143 with $2866 ($952 is responsible)
          $2889 = call $130 with $162 $2888 ($952 is responsible)
          # Core:iterator:takeWhile:7:3:equals:then
          $2890 = { (responsible $2891) ->
            $2892 = call $142 with $2866 ($952 is responsible)
            $2893 = call $147 with $2892 ($952 is responsible)
            $2894 = call $130 with $159 $2893 ($952 is responsible)
            # Core:iterator:takeWhile:7:3:equals:then
            $2895 = { (responsible $2896) ->
              $2897 = call $141 with $2892 $1049 ($952 is responsible)
              # Core:iterator:takeWhile:7:3:hasKey:then
              $2898 = { (responsible $2899) ->
                $2900 = call $140 with $2892 $1049 ($952 is responsible)
                $2901 = ($154, $2900)
              }
              # Core:iterator:takeWhile:7:3:hasKey:else
              $2902 = { (responsible $2903) ->
                $2904 = call $146 with $2892 ($952 is responsible)
                $2905 = call $145 with $1067 $2904 ($952 is responsible)
                $2906 = call $145 with $2905 $186 ($952 is responsible)
                $2907 = ($156, $2906)
              }
              $2908 = call $132 with $2897 $2898 $2902 ($952 is responsible)
              $2909 = call $139 with $2908 $163 ($952 is responsible)
              $2910 = call $130 with $2909 $154 ($952 is responsible)
              # Core:iterator:takeWhile:7:3:isMatch:then
              $2911 = { (responsible $2912) ->
                $2913 = call $139 with $2908 $164 ($952 is responsible)
                $2914 = call $141 with $2892 $1055 ($952 is responsible)
                # Core:iterator:takeWhile:7:3:hasKey:then
                $2915 = { (responsible $2916) ->
                  $2917 = call $140 with $2892 $1055 ($952 is responsible)
                  $2918 = ($154, $2917)
                }
                # Core:iterator:takeWhile:7:3:hasKey:else
                $2919 = { (responsible $2920) ->
                  $2921 = call $146 with $2892 ($952 is responsible)
                  $2922 = call $145 with $1070 $2921 ($952 is responsible)
                  $2923 = call $145 with $2922 $186 ($952 is responsible)
                  $2924 = ($156, $2923)
                }
                $2925 = call $132 with $2914 $2915 $2919 ($952 is responsible)
                $2926 = call $139 with $2925 $163 ($952 is responsible)
                $2927 = call $130 with $2926 $154 ($952 is responsible)
                # Core:iterator:takeWhile:7:3:isMatch:then
                $2928 = { (responsible $2929) ->
                  $2930 = call $139 with $2925 $164 ($952 is responsible)
                  $2931 = ($154, $2913, $2930)
                }
                # Core:iterator:takeWhile:7:3:isMatch:else
                $2932 = { (responsible $2933) ->
                  $2934 = $2925
                }
                $2935 = call $132 with $2927 $2928 $2932 ($952 is responsible)
              }
              # Core:iterator:takeWhile:7:3:isMatch:else
              $2936 = { (responsible $2937) ->
                $2938 = $2908
              }
              $2939 = call $132 with $2910 $2911 $2936 ($952 is responsible)
            }
            # Core:iterator:takeWhile:7:3:equals:else
            $2940 = { (responsible $2941) ->
              $2942 = call $146 with $2893 ($952 is responsible)
              $2943 = call $145 with $178 $2942 ($952 is responsible)
              $2944 = call $145 with $2943 $186 ($952 is responsible)
              $2945 = ($156, $2944)
            }
            $2946 = call $132 with $2894 $2895 $2940 ($952 is responsible)
          }
          # Core:iterator:takeWhile:7:3:equals:else
          $2947 = { (responsible $2948) ->
            $2949 = call $146 with $2888 ($952 is responsible)
            $2950 = $737
          }
          $2951 = call $132 with $2889 $2890 $2947 ($952 is responsible)
        }
        # Core:iterator:takeWhile:7:3:equals:else
        $2952 = { (responsible $2953) ->
          $2954 = call $146 with $2884 ($952 is responsible)
          $2955 = call $145 with $1062 $2954 ($952 is responsible)
          $2956 = call $145 with $2955 $171 ($952 is responsible)
          $2957 = ($156, $2956)
        }
        $2958 = call $132 with $2885 $2886 $2952 ($952 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $2959 = { (responsible $2960) ->
        $2961 = call $146 with $2880 ($952 is responsible)
        $2962 = call $145 with $179 $2961 ($952 is responsible)
        $2963 = call $145 with $2962 $186 ($952 is responsible)
        $2964 = ($156, $2963)
      }
      $2965 = call $132 with $2881 $2882 $2959 ($952 is responsible)
      $2966 = call $139 with $2965 $163 ($952 is responsible)
      $2967 = call $130 with $2966 $154 ($952 is responsible)
      # Core:iterator:takeWhile:7:3:case-1:matched
      $2968 = { (responsible $2969) ->
        $2970 = call $139 with $2965 $164 ($955 is responsible)
        $2971 = call $139 with $2965 $165 ($956 is responsible)
        $2972 = call $2857 with $2970 ($953 is responsible)
        # Core:iterator:takeWhile:7:3:5
        $2973 = { (responsible $2974) ->
          $2975 = [$1049: $2970, $1056: $2971]
          $2976 = More $2975
        }
        $2977 = call $253 with $2972 $2973 $1383 ($954 is responsible)
      }
      # Core:iterator:takeWhile:7:3:case-1:didNotMatch
      $2978 = { (responsible $2979) ->
        $2980 = call $139 with $2965 $164 ($952 is responsible)
        $2981 = panicking because $181 ($952 is at fault)
      }
      $2982 = call $132 with $2967 $2968 $2978 ($952 is responsible)
    }
    $2983 = call $132 with $2876 $1383 $2877 ($952 is responsible)
  }
  $2984 = call $1629 with $2862 $2863 ($957 is responsible)
}
# Core:iterator:withIndex:2
$2985 = { (responsible $2986) ->
  $2987 = panicking because $1125 ($942 is at fault)
}
# Core:iterator:take:34
$2988 = { $2989 (+ responsible $2990) ->
  $2991 = call $147 with $2989 ($47 is responsible)
  $2992 = call $130 with $2991 $159 ($48 is responsible)
  $2993 = call $222 with $2992 $212 $948 ($45 is responsible)
  $2994 = call $141 with $2989 $1049 ($42 is responsible)
  $2995 = call $222 with $2994 $213 $948 ($43 is responsible)
  $2996 = call $140 with $2989 $1049 ($44 is responsible)
}
# Core:iterator:take
$2997 = { $2998 $2999 (+ responsible $3000) ->
  $3001 = call $147 with $2999 ($49 is responsible)
  $3002 = call $130 with $3001 $152 ($1 is responsible)
  $3003 = call $222 with $3002 $1100 $3000 ($938 is responsible)
  $3004 = call $726 with $2999 ($939 is responsible)
  $3005 = call $222 with $3004 $1104 $3000 ($940 is responsible)
  # Core:iterator:take:26
  $3006 = { (responsible $3007) ->
    $3008 = panicking because $1120 ($3000 is at fault)
  }
  $3009 = call $1386 with $2998 $3006 ($941 is responsible)
  $3010 = call $1386 with $3009 $2985 ($1002 is responsible)
  $3011 = [$1050: $3010, $1048: $163]
  $3012 = call $1629 with $3011 $1945 ($1001 is responsible)
  # Core:iterator:take:31
  $3013 = { $3014 (+ responsible $3015) ->
    $3016 = call $147 with $3014 ($943 is responsible)
    $3017 = call $130 with $159 $3016 ($943 is responsible)
    # Core:iterator:take:31:1:equals:then
    $3018 = { (responsible $3019) ->
      $3020 = call $141 with $3014 $1049 ($943 is responsible)
      # Core:iterator:take:31:1:hasKey:then
      $3021 = { (responsible $3022) ->
        $3023 = call $140 with $3014 $1049 ($943 is responsible)
        $3024 = ($154, $3023)
      }
      # Core:iterator:take:31:1:hasKey:else
      $3025 = { (responsible $3026) ->
        $3027 = call $146 with $3014 ($943 is responsible)
        $3028 = call $145 with $1067 $3027 ($943 is responsible)
        $3029 = call $145 with $3028 $186 ($943 is responsible)
        $3030 = ($156, $3029)
      }
      $3031 = call $132 with $3020 $3021 $3025 ($943 is responsible)
      $3032 = call $139 with $3031 $163 ($943 is responsible)
      $3033 = call $130 with $3032 $154 ($943 is responsible)
      # Core:iterator:take:31:1:isMatch:then
      $3034 = { (responsible $3035) ->
        $3036 = call $139 with $3031 $164 ($943 is responsible)
        $3037 = call $141 with $3014 $1048 ($943 is responsible)
        # Core:iterator:take:31:1:hasKey:then
        $3038 = { (responsible $3039) ->
          $3040 = call $140 with $3014 $1048 ($943 is responsible)
          $3041 = ($154, $3040)
        }
        # Core:iterator:take:31:1:hasKey:else
        $3042 = { (responsible $3043) ->
          $3044 = call $146 with $3014 ($943 is responsible)
          $3045 = call $145 with $1066 $3044 ($943 is responsible)
          $3046 = call $145 with $3045 $186 ($943 is responsible)
          $3047 = ($156, $3046)
        }
        $3048 = call $132 with $3037 $3038 $3042 ($943 is responsible)
        $3049 = call $139 with $3048 $163 ($943 is responsible)
        $3050 = call $130 with $3049 $154 ($943 is responsible)
        # Core:iterator:take:31:1:isMatch:then
        $3051 = { (responsible $3052) ->
          $3053 = call $139 with $3048 $164 ($943 is responsible)
          $3054 = ($154, $3036, $3053)
        }
        # Core:iterator:take:31:1:isMatch:else
        $3055 = { (responsible $3056) ->
          $3057 = $3048
        }
        $3058 = call $132 with $3050 $3051 $3055 ($943 is responsible)
      }
      # Core:iterator:take:31:1:isMatch:else
      $3059 = { (responsible $3060) ->
        $3061 = $3031
      }
      $3062 = call $132 with $3033 $3034 $3059 ($943 is responsible)
    }
    # Core:iterator:take:31:1:equals:else
    $3063 = { (responsible $3064) ->
      $3065 = call $146 with $3016 ($943 is responsible)
      $3066 = call $145 with $178 $3065 ($943 is responsible)
      $3067 = call $145 with $3066 $186 ($943 is responsible)
      $3068 = ($156, $3067)
    }
    $3069 = call $132 with $3017 $3018 $3063 ($943 is responsible)
    $3070 = call $139 with $3069 $163 ($943 is responsible)
    $3071 = call $130 with $3070 $154 ($943 is responsible)
    # Core:iterator:take:31:1:isMatch:else
    $3072 = { (responsible $3073) ->
      $3074 = call $139 with $3069 $164 ($943 is responsible)
      $3075 = panicking because $3074 ($943 is at fault)
    }
    $3076 = call $132 with $3071 $219 $3072 ($943 is responsible)
    $3077 = call $139 with $3069 $164 ($946 is responsible)
    $3078 = call $139 with $3069 $165 ($945 is responsible)
    $3079 = call $702 with $3078 $2999 ($944 is responsible)
  }
  $3080 = call $2855 with $3012 $3013 ($947 is responsible)
  $3081 = call $1816 with $3080 $2988 ($949 is responsible)
}
# Core:iterator:skip:30:6
$3082 = { $3083 $3084 (+ responsible $3085) ->
  $3086 = call $147 with $3084 ($921 is responsible)
  $3087 = call $130 with $159 $3086 ($921 is responsible)
  # Core:iterator:skip:30:6:1:equals:then
  $3088 = { (responsible $3089) ->
    $3090 = call $141 with $3084 $1050 ($921 is responsible)
    # Core:iterator:skip:30:6:1:hasKey:then
    $3091 = { (responsible $3092) ->
      $3093 = call $140 with $3084 $1050 ($921 is responsible)
      $3094 = ($154, $3093)
    }
    # Core:iterator:skip:30:6:1:hasKey:else
    $3095 = { (responsible $3096) ->
      $3097 = call $146 with $3084 ($921 is responsible)
      $3098 = call $145 with $1068 $3097 ($921 is responsible)
      $3099 = call $145 with $3098 $186 ($921 is responsible)
      $3100 = ($156, $3099)
    }
    $3101 = call $132 with $3090 $3091 $3095 ($921 is responsible)
    $3102 = call $139 with $3101 $163 ($921 is responsible)
    $3103 = call $130 with $3102 $154 ($921 is responsible)
    # Core:iterator:skip:30:6:1:isMatch:then
    $3104 = { (responsible $3105) ->
      $3106 = call $139 with $3101 $164 ($921 is responsible)
      $3107 = call $141 with $3084 $1053 ($921 is responsible)
      # Core:iterator:skip:30:6:1:hasKey:then
      $3108 = { (responsible $3109) ->
        $3110 = call $140 with $3084 $1053 ($921 is responsible)
        $3111 = ($154, $3110)
      }
      # Core:iterator:skip:30:6:1:hasKey:else
      $3112 = { (responsible $3113) ->
        $3114 = call $146 with $3084 ($921 is responsible)
        $3115 = call $145 with $1069 $3114 ($921 is responsible)
        $3116 = call $145 with $3115 $186 ($921 is responsible)
        $3117 = ($156, $3116)
      }
      $3118 = call $132 with $3107 $3108 $3112 ($921 is responsible)
      $3119 = call $139 with $3118 $163 ($921 is responsible)
      $3120 = call $130 with $3119 $154 ($921 is responsible)
      # Core:iterator:skip:30:6:1:isMatch:then
      $3121 = { (responsible $3122) ->
        $3123 = call $139 with $3118 $164 ($921 is responsible)
        $3124 = ($154, $3106, $3123)
      }
      # Core:iterator:skip:30:6:1:isMatch:else
      $3125 = { (responsible $3126) ->
        $3127 = $3118
      }
      $3128 = call $132 with $3120 $3121 $3125 ($921 is responsible)
    }
    # Core:iterator:skip:30:6:1:isMatch:else
    $3129 = { (responsible $3130) ->
      $3131 = $3101
    }
    $3132 = call $132 with $3103 $3104 $3129 ($921 is responsible)
  }
  # Core:iterator:skip:30:6:1:equals:else
  $3133 = { (responsible $3134) ->
    $3135 = call $146 with $3086 ($921 is responsible)
    $3136 = call $145 with $178 $3135 ($921 is responsible)
    $3137 = call $145 with $3136 $186 ($921 is responsible)
    $3138 = ($156, $3137)
  }
  $3139 = call $132 with $3087 $3088 $3133 ($921 is responsible)
  $3140 = call $139 with $3139 $163 ($921 is responsible)
  $3141 = call $130 with $3140 $154 ($921 is responsible)
  # Core:iterator:skip:30:6:1:isMatch:else
  $3142 = { (responsible $3143) ->
    $3144 = call $139 with $3139 $164 ($921 is responsible)
    $3145 = panicking because $3144 ($921 is at fault)
  }
  $3146 = call $132 with $3141 $219 $3142 ($921 is responsible)
  $3147 = call $139 with $3139 $164 ($929 is responsible)
  $3148 = call $139 with $3139 $165 ($930 is responsible)
  $3149 = call $130 with $3148 $163 ($1 is responsible)
  # Core:iterator:skip:30:6:7
  $3150 = { (responsible $3151) ->
    $3152 = call $1580 with $3147 ($922 is responsible)
  }
  # Core:iterator:skip:30:6:8
  $3153 = { (responsible $3154) ->
    $3155 = call $1580 with $3147 ($923 is responsible)
    $3156 = call $130 with $1046 $3155 ($924 is responsible)
    # Core:iterator:skip:30:6:8:3:equals:else
    $3157 = { (responsible $3158) ->
      $3159 = call $146 with $3155 ($924 is responsible)
      $3160 = call $145 with $1064 $3159 ($924 is responsible)
      $3161 = call $145 with $3160 $186 ($924 is responsible)
      $3162 = ($156, $3161)
    }
    $3163 = call $132 with $3156 $247 $3157 ($924 is responsible)
    $3164 = call $139 with $3163 $163 ($924 is responsible)
    $3165 = call $130 with $3164 $154 ($924 is responsible)
    # Core:iterator:skip:30:6:8:3:case-0:didNotMatch
    $3166 = { (responsible $3167) ->
      $3168 = call $139 with $3163 $164 ($924 is responsible)
      $3169 = call $147 with $3155 ($924 is responsible)
      $3170 = call $130 with $160 $3169 ($924 is responsible)
      # Core:iterator:skip:30:6:8:3:equals:then
      $3171 = { (responsible $3172) ->
        $3173 = call $144 with $3155 ($924 is responsible)
        $3174 = call $130 with $1052 $3173 ($924 is responsible)
        # Core:iterator:skip:30:6:8:3:equals:then
        $3175 = { (responsible $3176) ->
          $3177 = call $143 with $3155 ($924 is responsible)
          $3178 = call $130 with $162 $3177 ($924 is responsible)
          # Core:iterator:skip:30:6:8:3:equals:then
          $3179 = { (responsible $3180) ->
            $3181 = call $142 with $3155 ($924 is responsible)
            $3182 = call $147 with $3181 ($924 is responsible)
            $3183 = call $130 with $159 $3182 ($924 is responsible)
            # Core:iterator:skip:30:6:8:3:equals:then
            $3184 = { (responsible $3185) ->
              $3186 = call $141 with $3181 $1055 ($924 is responsible)
              # Core:iterator:skip:30:6:8:3:hasKey:then
              $3187 = { (responsible $3188) ->
                $3189 = call $140 with $3181 $1055 ($924 is responsible)
                $3190 = ($154, $3189)
              }
              # Core:iterator:skip:30:6:8:3:hasKey:else
              $3191 = { (responsible $3192) ->
                $3193 = call $146 with $3181 ($924 is responsible)
                $3194 = call $145 with $1070 $3193 ($924 is responsible)
                $3195 = call $145 with $3194 $186 ($924 is responsible)
                $3196 = ($156, $3195)
              }
              $3197 = call $132 with $3186 $3187 $3191 ($924 is responsible)
              $3198 = call $139 with $3197 $163 ($924 is responsible)
              $3199 = call $130 with $3198 $154 ($924 is responsible)
              # Core:iterator:skip:30:6:8:3:isMatch:then
              $3200 = { (responsible $3201) ->
                $3202 = call $139 with $3197 $164 ($924 is responsible)
                $3203 = ($154, $3202)
              }
              # Core:iterator:skip:30:6:8:3:isMatch:else
              $3204 = { (responsible $3205) ->
                $3206 = $3197
              }
              $3207 = call $132 with $3199 $3200 $3204 ($924 is responsible)
            }
            # Core:iterator:skip:30:6:8:3:equals:else
            $3208 = { (responsible $3209) ->
              $3210 = call $146 with $3182 ($924 is responsible)
              $3211 = call $145 with $178 $3210 ($924 is responsible)
              $3212 = call $145 with $3211 $186 ($924 is responsible)
              $3213 = ($156, $3212)
            }
            $3214 = call $132 with $3183 $3184 $3208 ($924 is responsible)
          }
          # Core:iterator:skip:30:6:8:3:equals:else
          $3215 = { (responsible $3216) ->
            $3217 = call $146 with $3177 ($924 is responsible)
            $3218 = $737
          }
          $3219 = call $132 with $3178 $3179 $3215 ($924 is responsible)
        }
        # Core:iterator:skip:30:6:8:3:equals:else
        $3220 = { (responsible $3221) ->
          $3222 = call $146 with $3173 ($924 is responsible)
          $3223 = call $145 with $1062 $3222 ($924 is responsible)
          $3224 = call $145 with $3223 $171 ($924 is responsible)
          $3225 = ($156, $3224)
        }
        $3226 = call $132 with $3174 $3175 $3220 ($924 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:equals:else
      $3227 = { (responsible $3228) ->
        $3229 = call $146 with $3169 ($924 is responsible)
        $3230 = call $145 with $179 $3229 ($924 is responsible)
        $3231 = call $145 with $3230 $186 ($924 is responsible)
        $3232 = ($156, $3231)
      }
      $3233 = call $132 with $3170 $3171 $3227 ($924 is responsible)
      $3234 = call $139 with $3233 $163 ($924 is responsible)
      $3235 = call $130 with $3234 $154 ($924 is responsible)
      # Core:iterator:skip:30:6:8:3:case-1:matched
      $3236 = { (responsible $3237) ->
        $3238 = call $139 with $3233 $164 ($927 is responsible)
        $3239 = call $147 with $3148 ($47 is responsible)
        $3240 = call $130 with $3239 $152 ($48 is responsible)
        $3241 = call $222 with $3240 $211 $925 ($33 is responsible)
        $3242 = call $138 with $3148 $164 ($32 is responsible)
        $3243 = [$1053: $3242, $1050: $3238]
        $3244 = call $3083 with $3243 ($926 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:case-1:didNotMatch
      $3245 = { (responsible $3246) ->
        $3247 = call $139 with $3233 $164 ($924 is responsible)
        $3248 = panicking because $181 ($924 is at fault)
      }
      $3249 = call $132 with $3235 $3236 $3245 ($924 is responsible)
    }
    $3250 = call $132 with $3165 $1383 $3166 ($924 is responsible)
  }
  $3251 = call $253 with $3149 $3150 $3153 ($928 is responsible)
}
# Core:controlFlow:recursive:18
$3252 = { $3253 $3254 (+ responsible $3255) ->
  # Core:controlFlow:recursive:18:0
  $3256 = { $3257 (+ responsible $3258) ->
    $3259 = call $3253 with $3253 $3257 ($99 is responsible)
  }
  $3260 = call $3082 with $3256 $3254 ($100 is responsible)
}
# Core:iterator:skip
$3261 = { $3262 $3263 (+ responsible $3264) ->
  # Core:iterator:skip:2
  $3265 = { (responsible $3266) ->
    $3267 = panicking because $1117 ($3264 is at fault)
  }
  $3268 = call $1386 with $3262 $3265 ($920 is responsible)
  $3269 = call $147 with $3263 ($49 is responsible)
  $3270 = call $130 with $3269 $152 ($1 is responsible)
  $3271 = call $222 with $3270 $1100 $3264 ($917 is responsible)
  $3272 = call $726 with $3263 ($918 is responsible)
  $3273 = call $222 with $3272 $1104 $3264 ($919 is responsible)
  # Core:iterator:skip:30
  $3274 = { (responsible $3275) ->
    $3276 = [$1050: $3268, $1053: $3263]
    $3277 = call $518 with $3082 ($102 is responsible)
    $3278 = call $222 with $3277 $182 $931 ($98 is responsible)
    $3279 = call $3252 with $3252 $3276 ($101 is responsible)
  }
  $3280 = Iterator $3274
}
# Core:iterator:fromList
$3281 = { $3282 (+ responsible $3283) ->
  $3284 = call $147 with $3282 ($49 is responsible)
  $3285 = call $130 with $3284 $1051 ($1 is responsible)
  $3286 = call $222 with $3285 $1113 $3283 ($857 is responsible)
  $3287 = call $147 with $3282 ($47 is responsible)
  $3288 = call $130 with $3287 $1051 ($48 is responsible)
  $3289 = call $222 with $3288 $1112 $858 ($813 is responsible)
  $3290 = call $1045 with $3282 ($812 is responsible)
  # Core:iterator:fromList:23
  $3291 = { $3292 (+ responsible $3293) ->
    $3294 = call $1334 with $3282 $3292 ($859 is responsible)
  }
  $3295 = call $1783 with $3290 $3291 ($860 is responsible)
}
$3296 = (,)
# Core:iterator:toList:6
$3297 = { $3298 $3299 (+ responsible $3300) ->
  $3301 = call $1371 with $3298 $3299 ($959 is responsible)
}
# Core:iterator:toList:2
$3302 = { (responsible $3303) ->
  $3304 = panicking because $1122 ($991 is at fault)
}
# Core:iterator:windowed
$3305 = { $3306 $3307 $3308 $3309 (+ responsible $3310) ->
  # Core:iterator:windowed:2
  $3311 = { (responsible $3312) ->
    $3313 = panicking because $1124 ($3310 is at fault)
  }
  $3314 = call $1386 with $3306 $3311 ($980 is responsible)
  $3315 = call $147 with $3307 ($49 is responsible)
  $3316 = call $130 with $3315 $152 ($1 is responsible)
  $3317 = call $222 with $3316 $1101 $3310 ($977 is responsible)
  $3318 = call $147 with $3307 ($49 is responsible)
  $3319 = call $130 with $3318 $152 ($1 is responsible)
  $3320 = call $222 with $3319 $208 $978 ($776 is responsible)
  $3321 = call $714 with $3307 $163 ($777 is responsible)
  $3322 = call $222 with $3321 $1105 $3310 ($979 is responsible)
  $3323 = call $147 with $3308 ($49 is responsible)
  $3324 = call $130 with $3323 $152 ($1 is responsible)
  $3325 = call $222 with $3324 $1102 $3310 ($981 is responsible)
  $3326 = call $147 with $3308 ($49 is responsible)
  $3327 = call $130 with $3326 $152 ($1 is responsible)
  $3328 = call $222 with $3327 $208 $982 ($776 is responsible)
  $3329 = call $714 with $3308 $163 ($777 is responsible)
  $3330 = call $222 with $3329 $1106 $3310 ($983 is responsible)
  $3331 = call $334 with $3309 ($984 is responsible)
  $3332 = call $222 with $3331 $1080 $3310 ($985 is responsible)
  # Core:iterator:windowed:67
  $3333 = { $3334 (+ responsible $3335) ->
    $3336 = call $2997 with $3334 $3307 ($990 is responsible)
    $3337 = call $1386 with $3336 $3302 ($958 is responsible)
    $3338 = call $2148 with $3337 $3296 $3297 ($960 is responsible)
    $3339 = call $147 with $3338 ($47 is responsible)
    $3340 = call $130 with $3339 $1051 ($48 is responsible)
    $3341 = call $222 with $3340 $1112 $986 ($813 is responsible)
    $3342 = call $1045 with $3338 ($812 is responsible)
    # Core:iterator:windowed:67:20
    $3343 = { (responsible $3344) ->
      $3345 = call $714 with $3342 $163 ($777 is responsible)
    }
    # Core:iterator:windowed:67:21
    $3346 = { (responsible $3347) ->
      $3348 = call $130 with $3342 $3307 ($1 is responsible)
    }
    $3349 = call $253 with $3309 $3343 $3346 ($987 is responsible)
    # Core:iterator:windowed:67:26
    $3350 = { (responsible $3351) ->
      $3352 = call $3261 with $3334 $3308 ($988 is responsible)
      $3353 = [$1049: $3338, $1056: $3352]
      $3354 = More $3353
    }
    $3355 = call $253 with $3349 $3350 $1383 ($989 is responsible)
  }
  $3356 = call $1629 with $3314 $3333 ($992 is responsible)
}
# Core:iterator:chunked
$3357 = { $3358 $3359 (+ responsible $3360) ->
  $3361 = call $147 with $3359 ($49 is responsible)
  $3362 = call $130 with $3361 $152 ($1 is responsible)
  $3363 = call $222 with $3362 $1101 $3360 ($834 is responsible)
  $3364 = call $147 with $3359 ($49 is responsible)
  $3365 = call $130 with $3364 $152 ($1 is responsible)
  $3366 = call $222 with $3365 $208 $835 ($776 is responsible)
  $3367 = call $714 with $3359 $163 ($777 is responsible)
  $3368 = call $222 with $3367 $1105 $3360 ($836 is responsible)
  # Core:iterator:chunked:26
  $3369 = { (responsible $3370) ->
    $3371 = panicking because $1082 ($3360 is at fault)
  }
  $3372 = call $1386 with $3358 $3369 ($837 is responsible)
  $3373 = call $3305 with $3372 $3359 $3359 $162 ($838 is responsible)
}
# Builtins::toDebugText, Core:iterator:199, Core:toDebugText:toDebugText
$3374 = { $3375 (+ responsible $3376) ->
  $3377 = call $146 with $3375 ($46 is responsible)
}
$3378 = ($164, $165, $166)
$3379 = call $3281 with $3378 ($817 is responsible)
$3380 = 6
$3381 = 7
$3382 = 8
$3383 = 9
$3384 = ($164, $165, $166, $167, $168, $3380, $3381, $3382, $3383, $169)
$3385 = Core:iterator:123
$3386 = call $3281 with $3384 ($3385 is responsible)
$3387 = Core:iterator:127
$3388 = call $1580 with $3379 ($3387 is responsible)
$3389 = Core:iterator:128
$3390 = call $147 with $3388 ($3389 is responsible)
$3391 = call $130 with $160 $3390 ($3389 is responsible)
# Core:iterator:128:equals:then
$3392 = { (responsible $3393) ->
  $3394 = call $144 with $3388 ($3389 is responsible)
  $3395 = call $130 with $1052 $3394 ($3389 is responsible)
  # Core:iterator:128:equals:then
  $3396 = { (responsible $3397) ->
    $3398 = call $143 with $3388 ($3389 is responsible)
    $3399 = call $130 with $162 $3398 ($3389 is responsible)
    # Core:iterator:128:equals:then
    $3400 = { (responsible $3401) ->
      $3402 = call $142 with $3388 ($3389 is responsible)
      $3403 = call $147 with $3402 ($3389 is responsible)
      $3404 = call $130 with $159 $3403 ($3389 is responsible)
      # Core:iterator:128:equals:then
      $3405 = { (responsible $3406) ->
        $3407 = call $141 with $3402 $1049 ($3389 is responsible)
        # Core:iterator:128:hasKey:then
        $3408 = { (responsible $3409) ->
          $3410 = call $140 with $3402 $1049 ($3389 is responsible)
          $3411 = ($154, $3410)
        }
        # Core:iterator:128:hasKey:else
        $3412 = { (responsible $3413) ->
          $3414 = call $146 with $3402 ($3389 is responsible)
          $3415 = call $145 with $1067 $3414 ($3389 is responsible)
          $3416 = call $145 with $3415 $186 ($3389 is responsible)
          $3417 = ($156, $3416)
        }
        $3418 = call $132 with $3407 $3408 $3412 ($3389 is responsible)
        $3419 = call $139 with $3418 $163 ($3389 is responsible)
        $3420 = call $130 with $3419 $154 ($3389 is responsible)
        # Core:iterator:128:isMatch:then
        $3421 = { (responsible $3422) ->
          $3423 = call $139 with $3418 $164 ($3389 is responsible)
          $3424 = call $141 with $3402 $1055 ($3389 is responsible)
          # Core:iterator:128:hasKey:then
          $3425 = { (responsible $3426) ->
            $3427 = call $140 with $3402 $1055 ($3389 is responsible)
            $3428 = ($154, $3427)
          }
          # Core:iterator:128:hasKey:else
          $3429 = { (responsible $3430) ->
            $3431 = call $146 with $3402 ($3389 is responsible)
            $3432 = call $145 with $1070 $3431 ($3389 is responsible)
            $3433 = call $145 with $3432 $186 ($3389 is responsible)
            $3434 = ($156, $3433)
          }
          $3435 = call $132 with $3424 $3425 $3429 ($3389 is responsible)
          $3436 = call $139 with $3435 $163 ($3389 is responsible)
          $3437 = call $130 with $3436 $154 ($3389 is responsible)
          # Core:iterator:128:isMatch:then
          $3438 = { (responsible $3439) ->
            $3440 = call $139 with $3435 $164 ($3389 is responsible)
            $3441 = ($154, $3423, $3440)
          }
          # Core:iterator:128:isMatch:else
          $3442 = { (responsible $3443) ->
            $3444 = $3435
          }
          $3445 = call $132 with $3437 $3438 $3442 ($3389 is responsible)
        }
        # Core:iterator:128:isMatch:else
        $3446 = { (responsible $3447) ->
          $3448 = $3418
        }
        $3449 = call $132 with $3420 $3421 $3446 ($3389 is responsible)
      }
      # Core:iterator:128:equals:else
      $3450 = { (responsible $3451) ->
        $3452 = call $146 with $3403 ($3389 is responsible)
        $3453 = call $145 with $178 $3452 ($3389 is responsible)
        $3454 = call $145 with $3453 $186 ($3389 is responsible)
        $3455 = ($156, $3454)
      }
      $3456 = call $132 with $3404 $3405 $3450 ($3389 is responsible)
    }
    # Core:iterator:128:equals:else
    $3457 = { (responsible $3458) ->
      $3459 = call $146 with $3398 ($3389 is responsible)
      $3460 = $737
    }
    $3461 = call $132 with $3399 $3400 $3457 ($3389 is responsible)
  }
  # Core:iterator:128:equals:else
  $3462 = { (responsible $3463) ->
    $3464 = call $146 with $3394 ($3389 is responsible)
    $3465 = call $145 with $1062 $3464 ($3389 is responsible)
    $3466 = call $145 with $3465 $171 ($3389 is responsible)
    $3467 = ($156, $3466)
  }
  $3468 = call $132 with $3395 $3396 $3462 ($3389 is responsible)
}
# Core:iterator:128:equals:else
$3469 = { (responsible $3470) ->
  $3471 = call $146 with $3390 ($3389 is responsible)
  $3472 = call $145 with $179 $3471 ($3389 is responsible)
  $3473 = call $145 with $3472 $186 ($3389 is responsible)
  $3474 = ($156, $3473)
}
$3475 = call $132 with $3391 $3392 $3469 ($3389 is responsible)
$3476 = call $139 with $3475 $163 ($3389 is responsible)
$3477 = call $130 with $3476 $154 ($3389 is responsible)
# Core:iterator:128:isMatch:else
$3478 = { (responsible $3479) ->
  $3480 = call $139 with $3475 $164 ($3389 is responsible)
  $3481 = panicking because $3480 ($3389 is at fault)
}
$3482 = call $132 with $3477 $219 $3478 ($3389 is responsible)
$3483 = Core:iterator:item
$3484 = call $139 with $3475 $164 ($3483 is responsible)
$3485 = Core:iterator:rest
$3486 = call $139 with $3475 $165 ($3485 is responsible)
$3487 = Core:iterator:133
$3488 = call $490 with $3484 $164 ($3487 is responsible)
$3489 = Core:iterator:136
$3490 = call $1580 with $3486 ($3489 is responsible)
$3491 = Core:iterator:137
$3492 = call $147 with $3490 ($3491 is responsible)
$3493 = call $130 with $160 $3492 ($3491 is responsible)
# Core:iterator:137:equals:then
$3494 = { (responsible $3495) ->
  $3496 = call $144 with $3490 ($3491 is responsible)
  $3497 = call $130 with $1052 $3496 ($3491 is responsible)
  # Core:iterator:137:equals:then
  $3498 = { (responsible $3499) ->
    $3500 = call $143 with $3490 ($3491 is responsible)
    $3501 = call $130 with $162 $3500 ($3491 is responsible)
    # Core:iterator:137:equals:then
    $3502 = { (responsible $3503) ->
      $3504 = call $142 with $3490 ($3491 is responsible)
      $3505 = call $147 with $3504 ($3491 is responsible)
      $3506 = call $130 with $159 $3505 ($3491 is responsible)
      # Core:iterator:137:equals:then
      $3507 = { (responsible $3508) ->
        $3509 = call $141 with $3504 $1049 ($3491 is responsible)
        # Core:iterator:137:hasKey:then
        $3510 = { (responsible $3511) ->
          $3512 = call $140 with $3504 $1049 ($3491 is responsible)
          $3513 = ($154, $3512)
        }
        # Core:iterator:137:hasKey:else
        $3514 = { (responsible $3515) ->
          $3516 = call $146 with $3504 ($3491 is responsible)
          $3517 = call $145 with $1067 $3516 ($3491 is responsible)
          $3518 = call $145 with $3517 $186 ($3491 is responsible)
          $3519 = ($156, $3518)
        }
        $3520 = call $132 with $3509 $3510 $3514 ($3491 is responsible)
        $3521 = call $139 with $3520 $163 ($3491 is responsible)
        $3522 = call $130 with $3521 $154 ($3491 is responsible)
        # Core:iterator:137:isMatch:then
        $3523 = { (responsible $3524) ->
          $3525 = call $139 with $3520 $164 ($3491 is responsible)
          $3526 = call $141 with $3504 $1055 ($3491 is responsible)
          # Core:iterator:137:hasKey:then
          $3527 = { (responsible $3528) ->
            $3529 = call $140 with $3504 $1055 ($3491 is responsible)
            $3530 = ($154, $3529)
          }
          # Core:iterator:137:hasKey:else
          $3531 = { (responsible $3532) ->
            $3533 = call $146 with $3504 ($3491 is responsible)
            $3534 = call $145 with $1070 $3533 ($3491 is responsible)
            $3535 = call $145 with $3534 $186 ($3491 is responsible)
            $3536 = ($156, $3535)
          }
          $3537 = call $132 with $3526 $3527 $3531 ($3491 is responsible)
          $3538 = call $139 with $3537 $163 ($3491 is responsible)
          $3539 = call $130 with $3538 $154 ($3491 is responsible)
          # Core:iterator:137:isMatch:then
          $3540 = { (responsible $3541) ->
            $3542 = call $139 with $3537 $164 ($3491 is responsible)
            $3543 = ($154, $3525, $3542)
          }
          # Core:iterator:137:isMatch:else
          $3544 = { (responsible $3545) ->
            $3546 = $3537
          }
          $3547 = call $132 with $3539 $3540 $3544 ($3491 is responsible)
        }
        # Core:iterator:137:isMatch:else
        $3548 = { (responsible $3549) ->
          $3550 = $3520
        }
        $3551 = call $132 with $3522 $3523 $3548 ($3491 is responsible)
      }
      # Core:iterator:137:equals:else
      $3552 = { (responsible $3553) ->
        $3554 = call $146 with $3505 ($3491 is responsible)
        $3555 = call $145 with $178 $3554 ($3491 is responsible)
        $3556 = call $145 with $3555 $186 ($3491 is responsible)
        $3557 = ($156, $3556)
      }
      $3558 = call $132 with $3506 $3507 $3552 ($3491 is responsible)
    }
    # Core:iterator:137:equals:else
    $3559 = { (responsible $3560) ->
      $3561 = call $146 with $3500 ($3491 is responsible)
      $3562 = $737
    }
    $3563 = call $132 with $3501 $3502 $3559 ($3491 is responsible)
  }
  # Core:iterator:137:equals:else
  $3564 = { (responsible $3565) ->
    $3566 = call $146 with $3496 ($3491 is responsible)
    $3567 = call $145 with $1062 $3566 ($3491 is responsible)
    $3568 = call $145 with $3567 $171 ($3491 is responsible)
    $3569 = ($156, $3568)
  }
  $3570 = call $132 with $3497 $3498 $3564 ($3491 is responsible)
}
# Core:iterator:137:equals:else
$3571 = { (responsible $3572) ->
  $3573 = call $146 with $3492 ($3491 is responsible)
  $3574 = call $145 with $179 $3573 ($3491 is responsible)
  $3575 = call $145 with $3574 $186 ($3491 is responsible)
  $3576 = ($156, $3575)
}
$3577 = call $132 with $3493 $3494 $3571 ($3491 is responsible)
$3578 = call $139 with $3577 $163 ($3491 is responsible)
$3579 = call $130 with $3578 $154 ($3491 is responsible)
# Core:iterator:137:isMatch:else
$3580 = { (responsible $3581) ->
  $3582 = call $139 with $3577 $164 ($3491 is responsible)
  $3583 = panicking because $3582 ($3491 is at fault)
}
$3584 = call $132 with $3579 $219 $3580 ($3491 is responsible)
$3585 = Core:iterator:item#1
$3586 = call $139 with $3577 $164 ($3585 is responsible)
$3587 = Core:iterator:rest#1
$3588 = call $139 with $3577 $165 ($3587 is responsible)
$3589 = Core:iterator:142
$3590 = call $490 with $3586 $165 ($3589 is responsible)
$3591 = Core:iterator:147
# Core:iterator:isEmpty:2
$3592 = { (responsible $3593) ->
  $3594 = panicking because $1109 ($3591 is at fault)
}
$3595 = call $1386 with $3379 $3592 ($887 is responsible)
$3596 = call $1580 with $3595 ($888 is responsible)
$3597 = call $130 with $3596 $1046 ($1 is responsible)
$3598 = Core:iterator:149
$3599 = call $490 with $3597 $149 ($3598 is responsible)
$3600 = Core:iterator:154
$3601 = call $3281 with $3296 ($3600 is responsible)
$3602 = Core:iterator:155
# Core:iterator:isEmpty:2
$3603 = { (responsible $3604) ->
  $3605 = panicking because $1109 ($3602 is at fault)
}
$3606 = call $1386 with $3601 $3603 ($887 is responsible)
$3607 = call $1580 with $3606 ($888 is responsible)
$3608 = call $130 with $3607 $1046 ($1 is responsible)
$3609 = Core:iterator:157
$3610 = call $490 with $3608 $162 ($3609 is responsible)
$3611 = Core:iterator:161:10
# Core:iterator:161
$3612 = { $3613 (+ responsible $3614) ->
  $3615 = call $147 with $3613 ($47 is responsible)
  $3616 = call $130 with $3615 $152 ($48 is responsible)
  $3617 = call $222 with $3616 $197 $3611 ($31 is responsible)
  $3618 = call $137 with $3613 $165 ($30 is responsible)
}
$3619 = Core:iterator:162
$3620 = call $1816 with $3379 $3612 ($3619 is responsible)
$3621 = Core:iterator:164
# Core:iterator:toList:2
$3622 = { (responsible $3623) ->
  $3624 = panicking because $1122 ($3621 is at fault)
}
$3625 = call $1386 with $3620 $3622 ($958 is responsible)
$3626 = call $2148 with $3625 $3296 $3297 ($960 is responsible)
$3627 = ($165, $167, $3380)
$3628 = Core:iterator:169
$3629 = call $490 with $3626 $3627 ($3628 is responsible)
$3630 = Core:iterator:173
$3631 = call $2496 with $3379 ($3630 is responsible)
$3632 = Core:iterator:175
$3633 = call $490 with $3631 $3380 ($3632 is responsible)
$3634 = Core:iterator:179
# Core:iterator:length:2
$3635 = { (responsible $3636) ->
  $3637 = panicking because $1111 ($3634 is at fault)
}
$3638 = call $1386 with $3379 $3635 ($893 is responsible)
$3639 = call $1816 with $3638 $2512 ($894 is responsible)
$3640 = call $2496 with $3639 ($895 is responsible)
$3641 = Core:iterator:181
$3642 = call $490 with $3640 $166 ($3641 is responsible)
$3643 = Core:iterator:185:9
# Core:iterator:185
$3644 = { $3645 (+ responsible $3646) ->
  $3647 = call $147 with $3645 ($49 is responsible)
  $3648 = call $130 with $3647 $152 ($1 is responsible)
  $3649 = call $222 with $3648 $208 $3643 ($776 is responsible)
  $3650 = call $714 with $3645 $163 ($777 is responsible)
}
$3651 = Core:iterator:186
$3652 = call $2516 with $3379 $3644 ($3651 is responsible)
$3653 = Core:iterator:188
$3654 = call $490 with $3652 $162 ($3653 is responsible)
# Core:iterator:192
$3655 = { $3656 (+ responsible $3657) ->
  $3658 = call $130 with $3656 $165 ($1 is responsible)
}
$3659 = Core:iterator:193
$3660 = call $2542 with $3379 $3655 ($3659 is responsible)
$3661 = Core:iterator:195
$3662 = call $490 with $3660 $162 ($3661 is responsible)
$3663 = Core:iterator:200
$3664 = call $1816 with $3379 $3374 ($3663 is responsible)
$3665 = Core:iterator:202
$3666 = call $2568 with $3664 ($3665 is responsible)
$3667 = "123"
$3668 = Core:iterator:210
$3669 = call $490 with $3666 $3667 ($3668 is responsible)
$3670 = Core:iterator:214:9
# Core:iterator:214
$3671 = { $3672 (+ responsible $3673) ->
  $3674 = call $785 with $3672 ($3670 is responsible)
}
$3675 = Core:iterator:215
$3676 = call $2590 with $3386 $3671 ($3675 is responsible)
$3677 = Core:iterator:217
# Core:iterator:toList:2
$3678 = { (responsible $3679) ->
  $3680 = panicking because $1122 ($3677 is at fault)
}
$3681 = call $1386 with $3676 $3678 ($958 is responsible)
$3682 = call $2148 with $3681 $3296 $3297 ($960 is responsible)
$3683 = ($164, $166, $168, $3381, $3383)
$3684 = Core:iterator:224
$3685 = call $490 with $3682 $3683 ($3684 is responsible)
$3686 = Core:iterator:228:10
# Core:iterator:228
$3687 = { $3688 (+ responsible $3689) ->
  $3690 = call $702 with $3688 $167 ($3686 is responsible)
}
$3691 = Core:iterator:229
$3692 = call $2855 with $3386 $3687 ($3691 is responsible)
$3693 = Core:iterator:231
# Core:iterator:toList:2
$3694 = { (responsible $3695) ->
  $3696 = panicking because $1122 ($3693 is at fault)
}
$3697 = call $1386 with $3692 $3694 ($958 is responsible)
$3698 = call $2148 with $3697 $3296 $3297 ($960 is responsible)
$3699 = Core:iterator:236
$3700 = call $490 with $3698 $3378 ($3699 is responsible)
$3701 = Core:iterator:241
$3702 = call $2997 with $3386 $167 ($3701 is responsible)
$3703 = Core:iterator:243
# Core:iterator:toList:2
$3704 = { (responsible $3705) ->
  $3706 = panicking because $1122 ($3703 is at fault)
}
$3707 = call $1386 with $3702 $3704 ($958 is responsible)
$3708 = call $2148 with $3707 $3296 $3297 ($960 is responsible)
$3709 = ($164, $165, $166, $167)
$3710 = Core:iterator:249
$3711 = call $490 with $3708 $3709 ($3710 is responsible)
$3712 = 12
$3713 = Core:iterator:254
$3714 = call $2997 with $3386 $3712 ($3713 is responsible)
$3715 = Core:iterator:256
# Core:iterator:toList:2
$3716 = { (responsible $3717) ->
  $3718 = panicking because $1122 ($3715 is at fault)
}
$3719 = call $1386 with $3714 $3716 ($958 is responsible)
$3720 = call $2148 with $3719 $3296 $3297 ($960 is responsible)
$3721 = Core:iterator:268
$3722 = call $490 with $3720 $3384 ($3721 is responsible)
$3723 = Core:iterator:273
$3724 = call $3261 with $3386 $167 ($3723 is responsible)
$3725 = Core:iterator:275
# Core:iterator:toList:2
$3726 = { (responsible $3727) ->
  $3728 = panicking because $1122 ($3725 is at fault)
}
$3729 = call $1386 with $3724 $3726 ($958 is responsible)
$3730 = call $2148 with $3729 $3296 $3297 ($960 is responsible)
$3731 = ($168, $3380, $3381, $3382, $3383, $169)
$3732 = Core:iterator:283
$3733 = call $490 with $3730 $3731 ($3732 is responsible)
$3734 = 40
$3735 = Core:iterator:288
$3736 = call $3261 with $3386 $3734 ($3735 is responsible)
$3737 = Core:iterator:290
# Core:iterator:toList:2
$3738 = { (responsible $3739) ->
  $3740 = panicking because $1122 ($3737 is at fault)
}
$3741 = call $1386 with $3736 $3738 ($958 is responsible)
$3742 = call $2148 with $3741 $3296 $3297 ($960 is responsible)
$3743 = Core:iterator:292
$3744 = call $490 with $3742 $3296 ($3743 is responsible)
$3745 = Core:iterator:299
$3746 = call $3305 with $3386 $167 $166 $149 ($3745 is responsible)
$3747 = Core:iterator:301
# Core:iterator:toList:2
$3748 = { (responsible $3749) ->
  $3750 = panicking because $1122 ($3747 is at fault)
}
$3751 = call $1386 with $3746 $3748 ($958 is responsible)
$3752 = call $2148 with $3751 $3296 $3297 ($960 is responsible)
$3753 = ($167, $168, $3380, $3381)
$3754 = ($3381, $3382, $3383, $169)
$3755 = ($3709, $3753, $3754)
$3756 = Core:iterator:318
$3757 = call $490 with $3752 $3755 ($3756 is responsible)
$3758 = Core:iterator:323
$3759 = call $3357 with $3386 $166 ($3758 is responsible)
$3760 = Core:iterator:325
# Core:iterator:toList:2
$3761 = { (responsible $3762) ->
  $3763 = panicking because $1122 ($3760 is at fault)
}
$3764 = call $1386 with $3759 $3761 ($958 is responsible)
$3765 = call $2148 with $3764 $3296 $3297 ($960 is responsible)
$3766 = ($167, $168, $3380)
$3767 = ($3381, $3382, $3383)
$3768 = ($169,)
$3769 = ($3378, $3766, $3767, $3768)
$3770 = Core:iterator:341
$3771 = call $490 with $3765 $3769 ($3770 is responsible)
$3772 = Core:list:isEmpty:4
$3773 = Core:list:isEmpty:8
# Core:list:isEmpty
$3774 = { $3775 (+ responsible $3776) ->
  $3777 = call $147 with $3775 ($49 is responsible)
  $3778 = call $130 with $3777 $1051 ($1 is responsible)
  $3779 = call $222 with $3778 $1107 $3776 ($3772 is responsible)
  $3780 = call $147 with $3775 ($47 is responsible)
  $3781 = call $130 with $3780 $1051 ($48 is responsible)
  $3782 = call $222 with $3781 $1112 $3773 ($813 is responsible)
  $3783 = call $1045 with $3775 ($812 is responsible)
  $3784 = call $130 with $3783 $163 ($1 is responsible)
}
$3785 = "`list.is a` was not satisfied"
$3786 = Examples:average:average:11
$3787 = Examples:average:average:21
$3788 = Examples:average:average:30
$3789 = "`a | list.isEmpty | bool.not` was not satisfied"
$3790 = Examples:average:average:32
$3791 = Examples:average:average:42
$3792 = Examples:average:average:52
$3793 = "`a | iterator.fromList | iterator.all { a -> int.is a }` was not satisfied"
$3794 = Examples:average:average:54
$3795 = Examples:average:average:65
$3796 = Examples:average:average:74
$3797 = Examples:average:average:84
$3798 = Examples:average:average:85
# Examples:average:average
$3799 = { $3800 (+ responsible $3801) ->
  $3802 = call $147 with $3800 ($49 is responsible)
  $3803 = call $130 with $3802 $1051 ($1 is responsible)
  $3804 = call $222 with $3803 $3785 $3801 ($3786 is responsible)
  $3805 = call $3774 with $3800 ($3787 is responsible)
  $3806 = call $368 with $3805 ($3788 is responsible)
  $3807 = call $222 with $3806 $3789 $3801 ($3790 is responsible)
  $3808 = call $3281 with $3800 ($3791 is responsible)
  $3809 = call $2516 with $3808 $780 ($3792 is responsible)
  $3810 = call $222 with $3809 $3793 $3801 ($3794 is responsible)
  $3811 = call $3281 with $3800 ($3795 is responsible)
  $3812 = call $2496 with $3811 ($3796 is responsible)
  $3813 = call $147 with $3800 ($47 is responsible)
  $3814 = call $130 with $3813 $1051 ($48 is responsible)
  $3815 = call $222 with $3814 $1112 $3797 ($813 is responsible)
  $3816 = call $1045 with $3800 ($812 is responsible)
  $3817 = call $671 with $3812 $3816 ($3798 is responsible)
}
$3818 = Examples:average:main:5
# Examples:average:main
$3819 = { $3820 (+ responsible $3821) ->
  $3822 = call $3799 with $3378 ($3818 is responsible)
}
