# RCST for module Examples:average
Assignment:
  left: TrailingWhitespace:
    child: Struct:
      opening_bracket: OpeningBracket
      fields:
        TrailingWhitespace:
          child: StructField:
            key_and_colon: None
            value: Identifier "bool"
            comma: Comma
          whitespace:
            Whitespace " "
        TrailingWhitespace:
          child: StructField:
            key_and_colon: None
            value: Identifier "int"
            comma: Comma
          whitespace:
            Whitespace " "
        TrailingWhitespace:
          child: StructField:
            key_and_colon: None
            value: Identifier "iterator"
            comma: Comma
          whitespace:
            Whitespace " "
        TrailingWhitespace:
          child: StructField:
            key_and_colon: None
            value: Identifier "list"
            comma: Comma
          whitespace:
            Whitespace " "
        StructField:
          key_and_colon: None
          value: Identifier "result"
          comma: None
      closing_bracket: ClosingBracket
    whitespace:
      Whitespace " "
  assignment_sign: TrailingWhitespace:
    child: EqualsSign
    whitespace:
      Whitespace " "
  body:
    Call:
      receiver: TrailingWhitespace:
        child: Identifier "use"
        whitespace:
          Whitespace " "
      arguments:
        Text:
          opening: OpeningText:
            opening_single_quotes:
            opening_double_quote: DoubleQuote
          parts:
            TextPart "Core"
          closing: ClosingText:
            closing_double_quote: DoubleQuote
            closing_single_quotes:
Newline "\n"
Assignment:
  left: TrailingWhitespace:
    child: Struct:
      opening_bracket: OpeningBracket
      fields:
        StructField:
          key_and_colon: None
          value: Identifier "divideTruncating"
          comma: None
      closing_bracket: ClosingBracket
    whitespace:
      Whitespace " "
  assignment_sign: TrailingWhitespace:
    child: EqualsSign
    whitespace:
      Whitespace " "
  body:
    Identifier "int"
Newline "\n"
Newline "\n"
Assignment:
  left: TrailingWhitespace:
    child: Call:
      receiver: TrailingWhitespace:
        child: Identifier "average"
        whitespace:
          Whitespace " "
      arguments:
        Identifier "a"
    whitespace:
      Whitespace " "
  assignment_sign: TrailingWhitespace:
    child: EqualsSign
    whitespace:
      Newline "\n"
      Whitespace "  "
  body:
    Call:
      receiver: TrailingWhitespace:
        child: Identifier "needs"
        whitespace:
          Whitespace " "
      arguments:
        Parenthesized:
          opening_parenthesis: OpeningParenthesis
          inner: Call:
            receiver: TrailingWhitespace:
              child: StructAccess:
                struct: Identifier "list"
                dot: Dot
                key: Identifier "is"
              whitespace:
                Whitespace " "
            arguments:
              Identifier "a"
          closing_parenthesis: ClosingParenthesis
    Newline "\n"
    Whitespace "  "
    Call:
      receiver: TrailingWhitespace:
        child: Identifier "needs"
        whitespace:
          Whitespace " "
      arguments:
        Parenthesized:
          opening_parenthesis: OpeningParenthesis
          inner: BinaryBar:
            left: TrailingWhitespace:
              child: BinaryBar:
                left: TrailingWhitespace:
                  child: Identifier "a"
                  whitespace:
                    Whitespace " "
                bar: TrailingWhitespace:
                  child: Bar
                  whitespace:
                    Whitespace " "
                right: StructAccess:
                  struct: Identifier "list"
                  dot: Dot
                  key: Identifier "isEmpty"
              whitespace:
                Whitespace " "
            bar: TrailingWhitespace:
              child: Bar
              whitespace:
                Whitespace " "
            right: StructAccess:
              struct: Identifier "bool"
              dot: Dot
              key: Identifier "not"
          closing_parenthesis: ClosingParenthesis
    Newline "\n"
    Whitespace "  "
    Call:
      receiver: TrailingWhitespace:
        child: Identifier "needs"
        whitespace:
          Whitespace " "
      arguments:
        Parenthesized:
          opening_parenthesis: OpeningParenthesis
          inner: BinaryBar:
            left: TrailingWhitespace:
              child: BinaryBar:
                left: TrailingWhitespace:
                  child: Identifier "a"
                  whitespace:
                    Whitespace " "
                bar: TrailingWhitespace:
                  child: Bar
                  whitespace:
                    Whitespace " "
                right: StructAccess:
                  struct: Identifier "iterator"
                  dot: Dot
                  key: Identifier "fromList"
              whitespace:
                Whitespace " "
            bar: TrailingWhitespace:
              child: Bar
              whitespace:
                Whitespace " "
            right: Call:
              receiver: TrailingWhitespace:
                child: StructAccess:
                  struct: Identifier "iterator"
                  dot: Dot
                  key: Identifier "all"
                whitespace:
                  Whitespace " "
              arguments:
                Function:
                  opening_curly_brace: TrailingWhitespace:
                    child: OpeningCurlyBrace
                    whitespace:
                      Whitespace " "
                  parameters_and_arrow:
                    parameters:
                      TrailingWhitespace:
                        child: Identifier "a"
                        whitespace:
                          Whitespace " "
                    arrow: TrailingWhitespace:
                      child: Arrow
                      whitespace:
                        Whitespace " "
                  body:
                    TrailingWhitespace:
                      child: Call:
                        receiver: TrailingWhitespace:
                          child: StructAccess:
                            struct: Identifier "int"
                            dot: Dot
                            key: Identifier "is"
                          whitespace:
                            Whitespace " "
                        arguments:
                          Identifier "a"
                      whitespace:
                        Whitespace " "
                  closing_curly_brace: ClosingCurlyBrace
          closing_parenthesis: ClosingParenthesis
    Newline "\n"
    Whitespace "  "
    Call:
      receiver: TrailingWhitespace:
        child: Identifier "divideTruncating"
        whitespace:
          Whitespace " "
      arguments:
        TrailingWhitespace:
          child: Parenthesized:
            opening_parenthesis: OpeningParenthesis
            inner: BinaryBar:
              left: TrailingWhitespace:
                child: BinaryBar:
                  left: TrailingWhitespace:
                    child: Identifier "a"
                    whitespace:
                      Whitespace " "
                  bar: TrailingWhitespace:
                    child: Bar
                    whitespace:
                      Whitespace " "
                  right: StructAccess:
                    struct: Identifier "iterator"
                    dot: Dot
                    key: Identifier "fromList"
                whitespace:
                  Whitespace " "
              bar: TrailingWhitespace:
                child: Bar
                whitespace:
                  Whitespace " "
              right: StructAccess:
                struct: Identifier "iterator"
                dot: Dot
                key: Identifier "sum"
            closing_parenthesis: ClosingParenthesis
          whitespace:
            Whitespace " "
        Parenthesized:
          opening_parenthesis: OpeningParenthesis
          inner: BinaryBar:
            left: TrailingWhitespace:
              child: Identifier "a"
              whitespace:
                Whitespace " "
            bar: TrailingWhitespace:
              child: Bar
              whitespace:
                Whitespace " "
            right: StructAccess:
              struct: Identifier "list"
              dot: Dot
              key: Identifier "length"
          closing_parenthesis: ClosingParenthesis
Newline "\n"
Newline "\n"
Assignment:
  left: TrailingWhitespace:
    child: Call:
      receiver: TrailingWhitespace:
        child: Identifier "main"
        whitespace:
          Whitespace " "
      arguments:
        Identifier "environment"
    whitespace:
      Whitespace " "
  assignment_sign: TrailingWhitespace:
    child: ColonEqualsSign
    whitespace:
      Whitespace " "
  body:
    Call:
      receiver: TrailingWhitespace:
        child: Identifier "average"
        whitespace:
          Whitespace " "
      arguments:
        List:
          opening_parenthesis: OpeningParenthesis
          items:
            TrailingWhitespace:
              child: ListItem:
                value: Int:
                  radix_prefix: None
                  value: 1
                  string: "1"
                comma: Comma
              whitespace:
                Whitespace " "
            TrailingWhitespace:
              child: ListItem:
                value: Int:
                  radix_prefix: None
                  value: 2
                  string: "2"
                comma: Comma
              whitespace:
                Whitespace " "
            ListItem:
              value: Int:
                radix_prefix: None
                value: 3
                string: "3"
              comma: None
          closing_parenthesis: ClosingParenthesis
Newline "\n"
