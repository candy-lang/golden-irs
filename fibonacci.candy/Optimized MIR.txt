# Optimized MIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::functionRun:11
$3 = Builtins::functionRun:16
$4 = Builtins::functionRun:22
$5 = Builtins::functionRun:5
$6 = Builtins::getArgumentCount:11
$7 = Builtins::getArgumentCount:5
$8 = Builtins::ifElse:1
$9 = Builtins::ifElse:11
$10 = Builtins::ifElse:14
$11 = Builtins::ifElse:19
$12 = Builtins::ifElse:25
$13 = Builtins::ifElse:28
$14 = Builtins::ifElse:33
$15 = Builtins::ifElse:41
$16 = Builtins::ifElse:5
$17 = Builtins::intAdd:11
$18 = Builtins::intAdd:18
$19 = Builtins::intAdd:5
$20 = Builtins::intBitwiseAnd:18
$21 = Builtins::intBitwiseAnd:5
$22 = Builtins::intCompareTo:11
$23 = Builtins::intCompareTo:18
$24 = Builtins::intCompareTo:5
$25 = Builtins::intMultiply:18
$26 = Builtins::intMultiply:5
$27 = Builtins::intParse:11
$28 = Builtins::intParse:5
$29 = Builtins::intSubtract:18
$30 = Builtins::intSubtract:5
$31 = Builtins::isLessThanOrEqualTo:11
$32 = Builtins::isLessThanOrEqualTo:18
$33 = Builtins::isLessThanOrEqualTo:19
$34 = Builtins::isLessThanOrEqualTo:5
$35 = Builtins::isNonNegative:12
$36 = Builtins::isNonNegative:13
$37 = Builtins::isNonNegative:5
$38 = Builtins::listGet:11
$39 = Builtins::listGet:14
$40 = Builtins::listGet:16
$41 = Builtins::listGet:24
$42 = Builtins::listGet:25
$43 = Builtins::listGet:30
$44 = Builtins::listGet:37
$45 = Builtins::listGet:5
$46 = Builtins::listInsert:11
$47 = Builtins::listInsert:14
$48 = Builtins::listInsert:16
$49 = Builtins::listInsert:24
$50 = Builtins::listInsert:25
$51 = Builtins::listInsert:27
$52 = Builtins::listInsert:35
$53 = Builtins::listInsert:5
$54 = Builtins::listLength:11
$55 = Builtins::listLength:5
$56 = Builtins::structGet:12
$57 = Builtins::structGet:14
$58 = Builtins::structGet:21
$59 = Builtins::structGet:5
$60 = Builtins::tagGetValue:11
$61 = Builtins::tagGetValue:13
$62 = Builtins::tagGetValue:19
$63 = Builtins::tagGetValue:5
$64 = Builtins::textConcatenate:11
$65 = Builtins::textConcatenate:18
$66 = Builtins::textConcatenate:5
$67 = Builtins::toDebugText:5
$68 = Builtins::typeIs:19
$69 = Builtins::typeIs:25
$70 = Builtins::typeOf:5
$71 = Core:bool:and:13
$72 = Core:bool:and:2
$73 = Core:bool:and:4
$74 = Core:bool:and:7
$75 = Core:bool:and:9
$76 = Core:bool:is:1
$77 = Core:bool:lazyAnd:14
$78 = Core:bool:lazyAnd:16
$79 = Core:bool:lazyAnd:18
$80 = Core:bool:lazyAnd:18:13
$81 = Core:bool:lazyAnd:18:21
$82 = Core:bool:lazyAnd:18:9
$83 = Core:bool:lazyAnd:2
$84 = Core:bool:lazyAnd:4
$85 = Core:bool:lazyOr:14
$86 = Core:bool:lazyOr:16
$87 = Core:bool:lazyOr:18
$88 = Core:bool:lazyOr:18:10
$89 = Core:bool:lazyOr:18:14
$90 = Core:bool:lazyOr:18:22
$91 = Core:bool:lazyOr:2
$92 = Core:bool:lazyOr:4
$93 = Core:bool:not:2
$94 = Core:bool:not:4
$95 = Core:bool:not:6
$96 = Core:bool:or:13
$97 = Core:bool:or:2
$98 = Core:bool:or:4
$99 = Core:bool:or:7
$100 = Core:bool:or:9
$101 = Core:check:checkEquals:12
$102 = Core:check:checkEquals:13
$103 = Core:check:checkEquals:15:0
$104 = Core:check:checkEquals:16
$105 = Core:check:checkEquals:19
$106 = Core:check:checkEquals:20
$107 = Core:check:checkEquals:22:0
$108 = Core:check:checkEquals:23
$109 = Core:check:checkEquals:25
$110 = Core:check:checkEquals:26
$111 = Core:check:checkEquals:27
$112 = Core:check:checkEquals:28
$113 = Core:check:checkEquals:29
$114 = Core:controlFlow:if:11
$115 = Core:controlFlow:if:21
$116 = Core:controlFlow:if:23
$117 = Core:controlFlow:if:28
$118 = Core:controlFlow:if:9
$119 = Core:controlFlow:recursive:17
$120 = Core:controlFlow:recursive:18:0:3
$121 = Core:controlFlow:recursive:18:5
$122 = Core:controlFlow:recursive:23
$123 = Core:controlFlow:recursive:9
$124 = Core:fixedDecimal:fromInt:15
$125 = Core:fixedDecimal:fromIntScaled:11
$126 = Core:fixedDecimal:fromIntScaled:16
$127 = Core:fixedDecimal:isScale:18:9
$128 = Core:fixedDecimal:isScale:19
$129 = Core:function:is0:11:3
$130 = Core:function:is0:13
$131 = Core:function:is2:11:3
$132 = Core:function:is2:13
$133 = Core:function:run:14
$134 = Core:function:run:2
$135 = Core:function:run:4
$136 = Core:int:compareTo:20
$137 = Core:int:compareTo:4
$138 = Core:int:compareTo:9
$139 = Core:int:isGreaterThan:13
$140 = Core:int:isGreaterThan:4
$141 = Core:int:isGreaterThan:9
$142 = Core:int:isLessThan:13
$143 = Core:int:isLessThan:4
$144 = Core:int:isLessThan:9
$145 = Core:int:isNegative:4
$146 = Core:int:isNegative:8
$147 = Core:int:isNonNegative:16
$148 = Core:int:isNonNegative:4
$149 = Core:int:isNonNegative:7
$150 = anonymous:$generated::needs
$151 = builtinEquals
$152 = builtinGetArgumentCount
$153 = builtinIfElse
$154 = builtinIntAdd
$155 = builtinIntBitwiseAnd
$156 = builtinIntCompareTo
$157 = builtinIntMultiply
$158 = builtinIntParse
$159 = builtinIntSubtract
$160 = builtinListGet
$161 = builtinListInsert
$162 = builtinListLength
$163 = builtinStructGet
$164 = builtinStructHasKey
$165 = builtinTagGetValue
$166 = builtinTagHasValue
$167 = builtinTagWithoutValue
$168 = builtinTextConcatenate
$169 = builtinToDebugText
$170 = builtinTypeOf
$171 = Equal
$172 = False
$173 = Function
$174 = Greater
$175 = Int
$176 = Less
$177 = List
$178 = Match
$179 = MinorUnits
$180 = NoMatch
$181 = Nothing
$182 = Scale
$183 = Struct
$184 = Tag
$185 = Text
$186 = True
$187 = 0
$188 = 1
$189 = 2
$190 = 3
$191 = 4
$192 = 5
$193 = 10
$194 = " to be "
$195 = "."
$196 = "A check failed: Expected "
$197 = "Expected Equal, got "
$198 = "Expected False, got "
$199 = "Expected Greater, got "
$200 = "Expected Less, got "
$201 = "Expected True, got "
$202 = "Expected a Struct, got `"
$203 = "Expected a Tag, got `"
$204 = "Expected tag to have a value, but it doesn't have any."
$205 = "Expected tag to not have a value, but it has one: `"
$206 = "No case matched the given expression."
$207 = "The `body` should take the recursive function and the argument."
$208 = "The `condition` must be either `True` or `False`."
$209 = "The `reason` must be a text."
$210 = "`."
$211 = "`a | typeIs Int` was not satisfied"
$212 = "`a | typeIs Text` was not satisfied"
$213 = "`b | typeIs Int` was not satisfied"
$214 = "`b | typeIs Text` was not satisfied"
$215 = "`b` didn't return a bool."
$216 = "`bool.is condition` was not satisfied"
$217 = "`conditionIsBool` was not satisfied"
$218 = "`else | getArgumentCount | equals 0` was not satisfied"
$219 = "`else | typeIs Function` was not satisfied"
$220 = "`factorA | typeIs Int` was not satisfied"
$221 = "`function | typeIs Function` was not satisfied"
$222 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
$223 = "`function.is0 b` was not satisfied"
$224 = "`function.is0 then` was not satisfied"
$225 = "`index | intCompareTo (list | ✨.listLength) | equals Less` was not satisfied"
$226 = "`index | isLessThanOrEqualTo (list | ✨.listLength)` was not satisfied"
$227 = "`index | isNonNegative` was not satisfied"
$228 = "`index | typeIs Int` was not satisfied"
$229 = "`int | typeIs Int` was not satisfied"
$230 = "`int.is minorUnits` was not satisfied"
$231 = "`is a` was not satisfied"
$232 = "`is b` was not satisfied"
$233 = "`is valueA` was not satisfied"
$234 = "`is valueB` was not satisfied"
$235 = "`is value` was not satisfied"
$236 = "`is0 body` was not satisfied"
$237 = "`isScale scale` was not satisfied"
$238 = "`list | typeIs List` was not satisfied"
$239 = "`minuend | typeIs Int` was not satisfied"
$240 = "`struct | typeIs Struct` was not satisfied"
$241 = "`struct | ✨.structHasKey key` was not satisfied"
$242 = "`tag | typeIs Tag` was not satisfied"
$243 = "`tag | ✨.tagHasValue` was not satisfied"
$244 = "`text | typeIs Text` was not satisfied"
$245 = "`then | getArgumentCount | equals 0` was not satisfied"
$246 = "`then | typeIs Function` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
$247 = { (responsible $248) ->
  $249 = $186
}
# Core::19:isMatch:then, Core::30:isMatch:then, Core::41:isMatch:then, Core::102:isMatch:then, Core::153:isMatch:then, Core::164:isMatch:then, Core:bool:9:isMatch:then, Core:check:9:isMatch:then, Core:controlFlow:if:27, Core:controlFlow:29:isMatch:then, Core:controlFlow:50:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:fixedDecimal:30:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:function:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:29:isMatch:then, Core:int:40:isMatch:then, Core:iterator:foldLeft:23:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:30:6:1:isMatch:then, Core:iterator:take:31:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:19:isMatch:then, Core:iterator:30:isMatch:then, Core:iterator:91:isMatch:then, Core:iterator:102:isMatch:then, Core:iterator:128:isMatch:then, Core:iterator:137:isMatch:then, Core:list:generate:59:1:isMatch:then, Core:list:29:isMatch:then, Core:list:40:isMatch:then, Core:result:19:isMatch:then, Core:result:30:isMatch:then, Core:struct:19:isMatch:then, Core:tag:29:isMatch:then, Core:text:repeat:34:1:isMatch:then, Core:text:29:isMatch:then, Core:text:40:isMatch:then, Core:type:19:isMatch:then, Examples:fibonacci:then, Examples:fibonacci:19:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$250 = { (responsible $251) ->
  $252 = $181
}
# anonymous:$generated::needs
$253 = { $254 $255 $256 (+ responsible $257) ->
  $258 = call $151 with $254 $186 ($150 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $259 = { (responsible $260) ->
    $261 = call $151 with $254 $172 ($150 is responsible)
  }
  $262 = call $153 with $258 $247 $259 ($150 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $263 = { (responsible $264) ->
    $265 = panicking because $208 ($257 is at fault)
  }
  $266 = call $153 with $262 $250 $263 ($150 is responsible)
  $267 = call $170 with $255 ($257 is responsible)
  $268 = call $151 with $267 $185 ($257 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $269 = { (responsible $270) ->
    $271 = panicking because $209 ($257 is at fault)
  }
  $272 = call $153 with $268 $250 $269 ($150 is responsible)
  # anonymous:$generated::needs:condition:else
  $273 = { (responsible $274) ->
    $275 = panicking because $255 ($256 is at fault)
  }
  $276 = call $153 with $254 $250 $273 ($150 is responsible)
}
$277 = ($178,)
# Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:18:equals:then, Core:bool:lazyOr:18:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:23:5:equals:then, Core:iterator:generateWithState:14:1:3:equals:then, Core:iterator:map:19:3:equals:then, Core:iterator:reduceLeft:18:equals:then, Core:iterator:skip:30:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:19:2:3:equals:then, Core:iterator:where:19:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:16:26:10:equals:then, Core:list:first:6:equals:then, Core:list:single:6:equals:then
$278 = { (responsible $279) ->
  $280 = $277
}
# Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:lazyAnd:18:case-1:matched, Core:bool:not:6:case-0:matched, Core:function:is0:12, Core:function:is1:12, Core:function:is2:12, Core:function:is3:12, Core:function:is4:12, Core:function:is5:12, Core:list:isValidIndex:21, Core:list:isValidInsertIndex:21, anonymous:$generated::needs:isConditionTrue:else
$281 = { (responsible $282) ->
  $283 = $172
}
# Builtins::isNonNegative
$284 = { $285 (+ responsible $286) ->
  $287 = call $170 with $285 ($68 is responsible)
  $288 = call $151 with $287 $175 ($69 is responsible)
  $289 = call $253 with $288 $229 $286 ($37 is responsible)
  $290 = call $156 with $285 $187 ($35 is responsible)
  # Builtins::isNonNegative:13:equals:then
  $291 = { (responsible $292) ->
    $293 = call $167 with $290 ($36 is responsible)
    $294 = call $151 with $174 $293 ($36 is responsible)
    # Builtins::isNonNegative:13:equals:then
    $295 = { (responsible $296) ->
      $297 = call $166 with $290 ($36 is responsible)
      $298 = call $151 with $172 $297 ($36 is responsible)
      # Builtins::isNonNegative:13:equals:else
      $299 = { (responsible $300) ->
        $301 = call $169 with $297 ($36 is responsible)
        $302 = call $165 with $290 ($36 is responsible)
        $303 = call $169 with $302 ($36 is responsible)
        $304 = call $168 with $205 $303 ($36 is responsible)
        $305 = call $168 with $304 $210 ($36 is responsible)
        $306 = ($180, $305)
      }
      $307 = call $153 with $298 $278 $299 ($36 is responsible)
    }
    # Builtins::isNonNegative:13:equals:else
    $308 = { (responsible $309) ->
      $310 = call $169 with $293 ($36 is responsible)
      $311 = call $168 with $199 $310 ($36 is responsible)
      $312 = call $168 with $311 $195 ($36 is responsible)
      $313 = ($180, $312)
    }
    $314 = call $153 with $294 $295 $308 ($36 is responsible)
  }
  $315 = call $291 with no arguments ($36 is responsible)
  $316 = call $160 with $315 $187 ($36 is responsible)
  $317 = call $151 with $316 $178 ($36 is responsible)
  # Builtins::isNonNegative:13:isMatch:then
  $318 = { (responsible $319) ->
    $320 = $315
  }
  # Builtins::isNonNegative:13:isMatch:else
  $321 = { (responsible $322) ->
    # Builtins::isNonNegative:13:equals:then
    $323 = { (responsible $324) ->
      $325 = call $167 with $290 ($36 is responsible)
      $326 = call $151 with $171 $325 ($36 is responsible)
      # Builtins::isNonNegative:13:equals:then
      $327 = { (responsible $328) ->
        $329 = call $166 with $290 ($36 is responsible)
        $330 = call $151 with $172 $329 ($36 is responsible)
        # Builtins::isNonNegative:13:equals:else
        $331 = { (responsible $332) ->
          $333 = call $169 with $329 ($36 is responsible)
          $334 = call $165 with $290 ($36 is responsible)
          $335 = call $169 with $334 ($36 is responsible)
          $336 = call $168 with $205 $335 ($36 is responsible)
          $337 = call $168 with $336 $210 ($36 is responsible)
          $338 = ($180, $337)
        }
        $339 = call $153 with $330 $278 $331 ($36 is responsible)
      }
      # Builtins::isNonNegative:13:equals:else
      $340 = { (responsible $341) ->
        $342 = call $169 with $325 ($36 is responsible)
        $343 = call $168 with $197 $342 ($36 is responsible)
        $344 = call $168 with $343 $195 ($36 is responsible)
        $345 = ($180, $344)
      }
      $346 = call $153 with $326 $327 $340 ($36 is responsible)
    }
    $347 = call $323 with no arguments ($36 is responsible)
  }
  $348 = call $153 with $317 $318 $321 ($36 is responsible)
  $349 = call $160 with $348 $187 ($36 is responsible)
  $350 = call $151 with $349 $178 ($36 is responsible)
  # Builtins::isNonNegative:13:case-0:didNotMatch
  $351 = { (responsible $352) ->
    $353 = call $160 with $348 $188 ($36 is responsible)
    # Builtins::isNonNegative:13:equals:then
    $354 = { (responsible $355) ->
      $356 = call $167 with $290 ($36 is responsible)
      $357 = call $151 with $176 $356 ($36 is responsible)
      # Builtins::isNonNegative:13:equals:then
      $358 = { (responsible $359) ->
        $360 = call $166 with $290 ($36 is responsible)
        $361 = call $151 with $172 $360 ($36 is responsible)
        # Builtins::isNonNegative:13:equals:else
        $362 = { (responsible $363) ->
          $364 = call $169 with $360 ($36 is responsible)
          $365 = call $165 with $290 ($36 is responsible)
          $366 = call $169 with $365 ($36 is responsible)
          $367 = call $168 with $205 $366 ($36 is responsible)
          $368 = call $168 with $367 $210 ($36 is responsible)
          $369 = ($180, $368)
        }
        $370 = call $153 with $361 $278 $362 ($36 is responsible)
      }
      # Builtins::isNonNegative:13:equals:else
      $371 = { (responsible $372) ->
        $373 = call $169 with $356 ($36 is responsible)
        $374 = call $168 with $200 $373 ($36 is responsible)
        $375 = call $168 with $374 $195 ($36 is responsible)
        $376 = ($180, $375)
      }
      $377 = call $153 with $357 $358 $371 ($36 is responsible)
    }
    $378 = call $354 with no arguments ($36 is responsible)
    $379 = call $160 with $378 $187 ($36 is responsible)
    $380 = call $151 with $379 $178 ($36 is responsible)
    # Builtins::isNonNegative:13:case-1:didNotMatch
    $381 = { (responsible $382) ->
      $383 = call $160 with $378 $188 ($36 is responsible)
      $384 = panicking because $206 ($36 is at fault)
    }
    $385 = call $153 with $380 $281 $381 ($36 is responsible)
  }
  $386 = call $153 with $350 $247 $351 ($36 is responsible)
}
# Builtins::isLessThanOrEqualTo
$387 = { $388 $389 (+ responsible $390) ->
  $391 = call $170 with $388 ($68 is responsible)
  $392 = call $151 with $391 $175 ($69 is responsible)
  $393 = call $253 with $392 $211 $390 ($34 is responsible)
  $394 = call $170 with $389 ($68 is responsible)
  $395 = call $151 with $394 $175 ($69 is responsible)
  $396 = call $253 with $395 $213 $390 ($31 is responsible)
  $397 = call $156 with $388 $389 ($32 is responsible)
  # Builtins::isLessThanOrEqualTo:19:equals:then
  $398 = { (responsible $399) ->
    $400 = call $167 with $397 ($33 is responsible)
    $401 = call $151 with $176 $400 ($33 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:then
    $402 = { (responsible $403) ->
      $404 = call $166 with $397 ($33 is responsible)
      $405 = call $151 with $172 $404 ($33 is responsible)
      # Builtins::isLessThanOrEqualTo:19:equals:else
      $406 = { (responsible $407) ->
        $408 = call $169 with $404 ($33 is responsible)
        $409 = call $165 with $397 ($33 is responsible)
        $410 = call $169 with $409 ($33 is responsible)
        $411 = call $168 with $205 $410 ($33 is responsible)
        $412 = call $168 with $411 $210 ($33 is responsible)
        $413 = ($180, $412)
      }
      $414 = call $153 with $405 $278 $406 ($33 is responsible)
    }
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $415 = { (responsible $416) ->
      $417 = call $169 with $400 ($33 is responsible)
      $418 = call $168 with $200 $417 ($33 is responsible)
      $419 = call $168 with $418 $195 ($33 is responsible)
      $420 = ($180, $419)
    }
    $421 = call $153 with $401 $402 $415 ($33 is responsible)
  }
  $422 = call $398 with no arguments ($33 is responsible)
  $423 = call $160 with $422 $187 ($33 is responsible)
  $424 = call $151 with $423 $178 ($33 is responsible)
  # Builtins::isLessThanOrEqualTo:19:isMatch:then
  $425 = { (responsible $426) ->
    $427 = $422
  }
  # Builtins::isLessThanOrEqualTo:19:isMatch:else
  $428 = { (responsible $429) ->
    # Builtins::isLessThanOrEqualTo:19:equals:then
    $430 = { (responsible $431) ->
      $432 = call $167 with $397 ($33 is responsible)
      $433 = call $151 with $171 $432 ($33 is responsible)
      # Builtins::isLessThanOrEqualTo:19:equals:then
      $434 = { (responsible $435) ->
        $436 = call $166 with $397 ($33 is responsible)
        $437 = call $151 with $172 $436 ($33 is responsible)
        # Builtins::isLessThanOrEqualTo:19:equals:else
        $438 = { (responsible $439) ->
          $440 = call $169 with $436 ($33 is responsible)
          $441 = call $165 with $397 ($33 is responsible)
          $442 = call $169 with $441 ($33 is responsible)
          $443 = call $168 with $205 $442 ($33 is responsible)
          $444 = call $168 with $443 $210 ($33 is responsible)
          $445 = ($180, $444)
        }
        $446 = call $153 with $437 $278 $438 ($33 is responsible)
      }
      # Builtins::isLessThanOrEqualTo:19:equals:else
      $447 = { (responsible $448) ->
        $449 = call $169 with $432 ($33 is responsible)
        $450 = call $168 with $197 $449 ($33 is responsible)
        $451 = call $168 with $450 $195 ($33 is responsible)
        $452 = ($180, $451)
      }
      $453 = call $153 with $433 $434 $447 ($33 is responsible)
    }
    $454 = call $430 with no arguments ($33 is responsible)
  }
  $455 = call $153 with $424 $425 $428 ($33 is responsible)
  $456 = call $160 with $455 $187 ($33 is responsible)
  $457 = call $151 with $456 $178 ($33 is responsible)
  # Builtins::isLessThanOrEqualTo:19:case-0:didNotMatch
  $458 = { (responsible $459) ->
    $460 = call $160 with $455 $188 ($33 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:then
    $461 = { (responsible $462) ->
      $463 = call $167 with $397 ($33 is responsible)
      $464 = call $151 with $174 $463 ($33 is responsible)
      # Builtins::isLessThanOrEqualTo:19:equals:then
      $465 = { (responsible $466) ->
        $467 = call $166 with $397 ($33 is responsible)
        $468 = call $151 with $172 $467 ($33 is responsible)
        # Builtins::isLessThanOrEqualTo:19:equals:else
        $469 = { (responsible $470) ->
          $471 = call $169 with $467 ($33 is responsible)
          $472 = call $165 with $397 ($33 is responsible)
          $473 = call $169 with $472 ($33 is responsible)
          $474 = call $168 with $205 $473 ($33 is responsible)
          $475 = call $168 with $474 $210 ($33 is responsible)
          $476 = ($180, $475)
        }
        $477 = call $153 with $468 $278 $469 ($33 is responsible)
      }
      # Builtins::isLessThanOrEqualTo:19:equals:else
      $478 = { (responsible $479) ->
        $480 = call $169 with $463 ($33 is responsible)
        $481 = call $168 with $199 $480 ($33 is responsible)
        $482 = call $168 with $481 $195 ($33 is responsible)
        $483 = ($180, $482)
      }
      $484 = call $153 with $464 $465 $478 ($33 is responsible)
    }
    $485 = call $461 with no arguments ($33 is responsible)
    $486 = call $160 with $485 $187 ($33 is responsible)
    $487 = call $151 with $486 $178 ($33 is responsible)
    # Builtins::isLessThanOrEqualTo:19:case-1:didNotMatch
    $488 = { (responsible $489) ->
      $490 = call $160 with $485 $188 ($33 is responsible)
      $491 = panicking because $206 ($33 is at fault)
    }
    $492 = call $153 with $487 $281 $488 ($33 is responsible)
  }
  $493 = call $153 with $457 $247 $458 ($33 is responsible)
}
# Builtins::ifElse
$494 = { $495 $496 $497 (+ responsible $498) ->
  $499 = call $170 with $495 ($8 is responsible)
  $500 = call $151 with $184 $499 ($8 is responsible)
  # Builtins::ifElse:1:equals:then
  $501 = { (responsible $502) ->
    $503 = call $167 with $495 ($8 is responsible)
    $504 = call $151 with $186 $503 ($8 is responsible)
    # Builtins::ifElse:1:equals:then
    $505 = { (responsible $506) ->
      $507 = call $166 with $495 ($8 is responsible)
      $508 = call $151 with $172 $507 ($8 is responsible)
      # Builtins::ifElse:1:equals:else
      $509 = { (responsible $510) ->
        $511 = call $169 with $507 ($8 is responsible)
        $512 = call $165 with $495 ($8 is responsible)
        $513 = call $169 with $512 ($8 is responsible)
        $514 = call $168 with $205 $513 ($8 is responsible)
        $515 = call $168 with $514 $210 ($8 is responsible)
        $516 = ($180, $515)
      }
      $517 = call $153 with $508 $278 $509 ($8 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $518 = { (responsible $519) ->
      $520 = call $169 with $503 ($8 is responsible)
      $521 = call $168 with $201 $520 ($8 is responsible)
      $522 = call $168 with $521 $195 ($8 is responsible)
      $523 = ($180, $522)
    }
    $524 = call $153 with $504 $505 $518 ($8 is responsible)
  }
  # Builtins::ifElse:1:equals:else
  $525 = { (responsible $526) ->
    $527 = call $169 with $499 ($8 is responsible)
    $528 = call $168 with $203 $527 ($8 is responsible)
    $529 = call $168 with $528 $210 ($8 is responsible)
    $530 = ($180, $529)
  }
  $531 = call $153 with $500 $501 $525 ($8 is responsible)
  $532 = call $160 with $531 $187 ($8 is responsible)
  $533 = call $151 with $532 $178 ($8 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $534 = { (responsible $535) ->
    $536 = $531
  }
  # Builtins::ifElse:1:isMatch:else
  $537 = { (responsible $538) ->
    $539 = call $170 with $495 ($8 is responsible)
    $540 = call $151 with $184 $539 ($8 is responsible)
    # Builtins::ifElse:1:equals:then
    $541 = { (responsible $542) ->
      $543 = call $167 with $495 ($8 is responsible)
      $544 = call $151 with $172 $543 ($8 is responsible)
      # Builtins::ifElse:1:equals:then
      $545 = { (responsible $546) ->
        $547 = call $166 with $495 ($8 is responsible)
        $548 = call $151 with $172 $547 ($8 is responsible)
        # Builtins::ifElse:1:equals:else
        $549 = { (responsible $550) ->
          $551 = call $169 with $547 ($8 is responsible)
          $552 = call $165 with $495 ($8 is responsible)
          $553 = call $169 with $552 ($8 is responsible)
          $554 = call $168 with $205 $553 ($8 is responsible)
          $555 = call $168 with $554 $210 ($8 is responsible)
          $556 = ($180, $555)
        }
        $557 = call $153 with $548 $278 $549 ($8 is responsible)
      }
      # Builtins::ifElse:1:equals:else
      $558 = { (responsible $559) ->
        $560 = call $169 with $543 ($8 is responsible)
        $561 = call $168 with $198 $560 ($8 is responsible)
        $562 = call $168 with $561 $195 ($8 is responsible)
        $563 = ($180, $562)
      }
      $564 = call $153 with $544 $545 $558 ($8 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $565 = { (responsible $566) ->
      $567 = call $169 with $539 ($8 is responsible)
      $568 = call $168 with $203 $567 ($8 is responsible)
      $569 = call $168 with $568 $210 ($8 is responsible)
      $570 = ($180, $569)
    }
    $571 = call $153 with $540 $541 $565 ($8 is responsible)
  }
  $572 = call $153 with $533 $534 $537 ($8 is responsible)
  $573 = call $160 with $572 $187 ($8 is responsible)
  $574 = call $151 with $573 $178 ($8 is responsible)
  # Builtins::ifElse:1:case-0:didNotMatch
  $575 = { (responsible $576) ->
    $577 = call $160 with $572 $188 ($8 is responsible)
    $578 = $172
  }
  $579 = call $153 with $574 $247 $575 ($8 is responsible)
  $580 = call $253 with $579 $217 $498 ($16 is responsible)
  $581 = call $170 with $496 ($68 is responsible)
  $582 = call $151 with $581 $173 ($69 is responsible)
  $583 = call $253 with $582 $246 $498 ($9 is responsible)
  $584 = call $170 with $496 ($68 is responsible)
  $585 = call $151 with $584 $173 ($69 is responsible)
  $586 = call $253 with $585 $221 $10 ($7 is responsible)
  $587 = call $152 with $496 ($6 is responsible)
  $588 = call $151 with $587 $187 ($1 is responsible)
  $589 = call $253 with $588 $245 $498 ($11 is responsible)
  $590 = call $170 with $497 ($68 is responsible)
  $591 = call $151 with $590 $173 ($69 is responsible)
  $592 = call $253 with $591 $219 $498 ($12 is responsible)
  $593 = call $170 with $497 ($68 is responsible)
  $594 = call $151 with $593 $173 ($69 is responsible)
  $595 = call $253 with $594 $221 $13 ($7 is responsible)
  $596 = call $152 with $497 ($6 is responsible)
  $597 = call $151 with $596 $187 ($1 is responsible)
  $598 = call $253 with $597 $218 $498 ($14 is responsible)
  $599 = call $153 with $495 $496 $497 ($15 is responsible)
}
# Builtins::listGet
$600 = { $601 $602 (+ responsible $603) ->
  $604 = call $170 with $601 ($68 is responsible)
  $605 = call $151 with $604 $177 ($69 is responsible)
  $606 = call $253 with $605 $238 $603 ($45 is responsible)
  $607 = call $170 with $602 ($68 is responsible)
  $608 = call $151 with $607 $175 ($69 is responsible)
  $609 = call $253 with $608 $228 $603 ($38 is responsible)
  $610 = call $284 with $602 ($39 is responsible)
  $611 = call $253 with $610 $227 $603 ($40 is responsible)
  $612 = call $162 with $601 ($41 is responsible)
  $613 = call $170 with $602 ($68 is responsible)
  $614 = call $151 with $613 $175 ($69 is responsible)
  $615 = call $253 with $614 $211 $42 ($24 is responsible)
  $616 = call $156 with $602 $612 ($23 is responsible)
  $617 = call $151 with $616 $176 ($1 is responsible)
  $618 = call $253 with $617 $225 $603 ($43 is responsible)
  $619 = call $160 with $601 $602 ($44 is responsible)
}
# Builtins::listInsert
$620 = { $621 $622 $623 (+ responsible $624) ->
  $625 = call $170 with $621 ($68 is responsible)
  $626 = call $151 with $625 $177 ($69 is responsible)
  $627 = call $253 with $626 $238 $624 ($53 is responsible)
  $628 = call $170 with $622 ($68 is responsible)
  $629 = call $151 with $628 $175 ($69 is responsible)
  $630 = call $253 with $629 $228 $624 ($46 is responsible)
  $631 = call $284 with $622 ($47 is responsible)
  $632 = call $253 with $631 $227 $624 ($48 is responsible)
  $633 = call $162 with $621 ($49 is responsible)
  $634 = call $387 with $622 $633 ($50 is responsible)
  $635 = call $253 with $634 $226 $624 ($51 is responsible)
  $636 = call $161 with $621 $622 $623 ($52 is responsible)
}
# Builtins::toDebugText, Core:iterator:199, Core:toDebugText:toDebugText
$637 = { $638 (+ responsible $639) ->
  $640 = call $169 with $638 ($67 is responsible)
}
# Core:function:is0
$641 = { $642 (+ responsible $643) ->
  $644 = call $170 with $642 ($70 is responsible)
  $645 = call $151 with $644 $173 ($1 is responsible)
  # Core:function:is0:11
  $646 = { (responsible $647) ->
    $648 = call $170 with $642 ($68 is responsible)
    $649 = call $151 with $648 $173 ($69 is responsible)
    $650 = call $253 with $649 $221 $129 ($7 is responsible)
    $651 = call $152 with $642 ($6 is responsible)
    $652 = call $151 with $651 $187 ($1 is responsible)
  }
  $653 = call $494 with $645 $646 $281 ($130 is responsible)
}
# Core:function:run
$654 = { $655 (+ responsible $656) ->
  $657 = call $641 with $655 ($134 is responsible)
  $658 = call $253 with $657 $236 $656 ($135 is responsible)
  $659 = call $170 with $655 ($68 is responsible)
  $660 = call $151 with $659 $173 ($69 is responsible)
  $661 = call $253 with $660 $221 $133 ($5 is responsible)
  $662 = call $152 with $655 ($2 is responsible)
  $663 = call $151 with $662 $187 ($1 is responsible)
  $664 = call $253 with $663 $222 $133 ($3 is responsible)
  $665 = call $655 with no arguments ($4 is responsible)
}
# Core:bool:is
$666 = { $667 (+ responsible $668) ->
  $669 = call $170 with $667 ($76 is responsible)
  $670 = call $151 with $184 $669 ($76 is responsible)
  # Core:bool:is:1:equals:then
  $671 = { (responsible $672) ->
    $673 = call $167 with $667 ($76 is responsible)
    $674 = call $151 with $186 $673 ($76 is responsible)
    # Core:bool:is:1:equals:then
    $675 = { (responsible $676) ->
      $677 = call $166 with $667 ($76 is responsible)
      $678 = call $151 with $172 $677 ($76 is responsible)
      # Core:bool:is:1:equals:else
      $679 = { (responsible $680) ->
        $681 = call $169 with $677 ($76 is responsible)
        $682 = call $165 with $667 ($76 is responsible)
        $683 = call $169 with $682 ($76 is responsible)
        $684 = call $168 with $205 $683 ($76 is responsible)
        $685 = call $168 with $684 $210 ($76 is responsible)
        $686 = ($180, $685)
      }
      $687 = call $153 with $678 $278 $679 ($76 is responsible)
    }
    # Core:bool:is:1:equals:else
    $688 = { (responsible $689) ->
      $690 = call $169 with $673 ($76 is responsible)
      $691 = call $168 with $201 $690 ($76 is responsible)
      $692 = call $168 with $691 $195 ($76 is responsible)
      $693 = ($180, $692)
    }
    $694 = call $153 with $674 $675 $688 ($76 is responsible)
  }
  # Core:bool:is:1:equals:else
  $695 = { (responsible $696) ->
    $697 = call $169 with $669 ($76 is responsible)
    $698 = call $168 with $203 $697 ($76 is responsible)
    $699 = call $168 with $698 $210 ($76 is responsible)
    $700 = ($180, $699)
  }
  $701 = call $153 with $670 $671 $695 ($76 is responsible)
  $702 = call $160 with $701 $187 ($76 is responsible)
  $703 = call $151 with $702 $178 ($76 is responsible)
  # Core:bool:is:1:isMatch:then
  $704 = { (responsible $705) ->
    $706 = $701
  }
  # Core:bool:is:1:isMatch:else
  $707 = { (responsible $708) ->
    $709 = call $170 with $667 ($76 is responsible)
    $710 = call $151 with $184 $709 ($76 is responsible)
    # Core:bool:is:1:equals:then
    $711 = { (responsible $712) ->
      $713 = call $167 with $667 ($76 is responsible)
      $714 = call $151 with $172 $713 ($76 is responsible)
      # Core:bool:is:1:equals:then
      $715 = { (responsible $716) ->
        $717 = call $166 with $667 ($76 is responsible)
        $718 = call $151 with $172 $717 ($76 is responsible)
        # Core:bool:is:1:equals:else
        $719 = { (responsible $720) ->
          $721 = call $169 with $717 ($76 is responsible)
          $722 = call $165 with $667 ($76 is responsible)
          $723 = call $169 with $722 ($76 is responsible)
          $724 = call $168 with $205 $723 ($76 is responsible)
          $725 = call $168 with $724 $210 ($76 is responsible)
          $726 = ($180, $725)
        }
        $727 = call $153 with $718 $278 $719 ($76 is responsible)
      }
      # Core:bool:is:1:equals:else
      $728 = { (responsible $729) ->
        $730 = call $169 with $713 ($76 is responsible)
        $731 = call $168 with $198 $730 ($76 is responsible)
        $732 = call $168 with $731 $195 ($76 is responsible)
        $733 = ($180, $732)
      }
      $734 = call $153 with $714 $715 $728 ($76 is responsible)
    }
    # Core:bool:is:1:equals:else
    $735 = { (responsible $736) ->
      $737 = call $169 with $709 ($76 is responsible)
      $738 = call $168 with $203 $737 ($76 is responsible)
      $739 = call $168 with $738 $210 ($76 is responsible)
      $740 = ($180, $739)
    }
    $741 = call $153 with $710 $711 $735 ($76 is responsible)
  }
  $742 = call $153 with $703 $704 $707 ($76 is responsible)
  $743 = call $160 with $742 $187 ($76 is responsible)
  $744 = call $151 with $743 $178 ($76 is responsible)
  # Core:bool:is:1:case-0:didNotMatch
  $745 = { (responsible $746) ->
    $747 = call $160 with $742 $188 ($76 is responsible)
    $748 = $172
  }
  $749 = call $153 with $744 $247 $745 ($76 is responsible)
}
# Core:bool:not
$750 = { $751 (+ responsible $752) ->
  $753 = call $666 with $751 ($93 is responsible)
  $754 = call $253 with $753 $235 $752 ($94 is responsible)
  $755 = call $170 with $751 ($95 is responsible)
  $756 = call $151 with $184 $755 ($95 is responsible)
  # Core:bool:not:6:equals:then
  $757 = { (responsible $758) ->
    $759 = call $167 with $751 ($95 is responsible)
    $760 = call $151 with $186 $759 ($95 is responsible)
    # Core:bool:not:6:equals:then
    $761 = { (responsible $762) ->
      $763 = call $166 with $751 ($95 is responsible)
      $764 = call $151 with $172 $763 ($95 is responsible)
      # Core:bool:not:6:equals:else
      $765 = { (responsible $766) ->
        $767 = call $169 with $763 ($95 is responsible)
        $768 = call $165 with $751 ($95 is responsible)
        $769 = call $169 with $768 ($95 is responsible)
        $770 = call $168 with $205 $769 ($95 is responsible)
        $771 = call $168 with $770 $210 ($95 is responsible)
        $772 = ($180, $771)
      }
      $773 = call $153 with $764 $278 $765 ($95 is responsible)
    }
    # Core:bool:not:6:equals:else
    $774 = { (responsible $775) ->
      $776 = call $169 with $759 ($95 is responsible)
      $777 = call $168 with $201 $776 ($95 is responsible)
      $778 = call $168 with $777 $195 ($95 is responsible)
      $779 = ($180, $778)
    }
    $780 = call $153 with $760 $761 $774 ($95 is responsible)
  }
  # Core:bool:not:6:equals:else
  $781 = { (responsible $782) ->
    $783 = call $169 with $755 ($95 is responsible)
    $784 = call $168 with $203 $783 ($95 is responsible)
    $785 = call $168 with $784 $210 ($95 is responsible)
    $786 = ($180, $785)
  }
  $787 = call $153 with $756 $757 $781 ($95 is responsible)
  $788 = call $160 with $787 $187 ($95 is responsible)
  $789 = call $151 with $788 $178 ($95 is responsible)
  # Core:bool:not:6:case-0:didNotMatch
  $790 = { (responsible $791) ->
    $792 = call $160 with $787 $188 ($95 is responsible)
    $793 = call $170 with $751 ($95 is responsible)
    $794 = call $151 with $184 $793 ($95 is responsible)
    # Core:bool:not:6:equals:then
    $795 = { (responsible $796) ->
      $797 = call $167 with $751 ($95 is responsible)
      $798 = call $151 with $172 $797 ($95 is responsible)
      # Core:bool:not:6:equals:then
      $799 = { (responsible $800) ->
        $801 = call $166 with $751 ($95 is responsible)
        $802 = call $151 with $172 $801 ($95 is responsible)
        # Core:bool:not:6:equals:else
        $803 = { (responsible $804) ->
          $805 = call $169 with $801 ($95 is responsible)
          $806 = call $165 with $751 ($95 is responsible)
          $807 = call $169 with $806 ($95 is responsible)
          $808 = call $168 with $205 $807 ($95 is responsible)
          $809 = call $168 with $808 $210 ($95 is responsible)
          $810 = ($180, $809)
        }
        $811 = call $153 with $802 $278 $803 ($95 is responsible)
      }
      # Core:bool:not:6:equals:else
      $812 = { (responsible $813) ->
        $814 = call $169 with $797 ($95 is responsible)
        $815 = call $168 with $198 $814 ($95 is responsible)
        $816 = call $168 with $815 $195 ($95 is responsible)
        $817 = ($180, $816)
      }
      $818 = call $153 with $798 $799 $812 ($95 is responsible)
    }
    # Core:bool:not:6:equals:else
    $819 = { (responsible $820) ->
      $821 = call $169 with $793 ($95 is responsible)
      $822 = call $168 with $203 $821 ($95 is responsible)
      $823 = call $168 with $822 $210 ($95 is responsible)
      $824 = ($180, $823)
    }
    $825 = call $153 with $794 $795 $819 ($95 is responsible)
    $826 = call $160 with $825 $187 ($95 is responsible)
    $827 = call $151 with $826 $178 ($95 is responsible)
    # Core:bool:not:6:case-1:didNotMatch
    $828 = { (responsible $829) ->
      $830 = call $160 with $825 $188 ($95 is responsible)
      $831 = panicking because $206 ($95 is at fault)
    }
    $832 = call $153 with $827 $247 $828 ($95 is responsible)
  }
  $833 = call $153 with $789 $281 $790 ($95 is responsible)
}
# Core:bool:lazyAnd
$834 = { $835 $836 (+ responsible $837) ->
  $838 = call $666 with $835 ($83 is responsible)
  $839 = call $253 with $838 $231 $837 ($84 is responsible)
  $840 = call $641 with $836 ($77 is responsible)
  $841 = call $253 with $840 $223 $837 ($78 is responsible)
  $842 = call $170 with $835 ($79 is responsible)
  $843 = call $151 with $184 $842 ($79 is responsible)
  # Core:bool:lazyAnd:18:equals:then
  $844 = { (responsible $845) ->
    $846 = call $167 with $835 ($79 is responsible)
    $847 = call $151 with $186 $846 ($79 is responsible)
    # Core:bool:lazyAnd:18:equals:then
    $848 = { (responsible $849) ->
      $850 = call $166 with $835 ($79 is responsible)
      $851 = call $151 with $172 $850 ($79 is responsible)
      # Core:bool:lazyAnd:18:equals:else
      $852 = { (responsible $853) ->
        $854 = call $169 with $850 ($79 is responsible)
        $855 = call $165 with $835 ($79 is responsible)
        $856 = call $169 with $855 ($79 is responsible)
        $857 = call $168 with $205 $856 ($79 is responsible)
        $858 = call $168 with $857 $210 ($79 is responsible)
        $859 = ($180, $858)
      }
      $860 = call $153 with $851 $278 $852 ($79 is responsible)
    }
    # Core:bool:lazyAnd:18:equals:else
    $861 = { (responsible $862) ->
      $863 = call $169 with $846 ($79 is responsible)
      $864 = call $168 with $201 $863 ($79 is responsible)
      $865 = call $168 with $864 $195 ($79 is responsible)
      $866 = ($180, $865)
    }
    $867 = call $153 with $847 $848 $861 ($79 is responsible)
  }
  # Core:bool:lazyAnd:18:equals:else
  $868 = { (responsible $869) ->
    $870 = call $169 with $842 ($79 is responsible)
    $871 = call $168 with $203 $870 ($79 is responsible)
    $872 = call $168 with $871 $210 ($79 is responsible)
    $873 = ($180, $872)
  }
  $874 = call $153 with $843 $844 $868 ($79 is responsible)
  $875 = call $160 with $874 $187 ($79 is responsible)
  $876 = call $151 with $875 $178 ($79 is responsible)
  # Core:bool:lazyAnd:18:case-0:matched
  $877 = { (responsible $878) ->
    $879 = call $654 with $836 ($82 is responsible)
    $880 = $879
    $881 = call $666 with $879 ($80 is responsible)
    $882 = call $253 with $881 $215 $837 ($81 is responsible)
    $883 = $880
  }
  # Core:bool:lazyAnd:18:case-0:didNotMatch
  $884 = { (responsible $885) ->
    $886 = call $160 with $874 $188 ($79 is responsible)
    $887 = call $170 with $835 ($79 is responsible)
    $888 = call $151 with $184 $887 ($79 is responsible)
    # Core:bool:lazyAnd:18:equals:then
    $889 = { (responsible $890) ->
      $891 = call $167 with $835 ($79 is responsible)
      $892 = call $151 with $172 $891 ($79 is responsible)
      # Core:bool:lazyAnd:18:equals:then
      $893 = { (responsible $894) ->
        $895 = call $166 with $835 ($79 is responsible)
        $896 = call $151 with $172 $895 ($79 is responsible)
        # Core:bool:lazyAnd:18:equals:else
        $897 = { (responsible $898) ->
          $899 = call $169 with $895 ($79 is responsible)
          $900 = call $165 with $835 ($79 is responsible)
          $901 = call $169 with $900 ($79 is responsible)
          $902 = call $168 with $205 $901 ($79 is responsible)
          $903 = call $168 with $902 $210 ($79 is responsible)
          $904 = ($180, $903)
        }
        $905 = call $153 with $896 $278 $897 ($79 is responsible)
      }
      # Core:bool:lazyAnd:18:equals:else
      $906 = { (responsible $907) ->
        $908 = call $169 with $891 ($79 is responsible)
        $909 = call $168 with $198 $908 ($79 is responsible)
        $910 = call $168 with $909 $195 ($79 is responsible)
        $911 = ($180, $910)
      }
      $912 = call $153 with $892 $893 $906 ($79 is responsible)
    }
    # Core:bool:lazyAnd:18:equals:else
    $913 = { (responsible $914) ->
      $915 = call $169 with $887 ($79 is responsible)
      $916 = call $168 with $203 $915 ($79 is responsible)
      $917 = call $168 with $916 $210 ($79 is responsible)
      $918 = ($180, $917)
    }
    $919 = call $153 with $888 $889 $913 ($79 is responsible)
    $920 = call $160 with $919 $187 ($79 is responsible)
    $921 = call $151 with $920 $178 ($79 is responsible)
    # Core:bool:lazyAnd:18:case-1:didNotMatch
    $922 = { (responsible $923) ->
      $924 = call $160 with $919 $188 ($79 is responsible)
      $925 = panicking because $206 ($79 is at fault)
    }
    $926 = call $153 with $921 $281 $922 ($79 is responsible)
  }
  $927 = call $153 with $876 $877 $884 ($79 is responsible)
}
# Core:bool:lazyOr
$928 = { $929 $930 (+ responsible $931) ->
  $932 = call $666 with $929 ($91 is responsible)
  $933 = call $253 with $932 $231 $931 ($92 is responsible)
  $934 = call $641 with $930 ($85 is responsible)
  $935 = call $253 with $934 $223 $931 ($86 is responsible)
  $936 = call $170 with $929 ($87 is responsible)
  $937 = call $151 with $184 $936 ($87 is responsible)
  # Core:bool:lazyOr:18:equals:then
  $938 = { (responsible $939) ->
    $940 = call $167 with $929 ($87 is responsible)
    $941 = call $151 with $186 $940 ($87 is responsible)
    # Core:bool:lazyOr:18:equals:then
    $942 = { (responsible $943) ->
      $944 = call $166 with $929 ($87 is responsible)
      $945 = call $151 with $172 $944 ($87 is responsible)
      # Core:bool:lazyOr:18:equals:else
      $946 = { (responsible $947) ->
        $948 = call $169 with $944 ($87 is responsible)
        $949 = call $165 with $929 ($87 is responsible)
        $950 = call $169 with $949 ($87 is responsible)
        $951 = call $168 with $205 $950 ($87 is responsible)
        $952 = call $168 with $951 $210 ($87 is responsible)
        $953 = ($180, $952)
      }
      $954 = call $153 with $945 $278 $946 ($87 is responsible)
    }
    # Core:bool:lazyOr:18:equals:else
    $955 = { (responsible $956) ->
      $957 = call $169 with $940 ($87 is responsible)
      $958 = call $168 with $201 $957 ($87 is responsible)
      $959 = call $168 with $958 $195 ($87 is responsible)
      $960 = ($180, $959)
    }
    $961 = call $153 with $941 $942 $955 ($87 is responsible)
  }
  # Core:bool:lazyOr:18:equals:else
  $962 = { (responsible $963) ->
    $964 = call $169 with $936 ($87 is responsible)
    $965 = call $168 with $203 $964 ($87 is responsible)
    $966 = call $168 with $965 $210 ($87 is responsible)
    $967 = ($180, $966)
  }
  $968 = call $153 with $937 $938 $962 ($87 is responsible)
  $969 = call $160 with $968 $187 ($87 is responsible)
  $970 = call $151 with $969 $178 ($87 is responsible)
  # Core:bool:lazyOr:18:case-0:didNotMatch
  $971 = { (responsible $972) ->
    $973 = call $160 with $968 $188 ($87 is responsible)
    $974 = call $170 with $929 ($87 is responsible)
    $975 = call $151 with $184 $974 ($87 is responsible)
    # Core:bool:lazyOr:18:equals:then
    $976 = { (responsible $977) ->
      $978 = call $167 with $929 ($87 is responsible)
      $979 = call $151 with $172 $978 ($87 is responsible)
      # Core:bool:lazyOr:18:equals:then
      $980 = { (responsible $981) ->
        $982 = call $166 with $929 ($87 is responsible)
        $983 = call $151 with $172 $982 ($87 is responsible)
        # Core:bool:lazyOr:18:equals:else
        $984 = { (responsible $985) ->
          $986 = call $169 with $982 ($87 is responsible)
          $987 = call $165 with $929 ($87 is responsible)
          $988 = call $169 with $987 ($87 is responsible)
          $989 = call $168 with $205 $988 ($87 is responsible)
          $990 = call $168 with $989 $210 ($87 is responsible)
          $991 = ($180, $990)
        }
        $992 = call $153 with $983 $278 $984 ($87 is responsible)
      }
      # Core:bool:lazyOr:18:equals:else
      $993 = { (responsible $994) ->
        $995 = call $169 with $978 ($87 is responsible)
        $996 = call $168 with $198 $995 ($87 is responsible)
        $997 = call $168 with $996 $195 ($87 is responsible)
        $998 = ($180, $997)
      }
      $999 = call $153 with $979 $980 $993 ($87 is responsible)
    }
    # Core:bool:lazyOr:18:equals:else
    $1000 = { (responsible $1001) ->
      $1002 = call $169 with $974 ($87 is responsible)
      $1003 = call $168 with $203 $1002 ($87 is responsible)
      $1004 = call $168 with $1003 $210 ($87 is responsible)
      $1005 = ($180, $1004)
    }
    $1006 = call $153 with $975 $976 $1000 ($87 is responsible)
    $1007 = call $160 with $1006 $187 ($87 is responsible)
    $1008 = call $151 with $1007 $178 ($87 is responsible)
    # Core:bool:lazyOr:18:case-1:matched
    $1009 = { (responsible $1010) ->
      $1011 = call $654 with $930 ($88 is responsible)
      $1012 = $1011
      $1013 = call $666 with $1011 ($89 is responsible)
      $1014 = call $253 with $1013 $215 $931 ($90 is responsible)
      $1015 = $1012
    }
    # Core:bool:lazyOr:18:case-1:didNotMatch
    $1016 = { (responsible $1017) ->
      $1018 = call $160 with $1006 $188 ($87 is responsible)
      $1019 = panicking because $206 ($87 is at fault)
    }
    $1020 = call $153 with $1008 $1009 $1016 ($87 is responsible)
  }
  $1021 = call $153 with $970 $247 $971 ($87 is responsible)
}
# Core:check:checkEquals
$1022 = { $1023 $1024 (+ responsible $1025) ->
  $1026 = call $151 with $1023 $1024 ($1 is responsible)
  $1027 = call $170 with $1023 ($101 is responsible)
  $1028 = call $151 with $1027 $185 ($102 is responsible)
  # Core:check:checkEquals:14
  $1029 = { (responsible $1030) ->
    $1031 = $1023
  }
  # Core:check:checkEquals:15
  $1032 = { (responsible $1033) ->
    $1034 = call $169 with $1023 ($103 is responsible)
  }
  $1035 = call $153 with $1028 $1029 $1032 ($104 is responsible)
  $1036 = call $170 with $1024 ($105 is responsible)
  $1037 = call $151 with $1036 $185 ($106 is responsible)
  # Core:check:checkEquals:21
  $1038 = { (responsible $1039) ->
    $1040 = $1024
  }
  # Core:check:checkEquals:22
  $1041 = { (responsible $1042) ->
    $1043 = call $169 with $1024 ($107 is responsible)
  }
  $1044 = call $153 with $1037 $1038 $1041 ($108 is responsible)
  $1045 = call $168 with $196 $1035 ($109 is responsible)
  $1046 = call $168 with $1045 $194 ($110 is responsible)
  $1047 = call $168 with $1046 $1044 ($111 is responsible)
  $1048 = call $168 with $1047 $195 ($112 is responsible)
  $1049 = call $253 with $1026 $1048 $1025 ($113 is responsible)
}
# Core:function:is2
$1050 = { $1051 (+ responsible $1052) ->
  $1053 = call $170 with $1051 ($70 is responsible)
  $1054 = call $151 with $1053 $173 ($1 is responsible)
  # Core:function:is2:11
  $1055 = { (responsible $1056) ->
    $1057 = call $170 with $1051 ($68 is responsible)
    $1058 = call $151 with $1057 $173 ($69 is responsible)
    $1059 = call $253 with $1058 $221 $131 ($7 is responsible)
    $1060 = call $152 with $1051 ($6 is responsible)
    $1061 = call $151 with $1060 $189 ($1 is responsible)
  }
  $1062 = call $494 with $1054 $1055 $281 ($132 is responsible)
}
# Core:int:compareTo
$1063 = { $1064 $1065 (+ responsible $1066) ->
  $1067 = call $170 with $1064 ($70 is responsible)
  $1068 = call $151 with $1067 $175 ($1 is responsible)
  $1069 = call $253 with $1068 $233 $1066 ($137 is responsible)
  $1070 = call $170 with $1065 ($70 is responsible)
  $1071 = call $151 with $1070 $175 ($1 is responsible)
  $1072 = call $253 with $1071 $234 $1066 ($138 is responsible)
  $1073 = call $170 with $1064 ($68 is responsible)
  $1074 = call $151 with $1073 $175 ($69 is responsible)
  $1075 = call $253 with $1074 $211 $136 ($24 is responsible)
  $1076 = call $170 with $1065 ($68 is responsible)
  $1077 = call $151 with $1076 $175 ($69 is responsible)
  $1078 = call $253 with $1077 $213 $136 ($22 is responsible)
  $1079 = call $156 with $1064 $1065 ($23 is responsible)
}
# Core:int:isLessThan
$1080 = { $1081 $1082 (+ responsible $1083) ->
  $1084 = call $170 with $1081 ($70 is responsible)
  $1085 = call $151 with $1084 $175 ($1 is responsible)
  $1086 = call $253 with $1085 $233 $1083 ($143 is responsible)
  $1087 = call $170 with $1082 ($70 is responsible)
  $1088 = call $151 with $1087 $175 ($1 is responsible)
  $1089 = call $253 with $1088 $234 $1083 ($144 is responsible)
  $1090 = call $1063 with $1081 $1082 ($142 is responsible)
  $1091 = call $151 with $1090 $176 ($1 is responsible)
}
# Core:int:isGreaterThan
$1092 = { $1093 $1094 (+ responsible $1095) ->
  $1096 = call $170 with $1093 ($70 is responsible)
  $1097 = call $151 with $1096 $175 ($1 is responsible)
  $1098 = call $253 with $1097 $233 $1095 ($140 is responsible)
  $1099 = call $170 with $1094 ($70 is responsible)
  $1100 = call $151 with $1099 $175 ($1 is responsible)
  $1101 = call $253 with $1100 $234 $1095 ($141 is responsible)
  $1102 = call $1063 with $1093 $1094 ($139 is responsible)
  $1103 = call $151 with $1102 $174 ($1 is responsible)
}
# Core:int:isNonNegative
$1104 = { $1105 (+ responsible $1106) ->
  $1107 = call $170 with $1105 ($70 is responsible)
  $1108 = call $151 with $1107 $175 ($1 is responsible)
  $1109 = call $253 with $1108 $235 $1106 ($148 is responsible)
  $1110 = call $170 with $1105 ($70 is responsible)
  $1111 = call $151 with $1110 $175 ($1 is responsible)
  $1112 = call $253 with $1111 $235 $149 ($145 is responsible)
  $1113 = call $1080 with $1105 $187 ($146 is responsible)
  $1114 = call $750 with $1113 ($147 is responsible)
}
$1115 = ($180, $204)
# Core:fixedDecimal:fromIntScaled
$1116 = { $1117 $1118 (+ responsible $1119) ->
  $1120 = call $170 with $1117 ($70 is responsible)
  $1121 = call $151 with $1120 $175 ($1 is responsible)
  $1122 = call $253 with $1121 $230 $1119 ($125 is responsible)
  $1123 = call $170 with $1118 ($70 is responsible)
  $1124 = call $151 with $1123 $175 ($1 is responsible)
  # Core:fixedDecimal:isScale:18
  $1125 = { (responsible $1126) ->
    $1127 = call $1104 with $1118 ($127 is responsible)
  }
  $1128 = call $834 with $1124 $1125 ($128 is responsible)
  $1129 = call $253 with $1128 $237 $1119 ($126 is responsible)
  $1130 = [$182: $1118, $179: $1117]
  $1131 = FixedDecimal $1130
}
$1132 = call $1116 with $187 $187 ($124 is responsible)
$1133 = Core:function:is1:11:3
$1134 = Core:function:is1:13
# Core:function:is1
$1135 = { $1136 (+ responsible $1137) ->
  $1138 = call $170 with $1136 ($70 is responsible)
  $1139 = call $151 with $1138 $173 ($1 is responsible)
  # Core:function:is1:11
  $1140 = { (responsible $1141) ->
    $1142 = call $170 with $1136 ($68 is responsible)
    $1143 = call $151 with $1142 $173 ($69 is responsible)
    $1144 = call $253 with $1143 $221 $1133 ($7 is responsible)
    $1145 = call $152 with $1136 ($6 is responsible)
    $1146 = call $151 with $1145 $188 ($1 is responsible)
  }
  $1147 = call $494 with $1139 $1140 $281 ($1134 is responsible)
}
$1148 = Core:int:fitsInRustU32:15
$1149 = Core:int:fitsInRustU32:4
$1150 = Core:int:fitsInRustU32:7
$1151 = Core:int:fitsInRustU32:9
$1152 = Core:int:isOdd:4
$1153 = Core:int:isOdd:8
$1154 = Core:int:isPositive:4
$1155 = Core:int:isPositive:8
$1156 = 4294967295
$1157 = "`isNonNegative value` was not satisfied"
# Core:int:isOdd
$1158 = { $1159 (+ responsible $1160) ->
  $1161 = call $170 with $1159 ($70 is responsible)
  $1162 = call $151 with $1161 $175 ($1 is responsible)
  $1163 = call $253 with $1162 $235 $1160 ($1152 is responsible)
  $1164 = call $170 with $1159 ($68 is responsible)
  $1165 = call $151 with $1164 $175 ($69 is responsible)
  $1166 = call $253 with $1165 $211 $1153 ($21 is responsible)
  $1167 = call $155 with $1159 $188 ($20 is responsible)
  $1168 = call $151 with $1167 $188 ($1 is responsible)
}
$1169 = Core:iterator:109
$1170 = Core:iterator:all:11
$1171 = Core:iterator:all:15
$1172 = Core:iterator:all:18:13
$1173 = Core:iterator:all:18:15
$1174 = Core:iterator:all:18:2
$1175 = Core:iterator:all:18:26
$1176 = Core:iterator:all:19
$1177 = Core:iterator:all:9
$1178 = Core:iterator:any:11
$1179 = Core:iterator:any:15
$1180 = Core:iterator:any:18:13
$1181 = Core:iterator:any:18:15
$1182 = Core:iterator:any:18:2
$1183 = Core:iterator:any:18:26
$1184 = Core:iterator:any:19
$1185 = Core:iterator:any:9
$1186 = Core:iterator:chunked:11
$1187 = Core:iterator:chunked:21
$1188 = Core:iterator:chunked:23
$1189 = Core:iterator:chunked:27
$1190 = Core:iterator:chunked:32
$1191 = Core:iterator:ensure:11
$1192 = Core:iterator:ensure:15
$1193 = Core:iterator:ensure:19:2
$1194 = Core:iterator:ensure:20
$1195 = Core:iterator:ensure:9
$1196 = Core:iterator:foldLeft:14
$1197 = Core:iterator:foldLeft:16
$1198 = Core:iterator:foldLeft:23:1
$1199 = Core:iterator:foldLeft:23:4
$1200 = Core:iterator:foldLeft:23:5
$1201 = Core:iterator:foldLeft:23:5:10
$1202 = Core:iterator:foldLeft:23:5:8
$1203 = Core:iterator:foldLeft:23:5:item
$1204 = Core:iterator:foldLeft:23:5:rest
$1205 = Core:iterator:foldLeft:23:iterator
$1206 = Core:iterator:foldLeft:23:value
$1207 = Core:iterator:foldLeft:24
$1208 = Core:iterator:foldLeft:3
$1209 = Core:iterator:fromList:11
$1210 = Core:iterator:fromList:22
$1211 = Core:iterator:fromList:23:10
$1212 = Core:iterator:fromList:24
$1213 = Core:iterator:generate:11
$1214 = Core:iterator:generate:21
$1215 = Core:iterator:generate:23
$1216 = Core:iterator:generate:33
$1217 = Core:iterator:generate:35
$1218 = Core:iterator:generate:45
$1219 = Core:iterator:generate:47
$1220 = Core:iterator:generate:50:6:16
$1221 = Core:iterator:generate:50:6:4
$1222 = Core:iterator:generate:50:7
$1223 = Core:iterator:generate:51
$1224 = Core:iterator:generateWithState:11
$1225 = Core:iterator:generateWithState:14:1:2
$1226 = Core:iterator:generateWithState:14:1:3
$1227 = Core:iterator:generateWithState:14:1:3:19
$1228 = Core:iterator:generateWithState:14:1:3:20
$1229 = Core:iterator:generateWithState:14:1:3:22:0
$1230 = Core:iterator:generateWithState:14:1:3:23
$1231 = Core:iterator:generateWithState:14:1:3:25
$1232 = Core:iterator:generateWithState:14:1:3:26
$1233 = Core:iterator:generateWithState:14:1:3:27
$1234 = Core:iterator:generateWithState:14:1:3:6
$1235 = Core:iterator:generateWithState:14:1:3:item
$1236 = Core:iterator:generateWithState:14:1:3:state
$1237 = Core:iterator:generateWithState:15
$1238 = Core:iterator:generateWithState:9
$1239 = Core:iterator:isEmpty:3
$1240 = Core:iterator:isEmpty:7
$1241 = Core:iterator:joinToText:12:11
$1242 = Core:iterator:joinToText:12:22
$1243 = Core:iterator:joinToText:13
$1244 = Core:iterator:joinToText:3
$1245 = Core:iterator:length:3
$1246 = Core:iterator:length:6
$1247 = Core:iterator:length:8
$1248 = Core:iterator:map:14
$1249 = Core:iterator:map:16
$1250 = Core:iterator:map:19:2
$1251 = Core:iterator:map:19:3
$1252 = Core:iterator:map:19:3:5
$1253 = Core:iterator:map:19:3:item
$1254 = Core:iterator:map:19:3:rest
$1255 = Core:iterator:map:20
$1256 = Core:iterator:map:3
$1257 = Core:iterator:next:17
$1258 = Core:iterator:next:3
$1259 = Core:iterator:next:6
$1260 = Core:iterator:next:nextFunction
$1261 = Core:iterator:reduceLeft:11
$1262 = Core:iterator:reduceLeft:15
$1263 = Core:iterator:reduceLeft:17
$1264 = Core:iterator:reduceLeft:18
$1265 = Core:iterator:reduceLeft:18:14
$1266 = Core:iterator:reduceLeft:18:item
$1267 = Core:iterator:reduceLeft:18:rest
$1268 = Core:iterator:reduceLeft:9
$1269 = Core:iterator:skip:16
$1270 = Core:iterator:skip:26
$1271 = Core:iterator:skip:28
$1272 = Core:iterator:skip:3
$1273 = Core:iterator:skip:30:6:1
$1274 = Core:iterator:skip:30:6:7:2
$1275 = Core:iterator:skip:30:6:8:2
$1276 = Core:iterator:skip:30:6:8:3
$1277 = Core:iterator:skip:30:6:8:3:15
$1278 = Core:iterator:skip:30:6:8:3:17
$1279 = Core:iterator:skip:30:6:8:3:rest
$1280 = Core:iterator:skip:30:6:9
$1281 = Core:iterator:skip:30:6:iterator
$1282 = Core:iterator:skip:30:6:n
$1283 = Core:iterator:skip:30:7
$1284 = Core:iterator:sum:19
$1285 = Core:iterator:sum:3
$1286 = Core:iterator:sum:5:17
$1287 = Core:iterator:sum:6
$1288 = Core:iterator:sum:8:10
$1289 = Core:iterator:sum:9
$1290 = Core:iterator:take:11
$1291 = Core:iterator:take:21
$1292 = Core:iterator:take:23
$1293 = Core:iterator:take:27
$1294 = Core:iterator:take:29
$1295 = Core:iterator:take:31:1
$1296 = Core:iterator:take:31:12
$1297 = Core:iterator:take:31:index
$1298 = Core:iterator:take:31:item
$1299 = Core:iterator:take:32
$1300 = Core:iterator:take:34:7
$1301 = Core:iterator:take:35
$1302 = Core:iterator:takeWhile:3
$1303 = Core:iterator:takeWhile:7:2
$1304 = Core:iterator:takeWhile:7:3
$1305 = Core:iterator:takeWhile:7:3:4
$1306 = Core:iterator:takeWhile:7:3:7
$1307 = Core:iterator:takeWhile:7:3:item
$1308 = Core:iterator:takeWhile:7:3:rest
$1309 = Core:iterator:takeWhile:8
$1310 = Core:iterator:toList:3
$1311 = Core:iterator:toList:6:10
$1312 = Core:iterator:toList:7
$1313 = Core:iterator:where:14
$1314 = Core:iterator:where:16
$1315 = Core:iterator:where:19:2:2
$1316 = Core:iterator:where:19:2:3
$1317 = Core:iterator:where:19:2:3:4
$1318 = Core:iterator:where:19:2:3:6:2
$1319 = Core:iterator:where:19:2:3:6:4
$1320 = Core:iterator:where:19:2:3:6:5
$1321 = Core:iterator:where:19:2:3:6:5:item
$1322 = Core:iterator:where:19:2:3:6:5:rest
$1323 = Core:iterator:where:19:2:3:7
$1324 = Core:iterator:where:19:2:3:item
$1325 = Core:iterator:where:19:2:3:rest
$1326 = Core:iterator:where:19:3
$1327 = Core:iterator:where:20
$1328 = Core:iterator:where:3
$1329 = Core:iterator:windowed:16
$1330 = Core:iterator:windowed:26
$1331 = Core:iterator:windowed:28
$1332 = Core:iterator:windowed:3
$1333 = Core:iterator:windowed:40
$1334 = Core:iterator:windowed:50
$1335 = Core:iterator:windowed:52
$1336 = Core:iterator:windowed:62
$1337 = Core:iterator:windowed:64
$1338 = Core:iterator:windowed:67:16
$1339 = Core:iterator:windowed:67:22
$1340 = Core:iterator:windowed:67:26:7
$1341 = Core:iterator:windowed:67:28
$1342 = Core:iterator:windowed:67:3
$1343 = Core:iterator:windowed:67:5
$1344 = Core:iterator:windowed:68
$1345 = Core:iterator:withIndex:11:1
$1346 = Core:iterator:withIndex:11:4
$1347 = Core:iterator:withIndex:11:5
$1348 = Core:iterator:withIndex:11:5:22
$1349 = Core:iterator:withIndex:11:5:item
$1350 = Core:iterator:withIndex:11:5:rest
$1351 = Core:iterator:withIndex:11:index
$1352 = Core:iterator:withIndex:11:iterator
$1353 = Core:iterator:withIndex:12
$1354 = Core:iterator:withIndex:3
$1355 = Core:iterator:wrapSafe:11
$1356 = Core:iterator:wrapSafe:12:9
$1357 = Core:iterator:wrapSafe:16:1
$1358 = Core:iterator:wrapSafe:16:13
$1359 = Core:iterator:wrapSafe:16:1:10
$1360 = Core:iterator:wrapSafe:16:1:function
$1361 = Core:iterator:wrapSafe:16:22
$1362 = Core:iterator:wrapSafe:16:24
$1363 = Core:iterator:wrapSafe:16:26:10
$1364 = Core:iterator:wrapSafe:16:26:10:19
$1365 = Core:iterator:wrapSafe:16:26:10:7
$1366 = Core:iterator:wrapSafe:16:26:10:item
$1367 = Core:iterator:wrapSafe:16:26:10:rest
$1368 = Core:iterator:wrapSafe:16:26:9
$1369 = Core:iterator:wrapSafe:17
$1370 = Core:iterator:wrapSafe:9
$1371 = Core:list:append:11
$1372 = Core:list:append:4
$1373 = Core:list:append:9
$1374 = Core:result:is:1
$1375 = Core:result:is:1:_
$1376 = Core:result:mapOrElse:14
$1377 = Core:result:mapOrElse:16
$1378 = Core:result:mapOrElse:2
$1379 = Core:result:mapOrElse:26
$1380 = Core:result:mapOrElse:28
$1381 = Core:result:mapOrElse:30
$1382 = Core:result:mapOrElse:30:2
$1383 = Core:result:mapOrElse:30:5
$1384 = Core:result:mapOrElse:30:value
$1385 = Core:result:mapOrElse:30:value#1
$1386 = Core:result:mapOrElse:4
$1387 = Core:result:unwrapOr:2
$1388 = Core:result:unwrapOr:4
$1389 = Core:result:unwrapOr:8
$1390 = Core:result:unwrapOrElse:14
$1391 = Core:result:unwrapOrElse:16
$1392 = Core:result:unwrapOrElse:2
$1393 = Core:result:unwrapOrElse:20:9
$1394 = Core:result:unwrapOrElse:21
$1395 = Core:result:unwrapOrElse:4
$1396 = Empty
$1397 = Error
$1398 = Index
$1399 = Item
$1400 = Iterator
$1401 = More
$1402 = N
$1403 = Ok
$1404 = Rest
$1405 = State
$1406 = Value
$1407 = ""
$1408 = "Can't `reduceLeft` an empty iterator"
$1409 = "Expected Empty, got "
$1410 = "Expected Error, got "
$1411 = "Expected Iterator, got "
$1412 = "Expected More, got "
$1413 = "Expected Ok, got "
$1414 = "Iterator items need to be ints."
$1415 = "Struct doesn't contain key `Index`: `"
$1416 = "Struct doesn't contain key `Item`: `"
$1417 = "Struct doesn't contain key `Iterator`: `"
$1418 = "Struct doesn't contain key `N`: `"
$1419 = "Struct doesn't contain key `Rest`: `"
$1420 = "Struct doesn't contain key `State`: `"
$1421 = "Struct doesn't contain key `Value`: `"
$1422 = "The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `"
$1423 = "The guard needs to panic."
$1424 = "`"
$1425 = "`all` needs an iterator."
$1426 = "`any` needs an iterator."
$1427 = "`bool.is allowPartialWindows` was not satisfied"
$1428 = "`bool.is itemResult` was not satisfied"
$1429 = "`chunked` needs an iterator."
$1430 = "`ensure` needs an iterator."
$1431 = "`foldLeft` needs an iterator."
$1432 = "`function.is0 defaultGetter` was not satisfied"
$1433 = "`function.is0 notIteratorGuard` was not satisfied"
$1434 = "`function.is1 errorMapper` was not satisfied"
$1435 = "`function.is1 guard` was not satisfied"
$1436 = "`function.is1 mapper` was not satisfied"
$1437 = "`function.is1 okMapper` was not satisfied"
$1438 = "`function.is1 tester` was not satisfied"
$1439 = "`function.is1 valueGetter` was not satisfied"
$1440 = "`function.is2 combine` was not satisfied"
$1441 = "`int.fitsInRustU32 length` was not satisfied"
$1442 = "`int.is length` was not satisfied"
$1443 = "`int.is n` was not satisfied"
$1444 = "`int.is size` was not satisfied"
$1445 = "`int.is step` was not satisfied"
$1446 = "`int.isNonNegative length` was not satisfied"
$1447 = "`int.isNonNegative n` was not satisfied"
$1448 = "`int.isPositive size` was not satisfied"
$1449 = "`int.isPositive step` was not satisfied"
$1450 = "`is list` was not satisfied"
$1451 = "`is result` was not satisfied"
$1452 = "`isEmpty` needs an iterator."
$1453 = "`joinToText` needs an iterator."
$1454 = "`length` needs an iterator."
$1455 = "`list.is l` was not satisfied"
$1456 = "`map` needs an iterator."
$1457 = "`next` needs an iterator."
$1458 = "`reduceLeft` needs an iterator."
$1459 = "`skip` needs an iterator."
$1460 = "`sum` needs an iterator."
$1461 = "`takeWhile` needs an iterator."
$1462 = "`take` needs an iterator."
$1463 = "`text.is item` was not satisfied"
$1464 = "`toList` needs an iterator."
$1465 = "`where` needs an iterator."
$1466 = "`windowed` needs an iterator."
$1467 = "`withIndex` needs an iterator."
# Core:result:is
$1468 = { $1469 (+ responsible $1470) ->
  $1471 = call $170 with $1469 ($1374 is responsible)
  $1472 = call $151 with $184 $1471 ($1374 is responsible)
  # Core:result:is:1:equals:then
  $1473 = { (responsible $1474) ->
    $1475 = call $167 with $1469 ($1374 is responsible)
    $1476 = call $151 with $1403 $1475 ($1374 is responsible)
    # Core:result:is:1:equals:then
    $1477 = { (responsible $1478) ->
      $1479 = call $166 with $1469 ($1374 is responsible)
      $1480 = call $151 with $186 $1479 ($1374 is responsible)
      # Core:result:is:1:equals:then
      $1481 = { (responsible $1482) ->
        $1483 = call $165 with $1469 ($1374 is responsible)
        $1484 = ($178, $1483)
      }
      # Core:result:is:1:equals:else
      $1485 = { (responsible $1486) ->
        $1487 = call $169 with $1479 ($1374 is responsible)
        $1488 = $1115
      }
      $1489 = call $153 with $1480 $1481 $1485 ($1374 is responsible)
    }
    # Core:result:is:1:equals:else
    $1490 = { (responsible $1491) ->
      $1492 = call $169 with $1475 ($1374 is responsible)
      $1493 = call $168 with $1413 $1492 ($1374 is responsible)
      $1494 = call $168 with $1493 $195 ($1374 is responsible)
      $1495 = ($180, $1494)
    }
    $1496 = call $153 with $1476 $1477 $1490 ($1374 is responsible)
  }
  # Core:result:is:1:equals:else
  $1497 = { (responsible $1498) ->
    $1499 = call $169 with $1471 ($1374 is responsible)
    $1500 = call $168 with $203 $1499 ($1374 is responsible)
    $1501 = call $168 with $1500 $210 ($1374 is responsible)
    $1502 = ($180, $1501)
  }
  $1503 = call $153 with $1472 $1473 $1497 ($1374 is responsible)
  $1504 = call $160 with $1503 $187 ($1374 is responsible)
  $1505 = call $151 with $1504 $178 ($1374 is responsible)
  # Core:result:is:1:isMatch:then
  $1506 = { (responsible $1507) ->
    $1508 = $1503
  }
  # Core:result:is:1:isMatch:else
  $1509 = { (responsible $1510) ->
    $1511 = call $170 with $1469 ($1374 is responsible)
    $1512 = call $151 with $184 $1511 ($1374 is responsible)
    # Core:result:is:1:equals:then
    $1513 = { (responsible $1514) ->
      $1515 = call $167 with $1469 ($1374 is responsible)
      $1516 = call $151 with $1397 $1515 ($1374 is responsible)
      # Core:result:is:1:equals:then
      $1517 = { (responsible $1518) ->
        $1519 = call $166 with $1469 ($1374 is responsible)
        $1520 = call $151 with $186 $1519 ($1374 is responsible)
        # Core:result:is:1:equals:then
        $1521 = { (responsible $1522) ->
          $1523 = call $165 with $1469 ($1374 is responsible)
          $1524 = ($178, $1523)
        }
        # Core:result:is:1:equals:else
        $1525 = { (responsible $1526) ->
          $1527 = call $169 with $1519 ($1374 is responsible)
          $1528 = $1115
        }
        $1529 = call $153 with $1520 $1521 $1525 ($1374 is responsible)
      }
      # Core:result:is:1:equals:else
      $1530 = { (responsible $1531) ->
        $1532 = call $169 with $1515 ($1374 is responsible)
        $1533 = call $168 with $1410 $1532 ($1374 is responsible)
        $1534 = call $168 with $1533 $195 ($1374 is responsible)
        $1535 = ($180, $1534)
      }
      $1536 = call $153 with $1516 $1517 $1530 ($1374 is responsible)
    }
    # Core:result:is:1:equals:else
    $1537 = { (responsible $1538) ->
      $1539 = call $169 with $1511 ($1374 is responsible)
      $1540 = call $168 with $203 $1539 ($1374 is responsible)
      $1541 = call $168 with $1540 $210 ($1374 is responsible)
      $1542 = ($180, $1541)
    }
    $1543 = call $153 with $1512 $1513 $1537 ($1374 is responsible)
  }
  $1544 = call $153 with $1505 $1506 $1509 ($1374 is responsible)
  $1545 = call $160 with $1544 $187 ($1374 is responsible)
  $1546 = call $151 with $1545 $178 ($1374 is responsible)
  # Core:result:is:1:case-0:matched
  $1547 = { (responsible $1548) ->
    $1549 = call $160 with $1544 $188 ($1375 is responsible)
    $1550 = $186
  }
  # Core:result:is:1:case-0:didNotMatch
  $1551 = { (responsible $1552) ->
    $1553 = call $160 with $1544 $188 ($1374 is responsible)
    $1554 = $172
  }
  $1555 = call $153 with $1546 $1547 $1551 ($1374 is responsible)
}
# Core:result:mapOrElse
$1556 = { $1557 $1558 $1559 (+ responsible $1560) ->
  $1561 = call $1468 with $1557 ($1378 is responsible)
  $1562 = call $253 with $1561 $1451 $1560 ($1386 is responsible)
  $1563 = call $1135 with $1558 ($1376 is responsible)
  $1564 = call $253 with $1563 $1437 $1560 ($1377 is responsible)
  $1565 = call $1135 with $1559 ($1379 is responsible)
  $1566 = call $253 with $1565 $1434 $1560 ($1380 is responsible)
  $1567 = call $170 with $1557 ($1381 is responsible)
  $1568 = call $151 with $184 $1567 ($1381 is responsible)
  # Core:result:mapOrElse:30:equals:then
  $1569 = { (responsible $1570) ->
    $1571 = call $167 with $1557 ($1381 is responsible)
    $1572 = call $151 with $1403 $1571 ($1381 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1573 = { (responsible $1574) ->
      $1575 = call $166 with $1557 ($1381 is responsible)
      $1576 = call $151 with $186 $1575 ($1381 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1577 = { (responsible $1578) ->
        $1579 = call $165 with $1557 ($1381 is responsible)
        $1580 = ($178, $1579)
      }
      # Core:result:mapOrElse:30:equals:else
      $1581 = { (responsible $1582) ->
        $1583 = call $169 with $1575 ($1381 is responsible)
        $1584 = $1115
      }
      $1585 = call $153 with $1576 $1577 $1581 ($1381 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1586 = { (responsible $1587) ->
      $1588 = call $169 with $1571 ($1381 is responsible)
      $1589 = call $168 with $1413 $1588 ($1381 is responsible)
      $1590 = call $168 with $1589 $195 ($1381 is responsible)
      $1591 = ($180, $1590)
    }
    $1592 = call $153 with $1572 $1573 $1586 ($1381 is responsible)
  }
  # Core:result:mapOrElse:30:equals:else
  $1593 = { (responsible $1594) ->
    $1595 = call $169 with $1567 ($1381 is responsible)
    $1596 = call $168 with $203 $1595 ($1381 is responsible)
    $1597 = call $168 with $1596 $210 ($1381 is responsible)
    $1598 = ($180, $1597)
  }
  $1599 = call $153 with $1568 $1569 $1593 ($1381 is responsible)
  $1600 = call $160 with $1599 $187 ($1381 is responsible)
  $1601 = call $151 with $1600 $178 ($1381 is responsible)
  # Core:result:mapOrElse:30:case-0:matched
  $1602 = { (responsible $1603) ->
    $1604 = call $160 with $1599 $188 ($1384 is responsible)
    $1605 = call $1558 with $1604 ($1382 is responsible)
  }
  # Core:result:mapOrElse:30:case-0:didNotMatch
  $1606 = { (responsible $1607) ->
    $1608 = call $160 with $1599 $188 ($1381 is responsible)
    $1609 = call $170 with $1557 ($1381 is responsible)
    $1610 = call $151 with $184 $1609 ($1381 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1611 = { (responsible $1612) ->
      $1613 = call $167 with $1557 ($1381 is responsible)
      $1614 = call $151 with $1397 $1613 ($1381 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1615 = { (responsible $1616) ->
        $1617 = call $166 with $1557 ($1381 is responsible)
        $1618 = call $151 with $186 $1617 ($1381 is responsible)
        # Core:result:mapOrElse:30:equals:then
        $1619 = { (responsible $1620) ->
          $1621 = call $165 with $1557 ($1381 is responsible)
          $1622 = ($178, $1621)
        }
        # Core:result:mapOrElse:30:equals:else
        $1623 = { (responsible $1624) ->
          $1625 = call $169 with $1617 ($1381 is responsible)
          $1626 = $1115
        }
        $1627 = call $153 with $1618 $1619 $1623 ($1381 is responsible)
      }
      # Core:result:mapOrElse:30:equals:else
      $1628 = { (responsible $1629) ->
        $1630 = call $169 with $1613 ($1381 is responsible)
        $1631 = call $168 with $1410 $1630 ($1381 is responsible)
        $1632 = call $168 with $1631 $195 ($1381 is responsible)
        $1633 = ($180, $1632)
      }
      $1634 = call $153 with $1614 $1615 $1628 ($1381 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1635 = { (responsible $1636) ->
      $1637 = call $169 with $1609 ($1381 is responsible)
      $1638 = call $168 with $203 $1637 ($1381 is responsible)
      $1639 = call $168 with $1638 $210 ($1381 is responsible)
      $1640 = ($180, $1639)
    }
    $1641 = call $153 with $1610 $1611 $1635 ($1381 is responsible)
    $1642 = call $160 with $1641 $187 ($1381 is responsible)
    $1643 = call $151 with $1642 $178 ($1381 is responsible)
    # Core:result:mapOrElse:30:case-1:matched
    $1644 = { (responsible $1645) ->
      $1646 = call $160 with $1641 $188 ($1385 is responsible)
      $1647 = call $1559 with $1646 ($1383 is responsible)
    }
    # Core:result:mapOrElse:30:case-1:didNotMatch
    $1648 = { (responsible $1649) ->
      $1650 = call $160 with $1641 $188 ($1381 is responsible)
      $1651 = panicking because $206 ($1381 is at fault)
    }
    $1652 = call $153 with $1643 $1644 $1648 ($1381 is responsible)
  }
  $1653 = call $153 with $1601 $1602 $1606 ($1381 is responsible)
}
# Core:iterator:range:38, Core:result:unwrapOrElse:19
$1654 = { $1655 (+ responsible $1656) ->
  $1657 = $1655
}
# Core:result:unwrapOr
$1658 = { $1659 $1660 (+ responsible $1661) ->
  $1662 = call $1468 with $1659 ($1387 is responsible)
  $1663 = call $253 with $1662 $1451 $1661 ($1388 is responsible)
  # Core:result:unwrapOr:7
  $1664 = { (responsible $1665) ->
    $1666 = $1660
  }
  $1667 = call $1468 with $1659 ($1392 is responsible)
  $1668 = call $253 with $1667 $1451 $1389 ($1395 is responsible)
  $1669 = call $641 with $1664 ($1390 is responsible)
  $1670 = call $253 with $1669 $1432 $1389 ($1391 is responsible)
  # Core:result:unwrapOrElse:20
  $1671 = { $1672 (+ responsible $1673) ->
    $1674 = call $654 with $1664 ($1393 is responsible)
  }
  $1675 = call $1556 with $1659 $1654 $1671 ($1394 is responsible)
}
# Core:list:append
$1676 = { $1677 $1678 (+ responsible $1679) ->
  $1680 = call $170 with $1677 ($70 is responsible)
  $1681 = call $151 with $1680 $177 ($1 is responsible)
  $1682 = call $253 with $1681 $1450 $1679 ($1372 is responsible)
  $1683 = call $170 with $1677 ($68 is responsible)
  $1684 = call $151 with $1683 $177 ($69 is responsible)
  $1685 = call $253 with $1684 $238 $1373 ($55 is responsible)
  $1686 = call $162 with $1677 ($54 is responsible)
  $1687 = call $620 with $1677 $1686 $1678 ($1371 is responsible)
}
# Core:iterator:generate:50:5, Core:iterator:generateWithState:14:1:3:case-1:matched, Core:iterator:map:19:3:case-0:matched, Core:iterator:skip:30:6:8:3:case-0:matched, Core:iterator:takeWhile:7:3:case-0:matched, Core:iterator:takeWhile:7:3:6, Core:iterator:where:19:2:3:case-0:matched, Core:iterator:where:19:2:3:6:5:case-0:matched, Core:iterator:windowed:67:27, Core:iterator:withIndex:11:5:case-0:matched, Core:iterator:wrapSafe:16:26:10:case-0:matched
$1688 = { (responsible $1689) ->
  $1690 = $1396
}
# Core:iterator:wrapSafe
$1691 = { $1692 $1693 (+ responsible $1694) ->
  $1695 = call $641 with $1693 ($1370 is responsible)
  $1696 = call $253 with $1695 $1433 $1694 ($1355 is responsible)
  # Core:iterator:wrapSafe:12
  $1697 = { (responsible $1698) ->
    $1699 = call $654 with $1693 ($1356 is responsible)
    $1700 = panicking because $1423 ($1694 is at fault)
  }
  # Core:iterator:wrapSafe:16
  $1701 = { $1702 $1703 (+ responsible $1704) ->
    $1705 = call $170 with $1703 ($1357 is responsible)
    $1706 = call $151 with $184 $1705 ($1357 is responsible)
    # Core:iterator:wrapSafe:16:1:equals:then
    $1707 = { (responsible $1708) ->
      $1709 = call $167 with $1703 ($1357 is responsible)
      $1710 = call $151 with $1400 $1709 ($1357 is responsible)
      # Core:iterator:wrapSafe:16:1:equals:then
      $1711 = { (responsible $1712) ->
        $1713 = call $166 with $1703 ($1357 is responsible)
        $1714 = call $151 with $186 $1713 ($1357 is responsible)
        # Core:iterator:wrapSafe:16:1:equals:then
        $1715 = { (responsible $1716) ->
          $1717 = call $165 with $1703 ($1357 is responsible)
          $1718 = ($178, $1717)
        }
        # Core:iterator:wrapSafe:16:1:equals:else
        $1719 = { (responsible $1720) ->
          $1721 = call $169 with $1713 ($1357 is responsible)
          $1722 = $1115
        }
        $1723 = call $153 with $1714 $1715 $1719 ($1357 is responsible)
      }
      # Core:iterator:wrapSafe:16:1:equals:else
      $1724 = { (responsible $1725) ->
        $1726 = call $169 with $1709 ($1357 is responsible)
        $1727 = call $168 with $1411 $1726 ($1357 is responsible)
        $1728 = call $168 with $1727 $195 ($1357 is responsible)
        $1729 = ($180, $1728)
      }
      $1730 = call $153 with $1710 $1711 $1724 ($1357 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:equals:else
    $1731 = { (responsible $1732) ->
      $1733 = call $169 with $1705 ($1357 is responsible)
      $1734 = call $168 with $203 $1733 ($1357 is responsible)
      $1735 = call $168 with $1734 $210 ($1357 is responsible)
      $1736 = ($180, $1735)
    }
    $1737 = call $153 with $1706 $1707 $1731 ($1357 is responsible)
    $1738 = call $160 with $1737 $187 ($1357 is responsible)
    $1739 = call $151 with $1738 $178 ($1357 is responsible)
    # Core:iterator:wrapSafe:16:1:case-0:matched
    $1740 = { (responsible $1741) ->
      $1742 = call $160 with $1737 $188 ($1360 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:case-0:didNotMatch
    $1743 = { (responsible $1744) ->
      $1745 = call $160 with $1737 $188 ($1357 is responsible)
      $1746 = call $654 with $1697 ($1359 is responsible)
    }
    $1747 = call $153 with $1739 $1740 $1743 ($1357 is responsible)
    $1748 = call $641 with $1747 ($1358 is responsible)
    $1749 = call $750 with $1748 ($1361 is responsible)
    $1750 = call $666 with $1749 ($118 is responsible)
    $1751 = call $253 with $1750 $216 $1362 ($114 is responsible)
    $1752 = call $641 with $1697 ($115 is responsible)
    $1753 = call $253 with $1752 $224 $1362 ($116 is responsible)
    $1754 = call $494 with $1749 $1697 $250 ($117 is responsible)
    # Core:iterator:wrapSafe:16:26
    $1755 = { (responsible $1756) ->
      $1757 = call $654 with $1747 ($1368 is responsible)
      $1758 = call $170 with $1757 ($1363 is responsible)
      $1759 = call $151 with $184 $1758 ($1363 is responsible)
      # Core:iterator:wrapSafe:16:26:10:equals:then
      $1760 = { (responsible $1761) ->
        $1762 = call $167 with $1757 ($1363 is responsible)
        $1763 = call $151 with $1396 $1762 ($1363 is responsible)
        # Core:iterator:wrapSafe:16:26:10:equals:then
        $1764 = { (responsible $1765) ->
          $1766 = call $166 with $1757 ($1363 is responsible)
          $1767 = call $151 with $172 $1766 ($1363 is responsible)
          # Core:iterator:wrapSafe:16:26:10:equals:else
          $1768 = { (responsible $1769) ->
            $1770 = call $169 with $1766 ($1363 is responsible)
            $1771 = call $165 with $1757 ($1363 is responsible)
            $1772 = call $169 with $1771 ($1363 is responsible)
            $1773 = call $168 with $205 $1772 ($1363 is responsible)
            $1774 = call $168 with $1773 $210 ($1363 is responsible)
            $1775 = ($180, $1774)
          }
          $1776 = call $153 with $1767 $278 $1768 ($1363 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:equals:else
        $1777 = { (responsible $1778) ->
          $1779 = call $169 with $1762 ($1363 is responsible)
          $1780 = call $168 with $1409 $1779 ($1363 is responsible)
          $1781 = call $168 with $1780 $195 ($1363 is responsible)
          $1782 = ($180, $1781)
        }
        $1783 = call $153 with $1763 $1764 $1777 ($1363 is responsible)
      }
      # Core:iterator:wrapSafe:16:26:10:equals:else
      $1784 = { (responsible $1785) ->
        $1786 = call $169 with $1758 ($1363 is responsible)
        $1787 = call $168 with $203 $1786 ($1363 is responsible)
        $1788 = call $168 with $1787 $210 ($1363 is responsible)
        $1789 = ($180, $1788)
      }
      $1790 = call $153 with $1759 $1760 $1784 ($1363 is responsible)
      $1791 = call $160 with $1790 $187 ($1363 is responsible)
      $1792 = call $151 with $1791 $178 ($1363 is responsible)
      # Core:iterator:wrapSafe:16:26:10:case-0:didNotMatch
      $1793 = { (responsible $1794) ->
        $1795 = call $160 with $1790 $188 ($1363 is responsible)
        $1796 = call $170 with $1757 ($1363 is responsible)
        $1797 = call $151 with $184 $1796 ($1363 is responsible)
        # Core:iterator:wrapSafe:16:26:10:equals:then
        $1798 = { (responsible $1799) ->
          $1800 = call $167 with $1757 ($1363 is responsible)
          $1801 = call $151 with $1401 $1800 ($1363 is responsible)
          # Core:iterator:wrapSafe:16:26:10:equals:then
          $1802 = { (responsible $1803) ->
            $1804 = call $166 with $1757 ($1363 is responsible)
            $1805 = call $151 with $186 $1804 ($1363 is responsible)
            # Core:iterator:wrapSafe:16:26:10:equals:then
            $1806 = { (responsible $1807) ->
              $1808 = call $165 with $1757 ($1363 is responsible)
              $1809 = call $170 with $1808 ($1363 is responsible)
              $1810 = call $151 with $183 $1809 ($1363 is responsible)
              # Core:iterator:wrapSafe:16:26:10:equals:then
              $1811 = { (responsible $1812) ->
                $1813 = call $164 with $1808 $1399 ($1363 is responsible)
                # Core:iterator:wrapSafe:16:26:10:hasKey:then
                $1814 = { (responsible $1815) ->
                  $1816 = call $163 with $1808 $1399 ($1363 is responsible)
                  $1817 = ($178, $1816)
                }
                # Core:iterator:wrapSafe:16:26:10:hasKey:else
                $1818 = { (responsible $1819) ->
                  $1820 = call $169 with $1808 ($1363 is responsible)
                  $1821 = call $168 with $1416 $1820 ($1363 is responsible)
                  $1822 = call $168 with $1821 $210 ($1363 is responsible)
                  $1823 = ($180, $1822)
                }
                $1824 = call $153 with $1813 $1814 $1818 ($1363 is responsible)
                $1825 = call $160 with $1824 $187 ($1363 is responsible)
                $1826 = call $151 with $1825 $178 ($1363 is responsible)
                # Core:iterator:wrapSafe:16:26:10:isMatch:then
                $1827 = { (responsible $1828) ->
                  $1829 = call $160 with $1824 $188 ($1363 is responsible)
                  $1830 = call $164 with $1808 $1404 ($1363 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:hasKey:then
                  $1831 = { (responsible $1832) ->
                    $1833 = call $163 with $1808 $1404 ($1363 is responsible)
                    $1834 = ($178, $1833)
                  }
                  # Core:iterator:wrapSafe:16:26:10:hasKey:else
                  $1835 = { (responsible $1836) ->
                    $1837 = call $169 with $1808 ($1363 is responsible)
                    $1838 = call $168 with $1419 $1837 ($1363 is responsible)
                    $1839 = call $168 with $1838 $210 ($1363 is responsible)
                    $1840 = ($180, $1839)
                  }
                  $1841 = call $153 with $1830 $1831 $1835 ($1363 is responsible)
                  $1842 = call $160 with $1841 $187 ($1363 is responsible)
                  $1843 = call $151 with $1842 $178 ($1363 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:isMatch:then
                  $1844 = { (responsible $1845) ->
                    $1846 = call $160 with $1841 $188 ($1363 is responsible)
                    $1847 = ($178, $1829, $1846)
                  }
                  # Core:iterator:wrapSafe:16:26:10:isMatch:else
                  $1848 = { (responsible $1849) ->
                    $1850 = $1841
                  }
                  $1851 = call $153 with $1843 $1844 $1848 ($1363 is responsible)
                }
                # Core:iterator:wrapSafe:16:26:10:isMatch:else
                $1852 = { (responsible $1853) ->
                  $1854 = $1824
                }
                $1855 = call $153 with $1826 $1827 $1852 ($1363 is responsible)
              }
              # Core:iterator:wrapSafe:16:26:10:equals:else
              $1856 = { (responsible $1857) ->
                $1858 = call $169 with $1809 ($1363 is responsible)
                $1859 = call $168 with $202 $1858 ($1363 is responsible)
                $1860 = call $168 with $1859 $210 ($1363 is responsible)
                $1861 = ($180, $1860)
              }
              $1862 = call $153 with $1810 $1811 $1856 ($1363 is responsible)
            }
            # Core:iterator:wrapSafe:16:26:10:equals:else
            $1863 = { (responsible $1864) ->
              $1865 = call $169 with $1804 ($1363 is responsible)
              $1866 = $1115
            }
            $1867 = call $153 with $1805 $1806 $1863 ($1363 is responsible)
          }
          # Core:iterator:wrapSafe:16:26:10:equals:else
          $1868 = { (responsible $1869) ->
            $1870 = call $169 with $1800 ($1363 is responsible)
            $1871 = call $168 with $1412 $1870 ($1363 is responsible)
            $1872 = call $168 with $1871 $195 ($1363 is responsible)
            $1873 = ($180, $1872)
          }
          $1874 = call $153 with $1801 $1802 $1868 ($1363 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:equals:else
        $1875 = { (responsible $1876) ->
          $1877 = call $169 with $1796 ($1363 is responsible)
          $1878 = call $168 with $203 $1877 ($1363 is responsible)
          $1879 = call $168 with $1878 $210 ($1363 is responsible)
          $1880 = ($180, $1879)
        }
        $1881 = call $153 with $1797 $1798 $1875 ($1363 is responsible)
        $1882 = call $160 with $1881 $187 ($1363 is responsible)
        $1883 = call $151 with $1882 $178 ($1363 is responsible)
        # Core:iterator:wrapSafe:16:26:10:case-1:matched
        $1884 = { (responsible $1885) ->
          $1886 = call $160 with $1881 $188 ($1366 is responsible)
          $1887 = call $160 with $1881 $189 ($1367 is responsible)
          $1888 = call $1702 with $1887 ($1365 is responsible)
          $1889 = [$1404: $1888, $1399: $1886]
          $1890 = More $1889
        }
        # Core:iterator:wrapSafe:16:26:10:case-1:didNotMatch
        $1891 = { (responsible $1892) ->
          $1893 = call $160 with $1881 $188 ($1363 is responsible)
          $1894 = call $654 with $1697 ($1364 is responsible)
        }
        $1895 = call $153 with $1883 $1884 $1891 ($1363 is responsible)
      }
      $1896 = call $153 with $1792 $1688 $1793 ($1363 is responsible)
    }
    $1897 = Iterator $1755
  }
  $1898 = call $1050 with $1701 ($123 is responsible)
  $1899 = call $253 with $1898 $207 $1369 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $1900 = { $1901 $1902 (+ responsible $1903) ->
    # Core:controlFlow:recursive:18:0
    $1904 = { $1905 (+ responsible $1906) ->
      $1907 = call $1901 with $1901 $1905 ($120 is responsible)
    }
    $1908 = call $1701 with $1904 $1902 ($121 is responsible)
  }
  $1909 = call $1900 with $1900 $1692 ($122 is responsible)
}
# Core:iterator:next
$1910 = { $1911 (+ responsible $1912) ->
  # Core:iterator:next:2
  $1913 = { (responsible $1914) ->
    $1915 = panicking because $1457 ($1912 is at fault)
  }
  $1916 = call $1691 with $1911 $1913 ($1258 is responsible)
  $1917 = call $170 with $1916 ($1259 is responsible)
  $1918 = call $151 with $184 $1917 ($1259 is responsible)
  # Core:iterator:next:6:equals:then
  $1919 = { (responsible $1920) ->
    $1921 = call $167 with $1916 ($1259 is responsible)
    $1922 = call $151 with $1400 $1921 ($1259 is responsible)
    # Core:iterator:next:6:equals:then
    $1923 = { (responsible $1924) ->
      $1925 = call $166 with $1916 ($1259 is responsible)
      $1926 = call $151 with $186 $1925 ($1259 is responsible)
      # Core:iterator:next:6:equals:then
      $1927 = { (responsible $1928) ->
        $1929 = call $165 with $1916 ($1259 is responsible)
        $1930 = ($178, $1929)
      }
      # Core:iterator:next:6:equals:else
      $1931 = { (responsible $1932) ->
        $1933 = call $169 with $1925 ($1259 is responsible)
        $1934 = $1115
      }
      $1935 = call $153 with $1926 $1927 $1931 ($1259 is responsible)
    }
    # Core:iterator:next:6:equals:else
    $1936 = { (responsible $1937) ->
      $1938 = call $169 with $1921 ($1259 is responsible)
      $1939 = call $168 with $1411 $1938 ($1259 is responsible)
      $1940 = call $168 with $1939 $195 ($1259 is responsible)
      $1941 = ($180, $1940)
    }
    $1942 = call $153 with $1922 $1923 $1936 ($1259 is responsible)
  }
  # Core:iterator:next:6:equals:else
  $1943 = { (responsible $1944) ->
    $1945 = call $169 with $1917 ($1259 is responsible)
    $1946 = call $168 with $203 $1945 ($1259 is responsible)
    $1947 = call $168 with $1946 $210 ($1259 is responsible)
    $1948 = ($180, $1947)
  }
  $1949 = call $153 with $1918 $1919 $1943 ($1259 is responsible)
  $1950 = call $160 with $1949 $187 ($1259 is responsible)
  $1951 = call $151 with $1950 $178 ($1259 is responsible)
  # Core:iterator:next:6:isMatch:else
  $1952 = { (responsible $1953) ->
    $1954 = call $160 with $1949 $188 ($1259 is responsible)
    $1955 = panicking because $1954 ($1259 is at fault)
  }
  $1956 = call $153 with $1951 $250 $1952 ($1259 is responsible)
  $1957 = call $160 with $1949 $188 ($1260 is responsible)
  $1958 = call $654 with $1957 ($1257 is responsible)
}
# Core:iterator:generateWithState
$1959 = { $1960 $1961 (+ responsible $1962) ->
  $1963 = call $1135 with $1961 ($1238 is responsible)
  $1964 = call $253 with $1963 $1436 $1962 ($1224 is responsible)
  # Core:iterator:generateWithState:14
  $1965 = { $1966 $1967 (+ responsible $1968) ->
    # Core:iterator:generateWithState:14:1
    $1969 = { (responsible $1970) ->
      $1971 = call $1961 with $1967 ($1225 is responsible)
      $1972 = call $170 with $1971 ($1226 is responsible)
      $1973 = call $151 with $184 $1972 ($1226 is responsible)
      # Core:iterator:generateWithState:14:1:3:equals:then
      $1974 = { (responsible $1975) ->
        $1976 = call $167 with $1971 ($1226 is responsible)
        $1977 = call $151 with $1401 $1976 ($1226 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:then
        $1978 = { (responsible $1979) ->
          $1980 = call $166 with $1971 ($1226 is responsible)
          $1981 = call $151 with $186 $1980 ($1226 is responsible)
          # Core:iterator:generateWithState:14:1:3:equals:then
          $1982 = { (responsible $1983) ->
            $1984 = call $165 with $1971 ($1226 is responsible)
            $1985 = call $170 with $1984 ($1226 is responsible)
            $1986 = call $151 with $183 $1985 ($1226 is responsible)
            # Core:iterator:generateWithState:14:1:3:equals:then
            $1987 = { (responsible $1988) ->
              $1989 = call $164 with $1984 $1399 ($1226 is responsible)
              # Core:iterator:generateWithState:14:1:3:hasKey:then
              $1990 = { (responsible $1991) ->
                $1992 = call $163 with $1984 $1399 ($1226 is responsible)
                $1993 = ($178, $1992)
              }
              # Core:iterator:generateWithState:14:1:3:hasKey:else
              $1994 = { (responsible $1995) ->
                $1996 = call $169 with $1984 ($1226 is responsible)
                $1997 = call $168 with $1416 $1996 ($1226 is responsible)
                $1998 = call $168 with $1997 $210 ($1226 is responsible)
                $1999 = ($180, $1998)
              }
              $2000 = call $153 with $1989 $1990 $1994 ($1226 is responsible)
              $2001 = call $160 with $2000 $187 ($1226 is responsible)
              $2002 = call $151 with $2001 $178 ($1226 is responsible)
              # Core:iterator:generateWithState:14:1:3:isMatch:then
              $2003 = { (responsible $2004) ->
                $2005 = call $160 with $2000 $188 ($1226 is responsible)
                $2006 = call $164 with $1984 $1405 ($1226 is responsible)
                # Core:iterator:generateWithState:14:1:3:hasKey:then
                $2007 = { (responsible $2008) ->
                  $2009 = call $163 with $1984 $1405 ($1226 is responsible)
                  $2010 = ($178, $2009)
                }
                # Core:iterator:generateWithState:14:1:3:hasKey:else
                $2011 = { (responsible $2012) ->
                  $2013 = call $169 with $1984 ($1226 is responsible)
                  $2014 = call $168 with $1420 $2013 ($1226 is responsible)
                  $2015 = call $168 with $2014 $210 ($1226 is responsible)
                  $2016 = ($180, $2015)
                }
                $2017 = call $153 with $2006 $2007 $2011 ($1226 is responsible)
                $2018 = call $160 with $2017 $187 ($1226 is responsible)
                $2019 = call $151 with $2018 $178 ($1226 is responsible)
                # Core:iterator:generateWithState:14:1:3:isMatch:then
                $2020 = { (responsible $2021) ->
                  $2022 = call $160 with $2017 $188 ($1226 is responsible)
                  $2023 = ($178, $2005, $2022)
                }
                # Core:iterator:generateWithState:14:1:3:isMatch:else
                $2024 = { (responsible $2025) ->
                  $2026 = $2017
                }
                $2027 = call $153 with $2019 $2020 $2024 ($1226 is responsible)
              }
              # Core:iterator:generateWithState:14:1:3:isMatch:else
              $2028 = { (responsible $2029) ->
                $2030 = $2000
              }
              $2031 = call $153 with $2002 $2003 $2028 ($1226 is responsible)
            }
            # Core:iterator:generateWithState:14:1:3:equals:else
            $2032 = { (responsible $2033) ->
              $2034 = call $169 with $1985 ($1226 is responsible)
              $2035 = call $168 with $202 $2034 ($1226 is responsible)
              $2036 = call $168 with $2035 $210 ($1226 is responsible)
              $2037 = ($180, $2036)
            }
            $2038 = call $153 with $1986 $1987 $2032 ($1226 is responsible)
          }
          # Core:iterator:generateWithState:14:1:3:equals:else
          $2039 = { (responsible $2040) ->
            $2041 = call $169 with $1980 ($1226 is responsible)
            $2042 = $1115
          }
          $2043 = call $153 with $1981 $1982 $2039 ($1226 is responsible)
        }
        # Core:iterator:generateWithState:14:1:3:equals:else
        $2044 = { (responsible $2045) ->
          $2046 = call $169 with $1976 ($1226 is responsible)
          $2047 = call $168 with $1412 $2046 ($1226 is responsible)
          $2048 = call $168 with $2047 $195 ($1226 is responsible)
          $2049 = ($180, $2048)
        }
        $2050 = call $153 with $1977 $1978 $2044 ($1226 is responsible)
      }
      # Core:iterator:generateWithState:14:1:3:equals:else
      $2051 = { (responsible $2052) ->
        $2053 = call $169 with $1972 ($1226 is responsible)
        $2054 = call $168 with $203 $2053 ($1226 is responsible)
        $2055 = call $168 with $2054 $210 ($1226 is responsible)
        $2056 = ($180, $2055)
      }
      $2057 = call $153 with $1973 $1974 $2051 ($1226 is responsible)
      $2058 = call $160 with $2057 $187 ($1226 is responsible)
      $2059 = call $151 with $2058 $178 ($1226 is responsible)
      # Core:iterator:generateWithState:14:1:3:case-0:matched
      $2060 = { (responsible $2061) ->
        $2062 = call $160 with $2057 $188 ($1235 is responsible)
        $2063 = call $160 with $2057 $189 ($1236 is responsible)
        $2064 = call $1966 with $2063 ($1234 is responsible)
        $2065 = [$1404: $2064, $1399: $2062]
        $2066 = More $2065
      }
      # Core:iterator:generateWithState:14:1:3:case-0:didNotMatch
      $2067 = { (responsible $2068) ->
        $2069 = call $160 with $2057 $188 ($1226 is responsible)
        $2070 = call $170 with $1971 ($1226 is responsible)
        $2071 = call $151 with $184 $2070 ($1226 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:then
        $2072 = { (responsible $2073) ->
          $2074 = call $167 with $1971 ($1226 is responsible)
          $2075 = call $151 with $1396 $2074 ($1226 is responsible)
          # Core:iterator:generateWithState:14:1:3:equals:then
          $2076 = { (responsible $2077) ->
            $2078 = call $166 with $1971 ($1226 is responsible)
            $2079 = call $151 with $172 $2078 ($1226 is responsible)
            # Core:iterator:generateWithState:14:1:3:equals:else
            $2080 = { (responsible $2081) ->
              $2082 = call $169 with $2078 ($1226 is responsible)
              $2083 = call $165 with $1971 ($1226 is responsible)
              $2084 = call $169 with $2083 ($1226 is responsible)
              $2085 = call $168 with $205 $2084 ($1226 is responsible)
              $2086 = call $168 with $2085 $210 ($1226 is responsible)
              $2087 = ($180, $2086)
            }
            $2088 = call $153 with $2079 $278 $2080 ($1226 is responsible)
          }
          # Core:iterator:generateWithState:14:1:3:equals:else
          $2089 = { (responsible $2090) ->
            $2091 = call $169 with $2074 ($1226 is responsible)
            $2092 = call $168 with $1409 $2091 ($1226 is responsible)
            $2093 = call $168 with $2092 $195 ($1226 is responsible)
            $2094 = ($180, $2093)
          }
          $2095 = call $153 with $2075 $2076 $2089 ($1226 is responsible)
        }
        # Core:iterator:generateWithState:14:1:3:equals:else
        $2096 = { (responsible $2097) ->
          $2098 = call $169 with $2070 ($1226 is responsible)
          $2099 = call $168 with $203 $2098 ($1226 is responsible)
          $2100 = call $168 with $2099 $210 ($1226 is responsible)
          $2101 = ($180, $2100)
        }
        $2102 = call $153 with $2071 $2072 $2096 ($1226 is responsible)
        $2103 = call $160 with $2102 $187 ($1226 is responsible)
        $2104 = call $151 with $2103 $178 ($1226 is responsible)
        # Core:iterator:generateWithState:14:1:3:case-1:didNotMatch
        $2105 = { (responsible $2106) ->
          $2107 = call $160 with $2102 $188 ($1226 is responsible)
          # Core:iterator:generateWithState:14:1:3:case-2:matched
          $2108 = { (responsible $2109) ->
            $2110 = call $170 with $1971 ($1227 is responsible)
            $2111 = call $151 with $2110 $185 ($1228 is responsible)
            # Core:iterator:generateWithState:14:1:3:21
            $2112 = { (responsible $2113) ->
              $2114 = $1971
            }
            # Core:iterator:generateWithState:14:1:3:22
            $2115 = { (responsible $2116) ->
              $2117 = call $169 with $1971 ($1229 is responsible)
            }
            $2118 = call $153 with $2111 $2112 $2115 ($1230 is responsible)
            $2119 = call $168 with $1422 $2118 ($1231 is responsible)
            $2120 = call $168 with $2119 $1424 ($1232 is responsible)
            $2121 = call $253 with $172 $2120 $1962 ($1233 is responsible)
          }
          $2122 = call $2108 with no arguments ($1226 is responsible)
        }
        $2123 = call $153 with $2104 $1688 $2105 ($1226 is responsible)
      }
      $2124 = call $153 with $2059 $2060 $2067 ($1226 is responsible)
    }
    $2125 = Iterator $1969
  }
  $2126 = call $1050 with $1965 ($123 is responsible)
  $2127 = call $253 with $2126 $207 $1237 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $2128 = { $2129 $2130 (+ responsible $2131) ->
    # Core:controlFlow:recursive:18:0
    $2132 = { $2133 (+ responsible $2134) ->
      $2135 = call $2129 with $2129 $2133 ($120 is responsible)
    }
    $2136 = call $1965 with $2132 $2130 ($121 is responsible)
  }
  $2137 = call $2128 with $2128 $1960 ($122 is responsible)
}
# Core:iterator:generate
$2138 = { $2139 $2140 (+ responsible $2141) ->
  $2142 = call $170 with $2139 ($70 is responsible)
  $2143 = call $151 with $2142 $175 ($1 is responsible)
  $2144 = call $253 with $2143 $1442 $2141 ($1213 is responsible)
  $2145 = call $1104 with $2139 ($1214 is responsible)
  $2146 = call $253 with $2145 $1446 $2141 ($1215 is responsible)
  $2147 = call $170 with $2139 ($70 is responsible)
  $2148 = call $151 with $2147 $175 ($1 is responsible)
  $2149 = call $253 with $2148 $235 $1216 ($1149 is responsible)
  $2150 = call $1104 with $2139 ($1150 is responsible)
  $2151 = call $253 with $2150 $1157 $1216 ($1151 is responsible)
  $2152 = call $1080 with $2139 $1156 ($1148 is responsible)
  $2153 = call $253 with $2152 $1441 $2141 ($1217 is responsible)
  $2154 = call $1135 with $2140 ($1218 is responsible)
  $2155 = call $253 with $2154 $1439 $2141 ($1219 is responsible)
  # Core:iterator:generate:50
  $2156 = { $2157 (+ responsible $2158) ->
    $2159 = call $151 with $2157 $2139 ($1 is responsible)
    # Core:iterator:generate:50:6
    $2160 = { (responsible $2161) ->
      $2162 = call $2140 with $2157 ($1221 is responsible)
      $2163 = call $170 with $2157 ($68 is responsible)
      $2164 = call $151 with $2163 $175 ($69 is responsible)
      $2165 = call $253 with $2164 $211 $1220 ($19 is responsible)
      $2166 = call $154 with $2157 $188 ($18 is responsible)
      $2167 = [$1405: $2166, $1399: $2162]
      $2168 = More $2167
    }
    $2169 = call $494 with $2159 $1688 $2160 ($1222 is responsible)
  }
  $2170 = call $1959 with $187 $2156 ($1223 is responsible)
}
# Core:iterator:map
$2171 = { $2172 $2173 (+ responsible $2174) ->
  # Core:iterator:map:2
  $2175 = { (responsible $2176) ->
    $2177 = panicking because $1456 ($2174 is at fault)
  }
  $2178 = call $1691 with $2172 $2175 ($1256 is responsible)
  $2179 = call $1135 with $2173 ($1248 is responsible)
  $2180 = call $253 with $2179 $1436 $2174 ($1249 is responsible)
  # Core:iterator:map:19
  $2181 = { $2182 (+ responsible $2183) ->
    $2184 = call $1910 with $2182 ($1250 is responsible)
    $2185 = call $170 with $2184 ($1251 is responsible)
    $2186 = call $151 with $184 $2185 ($1251 is responsible)
    # Core:iterator:map:19:3:equals:then
    $2187 = { (responsible $2188) ->
      $2189 = call $167 with $2184 ($1251 is responsible)
      $2190 = call $151 with $1396 $2189 ($1251 is responsible)
      # Core:iterator:map:19:3:equals:then
      $2191 = { (responsible $2192) ->
        $2193 = call $166 with $2184 ($1251 is responsible)
        $2194 = call $151 with $172 $2193 ($1251 is responsible)
        # Core:iterator:map:19:3:equals:else
        $2195 = { (responsible $2196) ->
          $2197 = call $169 with $2193 ($1251 is responsible)
          $2198 = call $165 with $2184 ($1251 is responsible)
          $2199 = call $169 with $2198 ($1251 is responsible)
          $2200 = call $168 with $205 $2199 ($1251 is responsible)
          $2201 = call $168 with $2200 $210 ($1251 is responsible)
          $2202 = ($180, $2201)
        }
        $2203 = call $153 with $2194 $278 $2195 ($1251 is responsible)
      }
      # Core:iterator:map:19:3:equals:else
      $2204 = { (responsible $2205) ->
        $2206 = call $169 with $2189 ($1251 is responsible)
        $2207 = call $168 with $1409 $2206 ($1251 is responsible)
        $2208 = call $168 with $2207 $195 ($1251 is responsible)
        $2209 = ($180, $2208)
      }
      $2210 = call $153 with $2190 $2191 $2204 ($1251 is responsible)
    }
    # Core:iterator:map:19:3:equals:else
    $2211 = { (responsible $2212) ->
      $2213 = call $169 with $2185 ($1251 is responsible)
      $2214 = call $168 with $203 $2213 ($1251 is responsible)
      $2215 = call $168 with $2214 $210 ($1251 is responsible)
      $2216 = ($180, $2215)
    }
    $2217 = call $153 with $2186 $2187 $2211 ($1251 is responsible)
    $2218 = call $160 with $2217 $187 ($1251 is responsible)
    $2219 = call $151 with $2218 $178 ($1251 is responsible)
    # Core:iterator:map:19:3:case-0:didNotMatch
    $2220 = { (responsible $2221) ->
      $2222 = call $160 with $2217 $188 ($1251 is responsible)
      $2223 = call $170 with $2184 ($1251 is responsible)
      $2224 = call $151 with $184 $2223 ($1251 is responsible)
      # Core:iterator:map:19:3:equals:then
      $2225 = { (responsible $2226) ->
        $2227 = call $167 with $2184 ($1251 is responsible)
        $2228 = call $151 with $1401 $2227 ($1251 is responsible)
        # Core:iterator:map:19:3:equals:then
        $2229 = { (responsible $2230) ->
          $2231 = call $166 with $2184 ($1251 is responsible)
          $2232 = call $151 with $186 $2231 ($1251 is responsible)
          # Core:iterator:map:19:3:equals:then
          $2233 = { (responsible $2234) ->
            $2235 = call $165 with $2184 ($1251 is responsible)
            $2236 = call $170 with $2235 ($1251 is responsible)
            $2237 = call $151 with $183 $2236 ($1251 is responsible)
            # Core:iterator:map:19:3:equals:then
            $2238 = { (responsible $2239) ->
              $2240 = call $164 with $2235 $1399 ($1251 is responsible)
              # Core:iterator:map:19:3:hasKey:then
              $2241 = { (responsible $2242) ->
                $2243 = call $163 with $2235 $1399 ($1251 is responsible)
                $2244 = ($178, $2243)
              }
              # Core:iterator:map:19:3:hasKey:else
              $2245 = { (responsible $2246) ->
                $2247 = call $169 with $2235 ($1251 is responsible)
                $2248 = call $168 with $1416 $2247 ($1251 is responsible)
                $2249 = call $168 with $2248 $210 ($1251 is responsible)
                $2250 = ($180, $2249)
              }
              $2251 = call $153 with $2240 $2241 $2245 ($1251 is responsible)
              $2252 = call $160 with $2251 $187 ($1251 is responsible)
              $2253 = call $151 with $2252 $178 ($1251 is responsible)
              # Core:iterator:map:19:3:isMatch:then
              $2254 = { (responsible $2255) ->
                $2256 = call $160 with $2251 $188 ($1251 is responsible)
                $2257 = call $164 with $2235 $1404 ($1251 is responsible)
                # Core:iterator:map:19:3:hasKey:then
                $2258 = { (responsible $2259) ->
                  $2260 = call $163 with $2235 $1404 ($1251 is responsible)
                  $2261 = ($178, $2260)
                }
                # Core:iterator:map:19:3:hasKey:else
                $2262 = { (responsible $2263) ->
                  $2264 = call $169 with $2235 ($1251 is responsible)
                  $2265 = call $168 with $1419 $2264 ($1251 is responsible)
                  $2266 = call $168 with $2265 $210 ($1251 is responsible)
                  $2267 = ($180, $2266)
                }
                $2268 = call $153 with $2257 $2258 $2262 ($1251 is responsible)
                $2269 = call $160 with $2268 $187 ($1251 is responsible)
                $2270 = call $151 with $2269 $178 ($1251 is responsible)
                # Core:iterator:map:19:3:isMatch:then
                $2271 = { (responsible $2272) ->
                  $2273 = call $160 with $2268 $188 ($1251 is responsible)
                  $2274 = ($178, $2256, $2273)
                }
                # Core:iterator:map:19:3:isMatch:else
                $2275 = { (responsible $2276) ->
                  $2277 = $2268
                }
                $2278 = call $153 with $2270 $2271 $2275 ($1251 is responsible)
              }
              # Core:iterator:map:19:3:isMatch:else
              $2279 = { (responsible $2280) ->
                $2281 = $2251
              }
              $2282 = call $153 with $2253 $2254 $2279 ($1251 is responsible)
            }
            # Core:iterator:map:19:3:equals:else
            $2283 = { (responsible $2284) ->
              $2285 = call $169 with $2236 ($1251 is responsible)
              $2286 = call $168 with $202 $2285 ($1251 is responsible)
              $2287 = call $168 with $2286 $210 ($1251 is responsible)
              $2288 = ($180, $2287)
            }
            $2289 = call $153 with $2237 $2238 $2283 ($1251 is responsible)
          }
          # Core:iterator:map:19:3:equals:else
          $2290 = { (responsible $2291) ->
            $2292 = call $169 with $2231 ($1251 is responsible)
            $2293 = $1115
          }
          $2294 = call $153 with $2232 $2233 $2290 ($1251 is responsible)
        }
        # Core:iterator:map:19:3:equals:else
        $2295 = { (responsible $2296) ->
          $2297 = call $169 with $2227 ($1251 is responsible)
          $2298 = call $168 with $1412 $2297 ($1251 is responsible)
          $2299 = call $168 with $2298 $195 ($1251 is responsible)
          $2300 = ($180, $2299)
        }
        $2301 = call $153 with $2228 $2229 $2295 ($1251 is responsible)
      }
      # Core:iterator:map:19:3:equals:else
      $2302 = { (responsible $2303) ->
        $2304 = call $169 with $2223 ($1251 is responsible)
        $2305 = call $168 with $203 $2304 ($1251 is responsible)
        $2306 = call $168 with $2305 $210 ($1251 is responsible)
        $2307 = ($180, $2306)
      }
      $2308 = call $153 with $2224 $2225 $2302 ($1251 is responsible)
      $2309 = call $160 with $2308 $187 ($1251 is responsible)
      $2310 = call $151 with $2309 $178 ($1251 is responsible)
      # Core:iterator:map:19:3:case-1:matched
      $2311 = { (responsible $2312) ->
        $2313 = call $160 with $2308 $188 ($1253 is responsible)
        $2314 = call $160 with $2308 $189 ($1254 is responsible)
        $2315 = call $2173 with $2313 ($1252 is responsible)
        $2316 = [$1405: $2314, $1399: $2315]
        $2317 = More $2316
      }
      # Core:iterator:map:19:3:case-1:didNotMatch
      $2318 = { (responsible $2319) ->
        $2320 = call $160 with $2308 $188 ($1251 is responsible)
        $2321 = panicking because $206 ($1251 is at fault)
      }
      $2322 = call $153 with $2310 $2311 $2318 ($1251 is responsible)
    }
    $2323 = call $153 with $2219 $1688 $2220 ($1251 is responsible)
  }
  $2324 = call $1959 with $2178 $2181 ($1255 is responsible)
}
# Core:iterator:withIndex:11
$2325 = { $2326 (+ responsible $2327) ->
  $2328 = call $170 with $2326 ($1345 is responsible)
  $2329 = call $151 with $183 $2328 ($1345 is responsible)
  # Core:iterator:withIndex:11:1:equals:then
  $2330 = { (responsible $2331) ->
    $2332 = call $164 with $2326 $1400 ($1345 is responsible)
    # Core:iterator:withIndex:11:1:hasKey:then
    $2333 = { (responsible $2334) ->
      $2335 = call $163 with $2326 $1400 ($1345 is responsible)
      $2336 = ($178, $2335)
    }
    # Core:iterator:withIndex:11:1:hasKey:else
    $2337 = { (responsible $2338) ->
      $2339 = call $169 with $2326 ($1345 is responsible)
      $2340 = call $168 with $1417 $2339 ($1345 is responsible)
      $2341 = call $168 with $2340 $210 ($1345 is responsible)
      $2342 = ($180, $2341)
    }
    $2343 = call $153 with $2332 $2333 $2337 ($1345 is responsible)
    $2344 = call $160 with $2343 $187 ($1345 is responsible)
    $2345 = call $151 with $2344 $178 ($1345 is responsible)
    # Core:iterator:withIndex:11:1:isMatch:then
    $2346 = { (responsible $2347) ->
      $2348 = call $160 with $2343 $188 ($1345 is responsible)
      $2349 = call $164 with $2326 $1398 ($1345 is responsible)
      # Core:iterator:withIndex:11:1:hasKey:then
      $2350 = { (responsible $2351) ->
        $2352 = call $163 with $2326 $1398 ($1345 is responsible)
        $2353 = ($178, $2352)
      }
      # Core:iterator:withIndex:11:1:hasKey:else
      $2354 = { (responsible $2355) ->
        $2356 = call $169 with $2326 ($1345 is responsible)
        $2357 = call $168 with $1415 $2356 ($1345 is responsible)
        $2358 = call $168 with $2357 $210 ($1345 is responsible)
        $2359 = ($180, $2358)
      }
      $2360 = call $153 with $2349 $2350 $2354 ($1345 is responsible)
      $2361 = call $160 with $2360 $187 ($1345 is responsible)
      $2362 = call $151 with $2361 $178 ($1345 is responsible)
      # Core:iterator:withIndex:11:1:isMatch:then
      $2363 = { (responsible $2364) ->
        $2365 = call $160 with $2360 $188 ($1345 is responsible)
        $2366 = ($178, $2348, $2365)
      }
      # Core:iterator:withIndex:11:1:isMatch:else
      $2367 = { (responsible $2368) ->
        $2369 = $2360
      }
      $2370 = call $153 with $2362 $2363 $2367 ($1345 is responsible)
    }
    # Core:iterator:withIndex:11:1:isMatch:else
    $2371 = { (responsible $2372) ->
      $2373 = $2343
    }
    $2374 = call $153 with $2345 $2346 $2371 ($1345 is responsible)
  }
  # Core:iterator:withIndex:11:1:equals:else
  $2375 = { (responsible $2376) ->
    $2377 = call $169 with $2328 ($1345 is responsible)
    $2378 = call $168 with $202 $2377 ($1345 is responsible)
    $2379 = call $168 with $2378 $210 ($1345 is responsible)
    $2380 = ($180, $2379)
  }
  $2381 = call $153 with $2329 $2330 $2375 ($1345 is responsible)
  $2382 = call $160 with $2381 $187 ($1345 is responsible)
  $2383 = call $151 with $2382 $178 ($1345 is responsible)
  # Core:iterator:withIndex:11:1:isMatch:else
  $2384 = { (responsible $2385) ->
    $2386 = call $160 with $2381 $188 ($1345 is responsible)
    $2387 = panicking because $2386 ($1345 is at fault)
  }
  $2388 = call $153 with $2383 $250 $2384 ($1345 is responsible)
  $2389 = call $160 with $2381 $188 ($1352 is responsible)
  $2390 = call $160 with $2381 $189 ($1351 is responsible)
  $2391 = call $1910 with $2389 ($1346 is responsible)
  $2392 = call $170 with $2391 ($1347 is responsible)
  $2393 = call $151 with $184 $2392 ($1347 is responsible)
  # Core:iterator:withIndex:11:5:equals:then
  $2394 = { (responsible $2395) ->
    $2396 = call $167 with $2391 ($1347 is responsible)
    $2397 = call $151 with $1396 $2396 ($1347 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $2398 = { (responsible $2399) ->
      $2400 = call $166 with $2391 ($1347 is responsible)
      $2401 = call $151 with $172 $2400 ($1347 is responsible)
      # Core:iterator:withIndex:11:5:equals:else
      $2402 = { (responsible $2403) ->
        $2404 = call $169 with $2400 ($1347 is responsible)
        $2405 = call $165 with $2391 ($1347 is responsible)
        $2406 = call $169 with $2405 ($1347 is responsible)
        $2407 = call $168 with $205 $2406 ($1347 is responsible)
        $2408 = call $168 with $2407 $210 ($1347 is responsible)
        $2409 = ($180, $2408)
      }
      $2410 = call $153 with $2401 $278 $2402 ($1347 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2411 = { (responsible $2412) ->
      $2413 = call $169 with $2396 ($1347 is responsible)
      $2414 = call $168 with $1409 $2413 ($1347 is responsible)
      $2415 = call $168 with $2414 $195 ($1347 is responsible)
      $2416 = ($180, $2415)
    }
    $2417 = call $153 with $2397 $2398 $2411 ($1347 is responsible)
  }
  # Core:iterator:withIndex:11:5:equals:else
  $2418 = { (responsible $2419) ->
    $2420 = call $169 with $2392 ($1347 is responsible)
    $2421 = call $168 with $203 $2420 ($1347 is responsible)
    $2422 = call $168 with $2421 $210 ($1347 is responsible)
    $2423 = ($180, $2422)
  }
  $2424 = call $153 with $2393 $2394 $2418 ($1347 is responsible)
  $2425 = call $160 with $2424 $187 ($1347 is responsible)
  $2426 = call $151 with $2425 $178 ($1347 is responsible)
  # Core:iterator:withIndex:11:5:case-0:didNotMatch
  $2427 = { (responsible $2428) ->
    $2429 = call $160 with $2424 $188 ($1347 is responsible)
    $2430 = call $170 with $2391 ($1347 is responsible)
    $2431 = call $151 with $184 $2430 ($1347 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $2432 = { (responsible $2433) ->
      $2434 = call $167 with $2391 ($1347 is responsible)
      $2435 = call $151 with $1401 $2434 ($1347 is responsible)
      # Core:iterator:withIndex:11:5:equals:then
      $2436 = { (responsible $2437) ->
        $2438 = call $166 with $2391 ($1347 is responsible)
        $2439 = call $151 with $186 $2438 ($1347 is responsible)
        # Core:iterator:withIndex:11:5:equals:then
        $2440 = { (responsible $2441) ->
          $2442 = call $165 with $2391 ($1347 is responsible)
          $2443 = call $170 with $2442 ($1347 is responsible)
          $2444 = call $151 with $183 $2443 ($1347 is responsible)
          # Core:iterator:withIndex:11:5:equals:then
          $2445 = { (responsible $2446) ->
            $2447 = call $164 with $2442 $1399 ($1347 is responsible)
            # Core:iterator:withIndex:11:5:hasKey:then
            $2448 = { (responsible $2449) ->
              $2450 = call $163 with $2442 $1399 ($1347 is responsible)
              $2451 = ($178, $2450)
            }
            # Core:iterator:withIndex:11:5:hasKey:else
            $2452 = { (responsible $2453) ->
              $2454 = call $169 with $2442 ($1347 is responsible)
              $2455 = call $168 with $1416 $2454 ($1347 is responsible)
              $2456 = call $168 with $2455 $210 ($1347 is responsible)
              $2457 = ($180, $2456)
            }
            $2458 = call $153 with $2447 $2448 $2452 ($1347 is responsible)
            $2459 = call $160 with $2458 $187 ($1347 is responsible)
            $2460 = call $151 with $2459 $178 ($1347 is responsible)
            # Core:iterator:withIndex:11:5:isMatch:then
            $2461 = { (responsible $2462) ->
              $2463 = call $160 with $2458 $188 ($1347 is responsible)
              $2464 = call $164 with $2442 $1404 ($1347 is responsible)
              # Core:iterator:withIndex:11:5:hasKey:then
              $2465 = { (responsible $2466) ->
                $2467 = call $163 with $2442 $1404 ($1347 is responsible)
                $2468 = ($178, $2467)
              }
              # Core:iterator:withIndex:11:5:hasKey:else
              $2469 = { (responsible $2470) ->
                $2471 = call $169 with $2442 ($1347 is responsible)
                $2472 = call $168 with $1419 $2471 ($1347 is responsible)
                $2473 = call $168 with $2472 $210 ($1347 is responsible)
                $2474 = ($180, $2473)
              }
              $2475 = call $153 with $2464 $2465 $2469 ($1347 is responsible)
              $2476 = call $160 with $2475 $187 ($1347 is responsible)
              $2477 = call $151 with $2476 $178 ($1347 is responsible)
              # Core:iterator:withIndex:11:5:isMatch:then
              $2478 = { (responsible $2479) ->
                $2480 = call $160 with $2475 $188 ($1347 is responsible)
                $2481 = ($178, $2463, $2480)
              }
              # Core:iterator:withIndex:11:5:isMatch:else
              $2482 = { (responsible $2483) ->
                $2484 = $2475
              }
              $2485 = call $153 with $2477 $2478 $2482 ($1347 is responsible)
            }
            # Core:iterator:withIndex:11:5:isMatch:else
            $2486 = { (responsible $2487) ->
              $2488 = $2458
            }
            $2489 = call $153 with $2460 $2461 $2486 ($1347 is responsible)
          }
          # Core:iterator:withIndex:11:5:equals:else
          $2490 = { (responsible $2491) ->
            $2492 = call $169 with $2443 ($1347 is responsible)
            $2493 = call $168 with $202 $2492 ($1347 is responsible)
            $2494 = call $168 with $2493 $210 ($1347 is responsible)
            $2495 = ($180, $2494)
          }
          $2496 = call $153 with $2444 $2445 $2490 ($1347 is responsible)
        }
        # Core:iterator:withIndex:11:5:equals:else
        $2497 = { (responsible $2498) ->
          $2499 = call $169 with $2438 ($1347 is responsible)
          $2500 = $1115
        }
        $2501 = call $153 with $2439 $2440 $2497 ($1347 is responsible)
      }
      # Core:iterator:withIndex:11:5:equals:else
      $2502 = { (responsible $2503) ->
        $2504 = call $169 with $2434 ($1347 is responsible)
        $2505 = call $168 with $1412 $2504 ($1347 is responsible)
        $2506 = call $168 with $2505 $195 ($1347 is responsible)
        $2507 = ($180, $2506)
      }
      $2508 = call $153 with $2435 $2436 $2502 ($1347 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2509 = { (responsible $2510) ->
      $2511 = call $169 with $2430 ($1347 is responsible)
      $2512 = call $168 with $203 $2511 ($1347 is responsible)
      $2513 = call $168 with $2512 $210 ($1347 is responsible)
      $2514 = ($180, $2513)
    }
    $2515 = call $153 with $2431 $2432 $2509 ($1347 is responsible)
    $2516 = call $160 with $2515 $187 ($1347 is responsible)
    $2517 = call $151 with $2516 $178 ($1347 is responsible)
    # Core:iterator:withIndex:11:5:case-1:matched
    $2518 = { (responsible $2519) ->
      $2520 = call $160 with $2515 $188 ($1349 is responsible)
      $2521 = call $160 with $2515 $189 ($1350 is responsible)
      $2522 = [$1399: $2520, $1398: $2390]
      $2523 = call $170 with $2390 ($68 is responsible)
      $2524 = call $151 with $2523 $175 ($69 is responsible)
      $2525 = call $253 with $2524 $211 $1348 ($19 is responsible)
      $2526 = call $154 with $2390 $188 ($18 is responsible)
      $2527 = [$1398: $2526, $1400: $2521]
      $2528 = [$1399: $2522, $1405: $2527]
      $2529 = More $2528
    }
    # Core:iterator:withIndex:11:5:case-1:didNotMatch
    $2530 = { (responsible $2531) ->
      $2532 = call $160 with $2515 $188 ($1347 is responsible)
      $2533 = panicking because $206 ($1347 is at fault)
    }
    $2534 = call $153 with $2517 $2518 $2530 ($1347 is responsible)
  }
  $2535 = call $153 with $2426 $1688 $2427 ($1347 is responsible)
}
# Core:iterator:ensure
$2536 = { $2537 $2538 (+ responsible $2539) ->
  $2540 = call $1135 with $2538 ($1195 is responsible)
  $2541 = call $253 with $2540 $1435 $2539 ($1191 is responsible)
  # Core:iterator:ensure:14
  $2542 = { (responsible $2543) ->
    $2544 = panicking because $1430 ($2539 is at fault)
  }
  $2545 = call $1691 with $2537 $2542 ($1192 is responsible)
  # Core:iterator:ensure:19
  $2546 = { $2547 (+ responsible $2548) ->
    $2549 = $2547
    $2550 = call $2538 with $2547 ($1193 is responsible)
    $2551 = $2549
  }
  $2552 = call $2171 with $2545 $2546 ($1194 is responsible)
}
# Core:iterator:foldLeft
$2553 = { $2554 $2555 $2556 (+ responsible $2557) ->
  # Core:iterator:foldLeft:2
  $2558 = { (responsible $2559) ->
    $2560 = panicking because $1431 ($2557 is at fault)
  }
  $2561 = call $1691 with $2554 $2558 ($1208 is responsible)
  $2562 = call $1050 with $2556 ($1196 is responsible)
  $2563 = call $253 with $2562 $1440 $2557 ($1197 is responsible)
  $2564 = [$1406: $2555, $1400: $2561]
  # Core:iterator:foldLeft:23
  $2565 = { $2566 $2567 (+ responsible $2568) ->
    $2569 = call $170 with $2567 ($1198 is responsible)
    $2570 = call $151 with $183 $2569 ($1198 is responsible)
    # Core:iterator:foldLeft:23:1:equals:then
    $2571 = { (responsible $2572) ->
      $2573 = call $164 with $2567 $1400 ($1198 is responsible)
      # Core:iterator:foldLeft:23:1:hasKey:then
      $2574 = { (responsible $2575) ->
        $2576 = call $163 with $2567 $1400 ($1198 is responsible)
        $2577 = ($178, $2576)
      }
      # Core:iterator:foldLeft:23:1:hasKey:else
      $2578 = { (responsible $2579) ->
        $2580 = call $169 with $2567 ($1198 is responsible)
        $2581 = call $168 with $1417 $2580 ($1198 is responsible)
        $2582 = call $168 with $2581 $210 ($1198 is responsible)
        $2583 = ($180, $2582)
      }
      $2584 = call $153 with $2573 $2574 $2578 ($1198 is responsible)
      $2585 = call $160 with $2584 $187 ($1198 is responsible)
      $2586 = call $151 with $2585 $178 ($1198 is responsible)
      # Core:iterator:foldLeft:23:1:isMatch:then
      $2587 = { (responsible $2588) ->
        $2589 = call $160 with $2584 $188 ($1198 is responsible)
        $2590 = call $164 with $2567 $1406 ($1198 is responsible)
        # Core:iterator:foldLeft:23:1:hasKey:then
        $2591 = { (responsible $2592) ->
          $2593 = call $163 with $2567 $1406 ($1198 is responsible)
          $2594 = ($178, $2593)
        }
        # Core:iterator:foldLeft:23:1:hasKey:else
        $2595 = { (responsible $2596) ->
          $2597 = call $169 with $2567 ($1198 is responsible)
          $2598 = call $168 with $1421 $2597 ($1198 is responsible)
          $2599 = call $168 with $2598 $210 ($1198 is responsible)
          $2600 = ($180, $2599)
        }
        $2601 = call $153 with $2590 $2591 $2595 ($1198 is responsible)
        $2602 = call $160 with $2601 $187 ($1198 is responsible)
        $2603 = call $151 with $2602 $178 ($1198 is responsible)
        # Core:iterator:foldLeft:23:1:isMatch:then
        $2604 = { (responsible $2605) ->
          $2606 = call $160 with $2601 $188 ($1198 is responsible)
          $2607 = ($178, $2589, $2606)
        }
        # Core:iterator:foldLeft:23:1:isMatch:else
        $2608 = { (responsible $2609) ->
          $2610 = $2601
        }
        $2611 = call $153 with $2603 $2604 $2608 ($1198 is responsible)
      }
      # Core:iterator:foldLeft:23:1:isMatch:else
      $2612 = { (responsible $2613) ->
        $2614 = $2584
      }
      $2615 = call $153 with $2586 $2587 $2612 ($1198 is responsible)
    }
    # Core:iterator:foldLeft:23:1:equals:else
    $2616 = { (responsible $2617) ->
      $2618 = call $169 with $2569 ($1198 is responsible)
      $2619 = call $168 with $202 $2618 ($1198 is responsible)
      $2620 = call $168 with $2619 $210 ($1198 is responsible)
      $2621 = ($180, $2620)
    }
    $2622 = call $153 with $2570 $2571 $2616 ($1198 is responsible)
    $2623 = call $160 with $2622 $187 ($1198 is responsible)
    $2624 = call $151 with $2623 $178 ($1198 is responsible)
    # Core:iterator:foldLeft:23:1:isMatch:else
    $2625 = { (responsible $2626) ->
      $2627 = call $160 with $2622 $188 ($1198 is responsible)
      $2628 = panicking because $2627 ($1198 is at fault)
    }
    $2629 = call $153 with $2624 $250 $2625 ($1198 is responsible)
    $2630 = call $160 with $2622 $188 ($1205 is responsible)
    $2631 = call $160 with $2622 $189 ($1206 is responsible)
    $2632 = call $1910 with $2630 ($1199 is responsible)
    $2633 = call $170 with $2632 ($1200 is responsible)
    $2634 = call $151 with $184 $2633 ($1200 is responsible)
    # Core:iterator:foldLeft:23:5:equals:then
    $2635 = { (responsible $2636) ->
      $2637 = call $167 with $2632 ($1200 is responsible)
      $2638 = call $151 with $1396 $2637 ($1200 is responsible)
      # Core:iterator:foldLeft:23:5:equals:then
      $2639 = { (responsible $2640) ->
        $2641 = call $166 with $2632 ($1200 is responsible)
        $2642 = call $151 with $172 $2641 ($1200 is responsible)
        # Core:iterator:foldLeft:23:5:equals:else
        $2643 = { (responsible $2644) ->
          $2645 = call $169 with $2641 ($1200 is responsible)
          $2646 = call $165 with $2632 ($1200 is responsible)
          $2647 = call $169 with $2646 ($1200 is responsible)
          $2648 = call $168 with $205 $2647 ($1200 is responsible)
          $2649 = call $168 with $2648 $210 ($1200 is responsible)
          $2650 = ($180, $2649)
        }
        $2651 = call $153 with $2642 $278 $2643 ($1200 is responsible)
      }
      # Core:iterator:foldLeft:23:5:equals:else
      $2652 = { (responsible $2653) ->
        $2654 = call $169 with $2637 ($1200 is responsible)
        $2655 = call $168 with $1409 $2654 ($1200 is responsible)
        $2656 = call $168 with $2655 $195 ($1200 is responsible)
        $2657 = ($180, $2656)
      }
      $2658 = call $153 with $2638 $2639 $2652 ($1200 is responsible)
    }
    # Core:iterator:foldLeft:23:5:equals:else
    $2659 = { (responsible $2660) ->
      $2661 = call $169 with $2633 ($1200 is responsible)
      $2662 = call $168 with $203 $2661 ($1200 is responsible)
      $2663 = call $168 with $2662 $210 ($1200 is responsible)
      $2664 = ($180, $2663)
    }
    $2665 = call $153 with $2634 $2635 $2659 ($1200 is responsible)
    $2666 = call $160 with $2665 $187 ($1200 is responsible)
    $2667 = call $151 with $2666 $178 ($1200 is responsible)
    # Core:iterator:foldLeft:23:5:case-0:matched
    $2668 = { (responsible $2669) ->
      $2670 = $2631
    }
    # Core:iterator:foldLeft:23:5:case-0:didNotMatch
    $2671 = { (responsible $2672) ->
      $2673 = call $160 with $2665 $188 ($1200 is responsible)
      $2674 = call $170 with $2632 ($1200 is responsible)
      $2675 = call $151 with $184 $2674 ($1200 is responsible)
      # Core:iterator:foldLeft:23:5:equals:then
      $2676 = { (responsible $2677) ->
        $2678 = call $167 with $2632 ($1200 is responsible)
        $2679 = call $151 with $1401 $2678 ($1200 is responsible)
        # Core:iterator:foldLeft:23:5:equals:then
        $2680 = { (responsible $2681) ->
          $2682 = call $166 with $2632 ($1200 is responsible)
          $2683 = call $151 with $186 $2682 ($1200 is responsible)
          # Core:iterator:foldLeft:23:5:equals:then
          $2684 = { (responsible $2685) ->
            $2686 = call $165 with $2632 ($1200 is responsible)
            $2687 = call $170 with $2686 ($1200 is responsible)
            $2688 = call $151 with $183 $2687 ($1200 is responsible)
            # Core:iterator:foldLeft:23:5:equals:then
            $2689 = { (responsible $2690) ->
              $2691 = call $164 with $2686 $1399 ($1200 is responsible)
              # Core:iterator:foldLeft:23:5:hasKey:then
              $2692 = { (responsible $2693) ->
                $2694 = call $163 with $2686 $1399 ($1200 is responsible)
                $2695 = ($178, $2694)
              }
              # Core:iterator:foldLeft:23:5:hasKey:else
              $2696 = { (responsible $2697) ->
                $2698 = call $169 with $2686 ($1200 is responsible)
                $2699 = call $168 with $1416 $2698 ($1200 is responsible)
                $2700 = call $168 with $2699 $210 ($1200 is responsible)
                $2701 = ($180, $2700)
              }
              $2702 = call $153 with $2691 $2692 $2696 ($1200 is responsible)
              $2703 = call $160 with $2702 $187 ($1200 is responsible)
              $2704 = call $151 with $2703 $178 ($1200 is responsible)
              # Core:iterator:foldLeft:23:5:isMatch:then
              $2705 = { (responsible $2706) ->
                $2707 = call $160 with $2702 $188 ($1200 is responsible)
                $2708 = call $164 with $2686 $1404 ($1200 is responsible)
                # Core:iterator:foldLeft:23:5:hasKey:then
                $2709 = { (responsible $2710) ->
                  $2711 = call $163 with $2686 $1404 ($1200 is responsible)
                  $2712 = ($178, $2711)
                }
                # Core:iterator:foldLeft:23:5:hasKey:else
                $2713 = { (responsible $2714) ->
                  $2715 = call $169 with $2686 ($1200 is responsible)
                  $2716 = call $168 with $1419 $2715 ($1200 is responsible)
                  $2717 = call $168 with $2716 $210 ($1200 is responsible)
                  $2718 = ($180, $2717)
                }
                $2719 = call $153 with $2708 $2709 $2713 ($1200 is responsible)
                $2720 = call $160 with $2719 $187 ($1200 is responsible)
                $2721 = call $151 with $2720 $178 ($1200 is responsible)
                # Core:iterator:foldLeft:23:5:isMatch:then
                $2722 = { (responsible $2723) ->
                  $2724 = call $160 with $2719 $188 ($1200 is responsible)
                  $2725 = ($178, $2707, $2724)
                }
                # Core:iterator:foldLeft:23:5:isMatch:else
                $2726 = { (responsible $2727) ->
                  $2728 = $2719
                }
                $2729 = call $153 with $2721 $2722 $2726 ($1200 is responsible)
              }
              # Core:iterator:foldLeft:23:5:isMatch:else
              $2730 = { (responsible $2731) ->
                $2732 = $2702
              }
              $2733 = call $153 with $2704 $2705 $2730 ($1200 is responsible)
            }
            # Core:iterator:foldLeft:23:5:equals:else
            $2734 = { (responsible $2735) ->
              $2736 = call $169 with $2687 ($1200 is responsible)
              $2737 = call $168 with $202 $2736 ($1200 is responsible)
              $2738 = call $168 with $2737 $210 ($1200 is responsible)
              $2739 = ($180, $2738)
            }
            $2740 = call $153 with $2688 $2689 $2734 ($1200 is responsible)
          }
          # Core:iterator:foldLeft:23:5:equals:else
          $2741 = { (responsible $2742) ->
            $2743 = call $169 with $2682 ($1200 is responsible)
            $2744 = $1115
          }
          $2745 = call $153 with $2683 $2684 $2741 ($1200 is responsible)
        }
        # Core:iterator:foldLeft:23:5:equals:else
        $2746 = { (responsible $2747) ->
          $2748 = call $169 with $2678 ($1200 is responsible)
          $2749 = call $168 with $1412 $2748 ($1200 is responsible)
          $2750 = call $168 with $2749 $195 ($1200 is responsible)
          $2751 = ($180, $2750)
        }
        $2752 = call $153 with $2679 $2680 $2746 ($1200 is responsible)
      }
      # Core:iterator:foldLeft:23:5:equals:else
      $2753 = { (responsible $2754) ->
        $2755 = call $169 with $2674 ($1200 is responsible)
        $2756 = call $168 with $203 $2755 ($1200 is responsible)
        $2757 = call $168 with $2756 $210 ($1200 is responsible)
        $2758 = ($180, $2757)
      }
      $2759 = call $153 with $2675 $2676 $2753 ($1200 is responsible)
      $2760 = call $160 with $2759 $187 ($1200 is responsible)
      $2761 = call $151 with $2760 $178 ($1200 is responsible)
      # Core:iterator:foldLeft:23:5:case-1:matched
      $2762 = { (responsible $2763) ->
        $2764 = call $160 with $2759 $188 ($1203 is responsible)
        $2765 = call $160 with $2759 $189 ($1204 is responsible)
        $2766 = call $2556 with $2631 $2764 ($1202 is responsible)
        $2767 = [$1400: $2765, $1406: $2766]
        $2768 = call $2566 with $2767 ($1201 is responsible)
      }
      # Core:iterator:foldLeft:23:5:case-1:didNotMatch
      $2769 = { (responsible $2770) ->
        $2771 = call $160 with $2759 $188 ($1200 is responsible)
        $2772 = panicking because $206 ($1200 is at fault)
      }
      $2773 = call $153 with $2761 $2762 $2769 ($1200 is responsible)
    }
    $2774 = call $153 with $2667 $2668 $2671 ($1200 is responsible)
  }
  $2775 = call $1050 with $2565 ($123 is responsible)
  $2776 = call $253 with $2775 $207 $1207 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $2777 = { $2778 $2779 (+ responsible $2780) ->
    # Core:controlFlow:recursive:18:0
    $2781 = { $2782 (+ responsible $2783) ->
      $2784 = call $2778 with $2778 $2782 ($120 is responsible)
    }
    $2785 = call $2565 with $2781 $2779 ($121 is responsible)
  }
  $2786 = call $2777 with $2777 $2564 ($122 is responsible)
}
$2787 = Error $1408
# Core:iterator:reduceLeft:18:case-0:matched
$2788 = { (responsible $2789) ->
  $2790 = $2787
}
# Core:iterator:reduceLeft
$2791 = { $2792 $2793 (+ responsible $2794) ->
  $2795 = call $1050 with $2793 ($1268 is responsible)
  $2796 = call $253 with $2795 $1440 $2794 ($1261 is responsible)
  # Core:iterator:reduceLeft:14
  $2797 = { (responsible $2798) ->
    $2799 = panicking because $1458 ($2794 is at fault)
  }
  $2800 = call $1691 with $2792 $2797 ($1262 is responsible)
  $2801 = call $1910 with $2800 ($1263 is responsible)
  $2802 = call $170 with $2801 ($1264 is responsible)
  $2803 = call $151 with $184 $2802 ($1264 is responsible)
  # Core:iterator:reduceLeft:18:equals:then
  $2804 = { (responsible $2805) ->
    $2806 = call $167 with $2801 ($1264 is responsible)
    $2807 = call $151 with $1396 $2806 ($1264 is responsible)
    # Core:iterator:reduceLeft:18:equals:then
    $2808 = { (responsible $2809) ->
      $2810 = call $166 with $2801 ($1264 is responsible)
      $2811 = call $151 with $172 $2810 ($1264 is responsible)
      # Core:iterator:reduceLeft:18:equals:else
      $2812 = { (responsible $2813) ->
        $2814 = call $169 with $2810 ($1264 is responsible)
        $2815 = call $165 with $2801 ($1264 is responsible)
        $2816 = call $169 with $2815 ($1264 is responsible)
        $2817 = call $168 with $205 $2816 ($1264 is responsible)
        $2818 = call $168 with $2817 $210 ($1264 is responsible)
        $2819 = ($180, $2818)
      }
      $2820 = call $153 with $2811 $278 $2812 ($1264 is responsible)
    }
    # Core:iterator:reduceLeft:18:equals:else
    $2821 = { (responsible $2822) ->
      $2823 = call $169 with $2806 ($1264 is responsible)
      $2824 = call $168 with $1409 $2823 ($1264 is responsible)
      $2825 = call $168 with $2824 $195 ($1264 is responsible)
      $2826 = ($180, $2825)
    }
    $2827 = call $153 with $2807 $2808 $2821 ($1264 is responsible)
  }
  # Core:iterator:reduceLeft:18:equals:else
  $2828 = { (responsible $2829) ->
    $2830 = call $169 with $2802 ($1264 is responsible)
    $2831 = call $168 with $203 $2830 ($1264 is responsible)
    $2832 = call $168 with $2831 $210 ($1264 is responsible)
    $2833 = ($180, $2832)
  }
  $2834 = call $153 with $2803 $2804 $2828 ($1264 is responsible)
  $2835 = call $160 with $2834 $187 ($1264 is responsible)
  $2836 = call $151 with $2835 $178 ($1264 is responsible)
  # Core:iterator:reduceLeft:18:case-0:didNotMatch
  $2837 = { (responsible $2838) ->
    $2839 = call $160 with $2834 $188 ($1264 is responsible)
    $2840 = call $170 with $2801 ($1264 is responsible)
    $2841 = call $151 with $184 $2840 ($1264 is responsible)
    # Core:iterator:reduceLeft:18:equals:then
    $2842 = { (responsible $2843) ->
      $2844 = call $167 with $2801 ($1264 is responsible)
      $2845 = call $151 with $1401 $2844 ($1264 is responsible)
      # Core:iterator:reduceLeft:18:equals:then
      $2846 = { (responsible $2847) ->
        $2848 = call $166 with $2801 ($1264 is responsible)
        $2849 = call $151 with $186 $2848 ($1264 is responsible)
        # Core:iterator:reduceLeft:18:equals:then
        $2850 = { (responsible $2851) ->
          $2852 = call $165 with $2801 ($1264 is responsible)
          $2853 = call $170 with $2852 ($1264 is responsible)
          $2854 = call $151 with $183 $2853 ($1264 is responsible)
          # Core:iterator:reduceLeft:18:equals:then
          $2855 = { (responsible $2856) ->
            $2857 = call $164 with $2852 $1399 ($1264 is responsible)
            # Core:iterator:reduceLeft:18:hasKey:then
            $2858 = { (responsible $2859) ->
              $2860 = call $163 with $2852 $1399 ($1264 is responsible)
              $2861 = ($178, $2860)
            }
            # Core:iterator:reduceLeft:18:hasKey:else
            $2862 = { (responsible $2863) ->
              $2864 = call $169 with $2852 ($1264 is responsible)
              $2865 = call $168 with $1416 $2864 ($1264 is responsible)
              $2866 = call $168 with $2865 $210 ($1264 is responsible)
              $2867 = ($180, $2866)
            }
            $2868 = call $153 with $2857 $2858 $2862 ($1264 is responsible)
            $2869 = call $160 with $2868 $187 ($1264 is responsible)
            $2870 = call $151 with $2869 $178 ($1264 is responsible)
            # Core:iterator:reduceLeft:18:isMatch:then
            $2871 = { (responsible $2872) ->
              $2873 = call $160 with $2868 $188 ($1264 is responsible)
              $2874 = call $164 with $2852 $1404 ($1264 is responsible)
              # Core:iterator:reduceLeft:18:hasKey:then
              $2875 = { (responsible $2876) ->
                $2877 = call $163 with $2852 $1404 ($1264 is responsible)
                $2878 = ($178, $2877)
              }
              # Core:iterator:reduceLeft:18:hasKey:else
              $2879 = { (responsible $2880) ->
                $2881 = call $169 with $2852 ($1264 is responsible)
                $2882 = call $168 with $1419 $2881 ($1264 is responsible)
                $2883 = call $168 with $2882 $210 ($1264 is responsible)
                $2884 = ($180, $2883)
              }
              $2885 = call $153 with $2874 $2875 $2879 ($1264 is responsible)
              $2886 = call $160 with $2885 $187 ($1264 is responsible)
              $2887 = call $151 with $2886 $178 ($1264 is responsible)
              # Core:iterator:reduceLeft:18:isMatch:then
              $2888 = { (responsible $2889) ->
                $2890 = call $160 with $2885 $188 ($1264 is responsible)
                $2891 = ($178, $2873, $2890)
              }
              # Core:iterator:reduceLeft:18:isMatch:else
              $2892 = { (responsible $2893) ->
                $2894 = $2885
              }
              $2895 = call $153 with $2887 $2888 $2892 ($1264 is responsible)
            }
            # Core:iterator:reduceLeft:18:isMatch:else
            $2896 = { (responsible $2897) ->
              $2898 = $2868
            }
            $2899 = call $153 with $2870 $2871 $2896 ($1264 is responsible)
          }
          # Core:iterator:reduceLeft:18:equals:else
          $2900 = { (responsible $2901) ->
            $2902 = call $169 with $2853 ($1264 is responsible)
            $2903 = call $168 with $202 $2902 ($1264 is responsible)
            $2904 = call $168 with $2903 $210 ($1264 is responsible)
            $2905 = ($180, $2904)
          }
          $2906 = call $153 with $2854 $2855 $2900 ($1264 is responsible)
        }
        # Core:iterator:reduceLeft:18:equals:else
        $2907 = { (responsible $2908) ->
          $2909 = call $169 with $2848 ($1264 is responsible)
          $2910 = $1115
        }
        $2911 = call $153 with $2849 $2850 $2907 ($1264 is responsible)
      }
      # Core:iterator:reduceLeft:18:equals:else
      $2912 = { (responsible $2913) ->
        $2914 = call $169 with $2844 ($1264 is responsible)
        $2915 = call $168 with $1412 $2914 ($1264 is responsible)
        $2916 = call $168 with $2915 $195 ($1264 is responsible)
        $2917 = ($180, $2916)
      }
      $2918 = call $153 with $2845 $2846 $2912 ($1264 is responsible)
    }
    # Core:iterator:reduceLeft:18:equals:else
    $2919 = { (responsible $2920) ->
      $2921 = call $169 with $2840 ($1264 is responsible)
      $2922 = call $168 with $203 $2921 ($1264 is responsible)
      $2923 = call $168 with $2922 $210 ($1264 is responsible)
      $2924 = ($180, $2923)
    }
    $2925 = call $153 with $2841 $2842 $2919 ($1264 is responsible)
    $2926 = call $160 with $2925 $187 ($1264 is responsible)
    $2927 = call $151 with $2926 $178 ($1264 is responsible)
    # Core:iterator:reduceLeft:18:case-1:matched
    $2928 = { (responsible $2929) ->
      $2930 = call $160 with $2925 $188 ($1266 is responsible)
      $2931 = call $160 with $2925 $189 ($1267 is responsible)
      $2932 = call $2553 with $2931 $2930 $2793 ($1265 is responsible)
      $2933 = Ok $2932
    }
    # Core:iterator:reduceLeft:18:case-1:didNotMatch
    $2934 = { (responsible $2935) ->
      $2936 = call $160 with $2925 $188 ($1264 is responsible)
      $2937 = panicking because $206 ($1264 is at fault)
    }
    $2938 = call $153 with $2927 $2928 $2934 ($1264 is responsible)
  }
  $2939 = call $153 with $2836 $2788 $2837 ($1264 is responsible)
}
# Core:iterator:sum:8
$2940 = { $2941 $2942 (+ responsible $2943) ->
  $2944 = call $170 with $2941 ($68 is responsible)
  $2945 = call $151 with $2944 $175 ($69 is responsible)
  $2946 = call $253 with $2945 $211 $1288 ($19 is responsible)
  $2947 = call $170 with $2942 ($68 is responsible)
  $2948 = call $151 with $2947 $175 ($69 is responsible)
  $2949 = call $253 with $2948 $213 $1288 ($17 is responsible)
  $2950 = call $154 with $2941 $2942 ($18 is responsible)
}
# Core:iterator:sum
$2951 = { $2952 (+ responsible $2953) ->
  # Core:iterator:sum:2
  $2954 = { (responsible $2955) ->
    $2956 = panicking because $1460 ($2953 is at fault)
  }
  $2957 = call $1691 with $2952 $2954 ($1285 is responsible)
  # Core:iterator:sum:5
  $2958 = { $2959 (+ responsible $2960) ->
    $2961 = call $170 with $2959 ($70 is responsible)
    $2962 = call $151 with $2961 $175 ($1 is responsible)
    $2963 = call $253 with $2962 $1414 $2953 ($1286 is responsible)
  }
  $2964 = call $2536 with $2957 $2958 ($1287 is responsible)
  $2965 = call $2791 with $2964 $2940 ($1289 is responsible)
  $2966 = call $1658 with $2965 $187 ($1284 is responsible)
}
# Core:iterator:length:5
$2967 = { $2968 (+ responsible $2969) ->
  $2970 = $188
}
# Core:iterator:all
$2971 = { $2972 $2973 (+ responsible $2974) ->
  $2975 = call $1135 with $2973 ($1177 is responsible)
  $2976 = call $253 with $2975 $1438 $2974 ($1170 is responsible)
  # Core:iterator:all:14
  $2977 = { (responsible $2978) ->
    $2979 = panicking because $1425 ($2974 is at fault)
  }
  $2980 = call $1691 with $2972 $2977 ($1171 is responsible)
  # Core:iterator:all:18
  $2981 = { $2982 $2983 (+ responsible $2984) ->
    $2985 = call $2973 with $2983 ($1174 is responsible)
    $2986 = call $666 with $2985 ($1172 is responsible)
    $2987 = call $253 with $2986 $1428 $2974 ($1173 is responsible)
    $2988 = call $666 with $2982 ($72 is responsible)
    $2989 = call $253 with $2988 $231 $1175 ($73 is responsible)
    $2990 = call $666 with $2985 ($74 is responsible)
    $2991 = call $253 with $2990 $232 $1175 ($75 is responsible)
    # Core:bool:and:12
    $2992 = { (responsible $2993) ->
      $2994 = $2985
    }
    $2995 = call $834 with $2982 $2992 ($71 is responsible)
  }
  $2996 = call $2553 with $2980 $186 $2981 ($1176 is responsible)
}
# Core:iterator:any
$2997 = { $2998 $2999 (+ responsible $3000) ->
  $3001 = call $1135 with $2999 ($1185 is responsible)
  $3002 = call $253 with $3001 $1438 $3000 ($1178 is responsible)
  # Core:iterator:any:14
  $3003 = { (responsible $3004) ->
    $3005 = panicking because $1426 ($3000 is at fault)
  }
  $3006 = call $1691 with $2998 $3003 ($1179 is responsible)
  # Core:iterator:any:18
  $3007 = { $3008 $3009 (+ responsible $3010) ->
    $3011 = call $2999 with $3009 ($1182 is responsible)
    $3012 = call $666 with $3011 ($1180 is responsible)
    $3013 = call $253 with $3012 $1428 $3000 ($1181 is responsible)
    $3014 = call $666 with $3008 ($97 is responsible)
    $3015 = call $253 with $3014 $231 $1183 ($98 is responsible)
    $3016 = call $666 with $3011 ($99 is responsible)
    $3017 = call $253 with $3016 $232 $1183 ($100 is responsible)
    # Core:bool:or:12
    $3018 = { (responsible $3019) ->
      $3020 = $3011
    }
    $3021 = call $928 with $3008 $3018 ($96 is responsible)
  }
  $3022 = call $2553 with $3006 $172 $3007 ($1184 is responsible)
}
# Core:iterator:joinToText
$3023 = { $3024 (+ responsible $3025) ->
  # Core:iterator:joinToText:2
  $3026 = { (responsible $3027) ->
    $3028 = panicking because $1453 ($3025 is at fault)
  }
  $3029 = call $1691 with $3024 $3026 ($1244 is responsible)
  # Core:iterator:joinToText:12
  $3030 = { $3031 $3032 (+ responsible $3033) ->
    $3034 = call $170 with $3032 ($70 is responsible)
    $3035 = call $151 with $3034 $185 ($1 is responsible)
    $3036 = call $253 with $3035 $1463 $3025 ($1241 is responsible)
    $3037 = call $170 with $3031 ($68 is responsible)
    $3038 = call $151 with $3037 $185 ($69 is responsible)
    $3039 = call $253 with $3038 $212 $1242 ($66 is responsible)
    $3040 = call $170 with $3032 ($68 is responsible)
    $3041 = call $151 with $3040 $185 ($69 is responsible)
    $3042 = call $253 with $3041 $214 $1242 ($64 is responsible)
    $3043 = call $168 with $3031 $3032 ($65 is responsible)
  }
  $3044 = call $2553 with $3029 $1407 $3030 ($1243 is responsible)
}
# Core:iterator:where
$3045 = { $3046 $3047 (+ responsible $3048) ->
  # Core:iterator:where:2
  $3049 = { (responsible $3050) ->
    $3051 = panicking because $1465 ($3048 is at fault)
  }
  $3052 = call $1691 with $3046 $3049 ($1328 is responsible)
  $3053 = call $1135 with $3047 ($1313 is responsible)
  $3054 = call $253 with $3053 $1438 $3048 ($1314 is responsible)
  # Core:iterator:where:19
  $3055 = { $3056 $3057 (+ responsible $3058) ->
    # Core:iterator:where:19:2
    $3059 = { $3060 (+ responsible $3061) ->
      $3062 = call $1910 with $3060 ($1315 is responsible)
      $3063 = call $170 with $3062 ($1316 is responsible)
      $3064 = call $151 with $184 $3063 ($1316 is responsible)
      # Core:iterator:where:19:2:3:equals:then
      $3065 = { (responsible $3066) ->
        $3067 = call $167 with $3062 ($1316 is responsible)
        $3068 = call $151 with $1396 $3067 ($1316 is responsible)
        # Core:iterator:where:19:2:3:equals:then
        $3069 = { (responsible $3070) ->
          $3071 = call $166 with $3062 ($1316 is responsible)
          $3072 = call $151 with $172 $3071 ($1316 is responsible)
          # Core:iterator:where:19:2:3:equals:else
          $3073 = { (responsible $3074) ->
            $3075 = call $169 with $3071 ($1316 is responsible)
            $3076 = call $165 with $3062 ($1316 is responsible)
            $3077 = call $169 with $3076 ($1316 is responsible)
            $3078 = call $168 with $205 $3077 ($1316 is responsible)
            $3079 = call $168 with $3078 $210 ($1316 is responsible)
            $3080 = ($180, $3079)
          }
          $3081 = call $153 with $3072 $278 $3073 ($1316 is responsible)
        }
        # Core:iterator:where:19:2:3:equals:else
        $3082 = { (responsible $3083) ->
          $3084 = call $169 with $3067 ($1316 is responsible)
          $3085 = call $168 with $1409 $3084 ($1316 is responsible)
          $3086 = call $168 with $3085 $195 ($1316 is responsible)
          $3087 = ($180, $3086)
        }
        $3088 = call $153 with $3068 $3069 $3082 ($1316 is responsible)
      }
      # Core:iterator:where:19:2:3:equals:else
      $3089 = { (responsible $3090) ->
        $3091 = call $169 with $3063 ($1316 is responsible)
        $3092 = call $168 with $203 $3091 ($1316 is responsible)
        $3093 = call $168 with $3092 $210 ($1316 is responsible)
        $3094 = ($180, $3093)
      }
      $3095 = call $153 with $3064 $3065 $3089 ($1316 is responsible)
      $3096 = call $160 with $3095 $187 ($1316 is responsible)
      $3097 = call $151 with $3096 $178 ($1316 is responsible)
      # Core:iterator:where:19:2:3:case-0:didNotMatch
      $3098 = { (responsible $3099) ->
        $3100 = call $160 with $3095 $188 ($1316 is responsible)
        $3101 = call $170 with $3062 ($1316 is responsible)
        $3102 = call $151 with $184 $3101 ($1316 is responsible)
        # Core:iterator:where:19:2:3:equals:then
        $3103 = { (responsible $3104) ->
          $3105 = call $167 with $3062 ($1316 is responsible)
          $3106 = call $151 with $1401 $3105 ($1316 is responsible)
          # Core:iterator:where:19:2:3:equals:then
          $3107 = { (responsible $3108) ->
            $3109 = call $166 with $3062 ($1316 is responsible)
            $3110 = call $151 with $186 $3109 ($1316 is responsible)
            # Core:iterator:where:19:2:3:equals:then
            $3111 = { (responsible $3112) ->
              $3113 = call $165 with $3062 ($1316 is responsible)
              $3114 = call $170 with $3113 ($1316 is responsible)
              $3115 = call $151 with $183 $3114 ($1316 is responsible)
              # Core:iterator:where:19:2:3:equals:then
              $3116 = { (responsible $3117) ->
                $3118 = call $164 with $3113 $1399 ($1316 is responsible)
                # Core:iterator:where:19:2:3:hasKey:then
                $3119 = { (responsible $3120) ->
                  $3121 = call $163 with $3113 $1399 ($1316 is responsible)
                  $3122 = ($178, $3121)
                }
                # Core:iterator:where:19:2:3:hasKey:else
                $3123 = { (responsible $3124) ->
                  $3125 = call $169 with $3113 ($1316 is responsible)
                  $3126 = call $168 with $1416 $3125 ($1316 is responsible)
                  $3127 = call $168 with $3126 $210 ($1316 is responsible)
                  $3128 = ($180, $3127)
                }
                $3129 = call $153 with $3118 $3119 $3123 ($1316 is responsible)
                $3130 = call $160 with $3129 $187 ($1316 is responsible)
                $3131 = call $151 with $3130 $178 ($1316 is responsible)
                # Core:iterator:where:19:2:3:isMatch:then
                $3132 = { (responsible $3133) ->
                  $3134 = call $160 with $3129 $188 ($1316 is responsible)
                  $3135 = call $164 with $3113 $1404 ($1316 is responsible)
                  # Core:iterator:where:19:2:3:hasKey:then
                  $3136 = { (responsible $3137) ->
                    $3138 = call $163 with $3113 $1404 ($1316 is responsible)
                    $3139 = ($178, $3138)
                  }
                  # Core:iterator:where:19:2:3:hasKey:else
                  $3140 = { (responsible $3141) ->
                    $3142 = call $169 with $3113 ($1316 is responsible)
                    $3143 = call $168 with $1419 $3142 ($1316 is responsible)
                    $3144 = call $168 with $3143 $210 ($1316 is responsible)
                    $3145 = ($180, $3144)
                  }
                  $3146 = call $153 with $3135 $3136 $3140 ($1316 is responsible)
                  $3147 = call $160 with $3146 $187 ($1316 is responsible)
                  $3148 = call $151 with $3147 $178 ($1316 is responsible)
                  # Core:iterator:where:19:2:3:isMatch:then
                  $3149 = { (responsible $3150) ->
                    $3151 = call $160 with $3146 $188 ($1316 is responsible)
                    $3152 = ($178, $3134, $3151)
                  }
                  # Core:iterator:where:19:2:3:isMatch:else
                  $3153 = { (responsible $3154) ->
                    $3155 = $3146
                  }
                  $3156 = call $153 with $3148 $3149 $3153 ($1316 is responsible)
                }
                # Core:iterator:where:19:2:3:isMatch:else
                $3157 = { (responsible $3158) ->
                  $3159 = $3129
                }
                $3160 = call $153 with $3131 $3132 $3157 ($1316 is responsible)
              }
              # Core:iterator:where:19:2:3:equals:else
              $3161 = { (responsible $3162) ->
                $3163 = call $169 with $3114 ($1316 is responsible)
                $3164 = call $168 with $202 $3163 ($1316 is responsible)
                $3165 = call $168 with $3164 $210 ($1316 is responsible)
                $3166 = ($180, $3165)
              }
              $3167 = call $153 with $3115 $3116 $3161 ($1316 is responsible)
            }
            # Core:iterator:where:19:2:3:equals:else
            $3168 = { (responsible $3169) ->
              $3170 = call $169 with $3109 ($1316 is responsible)
              $3171 = $1115
            }
            $3172 = call $153 with $3110 $3111 $3168 ($1316 is responsible)
          }
          # Core:iterator:where:19:2:3:equals:else
          $3173 = { (responsible $3174) ->
            $3175 = call $169 with $3105 ($1316 is responsible)
            $3176 = call $168 with $1412 $3175 ($1316 is responsible)
            $3177 = call $168 with $3176 $195 ($1316 is responsible)
            $3178 = ($180, $3177)
          }
          $3179 = call $153 with $3106 $3107 $3173 ($1316 is responsible)
        }
        # Core:iterator:where:19:2:3:equals:else
        $3180 = { (responsible $3181) ->
          $3182 = call $169 with $3101 ($1316 is responsible)
          $3183 = call $168 with $203 $3182 ($1316 is responsible)
          $3184 = call $168 with $3183 $210 ($1316 is responsible)
          $3185 = ($180, $3184)
        }
        $3186 = call $153 with $3102 $3103 $3180 ($1316 is responsible)
        $3187 = call $160 with $3186 $187 ($1316 is responsible)
        $3188 = call $151 with $3187 $178 ($1316 is responsible)
        # Core:iterator:where:19:2:3:case-1:matched
        $3189 = { (responsible $3190) ->
          $3191 = call $160 with $3186 $188 ($1324 is responsible)
          $3192 = call $160 with $3186 $189 ($1325 is responsible)
          $3193 = call $3047 with $3191 ($1317 is responsible)
          # Core:iterator:where:19:2:3:5
          $3194 = { (responsible $3195) ->
            $3196 = [$1399: $3191, $1405: $3192]
            $3197 = More $3196
          }
          # Core:iterator:where:19:2:3:6
          $3198 = { (responsible $3199) ->
            $3200 = call $3056 with $3192 ($1318 is responsible)
            $3201 = call $1910 with $3200 ($1319 is responsible)
            $3202 = call $170 with $3201 ($1320 is responsible)
            $3203 = call $151 with $184 $3202 ($1320 is responsible)
            # Core:iterator:where:19:2:3:6:5:equals:then
            $3204 = { (responsible $3205) ->
              $3206 = call $167 with $3201 ($1320 is responsible)
              $3207 = call $151 with $1396 $3206 ($1320 is responsible)
              # Core:iterator:where:19:2:3:6:5:equals:then
              $3208 = { (responsible $3209) ->
                $3210 = call $166 with $3201 ($1320 is responsible)
                $3211 = call $151 with $172 $3210 ($1320 is responsible)
                # Core:iterator:where:19:2:3:6:5:equals:else
                $3212 = { (responsible $3213) ->
                  $3214 = call $169 with $3210 ($1320 is responsible)
                  $3215 = call $165 with $3201 ($1320 is responsible)
                  $3216 = call $169 with $3215 ($1320 is responsible)
                  $3217 = call $168 with $205 $3216 ($1320 is responsible)
                  $3218 = call $168 with $3217 $210 ($1320 is responsible)
                  $3219 = ($180, $3218)
                }
                $3220 = call $153 with $3211 $278 $3212 ($1320 is responsible)
              }
              # Core:iterator:where:19:2:3:6:5:equals:else
              $3221 = { (responsible $3222) ->
                $3223 = call $169 with $3206 ($1320 is responsible)
                $3224 = call $168 with $1409 $3223 ($1320 is responsible)
                $3225 = call $168 with $3224 $195 ($1320 is responsible)
                $3226 = ($180, $3225)
              }
              $3227 = call $153 with $3207 $3208 $3221 ($1320 is responsible)
            }
            # Core:iterator:where:19:2:3:6:5:equals:else
            $3228 = { (responsible $3229) ->
              $3230 = call $169 with $3202 ($1320 is responsible)
              $3231 = call $168 with $203 $3230 ($1320 is responsible)
              $3232 = call $168 with $3231 $210 ($1320 is responsible)
              $3233 = ($180, $3232)
            }
            $3234 = call $153 with $3203 $3204 $3228 ($1320 is responsible)
            $3235 = call $160 with $3234 $187 ($1320 is responsible)
            $3236 = call $151 with $3235 $178 ($1320 is responsible)
            # Core:iterator:where:19:2:3:6:5:case-0:didNotMatch
            $3237 = { (responsible $3238) ->
              $3239 = call $160 with $3234 $188 ($1320 is responsible)
              $3240 = call $170 with $3201 ($1320 is responsible)
              $3241 = call $151 with $184 $3240 ($1320 is responsible)
              # Core:iterator:where:19:2:3:6:5:equals:then
              $3242 = { (responsible $3243) ->
                $3244 = call $167 with $3201 ($1320 is responsible)
                $3245 = call $151 with $1401 $3244 ($1320 is responsible)
                # Core:iterator:where:19:2:3:6:5:equals:then
                $3246 = { (responsible $3247) ->
                  $3248 = call $166 with $3201 ($1320 is responsible)
                  $3249 = call $151 with $186 $3248 ($1320 is responsible)
                  # Core:iterator:where:19:2:3:6:5:equals:then
                  $3250 = { (responsible $3251) ->
                    $3252 = call $165 with $3201 ($1320 is responsible)
                    $3253 = call $170 with $3252 ($1320 is responsible)
                    $3254 = call $151 with $183 $3253 ($1320 is responsible)
                    # Core:iterator:where:19:2:3:6:5:equals:then
                    $3255 = { (responsible $3256) ->
                      $3257 = call $164 with $3252 $1399 ($1320 is responsible)
                      # Core:iterator:where:19:2:3:6:5:hasKey:then
                      $3258 = { (responsible $3259) ->
                        $3260 = call $163 with $3252 $1399 ($1320 is responsible)
                        $3261 = ($178, $3260)
                      }
                      # Core:iterator:where:19:2:3:6:5:hasKey:else
                      $3262 = { (responsible $3263) ->
                        $3264 = call $169 with $3252 ($1320 is responsible)
                        $3265 = call $168 with $1416 $3264 ($1320 is responsible)
                        $3266 = call $168 with $3265 $210 ($1320 is responsible)
                        $3267 = ($180, $3266)
                      }
                      $3268 = call $153 with $3257 $3258 $3262 ($1320 is responsible)
                      $3269 = call $160 with $3268 $187 ($1320 is responsible)
                      $3270 = call $151 with $3269 $178 ($1320 is responsible)
                      # Core:iterator:where:19:2:3:6:5:isMatch:then
                      $3271 = { (responsible $3272) ->
                        $3273 = call $160 with $3268 $188 ($1320 is responsible)
                        $3274 = call $164 with $3252 $1404 ($1320 is responsible)
                        # Core:iterator:where:19:2:3:6:5:hasKey:then
                        $3275 = { (responsible $3276) ->
                          $3277 = call $163 with $3252 $1404 ($1320 is responsible)
                          $3278 = ($178, $3277)
                        }
                        # Core:iterator:where:19:2:3:6:5:hasKey:else
                        $3279 = { (responsible $3280) ->
                          $3281 = call $169 with $3252 ($1320 is responsible)
                          $3282 = call $168 with $1419 $3281 ($1320 is responsible)
                          $3283 = call $168 with $3282 $210 ($1320 is responsible)
                          $3284 = ($180, $3283)
                        }
                        $3285 = call $153 with $3274 $3275 $3279 ($1320 is responsible)
                        $3286 = call $160 with $3285 $187 ($1320 is responsible)
                        $3287 = call $151 with $3286 $178 ($1320 is responsible)
                        # Core:iterator:where:19:2:3:6:5:isMatch:then
                        $3288 = { (responsible $3289) ->
                          $3290 = call $160 with $3285 $188 ($1320 is responsible)
                          $3291 = ($178, $3273, $3290)
                        }
                        # Core:iterator:where:19:2:3:6:5:isMatch:else
                        $3292 = { (responsible $3293) ->
                          $3294 = $3285
                        }
                        $3295 = call $153 with $3287 $3288 $3292 ($1320 is responsible)
                      }
                      # Core:iterator:where:19:2:3:6:5:isMatch:else
                      $3296 = { (responsible $3297) ->
                        $3298 = $3268
                      }
                      $3299 = call $153 with $3270 $3271 $3296 ($1320 is responsible)
                    }
                    # Core:iterator:where:19:2:3:6:5:equals:else
                    $3300 = { (responsible $3301) ->
                      $3302 = call $169 with $3253 ($1320 is responsible)
                      $3303 = call $168 with $202 $3302 ($1320 is responsible)
                      $3304 = call $168 with $3303 $210 ($1320 is responsible)
                      $3305 = ($180, $3304)
                    }
                    $3306 = call $153 with $3254 $3255 $3300 ($1320 is responsible)
                  }
                  # Core:iterator:where:19:2:3:6:5:equals:else
                  $3307 = { (responsible $3308) ->
                    $3309 = call $169 with $3248 ($1320 is responsible)
                    $3310 = $1115
                  }
                  $3311 = call $153 with $3249 $3250 $3307 ($1320 is responsible)
                }
                # Core:iterator:where:19:2:3:6:5:equals:else
                $3312 = { (responsible $3313) ->
                  $3314 = call $169 with $3244 ($1320 is responsible)
                  $3315 = call $168 with $1412 $3314 ($1320 is responsible)
                  $3316 = call $168 with $3315 $195 ($1320 is responsible)
                  $3317 = ($180, $3316)
                }
                $3318 = call $153 with $3245 $3246 $3312 ($1320 is responsible)
              }
              # Core:iterator:where:19:2:3:6:5:equals:else
              $3319 = { (responsible $3320) ->
                $3321 = call $169 with $3240 ($1320 is responsible)
                $3322 = call $168 with $203 $3321 ($1320 is responsible)
                $3323 = call $168 with $3322 $210 ($1320 is responsible)
                $3324 = ($180, $3323)
              }
              $3325 = call $153 with $3241 $3242 $3319 ($1320 is responsible)
              $3326 = call $160 with $3325 $187 ($1320 is responsible)
              $3327 = call $151 with $3326 $178 ($1320 is responsible)
              # Core:iterator:where:19:2:3:6:5:case-1:matched
              $3328 = { (responsible $3329) ->
                $3330 = call $160 with $3325 $188 ($1321 is responsible)
                $3331 = call $160 with $3325 $189 ($1322 is responsible)
                $3332 = [$1399: $3330, $1405: $3331]
                $3333 = More $3332
              }
              # Core:iterator:where:19:2:3:6:5:case-1:didNotMatch
              $3334 = { (responsible $3335) ->
                $3336 = call $160 with $3325 $188 ($1320 is responsible)
                $3337 = panicking because $206 ($1320 is at fault)
              }
              $3338 = call $153 with $3327 $3328 $3334 ($1320 is responsible)
            }
            $3339 = call $153 with $3236 $1688 $3237 ($1320 is responsible)
          }
          $3340 = call $494 with $3193 $3194 $3198 ($1323 is responsible)
        }
        # Core:iterator:where:19:2:3:case-1:didNotMatch
        $3341 = { (responsible $3342) ->
          $3343 = call $160 with $3186 $188 ($1316 is responsible)
          $3344 = panicking because $206 ($1316 is at fault)
        }
        $3345 = call $153 with $3188 $3189 $3341 ($1316 is responsible)
      }
      $3346 = call $153 with $3097 $1688 $3098 ($1316 is responsible)
    }
    $3347 = call $1959 with $3057 $3059 ($1326 is responsible)
  }
  $3348 = call $1050 with $3055 ($123 is responsible)
  $3349 = call $253 with $3348 $207 $1327 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $3350 = { $3351 $3352 (+ responsible $3353) ->
    # Core:controlFlow:recursive:18:0
    $3354 = { $3355 (+ responsible $3356) ->
      $3357 = call $3351 with $3351 $3355 ($120 is responsible)
    }
    $3358 = call $3055 with $3354 $3352 ($121 is responsible)
  }
  $3359 = call $3350 with $3350 $3052 ($122 is responsible)
}
# Core:iterator:takeWhile
$3360 = { $3361 $3362 (+ responsible $3363) ->
  # Core:iterator:takeWhile:2
  $3364 = { (responsible $3365) ->
    $3366 = panicking because $1461 ($3363 is at fault)
  }
  $3367 = call $1691 with $3361 $3364 ($1302 is responsible)
  # Core:iterator:takeWhile:7
  $3368 = { $3369 (+ responsible $3370) ->
    $3371 = call $1910 with $3369 ($1303 is responsible)
    $3372 = call $170 with $3371 ($1304 is responsible)
    $3373 = call $151 with $184 $3372 ($1304 is responsible)
    # Core:iterator:takeWhile:7:3:equals:then
    $3374 = { (responsible $3375) ->
      $3376 = call $167 with $3371 ($1304 is responsible)
      $3377 = call $151 with $1396 $3376 ($1304 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $3378 = { (responsible $3379) ->
        $3380 = call $166 with $3371 ($1304 is responsible)
        $3381 = call $151 with $172 $3380 ($1304 is responsible)
        # Core:iterator:takeWhile:7:3:equals:else
        $3382 = { (responsible $3383) ->
          $3384 = call $169 with $3380 ($1304 is responsible)
          $3385 = call $165 with $3371 ($1304 is responsible)
          $3386 = call $169 with $3385 ($1304 is responsible)
          $3387 = call $168 with $205 $3386 ($1304 is responsible)
          $3388 = call $168 with $3387 $210 ($1304 is responsible)
          $3389 = ($180, $3388)
        }
        $3390 = call $153 with $3381 $278 $3382 ($1304 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $3391 = { (responsible $3392) ->
        $3393 = call $169 with $3376 ($1304 is responsible)
        $3394 = call $168 with $1409 $3393 ($1304 is responsible)
        $3395 = call $168 with $3394 $195 ($1304 is responsible)
        $3396 = ($180, $3395)
      }
      $3397 = call $153 with $3377 $3378 $3391 ($1304 is responsible)
    }
    # Core:iterator:takeWhile:7:3:equals:else
    $3398 = { (responsible $3399) ->
      $3400 = call $169 with $3372 ($1304 is responsible)
      $3401 = call $168 with $203 $3400 ($1304 is responsible)
      $3402 = call $168 with $3401 $210 ($1304 is responsible)
      $3403 = ($180, $3402)
    }
    $3404 = call $153 with $3373 $3374 $3398 ($1304 is responsible)
    $3405 = call $160 with $3404 $187 ($1304 is responsible)
    $3406 = call $151 with $3405 $178 ($1304 is responsible)
    # Core:iterator:takeWhile:7:3:case-0:didNotMatch
    $3407 = { (responsible $3408) ->
      $3409 = call $160 with $3404 $188 ($1304 is responsible)
      $3410 = call $170 with $3371 ($1304 is responsible)
      $3411 = call $151 with $184 $3410 ($1304 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $3412 = { (responsible $3413) ->
        $3414 = call $167 with $3371 ($1304 is responsible)
        $3415 = call $151 with $1401 $3414 ($1304 is responsible)
        # Core:iterator:takeWhile:7:3:equals:then
        $3416 = { (responsible $3417) ->
          $3418 = call $166 with $3371 ($1304 is responsible)
          $3419 = call $151 with $186 $3418 ($1304 is responsible)
          # Core:iterator:takeWhile:7:3:equals:then
          $3420 = { (responsible $3421) ->
            $3422 = call $165 with $3371 ($1304 is responsible)
            $3423 = call $170 with $3422 ($1304 is responsible)
            $3424 = call $151 with $183 $3423 ($1304 is responsible)
            # Core:iterator:takeWhile:7:3:equals:then
            $3425 = { (responsible $3426) ->
              $3427 = call $164 with $3422 $1399 ($1304 is responsible)
              # Core:iterator:takeWhile:7:3:hasKey:then
              $3428 = { (responsible $3429) ->
                $3430 = call $163 with $3422 $1399 ($1304 is responsible)
                $3431 = ($178, $3430)
              }
              # Core:iterator:takeWhile:7:3:hasKey:else
              $3432 = { (responsible $3433) ->
                $3434 = call $169 with $3422 ($1304 is responsible)
                $3435 = call $168 with $1416 $3434 ($1304 is responsible)
                $3436 = call $168 with $3435 $210 ($1304 is responsible)
                $3437 = ($180, $3436)
              }
              $3438 = call $153 with $3427 $3428 $3432 ($1304 is responsible)
              $3439 = call $160 with $3438 $187 ($1304 is responsible)
              $3440 = call $151 with $3439 $178 ($1304 is responsible)
              # Core:iterator:takeWhile:7:3:isMatch:then
              $3441 = { (responsible $3442) ->
                $3443 = call $160 with $3438 $188 ($1304 is responsible)
                $3444 = call $164 with $3422 $1404 ($1304 is responsible)
                # Core:iterator:takeWhile:7:3:hasKey:then
                $3445 = { (responsible $3446) ->
                  $3447 = call $163 with $3422 $1404 ($1304 is responsible)
                  $3448 = ($178, $3447)
                }
                # Core:iterator:takeWhile:7:3:hasKey:else
                $3449 = { (responsible $3450) ->
                  $3451 = call $169 with $3422 ($1304 is responsible)
                  $3452 = call $168 with $1419 $3451 ($1304 is responsible)
                  $3453 = call $168 with $3452 $210 ($1304 is responsible)
                  $3454 = ($180, $3453)
                }
                $3455 = call $153 with $3444 $3445 $3449 ($1304 is responsible)
                $3456 = call $160 with $3455 $187 ($1304 is responsible)
                $3457 = call $151 with $3456 $178 ($1304 is responsible)
                # Core:iterator:takeWhile:7:3:isMatch:then
                $3458 = { (responsible $3459) ->
                  $3460 = call $160 with $3455 $188 ($1304 is responsible)
                  $3461 = ($178, $3443, $3460)
                }
                # Core:iterator:takeWhile:7:3:isMatch:else
                $3462 = { (responsible $3463) ->
                  $3464 = $3455
                }
                $3465 = call $153 with $3457 $3458 $3462 ($1304 is responsible)
              }
              # Core:iterator:takeWhile:7:3:isMatch:else
              $3466 = { (responsible $3467) ->
                $3468 = $3438
              }
              $3469 = call $153 with $3440 $3441 $3466 ($1304 is responsible)
            }
            # Core:iterator:takeWhile:7:3:equals:else
            $3470 = { (responsible $3471) ->
              $3472 = call $169 with $3423 ($1304 is responsible)
              $3473 = call $168 with $202 $3472 ($1304 is responsible)
              $3474 = call $168 with $3473 $210 ($1304 is responsible)
              $3475 = ($180, $3474)
            }
            $3476 = call $153 with $3424 $3425 $3470 ($1304 is responsible)
          }
          # Core:iterator:takeWhile:7:3:equals:else
          $3477 = { (responsible $3478) ->
            $3479 = call $169 with $3418 ($1304 is responsible)
            $3480 = $1115
          }
          $3481 = call $153 with $3419 $3420 $3477 ($1304 is responsible)
        }
        # Core:iterator:takeWhile:7:3:equals:else
        $3482 = { (responsible $3483) ->
          $3484 = call $169 with $3414 ($1304 is responsible)
          $3485 = call $168 with $1412 $3484 ($1304 is responsible)
          $3486 = call $168 with $3485 $195 ($1304 is responsible)
          $3487 = ($180, $3486)
        }
        $3488 = call $153 with $3415 $3416 $3482 ($1304 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $3489 = { (responsible $3490) ->
        $3491 = call $169 with $3410 ($1304 is responsible)
        $3492 = call $168 with $203 $3491 ($1304 is responsible)
        $3493 = call $168 with $3492 $210 ($1304 is responsible)
        $3494 = ($180, $3493)
      }
      $3495 = call $153 with $3411 $3412 $3489 ($1304 is responsible)
      $3496 = call $160 with $3495 $187 ($1304 is responsible)
      $3497 = call $151 with $3496 $178 ($1304 is responsible)
      # Core:iterator:takeWhile:7:3:case-1:matched
      $3498 = { (responsible $3499) ->
        $3500 = call $160 with $3495 $188 ($1307 is responsible)
        $3501 = call $160 with $3495 $189 ($1308 is responsible)
        $3502 = call $3362 with $3500 ($1305 is responsible)
        # Core:iterator:takeWhile:7:3:5
        $3503 = { (responsible $3504) ->
          $3505 = [$1399: $3500, $1405: $3501]
          $3506 = More $3505
        }
        $3507 = call $494 with $3502 $3503 $1688 ($1306 is responsible)
      }
      # Core:iterator:takeWhile:7:3:case-1:didNotMatch
      $3508 = { (responsible $3509) ->
        $3510 = call $160 with $3495 $188 ($1304 is responsible)
        $3511 = panicking because $206 ($1304 is at fault)
      }
      $3512 = call $153 with $3497 $3498 $3508 ($1304 is responsible)
    }
    $3513 = call $153 with $3406 $1688 $3407 ($1304 is responsible)
  }
  $3514 = call $1959 with $3367 $3368 ($1309 is responsible)
}
# Core:iterator:withIndex:2
$3515 = { (responsible $3516) ->
  $3517 = panicking because $1467 ($1294 is at fault)
}
# Core:iterator:take:34
$3518 = { $3519 (+ responsible $3520) ->
  $3521 = call $170 with $3519 ($68 is responsible)
  $3522 = call $151 with $3521 $183 ($69 is responsible)
  $3523 = call $253 with $3522 $240 $1300 ($59 is responsible)
  $3524 = call $164 with $3519 $1399 ($56 is responsible)
  $3525 = call $253 with $3524 $241 $1300 ($57 is responsible)
  $3526 = call $163 with $3519 $1399 ($58 is responsible)
}
# Core:iterator:take
$3527 = { $3528 $3529 (+ responsible $3530) ->
  $3531 = call $170 with $3529 ($70 is responsible)
  $3532 = call $151 with $3531 $175 ($1 is responsible)
  $3533 = call $253 with $3532 $1443 $3530 ($1290 is responsible)
  $3534 = call $1104 with $3529 ($1291 is responsible)
  $3535 = call $253 with $3534 $1447 $3530 ($1292 is responsible)
  # Core:iterator:take:26
  $3536 = { (responsible $3537) ->
    $3538 = panicking because $1462 ($3530 is at fault)
  }
  $3539 = call $1691 with $3528 $3536 ($1293 is responsible)
  $3540 = call $1691 with $3539 $3515 ($1354 is responsible)
  $3541 = [$1400: $3540, $1398: $187]
  $3542 = call $1959 with $3541 $2325 ($1353 is responsible)
  # Core:iterator:take:31
  $3543 = { $3544 (+ responsible $3545) ->
    $3546 = call $170 with $3544 ($1295 is responsible)
    $3547 = call $151 with $183 $3546 ($1295 is responsible)
    # Core:iterator:take:31:1:equals:then
    $3548 = { (responsible $3549) ->
      $3550 = call $164 with $3544 $1399 ($1295 is responsible)
      # Core:iterator:take:31:1:hasKey:then
      $3551 = { (responsible $3552) ->
        $3553 = call $163 with $3544 $1399 ($1295 is responsible)
        $3554 = ($178, $3553)
      }
      # Core:iterator:take:31:1:hasKey:else
      $3555 = { (responsible $3556) ->
        $3557 = call $169 with $3544 ($1295 is responsible)
        $3558 = call $168 with $1416 $3557 ($1295 is responsible)
        $3559 = call $168 with $3558 $210 ($1295 is responsible)
        $3560 = ($180, $3559)
      }
      $3561 = call $153 with $3550 $3551 $3555 ($1295 is responsible)
      $3562 = call $160 with $3561 $187 ($1295 is responsible)
      $3563 = call $151 with $3562 $178 ($1295 is responsible)
      # Core:iterator:take:31:1:isMatch:then
      $3564 = { (responsible $3565) ->
        $3566 = call $160 with $3561 $188 ($1295 is responsible)
        $3567 = call $164 with $3544 $1398 ($1295 is responsible)
        # Core:iterator:take:31:1:hasKey:then
        $3568 = { (responsible $3569) ->
          $3570 = call $163 with $3544 $1398 ($1295 is responsible)
          $3571 = ($178, $3570)
        }
        # Core:iterator:take:31:1:hasKey:else
        $3572 = { (responsible $3573) ->
          $3574 = call $169 with $3544 ($1295 is responsible)
          $3575 = call $168 with $1415 $3574 ($1295 is responsible)
          $3576 = call $168 with $3575 $210 ($1295 is responsible)
          $3577 = ($180, $3576)
        }
        $3578 = call $153 with $3567 $3568 $3572 ($1295 is responsible)
        $3579 = call $160 with $3578 $187 ($1295 is responsible)
        $3580 = call $151 with $3579 $178 ($1295 is responsible)
        # Core:iterator:take:31:1:isMatch:then
        $3581 = { (responsible $3582) ->
          $3583 = call $160 with $3578 $188 ($1295 is responsible)
          $3584 = ($178, $3566, $3583)
        }
        # Core:iterator:take:31:1:isMatch:else
        $3585 = { (responsible $3586) ->
          $3587 = $3578
        }
        $3588 = call $153 with $3580 $3581 $3585 ($1295 is responsible)
      }
      # Core:iterator:take:31:1:isMatch:else
      $3589 = { (responsible $3590) ->
        $3591 = $3561
      }
      $3592 = call $153 with $3563 $3564 $3589 ($1295 is responsible)
    }
    # Core:iterator:take:31:1:equals:else
    $3593 = { (responsible $3594) ->
      $3595 = call $169 with $3546 ($1295 is responsible)
      $3596 = call $168 with $202 $3595 ($1295 is responsible)
      $3597 = call $168 with $3596 $210 ($1295 is responsible)
      $3598 = ($180, $3597)
    }
    $3599 = call $153 with $3547 $3548 $3593 ($1295 is responsible)
    $3600 = call $160 with $3599 $187 ($1295 is responsible)
    $3601 = call $151 with $3600 $178 ($1295 is responsible)
    # Core:iterator:take:31:1:isMatch:else
    $3602 = { (responsible $3603) ->
      $3604 = call $160 with $3599 $188 ($1295 is responsible)
      $3605 = panicking because $3604 ($1295 is at fault)
    }
    $3606 = call $153 with $3601 $250 $3602 ($1295 is responsible)
    $3607 = call $160 with $3599 $188 ($1298 is responsible)
    $3608 = call $160 with $3599 $189 ($1297 is responsible)
    $3609 = call $1080 with $3608 $3529 ($1296 is responsible)
  }
  $3610 = call $3360 with $3542 $3543 ($1299 is responsible)
  $3611 = call $2171 with $3610 $3518 ($1301 is responsible)
}
# Core:iterator:skip:30:6
$3612 = { $3613 $3614 (+ responsible $3615) ->
  $3616 = call $170 with $3614 ($1273 is responsible)
  $3617 = call $151 with $183 $3616 ($1273 is responsible)
  # Core:iterator:skip:30:6:1:equals:then
  $3618 = { (responsible $3619) ->
    $3620 = call $164 with $3614 $1400 ($1273 is responsible)
    # Core:iterator:skip:30:6:1:hasKey:then
    $3621 = { (responsible $3622) ->
      $3623 = call $163 with $3614 $1400 ($1273 is responsible)
      $3624 = ($178, $3623)
    }
    # Core:iterator:skip:30:6:1:hasKey:else
    $3625 = { (responsible $3626) ->
      $3627 = call $169 with $3614 ($1273 is responsible)
      $3628 = call $168 with $1417 $3627 ($1273 is responsible)
      $3629 = call $168 with $3628 $210 ($1273 is responsible)
      $3630 = ($180, $3629)
    }
    $3631 = call $153 with $3620 $3621 $3625 ($1273 is responsible)
    $3632 = call $160 with $3631 $187 ($1273 is responsible)
    $3633 = call $151 with $3632 $178 ($1273 is responsible)
    # Core:iterator:skip:30:6:1:isMatch:then
    $3634 = { (responsible $3635) ->
      $3636 = call $160 with $3631 $188 ($1273 is responsible)
      $3637 = call $164 with $3614 $1402 ($1273 is responsible)
      # Core:iterator:skip:30:6:1:hasKey:then
      $3638 = { (responsible $3639) ->
        $3640 = call $163 with $3614 $1402 ($1273 is responsible)
        $3641 = ($178, $3640)
      }
      # Core:iterator:skip:30:6:1:hasKey:else
      $3642 = { (responsible $3643) ->
        $3644 = call $169 with $3614 ($1273 is responsible)
        $3645 = call $168 with $1418 $3644 ($1273 is responsible)
        $3646 = call $168 with $3645 $210 ($1273 is responsible)
        $3647 = ($180, $3646)
      }
      $3648 = call $153 with $3637 $3638 $3642 ($1273 is responsible)
      $3649 = call $160 with $3648 $187 ($1273 is responsible)
      $3650 = call $151 with $3649 $178 ($1273 is responsible)
      # Core:iterator:skip:30:6:1:isMatch:then
      $3651 = { (responsible $3652) ->
        $3653 = call $160 with $3648 $188 ($1273 is responsible)
        $3654 = ($178, $3636, $3653)
      }
      # Core:iterator:skip:30:6:1:isMatch:else
      $3655 = { (responsible $3656) ->
        $3657 = $3648
      }
      $3658 = call $153 with $3650 $3651 $3655 ($1273 is responsible)
    }
    # Core:iterator:skip:30:6:1:isMatch:else
    $3659 = { (responsible $3660) ->
      $3661 = $3631
    }
    $3662 = call $153 with $3633 $3634 $3659 ($1273 is responsible)
  }
  # Core:iterator:skip:30:6:1:equals:else
  $3663 = { (responsible $3664) ->
    $3665 = call $169 with $3616 ($1273 is responsible)
    $3666 = call $168 with $202 $3665 ($1273 is responsible)
    $3667 = call $168 with $3666 $210 ($1273 is responsible)
    $3668 = ($180, $3667)
  }
  $3669 = call $153 with $3617 $3618 $3663 ($1273 is responsible)
  $3670 = call $160 with $3669 $187 ($1273 is responsible)
  $3671 = call $151 with $3670 $178 ($1273 is responsible)
  # Core:iterator:skip:30:6:1:isMatch:else
  $3672 = { (responsible $3673) ->
    $3674 = call $160 with $3669 $188 ($1273 is responsible)
    $3675 = panicking because $3674 ($1273 is at fault)
  }
  $3676 = call $153 with $3671 $250 $3672 ($1273 is responsible)
  $3677 = call $160 with $3669 $188 ($1281 is responsible)
  $3678 = call $160 with $3669 $189 ($1282 is responsible)
  $3679 = call $151 with $3678 $187 ($1 is responsible)
  # Core:iterator:skip:30:6:7
  $3680 = { (responsible $3681) ->
    $3682 = call $1910 with $3677 ($1274 is responsible)
  }
  # Core:iterator:skip:30:6:8
  $3683 = { (responsible $3684) ->
    $3685 = call $1910 with $3677 ($1275 is responsible)
    $3686 = call $170 with $3685 ($1276 is responsible)
    $3687 = call $151 with $184 $3686 ($1276 is responsible)
    # Core:iterator:skip:30:6:8:3:equals:then
    $3688 = { (responsible $3689) ->
      $3690 = call $167 with $3685 ($1276 is responsible)
      $3691 = call $151 with $1396 $3690 ($1276 is responsible)
      # Core:iterator:skip:30:6:8:3:equals:then
      $3692 = { (responsible $3693) ->
        $3694 = call $166 with $3685 ($1276 is responsible)
        $3695 = call $151 with $172 $3694 ($1276 is responsible)
        # Core:iterator:skip:30:6:8:3:equals:else
        $3696 = { (responsible $3697) ->
          $3698 = call $169 with $3694 ($1276 is responsible)
          $3699 = call $165 with $3685 ($1276 is responsible)
          $3700 = call $169 with $3699 ($1276 is responsible)
          $3701 = call $168 with $205 $3700 ($1276 is responsible)
          $3702 = call $168 with $3701 $210 ($1276 is responsible)
          $3703 = ($180, $3702)
        }
        $3704 = call $153 with $3695 $278 $3696 ($1276 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:equals:else
      $3705 = { (responsible $3706) ->
        $3707 = call $169 with $3690 ($1276 is responsible)
        $3708 = call $168 with $1409 $3707 ($1276 is responsible)
        $3709 = call $168 with $3708 $195 ($1276 is responsible)
        $3710 = ($180, $3709)
      }
      $3711 = call $153 with $3691 $3692 $3705 ($1276 is responsible)
    }
    # Core:iterator:skip:30:6:8:3:equals:else
    $3712 = { (responsible $3713) ->
      $3714 = call $169 with $3686 ($1276 is responsible)
      $3715 = call $168 with $203 $3714 ($1276 is responsible)
      $3716 = call $168 with $3715 $210 ($1276 is responsible)
      $3717 = ($180, $3716)
    }
    $3718 = call $153 with $3687 $3688 $3712 ($1276 is responsible)
    $3719 = call $160 with $3718 $187 ($1276 is responsible)
    $3720 = call $151 with $3719 $178 ($1276 is responsible)
    # Core:iterator:skip:30:6:8:3:case-0:didNotMatch
    $3721 = { (responsible $3722) ->
      $3723 = call $160 with $3718 $188 ($1276 is responsible)
      $3724 = call $170 with $3685 ($1276 is responsible)
      $3725 = call $151 with $184 $3724 ($1276 is responsible)
      # Core:iterator:skip:30:6:8:3:equals:then
      $3726 = { (responsible $3727) ->
        $3728 = call $167 with $3685 ($1276 is responsible)
        $3729 = call $151 with $1401 $3728 ($1276 is responsible)
        # Core:iterator:skip:30:6:8:3:equals:then
        $3730 = { (responsible $3731) ->
          $3732 = call $166 with $3685 ($1276 is responsible)
          $3733 = call $151 with $186 $3732 ($1276 is responsible)
          # Core:iterator:skip:30:6:8:3:equals:then
          $3734 = { (responsible $3735) ->
            $3736 = call $165 with $3685 ($1276 is responsible)
            $3737 = call $170 with $3736 ($1276 is responsible)
            $3738 = call $151 with $183 $3737 ($1276 is responsible)
            # Core:iterator:skip:30:6:8:3:equals:then
            $3739 = { (responsible $3740) ->
              $3741 = call $164 with $3736 $1404 ($1276 is responsible)
              # Core:iterator:skip:30:6:8:3:hasKey:then
              $3742 = { (responsible $3743) ->
                $3744 = call $163 with $3736 $1404 ($1276 is responsible)
                $3745 = ($178, $3744)
              }
              # Core:iterator:skip:30:6:8:3:hasKey:else
              $3746 = { (responsible $3747) ->
                $3748 = call $169 with $3736 ($1276 is responsible)
                $3749 = call $168 with $1419 $3748 ($1276 is responsible)
                $3750 = call $168 with $3749 $210 ($1276 is responsible)
                $3751 = ($180, $3750)
              }
              $3752 = call $153 with $3741 $3742 $3746 ($1276 is responsible)
              $3753 = call $160 with $3752 $187 ($1276 is responsible)
              $3754 = call $151 with $3753 $178 ($1276 is responsible)
              # Core:iterator:skip:30:6:8:3:isMatch:then
              $3755 = { (responsible $3756) ->
                $3757 = call $160 with $3752 $188 ($1276 is responsible)
                $3758 = ($178, $3757)
              }
              # Core:iterator:skip:30:6:8:3:isMatch:else
              $3759 = { (responsible $3760) ->
                $3761 = $3752
              }
              $3762 = call $153 with $3754 $3755 $3759 ($1276 is responsible)
            }
            # Core:iterator:skip:30:6:8:3:equals:else
            $3763 = { (responsible $3764) ->
              $3765 = call $169 with $3737 ($1276 is responsible)
              $3766 = call $168 with $202 $3765 ($1276 is responsible)
              $3767 = call $168 with $3766 $210 ($1276 is responsible)
              $3768 = ($180, $3767)
            }
            $3769 = call $153 with $3738 $3739 $3763 ($1276 is responsible)
          }
          # Core:iterator:skip:30:6:8:3:equals:else
          $3770 = { (responsible $3771) ->
            $3772 = call $169 with $3732 ($1276 is responsible)
            $3773 = $1115
          }
          $3774 = call $153 with $3733 $3734 $3770 ($1276 is responsible)
        }
        # Core:iterator:skip:30:6:8:3:equals:else
        $3775 = { (responsible $3776) ->
          $3777 = call $169 with $3728 ($1276 is responsible)
          $3778 = call $168 with $1412 $3777 ($1276 is responsible)
          $3779 = call $168 with $3778 $195 ($1276 is responsible)
          $3780 = ($180, $3779)
        }
        $3781 = call $153 with $3729 $3730 $3775 ($1276 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:equals:else
      $3782 = { (responsible $3783) ->
        $3784 = call $169 with $3724 ($1276 is responsible)
        $3785 = call $168 with $203 $3784 ($1276 is responsible)
        $3786 = call $168 with $3785 $210 ($1276 is responsible)
        $3787 = ($180, $3786)
      }
      $3788 = call $153 with $3725 $3726 $3782 ($1276 is responsible)
      $3789 = call $160 with $3788 $187 ($1276 is responsible)
      $3790 = call $151 with $3789 $178 ($1276 is responsible)
      # Core:iterator:skip:30:6:8:3:case-1:matched
      $3791 = { (responsible $3792) ->
        $3793 = call $160 with $3788 $188 ($1279 is responsible)
        $3794 = call $170 with $3678 ($68 is responsible)
        $3795 = call $151 with $3794 $175 ($69 is responsible)
        $3796 = call $253 with $3795 $239 $1277 ($30 is responsible)
        $3797 = call $159 with $3678 $188 ($29 is responsible)
        $3798 = [$1402: $3797, $1400: $3793]
        $3799 = call $3613 with $3798 ($1278 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:case-1:didNotMatch
      $3800 = { (responsible $3801) ->
        $3802 = call $160 with $3788 $188 ($1276 is responsible)
        $3803 = panicking because $206 ($1276 is at fault)
      }
      $3804 = call $153 with $3790 $3791 $3800 ($1276 is responsible)
    }
    $3805 = call $153 with $3720 $1688 $3721 ($1276 is responsible)
  }
  $3806 = call $494 with $3679 $3680 $3683 ($1280 is responsible)
}
# Core:controlFlow:recursive:18
$3807 = { $3808 $3809 (+ responsible $3810) ->
  # Core:controlFlow:recursive:18:0
  $3811 = { $3812 (+ responsible $3813) ->
    $3814 = call $3808 with $3808 $3812 ($120 is responsible)
  }
  $3815 = call $3612 with $3811 $3809 ($121 is responsible)
}
# Core:iterator:skip
$3816 = { $3817 $3818 (+ responsible $3819) ->
  # Core:iterator:skip:2
  $3820 = { (responsible $3821) ->
    $3822 = panicking because $1459 ($3819 is at fault)
  }
  $3823 = call $1691 with $3817 $3820 ($1272 is responsible)
  $3824 = call $170 with $3818 ($70 is responsible)
  $3825 = call $151 with $3824 $175 ($1 is responsible)
  $3826 = call $253 with $3825 $1443 $3819 ($1269 is responsible)
  $3827 = call $1104 with $3818 ($1270 is responsible)
  $3828 = call $253 with $3827 $1447 $3819 ($1271 is responsible)
  # Core:iterator:skip:30
  $3829 = { (responsible $3830) ->
    $3831 = [$1400: $3823, $1402: $3818]
    $3832 = call $1050 with $3612 ($123 is responsible)
    $3833 = call $253 with $3832 $207 $1283 ($119 is responsible)
    $3834 = call $3807 with $3807 $3831 ($122 is responsible)
  }
  $3835 = Iterator $3829
}
# Core:iterator:fromList
$3836 = { $3837 (+ responsible $3838) ->
  $3839 = call $170 with $3837 ($70 is responsible)
  $3840 = call $151 with $3839 $177 ($1 is responsible)
  $3841 = call $253 with $3840 $1455 $3838 ($1209 is responsible)
  $3842 = call $170 with $3837 ($68 is responsible)
  $3843 = call $151 with $3842 $177 ($69 is responsible)
  $3844 = call $253 with $3843 $238 $1210 ($55 is responsible)
  $3845 = call $162 with $3837 ($54 is responsible)
  # Core:iterator:fromList:23
  $3846 = { $3847 (+ responsible $3848) ->
    $3849 = call $600 with $3837 $3847 ($1211 is responsible)
  }
  $3850 = call $2138 with $3845 $3846 ($1212 is responsible)
}
$3851 = (,)
# Core:iterator:toList:6
$3852 = { $3853 $3854 (+ responsible $3855) ->
  $3856 = call $1676 with $3853 $3854 ($1311 is responsible)
}
# Core:iterator:toList:2
$3857 = { (responsible $3858) ->
  $3859 = panicking because $1464 ($1343 is at fault)
}
# Core:iterator:windowed
$3860 = { $3861 $3862 $3863 $3864 (+ responsible $3865) ->
  # Core:iterator:windowed:2
  $3866 = { (responsible $3867) ->
    $3868 = panicking because $1466 ($3865 is at fault)
  }
  $3869 = call $1691 with $3861 $3866 ($1332 is responsible)
  $3870 = call $170 with $3862 ($70 is responsible)
  $3871 = call $151 with $3870 $175 ($1 is responsible)
  $3872 = call $253 with $3871 $1444 $3865 ($1329 is responsible)
  $3873 = call $170 with $3862 ($70 is responsible)
  $3874 = call $151 with $3873 $175 ($1 is responsible)
  $3875 = call $253 with $3874 $235 $1330 ($1154 is responsible)
  $3876 = call $1092 with $3862 $187 ($1155 is responsible)
  $3877 = call $253 with $3876 $1448 $3865 ($1331 is responsible)
  $3878 = call $170 with $3863 ($70 is responsible)
  $3879 = call $151 with $3878 $175 ($1 is responsible)
  $3880 = call $253 with $3879 $1445 $3865 ($1333 is responsible)
  $3881 = call $170 with $3863 ($70 is responsible)
  $3882 = call $151 with $3881 $175 ($1 is responsible)
  $3883 = call $253 with $3882 $235 $1334 ($1154 is responsible)
  $3884 = call $1092 with $3863 $187 ($1155 is responsible)
  $3885 = call $253 with $3884 $1449 $3865 ($1335 is responsible)
  $3886 = call $666 with $3864 ($1336 is responsible)
  $3887 = call $253 with $3886 $1427 $3865 ($1337 is responsible)
  # Core:iterator:windowed:67
  $3888 = { $3889 (+ responsible $3890) ->
    $3891 = call $3527 with $3889 $3862 ($1342 is responsible)
    $3892 = call $1691 with $3891 $3857 ($1310 is responsible)
    $3893 = call $2553 with $3892 $3851 $3852 ($1312 is responsible)
    $3894 = call $170 with $3893 ($68 is responsible)
    $3895 = call $151 with $3894 $177 ($69 is responsible)
    $3896 = call $253 with $3895 $238 $1338 ($55 is responsible)
    $3897 = call $162 with $3893 ($54 is responsible)
    # Core:iterator:windowed:67:20
    $3898 = { (responsible $3899) ->
      $3900 = call $1092 with $3897 $187 ($1155 is responsible)
    }
    # Core:iterator:windowed:67:21
    $3901 = { (responsible $3902) ->
      $3903 = call $151 with $3897 $3862 ($1 is responsible)
    }
    $3904 = call $494 with $3864 $3898 $3901 ($1339 is responsible)
    # Core:iterator:windowed:67:26
    $3905 = { (responsible $3906) ->
      $3907 = call $3816 with $3889 $3863 ($1340 is responsible)
      $3908 = [$1399: $3893, $1405: $3907]
      $3909 = More $3908
    }
    $3910 = call $494 with $3904 $3905 $1688 ($1341 is responsible)
  }
  $3911 = call $1959 with $3869 $3888 ($1344 is responsible)
}
# Core:iterator:chunked
$3912 = { $3913 $3914 (+ responsible $3915) ->
  $3916 = call $170 with $3914 ($70 is responsible)
  $3917 = call $151 with $3916 $175 ($1 is responsible)
  $3918 = call $253 with $3917 $1444 $3915 ($1186 is responsible)
  $3919 = call $170 with $3914 ($70 is responsible)
  $3920 = call $151 with $3919 $175 ($1 is responsible)
  $3921 = call $253 with $3920 $235 $1187 ($1154 is responsible)
  $3922 = call $1092 with $3914 $187 ($1155 is responsible)
  $3923 = call $253 with $3922 $1448 $3915 ($1188 is responsible)
  # Core:iterator:chunked:26
  $3924 = { (responsible $3925) ->
    $3926 = panicking because $1429 ($3915 is at fault)
  }
  $3927 = call $1691 with $3913 $3924 ($1189 is responsible)
  $3928 = call $3860 with $3927 $3914 $3914 $186 ($1190 is responsible)
}
$3929 = ($188, $189, $190)
$3930 = call $3836 with $3929 ($1169 is responsible)
$3931 = 6
$3932 = 7
$3933 = 8
$3934 = 9
$3935 = ($188, $189, $190, $191, $192, $3931, $3932, $3933, $3934, $193)
$3936 = Core:iterator:123
$3937 = call $3836 with $3935 ($3936 is responsible)
$3938 = Core:iterator:127
$3939 = call $1910 with $3930 ($3938 is responsible)
$3940 = Core:iterator:128
$3941 = call $170 with $3939 ($3940 is responsible)
$3942 = call $151 with $184 $3941 ($3940 is responsible)
# Core:iterator:128:equals:then
$3943 = { (responsible $3944) ->
  $3945 = call $167 with $3939 ($3940 is responsible)
  $3946 = call $151 with $1401 $3945 ($3940 is responsible)
  # Core:iterator:128:equals:then
  $3947 = { (responsible $3948) ->
    $3949 = call $166 with $3939 ($3940 is responsible)
    $3950 = call $151 with $186 $3949 ($3940 is responsible)
    # Core:iterator:128:equals:then
    $3951 = { (responsible $3952) ->
      $3953 = call $165 with $3939 ($3940 is responsible)
      $3954 = call $170 with $3953 ($3940 is responsible)
      $3955 = call $151 with $183 $3954 ($3940 is responsible)
      # Core:iterator:128:equals:then
      $3956 = { (responsible $3957) ->
        $3958 = call $164 with $3953 $1399 ($3940 is responsible)
        # Core:iterator:128:hasKey:then
        $3959 = { (responsible $3960) ->
          $3961 = call $163 with $3953 $1399 ($3940 is responsible)
          $3962 = ($178, $3961)
        }
        # Core:iterator:128:hasKey:else
        $3963 = { (responsible $3964) ->
          $3965 = call $169 with $3953 ($3940 is responsible)
          $3966 = call $168 with $1416 $3965 ($3940 is responsible)
          $3967 = call $168 with $3966 $210 ($3940 is responsible)
          $3968 = ($180, $3967)
        }
        $3969 = call $153 with $3958 $3959 $3963 ($3940 is responsible)
        $3970 = call $160 with $3969 $187 ($3940 is responsible)
        $3971 = call $151 with $3970 $178 ($3940 is responsible)
        # Core:iterator:128:isMatch:then
        $3972 = { (responsible $3973) ->
          $3974 = call $160 with $3969 $188 ($3940 is responsible)
          $3975 = call $164 with $3953 $1404 ($3940 is responsible)
          # Core:iterator:128:hasKey:then
          $3976 = { (responsible $3977) ->
            $3978 = call $163 with $3953 $1404 ($3940 is responsible)
            $3979 = ($178, $3978)
          }
          # Core:iterator:128:hasKey:else
          $3980 = { (responsible $3981) ->
            $3982 = call $169 with $3953 ($3940 is responsible)
            $3983 = call $168 with $1419 $3982 ($3940 is responsible)
            $3984 = call $168 with $3983 $210 ($3940 is responsible)
            $3985 = ($180, $3984)
          }
          $3986 = call $153 with $3975 $3976 $3980 ($3940 is responsible)
          $3987 = call $160 with $3986 $187 ($3940 is responsible)
          $3988 = call $151 with $3987 $178 ($3940 is responsible)
          # Core:iterator:128:isMatch:then
          $3989 = { (responsible $3990) ->
            $3991 = call $160 with $3986 $188 ($3940 is responsible)
            $3992 = ($178, $3974, $3991)
          }
          # Core:iterator:128:isMatch:else
          $3993 = { (responsible $3994) ->
            $3995 = $3986
          }
          $3996 = call $153 with $3988 $3989 $3993 ($3940 is responsible)
        }
        # Core:iterator:128:isMatch:else
        $3997 = { (responsible $3998) ->
          $3999 = $3969
        }
        $4000 = call $153 with $3971 $3972 $3997 ($3940 is responsible)
      }
      # Core:iterator:128:equals:else
      $4001 = { (responsible $4002) ->
        $4003 = call $169 with $3954 ($3940 is responsible)
        $4004 = call $168 with $202 $4003 ($3940 is responsible)
        $4005 = call $168 with $4004 $210 ($3940 is responsible)
        $4006 = ($180, $4005)
      }
      $4007 = call $153 with $3955 $3956 $4001 ($3940 is responsible)
    }
    # Core:iterator:128:equals:else
    $4008 = { (responsible $4009) ->
      $4010 = call $169 with $3949 ($3940 is responsible)
      $4011 = $1115
    }
    $4012 = call $153 with $3950 $3951 $4008 ($3940 is responsible)
  }
  # Core:iterator:128:equals:else
  $4013 = { (responsible $4014) ->
    $4015 = call $169 with $3945 ($3940 is responsible)
    $4016 = call $168 with $1412 $4015 ($3940 is responsible)
    $4017 = call $168 with $4016 $195 ($3940 is responsible)
    $4018 = ($180, $4017)
  }
  $4019 = call $153 with $3946 $3947 $4013 ($3940 is responsible)
}
# Core:iterator:128:equals:else
$4020 = { (responsible $4021) ->
  $4022 = call $169 with $3941 ($3940 is responsible)
  $4023 = call $168 with $203 $4022 ($3940 is responsible)
  $4024 = call $168 with $4023 $210 ($3940 is responsible)
  $4025 = ($180, $4024)
}
$4026 = call $153 with $3942 $3943 $4020 ($3940 is responsible)
$4027 = call $160 with $4026 $187 ($3940 is responsible)
$4028 = call $151 with $4027 $178 ($3940 is responsible)
# Core:iterator:128:isMatch:else
$4029 = { (responsible $4030) ->
  $4031 = call $160 with $4026 $188 ($3940 is responsible)
  $4032 = panicking because $4031 ($3940 is at fault)
}
$4033 = call $153 with $4028 $250 $4029 ($3940 is responsible)
$4034 = Core:iterator:item
$4035 = call $160 with $4026 $188 ($4034 is responsible)
$4036 = Core:iterator:rest
$4037 = call $160 with $4026 $189 ($4036 is responsible)
$4038 = Core:iterator:133
$4039 = call $1022 with $4035 $188 ($4038 is responsible)
$4040 = Core:iterator:136
$4041 = call $1910 with $4037 ($4040 is responsible)
$4042 = Core:iterator:137
$4043 = call $170 with $4041 ($4042 is responsible)
$4044 = call $151 with $184 $4043 ($4042 is responsible)
# Core:iterator:137:equals:then
$4045 = { (responsible $4046) ->
  $4047 = call $167 with $4041 ($4042 is responsible)
  $4048 = call $151 with $1401 $4047 ($4042 is responsible)
  # Core:iterator:137:equals:then
  $4049 = { (responsible $4050) ->
    $4051 = call $166 with $4041 ($4042 is responsible)
    $4052 = call $151 with $186 $4051 ($4042 is responsible)
    # Core:iterator:137:equals:then
    $4053 = { (responsible $4054) ->
      $4055 = call $165 with $4041 ($4042 is responsible)
      $4056 = call $170 with $4055 ($4042 is responsible)
      $4057 = call $151 with $183 $4056 ($4042 is responsible)
      # Core:iterator:137:equals:then
      $4058 = { (responsible $4059) ->
        $4060 = call $164 with $4055 $1399 ($4042 is responsible)
        # Core:iterator:137:hasKey:then
        $4061 = { (responsible $4062) ->
          $4063 = call $163 with $4055 $1399 ($4042 is responsible)
          $4064 = ($178, $4063)
        }
        # Core:iterator:137:hasKey:else
        $4065 = { (responsible $4066) ->
          $4067 = call $169 with $4055 ($4042 is responsible)
          $4068 = call $168 with $1416 $4067 ($4042 is responsible)
          $4069 = call $168 with $4068 $210 ($4042 is responsible)
          $4070 = ($180, $4069)
        }
        $4071 = call $153 with $4060 $4061 $4065 ($4042 is responsible)
        $4072 = call $160 with $4071 $187 ($4042 is responsible)
        $4073 = call $151 with $4072 $178 ($4042 is responsible)
        # Core:iterator:137:isMatch:then
        $4074 = { (responsible $4075) ->
          $4076 = call $160 with $4071 $188 ($4042 is responsible)
          $4077 = call $164 with $4055 $1404 ($4042 is responsible)
          # Core:iterator:137:hasKey:then
          $4078 = { (responsible $4079) ->
            $4080 = call $163 with $4055 $1404 ($4042 is responsible)
            $4081 = ($178, $4080)
          }
          # Core:iterator:137:hasKey:else
          $4082 = { (responsible $4083) ->
            $4084 = call $169 with $4055 ($4042 is responsible)
            $4085 = call $168 with $1419 $4084 ($4042 is responsible)
            $4086 = call $168 with $4085 $210 ($4042 is responsible)
            $4087 = ($180, $4086)
          }
          $4088 = call $153 with $4077 $4078 $4082 ($4042 is responsible)
          $4089 = call $160 with $4088 $187 ($4042 is responsible)
          $4090 = call $151 with $4089 $178 ($4042 is responsible)
          # Core:iterator:137:isMatch:then
          $4091 = { (responsible $4092) ->
            $4093 = call $160 with $4088 $188 ($4042 is responsible)
            $4094 = ($178, $4076, $4093)
          }
          # Core:iterator:137:isMatch:else
          $4095 = { (responsible $4096) ->
            $4097 = $4088
          }
          $4098 = call $153 with $4090 $4091 $4095 ($4042 is responsible)
        }
        # Core:iterator:137:isMatch:else
        $4099 = { (responsible $4100) ->
          $4101 = $4071
        }
        $4102 = call $153 with $4073 $4074 $4099 ($4042 is responsible)
      }
      # Core:iterator:137:equals:else
      $4103 = { (responsible $4104) ->
        $4105 = call $169 with $4056 ($4042 is responsible)
        $4106 = call $168 with $202 $4105 ($4042 is responsible)
        $4107 = call $168 with $4106 $210 ($4042 is responsible)
        $4108 = ($180, $4107)
      }
      $4109 = call $153 with $4057 $4058 $4103 ($4042 is responsible)
    }
    # Core:iterator:137:equals:else
    $4110 = { (responsible $4111) ->
      $4112 = call $169 with $4051 ($4042 is responsible)
      $4113 = $1115
    }
    $4114 = call $153 with $4052 $4053 $4110 ($4042 is responsible)
  }
  # Core:iterator:137:equals:else
  $4115 = { (responsible $4116) ->
    $4117 = call $169 with $4047 ($4042 is responsible)
    $4118 = call $168 with $1412 $4117 ($4042 is responsible)
    $4119 = call $168 with $4118 $195 ($4042 is responsible)
    $4120 = ($180, $4119)
  }
  $4121 = call $153 with $4048 $4049 $4115 ($4042 is responsible)
}
# Core:iterator:137:equals:else
$4122 = { (responsible $4123) ->
  $4124 = call $169 with $4043 ($4042 is responsible)
  $4125 = call $168 with $203 $4124 ($4042 is responsible)
  $4126 = call $168 with $4125 $210 ($4042 is responsible)
  $4127 = ($180, $4126)
}
$4128 = call $153 with $4044 $4045 $4122 ($4042 is responsible)
$4129 = call $160 with $4128 $187 ($4042 is responsible)
$4130 = call $151 with $4129 $178 ($4042 is responsible)
# Core:iterator:137:isMatch:else
$4131 = { (responsible $4132) ->
  $4133 = call $160 with $4128 $188 ($4042 is responsible)
  $4134 = panicking because $4133 ($4042 is at fault)
}
$4135 = call $153 with $4130 $250 $4131 ($4042 is responsible)
$4136 = Core:iterator:item#1
$4137 = call $160 with $4128 $188 ($4136 is responsible)
$4138 = Core:iterator:rest#1
$4139 = call $160 with $4128 $189 ($4138 is responsible)
$4140 = Core:iterator:142
$4141 = call $1022 with $4137 $189 ($4140 is responsible)
$4142 = Core:iterator:147
# Core:iterator:isEmpty:2
$4143 = { (responsible $4144) ->
  $4145 = panicking because $1452 ($4142 is at fault)
}
$4146 = call $1691 with $3930 $4143 ($1239 is responsible)
$4147 = call $1910 with $4146 ($1240 is responsible)
$4148 = call $151 with $4147 $1396 ($1 is responsible)
$4149 = Core:iterator:149
$4150 = call $1022 with $4148 $172 ($4149 is responsible)
$4151 = Core:iterator:154
$4152 = call $3836 with $3851 ($4151 is responsible)
$4153 = Core:iterator:155
# Core:iterator:isEmpty:2
$4154 = { (responsible $4155) ->
  $4156 = panicking because $1452 ($4153 is at fault)
}
$4157 = call $1691 with $4152 $4154 ($1239 is responsible)
$4158 = call $1910 with $4157 ($1240 is responsible)
$4159 = call $151 with $4158 $1396 ($1 is responsible)
$4160 = Core:iterator:157
$4161 = call $1022 with $4159 $186 ($4160 is responsible)
$4162 = Core:iterator:161:10
# Core:iterator:161
$4163 = { $4164 (+ responsible $4165) ->
  $4166 = call $170 with $4164 ($68 is responsible)
  $4167 = call $151 with $4166 $175 ($69 is responsible)
  $4168 = call $253 with $4167 $220 $4162 ($26 is responsible)
  $4169 = call $157 with $4164 $189 ($25 is responsible)
}
$4170 = Core:iterator:162
$4171 = call $2171 with $3930 $4163 ($4170 is responsible)
$4172 = Core:iterator:164
# Core:iterator:toList:2
$4173 = { (responsible $4174) ->
  $4175 = panicking because $1464 ($4172 is at fault)
}
$4176 = call $1691 with $4171 $4173 ($1310 is responsible)
$4177 = call $2553 with $4176 $3851 $3852 ($1312 is responsible)
$4178 = ($189, $191, $3931)
$4179 = Core:iterator:169
$4180 = call $1022 with $4177 $4178 ($4179 is responsible)
$4181 = Core:iterator:173
$4182 = call $2951 with $3930 ($4181 is responsible)
$4183 = Core:iterator:175
$4184 = call $1022 with $4182 $3931 ($4183 is responsible)
$4185 = Core:iterator:179
# Core:iterator:length:2
$4186 = { (responsible $4187) ->
  $4188 = panicking because $1454 ($4185 is at fault)
}
$4189 = call $1691 with $3930 $4186 ($1245 is responsible)
$4190 = call $2171 with $4189 $2967 ($1246 is responsible)
$4191 = call $2951 with $4190 ($1247 is responsible)
$4192 = Core:iterator:181
$4193 = call $1022 with $4191 $190 ($4192 is responsible)
$4194 = Core:iterator:185:9
# Core:iterator:185
$4195 = { $4196 (+ responsible $4197) ->
  $4198 = call $170 with $4196 ($70 is responsible)
  $4199 = call $151 with $4198 $175 ($1 is responsible)
  $4200 = call $253 with $4199 $235 $4194 ($1154 is responsible)
  $4201 = call $1092 with $4196 $187 ($1155 is responsible)
}
$4202 = Core:iterator:186
$4203 = call $2971 with $3930 $4195 ($4202 is responsible)
$4204 = Core:iterator:188
$4205 = call $1022 with $4203 $186 ($4204 is responsible)
# Core:iterator:192
$4206 = { $4207 (+ responsible $4208) ->
  $4209 = call $151 with $4207 $189 ($1 is responsible)
}
$4210 = Core:iterator:193
$4211 = call $2997 with $3930 $4206 ($4210 is responsible)
$4212 = Core:iterator:195
$4213 = call $1022 with $4211 $186 ($4212 is responsible)
$4214 = Core:iterator:200
$4215 = call $2171 with $3930 $637 ($4214 is responsible)
$4216 = Core:iterator:202
$4217 = call $3023 with $4215 ($4216 is responsible)
$4218 = "123"
$4219 = Core:iterator:210
$4220 = call $1022 with $4217 $4218 ($4219 is responsible)
$4221 = Core:iterator:214:9
# Core:iterator:214
$4222 = { $4223 (+ responsible $4224) ->
  $4225 = call $1158 with $4223 ($4221 is responsible)
}
$4226 = Core:iterator:215
$4227 = call $3045 with $3937 $4222 ($4226 is responsible)
$4228 = Core:iterator:217
# Core:iterator:toList:2
$4229 = { (responsible $4230) ->
  $4231 = panicking because $1464 ($4228 is at fault)
}
$4232 = call $1691 with $4227 $4229 ($1310 is responsible)
$4233 = call $2553 with $4232 $3851 $3852 ($1312 is responsible)
$4234 = ($188, $190, $192, $3932, $3934)
$4235 = Core:iterator:224
$4236 = call $1022 with $4233 $4234 ($4235 is responsible)
$4237 = Core:iterator:228:10
# Core:iterator:228
$4238 = { $4239 (+ responsible $4240) ->
  $4241 = call $1080 with $4239 $191 ($4237 is responsible)
}
$4242 = Core:iterator:229
$4243 = call $3360 with $3937 $4238 ($4242 is responsible)
$4244 = Core:iterator:231
# Core:iterator:toList:2
$4245 = { (responsible $4246) ->
  $4247 = panicking because $1464 ($4244 is at fault)
}
$4248 = call $1691 with $4243 $4245 ($1310 is responsible)
$4249 = call $2553 with $4248 $3851 $3852 ($1312 is responsible)
$4250 = Core:iterator:236
$4251 = call $1022 with $4249 $3929 ($4250 is responsible)
$4252 = Core:iterator:241
$4253 = call $3527 with $3937 $191 ($4252 is responsible)
$4254 = Core:iterator:243
# Core:iterator:toList:2
$4255 = { (responsible $4256) ->
  $4257 = panicking because $1464 ($4254 is at fault)
}
$4258 = call $1691 with $4253 $4255 ($1310 is responsible)
$4259 = call $2553 with $4258 $3851 $3852 ($1312 is responsible)
$4260 = ($188, $189, $190, $191)
$4261 = Core:iterator:249
$4262 = call $1022 with $4259 $4260 ($4261 is responsible)
$4263 = 12
$4264 = Core:iterator:254
$4265 = call $3527 with $3937 $4263 ($4264 is responsible)
$4266 = Core:iterator:256
# Core:iterator:toList:2
$4267 = { (responsible $4268) ->
  $4269 = panicking because $1464 ($4266 is at fault)
}
$4270 = call $1691 with $4265 $4267 ($1310 is responsible)
$4271 = call $2553 with $4270 $3851 $3852 ($1312 is responsible)
$4272 = Core:iterator:268
$4273 = call $1022 with $4271 $3935 ($4272 is responsible)
$4274 = Core:iterator:273
$4275 = call $3816 with $3937 $191 ($4274 is responsible)
$4276 = Core:iterator:275
# Core:iterator:toList:2
$4277 = { (responsible $4278) ->
  $4279 = panicking because $1464 ($4276 is at fault)
}
$4280 = call $1691 with $4275 $4277 ($1310 is responsible)
$4281 = call $2553 with $4280 $3851 $3852 ($1312 is responsible)
$4282 = ($192, $3931, $3932, $3933, $3934, $193)
$4283 = Core:iterator:283
$4284 = call $1022 with $4281 $4282 ($4283 is responsible)
$4285 = 40
$4286 = Core:iterator:288
$4287 = call $3816 with $3937 $4285 ($4286 is responsible)
$4288 = Core:iterator:290
# Core:iterator:toList:2
$4289 = { (responsible $4290) ->
  $4291 = panicking because $1464 ($4288 is at fault)
}
$4292 = call $1691 with $4287 $4289 ($1310 is responsible)
$4293 = call $2553 with $4292 $3851 $3852 ($1312 is responsible)
$4294 = Core:iterator:292
$4295 = call $1022 with $4293 $3851 ($4294 is responsible)
$4296 = Core:iterator:299
$4297 = call $3860 with $3937 $191 $190 $172 ($4296 is responsible)
$4298 = Core:iterator:301
# Core:iterator:toList:2
$4299 = { (responsible $4300) ->
  $4301 = panicking because $1464 ($4298 is at fault)
}
$4302 = call $1691 with $4297 $4299 ($1310 is responsible)
$4303 = call $2553 with $4302 $3851 $3852 ($1312 is responsible)
$4304 = ($191, $192, $3931, $3932)
$4305 = ($3932, $3933, $3934, $193)
$4306 = ($4260, $4304, $4305)
$4307 = Core:iterator:318
$4308 = call $1022 with $4303 $4306 ($4307 is responsible)
$4309 = Core:iterator:323
$4310 = call $3912 with $3937 $190 ($4309 is responsible)
$4311 = Core:iterator:325
# Core:iterator:toList:2
$4312 = { (responsible $4313) ->
  $4314 = panicking because $1464 ($4311 is at fault)
}
$4315 = call $1691 with $4310 $4312 ($1310 is responsible)
$4316 = call $2553 with $4315 $3851 $3852 ($1312 is responsible)
$4317 = ($191, $192, $3931)
$4318 = ($3932, $3933, $3934)
$4319 = ($193,)
$4320 = ($3929, $4317, $4318, $4319)
$4321 = Core:iterator:341
$4322 = call $1022 with $4316 $4320 ($4321 is responsible)
$4323 = Core:result:flatMap:14
$4324 = Core:result:flatMap:16
$4325 = Core:result:flatMap:19:2
$4326 = Core:result:flatMap:2
$4327 = Core:result:flatMap:21
$4328 = Core:result:flatMap:4
$4329 = Core:result:getValue:14
$4330 = Core:result:getValue:2
$4331 = Core:result:getValue:4
$4332 = Core:result:map:14
$4333 = Core:result:map:16
$4334 = Core:result:map:19:3
$4335 = Core:result:map:2
$4336 = Core:result:map:20
$4337 = Core:result:map:4
$4338 = Core:result:mapOr:14
$4339 = Core:result:mapOr:16
$4340 = Core:result:mapOr:2
$4341 = Core:result:mapOr:21
$4342 = Core:result:mapOr:4
$4343 = "Expected 1 item, got "
$4344 = "Expected a List, got `"
# Core:result:getValue
$4345 = { $4346 (+ responsible $4347) ->
  $4348 = call $1468 with $4346 ($4330 is responsible)
  $4349 = call $253 with $4348 $1451 $4347 ($4331 is responsible)
  $4350 = call $170 with $4346 ($68 is responsible)
  $4351 = call $151 with $4350 $184 ($69 is responsible)
  $4352 = call $253 with $4351 $242 $4329 ($63 is responsible)
  $4353 = call $166 with $4346 ($60 is responsible)
  $4354 = call $253 with $4353 $243 $4329 ($61 is responsible)
  $4355 = call $165 with $4346 ($62 is responsible)
}
# Core:result:flatMap
$4356 = { $4357 $4358 (+ responsible $4359) ->
  $4360 = call $1468 with $4357 ($4326 is responsible)
  $4361 = call $253 with $4360 $1451 $4359 ($4328 is responsible)
  $4362 = call $1135 with $4358 ($4323 is responsible)
  $4363 = call $253 with $4362 $1437 $4359 ($4324 is responsible)
  # Core:result:flatMap:19
  $4364 = { $4365 (+ responsible $4366) ->
    $4367 = call $4358 with $4365 ($4325 is responsible)
  }
  $4368 = call $1468 with $4357 ($4340 is responsible)
  $4369 = call $253 with $4368 $1451 $4327 ($4342 is responsible)
  $4370 = call $1135 with $4364 ($4338 is responsible)
  $4371 = call $253 with $4370 $1437 $4327 ($4339 is responsible)
  # Core:result:mapOr:20
  $4372 = { $4373 (+ responsible $4374) ->
    $4375 = $4357
  }
  $4376 = call $1556 with $4357 $4364 $4372 ($4341 is responsible)
}
# Core:result:map
$4377 = { $4378 $4379 (+ responsible $4380) ->
  $4381 = call $1468 with $4378 ($4335 is responsible)
  $4382 = call $253 with $4381 $1451 $4380 ($4337 is responsible)
  $4383 = call $1135 with $4379 ($4332 is responsible)
  $4384 = call $253 with $4383 $1437 $4380 ($4333 is responsible)
  # Core:result:map:19
  $4385 = { $4386 (+ responsible $4387) ->
    $4388 = call $4379 with $4386 ($4334 is responsible)
    $4389 = Ok $4388
  }
  $4390 = call $4356 with $4378 $4385 ($4336 is responsible)
}
$4391 = Examples:fibonacci:recursive:0:0:3
$4392 = Examples:fibonacci:recursive:0:5
$4393 = Examples:fibonacci:recursive:5
$4394 = Examples:fibonacci:compareTo:10
# Examples:fibonacci:isLessThan
$4395 = { $4396 $4397 (+ responsible $4398) ->
  $4399 = call $170 with $4396 ($68 is responsible)
  $4400 = call $151 with $4399 $175 ($69 is responsible)
  $4401 = call $253 with $4400 $211 $4394 ($24 is responsible)
  $4402 = call $170 with $4397 ($68 is responsible)
  $4403 = call $151 with $4402 $175 ($69 is responsible)
  $4404 = call $253 with $4403 $213 $4394 ($22 is responsible)
  $4405 = call $156 with $4396 $4397 ($23 is responsible)
  $4406 = call $151 with $4405 $176 ($1 is responsible)
}
$4407 = Examples:fibonacci:fibonacci:2:11
$4408 = Examples:fibonacci:fibonacci:2:13:11
$4409 = Examples:fibonacci:fibonacci:2:13:12
$4410 = Examples:fibonacci:fibonacci:2:13:32
$4411 = Examples:fibonacci:fibonacci:2:13:33
$4412 = Examples:fibonacci:fibonacci:2:13:34
$4413 = Examples:fibonacci:fibonacci:2:14
# Examples:fibonacci:fibonacci:2
$4414 = { $4415 $4416 (+ responsible $4417) ->
  $4418 = call $4395 with $4416 $189 ($4407 is responsible)
  # Examples:fibonacci:fibonacci:2:12
  $4419 = { (responsible $4420) ->
    $4421 = $4416
  }
  # Examples:fibonacci:fibonacci:2:13
  $4422 = { (responsible $4423) ->
    $4424 = call $170 with $4416 ($68 is responsible)
    $4425 = call $151 with $4424 $175 ($69 is responsible)
    $4426 = call $253 with $4425 $239 $4408 ($30 is responsible)
    $4427 = call $159 with $4416 $188 ($29 is responsible)
    $4428 = call $4415 with $4427 ($4409 is responsible)
    $4429 = call $170 with $4416 ($68 is responsible)
    $4430 = call $151 with $4429 $175 ($69 is responsible)
    $4431 = call $253 with $4430 $239 $4410 ($30 is responsible)
    $4432 = call $159 with $4416 $189 ($29 is responsible)
    $4433 = call $4415 with $4432 ($4411 is responsible)
    $4434 = call $170 with $4428 ($68 is responsible)
    $4435 = call $151 with $4434 $175 ($69 is responsible)
    $4436 = call $253 with $4435 $211 $4412 ($19 is responsible)
    $4437 = call $170 with $4433 ($68 is responsible)
    $4438 = call $151 with $4437 $175 ($69 is responsible)
    $4439 = call $253 with $4438 $213 $4412 ($17 is responsible)
    $4440 = call $154 with $4428 $4433 ($18 is responsible)
  }
  $4441 = call $494 with $4418 $4419 $4422 ($4413 is responsible)
}
# Examples:fibonacci:recursive:0
$4442 = { $4443 $4444 (+ responsible $4445) ->
  # Examples:fibonacci:recursive:0:0
  $4446 = { $4447 (+ responsible $4448) ->
    $4449 = call $4443 with $4443 $4447 ($4391 is responsible)
  }
  $4450 = call $4414 with $4446 $4444 ($4392 is responsible)
}
$4451 = Arguments
$4452 = Examples:fibonacci:21:7
$4453 = Examples:fibonacci:21:8
$4454 = Examples:fibonacci:21:8:n
$4455 = Examples:fibonacci:21:8:9
# Examples:fibonacci:21:8:18
$4456 = { $4457 (+ responsible $4458) ->
  $4459 = call $4442 with $4442 $4457 ($4393 is responsible)
  $4460 = call $169 with $4459 ($67 is responsible)
}
$4461 = Examples:fibonacci:21:8:19
$4462 = Examples:fibonacci:21:8:28
$4463 = "Usage: `cargo run -- run fibonacci.candy -- <number>`"
$4464 = Stdout
$4465 = Examples:fibonacci:21:16
$4466 = Examples:fibonacci:21:17
# Examples:fibonacci:21
$4467 = { $4468 (+ responsible $4469) ->
  $4470 = call $170 with $4468 ($68 is responsible)
  $4471 = call $151 with $4470 $183 ($69 is responsible)
  $4472 = call $253 with $4471 $240 $4452 ($59 is responsible)
  $4473 = call $164 with $4468 $4451 ($56 is responsible)
  $4474 = call $253 with $4473 $241 $4452 ($57 is responsible)
  $4475 = call $163 with $4468 $4451 ($58 is responsible)
  $4476 = call $170 with $4475 ($4453 is responsible)
  $4477 = call $151 with $177 $4476 ($4453 is responsible)
  # Examples:fibonacci:21:8:equals:then
  $4478 = { (responsible $4479) ->
    $4480 = call $162 with $4475 ($4453 is responsible)
    $4481 = call $151 with $188 $4480 ($4453 is responsible)
    # Examples:fibonacci:21:8:equals:then
    $4482 = { (responsible $4483) ->
      $4484 = call $160 with $4475 $187 ($4453 is responsible)
      $4485 = ($178, $4484)
    }
    # Examples:fibonacci:21:8:equals:else
    $4486 = { (responsible $4487) ->
      $4488 = call $169 with $4480 ($4453 is responsible)
      $4489 = call $168 with $4343 $4488 ($4453 is responsible)
      $4490 = call $168 with $4489 $195 ($4453 is responsible)
      $4491 = ($180, $4490)
    }
    $4492 = call $153 with $4481 $4482 $4486 ($4453 is responsible)
  }
  # Examples:fibonacci:21:8:equals:else
  $4493 = { (responsible $4494) ->
    $4495 = call $169 with $4476 ($4453 is responsible)
    $4496 = call $168 with $4344 $4495 ($4453 is responsible)
    $4497 = call $168 with $4496 $210 ($4453 is responsible)
    $4498 = ($180, $4497)
  }
  $4499 = call $153 with $4477 $4478 $4493 ($4453 is responsible)
  $4500 = call $160 with $4499 $187 ($4453 is responsible)
  $4501 = call $151 with $4500 $178 ($4453 is responsible)
  # Examples:fibonacci:21:8:case-0:matched
  $4502 = { (responsible $4503) ->
    $4504 = call $160 with $4499 $188 ($4454 is responsible)
    $4505 = call $170 with $4504 ($68 is responsible)
    $4506 = call $151 with $4505 $185 ($69 is responsible)
    $4507 = call $253 with $4506 $244 $4455 ($28 is responsible)
    $4508 = call $158 with $4504 ($27 is responsible)
    $4509 = call $4377 with $4508 $4456 ($4461 is responsible)
    $4510 = call $4345 with $4509 ($4462 is responsible)
  }
  # Examples:fibonacci:21:8:case-0:didNotMatch
  $4511 = { (responsible $4512) ->
    $4513 = call $160 with $4499 $188 ($4453 is responsible)
    $4514 = $4463
  }
  $4515 = call $153 with $4501 $4502 $4511 ($4453 is responsible)
  $4516 = call $170 with $4468 ($68 is responsible)
  $4517 = call $151 with $4516 $183 ($69 is responsible)
  $4518 = call $253 with $4517 $240 $4465 ($59 is responsible)
  $4519 = call $164 with $4468 $4464 ($56 is responsible)
  $4520 = call $253 with $4519 $241 $4465 ($57 is responsible)
  $4521 = call $163 with $4468 $4464 ($58 is responsible)
  $4522 = call $4521 with $4515 ($4466 is responsible)
}
