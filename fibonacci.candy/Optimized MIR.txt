# Optimized MIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::getArgumentCount:11
$3 = Builtins::getArgumentCount:5
$4 = Builtins::ifElse:1
$5 = Builtins::ifElse:12
$6 = Builtins::ifElse:15
$7 = Builtins::ifElse:20
$8 = Builtins::ifElse:26
$9 = Builtins::ifElse:29
$10 = Builtins::ifElse:34
$11 = Builtins::ifElse:42
$12 = Builtins::ifElse:6
$13 = Builtins::intAdd:11
$14 = Builtins::intAdd:18
$15 = Builtins::intAdd:5
$16 = Builtins::intCompareTo:11
$17 = Builtins::intCompareTo:18
$18 = Builtins::intCompareTo:5
$19 = Builtins::intSubtract:18
$20 = Builtins::intSubtract:5
$21 = Builtins::typeIs:19
$22 = Builtins::typeIs:25
$23 = Examples:fibonacci:compareTo:10
$24 = Examples:fibonacci:fibonacci:2:11
$25 = Examples:fibonacci:fibonacci:2:13:11
$26 = Examples:fibonacci:fibonacci:2:13:12
$27 = Examples:fibonacci:fibonacci:2:13:32
$28 = Examples:fibonacci:fibonacci:2:13:33
$29 = Examples:fibonacci:fibonacci:2:13:34
$30 = Examples:fibonacci:fibonacci:2:14
$31 = Examples:fibonacci:recursive:0:0:3
$32 = Examples:fibonacci:recursive:0:6
$33 = Examples:fibonacci:recursive:6
$34 = anonymous:$generated::needs
$35 = builtinEquals
$36 = builtinGetArgumentCount
$37 = builtinIfElse
$38 = builtinIntAdd
$39 = builtinIntCompareTo
$40 = builtinIntSubtract
$41 = builtinListGet
$42 = builtinTagGetValue
$43 = builtinTagHasValue
$44 = builtinTagWithoutValue
$45 = builtinTextConcatenate
$46 = builtinToDebugText
$47 = builtinTypeOf
$48 = False
$49 = Function
$50 = Int
$51 = Less
$52 = Main
$53 = Match
$54 = NoMatch
$55 = Nothing
$56 = Tag
$57 = Text
$58 = True
$59 = 0
$60 = 1
$61 = 2
$62 = 15
$63 = "."
$64 = "Expected False, got "
$65 = "Expected True, got "
$66 = "Expected a Tag, got `"
$67 = "Expected tag to not have a value, but it has one: `"
$68 = "The `condition` must be either `True` or `False`."
$69 = "The `reason` must be a text."
$70 = "`."
$71 = "`a | typeIs Int` was not satisfied"
$72 = "`b | typeIs Int` was not satisfied"
$73 = "`conditionIsBool` was not satisfied"
$74 = "`else | getArgumentCount | equals 0` was not satisfied"
$75 = "`else | typeIs Function` was not satisfied"
$76 = "`function | typeIs Function` was not satisfied"
$77 = "`minuend | typeIs Int` was not satisfied"
$78 = "`then | getArgumentCount | equals 0` was not satisfied"
$79 = "`then | typeIs Function` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, anonymous:$generated::needs:isConditionTrue:then
$80 = { $81 ->
  $82 = $58
}
# anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$83 = { $84 ->
  $85 = $55
}
# anonymous:$generated::needs
$86 = { $87 $88 $89 $90 ->
  $91 = call $35 with $87 $58 $34
  # anonymous:$generated::needs:isConditionTrue:else
  $92 = { $93 ->
    $94 = call $35 with $87 $48 $34
  }
  $95 = call $37 with $91 $80 $92 $34
  # anonymous:$generated::needs:isConditionBool:else
  $96 = { $97 ->
    $98 = panicking because $68 ($90 is at fault)
  }
  $99 = call $37 with $95 $83 $96 $34
  $100 = call $47 with $88 $90
  $101 = call $35 with $100 $57 $90
  # anonymous:$generated::needs:isReasonText:else
  $102 = { $103 ->
    $104 = panicking because $69 ($90 is at fault)
  }
  $105 = call $37 with $101 $83 $102 $34
  # anonymous:$generated::needs:condition:else
  $106 = { $107 ->
    $108 = panicking because $88 ($89 is at fault)
  }
  $109 = call $37 with $87 $83 $106 $34
}
$110 = ($53,)
# Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then
$111 = { $112 ->
  $113 = $110
}
# Builtins::ifElse
$114 = { $115 $116 $117 $118 ->
  $119 = call $47 with $115 $4
  $120 = call $35 with $56 $119 $4
  # Builtins::ifElse:1:equals:then
  $121 = { $122 ->
    $123 = call $44 with $115 $4
    $124 = call $35 with $58 $123 $4
    # Builtins::ifElse:1:equals:then
    $125 = { $126 ->
      $127 = call $43 with $115 $4
      $128 = call $35 with $48 $127 $4
      # Builtins::ifElse:1:equals:else
      $129 = { $130 ->
        $131 = call $46 with $127 $4
        $132 = call $42 with $115 $4
        $133 = call $46 with $132 $4
        $134 = call $45 with $67 $133 $4
        $135 = call $45 with $134 $70 $4
        $136 = ($54, $135)
      }
      $137 = call $37 with $128 $111 $129 $4
    }
    # Builtins::ifElse:1:equals:else
    $138 = { $139 ->
      $140 = call $46 with $123 $4
      $141 = call $45 with $65 $140 $4
      $142 = call $45 with $141 $63 $4
      $143 = ($54, $142)
    }
    $144 = call $37 with $124 $125 $138 $4
  }
  # Builtins::ifElse:1:equals:else
  $145 = { $146 ->
    $147 = call $46 with $119 $4
    $148 = call $45 with $66 $147 $4
    $149 = call $45 with $148 $70 $4
    $150 = ($54, $149)
  }
  $151 = call $37 with $120 $121 $145 $4
  $152 = call $41 with $151 $59 $4
  $153 = call $35 with $152 $53 $4
  # Builtins::ifElse:1:isMatch:then
  $154 = { $155 ->
    $156 = $151
  }
  # Builtins::ifElse:1:isMatch:else
  $157 = { $158 ->
    $159 = call $47 with $115 $4
    $160 = call $35 with $56 $159 $4
    # Builtins::ifElse:1:equals:then
    $161 = { $162 ->
      $163 = call $44 with $115 $4
      $164 = call $35 with $48 $163 $4
      # Builtins::ifElse:1:equals:then
      $165 = { $166 ->
        $167 = call $43 with $115 $4
        $168 = call $35 with $48 $167 $4
        # Builtins::ifElse:1:equals:else
        $169 = { $170 ->
          $171 = call $46 with $167 $4
          $172 = call $42 with $115 $4
          $173 = call $46 with $172 $4
          $174 = call $45 with $67 $173 $4
          $175 = call $45 with $174 $70 $4
          $176 = ($54, $175)
        }
        $177 = call $37 with $168 $111 $169 $4
      }
      # Builtins::ifElse:1:equals:else
      $178 = { $179 ->
        $180 = call $46 with $163 $4
        $181 = call $45 with $64 $180 $4
        $182 = call $45 with $181 $63 $4
        $183 = ($54, $182)
      }
      $184 = call $37 with $164 $165 $178 $4
    }
    # Builtins::ifElse:1:equals:else
    $185 = { $186 ->
      $187 = call $46 with $159 $4
      $188 = call $45 with $66 $187 $4
      $189 = call $45 with $188 $70 $4
      $190 = ($54, $189)
    }
    $191 = call $37 with $160 $161 $185 $4
  }
  $192 = call $37 with $153 $154 $157 $4
  $193 = call $41 with $192 $59 $4
  $194 = call $35 with $193 $53 $4
  # Builtins::ifElse:1:case-0:didNotMatch
  $195 = { $196 ->
    $197 = call $41 with $192 $60 $4
    $198 = $48
  }
  $199 = call $37 with $194 $80 $195 $4
  $200 = call $86 with $199 $73 $118 $12
  $201 = call $47 with $116 $21
  $202 = call $35 with $201 $49 $22
  $203 = call $86 with $202 $79 $118 $5
  $204 = call $47 with $116 $21
  $205 = call $35 with $204 $49 $22
  $206 = call $86 with $205 $76 $6 $3
  $207 = call $36 with $116 $2
  $208 = call $35 with $207 $59 $1
  $209 = call $86 with $208 $78 $118 $7
  $210 = call $47 with $117 $21
  $211 = call $35 with $210 $49 $22
  $212 = call $86 with $211 $75 $118 $8
  $213 = call $47 with $117 $21
  $214 = call $35 with $213 $49 $22
  $215 = call $86 with $214 $76 $9 $3
  $216 = call $36 with $117 $2
  $217 = call $35 with $216 $59 $1
  $218 = call $86 with $217 $74 $118 $10
  $219 = call $37 with $115 $116 $117 $11
}
# Examples:fibonacci:isLessThan
$220 = { $221 $222 $223 ->
  $224 = call $47 with $221 $21
  $225 = call $35 with $224 $50 $22
  $226 = call $86 with $225 $71 $23 $18
  $227 = call $47 with $222 $21
  $228 = call $35 with $227 $50 $22
  $229 = call $86 with $228 $72 $23 $16
  $230 = call $39 with $221 $222 $17
  $231 = call $35 with $230 $51 $1
}
# Examples:fibonacci:fibonacci:2
$232 = { $233 $234 $235 ->
  $236 = call $220 with $234 $61 $24
  # Examples:fibonacci:fibonacci:2:12
  $237 = { $238 ->
    $239 = $234
  }
  # Examples:fibonacci:fibonacci:2:13
  $240 = { $241 ->
    $242 = call $47 with $234 $21
    $243 = call $35 with $242 $50 $22
    $244 = call $86 with $243 $77 $25 $20
    $245 = call $40 with $234 $60 $19
    $246 = call $233 with $245 $26
    $247 = call $47 with $234 $21
    $248 = call $35 with $247 $50 $22
    $249 = call $86 with $248 $77 $27 $20
    $250 = call $40 with $234 $61 $19
    $251 = call $233 with $250 $28
    $252 = call $47 with $246 $21
    $253 = call $35 with $252 $50 $22
    $254 = call $86 with $253 $71 $29 $15
    $255 = call $47 with $251 $21
    $256 = call $35 with $255 $50 $22
    $257 = call $86 with $256 $72 $29 $13
    $258 = call $38 with $246 $251 $14
  }
  $259 = call $114 with $236 $237 $240 $30
}
# Examples:fibonacci:recursive:0
$260 = { $261 $262 $263 ->
  # Examples:fibonacci:recursive:0:0
  $264 = { $265 $266 ->
    $267 = call $261 with $261 $265 $31
  }
  $268 = call $232 with $264 $262 $32
}
# Examples:fibonacci:main
$269 = { $270 $271 ->
  $272 = call $260 with $260 $62 $33
}
$273 = [$52: $269]
