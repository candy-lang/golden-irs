# Optimized MIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::functionRun:11
$3 = Builtins::functionRun:16
$4 = Builtins::functionRun:22
$5 = Builtins::functionRun:5
$6 = Builtins::getArgumentCount:11
$7 = Builtins::getArgumentCount:5
$8 = Builtins::ifElse:1
$9 = Builtins::ifElse:11
$10 = Builtins::ifElse:14
$11 = Builtins::ifElse:19
$12 = Builtins::ifElse:25
$13 = Builtins::ifElse:28
$14 = Builtins::ifElse:33
$15 = Builtins::ifElse:41
$16 = Builtins::ifElse:5
$17 = Builtins::intAdd:11
$18 = Builtins::intAdd:18
$19 = Builtins::intAdd:5
$20 = Builtins::intBitwiseAnd:18
$21 = Builtins::intBitwiseAnd:5
$22 = Builtins::intCompareTo:11
$23 = Builtins::intCompareTo:18
$24 = Builtins::intCompareTo:5
$25 = Builtins::intMultiply:18
$26 = Builtins::intMultiply:5
$27 = Builtins::intParse:11
$28 = Builtins::intParse:5
$29 = Builtins::intSubtract:18
$30 = Builtins::intSubtract:5
$31 = Builtins::isLessThanOrEqualTo:11
$32 = Builtins::isLessThanOrEqualTo:18
$33 = Builtins::isLessThanOrEqualTo:19
$34 = Builtins::isLessThanOrEqualTo:5
$35 = Builtins::isNonNegative:12
$36 = Builtins::isNonNegative:13
$37 = Builtins::isNonNegative:5
$38 = Builtins::listGet:11
$39 = Builtins::listGet:14
$40 = Builtins::listGet:16
$41 = Builtins::listGet:24
$42 = Builtins::listGet:25
$43 = Builtins::listGet:30
$44 = Builtins::listGet:37
$45 = Builtins::listGet:5
$46 = Builtins::listInsert:11
$47 = Builtins::listInsert:14
$48 = Builtins::listInsert:16
$49 = Builtins::listInsert:24
$50 = Builtins::listInsert:25
$51 = Builtins::listInsert:27
$52 = Builtins::listInsert:35
$53 = Builtins::listInsert:5
$54 = Builtins::listLength:11
$55 = Builtins::listLength:5
$56 = Builtins::structGet:12
$57 = Builtins::structGet:14
$58 = Builtins::structGet:21
$59 = Builtins::structGet:5
$60 = Builtins::tagGetValue:11
$61 = Builtins::tagGetValue:13
$62 = Builtins::tagGetValue:19
$63 = Builtins::tagGetValue:5
$64 = Builtins::textConcatenate:11
$65 = Builtins::textConcatenate:18
$66 = Builtins::textConcatenate:5
$67 = Builtins::toDebugText:5
$68 = Builtins::typeIs:19
$69 = Builtins::typeIs:25
$70 = Builtins::typeOf:5
$71 = Core:bool:and:13
$72 = Core:bool:and:2
$73 = Core:bool:and:4
$74 = Core:bool:and:7
$75 = Core:bool:and:9
$76 = Core:bool:is:1
$77 = Core:bool:lazyAnd:14
$78 = Core:bool:lazyAnd:16
$79 = Core:bool:lazyAnd:18
$80 = Core:bool:lazyAnd:18:13
$81 = Core:bool:lazyAnd:18:21
$82 = Core:bool:lazyAnd:18:9
$83 = Core:bool:lazyAnd:2
$84 = Core:bool:lazyAnd:4
$85 = Core:bool:lazyOr:14
$86 = Core:bool:lazyOr:16
$87 = Core:bool:lazyOr:18
$88 = Core:bool:lazyOr:18:10
$89 = Core:bool:lazyOr:18:14
$90 = Core:bool:lazyOr:18:22
$91 = Core:bool:lazyOr:2
$92 = Core:bool:lazyOr:4
$93 = Core:bool:not:2
$94 = Core:bool:not:4
$95 = Core:bool:not:6
$96 = Core:bool:or:13
$97 = Core:bool:or:2
$98 = Core:bool:or:4
$99 = Core:bool:or:7
$100 = Core:bool:or:9
$101 = Core:check:checkEquals:12
$102 = Core:check:checkEquals:13
$103 = Core:check:checkEquals:15:0
$104 = Core:check:checkEquals:16
$105 = Core:check:checkEquals:19
$106 = Core:check:checkEquals:20
$107 = Core:check:checkEquals:22:0
$108 = Core:check:checkEquals:23
$109 = Core:check:checkEquals:25
$110 = Core:check:checkEquals:26
$111 = Core:check:checkEquals:27
$112 = Core:check:checkEquals:28
$113 = Core:check:checkEquals:29
$114 = Core:controlFlow:if:11
$115 = Core:controlFlow:if:21
$116 = Core:controlFlow:if:23
$117 = Core:controlFlow:if:28
$118 = Core:controlFlow:if:9
$119 = Core:controlFlow:recursive:17
$120 = Core:controlFlow:recursive:18:0:3
$121 = Core:controlFlow:recursive:18:5
$122 = Core:controlFlow:recursive:23
$123 = Core:controlFlow:recursive:9
$124 = Core:fixedDecimal:fromInt:15
$125 = Core:fixedDecimal:fromIntScaled:11
$126 = Core:fixedDecimal:fromIntScaled:16
$127 = Core:fixedDecimal:isScale:18:9
$128 = Core:fixedDecimal:isScale:19
$129 = Core:function:is0:11:3
$130 = Core:function:is0:13
$131 = Core:function:is2:11:3
$132 = Core:function:is2:13
$133 = Core:function:run:14
$134 = Core:function:run:2
$135 = Core:function:run:4
$136 = Core:int:compareTo:20
$137 = Core:int:compareTo:4
$138 = Core:int:compareTo:9
$139 = Core:int:isGreaterThan:13
$140 = Core:int:isGreaterThan:4
$141 = Core:int:isGreaterThan:9
$142 = Core:int:isLessThan:13
$143 = Core:int:isLessThan:4
$144 = Core:int:isLessThan:9
$145 = Core:int:isNegative:4
$146 = Core:int:isNegative:8
$147 = Core:int:isNonNegative:16
$148 = Core:int:isNonNegative:4
$149 = Core:int:isNonNegative:7
$150 = anonymous:$generated::needs
$151 = builtinEquals
$152 = builtinGetArgumentCount
$153 = builtinIfElse
$154 = builtinIntAdd
$155 = builtinIntBitwiseAnd
$156 = builtinIntCompareTo
$157 = builtinIntMultiply
$158 = builtinIntParse
$159 = builtinIntSubtract
$160 = builtinListGet
$161 = builtinListInsert
$162 = builtinListLength
$163 = builtinStructGet
$164 = builtinStructHasKey
$165 = builtinTagGetValue
$166 = builtinTagHasValue
$167 = builtinTagWithoutValue
$168 = builtinTextConcatenate
$169 = builtinToDebugText
$170 = builtinTypeOf
$171 = Equal
$172 = False
$173 = Function
$174 = Greater
$175 = Int
$176 = Less
$177 = List
$178 = Match
$179 = MinorUnits
$180 = NoMatch
$181 = Nothing
$182 = Scale
$183 = Struct
$184 = Tag
$185 = Text
$186 = True
$187 = 0
$188 = 1
$189 = 2
$190 = 3
$191 = 4
$192 = 5
$193 = 10
$194 = " to be "
$195 = "."
$196 = "A check failed: Expected "
$197 = "Expected Equal, got "
$198 = "Expected False, got "
$199 = "Expected Greater, got "
$200 = "Expected Less, got "
$201 = "Expected True, got "
$202 = "Expected a Struct, got `"
$203 = "Expected a Tag, got `"
$204 = "Expected tag to have a value, but it doesn't have any."
$205 = "Expected tag to not have a value, but it has one: `"
$206 = "No case matched the given expression."
$207 = "The `body` should take the recursive function and the argument."
$208 = "The `condition` must be either `True` or `False`."
$209 = "The `reason` must be a text."
$210 = "`."
$211 = "`a | typeIs Int` was not satisfied"
$212 = "`a | typeIs Text` was not satisfied"
$213 = "`b | typeIs Int` was not satisfied"
$214 = "`b | typeIs Text` was not satisfied"
$215 = "`b` didn't return a bool."
$216 = "`bool.is condition` was not satisfied"
$217 = "`conditionIsBool` was not satisfied"
$218 = "`else | getArgumentCount | equals 0` was not satisfied"
$219 = "`else | typeIs Function` was not satisfied"
$220 = "`factorA | typeIs Int` was not satisfied"
$221 = "`function | typeIs Function` was not satisfied"
$222 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
$223 = "`function.is0 b` was not satisfied"
$224 = "`function.is0 then` was not satisfied"
$225 = "`index | intCompareTo (list | ✨.listLength) | equals Less` was not satisfied"
$226 = "`index | isLessThanOrEqualTo (list | ✨.listLength)` was not satisfied"
$227 = "`index | isNonNegative` was not satisfied"
$228 = "`index | typeIs Int` was not satisfied"
$229 = "`int | typeIs Int` was not satisfied"
$230 = "`int.is minorUnits` was not satisfied"
$231 = "`is a` was not satisfied"
$232 = "`is b` was not satisfied"
$233 = "`is valueA` was not satisfied"
$234 = "`is valueB` was not satisfied"
$235 = "`is value` was not satisfied"
$236 = "`is0 body` was not satisfied"
$237 = "`isScale scale` was not satisfied"
$238 = "`list | typeIs List` was not satisfied"
$239 = "`minuend | typeIs Int` was not satisfied"
$240 = "`struct | typeIs Struct` was not satisfied"
$241 = "`struct | ✨.structHasKey key` was not satisfied"
$242 = "`tag | typeIs Tag` was not satisfied"
$243 = "`tag | ✨.tagHasValue` was not satisfied"
$244 = "`text | typeIs Text` was not satisfied"
$245 = "`then | getArgumentCount | equals 0` was not satisfied"
$246 = "`then | typeIs Function` was not satisfied"
# Core::19:isMatch:then, Core::30:isMatch:then, Core::41:isMatch:then, Core::102:isMatch:then, Core::153:isMatch:then, Core::164:isMatch:then, Core:bool:9:isMatch:then, Core:check:9:isMatch:then, Core:controlFlow:if:27, Core:controlFlow:29:isMatch:then, Core:controlFlow:50:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:fixedDecimal:30:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:function:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:29:isMatch:then, Core:int:40:isMatch:then, Core:iterator:foldLeft:23:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:30:6:1:isMatch:then, Core:iterator:take:31:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:19:isMatch:then, Core:iterator:30:isMatch:then, Core:iterator:91:isMatch:then, Core:iterator:102:isMatch:then, Core:iterator:128:isMatch:then, Core:iterator:137:isMatch:then, Core:list:firstIndexWhere:23:1:isMatch:then, Core:list:generate:59:1:isMatch:then, Core:list:lastIndexWhere:44:1:isMatch:then, Core:list:29:isMatch:then, Core:list:40:isMatch:then, Core:result:19:isMatch:then, Core:result:30:isMatch:then, Core:struct:19:isMatch:then, Core:tag:29:isMatch:then, Core:text:repeat:34:1:isMatch:then, Core:text:29:isMatch:then, Core:text:40:isMatch:then, Core:type:19:isMatch:then, Examples:fibonacci:then, Examples:fibonacci:19:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$247 = { (responsible $248) ->
  $249 = $181
}
# anonymous:$generated::needs
$250 = { $251 $252 $253 (+ responsible $254) ->
  $255 = call $151 with $251 $186 ($150 is responsible)
  # anonymous:$generated::needs:isValueTrue:then
  $256 = { (responsible $257) ->
    $258 = $255
  }
  # anonymous:$generated::needs:isValueTrue:else
  $259 = { (responsible $260) ->
    $261 = call $151 with $251 $172 ($150 is responsible)
  }
  $262 = call $153 with $255 $256 $259 ($150 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $263 = { (responsible $264) ->
    $265 = panicking because $208 ($254 is at fault)
  }
  $266 = call $153 with $262 $247 $263 ($150 is responsible)
  $267 = call $170 with $252 ($254 is responsible)
  $268 = call $151 with $267 $185 ($254 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $269 = { (responsible $270) ->
    $271 = panicking because $209 ($254 is at fault)
  }
  $272 = call $153 with $268 $247 $269 ($150 is responsible)
  # anonymous:$generated::needs:condition:else
  $273 = { (responsible $274) ->
    $275 = panicking because $252 ($253 is at fault)
  }
  $276 = call $153 with $251 $247 $273 ($150 is responsible)
}
$277 = ($178,)
# Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:18:equals:then, Core:bool:lazyOr:18:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:23:5:equals:then, Core:iterator:generateWithState:14:1:3:equals:then, Core:iterator:map:19:3:equals:then, Core:iterator:reduceLeft:18:equals:then, Core:iterator:skip:30:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:19:2:3:equals:then, Core:iterator:where:19:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:16:26:10:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:21:equals:then, Core:list:lastWhere:21:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
$278 = { (responsible $279) ->
  $280 = $277
}
# Builtins::ifElse:1:case-0:patternMatch, Builtins::isLessThanOrEqualTo:19:case-0:patternMatch, Builtins::isNonNegative:13:case-0:patternMatch, Builtins::not:1:case-1:patternMatch, Core:bool:is:1:case-0:patternMatch, Core:bool:lazyOr:18:case-0:patternMatch, Core:bool:not:6:case-1:patternMatch, Core:check:check:1:case-0:patternMatch, Core:text:isAsciiDigit:14:case-0:patternMatch, anonymous:$generated::needs:isValueTrue:then
$281 = { (responsible $282) ->
  $283 = $186
}
# Builtins::ifElse:1:case-0:didNotMatch, Builtins::isLessThanOrEqualTo:19:case-1:patternMatch, Builtins::isNonNegative:13:case-1:patternMatch, Builtins::not:1:case-0:patternMatch, Core:bool:is:1:case-0:didNotMatch, Core:bool:lazyAnd:18:case-1:patternMatch, Core:bool:not:6:case-0:patternMatch, Core:check:check:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:function:is0:12, Core:function:is1:12, Core:function:is2:12, Core:function:is3:12, Core:function:is4:12, Core:function:is5:12, Core:list:isValidIndex:21, Core:list:isValidInsertIndex:21, Core:result:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, anonymous:$generated::needs:isValueTrue:else
$284 = { (responsible $285) ->
  $286 = $172
}
# Builtins::isNonNegative:13:case-1:didNotMatch
$287 = { (responsible $288) ->
  $289 = panicking because $206 ($36 is at fault)
}
# Builtins::isNonNegative
$290 = { $291 (+ responsible $292) ->
  $293 = call $170 with $291 ($68 is responsible)
  $294 = call $151 with $293 $175 ($69 is responsible)
  $295 = call $250 with $294 $229 $292 ($37 is responsible)
  $296 = call $156 with $291 $187 ($35 is responsible)
  # Builtins::isNonNegative:13:equals:then
  $297 = { (responsible $298) ->
    $299 = call $167 with $296 ($36 is responsible)
    $300 = call $151 with $174 $299 ($36 is responsible)
    # Builtins::isNonNegative:13:equals:then
    $301 = { (responsible $302) ->
      $303 = call $166 with $296 ($36 is responsible)
      $304 = call $151 with $172 $303 ($36 is responsible)
      # Builtins::isNonNegative:13:equals:else
      $305 = { (responsible $306) ->
        $307 = call $169 with $303 ($36 is responsible)
        $308 = call $165 with $296 ($36 is responsible)
        $309 = call $169 with $308 ($36 is responsible)
        $310 = call $168 with $205 $309 ($36 is responsible)
        $311 = call $168 with $310 $210 ($36 is responsible)
        $312 = ($180, $311)
      }
      $313 = call $153 with $304 $278 $305 ($36 is responsible)
    }
    # Builtins::isNonNegative:13:equals:else
    $314 = { (responsible $315) ->
      $316 = call $169 with $299 ($36 is responsible)
      $317 = call $168 with $199 $316 ($36 is responsible)
      $318 = call $168 with $317 $195 ($36 is responsible)
      $319 = ($180, $318)
    }
    $320 = call $153 with $300 $301 $314 ($36 is responsible)
  }
  $321 = call $297 with no arguments ($36 is responsible)
  $322 = call $160 with $321 $187 ($36 is responsible)
  $323 = call $151 with $322 $178 ($36 is responsible)
  # Builtins::isNonNegative:13:isMatch:then
  $324 = { (responsible $325) ->
    $326 = $321
  }
  # Builtins::isNonNegative:13:isMatch:else
  $327 = { (responsible $328) ->
    # Builtins::isNonNegative:13:equals:then
    $329 = { (responsible $330) ->
      $331 = call $167 with $296 ($36 is responsible)
      $332 = call $151 with $171 $331 ($36 is responsible)
      # Builtins::isNonNegative:13:equals:then
      $333 = { (responsible $334) ->
        $335 = call $166 with $296 ($36 is responsible)
        $336 = call $151 with $172 $335 ($36 is responsible)
        # Builtins::isNonNegative:13:equals:else
        $337 = { (responsible $338) ->
          $339 = call $169 with $335 ($36 is responsible)
          $340 = call $165 with $296 ($36 is responsible)
          $341 = call $169 with $340 ($36 is responsible)
          $342 = call $168 with $205 $341 ($36 is responsible)
          $343 = call $168 with $342 $210 ($36 is responsible)
          $344 = ($180, $343)
        }
        $345 = call $153 with $336 $278 $337 ($36 is responsible)
      }
      # Builtins::isNonNegative:13:equals:else
      $346 = { (responsible $347) ->
        $348 = call $169 with $331 ($36 is responsible)
        $349 = call $168 with $197 $348 ($36 is responsible)
        $350 = call $168 with $349 $195 ($36 is responsible)
        $351 = ($180, $350)
      }
      $352 = call $153 with $332 $333 $346 ($36 is responsible)
    }
    $353 = call $329 with no arguments ($36 is responsible)
  }
  $354 = call $153 with $323 $324 $327 ($36 is responsible)
  $355 = call $160 with $354 $187 ($36 is responsible)
  $356 = call $151 with $355 $178 ($36 is responsible)
  # Builtins::isNonNegative:13:case-0:didNotMatch
  $357 = { (responsible $358) ->
    # Builtins::isNonNegative:13:equals:then
    $359 = { (responsible $360) ->
      $361 = call $167 with $296 ($36 is responsible)
      $362 = call $151 with $176 $361 ($36 is responsible)
      # Builtins::isNonNegative:13:equals:then
      $363 = { (responsible $364) ->
        $365 = call $166 with $296 ($36 is responsible)
        $366 = call $151 with $172 $365 ($36 is responsible)
        # Builtins::isNonNegative:13:equals:else
        $367 = { (responsible $368) ->
          $369 = call $169 with $365 ($36 is responsible)
          $370 = call $165 with $296 ($36 is responsible)
          $371 = call $169 with $370 ($36 is responsible)
          $372 = call $168 with $205 $371 ($36 is responsible)
          $373 = call $168 with $372 $210 ($36 is responsible)
          $374 = ($180, $373)
        }
        $375 = call $153 with $366 $278 $367 ($36 is responsible)
      }
      # Builtins::isNonNegative:13:equals:else
      $376 = { (responsible $377) ->
        $378 = call $169 with $361 ($36 is responsible)
        $379 = call $168 with $200 $378 ($36 is responsible)
        $380 = call $168 with $379 $195 ($36 is responsible)
        $381 = ($180, $380)
      }
      $382 = call $153 with $362 $363 $376 ($36 is responsible)
    }
    $383 = call $359 with no arguments ($36 is responsible)
    $384 = call $160 with $383 $187 ($36 is responsible)
    $385 = call $151 with $384 $178 ($36 is responsible)
    $386 = call $153 with $385 $284 $287 ($36 is responsible)
  }
  $387 = call $153 with $356 $281 $357 ($36 is responsible)
}
# Builtins::isLessThanOrEqualTo:19:case-1:didNotMatch
$388 = { (responsible $389) ->
  $390 = panicking because $206 ($33 is at fault)
}
# Builtins::isLessThanOrEqualTo
$391 = { $392 $393 (+ responsible $394) ->
  $395 = call $170 with $392 ($68 is responsible)
  $396 = call $151 with $395 $175 ($69 is responsible)
  $397 = call $250 with $396 $211 $394 ($34 is responsible)
  $398 = call $170 with $393 ($68 is responsible)
  $399 = call $151 with $398 $175 ($69 is responsible)
  $400 = call $250 with $399 $213 $394 ($31 is responsible)
  $401 = call $156 with $392 $393 ($32 is responsible)
  # Builtins::isLessThanOrEqualTo:19:equals:then
  $402 = { (responsible $403) ->
    $404 = call $167 with $401 ($33 is responsible)
    $405 = call $151 with $176 $404 ($33 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:then
    $406 = { (responsible $407) ->
      $408 = call $166 with $401 ($33 is responsible)
      $409 = call $151 with $172 $408 ($33 is responsible)
      # Builtins::isLessThanOrEqualTo:19:equals:else
      $410 = { (responsible $411) ->
        $412 = call $169 with $408 ($33 is responsible)
        $413 = call $165 with $401 ($33 is responsible)
        $414 = call $169 with $413 ($33 is responsible)
        $415 = call $168 with $205 $414 ($33 is responsible)
        $416 = call $168 with $415 $210 ($33 is responsible)
        $417 = ($180, $416)
      }
      $418 = call $153 with $409 $278 $410 ($33 is responsible)
    }
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $419 = { (responsible $420) ->
      $421 = call $169 with $404 ($33 is responsible)
      $422 = call $168 with $200 $421 ($33 is responsible)
      $423 = call $168 with $422 $195 ($33 is responsible)
      $424 = ($180, $423)
    }
    $425 = call $153 with $405 $406 $419 ($33 is responsible)
  }
  $426 = call $402 with no arguments ($33 is responsible)
  $427 = call $160 with $426 $187 ($33 is responsible)
  $428 = call $151 with $427 $178 ($33 is responsible)
  # Builtins::isLessThanOrEqualTo:19:isMatch:then
  $429 = { (responsible $430) ->
    $431 = $426
  }
  # Builtins::isLessThanOrEqualTo:19:isMatch:else
  $432 = { (responsible $433) ->
    # Builtins::isLessThanOrEqualTo:19:equals:then
    $434 = { (responsible $435) ->
      $436 = call $167 with $401 ($33 is responsible)
      $437 = call $151 with $171 $436 ($33 is responsible)
      # Builtins::isLessThanOrEqualTo:19:equals:then
      $438 = { (responsible $439) ->
        $440 = call $166 with $401 ($33 is responsible)
        $441 = call $151 with $172 $440 ($33 is responsible)
        # Builtins::isLessThanOrEqualTo:19:equals:else
        $442 = { (responsible $443) ->
          $444 = call $169 with $440 ($33 is responsible)
          $445 = call $165 with $401 ($33 is responsible)
          $446 = call $169 with $445 ($33 is responsible)
          $447 = call $168 with $205 $446 ($33 is responsible)
          $448 = call $168 with $447 $210 ($33 is responsible)
          $449 = ($180, $448)
        }
        $450 = call $153 with $441 $278 $442 ($33 is responsible)
      }
      # Builtins::isLessThanOrEqualTo:19:equals:else
      $451 = { (responsible $452) ->
        $453 = call $169 with $436 ($33 is responsible)
        $454 = call $168 with $197 $453 ($33 is responsible)
        $455 = call $168 with $454 $195 ($33 is responsible)
        $456 = ($180, $455)
      }
      $457 = call $153 with $437 $438 $451 ($33 is responsible)
    }
    $458 = call $434 with no arguments ($33 is responsible)
  }
  $459 = call $153 with $428 $429 $432 ($33 is responsible)
  $460 = call $160 with $459 $187 ($33 is responsible)
  $461 = call $151 with $460 $178 ($33 is responsible)
  # Builtins::isLessThanOrEqualTo:19:case-0:didNotMatch
  $462 = { (responsible $463) ->
    # Builtins::isLessThanOrEqualTo:19:equals:then
    $464 = { (responsible $465) ->
      $466 = call $167 with $401 ($33 is responsible)
      $467 = call $151 with $174 $466 ($33 is responsible)
      # Builtins::isLessThanOrEqualTo:19:equals:then
      $468 = { (responsible $469) ->
        $470 = call $166 with $401 ($33 is responsible)
        $471 = call $151 with $172 $470 ($33 is responsible)
        # Builtins::isLessThanOrEqualTo:19:equals:else
        $472 = { (responsible $473) ->
          $474 = call $169 with $470 ($33 is responsible)
          $475 = call $165 with $401 ($33 is responsible)
          $476 = call $169 with $475 ($33 is responsible)
          $477 = call $168 with $205 $476 ($33 is responsible)
          $478 = call $168 with $477 $210 ($33 is responsible)
          $479 = ($180, $478)
        }
        $480 = call $153 with $471 $278 $472 ($33 is responsible)
      }
      # Builtins::isLessThanOrEqualTo:19:equals:else
      $481 = { (responsible $482) ->
        $483 = call $169 with $466 ($33 is responsible)
        $484 = call $168 with $199 $483 ($33 is responsible)
        $485 = call $168 with $484 $195 ($33 is responsible)
        $486 = ($180, $485)
      }
      $487 = call $153 with $467 $468 $481 ($33 is responsible)
    }
    $488 = call $464 with no arguments ($33 is responsible)
    $489 = call $160 with $488 $187 ($33 is responsible)
    $490 = call $151 with $489 $178 ($33 is responsible)
    $491 = call $153 with $490 $284 $388 ($33 is responsible)
  }
  $492 = call $153 with $461 $281 $462 ($33 is responsible)
}
# Builtins::ifElse
$493 = { $494 $495 $496 (+ responsible $497) ->
  $498 = call $170 with $494 ($8 is responsible)
  $499 = call $151 with $184 $498 ($8 is responsible)
  # Builtins::ifElse:1:equals:then
  $500 = { (responsible $501) ->
    $502 = call $167 with $494 ($8 is responsible)
    $503 = call $151 with $186 $502 ($8 is responsible)
    # Builtins::ifElse:1:equals:then
    $504 = { (responsible $505) ->
      $506 = call $166 with $494 ($8 is responsible)
      $507 = call $151 with $172 $506 ($8 is responsible)
      # Builtins::ifElse:1:equals:else
      $508 = { (responsible $509) ->
        $510 = call $169 with $506 ($8 is responsible)
        $511 = call $165 with $494 ($8 is responsible)
        $512 = call $169 with $511 ($8 is responsible)
        $513 = call $168 with $205 $512 ($8 is responsible)
        $514 = call $168 with $513 $210 ($8 is responsible)
        $515 = ($180, $514)
      }
      $516 = call $153 with $507 $278 $508 ($8 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $517 = { (responsible $518) ->
      $519 = call $169 with $502 ($8 is responsible)
      $520 = call $168 with $201 $519 ($8 is responsible)
      $521 = call $168 with $520 $195 ($8 is responsible)
      $522 = ($180, $521)
    }
    $523 = call $153 with $503 $504 $517 ($8 is responsible)
  }
  # Builtins::ifElse:1:equals:else
  $524 = { (responsible $525) ->
    $526 = call $169 with $498 ($8 is responsible)
    $527 = call $168 with $203 $526 ($8 is responsible)
    $528 = call $168 with $527 $210 ($8 is responsible)
    $529 = ($180, $528)
  }
  $530 = call $153 with $499 $500 $524 ($8 is responsible)
  $531 = call $160 with $530 $187 ($8 is responsible)
  $532 = call $151 with $531 $178 ($8 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $533 = { (responsible $534) ->
    $535 = $530
  }
  # Builtins::ifElse:1:isMatch:else
  $536 = { (responsible $537) ->
    $538 = call $170 with $494 ($8 is responsible)
    $539 = call $151 with $184 $538 ($8 is responsible)
    # Builtins::ifElse:1:equals:then
    $540 = { (responsible $541) ->
      $542 = call $167 with $494 ($8 is responsible)
      $543 = call $151 with $172 $542 ($8 is responsible)
      # Builtins::ifElse:1:equals:then
      $544 = { (responsible $545) ->
        $546 = call $166 with $494 ($8 is responsible)
        $547 = call $151 with $172 $546 ($8 is responsible)
        # Builtins::ifElse:1:equals:else
        $548 = { (responsible $549) ->
          $550 = call $169 with $546 ($8 is responsible)
          $551 = call $165 with $494 ($8 is responsible)
          $552 = call $169 with $551 ($8 is responsible)
          $553 = call $168 with $205 $552 ($8 is responsible)
          $554 = call $168 with $553 $210 ($8 is responsible)
          $555 = ($180, $554)
        }
        $556 = call $153 with $547 $278 $548 ($8 is responsible)
      }
      # Builtins::ifElse:1:equals:else
      $557 = { (responsible $558) ->
        $559 = call $169 with $542 ($8 is responsible)
        $560 = call $168 with $198 $559 ($8 is responsible)
        $561 = call $168 with $560 $195 ($8 is responsible)
        $562 = ($180, $561)
      }
      $563 = call $153 with $543 $544 $557 ($8 is responsible)
    }
    # Builtins::ifElse:1:equals:else
    $564 = { (responsible $565) ->
      $566 = call $169 with $538 ($8 is responsible)
      $567 = call $168 with $203 $566 ($8 is responsible)
      $568 = call $168 with $567 $210 ($8 is responsible)
      $569 = ($180, $568)
    }
    $570 = call $153 with $539 $540 $564 ($8 is responsible)
  }
  $571 = call $153 with $532 $533 $536 ($8 is responsible)
  $572 = call $160 with $571 $187 ($8 is responsible)
  $573 = call $151 with $572 $178 ($8 is responsible)
  $574 = call $153 with $573 $281 $284 ($8 is responsible)
  $575 = call $250 with $574 $217 $497 ($16 is responsible)
  $576 = call $170 with $495 ($68 is responsible)
  $577 = call $151 with $576 $173 ($69 is responsible)
  $578 = call $250 with $577 $246 $497 ($9 is responsible)
  $579 = call $170 with $495 ($68 is responsible)
  $580 = call $151 with $579 $173 ($69 is responsible)
  $581 = call $250 with $580 $221 $10 ($7 is responsible)
  $582 = call $152 with $495 ($6 is responsible)
  $583 = call $151 with $582 $187 ($1 is responsible)
  $584 = call $250 with $583 $245 $497 ($11 is responsible)
  $585 = call $170 with $496 ($68 is responsible)
  $586 = call $151 with $585 $173 ($69 is responsible)
  $587 = call $250 with $586 $219 $497 ($12 is responsible)
  $588 = call $170 with $496 ($68 is responsible)
  $589 = call $151 with $588 $173 ($69 is responsible)
  $590 = call $250 with $589 $221 $13 ($7 is responsible)
  $591 = call $152 with $496 ($6 is responsible)
  $592 = call $151 with $591 $187 ($1 is responsible)
  $593 = call $250 with $592 $218 $497 ($14 is responsible)
  $594 = call $153 with $494 $495 $496 ($15 is responsible)
}
# Builtins::listGet
$595 = { $596 $597 (+ responsible $598) ->
  $599 = call $170 with $596 ($68 is responsible)
  $600 = call $151 with $599 $177 ($69 is responsible)
  $601 = call $250 with $600 $238 $598 ($45 is responsible)
  $602 = call $170 with $597 ($68 is responsible)
  $603 = call $151 with $602 $175 ($69 is responsible)
  $604 = call $250 with $603 $228 $598 ($38 is responsible)
  $605 = call $290 with $597 ($39 is responsible)
  $606 = call $250 with $605 $227 $598 ($40 is responsible)
  $607 = call $162 with $596 ($41 is responsible)
  $608 = call $170 with $597 ($68 is responsible)
  $609 = call $151 with $608 $175 ($69 is responsible)
  $610 = call $250 with $609 $211 $42 ($24 is responsible)
  $611 = call $156 with $597 $607 ($23 is responsible)
  $612 = call $151 with $611 $176 ($1 is responsible)
  $613 = call $250 with $612 $225 $598 ($43 is responsible)
  $614 = call $160 with $596 $597 ($44 is responsible)
}
# Builtins::listInsert
$615 = { $616 $617 $618 (+ responsible $619) ->
  $620 = call $170 with $616 ($68 is responsible)
  $621 = call $151 with $620 $177 ($69 is responsible)
  $622 = call $250 with $621 $238 $619 ($53 is responsible)
  $623 = call $170 with $617 ($68 is responsible)
  $624 = call $151 with $623 $175 ($69 is responsible)
  $625 = call $250 with $624 $228 $619 ($46 is responsible)
  $626 = call $290 with $617 ($47 is responsible)
  $627 = call $250 with $626 $227 $619 ($48 is responsible)
  $628 = call $162 with $616 ($49 is responsible)
  $629 = call $391 with $617 $628 ($50 is responsible)
  $630 = call $250 with $629 $226 $619 ($51 is responsible)
  $631 = call $161 with $616 $617 $618 ($52 is responsible)
}
# Builtins::toDebugText, Core:iterator:199, Core:toDebugText:toDebugText
$632 = { $633 (+ responsible $634) ->
  $635 = call $169 with $633 ($67 is responsible)
}
# Core:function:is0
$636 = { $637 (+ responsible $638) ->
  $639 = call $170 with $637 ($70 is responsible)
  $640 = call $151 with $639 $173 ($1 is responsible)
  # Core:function:is0:11
  $641 = { (responsible $642) ->
    $643 = call $170 with $637 ($68 is responsible)
    $644 = call $151 with $643 $173 ($69 is responsible)
    $645 = call $250 with $644 $221 $129 ($7 is responsible)
    $646 = call $152 with $637 ($6 is responsible)
    $647 = call $151 with $646 $187 ($1 is responsible)
  }
  $648 = call $493 with $640 $641 $284 ($130 is responsible)
}
# Core:function:run
$649 = { $650 (+ responsible $651) ->
  $652 = call $636 with $650 ($134 is responsible)
  $653 = call $250 with $652 $236 $651 ($135 is responsible)
  $654 = call $170 with $650 ($68 is responsible)
  $655 = call $151 with $654 $173 ($69 is responsible)
  $656 = call $250 with $655 $221 $133 ($5 is responsible)
  $657 = call $152 with $650 ($2 is responsible)
  $658 = call $151 with $657 $187 ($1 is responsible)
  $659 = call $250 with $658 $222 $133 ($3 is responsible)
  $660 = call $650 with no arguments ($4 is responsible)
}
# Core:bool:is
$661 = { $662 (+ responsible $663) ->
  $664 = call $170 with $662 ($76 is responsible)
  $665 = call $151 with $184 $664 ($76 is responsible)
  # Core:bool:is:1:equals:then
  $666 = { (responsible $667) ->
    $668 = call $167 with $662 ($76 is responsible)
    $669 = call $151 with $186 $668 ($76 is responsible)
    # Core:bool:is:1:equals:then
    $670 = { (responsible $671) ->
      $672 = call $166 with $662 ($76 is responsible)
      $673 = call $151 with $172 $672 ($76 is responsible)
      # Core:bool:is:1:equals:else
      $674 = { (responsible $675) ->
        $676 = call $169 with $672 ($76 is responsible)
        $677 = call $165 with $662 ($76 is responsible)
        $678 = call $169 with $677 ($76 is responsible)
        $679 = call $168 with $205 $678 ($76 is responsible)
        $680 = call $168 with $679 $210 ($76 is responsible)
        $681 = ($180, $680)
      }
      $682 = call $153 with $673 $278 $674 ($76 is responsible)
    }
    # Core:bool:is:1:equals:else
    $683 = { (responsible $684) ->
      $685 = call $169 with $668 ($76 is responsible)
      $686 = call $168 with $201 $685 ($76 is responsible)
      $687 = call $168 with $686 $195 ($76 is responsible)
      $688 = ($180, $687)
    }
    $689 = call $153 with $669 $670 $683 ($76 is responsible)
  }
  # Core:bool:is:1:equals:else
  $690 = { (responsible $691) ->
    $692 = call $169 with $664 ($76 is responsible)
    $693 = call $168 with $203 $692 ($76 is responsible)
    $694 = call $168 with $693 $210 ($76 is responsible)
    $695 = ($180, $694)
  }
  $696 = call $153 with $665 $666 $690 ($76 is responsible)
  $697 = call $160 with $696 $187 ($76 is responsible)
  $698 = call $151 with $697 $178 ($76 is responsible)
  # Core:bool:is:1:isMatch:then
  $699 = { (responsible $700) ->
    $701 = $696
  }
  # Core:bool:is:1:isMatch:else
  $702 = { (responsible $703) ->
    $704 = call $170 with $662 ($76 is responsible)
    $705 = call $151 with $184 $704 ($76 is responsible)
    # Core:bool:is:1:equals:then
    $706 = { (responsible $707) ->
      $708 = call $167 with $662 ($76 is responsible)
      $709 = call $151 with $172 $708 ($76 is responsible)
      # Core:bool:is:1:equals:then
      $710 = { (responsible $711) ->
        $712 = call $166 with $662 ($76 is responsible)
        $713 = call $151 with $172 $712 ($76 is responsible)
        # Core:bool:is:1:equals:else
        $714 = { (responsible $715) ->
          $716 = call $169 with $712 ($76 is responsible)
          $717 = call $165 with $662 ($76 is responsible)
          $718 = call $169 with $717 ($76 is responsible)
          $719 = call $168 with $205 $718 ($76 is responsible)
          $720 = call $168 with $719 $210 ($76 is responsible)
          $721 = ($180, $720)
        }
        $722 = call $153 with $713 $278 $714 ($76 is responsible)
      }
      # Core:bool:is:1:equals:else
      $723 = { (responsible $724) ->
        $725 = call $169 with $708 ($76 is responsible)
        $726 = call $168 with $198 $725 ($76 is responsible)
        $727 = call $168 with $726 $195 ($76 is responsible)
        $728 = ($180, $727)
      }
      $729 = call $153 with $709 $710 $723 ($76 is responsible)
    }
    # Core:bool:is:1:equals:else
    $730 = { (responsible $731) ->
      $732 = call $169 with $704 ($76 is responsible)
      $733 = call $168 with $203 $732 ($76 is responsible)
      $734 = call $168 with $733 $210 ($76 is responsible)
      $735 = ($180, $734)
    }
    $736 = call $153 with $705 $706 $730 ($76 is responsible)
  }
  $737 = call $153 with $698 $699 $702 ($76 is responsible)
  $738 = call $160 with $737 $187 ($76 is responsible)
  $739 = call $151 with $738 $178 ($76 is responsible)
  $740 = call $153 with $739 $281 $284 ($76 is responsible)
}
# Core:bool:not:6:case-1:didNotMatch
$741 = { (responsible $742) ->
  $743 = panicking because $206 ($95 is at fault)
}
# Core:bool:not
$744 = { $745 (+ responsible $746) ->
  $747 = call $661 with $745 ($93 is responsible)
  $748 = call $250 with $747 $235 $746 ($94 is responsible)
  $749 = call $170 with $745 ($95 is responsible)
  $750 = call $151 with $184 $749 ($95 is responsible)
  # Core:bool:not:6:equals:then
  $751 = { (responsible $752) ->
    $753 = call $167 with $745 ($95 is responsible)
    $754 = call $151 with $186 $753 ($95 is responsible)
    # Core:bool:not:6:equals:then
    $755 = { (responsible $756) ->
      $757 = call $166 with $745 ($95 is responsible)
      $758 = call $151 with $172 $757 ($95 is responsible)
      # Core:bool:not:6:equals:else
      $759 = { (responsible $760) ->
        $761 = call $169 with $757 ($95 is responsible)
        $762 = call $165 with $745 ($95 is responsible)
        $763 = call $169 with $762 ($95 is responsible)
        $764 = call $168 with $205 $763 ($95 is responsible)
        $765 = call $168 with $764 $210 ($95 is responsible)
        $766 = ($180, $765)
      }
      $767 = call $153 with $758 $278 $759 ($95 is responsible)
    }
    # Core:bool:not:6:equals:else
    $768 = { (responsible $769) ->
      $770 = call $169 with $753 ($95 is responsible)
      $771 = call $168 with $201 $770 ($95 is responsible)
      $772 = call $168 with $771 $195 ($95 is responsible)
      $773 = ($180, $772)
    }
    $774 = call $153 with $754 $755 $768 ($95 is responsible)
  }
  # Core:bool:not:6:equals:else
  $775 = { (responsible $776) ->
    $777 = call $169 with $749 ($95 is responsible)
    $778 = call $168 with $203 $777 ($95 is responsible)
    $779 = call $168 with $778 $210 ($95 is responsible)
    $780 = ($180, $779)
  }
  $781 = call $153 with $750 $751 $775 ($95 is responsible)
  $782 = call $160 with $781 $187 ($95 is responsible)
  $783 = call $151 with $782 $178 ($95 is responsible)
  # Core:bool:not:6:case-0:didNotMatch
  $784 = { (responsible $785) ->
    $786 = call $170 with $745 ($95 is responsible)
    $787 = call $151 with $184 $786 ($95 is responsible)
    # Core:bool:not:6:equals:then
    $788 = { (responsible $789) ->
      $790 = call $167 with $745 ($95 is responsible)
      $791 = call $151 with $172 $790 ($95 is responsible)
      # Core:bool:not:6:equals:then
      $792 = { (responsible $793) ->
        $794 = call $166 with $745 ($95 is responsible)
        $795 = call $151 with $172 $794 ($95 is responsible)
        # Core:bool:not:6:equals:else
        $796 = { (responsible $797) ->
          $798 = call $169 with $794 ($95 is responsible)
          $799 = call $165 with $745 ($95 is responsible)
          $800 = call $169 with $799 ($95 is responsible)
          $801 = call $168 with $205 $800 ($95 is responsible)
          $802 = call $168 with $801 $210 ($95 is responsible)
          $803 = ($180, $802)
        }
        $804 = call $153 with $795 $278 $796 ($95 is responsible)
      }
      # Core:bool:not:6:equals:else
      $805 = { (responsible $806) ->
        $807 = call $169 with $790 ($95 is responsible)
        $808 = call $168 with $198 $807 ($95 is responsible)
        $809 = call $168 with $808 $195 ($95 is responsible)
        $810 = ($180, $809)
      }
      $811 = call $153 with $791 $792 $805 ($95 is responsible)
    }
    # Core:bool:not:6:equals:else
    $812 = { (responsible $813) ->
      $814 = call $169 with $786 ($95 is responsible)
      $815 = call $168 with $203 $814 ($95 is responsible)
      $816 = call $168 with $815 $210 ($95 is responsible)
      $817 = ($180, $816)
    }
    $818 = call $153 with $787 $788 $812 ($95 is responsible)
    $819 = call $160 with $818 $187 ($95 is responsible)
    $820 = call $151 with $819 $178 ($95 is responsible)
    $821 = call $153 with $820 $281 $741 ($95 is responsible)
  }
  $822 = call $153 with $783 $284 $784 ($95 is responsible)
}
# Core:bool:lazyAnd:18:case-1:didNotMatch
$823 = { (responsible $824) ->
  $825 = panicking because $206 ($79 is at fault)
}
# Core:bool:lazyAnd
$826 = { $827 $828 (+ responsible $829) ->
  $830 = call $661 with $827 ($83 is responsible)
  $831 = call $250 with $830 $231 $829 ($84 is responsible)
  $832 = call $636 with $828 ($77 is responsible)
  $833 = call $250 with $832 $223 $829 ($78 is responsible)
  $834 = call $170 with $827 ($79 is responsible)
  $835 = call $151 with $184 $834 ($79 is responsible)
  # Core:bool:lazyAnd:18:equals:then
  $836 = { (responsible $837) ->
    $838 = call $167 with $827 ($79 is responsible)
    $839 = call $151 with $186 $838 ($79 is responsible)
    # Core:bool:lazyAnd:18:equals:then
    $840 = { (responsible $841) ->
      $842 = call $166 with $827 ($79 is responsible)
      $843 = call $151 with $172 $842 ($79 is responsible)
      # Core:bool:lazyAnd:18:equals:else
      $844 = { (responsible $845) ->
        $846 = call $169 with $842 ($79 is responsible)
        $847 = call $165 with $827 ($79 is responsible)
        $848 = call $169 with $847 ($79 is responsible)
        $849 = call $168 with $205 $848 ($79 is responsible)
        $850 = call $168 with $849 $210 ($79 is responsible)
        $851 = ($180, $850)
      }
      $852 = call $153 with $843 $278 $844 ($79 is responsible)
    }
    # Core:bool:lazyAnd:18:equals:else
    $853 = { (responsible $854) ->
      $855 = call $169 with $838 ($79 is responsible)
      $856 = call $168 with $201 $855 ($79 is responsible)
      $857 = call $168 with $856 $195 ($79 is responsible)
      $858 = ($180, $857)
    }
    $859 = call $153 with $839 $840 $853 ($79 is responsible)
  }
  # Core:bool:lazyAnd:18:equals:else
  $860 = { (responsible $861) ->
    $862 = call $169 with $834 ($79 is responsible)
    $863 = call $168 with $203 $862 ($79 is responsible)
    $864 = call $168 with $863 $210 ($79 is responsible)
    $865 = ($180, $864)
  }
  $866 = call $153 with $835 $836 $860 ($79 is responsible)
  $867 = call $160 with $866 $187 ($79 is responsible)
  $868 = call $151 with $867 $178 ($79 is responsible)
  # Core:bool:lazyAnd:18:case-0:didNotMatch
  $869 = { (responsible $870) ->
    $871 = call $170 with $827 ($79 is responsible)
    $872 = call $151 with $184 $871 ($79 is responsible)
    # Core:bool:lazyAnd:18:equals:then
    $873 = { (responsible $874) ->
      $875 = call $167 with $827 ($79 is responsible)
      $876 = call $151 with $172 $875 ($79 is responsible)
      # Core:bool:lazyAnd:18:equals:then
      $877 = { (responsible $878) ->
        $879 = call $166 with $827 ($79 is responsible)
        $880 = call $151 with $172 $879 ($79 is responsible)
        # Core:bool:lazyAnd:18:equals:else
        $881 = { (responsible $882) ->
          $883 = call $169 with $879 ($79 is responsible)
          $884 = call $165 with $827 ($79 is responsible)
          $885 = call $169 with $884 ($79 is responsible)
          $886 = call $168 with $205 $885 ($79 is responsible)
          $887 = call $168 with $886 $210 ($79 is responsible)
          $888 = ($180, $887)
        }
        $889 = call $153 with $880 $278 $881 ($79 is responsible)
      }
      # Core:bool:lazyAnd:18:equals:else
      $890 = { (responsible $891) ->
        $892 = call $169 with $875 ($79 is responsible)
        $893 = call $168 with $198 $892 ($79 is responsible)
        $894 = call $168 with $893 $195 ($79 is responsible)
        $895 = ($180, $894)
      }
      $896 = call $153 with $876 $877 $890 ($79 is responsible)
    }
    # Core:bool:lazyAnd:18:equals:else
    $897 = { (responsible $898) ->
      $899 = call $169 with $871 ($79 is responsible)
      $900 = call $168 with $203 $899 ($79 is responsible)
      $901 = call $168 with $900 $210 ($79 is responsible)
      $902 = ($180, $901)
    }
    $903 = call $153 with $872 $873 $897 ($79 is responsible)
    $904 = call $160 with $903 $187 ($79 is responsible)
    $905 = call $151 with $904 $178 ($79 is responsible)
    $906 = call $153 with $905 $284 $823 ($79 is responsible)
  }
  # Core:bool:lazyAnd:18:case-0:patternMatch
  $907 = { (responsible $908) ->
    $909 = call $649 with $828 ($82 is responsible)
    $910 = $909
    $911 = call $661 with $909 ($80 is responsible)
    $912 = call $250 with $911 $215 $829 ($81 is responsible)
    $913 = $910
  }
  $914 = call $153 with $868 $907 $869 ($79 is responsible)
}
# Core:bool:lazyOr:18:case-1:didNotMatch
$915 = { (responsible $916) ->
  $917 = panicking because $206 ($87 is at fault)
}
# Core:bool:lazyOr
$918 = { $919 $920 (+ responsible $921) ->
  $922 = call $661 with $919 ($91 is responsible)
  $923 = call $250 with $922 $231 $921 ($92 is responsible)
  $924 = call $636 with $920 ($85 is responsible)
  $925 = call $250 with $924 $223 $921 ($86 is responsible)
  $926 = call $170 with $919 ($87 is responsible)
  $927 = call $151 with $184 $926 ($87 is responsible)
  # Core:bool:lazyOr:18:equals:then
  $928 = { (responsible $929) ->
    $930 = call $167 with $919 ($87 is responsible)
    $931 = call $151 with $186 $930 ($87 is responsible)
    # Core:bool:lazyOr:18:equals:then
    $932 = { (responsible $933) ->
      $934 = call $166 with $919 ($87 is responsible)
      $935 = call $151 with $172 $934 ($87 is responsible)
      # Core:bool:lazyOr:18:equals:else
      $936 = { (responsible $937) ->
        $938 = call $169 with $934 ($87 is responsible)
        $939 = call $165 with $919 ($87 is responsible)
        $940 = call $169 with $939 ($87 is responsible)
        $941 = call $168 with $205 $940 ($87 is responsible)
        $942 = call $168 with $941 $210 ($87 is responsible)
        $943 = ($180, $942)
      }
      $944 = call $153 with $935 $278 $936 ($87 is responsible)
    }
    # Core:bool:lazyOr:18:equals:else
    $945 = { (responsible $946) ->
      $947 = call $169 with $930 ($87 is responsible)
      $948 = call $168 with $201 $947 ($87 is responsible)
      $949 = call $168 with $948 $195 ($87 is responsible)
      $950 = ($180, $949)
    }
    $951 = call $153 with $931 $932 $945 ($87 is responsible)
  }
  # Core:bool:lazyOr:18:equals:else
  $952 = { (responsible $953) ->
    $954 = call $169 with $926 ($87 is responsible)
    $955 = call $168 with $203 $954 ($87 is responsible)
    $956 = call $168 with $955 $210 ($87 is responsible)
    $957 = ($180, $956)
  }
  $958 = call $153 with $927 $928 $952 ($87 is responsible)
  $959 = call $160 with $958 $187 ($87 is responsible)
  $960 = call $151 with $959 $178 ($87 is responsible)
  # Core:bool:lazyOr:18:case-0:didNotMatch
  $961 = { (responsible $962) ->
    $963 = call $170 with $919 ($87 is responsible)
    $964 = call $151 with $184 $963 ($87 is responsible)
    # Core:bool:lazyOr:18:equals:then
    $965 = { (responsible $966) ->
      $967 = call $167 with $919 ($87 is responsible)
      $968 = call $151 with $172 $967 ($87 is responsible)
      # Core:bool:lazyOr:18:equals:then
      $969 = { (responsible $970) ->
        $971 = call $166 with $919 ($87 is responsible)
        $972 = call $151 with $172 $971 ($87 is responsible)
        # Core:bool:lazyOr:18:equals:else
        $973 = { (responsible $974) ->
          $975 = call $169 with $971 ($87 is responsible)
          $976 = call $165 with $919 ($87 is responsible)
          $977 = call $169 with $976 ($87 is responsible)
          $978 = call $168 with $205 $977 ($87 is responsible)
          $979 = call $168 with $978 $210 ($87 is responsible)
          $980 = ($180, $979)
        }
        $981 = call $153 with $972 $278 $973 ($87 is responsible)
      }
      # Core:bool:lazyOr:18:equals:else
      $982 = { (responsible $983) ->
        $984 = call $169 with $967 ($87 is responsible)
        $985 = call $168 with $198 $984 ($87 is responsible)
        $986 = call $168 with $985 $195 ($87 is responsible)
        $987 = ($180, $986)
      }
      $988 = call $153 with $968 $969 $982 ($87 is responsible)
    }
    # Core:bool:lazyOr:18:equals:else
    $989 = { (responsible $990) ->
      $991 = call $169 with $963 ($87 is responsible)
      $992 = call $168 with $203 $991 ($87 is responsible)
      $993 = call $168 with $992 $210 ($87 is responsible)
      $994 = ($180, $993)
    }
    $995 = call $153 with $964 $965 $989 ($87 is responsible)
    $996 = call $160 with $995 $187 ($87 is responsible)
    $997 = call $151 with $996 $178 ($87 is responsible)
    # Core:bool:lazyOr:18:case-1:patternMatch
    $998 = { (responsible $999) ->
      $1000 = call $649 with $920 ($88 is responsible)
      $1001 = $1000
      $1002 = call $661 with $1000 ($89 is responsible)
      $1003 = call $250 with $1002 $215 $921 ($90 is responsible)
      $1004 = $1001
    }
    $1005 = call $153 with $997 $998 $915 ($87 is responsible)
  }
  $1006 = call $153 with $960 $281 $961 ($87 is responsible)
}
# Core:check:checkEquals
$1007 = { $1008 $1009 (+ responsible $1010) ->
  $1011 = call $151 with $1008 $1009 ($1 is responsible)
  $1012 = call $170 with $1008 ($101 is responsible)
  $1013 = call $151 with $1012 $185 ($102 is responsible)
  # Core:check:checkEquals:14
  $1014 = { (responsible $1015) ->
    $1016 = $1008
  }
  # Core:check:checkEquals:15
  $1017 = { (responsible $1018) ->
    $1019 = call $169 with $1008 ($103 is responsible)
  }
  $1020 = call $153 with $1013 $1014 $1017 ($104 is responsible)
  $1021 = call $170 with $1009 ($105 is responsible)
  $1022 = call $151 with $1021 $185 ($106 is responsible)
  # Core:check:checkEquals:21
  $1023 = { (responsible $1024) ->
    $1025 = $1009
  }
  # Core:check:checkEquals:22
  $1026 = { (responsible $1027) ->
    $1028 = call $169 with $1009 ($107 is responsible)
  }
  $1029 = call $153 with $1022 $1023 $1026 ($108 is responsible)
  $1030 = call $168 with $196 $1020 ($109 is responsible)
  $1031 = call $168 with $1030 $194 ($110 is responsible)
  $1032 = call $168 with $1031 $1029 ($111 is responsible)
  $1033 = call $168 with $1032 $195 ($112 is responsible)
  $1034 = call $250 with $1011 $1033 $1010 ($113 is responsible)
}
# Core:function:is2
$1035 = { $1036 (+ responsible $1037) ->
  $1038 = call $170 with $1036 ($70 is responsible)
  $1039 = call $151 with $1038 $173 ($1 is responsible)
  # Core:function:is2:11
  $1040 = { (responsible $1041) ->
    $1042 = call $170 with $1036 ($68 is responsible)
    $1043 = call $151 with $1042 $173 ($69 is responsible)
    $1044 = call $250 with $1043 $221 $131 ($7 is responsible)
    $1045 = call $152 with $1036 ($6 is responsible)
    $1046 = call $151 with $1045 $189 ($1 is responsible)
  }
  $1047 = call $493 with $1039 $1040 $284 ($132 is responsible)
}
# Core:int:compareTo
$1048 = { $1049 $1050 (+ responsible $1051) ->
  $1052 = call $170 with $1049 ($70 is responsible)
  $1053 = call $151 with $1052 $175 ($1 is responsible)
  $1054 = call $250 with $1053 $233 $1051 ($137 is responsible)
  $1055 = call $170 with $1050 ($70 is responsible)
  $1056 = call $151 with $1055 $175 ($1 is responsible)
  $1057 = call $250 with $1056 $234 $1051 ($138 is responsible)
  $1058 = call $170 with $1049 ($68 is responsible)
  $1059 = call $151 with $1058 $175 ($69 is responsible)
  $1060 = call $250 with $1059 $211 $136 ($24 is responsible)
  $1061 = call $170 with $1050 ($68 is responsible)
  $1062 = call $151 with $1061 $175 ($69 is responsible)
  $1063 = call $250 with $1062 $213 $136 ($22 is responsible)
  $1064 = call $156 with $1049 $1050 ($23 is responsible)
}
# Core:int:isLessThan
$1065 = { $1066 $1067 (+ responsible $1068) ->
  $1069 = call $170 with $1066 ($70 is responsible)
  $1070 = call $151 with $1069 $175 ($1 is responsible)
  $1071 = call $250 with $1070 $233 $1068 ($143 is responsible)
  $1072 = call $170 with $1067 ($70 is responsible)
  $1073 = call $151 with $1072 $175 ($1 is responsible)
  $1074 = call $250 with $1073 $234 $1068 ($144 is responsible)
  $1075 = call $1048 with $1066 $1067 ($142 is responsible)
  $1076 = call $151 with $1075 $176 ($1 is responsible)
}
# Core:int:isGreaterThan
$1077 = { $1078 $1079 (+ responsible $1080) ->
  $1081 = call $170 with $1078 ($70 is responsible)
  $1082 = call $151 with $1081 $175 ($1 is responsible)
  $1083 = call $250 with $1082 $233 $1080 ($140 is responsible)
  $1084 = call $170 with $1079 ($70 is responsible)
  $1085 = call $151 with $1084 $175 ($1 is responsible)
  $1086 = call $250 with $1085 $234 $1080 ($141 is responsible)
  $1087 = call $1048 with $1078 $1079 ($139 is responsible)
  $1088 = call $151 with $1087 $174 ($1 is responsible)
}
# Core:int:isNonNegative
$1089 = { $1090 (+ responsible $1091) ->
  $1092 = call $170 with $1090 ($70 is responsible)
  $1093 = call $151 with $1092 $175 ($1 is responsible)
  $1094 = call $250 with $1093 $235 $1091 ($148 is responsible)
  $1095 = call $170 with $1090 ($70 is responsible)
  $1096 = call $151 with $1095 $175 ($1 is responsible)
  $1097 = call $250 with $1096 $235 $149 ($145 is responsible)
  $1098 = call $1065 with $1090 $187 ($146 is responsible)
  $1099 = call $744 with $1098 ($147 is responsible)
}
$1100 = ($180, $204)
# Core:fixedDecimal:fromIntScaled
$1101 = { $1102 $1103 (+ responsible $1104) ->
  $1105 = call $170 with $1102 ($70 is responsible)
  $1106 = call $151 with $1105 $175 ($1 is responsible)
  $1107 = call $250 with $1106 $230 $1104 ($125 is responsible)
  $1108 = call $170 with $1103 ($70 is responsible)
  $1109 = call $151 with $1108 $175 ($1 is responsible)
  # Core:fixedDecimal:isScale:18
  $1110 = { (responsible $1111) ->
    $1112 = call $1089 with $1103 ($127 is responsible)
  }
  $1113 = call $826 with $1109 $1110 ($128 is responsible)
  $1114 = call $250 with $1113 $237 $1104 ($126 is responsible)
  $1115 = [$182: $1103, $179: $1102]
  $1116 = FixedDecimal $1115
}
$1117 = call $1101 with $187 $187 ($124 is responsible)
$1118 = Core:function:is1:11:3
$1119 = Core:function:is1:13
# Core:function:is1
$1120 = { $1121 (+ responsible $1122) ->
  $1123 = call $170 with $1121 ($70 is responsible)
  $1124 = call $151 with $1123 $173 ($1 is responsible)
  # Core:function:is1:11
  $1125 = { (responsible $1126) ->
    $1127 = call $170 with $1121 ($68 is responsible)
    $1128 = call $151 with $1127 $173 ($69 is responsible)
    $1129 = call $250 with $1128 $221 $1118 ($7 is responsible)
    $1130 = call $152 with $1121 ($6 is responsible)
    $1131 = call $151 with $1130 $188 ($1 is responsible)
  }
  $1132 = call $493 with $1124 $1125 $284 ($1119 is responsible)
}
$1133 = Core:int:fitsInRustU32:15
$1134 = Core:int:fitsInRustU32:4
$1135 = Core:int:fitsInRustU32:7
$1136 = Core:int:fitsInRustU32:9
$1137 = Core:int:isOdd:4
$1138 = Core:int:isOdd:8
$1139 = Core:int:isPositive:4
$1140 = Core:int:isPositive:8
$1141 = 4294967295
$1142 = "`isNonNegative value` was not satisfied"
# Core:int:isOdd
$1143 = { $1144 (+ responsible $1145) ->
  $1146 = call $170 with $1144 ($70 is responsible)
  $1147 = call $151 with $1146 $175 ($1 is responsible)
  $1148 = call $250 with $1147 $235 $1145 ($1137 is responsible)
  $1149 = call $170 with $1144 ($68 is responsible)
  $1150 = call $151 with $1149 $175 ($69 is responsible)
  $1151 = call $250 with $1150 $211 $1138 ($21 is responsible)
  $1152 = call $155 with $1144 $188 ($20 is responsible)
  $1153 = call $151 with $1152 $188 ($1 is responsible)
}
$1154 = Core:iterator:109
$1155 = Core:iterator:all:11
$1156 = Core:iterator:all:15
$1157 = Core:iterator:all:18:13
$1158 = Core:iterator:all:18:15
$1159 = Core:iterator:all:18:2
$1160 = Core:iterator:all:18:26
$1161 = Core:iterator:all:19
$1162 = Core:iterator:all:9
$1163 = Core:iterator:any:11
$1164 = Core:iterator:any:15
$1165 = Core:iterator:any:18:13
$1166 = Core:iterator:any:18:15
$1167 = Core:iterator:any:18:2
$1168 = Core:iterator:any:18:26
$1169 = Core:iterator:any:19
$1170 = Core:iterator:any:9
$1171 = Core:iterator:chunked:11
$1172 = Core:iterator:chunked:21
$1173 = Core:iterator:chunked:23
$1174 = Core:iterator:chunked:27
$1175 = Core:iterator:chunked:32
$1176 = Core:iterator:ensure:11
$1177 = Core:iterator:ensure:15
$1178 = Core:iterator:ensure:19:2
$1179 = Core:iterator:ensure:20
$1180 = Core:iterator:ensure:9
$1181 = Core:iterator:foldLeft:14
$1182 = Core:iterator:foldLeft:16
$1183 = Core:iterator:foldLeft:23:1
$1184 = Core:iterator:foldLeft:23:4
$1185 = Core:iterator:foldLeft:23:5
$1186 = Core:iterator:foldLeft:23:5:10
$1187 = Core:iterator:foldLeft:23:5:8
$1188 = Core:iterator:foldLeft:23:5:item
$1189 = Core:iterator:foldLeft:23:5:rest
$1190 = Core:iterator:foldLeft:23:iterator
$1191 = Core:iterator:foldLeft:23:value
$1192 = Core:iterator:foldLeft:24
$1193 = Core:iterator:foldLeft:3
$1194 = Core:iterator:fromList:11
$1195 = Core:iterator:fromList:22
$1196 = Core:iterator:fromList:23:10
$1197 = Core:iterator:fromList:24
$1198 = Core:iterator:generate:11
$1199 = Core:iterator:generate:21
$1200 = Core:iterator:generate:23
$1201 = Core:iterator:generate:33
$1202 = Core:iterator:generate:35
$1203 = Core:iterator:generate:45
$1204 = Core:iterator:generate:47
$1205 = Core:iterator:generate:50:6:16
$1206 = Core:iterator:generate:50:6:4
$1207 = Core:iterator:generate:50:7
$1208 = Core:iterator:generate:51
$1209 = Core:iterator:generateWithState:11
$1210 = Core:iterator:generateWithState:14:1:2
$1211 = Core:iterator:generateWithState:14:1:3
$1212 = Core:iterator:generateWithState:14:1:3:19
$1213 = Core:iterator:generateWithState:14:1:3:20
$1214 = Core:iterator:generateWithState:14:1:3:22:0
$1215 = Core:iterator:generateWithState:14:1:3:23
$1216 = Core:iterator:generateWithState:14:1:3:25
$1217 = Core:iterator:generateWithState:14:1:3:26
$1218 = Core:iterator:generateWithState:14:1:3:27
$1219 = Core:iterator:generateWithState:14:1:3:6
$1220 = Core:iterator:generateWithState:14:1:3:item
$1221 = Core:iterator:generateWithState:14:1:3:state
$1222 = Core:iterator:generateWithState:15
$1223 = Core:iterator:generateWithState:9
$1224 = Core:iterator:isEmpty:3
$1225 = Core:iterator:isEmpty:7
$1226 = Core:iterator:joinToText:12:11
$1227 = Core:iterator:joinToText:12:22
$1228 = Core:iterator:joinToText:13
$1229 = Core:iterator:joinToText:3
$1230 = Core:iterator:length:3
$1231 = Core:iterator:length:6
$1232 = Core:iterator:length:8
$1233 = Core:iterator:map:14
$1234 = Core:iterator:map:16
$1235 = Core:iterator:map:19:2
$1236 = Core:iterator:map:19:3
$1237 = Core:iterator:map:19:3:5
$1238 = Core:iterator:map:19:3:item
$1239 = Core:iterator:map:19:3:rest
$1240 = Core:iterator:map:20
$1241 = Core:iterator:map:3
$1242 = Core:iterator:next:17
$1243 = Core:iterator:next:3
$1244 = Core:iterator:next:6
$1245 = Core:iterator:next:nextFunction
$1246 = Core:iterator:reduceLeft:11
$1247 = Core:iterator:reduceLeft:15
$1248 = Core:iterator:reduceLeft:17
$1249 = Core:iterator:reduceLeft:18
$1250 = Core:iterator:reduceLeft:18:14
$1251 = Core:iterator:reduceLeft:18:item
$1252 = Core:iterator:reduceLeft:18:rest
$1253 = Core:iterator:reduceLeft:9
$1254 = Core:iterator:skip:16
$1255 = Core:iterator:skip:26
$1256 = Core:iterator:skip:28
$1257 = Core:iterator:skip:3
$1258 = Core:iterator:skip:30:6:1
$1259 = Core:iterator:skip:30:6:7:2
$1260 = Core:iterator:skip:30:6:8:2
$1261 = Core:iterator:skip:30:6:8:3
$1262 = Core:iterator:skip:30:6:8:3:15
$1263 = Core:iterator:skip:30:6:8:3:17
$1264 = Core:iterator:skip:30:6:8:3:rest
$1265 = Core:iterator:skip:30:6:9
$1266 = Core:iterator:skip:30:6:iterator
$1267 = Core:iterator:skip:30:6:n
$1268 = Core:iterator:skip:30:7
$1269 = Core:iterator:sum:19
$1270 = Core:iterator:sum:3
$1271 = Core:iterator:sum:5:17
$1272 = Core:iterator:sum:6
$1273 = Core:iterator:sum:8:10
$1274 = Core:iterator:sum:9
$1275 = Core:iterator:take:11
$1276 = Core:iterator:take:21
$1277 = Core:iterator:take:23
$1278 = Core:iterator:take:27
$1279 = Core:iterator:take:29
$1280 = Core:iterator:take:31:1
$1281 = Core:iterator:take:31:12
$1282 = Core:iterator:take:31:index
$1283 = Core:iterator:take:31:item
$1284 = Core:iterator:take:32
$1285 = Core:iterator:take:34:7
$1286 = Core:iterator:take:35
$1287 = Core:iterator:takeWhile:3
$1288 = Core:iterator:takeWhile:7:2
$1289 = Core:iterator:takeWhile:7:3
$1290 = Core:iterator:takeWhile:7:3:4
$1291 = Core:iterator:takeWhile:7:3:7
$1292 = Core:iterator:takeWhile:7:3:item
$1293 = Core:iterator:takeWhile:7:3:rest
$1294 = Core:iterator:takeWhile:8
$1295 = Core:iterator:toList:3
$1296 = Core:iterator:toList:6:10
$1297 = Core:iterator:toList:7
$1298 = Core:iterator:where:14
$1299 = Core:iterator:where:16
$1300 = Core:iterator:where:19:2:2
$1301 = Core:iterator:where:19:2:3
$1302 = Core:iterator:where:19:2:3:4
$1303 = Core:iterator:where:19:2:3:6:2
$1304 = Core:iterator:where:19:2:3:6:4
$1305 = Core:iterator:where:19:2:3:6:5
$1306 = Core:iterator:where:19:2:3:6:5:item
$1307 = Core:iterator:where:19:2:3:6:5:rest
$1308 = Core:iterator:where:19:2:3:7
$1309 = Core:iterator:where:19:2:3:item
$1310 = Core:iterator:where:19:2:3:rest
$1311 = Core:iterator:where:19:3
$1312 = Core:iterator:where:20
$1313 = Core:iterator:where:3
$1314 = Core:iterator:windowed:16
$1315 = Core:iterator:windowed:26
$1316 = Core:iterator:windowed:28
$1317 = Core:iterator:windowed:3
$1318 = Core:iterator:windowed:40
$1319 = Core:iterator:windowed:50
$1320 = Core:iterator:windowed:52
$1321 = Core:iterator:windowed:62
$1322 = Core:iterator:windowed:64
$1323 = Core:iterator:windowed:67:16
$1324 = Core:iterator:windowed:67:22
$1325 = Core:iterator:windowed:67:26:7
$1326 = Core:iterator:windowed:67:28
$1327 = Core:iterator:windowed:67:3
$1328 = Core:iterator:windowed:67:5
$1329 = Core:iterator:windowed:68
$1330 = Core:iterator:withIndex:11:1
$1331 = Core:iterator:withIndex:11:4
$1332 = Core:iterator:withIndex:11:5
$1333 = Core:iterator:withIndex:11:5:22
$1334 = Core:iterator:withIndex:11:5:item
$1335 = Core:iterator:withIndex:11:5:rest
$1336 = Core:iterator:withIndex:11:index
$1337 = Core:iterator:withIndex:11:iterator
$1338 = Core:iterator:withIndex:12
$1339 = Core:iterator:withIndex:3
$1340 = Core:iterator:wrapSafe:11
$1341 = Core:iterator:wrapSafe:12:9
$1342 = Core:iterator:wrapSafe:16:1
$1343 = Core:iterator:wrapSafe:16:13
$1344 = Core:iterator:wrapSafe:16:1:10
$1345 = Core:iterator:wrapSafe:16:1:function
$1346 = Core:iterator:wrapSafe:16:22
$1347 = Core:iterator:wrapSafe:16:24
$1348 = Core:iterator:wrapSafe:16:26:10
$1349 = Core:iterator:wrapSafe:16:26:10:19
$1350 = Core:iterator:wrapSafe:16:26:10:7
$1351 = Core:iterator:wrapSafe:16:26:10:item
$1352 = Core:iterator:wrapSafe:16:26:10:rest
$1353 = Core:iterator:wrapSafe:16:26:9
$1354 = Core:iterator:wrapSafe:17
$1355 = Core:iterator:wrapSafe:9
$1356 = Core:list:append:11
$1357 = Core:list:append:4
$1358 = Core:list:append:9
$1359 = Core:result:is:1
$1360 = Core:result:is:1:_
$1361 = Core:result:mapOrElse:14
$1362 = Core:result:mapOrElse:16
$1363 = Core:result:mapOrElse:2
$1364 = Core:result:mapOrElse:26
$1365 = Core:result:mapOrElse:28
$1366 = Core:result:mapOrElse:30
$1367 = Core:result:mapOrElse:30:2
$1368 = Core:result:mapOrElse:30:5
$1369 = Core:result:mapOrElse:30:value
$1370 = Core:result:mapOrElse:30:value#1
$1371 = Core:result:mapOrElse:4
$1372 = Core:result:unwrapOr:2
$1373 = Core:result:unwrapOr:4
$1374 = Core:result:unwrapOr:8
$1375 = Core:result:unwrapOrElse:14
$1376 = Core:result:unwrapOrElse:16
$1377 = Core:result:unwrapOrElse:2
$1378 = Core:result:unwrapOrElse:20:9
$1379 = Core:result:unwrapOrElse:21
$1380 = Core:result:unwrapOrElse:4
$1381 = Empty
$1382 = Error
$1383 = Index
$1384 = Item
$1385 = Iterator
$1386 = More
$1387 = N
$1388 = Ok
$1389 = Rest
$1390 = State
$1391 = Value
$1392 = ""
$1393 = "Can't `reduceLeft` an empty iterator"
$1394 = "Expected Empty, got "
$1395 = "Expected Error, got "
$1396 = "Expected Iterator, got "
$1397 = "Expected More, got "
$1398 = "Expected Ok, got "
$1399 = "Iterator items need to be ints."
$1400 = "Struct doesn't contain key `Index`: `"
$1401 = "Struct doesn't contain key `Item`: `"
$1402 = "Struct doesn't contain key `Iterator`: `"
$1403 = "Struct doesn't contain key `N`: `"
$1404 = "Struct doesn't contain key `Rest`: `"
$1405 = "Struct doesn't contain key `State`: `"
$1406 = "Struct doesn't contain key `Value`: `"
$1407 = "The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `"
$1408 = "The guard needs to panic."
$1409 = "`"
$1410 = "`all` needs an iterator."
$1411 = "`any` needs an iterator."
$1412 = "`bool.is allowPartialWindows` was not satisfied"
$1413 = "`bool.is itemResult` was not satisfied"
$1414 = "`chunked` needs an iterator."
$1415 = "`ensure` needs an iterator."
$1416 = "`foldLeft` needs an iterator."
$1417 = "`function.is0 defaultGetter` was not satisfied"
$1418 = "`function.is0 notIteratorGuard` was not satisfied"
$1419 = "`function.is1 errorMapper` was not satisfied"
$1420 = "`function.is1 guard` was not satisfied"
$1421 = "`function.is1 mapper` was not satisfied"
$1422 = "`function.is1 okMapper` was not satisfied"
$1423 = "`function.is1 tester` was not satisfied"
$1424 = "`function.is1 valueGetter` was not satisfied"
$1425 = "`function.is2 combine` was not satisfied"
$1426 = "`int.fitsInRustU32 length` was not satisfied"
$1427 = "`int.is length` was not satisfied"
$1428 = "`int.is n` was not satisfied"
$1429 = "`int.is size` was not satisfied"
$1430 = "`int.is step` was not satisfied"
$1431 = "`int.isNonNegative length` was not satisfied"
$1432 = "`int.isNonNegative n` was not satisfied"
$1433 = "`int.isPositive size` was not satisfied"
$1434 = "`int.isPositive step` was not satisfied"
$1435 = "`is list` was not satisfied"
$1436 = "`is result` was not satisfied"
$1437 = "`isEmpty` needs an iterator."
$1438 = "`joinToText` needs an iterator."
$1439 = "`length` needs an iterator."
$1440 = "`list.is l` was not satisfied"
$1441 = "`map` needs an iterator."
$1442 = "`next` needs an iterator."
$1443 = "`reduceLeft` needs an iterator."
$1444 = "`skip` needs an iterator."
$1445 = "`sum` needs an iterator."
$1446 = "`takeWhile` needs an iterator."
$1447 = "`take` needs an iterator."
$1448 = "`text.is item` was not satisfied"
$1449 = "`toList` needs an iterator."
$1450 = "`where` needs an iterator."
$1451 = "`windowed` needs an iterator."
$1452 = "`withIndex` needs an iterator."
# Core:result:is
$1453 = { $1454 (+ responsible $1455) ->
  $1456 = call $170 with $1454 ($1359 is responsible)
  $1457 = call $151 with $184 $1456 ($1359 is responsible)
  # Core:result:is:1:equals:then
  $1458 = { (responsible $1459) ->
    $1460 = call $167 with $1454 ($1359 is responsible)
    $1461 = call $151 with $1388 $1460 ($1359 is responsible)
    # Core:result:is:1:equals:then
    $1462 = { (responsible $1463) ->
      $1464 = call $166 with $1454 ($1359 is responsible)
      $1465 = call $151 with $186 $1464 ($1359 is responsible)
      # Core:result:is:1:equals:then
      $1466 = { (responsible $1467) ->
        $1468 = call $165 with $1454 ($1359 is responsible)
        $1469 = ($178, $1468)
      }
      # Core:result:is:1:equals:else
      $1470 = { (responsible $1471) ->
        $1472 = call $169 with $1464 ($1359 is responsible)
        $1473 = $1100
      }
      $1474 = call $153 with $1465 $1466 $1470 ($1359 is responsible)
    }
    # Core:result:is:1:equals:else
    $1475 = { (responsible $1476) ->
      $1477 = call $169 with $1460 ($1359 is responsible)
      $1478 = call $168 with $1398 $1477 ($1359 is responsible)
      $1479 = call $168 with $1478 $195 ($1359 is responsible)
      $1480 = ($180, $1479)
    }
    $1481 = call $153 with $1461 $1462 $1475 ($1359 is responsible)
  }
  # Core:result:is:1:equals:else
  $1482 = { (responsible $1483) ->
    $1484 = call $169 with $1456 ($1359 is responsible)
    $1485 = call $168 with $203 $1484 ($1359 is responsible)
    $1486 = call $168 with $1485 $210 ($1359 is responsible)
    $1487 = ($180, $1486)
  }
  $1488 = call $153 with $1457 $1458 $1482 ($1359 is responsible)
  $1489 = call $160 with $1488 $187 ($1359 is responsible)
  $1490 = call $151 with $1489 $178 ($1359 is responsible)
  # Core:result:is:1:isMatch:then
  $1491 = { (responsible $1492) ->
    $1493 = $1488
  }
  # Core:result:is:1:isMatch:else
  $1494 = { (responsible $1495) ->
    $1496 = call $170 with $1454 ($1359 is responsible)
    $1497 = call $151 with $184 $1496 ($1359 is responsible)
    # Core:result:is:1:equals:then
    $1498 = { (responsible $1499) ->
      $1500 = call $167 with $1454 ($1359 is responsible)
      $1501 = call $151 with $1382 $1500 ($1359 is responsible)
      # Core:result:is:1:equals:then
      $1502 = { (responsible $1503) ->
        $1504 = call $166 with $1454 ($1359 is responsible)
        $1505 = call $151 with $186 $1504 ($1359 is responsible)
        # Core:result:is:1:equals:then
        $1506 = { (responsible $1507) ->
          $1508 = call $165 with $1454 ($1359 is responsible)
          $1509 = ($178, $1508)
        }
        # Core:result:is:1:equals:else
        $1510 = { (responsible $1511) ->
          $1512 = call $169 with $1504 ($1359 is responsible)
          $1513 = $1100
        }
        $1514 = call $153 with $1505 $1506 $1510 ($1359 is responsible)
      }
      # Core:result:is:1:equals:else
      $1515 = { (responsible $1516) ->
        $1517 = call $169 with $1500 ($1359 is responsible)
        $1518 = call $168 with $1395 $1517 ($1359 is responsible)
        $1519 = call $168 with $1518 $195 ($1359 is responsible)
        $1520 = ($180, $1519)
      }
      $1521 = call $153 with $1501 $1502 $1515 ($1359 is responsible)
    }
    # Core:result:is:1:equals:else
    $1522 = { (responsible $1523) ->
      $1524 = call $169 with $1496 ($1359 is responsible)
      $1525 = call $168 with $203 $1524 ($1359 is responsible)
      $1526 = call $168 with $1525 $210 ($1359 is responsible)
      $1527 = ($180, $1526)
    }
    $1528 = call $153 with $1497 $1498 $1522 ($1359 is responsible)
  }
  $1529 = call $153 with $1490 $1491 $1494 ($1359 is responsible)
  $1530 = call $160 with $1529 $187 ($1359 is responsible)
  $1531 = call $151 with $1530 $178 ($1359 is responsible)
  # Core:result:is:1:case-0:patternMatch
  $1532 = { (responsible $1533) ->
    $1534 = call $160 with $1529 $188 ($1360 is responsible)
    $1535 = $186
  }
  $1536 = call $153 with $1531 $1532 $284 ($1359 is responsible)
}
# Core:result:mapOrElse:30:case-1:didNotMatch
$1537 = { (responsible $1538) ->
  $1539 = panicking because $206 ($1366 is at fault)
}
# Core:result:mapOrElse
$1540 = { $1541 $1542 $1543 (+ responsible $1544) ->
  $1545 = call $1453 with $1541 ($1363 is responsible)
  $1546 = call $250 with $1545 $1436 $1544 ($1371 is responsible)
  $1547 = call $1120 with $1542 ($1361 is responsible)
  $1548 = call $250 with $1547 $1422 $1544 ($1362 is responsible)
  $1549 = call $1120 with $1543 ($1364 is responsible)
  $1550 = call $250 with $1549 $1419 $1544 ($1365 is responsible)
  $1551 = call $170 with $1541 ($1366 is responsible)
  $1552 = call $151 with $184 $1551 ($1366 is responsible)
  # Core:result:mapOrElse:30:equals:then
  $1553 = { (responsible $1554) ->
    $1555 = call $167 with $1541 ($1366 is responsible)
    $1556 = call $151 with $1388 $1555 ($1366 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1557 = { (responsible $1558) ->
      $1559 = call $166 with $1541 ($1366 is responsible)
      $1560 = call $151 with $186 $1559 ($1366 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1561 = { (responsible $1562) ->
        $1563 = call $165 with $1541 ($1366 is responsible)
        $1564 = ($178, $1563)
      }
      # Core:result:mapOrElse:30:equals:else
      $1565 = { (responsible $1566) ->
        $1567 = call $169 with $1559 ($1366 is responsible)
        $1568 = $1100
      }
      $1569 = call $153 with $1560 $1561 $1565 ($1366 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1570 = { (responsible $1571) ->
      $1572 = call $169 with $1555 ($1366 is responsible)
      $1573 = call $168 with $1398 $1572 ($1366 is responsible)
      $1574 = call $168 with $1573 $195 ($1366 is responsible)
      $1575 = ($180, $1574)
    }
    $1576 = call $153 with $1556 $1557 $1570 ($1366 is responsible)
  }
  # Core:result:mapOrElse:30:equals:else
  $1577 = { (responsible $1578) ->
    $1579 = call $169 with $1551 ($1366 is responsible)
    $1580 = call $168 with $203 $1579 ($1366 is responsible)
    $1581 = call $168 with $1580 $210 ($1366 is responsible)
    $1582 = ($180, $1581)
  }
  $1583 = call $153 with $1552 $1553 $1577 ($1366 is responsible)
  $1584 = call $160 with $1583 $187 ($1366 is responsible)
  $1585 = call $151 with $1584 $178 ($1366 is responsible)
  # Core:result:mapOrElse:30:case-0:didNotMatch
  $1586 = { (responsible $1587) ->
    $1588 = call $170 with $1541 ($1366 is responsible)
    $1589 = call $151 with $184 $1588 ($1366 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1590 = { (responsible $1591) ->
      $1592 = call $167 with $1541 ($1366 is responsible)
      $1593 = call $151 with $1382 $1592 ($1366 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1594 = { (responsible $1595) ->
        $1596 = call $166 with $1541 ($1366 is responsible)
        $1597 = call $151 with $186 $1596 ($1366 is responsible)
        # Core:result:mapOrElse:30:equals:then
        $1598 = { (responsible $1599) ->
          $1600 = call $165 with $1541 ($1366 is responsible)
          $1601 = ($178, $1600)
        }
        # Core:result:mapOrElse:30:equals:else
        $1602 = { (responsible $1603) ->
          $1604 = call $169 with $1596 ($1366 is responsible)
          $1605 = $1100
        }
        $1606 = call $153 with $1597 $1598 $1602 ($1366 is responsible)
      }
      # Core:result:mapOrElse:30:equals:else
      $1607 = { (responsible $1608) ->
        $1609 = call $169 with $1592 ($1366 is responsible)
        $1610 = call $168 with $1395 $1609 ($1366 is responsible)
        $1611 = call $168 with $1610 $195 ($1366 is responsible)
        $1612 = ($180, $1611)
      }
      $1613 = call $153 with $1593 $1594 $1607 ($1366 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1614 = { (responsible $1615) ->
      $1616 = call $169 with $1588 ($1366 is responsible)
      $1617 = call $168 with $203 $1616 ($1366 is responsible)
      $1618 = call $168 with $1617 $210 ($1366 is responsible)
      $1619 = ($180, $1618)
    }
    $1620 = call $153 with $1589 $1590 $1614 ($1366 is responsible)
    $1621 = call $160 with $1620 $187 ($1366 is responsible)
    $1622 = call $151 with $1621 $178 ($1366 is responsible)
    # Core:result:mapOrElse:30:case-1:patternMatch
    $1623 = { (responsible $1624) ->
      $1625 = call $160 with $1620 $188 ($1370 is responsible)
      $1626 = call $1543 with $1625 ($1368 is responsible)
    }
    $1627 = call $153 with $1622 $1623 $1537 ($1366 is responsible)
  }
  # Core:result:mapOrElse:30:case-0:patternMatch
  $1628 = { (responsible $1629) ->
    $1630 = call $160 with $1583 $188 ($1369 is responsible)
    $1631 = call $1542 with $1630 ($1367 is responsible)
  }
  $1632 = call $153 with $1585 $1628 $1586 ($1366 is responsible)
}
# Core:iterator:range:38, Core:result:unwrapOrElse:19
$1633 = { $1634 (+ responsible $1635) ->
  $1636 = $1634
}
# Core:result:unwrapOr
$1637 = { $1638 $1639 (+ responsible $1640) ->
  $1641 = call $1453 with $1638 ($1372 is responsible)
  $1642 = call $250 with $1641 $1436 $1640 ($1373 is responsible)
  # Core:result:unwrapOr:7
  $1643 = { (responsible $1644) ->
    $1645 = $1639
  }
  $1646 = call $1453 with $1638 ($1377 is responsible)
  $1647 = call $250 with $1646 $1436 $1374 ($1380 is responsible)
  $1648 = call $636 with $1643 ($1375 is responsible)
  $1649 = call $250 with $1648 $1417 $1374 ($1376 is responsible)
  # Core:result:unwrapOrElse:20
  $1650 = { $1651 (+ responsible $1652) ->
    $1653 = call $649 with $1643 ($1378 is responsible)
  }
  $1654 = call $1540 with $1638 $1633 $1650 ($1379 is responsible)
}
# Core:list:append
$1655 = { $1656 $1657 (+ responsible $1658) ->
  $1659 = call $170 with $1656 ($70 is responsible)
  $1660 = call $151 with $1659 $177 ($1 is responsible)
  $1661 = call $250 with $1660 $1435 $1658 ($1357 is responsible)
  $1662 = call $170 with $1656 ($68 is responsible)
  $1663 = call $151 with $1662 $177 ($69 is responsible)
  $1664 = call $250 with $1663 $238 $1358 ($55 is responsible)
  $1665 = call $162 with $1656 ($54 is responsible)
  $1666 = call $615 with $1656 $1665 $1657 ($1356 is responsible)
}
# Core:iterator:generate:50:5, Core:iterator:generateWithState:14:1:3:case-1:patternMatch, Core:iterator:map:19:3:case-0:patternMatch, Core:iterator:skip:30:6:8:3:case-0:patternMatch, Core:iterator:takeWhile:7:3:case-0:patternMatch, Core:iterator:takeWhile:7:3:6, Core:iterator:where:19:2:3:case-0:patternMatch, Core:iterator:where:19:2:3:6:5:case-0:patternMatch, Core:iterator:windowed:67:27, Core:iterator:withIndex:11:5:case-0:patternMatch, Core:iterator:wrapSafe:16:26:10:case-0:patternMatch
$1667 = { (responsible $1668) ->
  $1669 = $1381
}
# Core:iterator:wrapSafe
$1670 = { $1671 $1672 (+ responsible $1673) ->
  $1674 = call $636 with $1672 ($1355 is responsible)
  $1675 = call $250 with $1674 $1418 $1673 ($1340 is responsible)
  # Core:iterator:wrapSafe:12
  $1676 = { (responsible $1677) ->
    $1678 = call $649 with $1672 ($1341 is responsible)
    $1679 = panicking because $1408 ($1673 is at fault)
  }
  # Core:iterator:wrapSafe:16
  $1680 = { $1681 $1682 (+ responsible $1683) ->
    $1684 = call $170 with $1682 ($1342 is responsible)
    $1685 = call $151 with $184 $1684 ($1342 is responsible)
    # Core:iterator:wrapSafe:16:1:equals:then
    $1686 = { (responsible $1687) ->
      $1688 = call $167 with $1682 ($1342 is responsible)
      $1689 = call $151 with $1385 $1688 ($1342 is responsible)
      # Core:iterator:wrapSafe:16:1:equals:then
      $1690 = { (responsible $1691) ->
        $1692 = call $166 with $1682 ($1342 is responsible)
        $1693 = call $151 with $186 $1692 ($1342 is responsible)
        # Core:iterator:wrapSafe:16:1:equals:then
        $1694 = { (responsible $1695) ->
          $1696 = call $165 with $1682 ($1342 is responsible)
          $1697 = ($178, $1696)
        }
        # Core:iterator:wrapSafe:16:1:equals:else
        $1698 = { (responsible $1699) ->
          $1700 = call $169 with $1692 ($1342 is responsible)
          $1701 = $1100
        }
        $1702 = call $153 with $1693 $1694 $1698 ($1342 is responsible)
      }
      # Core:iterator:wrapSafe:16:1:equals:else
      $1703 = { (responsible $1704) ->
        $1705 = call $169 with $1688 ($1342 is responsible)
        $1706 = call $168 with $1396 $1705 ($1342 is responsible)
        $1707 = call $168 with $1706 $195 ($1342 is responsible)
        $1708 = ($180, $1707)
      }
      $1709 = call $153 with $1689 $1690 $1703 ($1342 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:equals:else
    $1710 = { (responsible $1711) ->
      $1712 = call $169 with $1684 ($1342 is responsible)
      $1713 = call $168 with $203 $1712 ($1342 is responsible)
      $1714 = call $168 with $1713 $210 ($1342 is responsible)
      $1715 = ($180, $1714)
    }
    $1716 = call $153 with $1685 $1686 $1710 ($1342 is responsible)
    $1717 = call $160 with $1716 $187 ($1342 is responsible)
    $1718 = call $151 with $1717 $178 ($1342 is responsible)
    # Core:iterator:wrapSafe:16:1:case-0:didNotMatch
    $1719 = { (responsible $1720) ->
      $1721 = call $649 with $1676 ($1344 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:case-0:patternMatch
    $1722 = { (responsible $1723) ->
      $1724 = call $160 with $1716 $188 ($1345 is responsible)
    }
    $1725 = call $153 with $1718 $1722 $1719 ($1342 is responsible)
    $1726 = call $636 with $1725 ($1343 is responsible)
    $1727 = call $744 with $1726 ($1346 is responsible)
    $1728 = call $661 with $1727 ($118 is responsible)
    $1729 = call $250 with $1728 $216 $1347 ($114 is responsible)
    $1730 = call $636 with $1676 ($115 is responsible)
    $1731 = call $250 with $1730 $224 $1347 ($116 is responsible)
    $1732 = call $493 with $1727 $1676 $247 ($117 is responsible)
    # Core:iterator:wrapSafe:16:26
    $1733 = { (responsible $1734) ->
      $1735 = call $649 with $1725 ($1353 is responsible)
      $1736 = call $170 with $1735 ($1348 is responsible)
      $1737 = call $151 with $184 $1736 ($1348 is responsible)
      # Core:iterator:wrapSafe:16:26:10:equals:then
      $1738 = { (responsible $1739) ->
        $1740 = call $167 with $1735 ($1348 is responsible)
        $1741 = call $151 with $1381 $1740 ($1348 is responsible)
        # Core:iterator:wrapSafe:16:26:10:equals:then
        $1742 = { (responsible $1743) ->
          $1744 = call $166 with $1735 ($1348 is responsible)
          $1745 = call $151 with $172 $1744 ($1348 is responsible)
          # Core:iterator:wrapSafe:16:26:10:equals:else
          $1746 = { (responsible $1747) ->
            $1748 = call $169 with $1744 ($1348 is responsible)
            $1749 = call $165 with $1735 ($1348 is responsible)
            $1750 = call $169 with $1749 ($1348 is responsible)
            $1751 = call $168 with $205 $1750 ($1348 is responsible)
            $1752 = call $168 with $1751 $210 ($1348 is responsible)
            $1753 = ($180, $1752)
          }
          $1754 = call $153 with $1745 $278 $1746 ($1348 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:equals:else
        $1755 = { (responsible $1756) ->
          $1757 = call $169 with $1740 ($1348 is responsible)
          $1758 = call $168 with $1394 $1757 ($1348 is responsible)
          $1759 = call $168 with $1758 $195 ($1348 is responsible)
          $1760 = ($180, $1759)
        }
        $1761 = call $153 with $1741 $1742 $1755 ($1348 is responsible)
      }
      # Core:iterator:wrapSafe:16:26:10:equals:else
      $1762 = { (responsible $1763) ->
        $1764 = call $169 with $1736 ($1348 is responsible)
        $1765 = call $168 with $203 $1764 ($1348 is responsible)
        $1766 = call $168 with $1765 $210 ($1348 is responsible)
        $1767 = ($180, $1766)
      }
      $1768 = call $153 with $1737 $1738 $1762 ($1348 is responsible)
      $1769 = call $160 with $1768 $187 ($1348 is responsible)
      $1770 = call $151 with $1769 $178 ($1348 is responsible)
      # Core:iterator:wrapSafe:16:26:10:case-0:didNotMatch
      $1771 = { (responsible $1772) ->
        $1773 = call $170 with $1735 ($1348 is responsible)
        $1774 = call $151 with $184 $1773 ($1348 is responsible)
        # Core:iterator:wrapSafe:16:26:10:equals:then
        $1775 = { (responsible $1776) ->
          $1777 = call $167 with $1735 ($1348 is responsible)
          $1778 = call $151 with $1386 $1777 ($1348 is responsible)
          # Core:iterator:wrapSafe:16:26:10:equals:then
          $1779 = { (responsible $1780) ->
            $1781 = call $166 with $1735 ($1348 is responsible)
            $1782 = call $151 with $186 $1781 ($1348 is responsible)
            # Core:iterator:wrapSafe:16:26:10:equals:then
            $1783 = { (responsible $1784) ->
              $1785 = call $165 with $1735 ($1348 is responsible)
              $1786 = call $170 with $1785 ($1348 is responsible)
              $1787 = call $151 with $183 $1786 ($1348 is responsible)
              # Core:iterator:wrapSafe:16:26:10:equals:then
              $1788 = { (responsible $1789) ->
                $1790 = call $164 with $1785 $1384 ($1348 is responsible)
                # Core:iterator:wrapSafe:16:26:10:hasKey:then
                $1791 = { (responsible $1792) ->
                  $1793 = call $163 with $1785 $1384 ($1348 is responsible)
                  $1794 = ($178, $1793)
                }
                # Core:iterator:wrapSafe:16:26:10:hasKey:else
                $1795 = { (responsible $1796) ->
                  $1797 = call $169 with $1785 ($1348 is responsible)
                  $1798 = call $168 with $1401 $1797 ($1348 is responsible)
                  $1799 = call $168 with $1798 $210 ($1348 is responsible)
                  $1800 = ($180, $1799)
                }
                $1801 = call $153 with $1790 $1791 $1795 ($1348 is responsible)
                $1802 = call $160 with $1801 $187 ($1348 is responsible)
                $1803 = call $151 with $1802 $178 ($1348 is responsible)
                # Core:iterator:wrapSafe:16:26:10:isMatch:then
                $1804 = { (responsible $1805) ->
                  $1806 = call $160 with $1801 $188 ($1348 is responsible)
                  $1807 = call $164 with $1785 $1389 ($1348 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:hasKey:then
                  $1808 = { (responsible $1809) ->
                    $1810 = call $163 with $1785 $1389 ($1348 is responsible)
                    $1811 = ($178, $1810)
                  }
                  # Core:iterator:wrapSafe:16:26:10:hasKey:else
                  $1812 = { (responsible $1813) ->
                    $1814 = call $169 with $1785 ($1348 is responsible)
                    $1815 = call $168 with $1404 $1814 ($1348 is responsible)
                    $1816 = call $168 with $1815 $210 ($1348 is responsible)
                    $1817 = ($180, $1816)
                  }
                  $1818 = call $153 with $1807 $1808 $1812 ($1348 is responsible)
                  $1819 = call $160 with $1818 $187 ($1348 is responsible)
                  $1820 = call $151 with $1819 $178 ($1348 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:isMatch:then
                  $1821 = { (responsible $1822) ->
                    $1823 = call $160 with $1818 $188 ($1348 is responsible)
                    $1824 = ($178, $1806, $1823)
                  }
                  # Core:iterator:wrapSafe:16:26:10:isMatch:else
                  $1825 = { (responsible $1826) ->
                    $1827 = $1818
                  }
                  $1828 = call $153 with $1820 $1821 $1825 ($1348 is responsible)
                }
                # Core:iterator:wrapSafe:16:26:10:isMatch:else
                $1829 = { (responsible $1830) ->
                  $1831 = $1801
                }
                $1832 = call $153 with $1803 $1804 $1829 ($1348 is responsible)
              }
              # Core:iterator:wrapSafe:16:26:10:equals:else
              $1833 = { (responsible $1834) ->
                $1835 = call $169 with $1786 ($1348 is responsible)
                $1836 = call $168 with $202 $1835 ($1348 is responsible)
                $1837 = call $168 with $1836 $210 ($1348 is responsible)
                $1838 = ($180, $1837)
              }
              $1839 = call $153 with $1787 $1788 $1833 ($1348 is responsible)
            }
            # Core:iterator:wrapSafe:16:26:10:equals:else
            $1840 = { (responsible $1841) ->
              $1842 = call $169 with $1781 ($1348 is responsible)
              $1843 = $1100
            }
            $1844 = call $153 with $1782 $1783 $1840 ($1348 is responsible)
          }
          # Core:iterator:wrapSafe:16:26:10:equals:else
          $1845 = { (responsible $1846) ->
            $1847 = call $169 with $1777 ($1348 is responsible)
            $1848 = call $168 with $1397 $1847 ($1348 is responsible)
            $1849 = call $168 with $1848 $195 ($1348 is responsible)
            $1850 = ($180, $1849)
          }
          $1851 = call $153 with $1778 $1779 $1845 ($1348 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:equals:else
        $1852 = { (responsible $1853) ->
          $1854 = call $169 with $1773 ($1348 is responsible)
          $1855 = call $168 with $203 $1854 ($1348 is responsible)
          $1856 = call $168 with $1855 $210 ($1348 is responsible)
          $1857 = ($180, $1856)
        }
        $1858 = call $153 with $1774 $1775 $1852 ($1348 is responsible)
        $1859 = call $160 with $1858 $187 ($1348 is responsible)
        $1860 = call $151 with $1859 $178 ($1348 is responsible)
        # Core:iterator:wrapSafe:16:26:10:case-1:didNotMatch
        $1861 = { (responsible $1862) ->
          $1863 = call $649 with $1676 ($1349 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:case-1:patternMatch
        $1864 = { (responsible $1865) ->
          $1866 = call $160 with $1858 $188 ($1351 is responsible)
          $1867 = call $160 with $1858 $189 ($1352 is responsible)
          $1868 = call $1681 with $1867 ($1350 is responsible)
          $1869 = [$1389: $1868, $1384: $1866]
          $1870 = More $1869
        }
        $1871 = call $153 with $1860 $1864 $1861 ($1348 is responsible)
      }
      $1872 = call $153 with $1770 $1667 $1771 ($1348 is responsible)
    }
    $1873 = Iterator $1733
  }
  $1874 = call $1035 with $1680 ($123 is responsible)
  $1875 = call $250 with $1874 $207 $1354 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $1876 = { $1877 $1878 (+ responsible $1879) ->
    # Core:controlFlow:recursive:18:0
    $1880 = { $1881 (+ responsible $1882) ->
      $1883 = call $1877 with $1877 $1881 ($120 is responsible)
    }
    $1884 = call $1680 with $1880 $1878 ($121 is responsible)
  }
  $1885 = call $1876 with $1876 $1671 ($122 is responsible)
}
# Core:iterator:next
$1886 = { $1887 (+ responsible $1888) ->
  # Core:iterator:next:2
  $1889 = { (responsible $1890) ->
    $1891 = panicking because $1442 ($1888 is at fault)
  }
  $1892 = call $1670 with $1887 $1889 ($1243 is responsible)
  $1893 = call $170 with $1892 ($1244 is responsible)
  $1894 = call $151 with $184 $1893 ($1244 is responsible)
  # Core:iterator:next:6:equals:then
  $1895 = { (responsible $1896) ->
    $1897 = call $167 with $1892 ($1244 is responsible)
    $1898 = call $151 with $1385 $1897 ($1244 is responsible)
    # Core:iterator:next:6:equals:then
    $1899 = { (responsible $1900) ->
      $1901 = call $166 with $1892 ($1244 is responsible)
      $1902 = call $151 with $186 $1901 ($1244 is responsible)
      # Core:iterator:next:6:equals:then
      $1903 = { (responsible $1904) ->
        $1905 = call $165 with $1892 ($1244 is responsible)
        $1906 = ($178, $1905)
      }
      # Core:iterator:next:6:equals:else
      $1907 = { (responsible $1908) ->
        $1909 = call $169 with $1901 ($1244 is responsible)
        $1910 = $1100
      }
      $1911 = call $153 with $1902 $1903 $1907 ($1244 is responsible)
    }
    # Core:iterator:next:6:equals:else
    $1912 = { (responsible $1913) ->
      $1914 = call $169 with $1897 ($1244 is responsible)
      $1915 = call $168 with $1396 $1914 ($1244 is responsible)
      $1916 = call $168 with $1915 $195 ($1244 is responsible)
      $1917 = ($180, $1916)
    }
    $1918 = call $153 with $1898 $1899 $1912 ($1244 is responsible)
  }
  # Core:iterator:next:6:equals:else
  $1919 = { (responsible $1920) ->
    $1921 = call $169 with $1893 ($1244 is responsible)
    $1922 = call $168 with $203 $1921 ($1244 is responsible)
    $1923 = call $168 with $1922 $210 ($1244 is responsible)
    $1924 = ($180, $1923)
  }
  $1925 = call $153 with $1894 $1895 $1919 ($1244 is responsible)
  $1926 = call $160 with $1925 $187 ($1244 is responsible)
  $1927 = call $151 with $1926 $178 ($1244 is responsible)
  # Core:iterator:next:6:isMatch:else
  $1928 = { (responsible $1929) ->
    $1930 = call $160 with $1925 $188 ($1244 is responsible)
    $1931 = panicking because $1930 ($1244 is at fault)
  }
  $1932 = call $153 with $1927 $247 $1928 ($1244 is responsible)
  $1933 = call $160 with $1925 $188 ($1245 is responsible)
  $1934 = call $649 with $1933 ($1242 is responsible)
}
# Core:iterator:generateWithState
$1935 = { $1936 $1937 (+ responsible $1938) ->
  $1939 = call $1120 with $1937 ($1223 is responsible)
  $1940 = call $250 with $1939 $1421 $1938 ($1209 is responsible)
  # Core:iterator:generateWithState:14
  $1941 = { $1942 $1943 (+ responsible $1944) ->
    # Core:iterator:generateWithState:14:1
    $1945 = { (responsible $1946) ->
      $1947 = call $1937 with $1943 ($1210 is responsible)
      $1948 = call $170 with $1947 ($1211 is responsible)
      $1949 = call $151 with $184 $1948 ($1211 is responsible)
      # Core:iterator:generateWithState:14:1:3:equals:then
      $1950 = { (responsible $1951) ->
        $1952 = call $167 with $1947 ($1211 is responsible)
        $1953 = call $151 with $1386 $1952 ($1211 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:then
        $1954 = { (responsible $1955) ->
          $1956 = call $166 with $1947 ($1211 is responsible)
          $1957 = call $151 with $186 $1956 ($1211 is responsible)
          # Core:iterator:generateWithState:14:1:3:equals:then
          $1958 = { (responsible $1959) ->
            $1960 = call $165 with $1947 ($1211 is responsible)
            $1961 = call $170 with $1960 ($1211 is responsible)
            $1962 = call $151 with $183 $1961 ($1211 is responsible)
            # Core:iterator:generateWithState:14:1:3:equals:then
            $1963 = { (responsible $1964) ->
              $1965 = call $164 with $1960 $1384 ($1211 is responsible)
              # Core:iterator:generateWithState:14:1:3:hasKey:then
              $1966 = { (responsible $1967) ->
                $1968 = call $163 with $1960 $1384 ($1211 is responsible)
                $1969 = ($178, $1968)
              }
              # Core:iterator:generateWithState:14:1:3:hasKey:else
              $1970 = { (responsible $1971) ->
                $1972 = call $169 with $1960 ($1211 is responsible)
                $1973 = call $168 with $1401 $1972 ($1211 is responsible)
                $1974 = call $168 with $1973 $210 ($1211 is responsible)
                $1975 = ($180, $1974)
              }
              $1976 = call $153 with $1965 $1966 $1970 ($1211 is responsible)
              $1977 = call $160 with $1976 $187 ($1211 is responsible)
              $1978 = call $151 with $1977 $178 ($1211 is responsible)
              # Core:iterator:generateWithState:14:1:3:isMatch:then
              $1979 = { (responsible $1980) ->
                $1981 = call $160 with $1976 $188 ($1211 is responsible)
                $1982 = call $164 with $1960 $1390 ($1211 is responsible)
                # Core:iterator:generateWithState:14:1:3:hasKey:then
                $1983 = { (responsible $1984) ->
                  $1985 = call $163 with $1960 $1390 ($1211 is responsible)
                  $1986 = ($178, $1985)
                }
                # Core:iterator:generateWithState:14:1:3:hasKey:else
                $1987 = { (responsible $1988) ->
                  $1989 = call $169 with $1960 ($1211 is responsible)
                  $1990 = call $168 with $1405 $1989 ($1211 is responsible)
                  $1991 = call $168 with $1990 $210 ($1211 is responsible)
                  $1992 = ($180, $1991)
                }
                $1993 = call $153 with $1982 $1983 $1987 ($1211 is responsible)
                $1994 = call $160 with $1993 $187 ($1211 is responsible)
                $1995 = call $151 with $1994 $178 ($1211 is responsible)
                # Core:iterator:generateWithState:14:1:3:isMatch:then
                $1996 = { (responsible $1997) ->
                  $1998 = call $160 with $1993 $188 ($1211 is responsible)
                  $1999 = ($178, $1981, $1998)
                }
                # Core:iterator:generateWithState:14:1:3:isMatch:else
                $2000 = { (responsible $2001) ->
                  $2002 = $1993
                }
                $2003 = call $153 with $1995 $1996 $2000 ($1211 is responsible)
              }
              # Core:iterator:generateWithState:14:1:3:isMatch:else
              $2004 = { (responsible $2005) ->
                $2006 = $1976
              }
              $2007 = call $153 with $1978 $1979 $2004 ($1211 is responsible)
            }
            # Core:iterator:generateWithState:14:1:3:equals:else
            $2008 = { (responsible $2009) ->
              $2010 = call $169 with $1961 ($1211 is responsible)
              $2011 = call $168 with $202 $2010 ($1211 is responsible)
              $2012 = call $168 with $2011 $210 ($1211 is responsible)
              $2013 = ($180, $2012)
            }
            $2014 = call $153 with $1962 $1963 $2008 ($1211 is responsible)
          }
          # Core:iterator:generateWithState:14:1:3:equals:else
          $2015 = { (responsible $2016) ->
            $2017 = call $169 with $1956 ($1211 is responsible)
            $2018 = $1100
          }
          $2019 = call $153 with $1957 $1958 $2015 ($1211 is responsible)
        }
        # Core:iterator:generateWithState:14:1:3:equals:else
        $2020 = { (responsible $2021) ->
          $2022 = call $169 with $1952 ($1211 is responsible)
          $2023 = call $168 with $1397 $2022 ($1211 is responsible)
          $2024 = call $168 with $2023 $195 ($1211 is responsible)
          $2025 = ($180, $2024)
        }
        $2026 = call $153 with $1953 $1954 $2020 ($1211 is responsible)
      }
      # Core:iterator:generateWithState:14:1:3:equals:else
      $2027 = { (responsible $2028) ->
        $2029 = call $169 with $1948 ($1211 is responsible)
        $2030 = call $168 with $203 $2029 ($1211 is responsible)
        $2031 = call $168 with $2030 $210 ($1211 is responsible)
        $2032 = ($180, $2031)
      }
      $2033 = call $153 with $1949 $1950 $2027 ($1211 is responsible)
      $2034 = call $160 with $2033 $187 ($1211 is responsible)
      $2035 = call $151 with $2034 $178 ($1211 is responsible)
      # Core:iterator:generateWithState:14:1:3:case-0:didNotMatch
      $2036 = { (responsible $2037) ->
        $2038 = call $170 with $1947 ($1211 is responsible)
        $2039 = call $151 with $184 $2038 ($1211 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:then
        $2040 = { (responsible $2041) ->
          $2042 = call $167 with $1947 ($1211 is responsible)
          $2043 = call $151 with $1381 $2042 ($1211 is responsible)
          # Core:iterator:generateWithState:14:1:3:equals:then
          $2044 = { (responsible $2045) ->
            $2046 = call $166 with $1947 ($1211 is responsible)
            $2047 = call $151 with $172 $2046 ($1211 is responsible)
            # Core:iterator:generateWithState:14:1:3:equals:else
            $2048 = { (responsible $2049) ->
              $2050 = call $169 with $2046 ($1211 is responsible)
              $2051 = call $165 with $1947 ($1211 is responsible)
              $2052 = call $169 with $2051 ($1211 is responsible)
              $2053 = call $168 with $205 $2052 ($1211 is responsible)
              $2054 = call $168 with $2053 $210 ($1211 is responsible)
              $2055 = ($180, $2054)
            }
            $2056 = call $153 with $2047 $278 $2048 ($1211 is responsible)
          }
          # Core:iterator:generateWithState:14:1:3:equals:else
          $2057 = { (responsible $2058) ->
            $2059 = call $169 with $2042 ($1211 is responsible)
            $2060 = call $168 with $1394 $2059 ($1211 is responsible)
            $2061 = call $168 with $2060 $195 ($1211 is responsible)
            $2062 = ($180, $2061)
          }
          $2063 = call $153 with $2043 $2044 $2057 ($1211 is responsible)
        }
        # Core:iterator:generateWithState:14:1:3:equals:else
        $2064 = { (responsible $2065) ->
          $2066 = call $169 with $2038 ($1211 is responsible)
          $2067 = call $168 with $203 $2066 ($1211 is responsible)
          $2068 = call $168 with $2067 $210 ($1211 is responsible)
          $2069 = ($180, $2068)
        }
        $2070 = call $153 with $2039 $2040 $2064 ($1211 is responsible)
        $2071 = call $160 with $2070 $187 ($1211 is responsible)
        $2072 = call $151 with $2071 $178 ($1211 is responsible)
        # Core:iterator:generateWithState:14:1:3:case-1:didNotMatch
        $2073 = { (responsible $2074) ->
          # Core:iterator:generateWithState:14:1:3:case-2:patternMatch
          $2075 = { (responsible $2076) ->
            $2077 = call $170 with $1947 ($1212 is responsible)
            $2078 = call $151 with $2077 $185 ($1213 is responsible)
            # Core:iterator:generateWithState:14:1:3:21
            $2079 = { (responsible $2080) ->
              $2081 = $1947
            }
            # Core:iterator:generateWithState:14:1:3:22
            $2082 = { (responsible $2083) ->
              $2084 = call $169 with $1947 ($1214 is responsible)
            }
            $2085 = call $153 with $2078 $2079 $2082 ($1215 is responsible)
            $2086 = call $168 with $1407 $2085 ($1216 is responsible)
            $2087 = call $168 with $2086 $1409 ($1217 is responsible)
            $2088 = call $250 with $172 $2087 $1938 ($1218 is responsible)
          }
          $2089 = call $2075 with no arguments ($1211 is responsible)
        }
        $2090 = call $153 with $2072 $1667 $2073 ($1211 is responsible)
      }
      # Core:iterator:generateWithState:14:1:3:case-0:patternMatch
      $2091 = { (responsible $2092) ->
        $2093 = call $160 with $2033 $188 ($1220 is responsible)
        $2094 = call $160 with $2033 $189 ($1221 is responsible)
        $2095 = call $1942 with $2094 ($1219 is responsible)
        $2096 = [$1389: $2095, $1384: $2093]
        $2097 = More $2096
      }
      $2098 = call $153 with $2035 $2091 $2036 ($1211 is responsible)
    }
    $2099 = Iterator $1945
  }
  $2100 = call $1035 with $1941 ($123 is responsible)
  $2101 = call $250 with $2100 $207 $1222 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $2102 = { $2103 $2104 (+ responsible $2105) ->
    # Core:controlFlow:recursive:18:0
    $2106 = { $2107 (+ responsible $2108) ->
      $2109 = call $2103 with $2103 $2107 ($120 is responsible)
    }
    $2110 = call $1941 with $2106 $2104 ($121 is responsible)
  }
  $2111 = call $2102 with $2102 $1936 ($122 is responsible)
}
# Core:iterator:generate
$2112 = { $2113 $2114 (+ responsible $2115) ->
  $2116 = call $170 with $2113 ($70 is responsible)
  $2117 = call $151 with $2116 $175 ($1 is responsible)
  $2118 = call $250 with $2117 $1427 $2115 ($1198 is responsible)
  $2119 = call $1089 with $2113 ($1199 is responsible)
  $2120 = call $250 with $2119 $1431 $2115 ($1200 is responsible)
  $2121 = call $170 with $2113 ($70 is responsible)
  $2122 = call $151 with $2121 $175 ($1 is responsible)
  $2123 = call $250 with $2122 $235 $1201 ($1134 is responsible)
  $2124 = call $1089 with $2113 ($1135 is responsible)
  $2125 = call $250 with $2124 $1142 $1201 ($1136 is responsible)
  $2126 = call $1065 with $2113 $1141 ($1133 is responsible)
  $2127 = call $250 with $2126 $1426 $2115 ($1202 is responsible)
  $2128 = call $1120 with $2114 ($1203 is responsible)
  $2129 = call $250 with $2128 $1424 $2115 ($1204 is responsible)
  # Core:iterator:generate:50
  $2130 = { $2131 (+ responsible $2132) ->
    $2133 = call $151 with $2131 $2113 ($1 is responsible)
    # Core:iterator:generate:50:6
    $2134 = { (responsible $2135) ->
      $2136 = call $2114 with $2131 ($1206 is responsible)
      $2137 = call $170 with $2131 ($68 is responsible)
      $2138 = call $151 with $2137 $175 ($69 is responsible)
      $2139 = call $250 with $2138 $211 $1205 ($19 is responsible)
      $2140 = call $154 with $2131 $188 ($18 is responsible)
      $2141 = [$1390: $2140, $1384: $2136]
      $2142 = More $2141
    }
    $2143 = call $493 with $2133 $1667 $2134 ($1207 is responsible)
  }
  $2144 = call $1935 with $187 $2130 ($1208 is responsible)
}
# Core:iterator:map:19:3:case-1:didNotMatch
$2145 = { (responsible $2146) ->
  $2147 = panicking because $206 ($1236 is at fault)
}
# Core:iterator:map
$2148 = { $2149 $2150 (+ responsible $2151) ->
  # Core:iterator:map:2
  $2152 = { (responsible $2153) ->
    $2154 = panicking because $1441 ($2151 is at fault)
  }
  $2155 = call $1670 with $2149 $2152 ($1241 is responsible)
  $2156 = call $1120 with $2150 ($1233 is responsible)
  $2157 = call $250 with $2156 $1421 $2151 ($1234 is responsible)
  # Core:iterator:map:19
  $2158 = { $2159 (+ responsible $2160) ->
    $2161 = call $1886 with $2159 ($1235 is responsible)
    $2162 = call $170 with $2161 ($1236 is responsible)
    $2163 = call $151 with $184 $2162 ($1236 is responsible)
    # Core:iterator:map:19:3:equals:then
    $2164 = { (responsible $2165) ->
      $2166 = call $167 with $2161 ($1236 is responsible)
      $2167 = call $151 with $1381 $2166 ($1236 is responsible)
      # Core:iterator:map:19:3:equals:then
      $2168 = { (responsible $2169) ->
        $2170 = call $166 with $2161 ($1236 is responsible)
        $2171 = call $151 with $172 $2170 ($1236 is responsible)
        # Core:iterator:map:19:3:equals:else
        $2172 = { (responsible $2173) ->
          $2174 = call $169 with $2170 ($1236 is responsible)
          $2175 = call $165 with $2161 ($1236 is responsible)
          $2176 = call $169 with $2175 ($1236 is responsible)
          $2177 = call $168 with $205 $2176 ($1236 is responsible)
          $2178 = call $168 with $2177 $210 ($1236 is responsible)
          $2179 = ($180, $2178)
        }
        $2180 = call $153 with $2171 $278 $2172 ($1236 is responsible)
      }
      # Core:iterator:map:19:3:equals:else
      $2181 = { (responsible $2182) ->
        $2183 = call $169 with $2166 ($1236 is responsible)
        $2184 = call $168 with $1394 $2183 ($1236 is responsible)
        $2185 = call $168 with $2184 $195 ($1236 is responsible)
        $2186 = ($180, $2185)
      }
      $2187 = call $153 with $2167 $2168 $2181 ($1236 is responsible)
    }
    # Core:iterator:map:19:3:equals:else
    $2188 = { (responsible $2189) ->
      $2190 = call $169 with $2162 ($1236 is responsible)
      $2191 = call $168 with $203 $2190 ($1236 is responsible)
      $2192 = call $168 with $2191 $210 ($1236 is responsible)
      $2193 = ($180, $2192)
    }
    $2194 = call $153 with $2163 $2164 $2188 ($1236 is responsible)
    $2195 = call $160 with $2194 $187 ($1236 is responsible)
    $2196 = call $151 with $2195 $178 ($1236 is responsible)
    # Core:iterator:map:19:3:case-0:didNotMatch
    $2197 = { (responsible $2198) ->
      $2199 = call $170 with $2161 ($1236 is responsible)
      $2200 = call $151 with $184 $2199 ($1236 is responsible)
      # Core:iterator:map:19:3:equals:then
      $2201 = { (responsible $2202) ->
        $2203 = call $167 with $2161 ($1236 is responsible)
        $2204 = call $151 with $1386 $2203 ($1236 is responsible)
        # Core:iterator:map:19:3:equals:then
        $2205 = { (responsible $2206) ->
          $2207 = call $166 with $2161 ($1236 is responsible)
          $2208 = call $151 with $186 $2207 ($1236 is responsible)
          # Core:iterator:map:19:3:equals:then
          $2209 = { (responsible $2210) ->
            $2211 = call $165 with $2161 ($1236 is responsible)
            $2212 = call $170 with $2211 ($1236 is responsible)
            $2213 = call $151 with $183 $2212 ($1236 is responsible)
            # Core:iterator:map:19:3:equals:then
            $2214 = { (responsible $2215) ->
              $2216 = call $164 with $2211 $1384 ($1236 is responsible)
              # Core:iterator:map:19:3:hasKey:then
              $2217 = { (responsible $2218) ->
                $2219 = call $163 with $2211 $1384 ($1236 is responsible)
                $2220 = ($178, $2219)
              }
              # Core:iterator:map:19:3:hasKey:else
              $2221 = { (responsible $2222) ->
                $2223 = call $169 with $2211 ($1236 is responsible)
                $2224 = call $168 with $1401 $2223 ($1236 is responsible)
                $2225 = call $168 with $2224 $210 ($1236 is responsible)
                $2226 = ($180, $2225)
              }
              $2227 = call $153 with $2216 $2217 $2221 ($1236 is responsible)
              $2228 = call $160 with $2227 $187 ($1236 is responsible)
              $2229 = call $151 with $2228 $178 ($1236 is responsible)
              # Core:iterator:map:19:3:isMatch:then
              $2230 = { (responsible $2231) ->
                $2232 = call $160 with $2227 $188 ($1236 is responsible)
                $2233 = call $164 with $2211 $1389 ($1236 is responsible)
                # Core:iterator:map:19:3:hasKey:then
                $2234 = { (responsible $2235) ->
                  $2236 = call $163 with $2211 $1389 ($1236 is responsible)
                  $2237 = ($178, $2236)
                }
                # Core:iterator:map:19:3:hasKey:else
                $2238 = { (responsible $2239) ->
                  $2240 = call $169 with $2211 ($1236 is responsible)
                  $2241 = call $168 with $1404 $2240 ($1236 is responsible)
                  $2242 = call $168 with $2241 $210 ($1236 is responsible)
                  $2243 = ($180, $2242)
                }
                $2244 = call $153 with $2233 $2234 $2238 ($1236 is responsible)
                $2245 = call $160 with $2244 $187 ($1236 is responsible)
                $2246 = call $151 with $2245 $178 ($1236 is responsible)
                # Core:iterator:map:19:3:isMatch:then
                $2247 = { (responsible $2248) ->
                  $2249 = call $160 with $2244 $188 ($1236 is responsible)
                  $2250 = ($178, $2232, $2249)
                }
                # Core:iterator:map:19:3:isMatch:else
                $2251 = { (responsible $2252) ->
                  $2253 = $2244
                }
                $2254 = call $153 with $2246 $2247 $2251 ($1236 is responsible)
              }
              # Core:iterator:map:19:3:isMatch:else
              $2255 = { (responsible $2256) ->
                $2257 = $2227
              }
              $2258 = call $153 with $2229 $2230 $2255 ($1236 is responsible)
            }
            # Core:iterator:map:19:3:equals:else
            $2259 = { (responsible $2260) ->
              $2261 = call $169 with $2212 ($1236 is responsible)
              $2262 = call $168 with $202 $2261 ($1236 is responsible)
              $2263 = call $168 with $2262 $210 ($1236 is responsible)
              $2264 = ($180, $2263)
            }
            $2265 = call $153 with $2213 $2214 $2259 ($1236 is responsible)
          }
          # Core:iterator:map:19:3:equals:else
          $2266 = { (responsible $2267) ->
            $2268 = call $169 with $2207 ($1236 is responsible)
            $2269 = $1100
          }
          $2270 = call $153 with $2208 $2209 $2266 ($1236 is responsible)
        }
        # Core:iterator:map:19:3:equals:else
        $2271 = { (responsible $2272) ->
          $2273 = call $169 with $2203 ($1236 is responsible)
          $2274 = call $168 with $1397 $2273 ($1236 is responsible)
          $2275 = call $168 with $2274 $195 ($1236 is responsible)
          $2276 = ($180, $2275)
        }
        $2277 = call $153 with $2204 $2205 $2271 ($1236 is responsible)
      }
      # Core:iterator:map:19:3:equals:else
      $2278 = { (responsible $2279) ->
        $2280 = call $169 with $2199 ($1236 is responsible)
        $2281 = call $168 with $203 $2280 ($1236 is responsible)
        $2282 = call $168 with $2281 $210 ($1236 is responsible)
        $2283 = ($180, $2282)
      }
      $2284 = call $153 with $2200 $2201 $2278 ($1236 is responsible)
      $2285 = call $160 with $2284 $187 ($1236 is responsible)
      $2286 = call $151 with $2285 $178 ($1236 is responsible)
      # Core:iterator:map:19:3:case-1:patternMatch
      $2287 = { (responsible $2288) ->
        $2289 = call $160 with $2284 $188 ($1238 is responsible)
        $2290 = call $160 with $2284 $189 ($1239 is responsible)
        $2291 = call $2150 with $2289 ($1237 is responsible)
        $2292 = [$1390: $2290, $1384: $2291]
        $2293 = More $2292
      }
      $2294 = call $153 with $2286 $2287 $2145 ($1236 is responsible)
    }
    $2295 = call $153 with $2196 $1667 $2197 ($1236 is responsible)
  }
  $2296 = call $1935 with $2155 $2158 ($1240 is responsible)
}
# Core:iterator:withIndex:11:5:case-1:didNotMatch
$2297 = { (responsible $2298) ->
  $2299 = panicking because $206 ($1332 is at fault)
}
# Core:iterator:withIndex:11
$2300 = { $2301 (+ responsible $2302) ->
  $2303 = call $170 with $2301 ($1330 is responsible)
  $2304 = call $151 with $183 $2303 ($1330 is responsible)
  # Core:iterator:withIndex:11:1:equals:then
  $2305 = { (responsible $2306) ->
    $2307 = call $164 with $2301 $1385 ($1330 is responsible)
    # Core:iterator:withIndex:11:1:hasKey:then
    $2308 = { (responsible $2309) ->
      $2310 = call $163 with $2301 $1385 ($1330 is responsible)
      $2311 = ($178, $2310)
    }
    # Core:iterator:withIndex:11:1:hasKey:else
    $2312 = { (responsible $2313) ->
      $2314 = call $169 with $2301 ($1330 is responsible)
      $2315 = call $168 with $1402 $2314 ($1330 is responsible)
      $2316 = call $168 with $2315 $210 ($1330 is responsible)
      $2317 = ($180, $2316)
    }
    $2318 = call $153 with $2307 $2308 $2312 ($1330 is responsible)
    $2319 = call $160 with $2318 $187 ($1330 is responsible)
    $2320 = call $151 with $2319 $178 ($1330 is responsible)
    # Core:iterator:withIndex:11:1:isMatch:then
    $2321 = { (responsible $2322) ->
      $2323 = call $160 with $2318 $188 ($1330 is responsible)
      $2324 = call $164 with $2301 $1383 ($1330 is responsible)
      # Core:iterator:withIndex:11:1:hasKey:then
      $2325 = { (responsible $2326) ->
        $2327 = call $163 with $2301 $1383 ($1330 is responsible)
        $2328 = ($178, $2327)
      }
      # Core:iterator:withIndex:11:1:hasKey:else
      $2329 = { (responsible $2330) ->
        $2331 = call $169 with $2301 ($1330 is responsible)
        $2332 = call $168 with $1400 $2331 ($1330 is responsible)
        $2333 = call $168 with $2332 $210 ($1330 is responsible)
        $2334 = ($180, $2333)
      }
      $2335 = call $153 with $2324 $2325 $2329 ($1330 is responsible)
      $2336 = call $160 with $2335 $187 ($1330 is responsible)
      $2337 = call $151 with $2336 $178 ($1330 is responsible)
      # Core:iterator:withIndex:11:1:isMatch:then
      $2338 = { (responsible $2339) ->
        $2340 = call $160 with $2335 $188 ($1330 is responsible)
        $2341 = ($178, $2323, $2340)
      }
      # Core:iterator:withIndex:11:1:isMatch:else
      $2342 = { (responsible $2343) ->
        $2344 = $2335
      }
      $2345 = call $153 with $2337 $2338 $2342 ($1330 is responsible)
    }
    # Core:iterator:withIndex:11:1:isMatch:else
    $2346 = { (responsible $2347) ->
      $2348 = $2318
    }
    $2349 = call $153 with $2320 $2321 $2346 ($1330 is responsible)
  }
  # Core:iterator:withIndex:11:1:equals:else
  $2350 = { (responsible $2351) ->
    $2352 = call $169 with $2303 ($1330 is responsible)
    $2353 = call $168 with $202 $2352 ($1330 is responsible)
    $2354 = call $168 with $2353 $210 ($1330 is responsible)
    $2355 = ($180, $2354)
  }
  $2356 = call $153 with $2304 $2305 $2350 ($1330 is responsible)
  $2357 = call $160 with $2356 $187 ($1330 is responsible)
  $2358 = call $151 with $2357 $178 ($1330 is responsible)
  # Core:iterator:withIndex:11:1:isMatch:else
  $2359 = { (responsible $2360) ->
    $2361 = call $160 with $2356 $188 ($1330 is responsible)
    $2362 = panicking because $2361 ($1330 is at fault)
  }
  $2363 = call $153 with $2358 $247 $2359 ($1330 is responsible)
  $2364 = call $160 with $2356 $188 ($1337 is responsible)
  $2365 = call $160 with $2356 $189 ($1336 is responsible)
  $2366 = call $1886 with $2364 ($1331 is responsible)
  $2367 = call $170 with $2366 ($1332 is responsible)
  $2368 = call $151 with $184 $2367 ($1332 is responsible)
  # Core:iterator:withIndex:11:5:equals:then
  $2369 = { (responsible $2370) ->
    $2371 = call $167 with $2366 ($1332 is responsible)
    $2372 = call $151 with $1381 $2371 ($1332 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $2373 = { (responsible $2374) ->
      $2375 = call $166 with $2366 ($1332 is responsible)
      $2376 = call $151 with $172 $2375 ($1332 is responsible)
      # Core:iterator:withIndex:11:5:equals:else
      $2377 = { (responsible $2378) ->
        $2379 = call $169 with $2375 ($1332 is responsible)
        $2380 = call $165 with $2366 ($1332 is responsible)
        $2381 = call $169 with $2380 ($1332 is responsible)
        $2382 = call $168 with $205 $2381 ($1332 is responsible)
        $2383 = call $168 with $2382 $210 ($1332 is responsible)
        $2384 = ($180, $2383)
      }
      $2385 = call $153 with $2376 $278 $2377 ($1332 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2386 = { (responsible $2387) ->
      $2388 = call $169 with $2371 ($1332 is responsible)
      $2389 = call $168 with $1394 $2388 ($1332 is responsible)
      $2390 = call $168 with $2389 $195 ($1332 is responsible)
      $2391 = ($180, $2390)
    }
    $2392 = call $153 with $2372 $2373 $2386 ($1332 is responsible)
  }
  # Core:iterator:withIndex:11:5:equals:else
  $2393 = { (responsible $2394) ->
    $2395 = call $169 with $2367 ($1332 is responsible)
    $2396 = call $168 with $203 $2395 ($1332 is responsible)
    $2397 = call $168 with $2396 $210 ($1332 is responsible)
    $2398 = ($180, $2397)
  }
  $2399 = call $153 with $2368 $2369 $2393 ($1332 is responsible)
  $2400 = call $160 with $2399 $187 ($1332 is responsible)
  $2401 = call $151 with $2400 $178 ($1332 is responsible)
  # Core:iterator:withIndex:11:5:case-0:didNotMatch
  $2402 = { (responsible $2403) ->
    $2404 = call $170 with $2366 ($1332 is responsible)
    $2405 = call $151 with $184 $2404 ($1332 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $2406 = { (responsible $2407) ->
      $2408 = call $167 with $2366 ($1332 is responsible)
      $2409 = call $151 with $1386 $2408 ($1332 is responsible)
      # Core:iterator:withIndex:11:5:equals:then
      $2410 = { (responsible $2411) ->
        $2412 = call $166 with $2366 ($1332 is responsible)
        $2413 = call $151 with $186 $2412 ($1332 is responsible)
        # Core:iterator:withIndex:11:5:equals:then
        $2414 = { (responsible $2415) ->
          $2416 = call $165 with $2366 ($1332 is responsible)
          $2417 = call $170 with $2416 ($1332 is responsible)
          $2418 = call $151 with $183 $2417 ($1332 is responsible)
          # Core:iterator:withIndex:11:5:equals:then
          $2419 = { (responsible $2420) ->
            $2421 = call $164 with $2416 $1384 ($1332 is responsible)
            # Core:iterator:withIndex:11:5:hasKey:then
            $2422 = { (responsible $2423) ->
              $2424 = call $163 with $2416 $1384 ($1332 is responsible)
              $2425 = ($178, $2424)
            }
            # Core:iterator:withIndex:11:5:hasKey:else
            $2426 = { (responsible $2427) ->
              $2428 = call $169 with $2416 ($1332 is responsible)
              $2429 = call $168 with $1401 $2428 ($1332 is responsible)
              $2430 = call $168 with $2429 $210 ($1332 is responsible)
              $2431 = ($180, $2430)
            }
            $2432 = call $153 with $2421 $2422 $2426 ($1332 is responsible)
            $2433 = call $160 with $2432 $187 ($1332 is responsible)
            $2434 = call $151 with $2433 $178 ($1332 is responsible)
            # Core:iterator:withIndex:11:5:isMatch:then
            $2435 = { (responsible $2436) ->
              $2437 = call $160 with $2432 $188 ($1332 is responsible)
              $2438 = call $164 with $2416 $1389 ($1332 is responsible)
              # Core:iterator:withIndex:11:5:hasKey:then
              $2439 = { (responsible $2440) ->
                $2441 = call $163 with $2416 $1389 ($1332 is responsible)
                $2442 = ($178, $2441)
              }
              # Core:iterator:withIndex:11:5:hasKey:else
              $2443 = { (responsible $2444) ->
                $2445 = call $169 with $2416 ($1332 is responsible)
                $2446 = call $168 with $1404 $2445 ($1332 is responsible)
                $2447 = call $168 with $2446 $210 ($1332 is responsible)
                $2448 = ($180, $2447)
              }
              $2449 = call $153 with $2438 $2439 $2443 ($1332 is responsible)
              $2450 = call $160 with $2449 $187 ($1332 is responsible)
              $2451 = call $151 with $2450 $178 ($1332 is responsible)
              # Core:iterator:withIndex:11:5:isMatch:then
              $2452 = { (responsible $2453) ->
                $2454 = call $160 with $2449 $188 ($1332 is responsible)
                $2455 = ($178, $2437, $2454)
              }
              # Core:iterator:withIndex:11:5:isMatch:else
              $2456 = { (responsible $2457) ->
                $2458 = $2449
              }
              $2459 = call $153 with $2451 $2452 $2456 ($1332 is responsible)
            }
            # Core:iterator:withIndex:11:5:isMatch:else
            $2460 = { (responsible $2461) ->
              $2462 = $2432
            }
            $2463 = call $153 with $2434 $2435 $2460 ($1332 is responsible)
          }
          # Core:iterator:withIndex:11:5:equals:else
          $2464 = { (responsible $2465) ->
            $2466 = call $169 with $2417 ($1332 is responsible)
            $2467 = call $168 with $202 $2466 ($1332 is responsible)
            $2468 = call $168 with $2467 $210 ($1332 is responsible)
            $2469 = ($180, $2468)
          }
          $2470 = call $153 with $2418 $2419 $2464 ($1332 is responsible)
        }
        # Core:iterator:withIndex:11:5:equals:else
        $2471 = { (responsible $2472) ->
          $2473 = call $169 with $2412 ($1332 is responsible)
          $2474 = $1100
        }
        $2475 = call $153 with $2413 $2414 $2471 ($1332 is responsible)
      }
      # Core:iterator:withIndex:11:5:equals:else
      $2476 = { (responsible $2477) ->
        $2478 = call $169 with $2408 ($1332 is responsible)
        $2479 = call $168 with $1397 $2478 ($1332 is responsible)
        $2480 = call $168 with $2479 $195 ($1332 is responsible)
        $2481 = ($180, $2480)
      }
      $2482 = call $153 with $2409 $2410 $2476 ($1332 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2483 = { (responsible $2484) ->
      $2485 = call $169 with $2404 ($1332 is responsible)
      $2486 = call $168 with $203 $2485 ($1332 is responsible)
      $2487 = call $168 with $2486 $210 ($1332 is responsible)
      $2488 = ($180, $2487)
    }
    $2489 = call $153 with $2405 $2406 $2483 ($1332 is responsible)
    $2490 = call $160 with $2489 $187 ($1332 is responsible)
    $2491 = call $151 with $2490 $178 ($1332 is responsible)
    # Core:iterator:withIndex:11:5:case-1:patternMatch
    $2492 = { (responsible $2493) ->
      $2494 = call $160 with $2489 $188 ($1334 is responsible)
      $2495 = call $160 with $2489 $189 ($1335 is responsible)
      $2496 = [$1384: $2494, $1383: $2365]
      $2497 = call $170 with $2365 ($68 is responsible)
      $2498 = call $151 with $2497 $175 ($69 is responsible)
      $2499 = call $250 with $2498 $211 $1333 ($19 is responsible)
      $2500 = call $154 with $2365 $188 ($18 is responsible)
      $2501 = [$1383: $2500, $1385: $2495]
      $2502 = [$1384: $2496, $1390: $2501]
      $2503 = More $2502
    }
    $2504 = call $153 with $2491 $2492 $2297 ($1332 is responsible)
  }
  $2505 = call $153 with $2401 $1667 $2402 ($1332 is responsible)
}
# Core:iterator:ensure
$2506 = { $2507 $2508 (+ responsible $2509) ->
  $2510 = call $1120 with $2508 ($1180 is responsible)
  $2511 = call $250 with $2510 $1420 $2509 ($1176 is responsible)
  # Core:iterator:ensure:14
  $2512 = { (responsible $2513) ->
    $2514 = panicking because $1415 ($2509 is at fault)
  }
  $2515 = call $1670 with $2507 $2512 ($1177 is responsible)
  # Core:iterator:ensure:19
  $2516 = { $2517 (+ responsible $2518) ->
    $2519 = $2517
    $2520 = call $2508 with $2517 ($1178 is responsible)
    $2521 = $2519
  }
  $2522 = call $2148 with $2515 $2516 ($1179 is responsible)
}
# Core:iterator:foldLeft:23:5:case-1:didNotMatch
$2523 = { (responsible $2524) ->
  $2525 = panicking because $206 ($1185 is at fault)
}
# Core:iterator:foldLeft
$2526 = { $2527 $2528 $2529 (+ responsible $2530) ->
  # Core:iterator:foldLeft:2
  $2531 = { (responsible $2532) ->
    $2533 = panicking because $1416 ($2530 is at fault)
  }
  $2534 = call $1670 with $2527 $2531 ($1193 is responsible)
  $2535 = call $1035 with $2529 ($1181 is responsible)
  $2536 = call $250 with $2535 $1425 $2530 ($1182 is responsible)
  $2537 = [$1391: $2528, $1385: $2534]
  # Core:iterator:foldLeft:23
  $2538 = { $2539 $2540 (+ responsible $2541) ->
    $2542 = call $170 with $2540 ($1183 is responsible)
    $2543 = call $151 with $183 $2542 ($1183 is responsible)
    # Core:iterator:foldLeft:23:1:equals:then
    $2544 = { (responsible $2545) ->
      $2546 = call $164 with $2540 $1385 ($1183 is responsible)
      # Core:iterator:foldLeft:23:1:hasKey:then
      $2547 = { (responsible $2548) ->
        $2549 = call $163 with $2540 $1385 ($1183 is responsible)
        $2550 = ($178, $2549)
      }
      # Core:iterator:foldLeft:23:1:hasKey:else
      $2551 = { (responsible $2552) ->
        $2553 = call $169 with $2540 ($1183 is responsible)
        $2554 = call $168 with $1402 $2553 ($1183 is responsible)
        $2555 = call $168 with $2554 $210 ($1183 is responsible)
        $2556 = ($180, $2555)
      }
      $2557 = call $153 with $2546 $2547 $2551 ($1183 is responsible)
      $2558 = call $160 with $2557 $187 ($1183 is responsible)
      $2559 = call $151 with $2558 $178 ($1183 is responsible)
      # Core:iterator:foldLeft:23:1:isMatch:then
      $2560 = { (responsible $2561) ->
        $2562 = call $160 with $2557 $188 ($1183 is responsible)
        $2563 = call $164 with $2540 $1391 ($1183 is responsible)
        # Core:iterator:foldLeft:23:1:hasKey:then
        $2564 = { (responsible $2565) ->
          $2566 = call $163 with $2540 $1391 ($1183 is responsible)
          $2567 = ($178, $2566)
        }
        # Core:iterator:foldLeft:23:1:hasKey:else
        $2568 = { (responsible $2569) ->
          $2570 = call $169 with $2540 ($1183 is responsible)
          $2571 = call $168 with $1406 $2570 ($1183 is responsible)
          $2572 = call $168 with $2571 $210 ($1183 is responsible)
          $2573 = ($180, $2572)
        }
        $2574 = call $153 with $2563 $2564 $2568 ($1183 is responsible)
        $2575 = call $160 with $2574 $187 ($1183 is responsible)
        $2576 = call $151 with $2575 $178 ($1183 is responsible)
        # Core:iterator:foldLeft:23:1:isMatch:then
        $2577 = { (responsible $2578) ->
          $2579 = call $160 with $2574 $188 ($1183 is responsible)
          $2580 = ($178, $2562, $2579)
        }
        # Core:iterator:foldLeft:23:1:isMatch:else
        $2581 = { (responsible $2582) ->
          $2583 = $2574
        }
        $2584 = call $153 with $2576 $2577 $2581 ($1183 is responsible)
      }
      # Core:iterator:foldLeft:23:1:isMatch:else
      $2585 = { (responsible $2586) ->
        $2587 = $2557
      }
      $2588 = call $153 with $2559 $2560 $2585 ($1183 is responsible)
    }
    # Core:iterator:foldLeft:23:1:equals:else
    $2589 = { (responsible $2590) ->
      $2591 = call $169 with $2542 ($1183 is responsible)
      $2592 = call $168 with $202 $2591 ($1183 is responsible)
      $2593 = call $168 with $2592 $210 ($1183 is responsible)
      $2594 = ($180, $2593)
    }
    $2595 = call $153 with $2543 $2544 $2589 ($1183 is responsible)
    $2596 = call $160 with $2595 $187 ($1183 is responsible)
    $2597 = call $151 with $2596 $178 ($1183 is responsible)
    # Core:iterator:foldLeft:23:1:isMatch:else
    $2598 = { (responsible $2599) ->
      $2600 = call $160 with $2595 $188 ($1183 is responsible)
      $2601 = panicking because $2600 ($1183 is at fault)
    }
    $2602 = call $153 with $2597 $247 $2598 ($1183 is responsible)
    $2603 = call $160 with $2595 $188 ($1190 is responsible)
    $2604 = call $160 with $2595 $189 ($1191 is responsible)
    $2605 = call $1886 with $2603 ($1184 is responsible)
    $2606 = call $170 with $2605 ($1185 is responsible)
    $2607 = call $151 with $184 $2606 ($1185 is responsible)
    # Core:iterator:foldLeft:23:5:equals:then
    $2608 = { (responsible $2609) ->
      $2610 = call $167 with $2605 ($1185 is responsible)
      $2611 = call $151 with $1381 $2610 ($1185 is responsible)
      # Core:iterator:foldLeft:23:5:equals:then
      $2612 = { (responsible $2613) ->
        $2614 = call $166 with $2605 ($1185 is responsible)
        $2615 = call $151 with $172 $2614 ($1185 is responsible)
        # Core:iterator:foldLeft:23:5:equals:else
        $2616 = { (responsible $2617) ->
          $2618 = call $169 with $2614 ($1185 is responsible)
          $2619 = call $165 with $2605 ($1185 is responsible)
          $2620 = call $169 with $2619 ($1185 is responsible)
          $2621 = call $168 with $205 $2620 ($1185 is responsible)
          $2622 = call $168 with $2621 $210 ($1185 is responsible)
          $2623 = ($180, $2622)
        }
        $2624 = call $153 with $2615 $278 $2616 ($1185 is responsible)
      }
      # Core:iterator:foldLeft:23:5:equals:else
      $2625 = { (responsible $2626) ->
        $2627 = call $169 with $2610 ($1185 is responsible)
        $2628 = call $168 with $1394 $2627 ($1185 is responsible)
        $2629 = call $168 with $2628 $195 ($1185 is responsible)
        $2630 = ($180, $2629)
      }
      $2631 = call $153 with $2611 $2612 $2625 ($1185 is responsible)
    }
    # Core:iterator:foldLeft:23:5:equals:else
    $2632 = { (responsible $2633) ->
      $2634 = call $169 with $2606 ($1185 is responsible)
      $2635 = call $168 with $203 $2634 ($1185 is responsible)
      $2636 = call $168 with $2635 $210 ($1185 is responsible)
      $2637 = ($180, $2636)
    }
    $2638 = call $153 with $2607 $2608 $2632 ($1185 is responsible)
    $2639 = call $160 with $2638 $187 ($1185 is responsible)
    $2640 = call $151 with $2639 $178 ($1185 is responsible)
    # Core:iterator:foldLeft:23:5:case-0:didNotMatch
    $2641 = { (responsible $2642) ->
      $2643 = call $170 with $2605 ($1185 is responsible)
      $2644 = call $151 with $184 $2643 ($1185 is responsible)
      # Core:iterator:foldLeft:23:5:equals:then
      $2645 = { (responsible $2646) ->
        $2647 = call $167 with $2605 ($1185 is responsible)
        $2648 = call $151 with $1386 $2647 ($1185 is responsible)
        # Core:iterator:foldLeft:23:5:equals:then
        $2649 = { (responsible $2650) ->
          $2651 = call $166 with $2605 ($1185 is responsible)
          $2652 = call $151 with $186 $2651 ($1185 is responsible)
          # Core:iterator:foldLeft:23:5:equals:then
          $2653 = { (responsible $2654) ->
            $2655 = call $165 with $2605 ($1185 is responsible)
            $2656 = call $170 with $2655 ($1185 is responsible)
            $2657 = call $151 with $183 $2656 ($1185 is responsible)
            # Core:iterator:foldLeft:23:5:equals:then
            $2658 = { (responsible $2659) ->
              $2660 = call $164 with $2655 $1384 ($1185 is responsible)
              # Core:iterator:foldLeft:23:5:hasKey:then
              $2661 = { (responsible $2662) ->
                $2663 = call $163 with $2655 $1384 ($1185 is responsible)
                $2664 = ($178, $2663)
              }
              # Core:iterator:foldLeft:23:5:hasKey:else
              $2665 = { (responsible $2666) ->
                $2667 = call $169 with $2655 ($1185 is responsible)
                $2668 = call $168 with $1401 $2667 ($1185 is responsible)
                $2669 = call $168 with $2668 $210 ($1185 is responsible)
                $2670 = ($180, $2669)
              }
              $2671 = call $153 with $2660 $2661 $2665 ($1185 is responsible)
              $2672 = call $160 with $2671 $187 ($1185 is responsible)
              $2673 = call $151 with $2672 $178 ($1185 is responsible)
              # Core:iterator:foldLeft:23:5:isMatch:then
              $2674 = { (responsible $2675) ->
                $2676 = call $160 with $2671 $188 ($1185 is responsible)
                $2677 = call $164 with $2655 $1389 ($1185 is responsible)
                # Core:iterator:foldLeft:23:5:hasKey:then
                $2678 = { (responsible $2679) ->
                  $2680 = call $163 with $2655 $1389 ($1185 is responsible)
                  $2681 = ($178, $2680)
                }
                # Core:iterator:foldLeft:23:5:hasKey:else
                $2682 = { (responsible $2683) ->
                  $2684 = call $169 with $2655 ($1185 is responsible)
                  $2685 = call $168 with $1404 $2684 ($1185 is responsible)
                  $2686 = call $168 with $2685 $210 ($1185 is responsible)
                  $2687 = ($180, $2686)
                }
                $2688 = call $153 with $2677 $2678 $2682 ($1185 is responsible)
                $2689 = call $160 with $2688 $187 ($1185 is responsible)
                $2690 = call $151 with $2689 $178 ($1185 is responsible)
                # Core:iterator:foldLeft:23:5:isMatch:then
                $2691 = { (responsible $2692) ->
                  $2693 = call $160 with $2688 $188 ($1185 is responsible)
                  $2694 = ($178, $2676, $2693)
                }
                # Core:iterator:foldLeft:23:5:isMatch:else
                $2695 = { (responsible $2696) ->
                  $2697 = $2688
                }
                $2698 = call $153 with $2690 $2691 $2695 ($1185 is responsible)
              }
              # Core:iterator:foldLeft:23:5:isMatch:else
              $2699 = { (responsible $2700) ->
                $2701 = $2671
              }
              $2702 = call $153 with $2673 $2674 $2699 ($1185 is responsible)
            }
            # Core:iterator:foldLeft:23:5:equals:else
            $2703 = { (responsible $2704) ->
              $2705 = call $169 with $2656 ($1185 is responsible)
              $2706 = call $168 with $202 $2705 ($1185 is responsible)
              $2707 = call $168 with $2706 $210 ($1185 is responsible)
              $2708 = ($180, $2707)
            }
            $2709 = call $153 with $2657 $2658 $2703 ($1185 is responsible)
          }
          # Core:iterator:foldLeft:23:5:equals:else
          $2710 = { (responsible $2711) ->
            $2712 = call $169 with $2651 ($1185 is responsible)
            $2713 = $1100
          }
          $2714 = call $153 with $2652 $2653 $2710 ($1185 is responsible)
        }
        # Core:iterator:foldLeft:23:5:equals:else
        $2715 = { (responsible $2716) ->
          $2717 = call $169 with $2647 ($1185 is responsible)
          $2718 = call $168 with $1397 $2717 ($1185 is responsible)
          $2719 = call $168 with $2718 $195 ($1185 is responsible)
          $2720 = ($180, $2719)
        }
        $2721 = call $153 with $2648 $2649 $2715 ($1185 is responsible)
      }
      # Core:iterator:foldLeft:23:5:equals:else
      $2722 = { (responsible $2723) ->
        $2724 = call $169 with $2643 ($1185 is responsible)
        $2725 = call $168 with $203 $2724 ($1185 is responsible)
        $2726 = call $168 with $2725 $210 ($1185 is responsible)
        $2727 = ($180, $2726)
      }
      $2728 = call $153 with $2644 $2645 $2722 ($1185 is responsible)
      $2729 = call $160 with $2728 $187 ($1185 is responsible)
      $2730 = call $151 with $2729 $178 ($1185 is responsible)
      # Core:iterator:foldLeft:23:5:case-1:patternMatch
      $2731 = { (responsible $2732) ->
        $2733 = call $160 with $2728 $188 ($1188 is responsible)
        $2734 = call $160 with $2728 $189 ($1189 is responsible)
        $2735 = call $2529 with $2604 $2733 ($1187 is responsible)
        $2736 = [$1385: $2734, $1391: $2735]
        $2737 = call $2539 with $2736 ($1186 is responsible)
      }
      $2738 = call $153 with $2730 $2731 $2523 ($1185 is responsible)
    }
    # Core:iterator:foldLeft:23:5:case-0:patternMatch
    $2739 = { (responsible $2740) ->
      $2741 = $2604
    }
    $2742 = call $153 with $2640 $2739 $2641 ($1185 is responsible)
  }
  $2743 = call $1035 with $2538 ($123 is responsible)
  $2744 = call $250 with $2743 $207 $1192 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $2745 = { $2746 $2747 (+ responsible $2748) ->
    # Core:controlFlow:recursive:18:0
    $2749 = { $2750 (+ responsible $2751) ->
      $2752 = call $2746 with $2746 $2750 ($120 is responsible)
    }
    $2753 = call $2538 with $2749 $2747 ($121 is responsible)
  }
  $2754 = call $2745 with $2745 $2537 ($122 is responsible)
}
# Core:iterator:reduceLeft:18:case-1:didNotMatch
$2755 = { (responsible $2756) ->
  $2757 = panicking because $206 ($1249 is at fault)
}
$2758 = Error $1393
# Core:iterator:reduceLeft:18:case-0:patternMatch
$2759 = { (responsible $2760) ->
  $2761 = $2758
}
# Core:iterator:reduceLeft
$2762 = { $2763 $2764 (+ responsible $2765) ->
  $2766 = call $1035 with $2764 ($1253 is responsible)
  $2767 = call $250 with $2766 $1425 $2765 ($1246 is responsible)
  # Core:iterator:reduceLeft:14
  $2768 = { (responsible $2769) ->
    $2770 = panicking because $1443 ($2765 is at fault)
  }
  $2771 = call $1670 with $2763 $2768 ($1247 is responsible)
  $2772 = call $1886 with $2771 ($1248 is responsible)
  $2773 = call $170 with $2772 ($1249 is responsible)
  $2774 = call $151 with $184 $2773 ($1249 is responsible)
  # Core:iterator:reduceLeft:18:equals:then
  $2775 = { (responsible $2776) ->
    $2777 = call $167 with $2772 ($1249 is responsible)
    $2778 = call $151 with $1381 $2777 ($1249 is responsible)
    # Core:iterator:reduceLeft:18:equals:then
    $2779 = { (responsible $2780) ->
      $2781 = call $166 with $2772 ($1249 is responsible)
      $2782 = call $151 with $172 $2781 ($1249 is responsible)
      # Core:iterator:reduceLeft:18:equals:else
      $2783 = { (responsible $2784) ->
        $2785 = call $169 with $2781 ($1249 is responsible)
        $2786 = call $165 with $2772 ($1249 is responsible)
        $2787 = call $169 with $2786 ($1249 is responsible)
        $2788 = call $168 with $205 $2787 ($1249 is responsible)
        $2789 = call $168 with $2788 $210 ($1249 is responsible)
        $2790 = ($180, $2789)
      }
      $2791 = call $153 with $2782 $278 $2783 ($1249 is responsible)
    }
    # Core:iterator:reduceLeft:18:equals:else
    $2792 = { (responsible $2793) ->
      $2794 = call $169 with $2777 ($1249 is responsible)
      $2795 = call $168 with $1394 $2794 ($1249 is responsible)
      $2796 = call $168 with $2795 $195 ($1249 is responsible)
      $2797 = ($180, $2796)
    }
    $2798 = call $153 with $2778 $2779 $2792 ($1249 is responsible)
  }
  # Core:iterator:reduceLeft:18:equals:else
  $2799 = { (responsible $2800) ->
    $2801 = call $169 with $2773 ($1249 is responsible)
    $2802 = call $168 with $203 $2801 ($1249 is responsible)
    $2803 = call $168 with $2802 $210 ($1249 is responsible)
    $2804 = ($180, $2803)
  }
  $2805 = call $153 with $2774 $2775 $2799 ($1249 is responsible)
  $2806 = call $160 with $2805 $187 ($1249 is responsible)
  $2807 = call $151 with $2806 $178 ($1249 is responsible)
  # Core:iterator:reduceLeft:18:case-0:didNotMatch
  $2808 = { (responsible $2809) ->
    $2810 = call $170 with $2772 ($1249 is responsible)
    $2811 = call $151 with $184 $2810 ($1249 is responsible)
    # Core:iterator:reduceLeft:18:equals:then
    $2812 = { (responsible $2813) ->
      $2814 = call $167 with $2772 ($1249 is responsible)
      $2815 = call $151 with $1386 $2814 ($1249 is responsible)
      # Core:iterator:reduceLeft:18:equals:then
      $2816 = { (responsible $2817) ->
        $2818 = call $166 with $2772 ($1249 is responsible)
        $2819 = call $151 with $186 $2818 ($1249 is responsible)
        # Core:iterator:reduceLeft:18:equals:then
        $2820 = { (responsible $2821) ->
          $2822 = call $165 with $2772 ($1249 is responsible)
          $2823 = call $170 with $2822 ($1249 is responsible)
          $2824 = call $151 with $183 $2823 ($1249 is responsible)
          # Core:iterator:reduceLeft:18:equals:then
          $2825 = { (responsible $2826) ->
            $2827 = call $164 with $2822 $1384 ($1249 is responsible)
            # Core:iterator:reduceLeft:18:hasKey:then
            $2828 = { (responsible $2829) ->
              $2830 = call $163 with $2822 $1384 ($1249 is responsible)
              $2831 = ($178, $2830)
            }
            # Core:iterator:reduceLeft:18:hasKey:else
            $2832 = { (responsible $2833) ->
              $2834 = call $169 with $2822 ($1249 is responsible)
              $2835 = call $168 with $1401 $2834 ($1249 is responsible)
              $2836 = call $168 with $2835 $210 ($1249 is responsible)
              $2837 = ($180, $2836)
            }
            $2838 = call $153 with $2827 $2828 $2832 ($1249 is responsible)
            $2839 = call $160 with $2838 $187 ($1249 is responsible)
            $2840 = call $151 with $2839 $178 ($1249 is responsible)
            # Core:iterator:reduceLeft:18:isMatch:then
            $2841 = { (responsible $2842) ->
              $2843 = call $160 with $2838 $188 ($1249 is responsible)
              $2844 = call $164 with $2822 $1389 ($1249 is responsible)
              # Core:iterator:reduceLeft:18:hasKey:then
              $2845 = { (responsible $2846) ->
                $2847 = call $163 with $2822 $1389 ($1249 is responsible)
                $2848 = ($178, $2847)
              }
              # Core:iterator:reduceLeft:18:hasKey:else
              $2849 = { (responsible $2850) ->
                $2851 = call $169 with $2822 ($1249 is responsible)
                $2852 = call $168 with $1404 $2851 ($1249 is responsible)
                $2853 = call $168 with $2852 $210 ($1249 is responsible)
                $2854 = ($180, $2853)
              }
              $2855 = call $153 with $2844 $2845 $2849 ($1249 is responsible)
              $2856 = call $160 with $2855 $187 ($1249 is responsible)
              $2857 = call $151 with $2856 $178 ($1249 is responsible)
              # Core:iterator:reduceLeft:18:isMatch:then
              $2858 = { (responsible $2859) ->
                $2860 = call $160 with $2855 $188 ($1249 is responsible)
                $2861 = ($178, $2843, $2860)
              }
              # Core:iterator:reduceLeft:18:isMatch:else
              $2862 = { (responsible $2863) ->
                $2864 = $2855
              }
              $2865 = call $153 with $2857 $2858 $2862 ($1249 is responsible)
            }
            # Core:iterator:reduceLeft:18:isMatch:else
            $2866 = { (responsible $2867) ->
              $2868 = $2838
            }
            $2869 = call $153 with $2840 $2841 $2866 ($1249 is responsible)
          }
          # Core:iterator:reduceLeft:18:equals:else
          $2870 = { (responsible $2871) ->
            $2872 = call $169 with $2823 ($1249 is responsible)
            $2873 = call $168 with $202 $2872 ($1249 is responsible)
            $2874 = call $168 with $2873 $210 ($1249 is responsible)
            $2875 = ($180, $2874)
          }
          $2876 = call $153 with $2824 $2825 $2870 ($1249 is responsible)
        }
        # Core:iterator:reduceLeft:18:equals:else
        $2877 = { (responsible $2878) ->
          $2879 = call $169 with $2818 ($1249 is responsible)
          $2880 = $1100
        }
        $2881 = call $153 with $2819 $2820 $2877 ($1249 is responsible)
      }
      # Core:iterator:reduceLeft:18:equals:else
      $2882 = { (responsible $2883) ->
        $2884 = call $169 with $2814 ($1249 is responsible)
        $2885 = call $168 with $1397 $2884 ($1249 is responsible)
        $2886 = call $168 with $2885 $195 ($1249 is responsible)
        $2887 = ($180, $2886)
      }
      $2888 = call $153 with $2815 $2816 $2882 ($1249 is responsible)
    }
    # Core:iterator:reduceLeft:18:equals:else
    $2889 = { (responsible $2890) ->
      $2891 = call $169 with $2810 ($1249 is responsible)
      $2892 = call $168 with $203 $2891 ($1249 is responsible)
      $2893 = call $168 with $2892 $210 ($1249 is responsible)
      $2894 = ($180, $2893)
    }
    $2895 = call $153 with $2811 $2812 $2889 ($1249 is responsible)
    $2896 = call $160 with $2895 $187 ($1249 is responsible)
    $2897 = call $151 with $2896 $178 ($1249 is responsible)
    # Core:iterator:reduceLeft:18:case-1:patternMatch
    $2898 = { (responsible $2899) ->
      $2900 = call $160 with $2895 $188 ($1251 is responsible)
      $2901 = call $160 with $2895 $189 ($1252 is responsible)
      $2902 = call $2526 with $2901 $2900 $2764 ($1250 is responsible)
      $2903 = Ok $2902
    }
    $2904 = call $153 with $2897 $2898 $2755 ($1249 is responsible)
  }
  $2905 = call $153 with $2807 $2759 $2808 ($1249 is responsible)
}
# Core:iterator:sum:8
$2906 = { $2907 $2908 (+ responsible $2909) ->
  $2910 = call $170 with $2907 ($68 is responsible)
  $2911 = call $151 with $2910 $175 ($69 is responsible)
  $2912 = call $250 with $2911 $211 $1273 ($19 is responsible)
  $2913 = call $170 with $2908 ($68 is responsible)
  $2914 = call $151 with $2913 $175 ($69 is responsible)
  $2915 = call $250 with $2914 $213 $1273 ($17 is responsible)
  $2916 = call $154 with $2907 $2908 ($18 is responsible)
}
# Core:iterator:sum
$2917 = { $2918 (+ responsible $2919) ->
  # Core:iterator:sum:2
  $2920 = { (responsible $2921) ->
    $2922 = panicking because $1445 ($2919 is at fault)
  }
  $2923 = call $1670 with $2918 $2920 ($1270 is responsible)
  # Core:iterator:sum:5
  $2924 = { $2925 (+ responsible $2926) ->
    $2927 = call $170 with $2925 ($70 is responsible)
    $2928 = call $151 with $2927 $175 ($1 is responsible)
    $2929 = call $250 with $2928 $1399 $2919 ($1271 is responsible)
  }
  $2930 = call $2506 with $2923 $2924 ($1272 is responsible)
  $2931 = call $2762 with $2930 $2906 ($1274 is responsible)
  $2932 = call $1637 with $2931 $187 ($1269 is responsible)
}
# Core:iterator:length:5
$2933 = { $2934 (+ responsible $2935) ->
  $2936 = $188
}
# Core:iterator:all
$2937 = { $2938 $2939 (+ responsible $2940) ->
  $2941 = call $1120 with $2939 ($1162 is responsible)
  $2942 = call $250 with $2941 $1423 $2940 ($1155 is responsible)
  # Core:iterator:all:14
  $2943 = { (responsible $2944) ->
    $2945 = panicking because $1410 ($2940 is at fault)
  }
  $2946 = call $1670 with $2938 $2943 ($1156 is responsible)
  # Core:iterator:all:18
  $2947 = { $2948 $2949 (+ responsible $2950) ->
    $2951 = call $2939 with $2949 ($1159 is responsible)
    $2952 = call $661 with $2951 ($1157 is responsible)
    $2953 = call $250 with $2952 $1413 $2940 ($1158 is responsible)
    $2954 = call $661 with $2948 ($72 is responsible)
    $2955 = call $250 with $2954 $231 $1160 ($73 is responsible)
    $2956 = call $661 with $2951 ($74 is responsible)
    $2957 = call $250 with $2956 $232 $1160 ($75 is responsible)
    # Core:bool:and:12
    $2958 = { (responsible $2959) ->
      $2960 = $2951
    }
    $2961 = call $826 with $2948 $2958 ($71 is responsible)
  }
  $2962 = call $2526 with $2946 $186 $2947 ($1161 is responsible)
}
# Core:iterator:any
$2963 = { $2964 $2965 (+ responsible $2966) ->
  $2967 = call $1120 with $2965 ($1170 is responsible)
  $2968 = call $250 with $2967 $1423 $2966 ($1163 is responsible)
  # Core:iterator:any:14
  $2969 = { (responsible $2970) ->
    $2971 = panicking because $1411 ($2966 is at fault)
  }
  $2972 = call $1670 with $2964 $2969 ($1164 is responsible)
  # Core:iterator:any:18
  $2973 = { $2974 $2975 (+ responsible $2976) ->
    $2977 = call $2965 with $2975 ($1167 is responsible)
    $2978 = call $661 with $2977 ($1165 is responsible)
    $2979 = call $250 with $2978 $1413 $2966 ($1166 is responsible)
    $2980 = call $661 with $2974 ($97 is responsible)
    $2981 = call $250 with $2980 $231 $1168 ($98 is responsible)
    $2982 = call $661 with $2977 ($99 is responsible)
    $2983 = call $250 with $2982 $232 $1168 ($100 is responsible)
    # Core:bool:or:12
    $2984 = { (responsible $2985) ->
      $2986 = $2977
    }
    $2987 = call $918 with $2974 $2984 ($96 is responsible)
  }
  $2988 = call $2526 with $2972 $172 $2973 ($1169 is responsible)
}
# Core:iterator:joinToText
$2989 = { $2990 (+ responsible $2991) ->
  # Core:iterator:joinToText:2
  $2992 = { (responsible $2993) ->
    $2994 = panicking because $1438 ($2991 is at fault)
  }
  $2995 = call $1670 with $2990 $2992 ($1229 is responsible)
  # Core:iterator:joinToText:12
  $2996 = { $2997 $2998 (+ responsible $2999) ->
    $3000 = call $170 with $2998 ($70 is responsible)
    $3001 = call $151 with $3000 $185 ($1 is responsible)
    $3002 = call $250 with $3001 $1448 $2991 ($1226 is responsible)
    $3003 = call $170 with $2997 ($68 is responsible)
    $3004 = call $151 with $3003 $185 ($69 is responsible)
    $3005 = call $250 with $3004 $212 $1227 ($66 is responsible)
    $3006 = call $170 with $2998 ($68 is responsible)
    $3007 = call $151 with $3006 $185 ($69 is responsible)
    $3008 = call $250 with $3007 $214 $1227 ($64 is responsible)
    $3009 = call $168 with $2997 $2998 ($65 is responsible)
  }
  $3010 = call $2526 with $2995 $1392 $2996 ($1228 is responsible)
}
# Core:iterator:where:19:2:3:case-1:didNotMatch
$3011 = { (responsible $3012) ->
  $3013 = panicking because $206 ($1301 is at fault)
}
# Core:iterator:where:19:2:3:6:5:case-1:didNotMatch
$3014 = { (responsible $3015) ->
  $3016 = panicking because $206 ($1305 is at fault)
}
# Core:iterator:where
$3017 = { $3018 $3019 (+ responsible $3020) ->
  # Core:iterator:where:2
  $3021 = { (responsible $3022) ->
    $3023 = panicking because $1450 ($3020 is at fault)
  }
  $3024 = call $1670 with $3018 $3021 ($1313 is responsible)
  $3025 = call $1120 with $3019 ($1298 is responsible)
  $3026 = call $250 with $3025 $1423 $3020 ($1299 is responsible)
  # Core:iterator:where:19
  $3027 = { $3028 $3029 (+ responsible $3030) ->
    # Core:iterator:where:19:2
    $3031 = { $3032 (+ responsible $3033) ->
      $3034 = call $1886 with $3032 ($1300 is responsible)
      $3035 = call $170 with $3034 ($1301 is responsible)
      $3036 = call $151 with $184 $3035 ($1301 is responsible)
      # Core:iterator:where:19:2:3:equals:then
      $3037 = { (responsible $3038) ->
        $3039 = call $167 with $3034 ($1301 is responsible)
        $3040 = call $151 with $1381 $3039 ($1301 is responsible)
        # Core:iterator:where:19:2:3:equals:then
        $3041 = { (responsible $3042) ->
          $3043 = call $166 with $3034 ($1301 is responsible)
          $3044 = call $151 with $172 $3043 ($1301 is responsible)
          # Core:iterator:where:19:2:3:equals:else
          $3045 = { (responsible $3046) ->
            $3047 = call $169 with $3043 ($1301 is responsible)
            $3048 = call $165 with $3034 ($1301 is responsible)
            $3049 = call $169 with $3048 ($1301 is responsible)
            $3050 = call $168 with $205 $3049 ($1301 is responsible)
            $3051 = call $168 with $3050 $210 ($1301 is responsible)
            $3052 = ($180, $3051)
          }
          $3053 = call $153 with $3044 $278 $3045 ($1301 is responsible)
        }
        # Core:iterator:where:19:2:3:equals:else
        $3054 = { (responsible $3055) ->
          $3056 = call $169 with $3039 ($1301 is responsible)
          $3057 = call $168 with $1394 $3056 ($1301 is responsible)
          $3058 = call $168 with $3057 $195 ($1301 is responsible)
          $3059 = ($180, $3058)
        }
        $3060 = call $153 with $3040 $3041 $3054 ($1301 is responsible)
      }
      # Core:iterator:where:19:2:3:equals:else
      $3061 = { (responsible $3062) ->
        $3063 = call $169 with $3035 ($1301 is responsible)
        $3064 = call $168 with $203 $3063 ($1301 is responsible)
        $3065 = call $168 with $3064 $210 ($1301 is responsible)
        $3066 = ($180, $3065)
      }
      $3067 = call $153 with $3036 $3037 $3061 ($1301 is responsible)
      $3068 = call $160 with $3067 $187 ($1301 is responsible)
      $3069 = call $151 with $3068 $178 ($1301 is responsible)
      # Core:iterator:where:19:2:3:case-0:didNotMatch
      $3070 = { (responsible $3071) ->
        $3072 = call $170 with $3034 ($1301 is responsible)
        $3073 = call $151 with $184 $3072 ($1301 is responsible)
        # Core:iterator:where:19:2:3:equals:then
        $3074 = { (responsible $3075) ->
          $3076 = call $167 with $3034 ($1301 is responsible)
          $3077 = call $151 with $1386 $3076 ($1301 is responsible)
          # Core:iterator:where:19:2:3:equals:then
          $3078 = { (responsible $3079) ->
            $3080 = call $166 with $3034 ($1301 is responsible)
            $3081 = call $151 with $186 $3080 ($1301 is responsible)
            # Core:iterator:where:19:2:3:equals:then
            $3082 = { (responsible $3083) ->
              $3084 = call $165 with $3034 ($1301 is responsible)
              $3085 = call $170 with $3084 ($1301 is responsible)
              $3086 = call $151 with $183 $3085 ($1301 is responsible)
              # Core:iterator:where:19:2:3:equals:then
              $3087 = { (responsible $3088) ->
                $3089 = call $164 with $3084 $1384 ($1301 is responsible)
                # Core:iterator:where:19:2:3:hasKey:then
                $3090 = { (responsible $3091) ->
                  $3092 = call $163 with $3084 $1384 ($1301 is responsible)
                  $3093 = ($178, $3092)
                }
                # Core:iterator:where:19:2:3:hasKey:else
                $3094 = { (responsible $3095) ->
                  $3096 = call $169 with $3084 ($1301 is responsible)
                  $3097 = call $168 with $1401 $3096 ($1301 is responsible)
                  $3098 = call $168 with $3097 $210 ($1301 is responsible)
                  $3099 = ($180, $3098)
                }
                $3100 = call $153 with $3089 $3090 $3094 ($1301 is responsible)
                $3101 = call $160 with $3100 $187 ($1301 is responsible)
                $3102 = call $151 with $3101 $178 ($1301 is responsible)
                # Core:iterator:where:19:2:3:isMatch:then
                $3103 = { (responsible $3104) ->
                  $3105 = call $160 with $3100 $188 ($1301 is responsible)
                  $3106 = call $164 with $3084 $1389 ($1301 is responsible)
                  # Core:iterator:where:19:2:3:hasKey:then
                  $3107 = { (responsible $3108) ->
                    $3109 = call $163 with $3084 $1389 ($1301 is responsible)
                    $3110 = ($178, $3109)
                  }
                  # Core:iterator:where:19:2:3:hasKey:else
                  $3111 = { (responsible $3112) ->
                    $3113 = call $169 with $3084 ($1301 is responsible)
                    $3114 = call $168 with $1404 $3113 ($1301 is responsible)
                    $3115 = call $168 with $3114 $210 ($1301 is responsible)
                    $3116 = ($180, $3115)
                  }
                  $3117 = call $153 with $3106 $3107 $3111 ($1301 is responsible)
                  $3118 = call $160 with $3117 $187 ($1301 is responsible)
                  $3119 = call $151 with $3118 $178 ($1301 is responsible)
                  # Core:iterator:where:19:2:3:isMatch:then
                  $3120 = { (responsible $3121) ->
                    $3122 = call $160 with $3117 $188 ($1301 is responsible)
                    $3123 = ($178, $3105, $3122)
                  }
                  # Core:iterator:where:19:2:3:isMatch:else
                  $3124 = { (responsible $3125) ->
                    $3126 = $3117
                  }
                  $3127 = call $153 with $3119 $3120 $3124 ($1301 is responsible)
                }
                # Core:iterator:where:19:2:3:isMatch:else
                $3128 = { (responsible $3129) ->
                  $3130 = $3100
                }
                $3131 = call $153 with $3102 $3103 $3128 ($1301 is responsible)
              }
              # Core:iterator:where:19:2:3:equals:else
              $3132 = { (responsible $3133) ->
                $3134 = call $169 with $3085 ($1301 is responsible)
                $3135 = call $168 with $202 $3134 ($1301 is responsible)
                $3136 = call $168 with $3135 $210 ($1301 is responsible)
                $3137 = ($180, $3136)
              }
              $3138 = call $153 with $3086 $3087 $3132 ($1301 is responsible)
            }
            # Core:iterator:where:19:2:3:equals:else
            $3139 = { (responsible $3140) ->
              $3141 = call $169 with $3080 ($1301 is responsible)
              $3142 = $1100
            }
            $3143 = call $153 with $3081 $3082 $3139 ($1301 is responsible)
          }
          # Core:iterator:where:19:2:3:equals:else
          $3144 = { (responsible $3145) ->
            $3146 = call $169 with $3076 ($1301 is responsible)
            $3147 = call $168 with $1397 $3146 ($1301 is responsible)
            $3148 = call $168 with $3147 $195 ($1301 is responsible)
            $3149 = ($180, $3148)
          }
          $3150 = call $153 with $3077 $3078 $3144 ($1301 is responsible)
        }
        # Core:iterator:where:19:2:3:equals:else
        $3151 = { (responsible $3152) ->
          $3153 = call $169 with $3072 ($1301 is responsible)
          $3154 = call $168 with $203 $3153 ($1301 is responsible)
          $3155 = call $168 with $3154 $210 ($1301 is responsible)
          $3156 = ($180, $3155)
        }
        $3157 = call $153 with $3073 $3074 $3151 ($1301 is responsible)
        $3158 = call $160 with $3157 $187 ($1301 is responsible)
        $3159 = call $151 with $3158 $178 ($1301 is responsible)
        # Core:iterator:where:19:2:3:case-1:patternMatch
        $3160 = { (responsible $3161) ->
          $3162 = call $160 with $3157 $188 ($1309 is responsible)
          $3163 = call $160 with $3157 $189 ($1310 is responsible)
          $3164 = call $3019 with $3162 ($1302 is responsible)
          # Core:iterator:where:19:2:3:5
          $3165 = { (responsible $3166) ->
            $3167 = [$1384: $3162, $1390: $3163]
            $3168 = More $3167
          }
          # Core:iterator:where:19:2:3:6
          $3169 = { (responsible $3170) ->
            $3171 = call $3028 with $3163 ($1303 is responsible)
            $3172 = call $1886 with $3171 ($1304 is responsible)
            $3173 = call $170 with $3172 ($1305 is responsible)
            $3174 = call $151 with $184 $3173 ($1305 is responsible)
            # Core:iterator:where:19:2:3:6:5:equals:then
            $3175 = { (responsible $3176) ->
              $3177 = call $167 with $3172 ($1305 is responsible)
              $3178 = call $151 with $1381 $3177 ($1305 is responsible)
              # Core:iterator:where:19:2:3:6:5:equals:then
              $3179 = { (responsible $3180) ->
                $3181 = call $166 with $3172 ($1305 is responsible)
                $3182 = call $151 with $172 $3181 ($1305 is responsible)
                # Core:iterator:where:19:2:3:6:5:equals:else
                $3183 = { (responsible $3184) ->
                  $3185 = call $169 with $3181 ($1305 is responsible)
                  $3186 = call $165 with $3172 ($1305 is responsible)
                  $3187 = call $169 with $3186 ($1305 is responsible)
                  $3188 = call $168 with $205 $3187 ($1305 is responsible)
                  $3189 = call $168 with $3188 $210 ($1305 is responsible)
                  $3190 = ($180, $3189)
                }
                $3191 = call $153 with $3182 $278 $3183 ($1305 is responsible)
              }
              # Core:iterator:where:19:2:3:6:5:equals:else
              $3192 = { (responsible $3193) ->
                $3194 = call $169 with $3177 ($1305 is responsible)
                $3195 = call $168 with $1394 $3194 ($1305 is responsible)
                $3196 = call $168 with $3195 $195 ($1305 is responsible)
                $3197 = ($180, $3196)
              }
              $3198 = call $153 with $3178 $3179 $3192 ($1305 is responsible)
            }
            # Core:iterator:where:19:2:3:6:5:equals:else
            $3199 = { (responsible $3200) ->
              $3201 = call $169 with $3173 ($1305 is responsible)
              $3202 = call $168 with $203 $3201 ($1305 is responsible)
              $3203 = call $168 with $3202 $210 ($1305 is responsible)
              $3204 = ($180, $3203)
            }
            $3205 = call $153 with $3174 $3175 $3199 ($1305 is responsible)
            $3206 = call $160 with $3205 $187 ($1305 is responsible)
            $3207 = call $151 with $3206 $178 ($1305 is responsible)
            # Core:iterator:where:19:2:3:6:5:case-0:didNotMatch
            $3208 = { (responsible $3209) ->
              $3210 = call $170 with $3172 ($1305 is responsible)
              $3211 = call $151 with $184 $3210 ($1305 is responsible)
              # Core:iterator:where:19:2:3:6:5:equals:then
              $3212 = { (responsible $3213) ->
                $3214 = call $167 with $3172 ($1305 is responsible)
                $3215 = call $151 with $1386 $3214 ($1305 is responsible)
                # Core:iterator:where:19:2:3:6:5:equals:then
                $3216 = { (responsible $3217) ->
                  $3218 = call $166 with $3172 ($1305 is responsible)
                  $3219 = call $151 with $186 $3218 ($1305 is responsible)
                  # Core:iterator:where:19:2:3:6:5:equals:then
                  $3220 = { (responsible $3221) ->
                    $3222 = call $165 with $3172 ($1305 is responsible)
                    $3223 = call $170 with $3222 ($1305 is responsible)
                    $3224 = call $151 with $183 $3223 ($1305 is responsible)
                    # Core:iterator:where:19:2:3:6:5:equals:then
                    $3225 = { (responsible $3226) ->
                      $3227 = call $164 with $3222 $1384 ($1305 is responsible)
                      # Core:iterator:where:19:2:3:6:5:hasKey:then
                      $3228 = { (responsible $3229) ->
                        $3230 = call $163 with $3222 $1384 ($1305 is responsible)
                        $3231 = ($178, $3230)
                      }
                      # Core:iterator:where:19:2:3:6:5:hasKey:else
                      $3232 = { (responsible $3233) ->
                        $3234 = call $169 with $3222 ($1305 is responsible)
                        $3235 = call $168 with $1401 $3234 ($1305 is responsible)
                        $3236 = call $168 with $3235 $210 ($1305 is responsible)
                        $3237 = ($180, $3236)
                      }
                      $3238 = call $153 with $3227 $3228 $3232 ($1305 is responsible)
                      $3239 = call $160 with $3238 $187 ($1305 is responsible)
                      $3240 = call $151 with $3239 $178 ($1305 is responsible)
                      # Core:iterator:where:19:2:3:6:5:isMatch:then
                      $3241 = { (responsible $3242) ->
                        $3243 = call $160 with $3238 $188 ($1305 is responsible)
                        $3244 = call $164 with $3222 $1389 ($1305 is responsible)
                        # Core:iterator:where:19:2:3:6:5:hasKey:then
                        $3245 = { (responsible $3246) ->
                          $3247 = call $163 with $3222 $1389 ($1305 is responsible)
                          $3248 = ($178, $3247)
                        }
                        # Core:iterator:where:19:2:3:6:5:hasKey:else
                        $3249 = { (responsible $3250) ->
                          $3251 = call $169 with $3222 ($1305 is responsible)
                          $3252 = call $168 with $1404 $3251 ($1305 is responsible)
                          $3253 = call $168 with $3252 $210 ($1305 is responsible)
                          $3254 = ($180, $3253)
                        }
                        $3255 = call $153 with $3244 $3245 $3249 ($1305 is responsible)
                        $3256 = call $160 with $3255 $187 ($1305 is responsible)
                        $3257 = call $151 with $3256 $178 ($1305 is responsible)
                        # Core:iterator:where:19:2:3:6:5:isMatch:then
                        $3258 = { (responsible $3259) ->
                          $3260 = call $160 with $3255 $188 ($1305 is responsible)
                          $3261 = ($178, $3243, $3260)
                        }
                        # Core:iterator:where:19:2:3:6:5:isMatch:else
                        $3262 = { (responsible $3263) ->
                          $3264 = $3255
                        }
                        $3265 = call $153 with $3257 $3258 $3262 ($1305 is responsible)
                      }
                      # Core:iterator:where:19:2:3:6:5:isMatch:else
                      $3266 = { (responsible $3267) ->
                        $3268 = $3238
                      }
                      $3269 = call $153 with $3240 $3241 $3266 ($1305 is responsible)
                    }
                    # Core:iterator:where:19:2:3:6:5:equals:else
                    $3270 = { (responsible $3271) ->
                      $3272 = call $169 with $3223 ($1305 is responsible)
                      $3273 = call $168 with $202 $3272 ($1305 is responsible)
                      $3274 = call $168 with $3273 $210 ($1305 is responsible)
                      $3275 = ($180, $3274)
                    }
                    $3276 = call $153 with $3224 $3225 $3270 ($1305 is responsible)
                  }
                  # Core:iterator:where:19:2:3:6:5:equals:else
                  $3277 = { (responsible $3278) ->
                    $3279 = call $169 with $3218 ($1305 is responsible)
                    $3280 = $1100
                  }
                  $3281 = call $153 with $3219 $3220 $3277 ($1305 is responsible)
                }
                # Core:iterator:where:19:2:3:6:5:equals:else
                $3282 = { (responsible $3283) ->
                  $3284 = call $169 with $3214 ($1305 is responsible)
                  $3285 = call $168 with $1397 $3284 ($1305 is responsible)
                  $3286 = call $168 with $3285 $195 ($1305 is responsible)
                  $3287 = ($180, $3286)
                }
                $3288 = call $153 with $3215 $3216 $3282 ($1305 is responsible)
              }
              # Core:iterator:where:19:2:3:6:5:equals:else
              $3289 = { (responsible $3290) ->
                $3291 = call $169 with $3210 ($1305 is responsible)
                $3292 = call $168 with $203 $3291 ($1305 is responsible)
                $3293 = call $168 with $3292 $210 ($1305 is responsible)
                $3294 = ($180, $3293)
              }
              $3295 = call $153 with $3211 $3212 $3289 ($1305 is responsible)
              $3296 = call $160 with $3295 $187 ($1305 is responsible)
              $3297 = call $151 with $3296 $178 ($1305 is responsible)
              # Core:iterator:where:19:2:3:6:5:case-1:patternMatch
              $3298 = { (responsible $3299) ->
                $3300 = call $160 with $3295 $188 ($1306 is responsible)
                $3301 = call $160 with $3295 $189 ($1307 is responsible)
                $3302 = [$1384: $3300, $1390: $3301]
                $3303 = More $3302
              }
              $3304 = call $153 with $3297 $3298 $3014 ($1305 is responsible)
            }
            $3305 = call $153 with $3207 $1667 $3208 ($1305 is responsible)
          }
          $3306 = call $493 with $3164 $3165 $3169 ($1308 is responsible)
        }
        $3307 = call $153 with $3159 $3160 $3011 ($1301 is responsible)
      }
      $3308 = call $153 with $3069 $1667 $3070 ($1301 is responsible)
    }
    $3309 = call $1935 with $3029 $3031 ($1311 is responsible)
  }
  $3310 = call $1035 with $3027 ($123 is responsible)
  $3311 = call $250 with $3310 $207 $1312 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $3312 = { $3313 $3314 (+ responsible $3315) ->
    # Core:controlFlow:recursive:18:0
    $3316 = { $3317 (+ responsible $3318) ->
      $3319 = call $3313 with $3313 $3317 ($120 is responsible)
    }
    $3320 = call $3027 with $3316 $3314 ($121 is responsible)
  }
  $3321 = call $3312 with $3312 $3024 ($122 is responsible)
}
# Core:iterator:takeWhile:7:3:case-1:didNotMatch
$3322 = { (responsible $3323) ->
  $3324 = panicking because $206 ($1289 is at fault)
}
# Core:iterator:takeWhile
$3325 = { $3326 $3327 (+ responsible $3328) ->
  # Core:iterator:takeWhile:2
  $3329 = { (responsible $3330) ->
    $3331 = panicking because $1446 ($3328 is at fault)
  }
  $3332 = call $1670 with $3326 $3329 ($1287 is responsible)
  # Core:iterator:takeWhile:7
  $3333 = { $3334 (+ responsible $3335) ->
    $3336 = call $1886 with $3334 ($1288 is responsible)
    $3337 = call $170 with $3336 ($1289 is responsible)
    $3338 = call $151 with $184 $3337 ($1289 is responsible)
    # Core:iterator:takeWhile:7:3:equals:then
    $3339 = { (responsible $3340) ->
      $3341 = call $167 with $3336 ($1289 is responsible)
      $3342 = call $151 with $1381 $3341 ($1289 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $3343 = { (responsible $3344) ->
        $3345 = call $166 with $3336 ($1289 is responsible)
        $3346 = call $151 with $172 $3345 ($1289 is responsible)
        # Core:iterator:takeWhile:7:3:equals:else
        $3347 = { (responsible $3348) ->
          $3349 = call $169 with $3345 ($1289 is responsible)
          $3350 = call $165 with $3336 ($1289 is responsible)
          $3351 = call $169 with $3350 ($1289 is responsible)
          $3352 = call $168 with $205 $3351 ($1289 is responsible)
          $3353 = call $168 with $3352 $210 ($1289 is responsible)
          $3354 = ($180, $3353)
        }
        $3355 = call $153 with $3346 $278 $3347 ($1289 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $3356 = { (responsible $3357) ->
        $3358 = call $169 with $3341 ($1289 is responsible)
        $3359 = call $168 with $1394 $3358 ($1289 is responsible)
        $3360 = call $168 with $3359 $195 ($1289 is responsible)
        $3361 = ($180, $3360)
      }
      $3362 = call $153 with $3342 $3343 $3356 ($1289 is responsible)
    }
    # Core:iterator:takeWhile:7:3:equals:else
    $3363 = { (responsible $3364) ->
      $3365 = call $169 with $3337 ($1289 is responsible)
      $3366 = call $168 with $203 $3365 ($1289 is responsible)
      $3367 = call $168 with $3366 $210 ($1289 is responsible)
      $3368 = ($180, $3367)
    }
    $3369 = call $153 with $3338 $3339 $3363 ($1289 is responsible)
    $3370 = call $160 with $3369 $187 ($1289 is responsible)
    $3371 = call $151 with $3370 $178 ($1289 is responsible)
    # Core:iterator:takeWhile:7:3:case-0:didNotMatch
    $3372 = { (responsible $3373) ->
      $3374 = call $170 with $3336 ($1289 is responsible)
      $3375 = call $151 with $184 $3374 ($1289 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $3376 = { (responsible $3377) ->
        $3378 = call $167 with $3336 ($1289 is responsible)
        $3379 = call $151 with $1386 $3378 ($1289 is responsible)
        # Core:iterator:takeWhile:7:3:equals:then
        $3380 = { (responsible $3381) ->
          $3382 = call $166 with $3336 ($1289 is responsible)
          $3383 = call $151 with $186 $3382 ($1289 is responsible)
          # Core:iterator:takeWhile:7:3:equals:then
          $3384 = { (responsible $3385) ->
            $3386 = call $165 with $3336 ($1289 is responsible)
            $3387 = call $170 with $3386 ($1289 is responsible)
            $3388 = call $151 with $183 $3387 ($1289 is responsible)
            # Core:iterator:takeWhile:7:3:equals:then
            $3389 = { (responsible $3390) ->
              $3391 = call $164 with $3386 $1384 ($1289 is responsible)
              # Core:iterator:takeWhile:7:3:hasKey:then
              $3392 = { (responsible $3393) ->
                $3394 = call $163 with $3386 $1384 ($1289 is responsible)
                $3395 = ($178, $3394)
              }
              # Core:iterator:takeWhile:7:3:hasKey:else
              $3396 = { (responsible $3397) ->
                $3398 = call $169 with $3386 ($1289 is responsible)
                $3399 = call $168 with $1401 $3398 ($1289 is responsible)
                $3400 = call $168 with $3399 $210 ($1289 is responsible)
                $3401 = ($180, $3400)
              }
              $3402 = call $153 with $3391 $3392 $3396 ($1289 is responsible)
              $3403 = call $160 with $3402 $187 ($1289 is responsible)
              $3404 = call $151 with $3403 $178 ($1289 is responsible)
              # Core:iterator:takeWhile:7:3:isMatch:then
              $3405 = { (responsible $3406) ->
                $3407 = call $160 with $3402 $188 ($1289 is responsible)
                $3408 = call $164 with $3386 $1389 ($1289 is responsible)
                # Core:iterator:takeWhile:7:3:hasKey:then
                $3409 = { (responsible $3410) ->
                  $3411 = call $163 with $3386 $1389 ($1289 is responsible)
                  $3412 = ($178, $3411)
                }
                # Core:iterator:takeWhile:7:3:hasKey:else
                $3413 = { (responsible $3414) ->
                  $3415 = call $169 with $3386 ($1289 is responsible)
                  $3416 = call $168 with $1404 $3415 ($1289 is responsible)
                  $3417 = call $168 with $3416 $210 ($1289 is responsible)
                  $3418 = ($180, $3417)
                }
                $3419 = call $153 with $3408 $3409 $3413 ($1289 is responsible)
                $3420 = call $160 with $3419 $187 ($1289 is responsible)
                $3421 = call $151 with $3420 $178 ($1289 is responsible)
                # Core:iterator:takeWhile:7:3:isMatch:then
                $3422 = { (responsible $3423) ->
                  $3424 = call $160 with $3419 $188 ($1289 is responsible)
                  $3425 = ($178, $3407, $3424)
                }
                # Core:iterator:takeWhile:7:3:isMatch:else
                $3426 = { (responsible $3427) ->
                  $3428 = $3419
                }
                $3429 = call $153 with $3421 $3422 $3426 ($1289 is responsible)
              }
              # Core:iterator:takeWhile:7:3:isMatch:else
              $3430 = { (responsible $3431) ->
                $3432 = $3402
              }
              $3433 = call $153 with $3404 $3405 $3430 ($1289 is responsible)
            }
            # Core:iterator:takeWhile:7:3:equals:else
            $3434 = { (responsible $3435) ->
              $3436 = call $169 with $3387 ($1289 is responsible)
              $3437 = call $168 with $202 $3436 ($1289 is responsible)
              $3438 = call $168 with $3437 $210 ($1289 is responsible)
              $3439 = ($180, $3438)
            }
            $3440 = call $153 with $3388 $3389 $3434 ($1289 is responsible)
          }
          # Core:iterator:takeWhile:7:3:equals:else
          $3441 = { (responsible $3442) ->
            $3443 = call $169 with $3382 ($1289 is responsible)
            $3444 = $1100
          }
          $3445 = call $153 with $3383 $3384 $3441 ($1289 is responsible)
        }
        # Core:iterator:takeWhile:7:3:equals:else
        $3446 = { (responsible $3447) ->
          $3448 = call $169 with $3378 ($1289 is responsible)
          $3449 = call $168 with $1397 $3448 ($1289 is responsible)
          $3450 = call $168 with $3449 $195 ($1289 is responsible)
          $3451 = ($180, $3450)
        }
        $3452 = call $153 with $3379 $3380 $3446 ($1289 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $3453 = { (responsible $3454) ->
        $3455 = call $169 with $3374 ($1289 is responsible)
        $3456 = call $168 with $203 $3455 ($1289 is responsible)
        $3457 = call $168 with $3456 $210 ($1289 is responsible)
        $3458 = ($180, $3457)
      }
      $3459 = call $153 with $3375 $3376 $3453 ($1289 is responsible)
      $3460 = call $160 with $3459 $187 ($1289 is responsible)
      $3461 = call $151 with $3460 $178 ($1289 is responsible)
      # Core:iterator:takeWhile:7:3:case-1:patternMatch
      $3462 = { (responsible $3463) ->
        $3464 = call $160 with $3459 $188 ($1292 is responsible)
        $3465 = call $160 with $3459 $189 ($1293 is responsible)
        $3466 = call $3327 with $3464 ($1290 is responsible)
        # Core:iterator:takeWhile:7:3:5
        $3467 = { (responsible $3468) ->
          $3469 = [$1384: $3464, $1390: $3465]
          $3470 = More $3469
        }
        $3471 = call $493 with $3466 $3467 $1667 ($1291 is responsible)
      }
      $3472 = call $153 with $3461 $3462 $3322 ($1289 is responsible)
    }
    $3473 = call $153 with $3371 $1667 $3372 ($1289 is responsible)
  }
  $3474 = call $1935 with $3332 $3333 ($1294 is responsible)
}
# Core:iterator:withIndex:2
$3475 = { (responsible $3476) ->
  $3477 = panicking because $1452 ($1279 is at fault)
}
# Core:iterator:take:34
$3478 = { $3479 (+ responsible $3480) ->
  $3481 = call $170 with $3479 ($68 is responsible)
  $3482 = call $151 with $3481 $183 ($69 is responsible)
  $3483 = call $250 with $3482 $240 $1285 ($59 is responsible)
  $3484 = call $164 with $3479 $1384 ($56 is responsible)
  $3485 = call $250 with $3484 $241 $1285 ($57 is responsible)
  $3486 = call $163 with $3479 $1384 ($58 is responsible)
}
# Core:iterator:take
$3487 = { $3488 $3489 (+ responsible $3490) ->
  $3491 = call $170 with $3489 ($70 is responsible)
  $3492 = call $151 with $3491 $175 ($1 is responsible)
  $3493 = call $250 with $3492 $1428 $3490 ($1275 is responsible)
  $3494 = call $1089 with $3489 ($1276 is responsible)
  $3495 = call $250 with $3494 $1432 $3490 ($1277 is responsible)
  # Core:iterator:take:26
  $3496 = { (responsible $3497) ->
    $3498 = panicking because $1447 ($3490 is at fault)
  }
  $3499 = call $1670 with $3488 $3496 ($1278 is responsible)
  $3500 = call $1670 with $3499 $3475 ($1339 is responsible)
  $3501 = [$1385: $3500, $1383: $187]
  $3502 = call $1935 with $3501 $2300 ($1338 is responsible)
  # Core:iterator:take:31
  $3503 = { $3504 (+ responsible $3505) ->
    $3506 = call $170 with $3504 ($1280 is responsible)
    $3507 = call $151 with $183 $3506 ($1280 is responsible)
    # Core:iterator:take:31:1:equals:then
    $3508 = { (responsible $3509) ->
      $3510 = call $164 with $3504 $1384 ($1280 is responsible)
      # Core:iterator:take:31:1:hasKey:then
      $3511 = { (responsible $3512) ->
        $3513 = call $163 with $3504 $1384 ($1280 is responsible)
        $3514 = ($178, $3513)
      }
      # Core:iterator:take:31:1:hasKey:else
      $3515 = { (responsible $3516) ->
        $3517 = call $169 with $3504 ($1280 is responsible)
        $3518 = call $168 with $1401 $3517 ($1280 is responsible)
        $3519 = call $168 with $3518 $210 ($1280 is responsible)
        $3520 = ($180, $3519)
      }
      $3521 = call $153 with $3510 $3511 $3515 ($1280 is responsible)
      $3522 = call $160 with $3521 $187 ($1280 is responsible)
      $3523 = call $151 with $3522 $178 ($1280 is responsible)
      # Core:iterator:take:31:1:isMatch:then
      $3524 = { (responsible $3525) ->
        $3526 = call $160 with $3521 $188 ($1280 is responsible)
        $3527 = call $164 with $3504 $1383 ($1280 is responsible)
        # Core:iterator:take:31:1:hasKey:then
        $3528 = { (responsible $3529) ->
          $3530 = call $163 with $3504 $1383 ($1280 is responsible)
          $3531 = ($178, $3530)
        }
        # Core:iterator:take:31:1:hasKey:else
        $3532 = { (responsible $3533) ->
          $3534 = call $169 with $3504 ($1280 is responsible)
          $3535 = call $168 with $1400 $3534 ($1280 is responsible)
          $3536 = call $168 with $3535 $210 ($1280 is responsible)
          $3537 = ($180, $3536)
        }
        $3538 = call $153 with $3527 $3528 $3532 ($1280 is responsible)
        $3539 = call $160 with $3538 $187 ($1280 is responsible)
        $3540 = call $151 with $3539 $178 ($1280 is responsible)
        # Core:iterator:take:31:1:isMatch:then
        $3541 = { (responsible $3542) ->
          $3543 = call $160 with $3538 $188 ($1280 is responsible)
          $3544 = ($178, $3526, $3543)
        }
        # Core:iterator:take:31:1:isMatch:else
        $3545 = { (responsible $3546) ->
          $3547 = $3538
        }
        $3548 = call $153 with $3540 $3541 $3545 ($1280 is responsible)
      }
      # Core:iterator:take:31:1:isMatch:else
      $3549 = { (responsible $3550) ->
        $3551 = $3521
      }
      $3552 = call $153 with $3523 $3524 $3549 ($1280 is responsible)
    }
    # Core:iterator:take:31:1:equals:else
    $3553 = { (responsible $3554) ->
      $3555 = call $169 with $3506 ($1280 is responsible)
      $3556 = call $168 with $202 $3555 ($1280 is responsible)
      $3557 = call $168 with $3556 $210 ($1280 is responsible)
      $3558 = ($180, $3557)
    }
    $3559 = call $153 with $3507 $3508 $3553 ($1280 is responsible)
    $3560 = call $160 with $3559 $187 ($1280 is responsible)
    $3561 = call $151 with $3560 $178 ($1280 is responsible)
    # Core:iterator:take:31:1:isMatch:else
    $3562 = { (responsible $3563) ->
      $3564 = call $160 with $3559 $188 ($1280 is responsible)
      $3565 = panicking because $3564 ($1280 is at fault)
    }
    $3566 = call $153 with $3561 $247 $3562 ($1280 is responsible)
    $3567 = call $160 with $3559 $188 ($1283 is responsible)
    $3568 = call $160 with $3559 $189 ($1282 is responsible)
    $3569 = call $1065 with $3568 $3489 ($1281 is responsible)
  }
  $3570 = call $3325 with $3502 $3503 ($1284 is responsible)
  $3571 = call $2148 with $3570 $3478 ($1286 is responsible)
}
# Core:iterator:skip:30:6:8:3:case-1:didNotMatch
$3572 = { (responsible $3573) ->
  $3574 = panicking because $206 ($1261 is at fault)
}
# Core:iterator:skip:30:6
$3575 = { $3576 $3577 (+ responsible $3578) ->
  $3579 = call $170 with $3577 ($1258 is responsible)
  $3580 = call $151 with $183 $3579 ($1258 is responsible)
  # Core:iterator:skip:30:6:1:equals:then
  $3581 = { (responsible $3582) ->
    $3583 = call $164 with $3577 $1385 ($1258 is responsible)
    # Core:iterator:skip:30:6:1:hasKey:then
    $3584 = { (responsible $3585) ->
      $3586 = call $163 with $3577 $1385 ($1258 is responsible)
      $3587 = ($178, $3586)
    }
    # Core:iterator:skip:30:6:1:hasKey:else
    $3588 = { (responsible $3589) ->
      $3590 = call $169 with $3577 ($1258 is responsible)
      $3591 = call $168 with $1402 $3590 ($1258 is responsible)
      $3592 = call $168 with $3591 $210 ($1258 is responsible)
      $3593 = ($180, $3592)
    }
    $3594 = call $153 with $3583 $3584 $3588 ($1258 is responsible)
    $3595 = call $160 with $3594 $187 ($1258 is responsible)
    $3596 = call $151 with $3595 $178 ($1258 is responsible)
    # Core:iterator:skip:30:6:1:isMatch:then
    $3597 = { (responsible $3598) ->
      $3599 = call $160 with $3594 $188 ($1258 is responsible)
      $3600 = call $164 with $3577 $1387 ($1258 is responsible)
      # Core:iterator:skip:30:6:1:hasKey:then
      $3601 = { (responsible $3602) ->
        $3603 = call $163 with $3577 $1387 ($1258 is responsible)
        $3604 = ($178, $3603)
      }
      # Core:iterator:skip:30:6:1:hasKey:else
      $3605 = { (responsible $3606) ->
        $3607 = call $169 with $3577 ($1258 is responsible)
        $3608 = call $168 with $1403 $3607 ($1258 is responsible)
        $3609 = call $168 with $3608 $210 ($1258 is responsible)
        $3610 = ($180, $3609)
      }
      $3611 = call $153 with $3600 $3601 $3605 ($1258 is responsible)
      $3612 = call $160 with $3611 $187 ($1258 is responsible)
      $3613 = call $151 with $3612 $178 ($1258 is responsible)
      # Core:iterator:skip:30:6:1:isMatch:then
      $3614 = { (responsible $3615) ->
        $3616 = call $160 with $3611 $188 ($1258 is responsible)
        $3617 = ($178, $3599, $3616)
      }
      # Core:iterator:skip:30:6:1:isMatch:else
      $3618 = { (responsible $3619) ->
        $3620 = $3611
      }
      $3621 = call $153 with $3613 $3614 $3618 ($1258 is responsible)
    }
    # Core:iterator:skip:30:6:1:isMatch:else
    $3622 = { (responsible $3623) ->
      $3624 = $3594
    }
    $3625 = call $153 with $3596 $3597 $3622 ($1258 is responsible)
  }
  # Core:iterator:skip:30:6:1:equals:else
  $3626 = { (responsible $3627) ->
    $3628 = call $169 with $3579 ($1258 is responsible)
    $3629 = call $168 with $202 $3628 ($1258 is responsible)
    $3630 = call $168 with $3629 $210 ($1258 is responsible)
    $3631 = ($180, $3630)
  }
  $3632 = call $153 with $3580 $3581 $3626 ($1258 is responsible)
  $3633 = call $160 with $3632 $187 ($1258 is responsible)
  $3634 = call $151 with $3633 $178 ($1258 is responsible)
  # Core:iterator:skip:30:6:1:isMatch:else
  $3635 = { (responsible $3636) ->
    $3637 = call $160 with $3632 $188 ($1258 is responsible)
    $3638 = panicking because $3637 ($1258 is at fault)
  }
  $3639 = call $153 with $3634 $247 $3635 ($1258 is responsible)
  $3640 = call $160 with $3632 $188 ($1266 is responsible)
  $3641 = call $160 with $3632 $189 ($1267 is responsible)
  $3642 = call $151 with $3641 $187 ($1 is responsible)
  # Core:iterator:skip:30:6:7
  $3643 = { (responsible $3644) ->
    $3645 = call $1886 with $3640 ($1259 is responsible)
  }
  # Core:iterator:skip:30:6:8
  $3646 = { (responsible $3647) ->
    $3648 = call $1886 with $3640 ($1260 is responsible)
    $3649 = call $170 with $3648 ($1261 is responsible)
    $3650 = call $151 with $184 $3649 ($1261 is responsible)
    # Core:iterator:skip:30:6:8:3:equals:then
    $3651 = { (responsible $3652) ->
      $3653 = call $167 with $3648 ($1261 is responsible)
      $3654 = call $151 with $1381 $3653 ($1261 is responsible)
      # Core:iterator:skip:30:6:8:3:equals:then
      $3655 = { (responsible $3656) ->
        $3657 = call $166 with $3648 ($1261 is responsible)
        $3658 = call $151 with $172 $3657 ($1261 is responsible)
        # Core:iterator:skip:30:6:8:3:equals:else
        $3659 = { (responsible $3660) ->
          $3661 = call $169 with $3657 ($1261 is responsible)
          $3662 = call $165 with $3648 ($1261 is responsible)
          $3663 = call $169 with $3662 ($1261 is responsible)
          $3664 = call $168 with $205 $3663 ($1261 is responsible)
          $3665 = call $168 with $3664 $210 ($1261 is responsible)
          $3666 = ($180, $3665)
        }
        $3667 = call $153 with $3658 $278 $3659 ($1261 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:equals:else
      $3668 = { (responsible $3669) ->
        $3670 = call $169 with $3653 ($1261 is responsible)
        $3671 = call $168 with $1394 $3670 ($1261 is responsible)
        $3672 = call $168 with $3671 $195 ($1261 is responsible)
        $3673 = ($180, $3672)
      }
      $3674 = call $153 with $3654 $3655 $3668 ($1261 is responsible)
    }
    # Core:iterator:skip:30:6:8:3:equals:else
    $3675 = { (responsible $3676) ->
      $3677 = call $169 with $3649 ($1261 is responsible)
      $3678 = call $168 with $203 $3677 ($1261 is responsible)
      $3679 = call $168 with $3678 $210 ($1261 is responsible)
      $3680 = ($180, $3679)
    }
    $3681 = call $153 with $3650 $3651 $3675 ($1261 is responsible)
    $3682 = call $160 with $3681 $187 ($1261 is responsible)
    $3683 = call $151 with $3682 $178 ($1261 is responsible)
    # Core:iterator:skip:30:6:8:3:case-0:didNotMatch
    $3684 = { (responsible $3685) ->
      $3686 = call $170 with $3648 ($1261 is responsible)
      $3687 = call $151 with $184 $3686 ($1261 is responsible)
      # Core:iterator:skip:30:6:8:3:equals:then
      $3688 = { (responsible $3689) ->
        $3690 = call $167 with $3648 ($1261 is responsible)
        $3691 = call $151 with $1386 $3690 ($1261 is responsible)
        # Core:iterator:skip:30:6:8:3:equals:then
        $3692 = { (responsible $3693) ->
          $3694 = call $166 with $3648 ($1261 is responsible)
          $3695 = call $151 with $186 $3694 ($1261 is responsible)
          # Core:iterator:skip:30:6:8:3:equals:then
          $3696 = { (responsible $3697) ->
            $3698 = call $165 with $3648 ($1261 is responsible)
            $3699 = call $170 with $3698 ($1261 is responsible)
            $3700 = call $151 with $183 $3699 ($1261 is responsible)
            # Core:iterator:skip:30:6:8:3:equals:then
            $3701 = { (responsible $3702) ->
              $3703 = call $164 with $3698 $1389 ($1261 is responsible)
              # Core:iterator:skip:30:6:8:3:hasKey:then
              $3704 = { (responsible $3705) ->
                $3706 = call $163 with $3698 $1389 ($1261 is responsible)
                $3707 = ($178, $3706)
              }
              # Core:iterator:skip:30:6:8:3:hasKey:else
              $3708 = { (responsible $3709) ->
                $3710 = call $169 with $3698 ($1261 is responsible)
                $3711 = call $168 with $1404 $3710 ($1261 is responsible)
                $3712 = call $168 with $3711 $210 ($1261 is responsible)
                $3713 = ($180, $3712)
              }
              $3714 = call $153 with $3703 $3704 $3708 ($1261 is responsible)
              $3715 = call $160 with $3714 $187 ($1261 is responsible)
              $3716 = call $151 with $3715 $178 ($1261 is responsible)
              # Core:iterator:skip:30:6:8:3:isMatch:then
              $3717 = { (responsible $3718) ->
                $3719 = call $160 with $3714 $188 ($1261 is responsible)
                $3720 = ($178, $3719)
              }
              # Core:iterator:skip:30:6:8:3:isMatch:else
              $3721 = { (responsible $3722) ->
                $3723 = $3714
              }
              $3724 = call $153 with $3716 $3717 $3721 ($1261 is responsible)
            }
            # Core:iterator:skip:30:6:8:3:equals:else
            $3725 = { (responsible $3726) ->
              $3727 = call $169 with $3699 ($1261 is responsible)
              $3728 = call $168 with $202 $3727 ($1261 is responsible)
              $3729 = call $168 with $3728 $210 ($1261 is responsible)
              $3730 = ($180, $3729)
            }
            $3731 = call $153 with $3700 $3701 $3725 ($1261 is responsible)
          }
          # Core:iterator:skip:30:6:8:3:equals:else
          $3732 = { (responsible $3733) ->
            $3734 = call $169 with $3694 ($1261 is responsible)
            $3735 = $1100
          }
          $3736 = call $153 with $3695 $3696 $3732 ($1261 is responsible)
        }
        # Core:iterator:skip:30:6:8:3:equals:else
        $3737 = { (responsible $3738) ->
          $3739 = call $169 with $3690 ($1261 is responsible)
          $3740 = call $168 with $1397 $3739 ($1261 is responsible)
          $3741 = call $168 with $3740 $195 ($1261 is responsible)
          $3742 = ($180, $3741)
        }
        $3743 = call $153 with $3691 $3692 $3737 ($1261 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:equals:else
      $3744 = { (responsible $3745) ->
        $3746 = call $169 with $3686 ($1261 is responsible)
        $3747 = call $168 with $203 $3746 ($1261 is responsible)
        $3748 = call $168 with $3747 $210 ($1261 is responsible)
        $3749 = ($180, $3748)
      }
      $3750 = call $153 with $3687 $3688 $3744 ($1261 is responsible)
      $3751 = call $160 with $3750 $187 ($1261 is responsible)
      $3752 = call $151 with $3751 $178 ($1261 is responsible)
      # Core:iterator:skip:30:6:8:3:case-1:patternMatch
      $3753 = { (responsible $3754) ->
        $3755 = call $160 with $3750 $188 ($1264 is responsible)
        $3756 = call $170 with $3641 ($68 is responsible)
        $3757 = call $151 with $3756 $175 ($69 is responsible)
        $3758 = call $250 with $3757 $239 $1262 ($30 is responsible)
        $3759 = call $159 with $3641 $188 ($29 is responsible)
        $3760 = [$1387: $3759, $1385: $3755]
        $3761 = call $3576 with $3760 ($1263 is responsible)
      }
      $3762 = call $153 with $3752 $3753 $3572 ($1261 is responsible)
    }
    $3763 = call $153 with $3683 $1667 $3684 ($1261 is responsible)
  }
  $3764 = call $493 with $3642 $3643 $3646 ($1265 is responsible)
}
# Core:controlFlow:recursive:18
$3765 = { $3766 $3767 (+ responsible $3768) ->
  # Core:controlFlow:recursive:18:0
  $3769 = { $3770 (+ responsible $3771) ->
    $3772 = call $3766 with $3766 $3770 ($120 is responsible)
  }
  $3773 = call $3575 with $3769 $3767 ($121 is responsible)
}
# Core:iterator:skip
$3774 = { $3775 $3776 (+ responsible $3777) ->
  # Core:iterator:skip:2
  $3778 = { (responsible $3779) ->
    $3780 = panicking because $1444 ($3777 is at fault)
  }
  $3781 = call $1670 with $3775 $3778 ($1257 is responsible)
  $3782 = call $170 with $3776 ($70 is responsible)
  $3783 = call $151 with $3782 $175 ($1 is responsible)
  $3784 = call $250 with $3783 $1428 $3777 ($1254 is responsible)
  $3785 = call $1089 with $3776 ($1255 is responsible)
  $3786 = call $250 with $3785 $1432 $3777 ($1256 is responsible)
  # Core:iterator:skip:30
  $3787 = { (responsible $3788) ->
    $3789 = [$1385: $3781, $1387: $3776]
    $3790 = call $1035 with $3575 ($123 is responsible)
    $3791 = call $250 with $3790 $207 $1268 ($119 is responsible)
    $3792 = call $3765 with $3765 $3789 ($122 is responsible)
  }
  $3793 = Iterator $3787
}
# Core:iterator:fromList
$3794 = { $3795 (+ responsible $3796) ->
  $3797 = call $170 with $3795 ($70 is responsible)
  $3798 = call $151 with $3797 $177 ($1 is responsible)
  $3799 = call $250 with $3798 $1440 $3796 ($1194 is responsible)
  $3800 = call $170 with $3795 ($68 is responsible)
  $3801 = call $151 with $3800 $177 ($69 is responsible)
  $3802 = call $250 with $3801 $238 $1195 ($55 is responsible)
  $3803 = call $162 with $3795 ($54 is responsible)
  # Core:iterator:fromList:23
  $3804 = { $3805 (+ responsible $3806) ->
    $3807 = call $595 with $3795 $3805 ($1196 is responsible)
  }
  $3808 = call $2112 with $3803 $3804 ($1197 is responsible)
}
$3809 = (,)
# Core:iterator:toList:6
$3810 = { $3811 $3812 (+ responsible $3813) ->
  $3814 = call $1655 with $3811 $3812 ($1296 is responsible)
}
# Core:iterator:toList:2
$3815 = { (responsible $3816) ->
  $3817 = panicking because $1449 ($1328 is at fault)
}
# Core:iterator:windowed
$3818 = { $3819 $3820 $3821 $3822 (+ responsible $3823) ->
  # Core:iterator:windowed:2
  $3824 = { (responsible $3825) ->
    $3826 = panicking because $1451 ($3823 is at fault)
  }
  $3827 = call $1670 with $3819 $3824 ($1317 is responsible)
  $3828 = call $170 with $3820 ($70 is responsible)
  $3829 = call $151 with $3828 $175 ($1 is responsible)
  $3830 = call $250 with $3829 $1429 $3823 ($1314 is responsible)
  $3831 = call $170 with $3820 ($70 is responsible)
  $3832 = call $151 with $3831 $175 ($1 is responsible)
  $3833 = call $250 with $3832 $235 $1315 ($1139 is responsible)
  $3834 = call $1077 with $3820 $187 ($1140 is responsible)
  $3835 = call $250 with $3834 $1433 $3823 ($1316 is responsible)
  $3836 = call $170 with $3821 ($70 is responsible)
  $3837 = call $151 with $3836 $175 ($1 is responsible)
  $3838 = call $250 with $3837 $1430 $3823 ($1318 is responsible)
  $3839 = call $170 with $3821 ($70 is responsible)
  $3840 = call $151 with $3839 $175 ($1 is responsible)
  $3841 = call $250 with $3840 $235 $1319 ($1139 is responsible)
  $3842 = call $1077 with $3821 $187 ($1140 is responsible)
  $3843 = call $250 with $3842 $1434 $3823 ($1320 is responsible)
  $3844 = call $661 with $3822 ($1321 is responsible)
  $3845 = call $250 with $3844 $1412 $3823 ($1322 is responsible)
  # Core:iterator:windowed:67
  $3846 = { $3847 (+ responsible $3848) ->
    $3849 = call $3487 with $3847 $3820 ($1327 is responsible)
    $3850 = call $1670 with $3849 $3815 ($1295 is responsible)
    $3851 = call $2526 with $3850 $3809 $3810 ($1297 is responsible)
    $3852 = call $170 with $3851 ($68 is responsible)
    $3853 = call $151 with $3852 $177 ($69 is responsible)
    $3854 = call $250 with $3853 $238 $1323 ($55 is responsible)
    $3855 = call $162 with $3851 ($54 is responsible)
    # Core:iterator:windowed:67:20
    $3856 = { (responsible $3857) ->
      $3858 = call $1077 with $3855 $187 ($1140 is responsible)
    }
    # Core:iterator:windowed:67:21
    $3859 = { (responsible $3860) ->
      $3861 = call $151 with $3855 $3820 ($1 is responsible)
    }
    $3862 = call $493 with $3822 $3856 $3859 ($1324 is responsible)
    # Core:iterator:windowed:67:26
    $3863 = { (responsible $3864) ->
      $3865 = call $3774 with $3847 $3821 ($1325 is responsible)
      $3866 = [$1384: $3851, $1390: $3865]
      $3867 = More $3866
    }
    $3868 = call $493 with $3862 $3863 $1667 ($1326 is responsible)
  }
  $3869 = call $1935 with $3827 $3846 ($1329 is responsible)
}
# Core:iterator:chunked
$3870 = { $3871 $3872 (+ responsible $3873) ->
  $3874 = call $170 with $3872 ($70 is responsible)
  $3875 = call $151 with $3874 $175 ($1 is responsible)
  $3876 = call $250 with $3875 $1429 $3873 ($1171 is responsible)
  $3877 = call $170 with $3872 ($70 is responsible)
  $3878 = call $151 with $3877 $175 ($1 is responsible)
  $3879 = call $250 with $3878 $235 $1172 ($1139 is responsible)
  $3880 = call $1077 with $3872 $187 ($1140 is responsible)
  $3881 = call $250 with $3880 $1433 $3873 ($1173 is responsible)
  # Core:iterator:chunked:26
  $3882 = { (responsible $3883) ->
    $3884 = panicking because $1414 ($3873 is at fault)
  }
  $3885 = call $1670 with $3871 $3882 ($1174 is responsible)
  $3886 = call $3818 with $3885 $3872 $3872 $186 ($1175 is responsible)
}
$3887 = ($188, $189, $190)
$3888 = call $3794 with $3887 ($1154 is responsible)
$3889 = 6
$3890 = 7
$3891 = 8
$3892 = 9
$3893 = ($188, $189, $190, $191, $192, $3889, $3890, $3891, $3892, $193)
$3894 = Core:iterator:123
$3895 = call $3794 with $3893 ($3894 is responsible)
$3896 = Core:iterator:127
$3897 = call $1886 with $3888 ($3896 is responsible)
$3898 = Core:iterator:128
$3899 = call $170 with $3897 ($3898 is responsible)
$3900 = call $151 with $184 $3899 ($3898 is responsible)
# Core:iterator:128:equals:then
$3901 = { (responsible $3902) ->
  $3903 = call $167 with $3897 ($3898 is responsible)
  $3904 = call $151 with $1386 $3903 ($3898 is responsible)
  # Core:iterator:128:equals:then
  $3905 = { (responsible $3906) ->
    $3907 = call $166 with $3897 ($3898 is responsible)
    $3908 = call $151 with $186 $3907 ($3898 is responsible)
    # Core:iterator:128:equals:then
    $3909 = { (responsible $3910) ->
      $3911 = call $165 with $3897 ($3898 is responsible)
      $3912 = call $170 with $3911 ($3898 is responsible)
      $3913 = call $151 with $183 $3912 ($3898 is responsible)
      # Core:iterator:128:equals:then
      $3914 = { (responsible $3915) ->
        $3916 = call $164 with $3911 $1384 ($3898 is responsible)
        # Core:iterator:128:hasKey:then
        $3917 = { (responsible $3918) ->
          $3919 = call $163 with $3911 $1384 ($3898 is responsible)
          $3920 = ($178, $3919)
        }
        # Core:iterator:128:hasKey:else
        $3921 = { (responsible $3922) ->
          $3923 = call $169 with $3911 ($3898 is responsible)
          $3924 = call $168 with $1401 $3923 ($3898 is responsible)
          $3925 = call $168 with $3924 $210 ($3898 is responsible)
          $3926 = ($180, $3925)
        }
        $3927 = call $153 with $3916 $3917 $3921 ($3898 is responsible)
        $3928 = call $160 with $3927 $187 ($3898 is responsible)
        $3929 = call $151 with $3928 $178 ($3898 is responsible)
        # Core:iterator:128:isMatch:then
        $3930 = { (responsible $3931) ->
          $3932 = call $160 with $3927 $188 ($3898 is responsible)
          $3933 = call $164 with $3911 $1389 ($3898 is responsible)
          # Core:iterator:128:hasKey:then
          $3934 = { (responsible $3935) ->
            $3936 = call $163 with $3911 $1389 ($3898 is responsible)
            $3937 = ($178, $3936)
          }
          # Core:iterator:128:hasKey:else
          $3938 = { (responsible $3939) ->
            $3940 = call $169 with $3911 ($3898 is responsible)
            $3941 = call $168 with $1404 $3940 ($3898 is responsible)
            $3942 = call $168 with $3941 $210 ($3898 is responsible)
            $3943 = ($180, $3942)
          }
          $3944 = call $153 with $3933 $3934 $3938 ($3898 is responsible)
          $3945 = call $160 with $3944 $187 ($3898 is responsible)
          $3946 = call $151 with $3945 $178 ($3898 is responsible)
          # Core:iterator:128:isMatch:then
          $3947 = { (responsible $3948) ->
            $3949 = call $160 with $3944 $188 ($3898 is responsible)
            $3950 = ($178, $3932, $3949)
          }
          # Core:iterator:128:isMatch:else
          $3951 = { (responsible $3952) ->
            $3953 = $3944
          }
          $3954 = call $153 with $3946 $3947 $3951 ($3898 is responsible)
        }
        # Core:iterator:128:isMatch:else
        $3955 = { (responsible $3956) ->
          $3957 = $3927
        }
        $3958 = call $153 with $3929 $3930 $3955 ($3898 is responsible)
      }
      # Core:iterator:128:equals:else
      $3959 = { (responsible $3960) ->
        $3961 = call $169 with $3912 ($3898 is responsible)
        $3962 = call $168 with $202 $3961 ($3898 is responsible)
        $3963 = call $168 with $3962 $210 ($3898 is responsible)
        $3964 = ($180, $3963)
      }
      $3965 = call $153 with $3913 $3914 $3959 ($3898 is responsible)
    }
    # Core:iterator:128:equals:else
    $3966 = { (responsible $3967) ->
      $3968 = call $169 with $3907 ($3898 is responsible)
      $3969 = $1100
    }
    $3970 = call $153 with $3908 $3909 $3966 ($3898 is responsible)
  }
  # Core:iterator:128:equals:else
  $3971 = { (responsible $3972) ->
    $3973 = call $169 with $3903 ($3898 is responsible)
    $3974 = call $168 with $1397 $3973 ($3898 is responsible)
    $3975 = call $168 with $3974 $195 ($3898 is responsible)
    $3976 = ($180, $3975)
  }
  $3977 = call $153 with $3904 $3905 $3971 ($3898 is responsible)
}
# Core:iterator:128:equals:else
$3978 = { (responsible $3979) ->
  $3980 = call $169 with $3899 ($3898 is responsible)
  $3981 = call $168 with $203 $3980 ($3898 is responsible)
  $3982 = call $168 with $3981 $210 ($3898 is responsible)
  $3983 = ($180, $3982)
}
$3984 = call $153 with $3900 $3901 $3978 ($3898 is responsible)
$3985 = call $160 with $3984 $187 ($3898 is responsible)
$3986 = call $151 with $3985 $178 ($3898 is responsible)
# Core:iterator:128:isMatch:else
$3987 = { (responsible $3988) ->
  $3989 = call $160 with $3984 $188 ($3898 is responsible)
  $3990 = panicking because $3989 ($3898 is at fault)
}
$3991 = call $153 with $3986 $247 $3987 ($3898 is responsible)
$3992 = Core:iterator:item
$3993 = call $160 with $3984 $188 ($3992 is responsible)
$3994 = Core:iterator:rest
$3995 = call $160 with $3984 $189 ($3994 is responsible)
$3996 = Core:iterator:133
$3997 = call $1007 with $3993 $188 ($3996 is responsible)
$3998 = Core:iterator:136
$3999 = call $1886 with $3995 ($3998 is responsible)
$4000 = Core:iterator:137
$4001 = call $170 with $3999 ($4000 is responsible)
$4002 = call $151 with $184 $4001 ($4000 is responsible)
# Core:iterator:137:equals:then
$4003 = { (responsible $4004) ->
  $4005 = call $167 with $3999 ($4000 is responsible)
  $4006 = call $151 with $1386 $4005 ($4000 is responsible)
  # Core:iterator:137:equals:then
  $4007 = { (responsible $4008) ->
    $4009 = call $166 with $3999 ($4000 is responsible)
    $4010 = call $151 with $186 $4009 ($4000 is responsible)
    # Core:iterator:137:equals:then
    $4011 = { (responsible $4012) ->
      $4013 = call $165 with $3999 ($4000 is responsible)
      $4014 = call $170 with $4013 ($4000 is responsible)
      $4015 = call $151 with $183 $4014 ($4000 is responsible)
      # Core:iterator:137:equals:then
      $4016 = { (responsible $4017) ->
        $4018 = call $164 with $4013 $1384 ($4000 is responsible)
        # Core:iterator:137:hasKey:then
        $4019 = { (responsible $4020) ->
          $4021 = call $163 with $4013 $1384 ($4000 is responsible)
          $4022 = ($178, $4021)
        }
        # Core:iterator:137:hasKey:else
        $4023 = { (responsible $4024) ->
          $4025 = call $169 with $4013 ($4000 is responsible)
          $4026 = call $168 with $1401 $4025 ($4000 is responsible)
          $4027 = call $168 with $4026 $210 ($4000 is responsible)
          $4028 = ($180, $4027)
        }
        $4029 = call $153 with $4018 $4019 $4023 ($4000 is responsible)
        $4030 = call $160 with $4029 $187 ($4000 is responsible)
        $4031 = call $151 with $4030 $178 ($4000 is responsible)
        # Core:iterator:137:isMatch:then
        $4032 = { (responsible $4033) ->
          $4034 = call $160 with $4029 $188 ($4000 is responsible)
          $4035 = call $164 with $4013 $1389 ($4000 is responsible)
          # Core:iterator:137:hasKey:then
          $4036 = { (responsible $4037) ->
            $4038 = call $163 with $4013 $1389 ($4000 is responsible)
            $4039 = ($178, $4038)
          }
          # Core:iterator:137:hasKey:else
          $4040 = { (responsible $4041) ->
            $4042 = call $169 with $4013 ($4000 is responsible)
            $4043 = call $168 with $1404 $4042 ($4000 is responsible)
            $4044 = call $168 with $4043 $210 ($4000 is responsible)
            $4045 = ($180, $4044)
          }
          $4046 = call $153 with $4035 $4036 $4040 ($4000 is responsible)
          $4047 = call $160 with $4046 $187 ($4000 is responsible)
          $4048 = call $151 with $4047 $178 ($4000 is responsible)
          # Core:iterator:137:isMatch:then
          $4049 = { (responsible $4050) ->
            $4051 = call $160 with $4046 $188 ($4000 is responsible)
            $4052 = ($178, $4034, $4051)
          }
          # Core:iterator:137:isMatch:else
          $4053 = { (responsible $4054) ->
            $4055 = $4046
          }
          $4056 = call $153 with $4048 $4049 $4053 ($4000 is responsible)
        }
        # Core:iterator:137:isMatch:else
        $4057 = { (responsible $4058) ->
          $4059 = $4029
        }
        $4060 = call $153 with $4031 $4032 $4057 ($4000 is responsible)
      }
      # Core:iterator:137:equals:else
      $4061 = { (responsible $4062) ->
        $4063 = call $169 with $4014 ($4000 is responsible)
        $4064 = call $168 with $202 $4063 ($4000 is responsible)
        $4065 = call $168 with $4064 $210 ($4000 is responsible)
        $4066 = ($180, $4065)
      }
      $4067 = call $153 with $4015 $4016 $4061 ($4000 is responsible)
    }
    # Core:iterator:137:equals:else
    $4068 = { (responsible $4069) ->
      $4070 = call $169 with $4009 ($4000 is responsible)
      $4071 = $1100
    }
    $4072 = call $153 with $4010 $4011 $4068 ($4000 is responsible)
  }
  # Core:iterator:137:equals:else
  $4073 = { (responsible $4074) ->
    $4075 = call $169 with $4005 ($4000 is responsible)
    $4076 = call $168 with $1397 $4075 ($4000 is responsible)
    $4077 = call $168 with $4076 $195 ($4000 is responsible)
    $4078 = ($180, $4077)
  }
  $4079 = call $153 with $4006 $4007 $4073 ($4000 is responsible)
}
# Core:iterator:137:equals:else
$4080 = { (responsible $4081) ->
  $4082 = call $169 with $4001 ($4000 is responsible)
  $4083 = call $168 with $203 $4082 ($4000 is responsible)
  $4084 = call $168 with $4083 $210 ($4000 is responsible)
  $4085 = ($180, $4084)
}
$4086 = call $153 with $4002 $4003 $4080 ($4000 is responsible)
$4087 = call $160 with $4086 $187 ($4000 is responsible)
$4088 = call $151 with $4087 $178 ($4000 is responsible)
# Core:iterator:137:isMatch:else
$4089 = { (responsible $4090) ->
  $4091 = call $160 with $4086 $188 ($4000 is responsible)
  $4092 = panicking because $4091 ($4000 is at fault)
}
$4093 = call $153 with $4088 $247 $4089 ($4000 is responsible)
$4094 = Core:iterator:item#1
$4095 = call $160 with $4086 $188 ($4094 is responsible)
$4096 = Core:iterator:rest#1
$4097 = call $160 with $4086 $189 ($4096 is responsible)
$4098 = Core:iterator:142
$4099 = call $1007 with $4095 $189 ($4098 is responsible)
$4100 = Core:iterator:147
# Core:iterator:isEmpty:2
$4101 = { (responsible $4102) ->
  $4103 = panicking because $1437 ($4100 is at fault)
}
$4104 = call $1670 with $3888 $4101 ($1224 is responsible)
$4105 = call $1886 with $4104 ($1225 is responsible)
$4106 = call $151 with $4105 $1381 ($1 is responsible)
$4107 = Core:iterator:149
$4108 = call $1007 with $4106 $172 ($4107 is responsible)
$4109 = Core:iterator:154
$4110 = call $3794 with $3809 ($4109 is responsible)
$4111 = Core:iterator:155
# Core:iterator:isEmpty:2
$4112 = { (responsible $4113) ->
  $4114 = panicking because $1437 ($4111 is at fault)
}
$4115 = call $1670 with $4110 $4112 ($1224 is responsible)
$4116 = call $1886 with $4115 ($1225 is responsible)
$4117 = call $151 with $4116 $1381 ($1 is responsible)
$4118 = Core:iterator:157
$4119 = call $1007 with $4117 $186 ($4118 is responsible)
$4120 = Core:iterator:161:10
# Core:iterator:161
$4121 = { $4122 (+ responsible $4123) ->
  $4124 = call $170 with $4122 ($68 is responsible)
  $4125 = call $151 with $4124 $175 ($69 is responsible)
  $4126 = call $250 with $4125 $220 $4120 ($26 is responsible)
  $4127 = call $157 with $4122 $189 ($25 is responsible)
}
$4128 = Core:iterator:162
$4129 = call $2148 with $3888 $4121 ($4128 is responsible)
$4130 = Core:iterator:164
# Core:iterator:toList:2
$4131 = { (responsible $4132) ->
  $4133 = panicking because $1449 ($4130 is at fault)
}
$4134 = call $1670 with $4129 $4131 ($1295 is responsible)
$4135 = call $2526 with $4134 $3809 $3810 ($1297 is responsible)
$4136 = ($189, $191, $3889)
$4137 = Core:iterator:169
$4138 = call $1007 with $4135 $4136 ($4137 is responsible)
$4139 = Core:iterator:173
$4140 = call $2917 with $3888 ($4139 is responsible)
$4141 = Core:iterator:175
$4142 = call $1007 with $4140 $3889 ($4141 is responsible)
$4143 = Core:iterator:179
# Core:iterator:length:2
$4144 = { (responsible $4145) ->
  $4146 = panicking because $1439 ($4143 is at fault)
}
$4147 = call $1670 with $3888 $4144 ($1230 is responsible)
$4148 = call $2148 with $4147 $2933 ($1231 is responsible)
$4149 = call $2917 with $4148 ($1232 is responsible)
$4150 = Core:iterator:181
$4151 = call $1007 with $4149 $190 ($4150 is responsible)
$4152 = Core:iterator:185:9
# Core:iterator:185
$4153 = { $4154 (+ responsible $4155) ->
  $4156 = call $170 with $4154 ($70 is responsible)
  $4157 = call $151 with $4156 $175 ($1 is responsible)
  $4158 = call $250 with $4157 $235 $4152 ($1139 is responsible)
  $4159 = call $1077 with $4154 $187 ($1140 is responsible)
}
$4160 = Core:iterator:186
$4161 = call $2937 with $3888 $4153 ($4160 is responsible)
$4162 = Core:iterator:188
$4163 = call $1007 with $4161 $186 ($4162 is responsible)
# Core:iterator:192
$4164 = { $4165 (+ responsible $4166) ->
  $4167 = call $151 with $4165 $189 ($1 is responsible)
}
$4168 = Core:iterator:193
$4169 = call $2963 with $3888 $4164 ($4168 is responsible)
$4170 = Core:iterator:195
$4171 = call $1007 with $4169 $186 ($4170 is responsible)
$4172 = Core:iterator:200
$4173 = call $2148 with $3888 $632 ($4172 is responsible)
$4174 = Core:iterator:202
$4175 = call $2989 with $4173 ($4174 is responsible)
$4176 = "123"
$4177 = Core:iterator:210
$4178 = call $1007 with $4175 $4176 ($4177 is responsible)
$4179 = Core:iterator:214:9
# Core:iterator:214
$4180 = { $4181 (+ responsible $4182) ->
  $4183 = call $1143 with $4181 ($4179 is responsible)
}
$4184 = Core:iterator:215
$4185 = call $3017 with $3895 $4180 ($4184 is responsible)
$4186 = Core:iterator:217
# Core:iterator:toList:2
$4187 = { (responsible $4188) ->
  $4189 = panicking because $1449 ($4186 is at fault)
}
$4190 = call $1670 with $4185 $4187 ($1295 is responsible)
$4191 = call $2526 with $4190 $3809 $3810 ($1297 is responsible)
$4192 = ($188, $190, $192, $3890, $3892)
$4193 = Core:iterator:224
$4194 = call $1007 with $4191 $4192 ($4193 is responsible)
$4195 = Core:iterator:228:10
# Core:iterator:228
$4196 = { $4197 (+ responsible $4198) ->
  $4199 = call $1065 with $4197 $191 ($4195 is responsible)
}
$4200 = Core:iterator:229
$4201 = call $3325 with $3895 $4196 ($4200 is responsible)
$4202 = Core:iterator:231
# Core:iterator:toList:2
$4203 = { (responsible $4204) ->
  $4205 = panicking because $1449 ($4202 is at fault)
}
$4206 = call $1670 with $4201 $4203 ($1295 is responsible)
$4207 = call $2526 with $4206 $3809 $3810 ($1297 is responsible)
$4208 = Core:iterator:236
$4209 = call $1007 with $4207 $3887 ($4208 is responsible)
$4210 = Core:iterator:241
$4211 = call $3487 with $3895 $191 ($4210 is responsible)
$4212 = Core:iterator:243
# Core:iterator:toList:2
$4213 = { (responsible $4214) ->
  $4215 = panicking because $1449 ($4212 is at fault)
}
$4216 = call $1670 with $4211 $4213 ($1295 is responsible)
$4217 = call $2526 with $4216 $3809 $3810 ($1297 is responsible)
$4218 = ($188, $189, $190, $191)
$4219 = Core:iterator:249
$4220 = call $1007 with $4217 $4218 ($4219 is responsible)
$4221 = 12
$4222 = Core:iterator:254
$4223 = call $3487 with $3895 $4221 ($4222 is responsible)
$4224 = Core:iterator:256
# Core:iterator:toList:2
$4225 = { (responsible $4226) ->
  $4227 = panicking because $1449 ($4224 is at fault)
}
$4228 = call $1670 with $4223 $4225 ($1295 is responsible)
$4229 = call $2526 with $4228 $3809 $3810 ($1297 is responsible)
$4230 = Core:iterator:268
$4231 = call $1007 with $4229 $3893 ($4230 is responsible)
$4232 = Core:iterator:273
$4233 = call $3774 with $3895 $191 ($4232 is responsible)
$4234 = Core:iterator:275
# Core:iterator:toList:2
$4235 = { (responsible $4236) ->
  $4237 = panicking because $1449 ($4234 is at fault)
}
$4238 = call $1670 with $4233 $4235 ($1295 is responsible)
$4239 = call $2526 with $4238 $3809 $3810 ($1297 is responsible)
$4240 = ($192, $3889, $3890, $3891, $3892, $193)
$4241 = Core:iterator:283
$4242 = call $1007 with $4239 $4240 ($4241 is responsible)
$4243 = 40
$4244 = Core:iterator:288
$4245 = call $3774 with $3895 $4243 ($4244 is responsible)
$4246 = Core:iterator:290
# Core:iterator:toList:2
$4247 = { (responsible $4248) ->
  $4249 = panicking because $1449 ($4246 is at fault)
}
$4250 = call $1670 with $4245 $4247 ($1295 is responsible)
$4251 = call $2526 with $4250 $3809 $3810 ($1297 is responsible)
$4252 = Core:iterator:292
$4253 = call $1007 with $4251 $3809 ($4252 is responsible)
$4254 = Core:iterator:299
$4255 = call $3818 with $3895 $191 $190 $172 ($4254 is responsible)
$4256 = Core:iterator:301
# Core:iterator:toList:2
$4257 = { (responsible $4258) ->
  $4259 = panicking because $1449 ($4256 is at fault)
}
$4260 = call $1670 with $4255 $4257 ($1295 is responsible)
$4261 = call $2526 with $4260 $3809 $3810 ($1297 is responsible)
$4262 = ($191, $192, $3889, $3890)
$4263 = ($3890, $3891, $3892, $193)
$4264 = ($4218, $4262, $4263)
$4265 = Core:iterator:318
$4266 = call $1007 with $4261 $4264 ($4265 is responsible)
$4267 = Core:iterator:323
$4268 = call $3870 with $3895 $190 ($4267 is responsible)
$4269 = Core:iterator:325
# Core:iterator:toList:2
$4270 = { (responsible $4271) ->
  $4272 = panicking because $1449 ($4269 is at fault)
}
$4273 = call $1670 with $4268 $4270 ($1295 is responsible)
$4274 = call $2526 with $4273 $3809 $3810 ($1297 is responsible)
$4275 = ($191, $192, $3889)
$4276 = ($3890, $3891, $3892)
$4277 = ($193,)
$4278 = ($3887, $4275, $4276, $4277)
$4279 = Core:iterator:341
$4280 = call $1007 with $4274 $4278 ($4279 is responsible)
$4281 = Core:result:flatMap:14
$4282 = Core:result:flatMap:16
$4283 = Core:result:flatMap:19:2
$4284 = Core:result:flatMap:2
$4285 = Core:result:flatMap:21
$4286 = Core:result:flatMap:4
$4287 = Core:result:getValue:14
$4288 = Core:result:getValue:2
$4289 = Core:result:getValue:4
$4290 = Core:result:map:14
$4291 = Core:result:map:16
$4292 = Core:result:map:19:3
$4293 = Core:result:map:2
$4294 = Core:result:map:20
$4295 = Core:result:map:4
$4296 = Core:result:mapOr:14
$4297 = Core:result:mapOr:16
$4298 = Core:result:mapOr:2
$4299 = Core:result:mapOr:21
$4300 = Core:result:mapOr:4
$4301 = "Expected 1 item, got "
$4302 = "Expected a List, got `"
# Core:result:getValue
$4303 = { $4304 (+ responsible $4305) ->
  $4306 = call $1453 with $4304 ($4288 is responsible)
  $4307 = call $250 with $4306 $1436 $4305 ($4289 is responsible)
  $4308 = call $170 with $4304 ($68 is responsible)
  $4309 = call $151 with $4308 $184 ($69 is responsible)
  $4310 = call $250 with $4309 $242 $4287 ($63 is responsible)
  $4311 = call $166 with $4304 ($60 is responsible)
  $4312 = call $250 with $4311 $243 $4287 ($61 is responsible)
  $4313 = call $165 with $4304 ($62 is responsible)
}
# Core:result:flatMap
$4314 = { $4315 $4316 (+ responsible $4317) ->
  $4318 = call $1453 with $4315 ($4284 is responsible)
  $4319 = call $250 with $4318 $1436 $4317 ($4286 is responsible)
  $4320 = call $1120 with $4316 ($4281 is responsible)
  $4321 = call $250 with $4320 $1422 $4317 ($4282 is responsible)
  # Core:result:flatMap:19
  $4322 = { $4323 (+ responsible $4324) ->
    $4325 = call $4316 with $4323 ($4283 is responsible)
  }
  $4326 = call $1453 with $4315 ($4298 is responsible)
  $4327 = call $250 with $4326 $1436 $4285 ($4300 is responsible)
  $4328 = call $1120 with $4322 ($4296 is responsible)
  $4329 = call $250 with $4328 $1422 $4285 ($4297 is responsible)
  # Core:result:mapOr:20
  $4330 = { $4331 (+ responsible $4332) ->
    $4333 = $4315
  }
  $4334 = call $1540 with $4315 $4322 $4330 ($4299 is responsible)
}
# Core:result:map
$4335 = { $4336 $4337 (+ responsible $4338) ->
  $4339 = call $1453 with $4336 ($4293 is responsible)
  $4340 = call $250 with $4339 $1436 $4338 ($4295 is responsible)
  $4341 = call $1120 with $4337 ($4290 is responsible)
  $4342 = call $250 with $4341 $1422 $4338 ($4291 is responsible)
  # Core:result:map:19
  $4343 = { $4344 (+ responsible $4345) ->
    $4346 = call $4337 with $4344 ($4292 is responsible)
    $4347 = Ok $4346
  }
  $4348 = call $4314 with $4336 $4343 ($4294 is responsible)
}
$4349 = Examples:fibonacci:recursive:0:0:3
$4350 = Examples:fibonacci:recursive:0:5
$4351 = Examples:fibonacci:recursive:5
$4352 = Examples:fibonacci:compareTo:10
# Examples:fibonacci:isLessThan
$4353 = { $4354 $4355 (+ responsible $4356) ->
  $4357 = call $170 with $4354 ($68 is responsible)
  $4358 = call $151 with $4357 $175 ($69 is responsible)
  $4359 = call $250 with $4358 $211 $4352 ($24 is responsible)
  $4360 = call $170 with $4355 ($68 is responsible)
  $4361 = call $151 with $4360 $175 ($69 is responsible)
  $4362 = call $250 with $4361 $213 $4352 ($22 is responsible)
  $4363 = call $156 with $4354 $4355 ($23 is responsible)
  $4364 = call $151 with $4363 $176 ($1 is responsible)
}
$4365 = Examples:fibonacci:fibonacci:2:11
$4366 = Examples:fibonacci:fibonacci:2:13:11
$4367 = Examples:fibonacci:fibonacci:2:13:12
$4368 = Examples:fibonacci:fibonacci:2:13:32
$4369 = Examples:fibonacci:fibonacci:2:13:33
$4370 = Examples:fibonacci:fibonacci:2:13:34
$4371 = Examples:fibonacci:fibonacci:2:14
# Examples:fibonacci:fibonacci:2
$4372 = { $4373 $4374 (+ responsible $4375) ->
  $4376 = call $4353 with $4374 $189 ($4365 is responsible)
  # Examples:fibonacci:fibonacci:2:12
  $4377 = { (responsible $4378) ->
    $4379 = $4374
  }
  # Examples:fibonacci:fibonacci:2:13
  $4380 = { (responsible $4381) ->
    $4382 = call $170 with $4374 ($68 is responsible)
    $4383 = call $151 with $4382 $175 ($69 is responsible)
    $4384 = call $250 with $4383 $239 $4366 ($30 is responsible)
    $4385 = call $159 with $4374 $188 ($29 is responsible)
    $4386 = call $4373 with $4385 ($4367 is responsible)
    $4387 = call $170 with $4374 ($68 is responsible)
    $4388 = call $151 with $4387 $175 ($69 is responsible)
    $4389 = call $250 with $4388 $239 $4368 ($30 is responsible)
    $4390 = call $159 with $4374 $189 ($29 is responsible)
    $4391 = call $4373 with $4390 ($4369 is responsible)
    $4392 = call $170 with $4386 ($68 is responsible)
    $4393 = call $151 with $4392 $175 ($69 is responsible)
    $4394 = call $250 with $4393 $211 $4370 ($19 is responsible)
    $4395 = call $170 with $4391 ($68 is responsible)
    $4396 = call $151 with $4395 $175 ($69 is responsible)
    $4397 = call $250 with $4396 $213 $4370 ($17 is responsible)
    $4398 = call $154 with $4386 $4391 ($18 is responsible)
  }
  $4399 = call $493 with $4376 $4377 $4380 ($4371 is responsible)
}
# Examples:fibonacci:recursive:0
$4400 = { $4401 $4402 (+ responsible $4403) ->
  # Examples:fibonacci:recursive:0:0
  $4404 = { $4405 (+ responsible $4406) ->
    $4407 = call $4401 with $4401 $4405 ($4349 is responsible)
  }
  $4408 = call $4372 with $4404 $4402 ($4350 is responsible)
}
$4409 = Arguments
$4410 = Examples:fibonacci:21:7
$4411 = Examples:fibonacci:21:8
$4412 = "Usage: `cargo run -- run fibonacci.candy -- <number>`"
# Examples:fibonacci:21:8:case-0:didNotMatch
$4413 = { (responsible $4414) ->
  $4415 = $4412
}
$4416 = Examples:fibonacci:21:8:n
$4417 = Examples:fibonacci:21:8:9
# Examples:fibonacci:21:8:18
$4418 = { $4419 (+ responsible $4420) ->
  $4421 = call $4400 with $4400 $4419 ($4351 is responsible)
  $4422 = call $169 with $4421 ($67 is responsible)
}
$4423 = Examples:fibonacci:21:8:19
$4424 = Examples:fibonacci:21:8:28
$4425 = Stdout
$4426 = Examples:fibonacci:21:16
$4427 = Examples:fibonacci:21:17
# Examples:fibonacci:21
$4428 = { $4429 (+ responsible $4430) ->
  $4431 = call $170 with $4429 ($68 is responsible)
  $4432 = call $151 with $4431 $183 ($69 is responsible)
  $4433 = call $250 with $4432 $240 $4410 ($59 is responsible)
  $4434 = call $164 with $4429 $4409 ($56 is responsible)
  $4435 = call $250 with $4434 $241 $4410 ($57 is responsible)
  $4436 = call $163 with $4429 $4409 ($58 is responsible)
  $4437 = call $170 with $4436 ($4411 is responsible)
  $4438 = call $151 with $177 $4437 ($4411 is responsible)
  # Examples:fibonacci:21:8:equals:then
  $4439 = { (responsible $4440) ->
    $4441 = call $162 with $4436 ($4411 is responsible)
    $4442 = call $151 with $188 $4441 ($4411 is responsible)
    # Examples:fibonacci:21:8:equals:then
    $4443 = { (responsible $4444) ->
      $4445 = call $160 with $4436 $187 ($4411 is responsible)
      $4446 = ($178, $4445)
    }
    # Examples:fibonacci:21:8:equals:else
    $4447 = { (responsible $4448) ->
      $4449 = call $169 with $4441 ($4411 is responsible)
      $4450 = call $168 with $4301 $4449 ($4411 is responsible)
      $4451 = call $168 with $4450 $195 ($4411 is responsible)
      $4452 = ($180, $4451)
    }
    $4453 = call $153 with $4442 $4443 $4447 ($4411 is responsible)
  }
  # Examples:fibonacci:21:8:equals:else
  $4454 = { (responsible $4455) ->
    $4456 = call $169 with $4437 ($4411 is responsible)
    $4457 = call $168 with $4302 $4456 ($4411 is responsible)
    $4458 = call $168 with $4457 $210 ($4411 is responsible)
    $4459 = ($180, $4458)
  }
  $4460 = call $153 with $4438 $4439 $4454 ($4411 is responsible)
  $4461 = call $160 with $4460 $187 ($4411 is responsible)
  $4462 = call $151 with $4461 $178 ($4411 is responsible)
  # Examples:fibonacci:21:8:case-0:patternMatch
  $4463 = { (responsible $4464) ->
    $4465 = call $160 with $4460 $188 ($4416 is responsible)
    $4466 = call $170 with $4465 ($68 is responsible)
    $4467 = call $151 with $4466 $185 ($69 is responsible)
    $4468 = call $250 with $4467 $244 $4417 ($28 is responsible)
    $4469 = call $158 with $4465 ($27 is responsible)
    $4470 = call $4335 with $4469 $4418 ($4423 is responsible)
    $4471 = call $4303 with $4470 ($4424 is responsible)
  }
  $4472 = call $153 with $4462 $4463 $4413 ($4411 is responsible)
  $4473 = call $170 with $4429 ($68 is responsible)
  $4474 = call $151 with $4473 $183 ($69 is responsible)
  $4475 = call $250 with $4474 $240 $4426 ($59 is responsible)
  $4476 = call $164 with $4429 $4425 ($56 is responsible)
  $4477 = call $250 with $4476 $241 $4426 ($57 is responsible)
  $4478 = call $163 with $4429 $4425 ($58 is responsible)
  $4479 = call $4478 with $4472 ($4427 is responsible)
}
