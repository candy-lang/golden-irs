# Optimized MIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::functionRun:11
$3 = Builtins::functionRun:16
$4 = Builtins::functionRun:22
$5 = Builtins::functionRun:5
$6 = Builtins::getArgumentCount:11
$7 = Builtins::getArgumentCount:5
$8 = Builtins::ifElse:1
$9 = Builtins::ifElse:11
$10 = Builtins::ifElse:14
$11 = Builtins::ifElse:19
$12 = Builtins::ifElse:25
$13 = Builtins::ifElse:28
$14 = Builtins::ifElse:33
$15 = Builtins::ifElse:41
$16 = Builtins::ifElse:5
$17 = Builtins::intAdd:11
$18 = Builtins::intAdd:18
$19 = Builtins::intAdd:5
$20 = Builtins::intBitwiseAnd:18
$21 = Builtins::intBitwiseAnd:5
$22 = Builtins::intCompareTo:11
$23 = Builtins::intCompareTo:18
$24 = Builtins::intCompareTo:5
$25 = Builtins::intMultiply:18
$26 = Builtins::intMultiply:5
$27 = Builtins::intParse:11
$28 = Builtins::intParse:5
$29 = Builtins::intSubtract:18
$30 = Builtins::intSubtract:5
$31 = Builtins::isLessThanOrEqualTo:11
$32 = Builtins::isLessThanOrEqualTo:18
$33 = Builtins::isLessThanOrEqualTo:19
$34 = Builtins::isLessThanOrEqualTo:5
$35 = Builtins::isNonNegative:12
$36 = Builtins::isNonNegative:13
$37 = Builtins::isNonNegative:5
$38 = Builtins::listGet:11
$39 = Builtins::listGet:14
$40 = Builtins::listGet:16
$41 = Builtins::listGet:24
$42 = Builtins::listGet:25
$43 = Builtins::listGet:30
$44 = Builtins::listGet:37
$45 = Builtins::listGet:5
$46 = Builtins::listInsert:11
$47 = Builtins::listInsert:14
$48 = Builtins::listInsert:16
$49 = Builtins::listInsert:24
$50 = Builtins::listInsert:25
$51 = Builtins::listInsert:27
$52 = Builtins::listInsert:35
$53 = Builtins::listInsert:5
$54 = Builtins::listLength:11
$55 = Builtins::listLength:5
$56 = Builtins::structGet:12
$57 = Builtins::structGet:14
$58 = Builtins::structGet:21
$59 = Builtins::structGet:5
$60 = Builtins::tagGetValue:11
$61 = Builtins::tagGetValue:13
$62 = Builtins::tagGetValue:19
$63 = Builtins::tagGetValue:5
$64 = Builtins::textConcatenate:11
$65 = Builtins::textConcatenate:18
$66 = Builtins::textConcatenate:5
$67 = Builtins::toDebugText:5
$68 = Builtins::typeIs:19
$69 = Builtins::typeIs:25
$70 = Builtins::typeOf:5
$71 = Core:bool:and:13
$72 = Core:bool:and:2
$73 = Core:bool:and:4
$74 = Core:bool:and:7
$75 = Core:bool:and:9
$76 = Core:bool:is:1
$77 = Core:bool:lazyAnd:14
$78 = Core:bool:lazyAnd:16
$79 = Core:bool:lazyAnd:18
$80 = Core:bool:lazyAnd:18:13
$81 = Core:bool:lazyAnd:18:21
$82 = Core:bool:lazyAnd:18:9
$83 = Core:bool:lazyAnd:2
$84 = Core:bool:lazyAnd:4
$85 = Core:bool:lazyOr:14
$86 = Core:bool:lazyOr:16
$87 = Core:bool:lazyOr:18
$88 = Core:bool:lazyOr:18:10
$89 = Core:bool:lazyOr:18:14
$90 = Core:bool:lazyOr:18:22
$91 = Core:bool:lazyOr:2
$92 = Core:bool:lazyOr:4
$93 = Core:bool:not:2
$94 = Core:bool:not:4
$95 = Core:bool:not:6
$96 = Core:bool:or:13
$97 = Core:bool:or:2
$98 = Core:bool:or:4
$99 = Core:bool:or:7
$100 = Core:bool:or:9
$101 = Core:check:checkEquals:12
$102 = Core:check:checkEquals:13
$103 = Core:check:checkEquals:15:0
$104 = Core:check:checkEquals:16
$105 = Core:check:checkEquals:19
$106 = Core:check:checkEquals:20
$107 = Core:check:checkEquals:22:0
$108 = Core:check:checkEquals:23
$109 = Core:check:checkEquals:25
$110 = Core:check:checkEquals:26
$111 = Core:check:checkEquals:27
$112 = Core:check:checkEquals:28
$113 = Core:check:checkEquals:29
$114 = Core:controlFlow:if:11
$115 = Core:controlFlow:if:21
$116 = Core:controlFlow:if:23
$117 = Core:controlFlow:if:28
$118 = Core:controlFlow:if:9
$119 = Core:controlFlow:recursive:17
$120 = Core:controlFlow:recursive:18:0:3
$121 = Core:controlFlow:recursive:18:5
$122 = Core:controlFlow:recursive:23
$123 = Core:controlFlow:recursive:9
$124 = Core:fixedDecimal:fromInt:15
$125 = Core:fixedDecimal:fromIntScaled:11
$126 = Core:fixedDecimal:fromIntScaled:16
$127 = Core:fixedDecimal:isScale:18:9
$128 = Core:fixedDecimal:isScale:19
$129 = Core:function:is0:11:3
$130 = Core:function:is0:13
$131 = Core:function:is2:11:3
$132 = Core:function:is2:13
$133 = Core:function:run:14
$134 = Core:function:run:2
$135 = Core:function:run:4
$136 = Core:int:compareTo:20
$137 = Core:int:compareTo:4
$138 = Core:int:compareTo:9
$139 = Core:int:isGreaterThan:13
$140 = Core:int:isGreaterThan:4
$141 = Core:int:isGreaterThan:9
$142 = Core:int:isLessThan:13
$143 = Core:int:isLessThan:4
$144 = Core:int:isLessThan:9
$145 = Core:int:isNegative:4
$146 = Core:int:isNegative:8
$147 = Core:int:isNonNegative:16
$148 = Core:int:isNonNegative:4
$149 = Core:int:isNonNegative:7
$150 = anonymous:$generated::needs
$151 = builtinEquals
$152 = builtinGetArgumentCount
$153 = builtinIfElse
$154 = builtinIntAdd
$155 = builtinIntBitwiseAnd
$156 = builtinIntCompareTo
$157 = builtinIntMultiply
$158 = builtinIntParse
$159 = builtinIntSubtract
$160 = builtinListGet
$161 = builtinListInsert
$162 = builtinListLength
$163 = builtinStructGet
$164 = builtinStructHasKey
$165 = builtinTagGetValue
$166 = builtinTagHasValue
$167 = builtinTagWithoutValue
$168 = builtinTextConcatenate
$169 = builtinToDebugText
$170 = builtinTypeOf
$171 = Equal
$172 = False
$173 = Function
$174 = Greater
$175 = Int
$176 = Less
$177 = List
$178 = Match
$179 = MinorUnits
$180 = NoMatch
$181 = Nothing
$182 = Scale
$183 = Struct
$184 = Tag
$185 = Text
$186 = True
$187 = 0
$188 = 1
$189 = 2
$190 = 3
$191 = 4
$192 = 5
$193 = 10
$194 = " to be "
$195 = "."
$196 = "A check failed: Expected "
$197 = "Expected `Equal`, got `"
$198 = "Expected `False`, got `"
$199 = "Expected `Greater`, got `"
$200 = "Expected `Less`, got `"
$201 = "Expected `True`, got `"
$202 = "Expected a Struct, got `"
$203 = "Expected a Tag, got `"
$204 = "Expected tag to have a value, but it doesn't have any."
$205 = "No case matched the given expression."
$206 = "The `body` should take the recursive function and the argument."
$207 = "The `condition` must be either `True` or `False`."
$208 = "The `reason` must be a text."
$209 = "`."
$210 = "`a | typeIs Int` was not satisfied"
$211 = "`a | typeIs Text` was not satisfied"
$212 = "`b | typeIs Int` was not satisfied"
$213 = "`b | typeIs Text` was not satisfied"
$214 = "`b` didn't return a bool."
$215 = "`bool.is condition` was not satisfied"
$216 = "`conditionIsBool` was not satisfied"
$217 = "`else | getArgumentCount | equals 0` was not satisfied"
$218 = "`else | typeIs Function` was not satisfied"
$219 = "`factorA | typeIs Int` was not satisfied"
$220 = "`function | typeIs Function` was not satisfied"
$221 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
$222 = "`function.is0 b` was not satisfied"
$223 = "`function.is0 then` was not satisfied"
$224 = "`index | intCompareTo (list | ✨.listLength) | equals Less` was not satisfied"
$225 = "`index | isLessThanOrEqualTo (list | ✨.listLength)` was not satisfied"
$226 = "`index | isNonNegative` was not satisfied"
$227 = "`index | typeIs Int` was not satisfied"
$228 = "`int | typeIs Int` was not satisfied"
$229 = "`int.is minorUnits` was not satisfied"
$230 = "`is a` was not satisfied"
$231 = "`is b` was not satisfied"
$232 = "`is valueA` was not satisfied"
$233 = "`is valueB` was not satisfied"
$234 = "`is value` was not satisfied"
$235 = "`is0 body` was not satisfied"
$236 = "`isScale scale` was not satisfied"
$237 = "`list | typeIs List` was not satisfied"
$238 = "`minuend | typeIs Int` was not satisfied"
$239 = "`struct | typeIs Struct` was not satisfied"
$240 = "`struct | ✨.structHasKey key` was not satisfied"
$241 = "`tag | typeIs Tag` was not satisfied"
$242 = "`tag | ✨.tagHasValue` was not satisfied"
$243 = "`text | typeIs Text` was not satisfied"
$244 = "`then | getArgumentCount | equals 0` was not satisfied"
$245 = "`then | typeIs Function` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
$246 = { (responsible $247) ->
  $248 = $186
}
# Core::19:isMatch:then, Core::30:isMatch:then, Core::41:isMatch:then, Core::102:isMatch:then, Core::153:isMatch:then, Core::164:isMatch:then, Core:bool:9:isMatch:then, Core:check:9:isMatch:then, Core:controlFlow:if:27, Core:controlFlow:29:isMatch:then, Core:controlFlow:50:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:fixedDecimal:30:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:function:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:29:isMatch:then, Core:int:40:isMatch:then, Core:iterator:foldLeft:23:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:30:6:1:isMatch:then, Core:iterator:take:31:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:19:isMatch:then, Core:iterator:30:isMatch:then, Core:iterator:91:isMatch:then, Core:iterator:102:isMatch:then, Core:iterator:128:isMatch:then, Core:iterator:137:isMatch:then, Core:list:firstIndexWhere:23:1:isMatch:then, Core:list:generate:59:1:isMatch:then, Core:list:lastIndexWhere:44:1:isMatch:then, Core:list:29:isMatch:then, Core:list:40:isMatch:then, Core:result:19:isMatch:then, Core:result:30:isMatch:then, Core:struct:19:isMatch:then, Core:tag:29:isMatch:then, Core:text:repeat:34:1:isMatch:then, Core:text:29:isMatch:then, Core:text:40:isMatch:then, Core:type:19:isMatch:then, Examples:fibonacci:then, Examples:fibonacci:19:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$249 = { (responsible $250) ->
  $251 = $181
}
# anonymous:$generated::needs
$252 = { $253 $254 $255 (+ responsible $256) ->
  $257 = call $151 with $253 $186 ($150 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $258 = { (responsible $259) ->
    $260 = call $151 with $253 $172 ($150 is responsible)
  }
  $261 = call $153 with $257 $246 $258 ($150 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $262 = { (responsible $263) ->
    $264 = panicking because $207 ($256 is at fault)
  }
  $265 = call $153 with $261 $249 $262 ($150 is responsible)
  $266 = call $170 with $254 ($256 is responsible)
  $267 = call $151 with $266 $185 ($256 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $268 = { (responsible $269) ->
    $270 = panicking because $208 ($256 is at fault)
  }
  $271 = call $153 with $267 $249 $268 ($150 is responsible)
  # anonymous:$generated::needs:condition:else
  $272 = { (responsible $273) ->
    $274 = panicking because $254 ($255 is at fault)
  }
  $275 = call $153 with $253 $249 $272 ($150 is responsible)
}
$276 = ($178,)
# Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:18:equals:then, Core:bool:lazyOr:18:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:23:5:equals:then, Core:iterator:generateWithState:14:1:3:equals:then, Core:iterator:map:19:3:equals:then, Core:iterator:reduceLeft:18:equals:then, Core:iterator:skip:30:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:19:2:3:equals:then, Core:iterator:where:19:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:16:26:10:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:21:equals:then, Core:list:lastWhere:21:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
$277 = { (responsible $278) ->
  $279 = $276
}
# Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:lazyAnd:18:case-1:matched, Core:bool:not:6:case-0:matched, Core:function:is0:12, Core:function:is1:12, Core:function:is2:12, Core:function:is3:12, Core:function:is4:12, Core:function:is5:12, Core:list:isValidIndex:21, Core:list:isValidInsertIndex:21, anonymous:$generated::needs:isConditionTrue:else
$280 = { (responsible $281) ->
  $282 = $172
}
# Builtins::isNonNegative
$283 = { $284 (+ responsible $285) ->
  $286 = call $170 with $284 ($68 is responsible)
  $287 = call $151 with $286 $175 ($69 is responsible)
  $288 = call $252 with $287 $228 $285 ($37 is responsible)
  $289 = call $156 with $284 $187 ($35 is responsible)
  $290 = call $151 with $174 $289 ($36 is responsible)
  # Builtins::isNonNegative:13:equals:else
  $291 = { (responsible $292) ->
    $293 = call $169 with $289 ($36 is responsible)
    $294 = call $168 with $199 $293 ($36 is responsible)
    $295 = call $168 with $294 $209 ($36 is responsible)
    $296 = ($180, $295)
  }
  $297 = call $153 with $290 $277 $291 ($36 is responsible)
  $298 = call $160 with $297 $187 ($36 is responsible)
  $299 = call $151 with $298 $178 ($36 is responsible)
  # Builtins::isNonNegative:13:isMatch:then
  $300 = { (responsible $301) ->
    $302 = $297
  }
  # Builtins::isNonNegative:13:isMatch:else
  $303 = { (responsible $304) ->
    $305 = call $151 with $171 $289 ($36 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $306 = { (responsible $307) ->
      $308 = call $169 with $289 ($36 is responsible)
      $309 = call $168 with $197 $308 ($36 is responsible)
      $310 = call $168 with $309 $209 ($36 is responsible)
      $311 = ($180, $310)
    }
    $312 = call $153 with $305 $277 $306 ($36 is responsible)
  }
  $313 = call $153 with $299 $300 $303 ($36 is responsible)
  $314 = call $160 with $313 $187 ($36 is responsible)
  $315 = call $151 with $314 $178 ($36 is responsible)
  # Builtins::isNonNegative:13:case-0:didNotMatch
  $316 = { (responsible $317) ->
    $318 = call $160 with $313 $188 ($36 is responsible)
    $319 = call $151 with $176 $289 ($36 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $320 = { (responsible $321) ->
      $322 = call $169 with $289 ($36 is responsible)
      $323 = call $168 with $200 $322 ($36 is responsible)
      $324 = call $168 with $323 $209 ($36 is responsible)
      $325 = ($180, $324)
    }
    $326 = call $153 with $319 $277 $320 ($36 is responsible)
    $327 = call $160 with $326 $187 ($36 is responsible)
    $328 = call $151 with $327 $178 ($36 is responsible)
    # Builtins::isNonNegative:13:case-1:didNotMatch
    $329 = { (responsible $330) ->
      $331 = call $160 with $326 $188 ($36 is responsible)
      $332 = panicking because $205 ($36 is at fault)
    }
    $333 = call $153 with $328 $280 $329 ($36 is responsible)
  }
  $334 = call $153 with $315 $246 $316 ($36 is responsible)
}
# Builtins::isLessThanOrEqualTo
$335 = { $336 $337 (+ responsible $338) ->
  $339 = call $170 with $336 ($68 is responsible)
  $340 = call $151 with $339 $175 ($69 is responsible)
  $341 = call $252 with $340 $210 $338 ($34 is responsible)
  $342 = call $170 with $337 ($68 is responsible)
  $343 = call $151 with $342 $175 ($69 is responsible)
  $344 = call $252 with $343 $212 $338 ($31 is responsible)
  $345 = call $156 with $336 $337 ($32 is responsible)
  $346 = call $151 with $176 $345 ($33 is responsible)
  # Builtins::isLessThanOrEqualTo:19:equals:else
  $347 = { (responsible $348) ->
    $349 = call $169 with $345 ($33 is responsible)
    $350 = call $168 with $200 $349 ($33 is responsible)
    $351 = call $168 with $350 $209 ($33 is responsible)
    $352 = ($180, $351)
  }
  $353 = call $153 with $346 $277 $347 ($33 is responsible)
  $354 = call $160 with $353 $187 ($33 is responsible)
  $355 = call $151 with $354 $178 ($33 is responsible)
  # Builtins::isLessThanOrEqualTo:19:isMatch:then
  $356 = { (responsible $357) ->
    $358 = $353
  }
  # Builtins::isLessThanOrEqualTo:19:isMatch:else
  $359 = { (responsible $360) ->
    $361 = call $151 with $171 $345 ($33 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $362 = { (responsible $363) ->
      $364 = call $169 with $345 ($33 is responsible)
      $365 = call $168 with $197 $364 ($33 is responsible)
      $366 = call $168 with $365 $209 ($33 is responsible)
      $367 = ($180, $366)
    }
    $368 = call $153 with $361 $277 $362 ($33 is responsible)
  }
  $369 = call $153 with $355 $356 $359 ($33 is responsible)
  $370 = call $160 with $369 $187 ($33 is responsible)
  $371 = call $151 with $370 $178 ($33 is responsible)
  # Builtins::isLessThanOrEqualTo:19:case-0:didNotMatch
  $372 = { (responsible $373) ->
    $374 = call $160 with $369 $188 ($33 is responsible)
    $375 = call $151 with $174 $345 ($33 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $376 = { (responsible $377) ->
      $378 = call $169 with $345 ($33 is responsible)
      $379 = call $168 with $199 $378 ($33 is responsible)
      $380 = call $168 with $379 $209 ($33 is responsible)
      $381 = ($180, $380)
    }
    $382 = call $153 with $375 $277 $376 ($33 is responsible)
    $383 = call $160 with $382 $187 ($33 is responsible)
    $384 = call $151 with $383 $178 ($33 is responsible)
    # Builtins::isLessThanOrEqualTo:19:case-1:didNotMatch
    $385 = { (responsible $386) ->
      $387 = call $160 with $382 $188 ($33 is responsible)
      $388 = panicking because $205 ($33 is at fault)
    }
    $389 = call $153 with $384 $280 $385 ($33 is responsible)
  }
  $390 = call $153 with $371 $246 $372 ($33 is responsible)
}
# Builtins::ifElse
$391 = { $392 $393 $394 (+ responsible $395) ->
  $396 = call $151 with $186 $392 ($8 is responsible)
  # Builtins::ifElse:1:equals:else
  $397 = { (responsible $398) ->
    $399 = call $169 with $392 ($8 is responsible)
    $400 = call $168 with $201 $399 ($8 is responsible)
    $401 = call $168 with $400 $209 ($8 is responsible)
    $402 = ($180, $401)
  }
  $403 = call $153 with $396 $277 $397 ($8 is responsible)
  $404 = call $160 with $403 $187 ($8 is responsible)
  $405 = call $151 with $404 $178 ($8 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $406 = { (responsible $407) ->
    $408 = $403
  }
  # Builtins::ifElse:1:isMatch:else
  $409 = { (responsible $410) ->
    $411 = call $151 with $172 $392 ($8 is responsible)
    # Builtins::ifElse:1:equals:else
    $412 = { (responsible $413) ->
      $414 = call $169 with $392 ($8 is responsible)
      $415 = call $168 with $198 $414 ($8 is responsible)
      $416 = call $168 with $415 $209 ($8 is responsible)
      $417 = ($180, $416)
    }
    $418 = call $153 with $411 $277 $412 ($8 is responsible)
  }
  $419 = call $153 with $405 $406 $409 ($8 is responsible)
  $420 = call $160 with $419 $187 ($8 is responsible)
  $421 = call $151 with $420 $178 ($8 is responsible)
  # Builtins::ifElse:1:case-0:didNotMatch
  $422 = { (responsible $423) ->
    $424 = call $160 with $419 $188 ($8 is responsible)
    $425 = $172
  }
  $426 = call $153 with $421 $246 $422 ($8 is responsible)
  $427 = call $252 with $426 $216 $395 ($16 is responsible)
  $428 = call $170 with $393 ($68 is responsible)
  $429 = call $151 with $428 $173 ($69 is responsible)
  $430 = call $252 with $429 $245 $395 ($9 is responsible)
  $431 = call $170 with $393 ($68 is responsible)
  $432 = call $151 with $431 $173 ($69 is responsible)
  $433 = call $252 with $432 $220 $10 ($7 is responsible)
  $434 = call $152 with $393 ($6 is responsible)
  $435 = call $151 with $434 $187 ($1 is responsible)
  $436 = call $252 with $435 $244 $395 ($11 is responsible)
  $437 = call $170 with $394 ($68 is responsible)
  $438 = call $151 with $437 $173 ($69 is responsible)
  $439 = call $252 with $438 $218 $395 ($12 is responsible)
  $440 = call $170 with $394 ($68 is responsible)
  $441 = call $151 with $440 $173 ($69 is responsible)
  $442 = call $252 with $441 $220 $13 ($7 is responsible)
  $443 = call $152 with $394 ($6 is responsible)
  $444 = call $151 with $443 $187 ($1 is responsible)
  $445 = call $252 with $444 $217 $395 ($14 is responsible)
  $446 = call $153 with $392 $393 $394 ($15 is responsible)
}
# Builtins::listGet
$447 = { $448 $449 (+ responsible $450) ->
  $451 = call $170 with $448 ($68 is responsible)
  $452 = call $151 with $451 $177 ($69 is responsible)
  $453 = call $252 with $452 $237 $450 ($45 is responsible)
  $454 = call $170 with $449 ($68 is responsible)
  $455 = call $151 with $454 $175 ($69 is responsible)
  $456 = call $252 with $455 $227 $450 ($38 is responsible)
  $457 = call $283 with $449 ($39 is responsible)
  $458 = call $252 with $457 $226 $450 ($40 is responsible)
  $459 = call $162 with $448 ($41 is responsible)
  $460 = call $170 with $449 ($68 is responsible)
  $461 = call $151 with $460 $175 ($69 is responsible)
  $462 = call $252 with $461 $210 $42 ($24 is responsible)
  $463 = call $156 with $449 $459 ($23 is responsible)
  $464 = call $151 with $463 $176 ($1 is responsible)
  $465 = call $252 with $464 $224 $450 ($43 is responsible)
  $466 = call $160 with $448 $449 ($44 is responsible)
}
# Builtins::listInsert
$467 = { $468 $469 $470 (+ responsible $471) ->
  $472 = call $170 with $468 ($68 is responsible)
  $473 = call $151 with $472 $177 ($69 is responsible)
  $474 = call $252 with $473 $237 $471 ($53 is responsible)
  $475 = call $170 with $469 ($68 is responsible)
  $476 = call $151 with $475 $175 ($69 is responsible)
  $477 = call $252 with $476 $227 $471 ($46 is responsible)
  $478 = call $283 with $469 ($47 is responsible)
  $479 = call $252 with $478 $226 $471 ($48 is responsible)
  $480 = call $162 with $468 ($49 is responsible)
  $481 = call $335 with $469 $480 ($50 is responsible)
  $482 = call $252 with $481 $225 $471 ($51 is responsible)
  $483 = call $161 with $468 $469 $470 ($52 is responsible)
}
# Builtins::toDebugText, Core:iterator:199, Core:toDebugText:toDebugText
$484 = { $485 (+ responsible $486) ->
  $487 = call $169 with $485 ($67 is responsible)
}
# Core:function:is0
$488 = { $489 (+ responsible $490) ->
  $491 = call $170 with $489 ($70 is responsible)
  $492 = call $151 with $491 $173 ($1 is responsible)
  # Core:function:is0:11
  $493 = { (responsible $494) ->
    $495 = call $170 with $489 ($68 is responsible)
    $496 = call $151 with $495 $173 ($69 is responsible)
    $497 = call $252 with $496 $220 $129 ($7 is responsible)
    $498 = call $152 with $489 ($6 is responsible)
    $499 = call $151 with $498 $187 ($1 is responsible)
  }
  $500 = call $391 with $492 $493 $280 ($130 is responsible)
}
# Core:function:run
$501 = { $502 (+ responsible $503) ->
  $504 = call $488 with $502 ($134 is responsible)
  $505 = call $252 with $504 $235 $503 ($135 is responsible)
  $506 = call $170 with $502 ($68 is responsible)
  $507 = call $151 with $506 $173 ($69 is responsible)
  $508 = call $252 with $507 $220 $133 ($5 is responsible)
  $509 = call $152 with $502 ($2 is responsible)
  $510 = call $151 with $509 $187 ($1 is responsible)
  $511 = call $252 with $510 $221 $133 ($3 is responsible)
  $512 = call $502 with no arguments ($4 is responsible)
}
# Core:bool:is
$513 = { $514 (+ responsible $515) ->
  $516 = call $151 with $186 $514 ($76 is responsible)
  # Core:bool:is:1:equals:else
  $517 = { (responsible $518) ->
    $519 = call $169 with $514 ($76 is responsible)
    $520 = call $168 with $201 $519 ($76 is responsible)
    $521 = call $168 with $520 $209 ($76 is responsible)
    $522 = ($180, $521)
  }
  $523 = call $153 with $516 $277 $517 ($76 is responsible)
  $524 = call $160 with $523 $187 ($76 is responsible)
  $525 = call $151 with $524 $178 ($76 is responsible)
  # Core:bool:is:1:isMatch:then
  $526 = { (responsible $527) ->
    $528 = $523
  }
  # Core:bool:is:1:isMatch:else
  $529 = { (responsible $530) ->
    $531 = call $151 with $172 $514 ($76 is responsible)
    # Core:bool:is:1:equals:else
    $532 = { (responsible $533) ->
      $534 = call $169 with $514 ($76 is responsible)
      $535 = call $168 with $198 $534 ($76 is responsible)
      $536 = call $168 with $535 $209 ($76 is responsible)
      $537 = ($180, $536)
    }
    $538 = call $153 with $531 $277 $532 ($76 is responsible)
  }
  $539 = call $153 with $525 $526 $529 ($76 is responsible)
  $540 = call $160 with $539 $187 ($76 is responsible)
  $541 = call $151 with $540 $178 ($76 is responsible)
  # Core:bool:is:1:case-0:didNotMatch
  $542 = { (responsible $543) ->
    $544 = call $160 with $539 $188 ($76 is responsible)
    $545 = $172
  }
  $546 = call $153 with $541 $246 $542 ($76 is responsible)
}
# Core:bool:not
$547 = { $548 (+ responsible $549) ->
  $550 = call $513 with $548 ($93 is responsible)
  $551 = call $252 with $550 $234 $549 ($94 is responsible)
  $552 = call $151 with $186 $548 ($95 is responsible)
  # Core:bool:not:6:equals:else
  $553 = { (responsible $554) ->
    $555 = call $169 with $548 ($95 is responsible)
    $556 = call $168 with $201 $555 ($95 is responsible)
    $557 = call $168 with $556 $209 ($95 is responsible)
    $558 = ($180, $557)
  }
  $559 = call $153 with $552 $277 $553 ($95 is responsible)
  $560 = call $160 with $559 $187 ($95 is responsible)
  $561 = call $151 with $560 $178 ($95 is responsible)
  # Core:bool:not:6:case-0:didNotMatch
  $562 = { (responsible $563) ->
    $564 = call $160 with $559 $188 ($95 is responsible)
    $565 = call $151 with $172 $548 ($95 is responsible)
    # Core:bool:not:6:equals:else
    $566 = { (responsible $567) ->
      $568 = call $169 with $548 ($95 is responsible)
      $569 = call $168 with $198 $568 ($95 is responsible)
      $570 = call $168 with $569 $209 ($95 is responsible)
      $571 = ($180, $570)
    }
    $572 = call $153 with $565 $277 $566 ($95 is responsible)
    $573 = call $160 with $572 $187 ($95 is responsible)
    $574 = call $151 with $573 $178 ($95 is responsible)
    # Core:bool:not:6:case-1:didNotMatch
    $575 = { (responsible $576) ->
      $577 = call $160 with $572 $188 ($95 is responsible)
      $578 = panicking because $205 ($95 is at fault)
    }
    $579 = call $153 with $574 $246 $575 ($95 is responsible)
  }
  $580 = call $153 with $561 $280 $562 ($95 is responsible)
}
# Core:bool:lazyAnd
$581 = { $582 $583 (+ responsible $584) ->
  $585 = call $513 with $582 ($83 is responsible)
  $586 = call $252 with $585 $230 $584 ($84 is responsible)
  $587 = call $488 with $583 ($77 is responsible)
  $588 = call $252 with $587 $222 $584 ($78 is responsible)
  $589 = call $151 with $186 $582 ($79 is responsible)
  # Core:bool:lazyAnd:18:equals:else
  $590 = { (responsible $591) ->
    $592 = call $169 with $582 ($79 is responsible)
    $593 = call $168 with $201 $592 ($79 is responsible)
    $594 = call $168 with $593 $209 ($79 is responsible)
    $595 = ($180, $594)
  }
  $596 = call $153 with $589 $277 $590 ($79 is responsible)
  $597 = call $160 with $596 $187 ($79 is responsible)
  $598 = call $151 with $597 $178 ($79 is responsible)
  # Core:bool:lazyAnd:18:case-0:matched
  $599 = { (responsible $600) ->
    $601 = call $501 with $583 ($82 is responsible)
    $602 = $601
    $603 = call $513 with $601 ($80 is responsible)
    $604 = call $252 with $603 $214 $584 ($81 is responsible)
    $605 = $602
  }
  # Core:bool:lazyAnd:18:case-0:didNotMatch
  $606 = { (responsible $607) ->
    $608 = call $160 with $596 $188 ($79 is responsible)
    $609 = call $151 with $172 $582 ($79 is responsible)
    # Core:bool:lazyAnd:18:equals:else
    $610 = { (responsible $611) ->
      $612 = call $169 with $582 ($79 is responsible)
      $613 = call $168 with $198 $612 ($79 is responsible)
      $614 = call $168 with $613 $209 ($79 is responsible)
      $615 = ($180, $614)
    }
    $616 = call $153 with $609 $277 $610 ($79 is responsible)
    $617 = call $160 with $616 $187 ($79 is responsible)
    $618 = call $151 with $617 $178 ($79 is responsible)
    # Core:bool:lazyAnd:18:case-1:didNotMatch
    $619 = { (responsible $620) ->
      $621 = call $160 with $616 $188 ($79 is responsible)
      $622 = panicking because $205 ($79 is at fault)
    }
    $623 = call $153 with $618 $280 $619 ($79 is responsible)
  }
  $624 = call $153 with $598 $599 $606 ($79 is responsible)
}
# Core:bool:lazyOr
$625 = { $626 $627 (+ responsible $628) ->
  $629 = call $513 with $626 ($91 is responsible)
  $630 = call $252 with $629 $230 $628 ($92 is responsible)
  $631 = call $488 with $627 ($85 is responsible)
  $632 = call $252 with $631 $222 $628 ($86 is responsible)
  $633 = call $151 with $186 $626 ($87 is responsible)
  # Core:bool:lazyOr:18:equals:else
  $634 = { (responsible $635) ->
    $636 = call $169 with $626 ($87 is responsible)
    $637 = call $168 with $201 $636 ($87 is responsible)
    $638 = call $168 with $637 $209 ($87 is responsible)
    $639 = ($180, $638)
  }
  $640 = call $153 with $633 $277 $634 ($87 is responsible)
  $641 = call $160 with $640 $187 ($87 is responsible)
  $642 = call $151 with $641 $178 ($87 is responsible)
  # Core:bool:lazyOr:18:case-0:didNotMatch
  $643 = { (responsible $644) ->
    $645 = call $160 with $640 $188 ($87 is responsible)
    $646 = call $151 with $172 $626 ($87 is responsible)
    # Core:bool:lazyOr:18:equals:else
    $647 = { (responsible $648) ->
      $649 = call $169 with $626 ($87 is responsible)
      $650 = call $168 with $198 $649 ($87 is responsible)
      $651 = call $168 with $650 $209 ($87 is responsible)
      $652 = ($180, $651)
    }
    $653 = call $153 with $646 $277 $647 ($87 is responsible)
    $654 = call $160 with $653 $187 ($87 is responsible)
    $655 = call $151 with $654 $178 ($87 is responsible)
    # Core:bool:lazyOr:18:case-1:matched
    $656 = { (responsible $657) ->
      $658 = call $501 with $627 ($88 is responsible)
      $659 = $658
      $660 = call $513 with $658 ($89 is responsible)
      $661 = call $252 with $660 $214 $628 ($90 is responsible)
      $662 = $659
    }
    # Core:bool:lazyOr:18:case-1:didNotMatch
    $663 = { (responsible $664) ->
      $665 = call $160 with $653 $188 ($87 is responsible)
      $666 = panicking because $205 ($87 is at fault)
    }
    $667 = call $153 with $655 $656 $663 ($87 is responsible)
  }
  $668 = call $153 with $642 $246 $643 ($87 is responsible)
}
# Core:check:checkEquals
$669 = { $670 $671 (+ responsible $672) ->
  $673 = call $151 with $670 $671 ($1 is responsible)
  $674 = call $170 with $670 ($101 is responsible)
  $675 = call $151 with $674 $185 ($102 is responsible)
  # Core:check:checkEquals:14
  $676 = { (responsible $677) ->
    $678 = $670
  }
  # Core:check:checkEquals:15
  $679 = { (responsible $680) ->
    $681 = call $169 with $670 ($103 is responsible)
  }
  $682 = call $153 with $675 $676 $679 ($104 is responsible)
  $683 = call $170 with $671 ($105 is responsible)
  $684 = call $151 with $683 $185 ($106 is responsible)
  # Core:check:checkEquals:21
  $685 = { (responsible $686) ->
    $687 = $671
  }
  # Core:check:checkEquals:22
  $688 = { (responsible $689) ->
    $690 = call $169 with $671 ($107 is responsible)
  }
  $691 = call $153 with $684 $685 $688 ($108 is responsible)
  $692 = call $168 with $196 $682 ($109 is responsible)
  $693 = call $168 with $692 $194 ($110 is responsible)
  $694 = call $168 with $693 $691 ($111 is responsible)
  $695 = call $168 with $694 $195 ($112 is responsible)
  $696 = call $252 with $673 $695 $672 ($113 is responsible)
}
# Core:function:is2
$697 = { $698 (+ responsible $699) ->
  $700 = call $170 with $698 ($70 is responsible)
  $701 = call $151 with $700 $173 ($1 is responsible)
  # Core:function:is2:11
  $702 = { (responsible $703) ->
    $704 = call $170 with $698 ($68 is responsible)
    $705 = call $151 with $704 $173 ($69 is responsible)
    $706 = call $252 with $705 $220 $131 ($7 is responsible)
    $707 = call $152 with $698 ($6 is responsible)
    $708 = call $151 with $707 $189 ($1 is responsible)
  }
  $709 = call $391 with $701 $702 $280 ($132 is responsible)
}
# Core:int:compareTo
$710 = { $711 $712 (+ responsible $713) ->
  $714 = call $170 with $711 ($70 is responsible)
  $715 = call $151 with $714 $175 ($1 is responsible)
  $716 = call $252 with $715 $232 $713 ($137 is responsible)
  $717 = call $170 with $712 ($70 is responsible)
  $718 = call $151 with $717 $175 ($1 is responsible)
  $719 = call $252 with $718 $233 $713 ($138 is responsible)
  $720 = call $170 with $711 ($68 is responsible)
  $721 = call $151 with $720 $175 ($69 is responsible)
  $722 = call $252 with $721 $210 $136 ($24 is responsible)
  $723 = call $170 with $712 ($68 is responsible)
  $724 = call $151 with $723 $175 ($69 is responsible)
  $725 = call $252 with $724 $212 $136 ($22 is responsible)
  $726 = call $156 with $711 $712 ($23 is responsible)
}
# Core:int:isLessThan
$727 = { $728 $729 (+ responsible $730) ->
  $731 = call $170 with $728 ($70 is responsible)
  $732 = call $151 with $731 $175 ($1 is responsible)
  $733 = call $252 with $732 $232 $730 ($143 is responsible)
  $734 = call $170 with $729 ($70 is responsible)
  $735 = call $151 with $734 $175 ($1 is responsible)
  $736 = call $252 with $735 $233 $730 ($144 is responsible)
  $737 = call $710 with $728 $729 ($142 is responsible)
  $738 = call $151 with $737 $176 ($1 is responsible)
}
# Core:int:isGreaterThan
$739 = { $740 $741 (+ responsible $742) ->
  $743 = call $170 with $740 ($70 is responsible)
  $744 = call $151 with $743 $175 ($1 is responsible)
  $745 = call $252 with $744 $232 $742 ($140 is responsible)
  $746 = call $170 with $741 ($70 is responsible)
  $747 = call $151 with $746 $175 ($1 is responsible)
  $748 = call $252 with $747 $233 $742 ($141 is responsible)
  $749 = call $710 with $740 $741 ($139 is responsible)
  $750 = call $151 with $749 $174 ($1 is responsible)
}
# Core:int:isNonNegative
$751 = { $752 (+ responsible $753) ->
  $754 = call $170 with $752 ($70 is responsible)
  $755 = call $151 with $754 $175 ($1 is responsible)
  $756 = call $252 with $755 $234 $753 ($148 is responsible)
  $757 = call $170 with $752 ($70 is responsible)
  $758 = call $151 with $757 $175 ($1 is responsible)
  $759 = call $252 with $758 $234 $149 ($145 is responsible)
  $760 = call $727 with $752 $187 ($146 is responsible)
  $761 = call $547 with $760 ($147 is responsible)
}
$762 = ($180, $204)
# Core:fixedDecimal:fromIntScaled
$763 = { $764 $765 (+ responsible $766) ->
  $767 = call $170 with $764 ($70 is responsible)
  $768 = call $151 with $767 $175 ($1 is responsible)
  $769 = call $252 with $768 $229 $766 ($125 is responsible)
  $770 = call $170 with $765 ($70 is responsible)
  $771 = call $151 with $770 $175 ($1 is responsible)
  # Core:fixedDecimal:isScale:18
  $772 = { (responsible $773) ->
    $774 = call $751 with $765 ($127 is responsible)
  }
  $775 = call $581 with $771 $772 ($128 is responsible)
  $776 = call $252 with $775 $236 $766 ($126 is responsible)
  $777 = [$182: $765, $179: $764]
  $778 = FixedDecimal $777
}
$779 = call $763 with $187 $187 ($124 is responsible)
$780 = Core:function:is1:11:3
$781 = Core:function:is1:13
# Core:function:is1
$782 = { $783 (+ responsible $784) ->
  $785 = call $170 with $783 ($70 is responsible)
  $786 = call $151 with $785 $173 ($1 is responsible)
  # Core:function:is1:11
  $787 = { (responsible $788) ->
    $789 = call $170 with $783 ($68 is responsible)
    $790 = call $151 with $789 $173 ($69 is responsible)
    $791 = call $252 with $790 $220 $780 ($7 is responsible)
    $792 = call $152 with $783 ($6 is responsible)
    $793 = call $151 with $792 $188 ($1 is responsible)
  }
  $794 = call $391 with $786 $787 $280 ($781 is responsible)
}
$795 = Core:int:fitsInRustU32:15
$796 = Core:int:fitsInRustU32:4
$797 = Core:int:fitsInRustU32:7
$798 = Core:int:fitsInRustU32:9
$799 = Core:int:isOdd:4
$800 = Core:int:isOdd:8
$801 = Core:int:isPositive:4
$802 = Core:int:isPositive:8
$803 = 4294967295
$804 = "`isNonNegative value` was not satisfied"
# Core:int:isOdd
$805 = { $806 (+ responsible $807) ->
  $808 = call $170 with $806 ($70 is responsible)
  $809 = call $151 with $808 $175 ($1 is responsible)
  $810 = call $252 with $809 $234 $807 ($799 is responsible)
  $811 = call $170 with $806 ($68 is responsible)
  $812 = call $151 with $811 $175 ($69 is responsible)
  $813 = call $252 with $812 $210 $800 ($21 is responsible)
  $814 = call $155 with $806 $188 ($20 is responsible)
  $815 = call $151 with $814 $188 ($1 is responsible)
}
$816 = Core:iterator:109
$817 = Core:iterator:all:11
$818 = Core:iterator:all:15
$819 = Core:iterator:all:18:13
$820 = Core:iterator:all:18:15
$821 = Core:iterator:all:18:2
$822 = Core:iterator:all:18:26
$823 = Core:iterator:all:19
$824 = Core:iterator:all:9
$825 = Core:iterator:any:11
$826 = Core:iterator:any:15
$827 = Core:iterator:any:18:13
$828 = Core:iterator:any:18:15
$829 = Core:iterator:any:18:2
$830 = Core:iterator:any:18:26
$831 = Core:iterator:any:19
$832 = Core:iterator:any:9
$833 = Core:iterator:chunked:11
$834 = Core:iterator:chunked:21
$835 = Core:iterator:chunked:23
$836 = Core:iterator:chunked:27
$837 = Core:iterator:chunked:32
$838 = Core:iterator:ensure:11
$839 = Core:iterator:ensure:15
$840 = Core:iterator:ensure:19:2
$841 = Core:iterator:ensure:20
$842 = Core:iterator:ensure:9
$843 = Core:iterator:foldLeft:14
$844 = Core:iterator:foldLeft:16
$845 = Core:iterator:foldLeft:23:1
$846 = Core:iterator:foldLeft:23:4
$847 = Core:iterator:foldLeft:23:5
$848 = Core:iterator:foldLeft:23:5:10
$849 = Core:iterator:foldLeft:23:5:8
$850 = Core:iterator:foldLeft:23:5:item
$851 = Core:iterator:foldLeft:23:5:rest
$852 = Core:iterator:foldLeft:23:iterator
$853 = Core:iterator:foldLeft:23:value
$854 = Core:iterator:foldLeft:24
$855 = Core:iterator:foldLeft:3
$856 = Core:iterator:fromList:11
$857 = Core:iterator:fromList:22
$858 = Core:iterator:fromList:23:10
$859 = Core:iterator:fromList:24
$860 = Core:iterator:generate:11
$861 = Core:iterator:generate:21
$862 = Core:iterator:generate:23
$863 = Core:iterator:generate:33
$864 = Core:iterator:generate:35
$865 = Core:iterator:generate:45
$866 = Core:iterator:generate:47
$867 = Core:iterator:generate:50:6:16
$868 = Core:iterator:generate:50:6:4
$869 = Core:iterator:generate:50:7
$870 = Core:iterator:generate:51
$871 = Core:iterator:generateWithState:11
$872 = Core:iterator:generateWithState:14:1:2
$873 = Core:iterator:generateWithState:14:1:3
$874 = Core:iterator:generateWithState:14:1:3:19
$875 = Core:iterator:generateWithState:14:1:3:20
$876 = Core:iterator:generateWithState:14:1:3:22:0
$877 = Core:iterator:generateWithState:14:1:3:23
$878 = Core:iterator:generateWithState:14:1:3:25
$879 = Core:iterator:generateWithState:14:1:3:26
$880 = Core:iterator:generateWithState:14:1:3:27
$881 = Core:iterator:generateWithState:14:1:3:6
$882 = Core:iterator:generateWithState:14:1:3:item
$883 = Core:iterator:generateWithState:14:1:3:state
$884 = Core:iterator:generateWithState:15
$885 = Core:iterator:generateWithState:9
$886 = Core:iterator:isEmpty:3
$887 = Core:iterator:isEmpty:7
$888 = Core:iterator:joinToText:12:11
$889 = Core:iterator:joinToText:12:22
$890 = Core:iterator:joinToText:13
$891 = Core:iterator:joinToText:3
$892 = Core:iterator:length:3
$893 = Core:iterator:length:6
$894 = Core:iterator:length:8
$895 = Core:iterator:map:14
$896 = Core:iterator:map:16
$897 = Core:iterator:map:19:2
$898 = Core:iterator:map:19:3
$899 = Core:iterator:map:19:3:5
$900 = Core:iterator:map:19:3:item
$901 = Core:iterator:map:19:3:rest
$902 = Core:iterator:map:20
$903 = Core:iterator:map:3
$904 = Core:iterator:next:17
$905 = Core:iterator:next:3
$906 = Core:iterator:next:6
$907 = Core:iterator:next:nextFunction
$908 = Core:iterator:reduceLeft:11
$909 = Core:iterator:reduceLeft:15
$910 = Core:iterator:reduceLeft:17
$911 = Core:iterator:reduceLeft:18
$912 = Core:iterator:reduceLeft:18:14
$913 = Core:iterator:reduceLeft:18:item
$914 = Core:iterator:reduceLeft:18:rest
$915 = Core:iterator:reduceLeft:9
$916 = Core:iterator:skip:16
$917 = Core:iterator:skip:26
$918 = Core:iterator:skip:28
$919 = Core:iterator:skip:3
$920 = Core:iterator:skip:30:6:1
$921 = Core:iterator:skip:30:6:7:2
$922 = Core:iterator:skip:30:6:8:2
$923 = Core:iterator:skip:30:6:8:3
$924 = Core:iterator:skip:30:6:8:3:15
$925 = Core:iterator:skip:30:6:8:3:17
$926 = Core:iterator:skip:30:6:8:3:rest
$927 = Core:iterator:skip:30:6:9
$928 = Core:iterator:skip:30:6:iterator
$929 = Core:iterator:skip:30:6:n
$930 = Core:iterator:skip:30:7
$931 = Core:iterator:sum:19
$932 = Core:iterator:sum:3
$933 = Core:iterator:sum:5:17
$934 = Core:iterator:sum:6
$935 = Core:iterator:sum:8:10
$936 = Core:iterator:sum:9
$937 = Core:iterator:take:11
$938 = Core:iterator:take:21
$939 = Core:iterator:take:23
$940 = Core:iterator:take:27
$941 = Core:iterator:take:29
$942 = Core:iterator:take:31:1
$943 = Core:iterator:take:31:12
$944 = Core:iterator:take:31:index
$945 = Core:iterator:take:31:item
$946 = Core:iterator:take:32
$947 = Core:iterator:take:34:7
$948 = Core:iterator:take:35
$949 = Core:iterator:takeWhile:3
$950 = Core:iterator:takeWhile:7:2
$951 = Core:iterator:takeWhile:7:3
$952 = Core:iterator:takeWhile:7:3:4
$953 = Core:iterator:takeWhile:7:3:7
$954 = Core:iterator:takeWhile:7:3:item
$955 = Core:iterator:takeWhile:7:3:rest
$956 = Core:iterator:takeWhile:8
$957 = Core:iterator:toList:3
$958 = Core:iterator:toList:6:10
$959 = Core:iterator:toList:7
$960 = Core:iterator:where:14
$961 = Core:iterator:where:16
$962 = Core:iterator:where:19:2:2
$963 = Core:iterator:where:19:2:3
$964 = Core:iterator:where:19:2:3:4
$965 = Core:iterator:where:19:2:3:6:2
$966 = Core:iterator:where:19:2:3:6:4
$967 = Core:iterator:where:19:2:3:6:5
$968 = Core:iterator:where:19:2:3:6:5:item
$969 = Core:iterator:where:19:2:3:6:5:rest
$970 = Core:iterator:where:19:2:3:7
$971 = Core:iterator:where:19:2:3:item
$972 = Core:iterator:where:19:2:3:rest
$973 = Core:iterator:where:19:3
$974 = Core:iterator:where:20
$975 = Core:iterator:where:3
$976 = Core:iterator:windowed:16
$977 = Core:iterator:windowed:26
$978 = Core:iterator:windowed:28
$979 = Core:iterator:windowed:3
$980 = Core:iterator:windowed:40
$981 = Core:iterator:windowed:50
$982 = Core:iterator:windowed:52
$983 = Core:iterator:windowed:62
$984 = Core:iterator:windowed:64
$985 = Core:iterator:windowed:67:16
$986 = Core:iterator:windowed:67:22
$987 = Core:iterator:windowed:67:26:7
$988 = Core:iterator:windowed:67:28
$989 = Core:iterator:windowed:67:3
$990 = Core:iterator:windowed:67:5
$991 = Core:iterator:windowed:68
$992 = Core:iterator:withIndex:11:1
$993 = Core:iterator:withIndex:11:4
$994 = Core:iterator:withIndex:11:5
$995 = Core:iterator:withIndex:11:5:22
$996 = Core:iterator:withIndex:11:5:item
$997 = Core:iterator:withIndex:11:5:rest
$998 = Core:iterator:withIndex:11:index
$999 = Core:iterator:withIndex:11:iterator
$1000 = Core:iterator:withIndex:12
$1001 = Core:iterator:withIndex:3
$1002 = Core:iterator:wrapSafe:11
$1003 = Core:iterator:wrapSafe:12:9
$1004 = Core:iterator:wrapSafe:16:1
$1005 = Core:iterator:wrapSafe:16:13
$1006 = Core:iterator:wrapSafe:16:1:10
$1007 = Core:iterator:wrapSafe:16:1:function
$1008 = Core:iterator:wrapSafe:16:22
$1009 = Core:iterator:wrapSafe:16:24
$1010 = Core:iterator:wrapSafe:16:26:10
$1011 = Core:iterator:wrapSafe:16:26:10:19
$1012 = Core:iterator:wrapSafe:16:26:10:7
$1013 = Core:iterator:wrapSafe:16:26:10:item
$1014 = Core:iterator:wrapSafe:16:26:10:rest
$1015 = Core:iterator:wrapSafe:16:26:9
$1016 = Core:iterator:wrapSafe:17
$1017 = Core:iterator:wrapSafe:9
$1018 = Core:list:append:11
$1019 = Core:list:append:4
$1020 = Core:list:append:9
$1021 = Core:result:is:1
$1022 = Core:result:is:1:_
$1023 = Core:result:mapOrElse:14
$1024 = Core:result:mapOrElse:16
$1025 = Core:result:mapOrElse:2
$1026 = Core:result:mapOrElse:26
$1027 = Core:result:mapOrElse:28
$1028 = Core:result:mapOrElse:30
$1029 = Core:result:mapOrElse:30:2
$1030 = Core:result:mapOrElse:30:5
$1031 = Core:result:mapOrElse:30:value
$1032 = Core:result:mapOrElse:30:value#1
$1033 = Core:result:mapOrElse:4
$1034 = Core:result:unwrapOr:2
$1035 = Core:result:unwrapOr:4
$1036 = Core:result:unwrapOr:8
$1037 = Core:result:unwrapOrElse:14
$1038 = Core:result:unwrapOrElse:16
$1039 = Core:result:unwrapOrElse:2
$1040 = Core:result:unwrapOrElse:20:9
$1041 = Core:result:unwrapOrElse:21
$1042 = Core:result:unwrapOrElse:4
$1043 = Empty
$1044 = Error
$1045 = Index
$1046 = Item
$1047 = Iterator
$1048 = More
$1049 = N
$1050 = Ok
$1051 = Rest
$1052 = State
$1053 = Value
$1054 = ""
$1055 = "Can't `reduceLeft` an empty iterator"
$1056 = "Expected Error, got "
$1057 = "Expected Iterator, got "
$1058 = "Expected More, got "
$1059 = "Expected Ok, got "
$1060 = "Expected `Empty`, got `"
$1061 = "Iterator items need to be ints."
$1062 = "Struct doesn't contain key `Index`: `"
$1063 = "Struct doesn't contain key `Item`: `"
$1064 = "Struct doesn't contain key `Iterator`: `"
$1065 = "Struct doesn't contain key `N`: `"
$1066 = "Struct doesn't contain key `Rest`: `"
$1067 = "Struct doesn't contain key `State`: `"
$1068 = "Struct doesn't contain key `Value`: `"
$1069 = "The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `"
$1070 = "The guard needs to panic."
$1071 = "`"
$1072 = "`all` needs an iterator."
$1073 = "`any` needs an iterator."
$1074 = "`bool.is allowPartialWindows` was not satisfied"
$1075 = "`bool.is itemResult` was not satisfied"
$1076 = "`chunked` needs an iterator."
$1077 = "`ensure` needs an iterator."
$1078 = "`foldLeft` needs an iterator."
$1079 = "`function.is0 defaultGetter` was not satisfied"
$1080 = "`function.is0 notIteratorGuard` was not satisfied"
$1081 = "`function.is1 errorMapper` was not satisfied"
$1082 = "`function.is1 guard` was not satisfied"
$1083 = "`function.is1 mapper` was not satisfied"
$1084 = "`function.is1 okMapper` was not satisfied"
$1085 = "`function.is1 tester` was not satisfied"
$1086 = "`function.is1 valueGetter` was not satisfied"
$1087 = "`function.is2 combine` was not satisfied"
$1088 = "`int.fitsInRustU32 length` was not satisfied"
$1089 = "`int.is length` was not satisfied"
$1090 = "`int.is n` was not satisfied"
$1091 = "`int.is size` was not satisfied"
$1092 = "`int.is step` was not satisfied"
$1093 = "`int.isNonNegative length` was not satisfied"
$1094 = "`int.isNonNegative n` was not satisfied"
$1095 = "`int.isPositive size` was not satisfied"
$1096 = "`int.isPositive step` was not satisfied"
$1097 = "`is list` was not satisfied"
$1098 = "`is result` was not satisfied"
$1099 = "`isEmpty` needs an iterator."
$1100 = "`joinToText` needs an iterator."
$1101 = "`length` needs an iterator."
$1102 = "`list.is l` was not satisfied"
$1103 = "`map` needs an iterator."
$1104 = "`next` needs an iterator."
$1105 = "`reduceLeft` needs an iterator."
$1106 = "`skip` needs an iterator."
$1107 = "`sum` needs an iterator."
$1108 = "`takeWhile` needs an iterator."
$1109 = "`take` needs an iterator."
$1110 = "`text.is item` was not satisfied"
$1111 = "`toList` needs an iterator."
$1112 = "`where` needs an iterator."
$1113 = "`windowed` needs an iterator."
$1114 = "`withIndex` needs an iterator."
# Core:result:is
$1115 = { $1116 (+ responsible $1117) ->
  $1118 = call $170 with $1116 ($1021 is responsible)
  $1119 = call $151 with $184 $1118 ($1021 is responsible)
  # Core:result:is:1:equals:then
  $1120 = { (responsible $1121) ->
    $1122 = call $167 with $1116 ($1021 is responsible)
    $1123 = call $151 with $1050 $1122 ($1021 is responsible)
    # Core:result:is:1:equals:then
    $1124 = { (responsible $1125) ->
      $1126 = call $166 with $1116 ($1021 is responsible)
      $1127 = call $151 with $186 $1126 ($1021 is responsible)
      # Core:result:is:1:equals:then
      $1128 = { (responsible $1129) ->
        $1130 = call $165 with $1116 ($1021 is responsible)
        $1131 = ($178, $1130)
      }
      # Core:result:is:1:equals:else
      $1132 = { (responsible $1133) ->
        $1134 = call $169 with $1126 ($1021 is responsible)
        $1135 = $762
      }
      $1136 = call $153 with $1127 $1128 $1132 ($1021 is responsible)
    }
    # Core:result:is:1:equals:else
    $1137 = { (responsible $1138) ->
      $1139 = call $169 with $1122 ($1021 is responsible)
      $1140 = call $168 with $1059 $1139 ($1021 is responsible)
      $1141 = call $168 with $1140 $195 ($1021 is responsible)
      $1142 = ($180, $1141)
    }
    $1143 = call $153 with $1123 $1124 $1137 ($1021 is responsible)
  }
  # Core:result:is:1:equals:else
  $1144 = { (responsible $1145) ->
    $1146 = call $169 with $1118 ($1021 is responsible)
    $1147 = call $168 with $203 $1146 ($1021 is responsible)
    $1148 = call $168 with $1147 $209 ($1021 is responsible)
    $1149 = ($180, $1148)
  }
  $1150 = call $153 with $1119 $1120 $1144 ($1021 is responsible)
  $1151 = call $160 with $1150 $187 ($1021 is responsible)
  $1152 = call $151 with $1151 $178 ($1021 is responsible)
  # Core:result:is:1:isMatch:then
  $1153 = { (responsible $1154) ->
    $1155 = $1150
  }
  # Core:result:is:1:isMatch:else
  $1156 = { (responsible $1157) ->
    $1158 = call $170 with $1116 ($1021 is responsible)
    $1159 = call $151 with $184 $1158 ($1021 is responsible)
    # Core:result:is:1:equals:then
    $1160 = { (responsible $1161) ->
      $1162 = call $167 with $1116 ($1021 is responsible)
      $1163 = call $151 with $1044 $1162 ($1021 is responsible)
      # Core:result:is:1:equals:then
      $1164 = { (responsible $1165) ->
        $1166 = call $166 with $1116 ($1021 is responsible)
        $1167 = call $151 with $186 $1166 ($1021 is responsible)
        # Core:result:is:1:equals:then
        $1168 = { (responsible $1169) ->
          $1170 = call $165 with $1116 ($1021 is responsible)
          $1171 = ($178, $1170)
        }
        # Core:result:is:1:equals:else
        $1172 = { (responsible $1173) ->
          $1174 = call $169 with $1166 ($1021 is responsible)
          $1175 = $762
        }
        $1176 = call $153 with $1167 $1168 $1172 ($1021 is responsible)
      }
      # Core:result:is:1:equals:else
      $1177 = { (responsible $1178) ->
        $1179 = call $169 with $1162 ($1021 is responsible)
        $1180 = call $168 with $1056 $1179 ($1021 is responsible)
        $1181 = call $168 with $1180 $195 ($1021 is responsible)
        $1182 = ($180, $1181)
      }
      $1183 = call $153 with $1163 $1164 $1177 ($1021 is responsible)
    }
    # Core:result:is:1:equals:else
    $1184 = { (responsible $1185) ->
      $1186 = call $169 with $1158 ($1021 is responsible)
      $1187 = call $168 with $203 $1186 ($1021 is responsible)
      $1188 = call $168 with $1187 $209 ($1021 is responsible)
      $1189 = ($180, $1188)
    }
    $1190 = call $153 with $1159 $1160 $1184 ($1021 is responsible)
  }
  $1191 = call $153 with $1152 $1153 $1156 ($1021 is responsible)
  $1192 = call $160 with $1191 $187 ($1021 is responsible)
  $1193 = call $151 with $1192 $178 ($1021 is responsible)
  # Core:result:is:1:case-0:matched
  $1194 = { (responsible $1195) ->
    $1196 = call $160 with $1191 $188 ($1022 is responsible)
    $1197 = $186
  }
  # Core:result:is:1:case-0:didNotMatch
  $1198 = { (responsible $1199) ->
    $1200 = call $160 with $1191 $188 ($1021 is responsible)
    $1201 = $172
  }
  $1202 = call $153 with $1193 $1194 $1198 ($1021 is responsible)
}
# Core:result:mapOrElse
$1203 = { $1204 $1205 $1206 (+ responsible $1207) ->
  $1208 = call $1115 with $1204 ($1025 is responsible)
  $1209 = call $252 with $1208 $1098 $1207 ($1033 is responsible)
  $1210 = call $782 with $1205 ($1023 is responsible)
  $1211 = call $252 with $1210 $1084 $1207 ($1024 is responsible)
  $1212 = call $782 with $1206 ($1026 is responsible)
  $1213 = call $252 with $1212 $1081 $1207 ($1027 is responsible)
  $1214 = call $170 with $1204 ($1028 is responsible)
  $1215 = call $151 with $184 $1214 ($1028 is responsible)
  # Core:result:mapOrElse:30:equals:then
  $1216 = { (responsible $1217) ->
    $1218 = call $167 with $1204 ($1028 is responsible)
    $1219 = call $151 with $1050 $1218 ($1028 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1220 = { (responsible $1221) ->
      $1222 = call $166 with $1204 ($1028 is responsible)
      $1223 = call $151 with $186 $1222 ($1028 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1224 = { (responsible $1225) ->
        $1226 = call $165 with $1204 ($1028 is responsible)
        $1227 = ($178, $1226)
      }
      # Core:result:mapOrElse:30:equals:else
      $1228 = { (responsible $1229) ->
        $1230 = call $169 with $1222 ($1028 is responsible)
        $1231 = $762
      }
      $1232 = call $153 with $1223 $1224 $1228 ($1028 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1233 = { (responsible $1234) ->
      $1235 = call $169 with $1218 ($1028 is responsible)
      $1236 = call $168 with $1059 $1235 ($1028 is responsible)
      $1237 = call $168 with $1236 $195 ($1028 is responsible)
      $1238 = ($180, $1237)
    }
    $1239 = call $153 with $1219 $1220 $1233 ($1028 is responsible)
  }
  # Core:result:mapOrElse:30:equals:else
  $1240 = { (responsible $1241) ->
    $1242 = call $169 with $1214 ($1028 is responsible)
    $1243 = call $168 with $203 $1242 ($1028 is responsible)
    $1244 = call $168 with $1243 $209 ($1028 is responsible)
    $1245 = ($180, $1244)
  }
  $1246 = call $153 with $1215 $1216 $1240 ($1028 is responsible)
  $1247 = call $160 with $1246 $187 ($1028 is responsible)
  $1248 = call $151 with $1247 $178 ($1028 is responsible)
  # Core:result:mapOrElse:30:case-0:matched
  $1249 = { (responsible $1250) ->
    $1251 = call $160 with $1246 $188 ($1031 is responsible)
    $1252 = call $1205 with $1251 ($1029 is responsible)
  }
  # Core:result:mapOrElse:30:case-0:didNotMatch
  $1253 = { (responsible $1254) ->
    $1255 = call $160 with $1246 $188 ($1028 is responsible)
    $1256 = call $170 with $1204 ($1028 is responsible)
    $1257 = call $151 with $184 $1256 ($1028 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1258 = { (responsible $1259) ->
      $1260 = call $167 with $1204 ($1028 is responsible)
      $1261 = call $151 with $1044 $1260 ($1028 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1262 = { (responsible $1263) ->
        $1264 = call $166 with $1204 ($1028 is responsible)
        $1265 = call $151 with $186 $1264 ($1028 is responsible)
        # Core:result:mapOrElse:30:equals:then
        $1266 = { (responsible $1267) ->
          $1268 = call $165 with $1204 ($1028 is responsible)
          $1269 = ($178, $1268)
        }
        # Core:result:mapOrElse:30:equals:else
        $1270 = { (responsible $1271) ->
          $1272 = call $169 with $1264 ($1028 is responsible)
          $1273 = $762
        }
        $1274 = call $153 with $1265 $1266 $1270 ($1028 is responsible)
      }
      # Core:result:mapOrElse:30:equals:else
      $1275 = { (responsible $1276) ->
        $1277 = call $169 with $1260 ($1028 is responsible)
        $1278 = call $168 with $1056 $1277 ($1028 is responsible)
        $1279 = call $168 with $1278 $195 ($1028 is responsible)
        $1280 = ($180, $1279)
      }
      $1281 = call $153 with $1261 $1262 $1275 ($1028 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1282 = { (responsible $1283) ->
      $1284 = call $169 with $1256 ($1028 is responsible)
      $1285 = call $168 with $203 $1284 ($1028 is responsible)
      $1286 = call $168 with $1285 $209 ($1028 is responsible)
      $1287 = ($180, $1286)
    }
    $1288 = call $153 with $1257 $1258 $1282 ($1028 is responsible)
    $1289 = call $160 with $1288 $187 ($1028 is responsible)
    $1290 = call $151 with $1289 $178 ($1028 is responsible)
    # Core:result:mapOrElse:30:case-1:matched
    $1291 = { (responsible $1292) ->
      $1293 = call $160 with $1288 $188 ($1032 is responsible)
      $1294 = call $1206 with $1293 ($1030 is responsible)
    }
    # Core:result:mapOrElse:30:case-1:didNotMatch
    $1295 = { (responsible $1296) ->
      $1297 = call $160 with $1288 $188 ($1028 is responsible)
      $1298 = panicking because $205 ($1028 is at fault)
    }
    $1299 = call $153 with $1290 $1291 $1295 ($1028 is responsible)
  }
  $1300 = call $153 with $1248 $1249 $1253 ($1028 is responsible)
}
# Core:iterator:range:38, Core:result:unwrapOrElse:19
$1301 = { $1302 (+ responsible $1303) ->
  $1304 = $1302
}
# Core:result:unwrapOr
$1305 = { $1306 $1307 (+ responsible $1308) ->
  $1309 = call $1115 with $1306 ($1034 is responsible)
  $1310 = call $252 with $1309 $1098 $1308 ($1035 is responsible)
  # Core:result:unwrapOr:7
  $1311 = { (responsible $1312) ->
    $1313 = $1307
  }
  $1314 = call $1115 with $1306 ($1039 is responsible)
  $1315 = call $252 with $1314 $1098 $1036 ($1042 is responsible)
  $1316 = call $488 with $1311 ($1037 is responsible)
  $1317 = call $252 with $1316 $1079 $1036 ($1038 is responsible)
  # Core:result:unwrapOrElse:20
  $1318 = { $1319 (+ responsible $1320) ->
    $1321 = call $501 with $1311 ($1040 is responsible)
  }
  $1322 = call $1203 with $1306 $1301 $1318 ($1041 is responsible)
}
# Core:list:append
$1323 = { $1324 $1325 (+ responsible $1326) ->
  $1327 = call $170 with $1324 ($70 is responsible)
  $1328 = call $151 with $1327 $177 ($1 is responsible)
  $1329 = call $252 with $1328 $1097 $1326 ($1019 is responsible)
  $1330 = call $170 with $1324 ($68 is responsible)
  $1331 = call $151 with $1330 $177 ($69 is responsible)
  $1332 = call $252 with $1331 $237 $1020 ($55 is responsible)
  $1333 = call $162 with $1324 ($54 is responsible)
  $1334 = call $467 with $1324 $1333 $1325 ($1018 is responsible)
}
# Core:iterator:generate:50:5, Core:iterator:generateWithState:14:1:3:case-1:matched, Core:iterator:map:19:3:case-0:matched, Core:iterator:skip:30:6:8:3:case-0:matched, Core:iterator:takeWhile:7:3:case-0:matched, Core:iterator:takeWhile:7:3:6, Core:iterator:where:19:2:3:case-0:matched, Core:iterator:where:19:2:3:6:5:case-0:matched, Core:iterator:windowed:67:27, Core:iterator:withIndex:11:5:case-0:matched, Core:iterator:wrapSafe:16:26:10:case-0:matched
$1335 = { (responsible $1336) ->
  $1337 = $1043
}
# Core:iterator:wrapSafe
$1338 = { $1339 $1340 (+ responsible $1341) ->
  $1342 = call $488 with $1340 ($1017 is responsible)
  $1343 = call $252 with $1342 $1080 $1341 ($1002 is responsible)
  # Core:iterator:wrapSafe:12
  $1344 = { (responsible $1345) ->
    $1346 = call $501 with $1340 ($1003 is responsible)
    $1347 = panicking because $1070 ($1341 is at fault)
  }
  # Core:iterator:wrapSafe:16
  $1348 = { $1349 $1350 (+ responsible $1351) ->
    $1352 = call $170 with $1350 ($1004 is responsible)
    $1353 = call $151 with $184 $1352 ($1004 is responsible)
    # Core:iterator:wrapSafe:16:1:equals:then
    $1354 = { (responsible $1355) ->
      $1356 = call $167 with $1350 ($1004 is responsible)
      $1357 = call $151 with $1047 $1356 ($1004 is responsible)
      # Core:iterator:wrapSafe:16:1:equals:then
      $1358 = { (responsible $1359) ->
        $1360 = call $166 with $1350 ($1004 is responsible)
        $1361 = call $151 with $186 $1360 ($1004 is responsible)
        # Core:iterator:wrapSafe:16:1:equals:then
        $1362 = { (responsible $1363) ->
          $1364 = call $165 with $1350 ($1004 is responsible)
          $1365 = ($178, $1364)
        }
        # Core:iterator:wrapSafe:16:1:equals:else
        $1366 = { (responsible $1367) ->
          $1368 = call $169 with $1360 ($1004 is responsible)
          $1369 = $762
        }
        $1370 = call $153 with $1361 $1362 $1366 ($1004 is responsible)
      }
      # Core:iterator:wrapSafe:16:1:equals:else
      $1371 = { (responsible $1372) ->
        $1373 = call $169 with $1356 ($1004 is responsible)
        $1374 = call $168 with $1057 $1373 ($1004 is responsible)
        $1375 = call $168 with $1374 $195 ($1004 is responsible)
        $1376 = ($180, $1375)
      }
      $1377 = call $153 with $1357 $1358 $1371 ($1004 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:equals:else
    $1378 = { (responsible $1379) ->
      $1380 = call $169 with $1352 ($1004 is responsible)
      $1381 = call $168 with $203 $1380 ($1004 is responsible)
      $1382 = call $168 with $1381 $209 ($1004 is responsible)
      $1383 = ($180, $1382)
    }
    $1384 = call $153 with $1353 $1354 $1378 ($1004 is responsible)
    $1385 = call $160 with $1384 $187 ($1004 is responsible)
    $1386 = call $151 with $1385 $178 ($1004 is responsible)
    # Core:iterator:wrapSafe:16:1:case-0:matched
    $1387 = { (responsible $1388) ->
      $1389 = call $160 with $1384 $188 ($1007 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:case-0:didNotMatch
    $1390 = { (responsible $1391) ->
      $1392 = call $160 with $1384 $188 ($1004 is responsible)
      $1393 = call $501 with $1344 ($1006 is responsible)
    }
    $1394 = call $153 with $1386 $1387 $1390 ($1004 is responsible)
    $1395 = call $488 with $1394 ($1005 is responsible)
    $1396 = call $547 with $1395 ($1008 is responsible)
    $1397 = call $513 with $1396 ($118 is responsible)
    $1398 = call $252 with $1397 $215 $1009 ($114 is responsible)
    $1399 = call $488 with $1344 ($115 is responsible)
    $1400 = call $252 with $1399 $223 $1009 ($116 is responsible)
    $1401 = call $391 with $1396 $1344 $249 ($117 is responsible)
    # Core:iterator:wrapSafe:16:26
    $1402 = { (responsible $1403) ->
      $1404 = call $501 with $1394 ($1015 is responsible)
      $1405 = call $151 with $1043 $1404 ($1010 is responsible)
      # Core:iterator:wrapSafe:16:26:10:equals:else
      $1406 = { (responsible $1407) ->
        $1408 = call $169 with $1404 ($1010 is responsible)
        $1409 = call $168 with $1060 $1408 ($1010 is responsible)
        $1410 = call $168 with $1409 $209 ($1010 is responsible)
        $1411 = ($180, $1410)
      }
      $1412 = call $153 with $1405 $277 $1406 ($1010 is responsible)
      $1413 = call $160 with $1412 $187 ($1010 is responsible)
      $1414 = call $151 with $1413 $178 ($1010 is responsible)
      # Core:iterator:wrapSafe:16:26:10:case-0:didNotMatch
      $1415 = { (responsible $1416) ->
        $1417 = call $160 with $1412 $188 ($1010 is responsible)
        $1418 = call $170 with $1404 ($1010 is responsible)
        $1419 = call $151 with $184 $1418 ($1010 is responsible)
        # Core:iterator:wrapSafe:16:26:10:equals:then
        $1420 = { (responsible $1421) ->
          $1422 = call $167 with $1404 ($1010 is responsible)
          $1423 = call $151 with $1048 $1422 ($1010 is responsible)
          # Core:iterator:wrapSafe:16:26:10:equals:then
          $1424 = { (responsible $1425) ->
            $1426 = call $166 with $1404 ($1010 is responsible)
            $1427 = call $151 with $186 $1426 ($1010 is responsible)
            # Core:iterator:wrapSafe:16:26:10:equals:then
            $1428 = { (responsible $1429) ->
              $1430 = call $165 with $1404 ($1010 is responsible)
              $1431 = call $170 with $1430 ($1010 is responsible)
              $1432 = call $151 with $183 $1431 ($1010 is responsible)
              # Core:iterator:wrapSafe:16:26:10:equals:then
              $1433 = { (responsible $1434) ->
                $1435 = call $164 with $1430 $1046 ($1010 is responsible)
                # Core:iterator:wrapSafe:16:26:10:hasKey:then
                $1436 = { (responsible $1437) ->
                  $1438 = call $163 with $1430 $1046 ($1010 is responsible)
                  $1439 = ($178, $1438)
                }
                # Core:iterator:wrapSafe:16:26:10:hasKey:else
                $1440 = { (responsible $1441) ->
                  $1442 = call $169 with $1430 ($1010 is responsible)
                  $1443 = call $168 with $1063 $1442 ($1010 is responsible)
                  $1444 = call $168 with $1443 $209 ($1010 is responsible)
                  $1445 = ($180, $1444)
                }
                $1446 = call $153 with $1435 $1436 $1440 ($1010 is responsible)
                $1447 = call $160 with $1446 $187 ($1010 is responsible)
                $1448 = call $151 with $1447 $178 ($1010 is responsible)
                # Core:iterator:wrapSafe:16:26:10:isMatch:then
                $1449 = { (responsible $1450) ->
                  $1451 = call $160 with $1446 $188 ($1010 is responsible)
                  $1452 = call $164 with $1430 $1051 ($1010 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:hasKey:then
                  $1453 = { (responsible $1454) ->
                    $1455 = call $163 with $1430 $1051 ($1010 is responsible)
                    $1456 = ($178, $1455)
                  }
                  # Core:iterator:wrapSafe:16:26:10:hasKey:else
                  $1457 = { (responsible $1458) ->
                    $1459 = call $169 with $1430 ($1010 is responsible)
                    $1460 = call $168 with $1066 $1459 ($1010 is responsible)
                    $1461 = call $168 with $1460 $209 ($1010 is responsible)
                    $1462 = ($180, $1461)
                  }
                  $1463 = call $153 with $1452 $1453 $1457 ($1010 is responsible)
                  $1464 = call $160 with $1463 $187 ($1010 is responsible)
                  $1465 = call $151 with $1464 $178 ($1010 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:isMatch:then
                  $1466 = { (responsible $1467) ->
                    $1468 = call $160 with $1463 $188 ($1010 is responsible)
                    $1469 = ($178, $1451, $1468)
                  }
                  # Core:iterator:wrapSafe:16:26:10:isMatch:else
                  $1470 = { (responsible $1471) ->
                    $1472 = $1463
                  }
                  $1473 = call $153 with $1465 $1466 $1470 ($1010 is responsible)
                }
                # Core:iterator:wrapSafe:16:26:10:isMatch:else
                $1474 = { (responsible $1475) ->
                  $1476 = $1446
                }
                $1477 = call $153 with $1448 $1449 $1474 ($1010 is responsible)
              }
              # Core:iterator:wrapSafe:16:26:10:equals:else
              $1478 = { (responsible $1479) ->
                $1480 = call $169 with $1431 ($1010 is responsible)
                $1481 = call $168 with $202 $1480 ($1010 is responsible)
                $1482 = call $168 with $1481 $209 ($1010 is responsible)
                $1483 = ($180, $1482)
              }
              $1484 = call $153 with $1432 $1433 $1478 ($1010 is responsible)
            }
            # Core:iterator:wrapSafe:16:26:10:equals:else
            $1485 = { (responsible $1486) ->
              $1487 = call $169 with $1426 ($1010 is responsible)
              $1488 = $762
            }
            $1489 = call $153 with $1427 $1428 $1485 ($1010 is responsible)
          }
          # Core:iterator:wrapSafe:16:26:10:equals:else
          $1490 = { (responsible $1491) ->
            $1492 = call $169 with $1422 ($1010 is responsible)
            $1493 = call $168 with $1058 $1492 ($1010 is responsible)
            $1494 = call $168 with $1493 $195 ($1010 is responsible)
            $1495 = ($180, $1494)
          }
          $1496 = call $153 with $1423 $1424 $1490 ($1010 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:equals:else
        $1497 = { (responsible $1498) ->
          $1499 = call $169 with $1418 ($1010 is responsible)
          $1500 = call $168 with $203 $1499 ($1010 is responsible)
          $1501 = call $168 with $1500 $209 ($1010 is responsible)
          $1502 = ($180, $1501)
        }
        $1503 = call $153 with $1419 $1420 $1497 ($1010 is responsible)
        $1504 = call $160 with $1503 $187 ($1010 is responsible)
        $1505 = call $151 with $1504 $178 ($1010 is responsible)
        # Core:iterator:wrapSafe:16:26:10:case-1:matched
        $1506 = { (responsible $1507) ->
          $1508 = call $160 with $1503 $188 ($1013 is responsible)
          $1509 = call $160 with $1503 $189 ($1014 is responsible)
          $1510 = call $1349 with $1509 ($1012 is responsible)
          $1511 = [$1051: $1510, $1046: $1508]
          $1512 = More $1511
        }
        # Core:iterator:wrapSafe:16:26:10:case-1:didNotMatch
        $1513 = { (responsible $1514) ->
          $1515 = call $160 with $1503 $188 ($1010 is responsible)
          $1516 = call $501 with $1344 ($1011 is responsible)
        }
        $1517 = call $153 with $1505 $1506 $1513 ($1010 is responsible)
      }
      $1518 = call $153 with $1414 $1335 $1415 ($1010 is responsible)
    }
    $1519 = Iterator $1402
  }
  $1520 = call $697 with $1348 ($123 is responsible)
  $1521 = call $252 with $1520 $206 $1016 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $1522 = { $1523 $1524 (+ responsible $1525) ->
    # Core:controlFlow:recursive:18:0
    $1526 = { $1527 (+ responsible $1528) ->
      $1529 = call $1523 with $1523 $1527 ($120 is responsible)
    }
    $1530 = call $1348 with $1526 $1524 ($121 is responsible)
  }
  $1531 = call $1522 with $1522 $1339 ($122 is responsible)
}
# Core:iterator:next
$1532 = { $1533 (+ responsible $1534) ->
  # Core:iterator:next:2
  $1535 = { (responsible $1536) ->
    $1537 = panicking because $1104 ($1534 is at fault)
  }
  $1538 = call $1338 with $1533 $1535 ($905 is responsible)
  $1539 = call $170 with $1538 ($906 is responsible)
  $1540 = call $151 with $184 $1539 ($906 is responsible)
  # Core:iterator:next:6:equals:then
  $1541 = { (responsible $1542) ->
    $1543 = call $167 with $1538 ($906 is responsible)
    $1544 = call $151 with $1047 $1543 ($906 is responsible)
    # Core:iterator:next:6:equals:then
    $1545 = { (responsible $1546) ->
      $1547 = call $166 with $1538 ($906 is responsible)
      $1548 = call $151 with $186 $1547 ($906 is responsible)
      # Core:iterator:next:6:equals:then
      $1549 = { (responsible $1550) ->
        $1551 = call $165 with $1538 ($906 is responsible)
        $1552 = ($178, $1551)
      }
      # Core:iterator:next:6:equals:else
      $1553 = { (responsible $1554) ->
        $1555 = call $169 with $1547 ($906 is responsible)
        $1556 = $762
      }
      $1557 = call $153 with $1548 $1549 $1553 ($906 is responsible)
    }
    # Core:iterator:next:6:equals:else
    $1558 = { (responsible $1559) ->
      $1560 = call $169 with $1543 ($906 is responsible)
      $1561 = call $168 with $1057 $1560 ($906 is responsible)
      $1562 = call $168 with $1561 $195 ($906 is responsible)
      $1563 = ($180, $1562)
    }
    $1564 = call $153 with $1544 $1545 $1558 ($906 is responsible)
  }
  # Core:iterator:next:6:equals:else
  $1565 = { (responsible $1566) ->
    $1567 = call $169 with $1539 ($906 is responsible)
    $1568 = call $168 with $203 $1567 ($906 is responsible)
    $1569 = call $168 with $1568 $209 ($906 is responsible)
    $1570 = ($180, $1569)
  }
  $1571 = call $153 with $1540 $1541 $1565 ($906 is responsible)
  $1572 = call $160 with $1571 $187 ($906 is responsible)
  $1573 = call $151 with $1572 $178 ($906 is responsible)
  # Core:iterator:next:6:isMatch:else
  $1574 = { (responsible $1575) ->
    $1576 = call $160 with $1571 $188 ($906 is responsible)
    $1577 = panicking because $1576 ($906 is at fault)
  }
  $1578 = call $153 with $1573 $249 $1574 ($906 is responsible)
  $1579 = call $160 with $1571 $188 ($907 is responsible)
  $1580 = call $501 with $1579 ($904 is responsible)
}
# Core:iterator:generateWithState
$1581 = { $1582 $1583 (+ responsible $1584) ->
  $1585 = call $782 with $1583 ($885 is responsible)
  $1586 = call $252 with $1585 $1083 $1584 ($871 is responsible)
  # Core:iterator:generateWithState:14
  $1587 = { $1588 $1589 (+ responsible $1590) ->
    # Core:iterator:generateWithState:14:1
    $1591 = { (responsible $1592) ->
      $1593 = call $1583 with $1589 ($872 is responsible)
      $1594 = call $170 with $1593 ($873 is responsible)
      $1595 = call $151 with $184 $1594 ($873 is responsible)
      # Core:iterator:generateWithState:14:1:3:equals:then
      $1596 = { (responsible $1597) ->
        $1598 = call $167 with $1593 ($873 is responsible)
        $1599 = call $151 with $1048 $1598 ($873 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:then
        $1600 = { (responsible $1601) ->
          $1602 = call $166 with $1593 ($873 is responsible)
          $1603 = call $151 with $186 $1602 ($873 is responsible)
          # Core:iterator:generateWithState:14:1:3:equals:then
          $1604 = { (responsible $1605) ->
            $1606 = call $165 with $1593 ($873 is responsible)
            $1607 = call $170 with $1606 ($873 is responsible)
            $1608 = call $151 with $183 $1607 ($873 is responsible)
            # Core:iterator:generateWithState:14:1:3:equals:then
            $1609 = { (responsible $1610) ->
              $1611 = call $164 with $1606 $1046 ($873 is responsible)
              # Core:iterator:generateWithState:14:1:3:hasKey:then
              $1612 = { (responsible $1613) ->
                $1614 = call $163 with $1606 $1046 ($873 is responsible)
                $1615 = ($178, $1614)
              }
              # Core:iterator:generateWithState:14:1:3:hasKey:else
              $1616 = { (responsible $1617) ->
                $1618 = call $169 with $1606 ($873 is responsible)
                $1619 = call $168 with $1063 $1618 ($873 is responsible)
                $1620 = call $168 with $1619 $209 ($873 is responsible)
                $1621 = ($180, $1620)
              }
              $1622 = call $153 with $1611 $1612 $1616 ($873 is responsible)
              $1623 = call $160 with $1622 $187 ($873 is responsible)
              $1624 = call $151 with $1623 $178 ($873 is responsible)
              # Core:iterator:generateWithState:14:1:3:isMatch:then
              $1625 = { (responsible $1626) ->
                $1627 = call $160 with $1622 $188 ($873 is responsible)
                $1628 = call $164 with $1606 $1052 ($873 is responsible)
                # Core:iterator:generateWithState:14:1:3:hasKey:then
                $1629 = { (responsible $1630) ->
                  $1631 = call $163 with $1606 $1052 ($873 is responsible)
                  $1632 = ($178, $1631)
                }
                # Core:iterator:generateWithState:14:1:3:hasKey:else
                $1633 = { (responsible $1634) ->
                  $1635 = call $169 with $1606 ($873 is responsible)
                  $1636 = call $168 with $1067 $1635 ($873 is responsible)
                  $1637 = call $168 with $1636 $209 ($873 is responsible)
                  $1638 = ($180, $1637)
                }
                $1639 = call $153 with $1628 $1629 $1633 ($873 is responsible)
                $1640 = call $160 with $1639 $187 ($873 is responsible)
                $1641 = call $151 with $1640 $178 ($873 is responsible)
                # Core:iterator:generateWithState:14:1:3:isMatch:then
                $1642 = { (responsible $1643) ->
                  $1644 = call $160 with $1639 $188 ($873 is responsible)
                  $1645 = ($178, $1627, $1644)
                }
                # Core:iterator:generateWithState:14:1:3:isMatch:else
                $1646 = { (responsible $1647) ->
                  $1648 = $1639
                }
                $1649 = call $153 with $1641 $1642 $1646 ($873 is responsible)
              }
              # Core:iterator:generateWithState:14:1:3:isMatch:else
              $1650 = { (responsible $1651) ->
                $1652 = $1622
              }
              $1653 = call $153 with $1624 $1625 $1650 ($873 is responsible)
            }
            # Core:iterator:generateWithState:14:1:3:equals:else
            $1654 = { (responsible $1655) ->
              $1656 = call $169 with $1607 ($873 is responsible)
              $1657 = call $168 with $202 $1656 ($873 is responsible)
              $1658 = call $168 with $1657 $209 ($873 is responsible)
              $1659 = ($180, $1658)
            }
            $1660 = call $153 with $1608 $1609 $1654 ($873 is responsible)
          }
          # Core:iterator:generateWithState:14:1:3:equals:else
          $1661 = { (responsible $1662) ->
            $1663 = call $169 with $1602 ($873 is responsible)
            $1664 = $762
          }
          $1665 = call $153 with $1603 $1604 $1661 ($873 is responsible)
        }
        # Core:iterator:generateWithState:14:1:3:equals:else
        $1666 = { (responsible $1667) ->
          $1668 = call $169 with $1598 ($873 is responsible)
          $1669 = call $168 with $1058 $1668 ($873 is responsible)
          $1670 = call $168 with $1669 $195 ($873 is responsible)
          $1671 = ($180, $1670)
        }
        $1672 = call $153 with $1599 $1600 $1666 ($873 is responsible)
      }
      # Core:iterator:generateWithState:14:1:3:equals:else
      $1673 = { (responsible $1674) ->
        $1675 = call $169 with $1594 ($873 is responsible)
        $1676 = call $168 with $203 $1675 ($873 is responsible)
        $1677 = call $168 with $1676 $209 ($873 is responsible)
        $1678 = ($180, $1677)
      }
      $1679 = call $153 with $1595 $1596 $1673 ($873 is responsible)
      $1680 = call $160 with $1679 $187 ($873 is responsible)
      $1681 = call $151 with $1680 $178 ($873 is responsible)
      # Core:iterator:generateWithState:14:1:3:case-0:matched
      $1682 = { (responsible $1683) ->
        $1684 = call $160 with $1679 $188 ($882 is responsible)
        $1685 = call $160 with $1679 $189 ($883 is responsible)
        $1686 = call $1588 with $1685 ($881 is responsible)
        $1687 = [$1051: $1686, $1046: $1684]
        $1688 = More $1687
      }
      # Core:iterator:generateWithState:14:1:3:case-0:didNotMatch
      $1689 = { (responsible $1690) ->
        $1691 = call $160 with $1679 $188 ($873 is responsible)
        $1692 = call $151 with $1043 $1593 ($873 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:else
        $1693 = { (responsible $1694) ->
          $1695 = call $169 with $1593 ($873 is responsible)
          $1696 = call $168 with $1060 $1695 ($873 is responsible)
          $1697 = call $168 with $1696 $209 ($873 is responsible)
          $1698 = ($180, $1697)
        }
        $1699 = call $153 with $1692 $277 $1693 ($873 is responsible)
        $1700 = call $160 with $1699 $187 ($873 is responsible)
        $1701 = call $151 with $1700 $178 ($873 is responsible)
        # Core:iterator:generateWithState:14:1:3:case-1:didNotMatch
        $1702 = { (responsible $1703) ->
          $1704 = call $160 with $1699 $188 ($873 is responsible)
          # Core:iterator:generateWithState:14:1:3:case-2:matched
          $1705 = { (responsible $1706) ->
            $1707 = call $170 with $1593 ($874 is responsible)
            $1708 = call $151 with $1707 $185 ($875 is responsible)
            # Core:iterator:generateWithState:14:1:3:21
            $1709 = { (responsible $1710) ->
              $1711 = $1593
            }
            # Core:iterator:generateWithState:14:1:3:22
            $1712 = { (responsible $1713) ->
              $1714 = call $169 with $1593 ($876 is responsible)
            }
            $1715 = call $153 with $1708 $1709 $1712 ($877 is responsible)
            $1716 = call $168 with $1069 $1715 ($878 is responsible)
            $1717 = call $168 with $1716 $1071 ($879 is responsible)
            $1718 = call $252 with $172 $1717 $1584 ($880 is responsible)
          }
          $1719 = call $1705 with no arguments ($873 is responsible)
        }
        $1720 = call $153 with $1701 $1335 $1702 ($873 is responsible)
      }
      $1721 = call $153 with $1681 $1682 $1689 ($873 is responsible)
    }
    $1722 = Iterator $1591
  }
  $1723 = call $697 with $1587 ($123 is responsible)
  $1724 = call $252 with $1723 $206 $884 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $1725 = { $1726 $1727 (+ responsible $1728) ->
    # Core:controlFlow:recursive:18:0
    $1729 = { $1730 (+ responsible $1731) ->
      $1732 = call $1726 with $1726 $1730 ($120 is responsible)
    }
    $1733 = call $1587 with $1729 $1727 ($121 is responsible)
  }
  $1734 = call $1725 with $1725 $1582 ($122 is responsible)
}
# Core:iterator:generate
$1735 = { $1736 $1737 (+ responsible $1738) ->
  $1739 = call $170 with $1736 ($70 is responsible)
  $1740 = call $151 with $1739 $175 ($1 is responsible)
  $1741 = call $252 with $1740 $1089 $1738 ($860 is responsible)
  $1742 = call $751 with $1736 ($861 is responsible)
  $1743 = call $252 with $1742 $1093 $1738 ($862 is responsible)
  $1744 = call $170 with $1736 ($70 is responsible)
  $1745 = call $151 with $1744 $175 ($1 is responsible)
  $1746 = call $252 with $1745 $234 $863 ($796 is responsible)
  $1747 = call $751 with $1736 ($797 is responsible)
  $1748 = call $252 with $1747 $804 $863 ($798 is responsible)
  $1749 = call $727 with $1736 $803 ($795 is responsible)
  $1750 = call $252 with $1749 $1088 $1738 ($864 is responsible)
  $1751 = call $782 with $1737 ($865 is responsible)
  $1752 = call $252 with $1751 $1086 $1738 ($866 is responsible)
  # Core:iterator:generate:50
  $1753 = { $1754 (+ responsible $1755) ->
    $1756 = call $151 with $1754 $1736 ($1 is responsible)
    # Core:iterator:generate:50:6
    $1757 = { (responsible $1758) ->
      $1759 = call $1737 with $1754 ($868 is responsible)
      $1760 = call $170 with $1754 ($68 is responsible)
      $1761 = call $151 with $1760 $175 ($69 is responsible)
      $1762 = call $252 with $1761 $210 $867 ($19 is responsible)
      $1763 = call $154 with $1754 $188 ($18 is responsible)
      $1764 = [$1052: $1763, $1046: $1759]
      $1765 = More $1764
    }
    $1766 = call $391 with $1756 $1335 $1757 ($869 is responsible)
  }
  $1767 = call $1581 with $187 $1753 ($870 is responsible)
}
# Core:iterator:map
$1768 = { $1769 $1770 (+ responsible $1771) ->
  # Core:iterator:map:2
  $1772 = { (responsible $1773) ->
    $1774 = panicking because $1103 ($1771 is at fault)
  }
  $1775 = call $1338 with $1769 $1772 ($903 is responsible)
  $1776 = call $782 with $1770 ($895 is responsible)
  $1777 = call $252 with $1776 $1083 $1771 ($896 is responsible)
  # Core:iterator:map:19
  $1778 = { $1779 (+ responsible $1780) ->
    $1781 = call $1532 with $1779 ($897 is responsible)
    $1782 = call $151 with $1043 $1781 ($898 is responsible)
    # Core:iterator:map:19:3:equals:else
    $1783 = { (responsible $1784) ->
      $1785 = call $169 with $1781 ($898 is responsible)
      $1786 = call $168 with $1060 $1785 ($898 is responsible)
      $1787 = call $168 with $1786 $209 ($898 is responsible)
      $1788 = ($180, $1787)
    }
    $1789 = call $153 with $1782 $277 $1783 ($898 is responsible)
    $1790 = call $160 with $1789 $187 ($898 is responsible)
    $1791 = call $151 with $1790 $178 ($898 is responsible)
    # Core:iterator:map:19:3:case-0:didNotMatch
    $1792 = { (responsible $1793) ->
      $1794 = call $160 with $1789 $188 ($898 is responsible)
      $1795 = call $170 with $1781 ($898 is responsible)
      $1796 = call $151 with $184 $1795 ($898 is responsible)
      # Core:iterator:map:19:3:equals:then
      $1797 = { (responsible $1798) ->
        $1799 = call $167 with $1781 ($898 is responsible)
        $1800 = call $151 with $1048 $1799 ($898 is responsible)
        # Core:iterator:map:19:3:equals:then
        $1801 = { (responsible $1802) ->
          $1803 = call $166 with $1781 ($898 is responsible)
          $1804 = call $151 with $186 $1803 ($898 is responsible)
          # Core:iterator:map:19:3:equals:then
          $1805 = { (responsible $1806) ->
            $1807 = call $165 with $1781 ($898 is responsible)
            $1808 = call $170 with $1807 ($898 is responsible)
            $1809 = call $151 with $183 $1808 ($898 is responsible)
            # Core:iterator:map:19:3:equals:then
            $1810 = { (responsible $1811) ->
              $1812 = call $164 with $1807 $1046 ($898 is responsible)
              # Core:iterator:map:19:3:hasKey:then
              $1813 = { (responsible $1814) ->
                $1815 = call $163 with $1807 $1046 ($898 is responsible)
                $1816 = ($178, $1815)
              }
              # Core:iterator:map:19:3:hasKey:else
              $1817 = { (responsible $1818) ->
                $1819 = call $169 with $1807 ($898 is responsible)
                $1820 = call $168 with $1063 $1819 ($898 is responsible)
                $1821 = call $168 with $1820 $209 ($898 is responsible)
                $1822 = ($180, $1821)
              }
              $1823 = call $153 with $1812 $1813 $1817 ($898 is responsible)
              $1824 = call $160 with $1823 $187 ($898 is responsible)
              $1825 = call $151 with $1824 $178 ($898 is responsible)
              # Core:iterator:map:19:3:isMatch:then
              $1826 = { (responsible $1827) ->
                $1828 = call $160 with $1823 $188 ($898 is responsible)
                $1829 = call $164 with $1807 $1051 ($898 is responsible)
                # Core:iterator:map:19:3:hasKey:then
                $1830 = { (responsible $1831) ->
                  $1832 = call $163 with $1807 $1051 ($898 is responsible)
                  $1833 = ($178, $1832)
                }
                # Core:iterator:map:19:3:hasKey:else
                $1834 = { (responsible $1835) ->
                  $1836 = call $169 with $1807 ($898 is responsible)
                  $1837 = call $168 with $1066 $1836 ($898 is responsible)
                  $1838 = call $168 with $1837 $209 ($898 is responsible)
                  $1839 = ($180, $1838)
                }
                $1840 = call $153 with $1829 $1830 $1834 ($898 is responsible)
                $1841 = call $160 with $1840 $187 ($898 is responsible)
                $1842 = call $151 with $1841 $178 ($898 is responsible)
                # Core:iterator:map:19:3:isMatch:then
                $1843 = { (responsible $1844) ->
                  $1845 = call $160 with $1840 $188 ($898 is responsible)
                  $1846 = ($178, $1828, $1845)
                }
                # Core:iterator:map:19:3:isMatch:else
                $1847 = { (responsible $1848) ->
                  $1849 = $1840
                }
                $1850 = call $153 with $1842 $1843 $1847 ($898 is responsible)
              }
              # Core:iterator:map:19:3:isMatch:else
              $1851 = { (responsible $1852) ->
                $1853 = $1823
              }
              $1854 = call $153 with $1825 $1826 $1851 ($898 is responsible)
            }
            # Core:iterator:map:19:3:equals:else
            $1855 = { (responsible $1856) ->
              $1857 = call $169 with $1808 ($898 is responsible)
              $1858 = call $168 with $202 $1857 ($898 is responsible)
              $1859 = call $168 with $1858 $209 ($898 is responsible)
              $1860 = ($180, $1859)
            }
            $1861 = call $153 with $1809 $1810 $1855 ($898 is responsible)
          }
          # Core:iterator:map:19:3:equals:else
          $1862 = { (responsible $1863) ->
            $1864 = call $169 with $1803 ($898 is responsible)
            $1865 = $762
          }
          $1866 = call $153 with $1804 $1805 $1862 ($898 is responsible)
        }
        # Core:iterator:map:19:3:equals:else
        $1867 = { (responsible $1868) ->
          $1869 = call $169 with $1799 ($898 is responsible)
          $1870 = call $168 with $1058 $1869 ($898 is responsible)
          $1871 = call $168 with $1870 $195 ($898 is responsible)
          $1872 = ($180, $1871)
        }
        $1873 = call $153 with $1800 $1801 $1867 ($898 is responsible)
      }
      # Core:iterator:map:19:3:equals:else
      $1874 = { (responsible $1875) ->
        $1876 = call $169 with $1795 ($898 is responsible)
        $1877 = call $168 with $203 $1876 ($898 is responsible)
        $1878 = call $168 with $1877 $209 ($898 is responsible)
        $1879 = ($180, $1878)
      }
      $1880 = call $153 with $1796 $1797 $1874 ($898 is responsible)
      $1881 = call $160 with $1880 $187 ($898 is responsible)
      $1882 = call $151 with $1881 $178 ($898 is responsible)
      # Core:iterator:map:19:3:case-1:matched
      $1883 = { (responsible $1884) ->
        $1885 = call $160 with $1880 $188 ($900 is responsible)
        $1886 = call $160 with $1880 $189 ($901 is responsible)
        $1887 = call $1770 with $1885 ($899 is responsible)
        $1888 = [$1052: $1886, $1046: $1887]
        $1889 = More $1888
      }
      # Core:iterator:map:19:3:case-1:didNotMatch
      $1890 = { (responsible $1891) ->
        $1892 = call $160 with $1880 $188 ($898 is responsible)
        $1893 = panicking because $205 ($898 is at fault)
      }
      $1894 = call $153 with $1882 $1883 $1890 ($898 is responsible)
    }
    $1895 = call $153 with $1791 $1335 $1792 ($898 is responsible)
  }
  $1896 = call $1581 with $1775 $1778 ($902 is responsible)
}
# Core:iterator:withIndex:11
$1897 = { $1898 (+ responsible $1899) ->
  $1900 = call $170 with $1898 ($992 is responsible)
  $1901 = call $151 with $183 $1900 ($992 is responsible)
  # Core:iterator:withIndex:11:1:equals:then
  $1902 = { (responsible $1903) ->
    $1904 = call $164 with $1898 $1047 ($992 is responsible)
    # Core:iterator:withIndex:11:1:hasKey:then
    $1905 = { (responsible $1906) ->
      $1907 = call $163 with $1898 $1047 ($992 is responsible)
      $1908 = ($178, $1907)
    }
    # Core:iterator:withIndex:11:1:hasKey:else
    $1909 = { (responsible $1910) ->
      $1911 = call $169 with $1898 ($992 is responsible)
      $1912 = call $168 with $1064 $1911 ($992 is responsible)
      $1913 = call $168 with $1912 $209 ($992 is responsible)
      $1914 = ($180, $1913)
    }
    $1915 = call $153 with $1904 $1905 $1909 ($992 is responsible)
    $1916 = call $160 with $1915 $187 ($992 is responsible)
    $1917 = call $151 with $1916 $178 ($992 is responsible)
    # Core:iterator:withIndex:11:1:isMatch:then
    $1918 = { (responsible $1919) ->
      $1920 = call $160 with $1915 $188 ($992 is responsible)
      $1921 = call $164 with $1898 $1045 ($992 is responsible)
      # Core:iterator:withIndex:11:1:hasKey:then
      $1922 = { (responsible $1923) ->
        $1924 = call $163 with $1898 $1045 ($992 is responsible)
        $1925 = ($178, $1924)
      }
      # Core:iterator:withIndex:11:1:hasKey:else
      $1926 = { (responsible $1927) ->
        $1928 = call $169 with $1898 ($992 is responsible)
        $1929 = call $168 with $1062 $1928 ($992 is responsible)
        $1930 = call $168 with $1929 $209 ($992 is responsible)
        $1931 = ($180, $1930)
      }
      $1932 = call $153 with $1921 $1922 $1926 ($992 is responsible)
      $1933 = call $160 with $1932 $187 ($992 is responsible)
      $1934 = call $151 with $1933 $178 ($992 is responsible)
      # Core:iterator:withIndex:11:1:isMatch:then
      $1935 = { (responsible $1936) ->
        $1937 = call $160 with $1932 $188 ($992 is responsible)
        $1938 = ($178, $1920, $1937)
      }
      # Core:iterator:withIndex:11:1:isMatch:else
      $1939 = { (responsible $1940) ->
        $1941 = $1932
      }
      $1942 = call $153 with $1934 $1935 $1939 ($992 is responsible)
    }
    # Core:iterator:withIndex:11:1:isMatch:else
    $1943 = { (responsible $1944) ->
      $1945 = $1915
    }
    $1946 = call $153 with $1917 $1918 $1943 ($992 is responsible)
  }
  # Core:iterator:withIndex:11:1:equals:else
  $1947 = { (responsible $1948) ->
    $1949 = call $169 with $1900 ($992 is responsible)
    $1950 = call $168 with $202 $1949 ($992 is responsible)
    $1951 = call $168 with $1950 $209 ($992 is responsible)
    $1952 = ($180, $1951)
  }
  $1953 = call $153 with $1901 $1902 $1947 ($992 is responsible)
  $1954 = call $160 with $1953 $187 ($992 is responsible)
  $1955 = call $151 with $1954 $178 ($992 is responsible)
  # Core:iterator:withIndex:11:1:isMatch:else
  $1956 = { (responsible $1957) ->
    $1958 = call $160 with $1953 $188 ($992 is responsible)
    $1959 = panicking because $1958 ($992 is at fault)
  }
  $1960 = call $153 with $1955 $249 $1956 ($992 is responsible)
  $1961 = call $160 with $1953 $188 ($999 is responsible)
  $1962 = call $160 with $1953 $189 ($998 is responsible)
  $1963 = call $1532 with $1961 ($993 is responsible)
  $1964 = call $151 with $1043 $1963 ($994 is responsible)
  # Core:iterator:withIndex:11:5:equals:else
  $1965 = { (responsible $1966) ->
    $1967 = call $169 with $1963 ($994 is responsible)
    $1968 = call $168 with $1060 $1967 ($994 is responsible)
    $1969 = call $168 with $1968 $209 ($994 is responsible)
    $1970 = ($180, $1969)
  }
  $1971 = call $153 with $1964 $277 $1965 ($994 is responsible)
  $1972 = call $160 with $1971 $187 ($994 is responsible)
  $1973 = call $151 with $1972 $178 ($994 is responsible)
  # Core:iterator:withIndex:11:5:case-0:didNotMatch
  $1974 = { (responsible $1975) ->
    $1976 = call $160 with $1971 $188 ($994 is responsible)
    $1977 = call $170 with $1963 ($994 is responsible)
    $1978 = call $151 with $184 $1977 ($994 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $1979 = { (responsible $1980) ->
      $1981 = call $167 with $1963 ($994 is responsible)
      $1982 = call $151 with $1048 $1981 ($994 is responsible)
      # Core:iterator:withIndex:11:5:equals:then
      $1983 = { (responsible $1984) ->
        $1985 = call $166 with $1963 ($994 is responsible)
        $1986 = call $151 with $186 $1985 ($994 is responsible)
        # Core:iterator:withIndex:11:5:equals:then
        $1987 = { (responsible $1988) ->
          $1989 = call $165 with $1963 ($994 is responsible)
          $1990 = call $170 with $1989 ($994 is responsible)
          $1991 = call $151 with $183 $1990 ($994 is responsible)
          # Core:iterator:withIndex:11:5:equals:then
          $1992 = { (responsible $1993) ->
            $1994 = call $164 with $1989 $1046 ($994 is responsible)
            # Core:iterator:withIndex:11:5:hasKey:then
            $1995 = { (responsible $1996) ->
              $1997 = call $163 with $1989 $1046 ($994 is responsible)
              $1998 = ($178, $1997)
            }
            # Core:iterator:withIndex:11:5:hasKey:else
            $1999 = { (responsible $2000) ->
              $2001 = call $169 with $1989 ($994 is responsible)
              $2002 = call $168 with $1063 $2001 ($994 is responsible)
              $2003 = call $168 with $2002 $209 ($994 is responsible)
              $2004 = ($180, $2003)
            }
            $2005 = call $153 with $1994 $1995 $1999 ($994 is responsible)
            $2006 = call $160 with $2005 $187 ($994 is responsible)
            $2007 = call $151 with $2006 $178 ($994 is responsible)
            # Core:iterator:withIndex:11:5:isMatch:then
            $2008 = { (responsible $2009) ->
              $2010 = call $160 with $2005 $188 ($994 is responsible)
              $2011 = call $164 with $1989 $1051 ($994 is responsible)
              # Core:iterator:withIndex:11:5:hasKey:then
              $2012 = { (responsible $2013) ->
                $2014 = call $163 with $1989 $1051 ($994 is responsible)
                $2015 = ($178, $2014)
              }
              # Core:iterator:withIndex:11:5:hasKey:else
              $2016 = { (responsible $2017) ->
                $2018 = call $169 with $1989 ($994 is responsible)
                $2019 = call $168 with $1066 $2018 ($994 is responsible)
                $2020 = call $168 with $2019 $209 ($994 is responsible)
                $2021 = ($180, $2020)
              }
              $2022 = call $153 with $2011 $2012 $2016 ($994 is responsible)
              $2023 = call $160 with $2022 $187 ($994 is responsible)
              $2024 = call $151 with $2023 $178 ($994 is responsible)
              # Core:iterator:withIndex:11:5:isMatch:then
              $2025 = { (responsible $2026) ->
                $2027 = call $160 with $2022 $188 ($994 is responsible)
                $2028 = ($178, $2010, $2027)
              }
              # Core:iterator:withIndex:11:5:isMatch:else
              $2029 = { (responsible $2030) ->
                $2031 = $2022
              }
              $2032 = call $153 with $2024 $2025 $2029 ($994 is responsible)
            }
            # Core:iterator:withIndex:11:5:isMatch:else
            $2033 = { (responsible $2034) ->
              $2035 = $2005
            }
            $2036 = call $153 with $2007 $2008 $2033 ($994 is responsible)
          }
          # Core:iterator:withIndex:11:5:equals:else
          $2037 = { (responsible $2038) ->
            $2039 = call $169 with $1990 ($994 is responsible)
            $2040 = call $168 with $202 $2039 ($994 is responsible)
            $2041 = call $168 with $2040 $209 ($994 is responsible)
            $2042 = ($180, $2041)
          }
          $2043 = call $153 with $1991 $1992 $2037 ($994 is responsible)
        }
        # Core:iterator:withIndex:11:5:equals:else
        $2044 = { (responsible $2045) ->
          $2046 = call $169 with $1985 ($994 is responsible)
          $2047 = $762
        }
        $2048 = call $153 with $1986 $1987 $2044 ($994 is responsible)
      }
      # Core:iterator:withIndex:11:5:equals:else
      $2049 = { (responsible $2050) ->
        $2051 = call $169 with $1981 ($994 is responsible)
        $2052 = call $168 with $1058 $2051 ($994 is responsible)
        $2053 = call $168 with $2052 $195 ($994 is responsible)
        $2054 = ($180, $2053)
      }
      $2055 = call $153 with $1982 $1983 $2049 ($994 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2056 = { (responsible $2057) ->
      $2058 = call $169 with $1977 ($994 is responsible)
      $2059 = call $168 with $203 $2058 ($994 is responsible)
      $2060 = call $168 with $2059 $209 ($994 is responsible)
      $2061 = ($180, $2060)
    }
    $2062 = call $153 with $1978 $1979 $2056 ($994 is responsible)
    $2063 = call $160 with $2062 $187 ($994 is responsible)
    $2064 = call $151 with $2063 $178 ($994 is responsible)
    # Core:iterator:withIndex:11:5:case-1:matched
    $2065 = { (responsible $2066) ->
      $2067 = call $160 with $2062 $188 ($996 is responsible)
      $2068 = call $160 with $2062 $189 ($997 is responsible)
      $2069 = [$1046: $2067, $1045: $1962]
      $2070 = call $170 with $1962 ($68 is responsible)
      $2071 = call $151 with $2070 $175 ($69 is responsible)
      $2072 = call $252 with $2071 $210 $995 ($19 is responsible)
      $2073 = call $154 with $1962 $188 ($18 is responsible)
      $2074 = [$1045: $2073, $1047: $2068]
      $2075 = [$1046: $2069, $1052: $2074]
      $2076 = More $2075
    }
    # Core:iterator:withIndex:11:5:case-1:didNotMatch
    $2077 = { (responsible $2078) ->
      $2079 = call $160 with $2062 $188 ($994 is responsible)
      $2080 = panicking because $205 ($994 is at fault)
    }
    $2081 = call $153 with $2064 $2065 $2077 ($994 is responsible)
  }
  $2082 = call $153 with $1973 $1335 $1974 ($994 is responsible)
}
# Core:iterator:ensure
$2083 = { $2084 $2085 (+ responsible $2086) ->
  $2087 = call $782 with $2085 ($842 is responsible)
  $2088 = call $252 with $2087 $1082 $2086 ($838 is responsible)
  # Core:iterator:ensure:14
  $2089 = { (responsible $2090) ->
    $2091 = panicking because $1077 ($2086 is at fault)
  }
  $2092 = call $1338 with $2084 $2089 ($839 is responsible)
  # Core:iterator:ensure:19
  $2093 = { $2094 (+ responsible $2095) ->
    $2096 = $2094
    $2097 = call $2085 with $2094 ($840 is responsible)
    $2098 = $2096
  }
  $2099 = call $1768 with $2092 $2093 ($841 is responsible)
}
# Core:iterator:foldLeft
$2100 = { $2101 $2102 $2103 (+ responsible $2104) ->
  # Core:iterator:foldLeft:2
  $2105 = { (responsible $2106) ->
    $2107 = panicking because $1078 ($2104 is at fault)
  }
  $2108 = call $1338 with $2101 $2105 ($855 is responsible)
  $2109 = call $697 with $2103 ($843 is responsible)
  $2110 = call $252 with $2109 $1087 $2104 ($844 is responsible)
  $2111 = [$1053: $2102, $1047: $2108]
  # Core:iterator:foldLeft:23
  $2112 = { $2113 $2114 (+ responsible $2115) ->
    $2116 = call $170 with $2114 ($845 is responsible)
    $2117 = call $151 with $183 $2116 ($845 is responsible)
    # Core:iterator:foldLeft:23:1:equals:then
    $2118 = { (responsible $2119) ->
      $2120 = call $164 with $2114 $1047 ($845 is responsible)
      # Core:iterator:foldLeft:23:1:hasKey:then
      $2121 = { (responsible $2122) ->
        $2123 = call $163 with $2114 $1047 ($845 is responsible)
        $2124 = ($178, $2123)
      }
      # Core:iterator:foldLeft:23:1:hasKey:else
      $2125 = { (responsible $2126) ->
        $2127 = call $169 with $2114 ($845 is responsible)
        $2128 = call $168 with $1064 $2127 ($845 is responsible)
        $2129 = call $168 with $2128 $209 ($845 is responsible)
        $2130 = ($180, $2129)
      }
      $2131 = call $153 with $2120 $2121 $2125 ($845 is responsible)
      $2132 = call $160 with $2131 $187 ($845 is responsible)
      $2133 = call $151 with $2132 $178 ($845 is responsible)
      # Core:iterator:foldLeft:23:1:isMatch:then
      $2134 = { (responsible $2135) ->
        $2136 = call $160 with $2131 $188 ($845 is responsible)
        $2137 = call $164 with $2114 $1053 ($845 is responsible)
        # Core:iterator:foldLeft:23:1:hasKey:then
        $2138 = { (responsible $2139) ->
          $2140 = call $163 with $2114 $1053 ($845 is responsible)
          $2141 = ($178, $2140)
        }
        # Core:iterator:foldLeft:23:1:hasKey:else
        $2142 = { (responsible $2143) ->
          $2144 = call $169 with $2114 ($845 is responsible)
          $2145 = call $168 with $1068 $2144 ($845 is responsible)
          $2146 = call $168 with $2145 $209 ($845 is responsible)
          $2147 = ($180, $2146)
        }
        $2148 = call $153 with $2137 $2138 $2142 ($845 is responsible)
        $2149 = call $160 with $2148 $187 ($845 is responsible)
        $2150 = call $151 with $2149 $178 ($845 is responsible)
        # Core:iterator:foldLeft:23:1:isMatch:then
        $2151 = { (responsible $2152) ->
          $2153 = call $160 with $2148 $188 ($845 is responsible)
          $2154 = ($178, $2136, $2153)
        }
        # Core:iterator:foldLeft:23:1:isMatch:else
        $2155 = { (responsible $2156) ->
          $2157 = $2148
        }
        $2158 = call $153 with $2150 $2151 $2155 ($845 is responsible)
      }
      # Core:iterator:foldLeft:23:1:isMatch:else
      $2159 = { (responsible $2160) ->
        $2161 = $2131
      }
      $2162 = call $153 with $2133 $2134 $2159 ($845 is responsible)
    }
    # Core:iterator:foldLeft:23:1:equals:else
    $2163 = { (responsible $2164) ->
      $2165 = call $169 with $2116 ($845 is responsible)
      $2166 = call $168 with $202 $2165 ($845 is responsible)
      $2167 = call $168 with $2166 $209 ($845 is responsible)
      $2168 = ($180, $2167)
    }
    $2169 = call $153 with $2117 $2118 $2163 ($845 is responsible)
    $2170 = call $160 with $2169 $187 ($845 is responsible)
    $2171 = call $151 with $2170 $178 ($845 is responsible)
    # Core:iterator:foldLeft:23:1:isMatch:else
    $2172 = { (responsible $2173) ->
      $2174 = call $160 with $2169 $188 ($845 is responsible)
      $2175 = panicking because $2174 ($845 is at fault)
    }
    $2176 = call $153 with $2171 $249 $2172 ($845 is responsible)
    $2177 = call $160 with $2169 $188 ($852 is responsible)
    $2178 = call $160 with $2169 $189 ($853 is responsible)
    $2179 = call $1532 with $2177 ($846 is responsible)
    $2180 = call $151 with $1043 $2179 ($847 is responsible)
    # Core:iterator:foldLeft:23:5:equals:else
    $2181 = { (responsible $2182) ->
      $2183 = call $169 with $2179 ($847 is responsible)
      $2184 = call $168 with $1060 $2183 ($847 is responsible)
      $2185 = call $168 with $2184 $209 ($847 is responsible)
      $2186 = ($180, $2185)
    }
    $2187 = call $153 with $2180 $277 $2181 ($847 is responsible)
    $2188 = call $160 with $2187 $187 ($847 is responsible)
    $2189 = call $151 with $2188 $178 ($847 is responsible)
    # Core:iterator:foldLeft:23:5:case-0:matched
    $2190 = { (responsible $2191) ->
      $2192 = $2178
    }
    # Core:iterator:foldLeft:23:5:case-0:didNotMatch
    $2193 = { (responsible $2194) ->
      $2195 = call $160 with $2187 $188 ($847 is responsible)
      $2196 = call $170 with $2179 ($847 is responsible)
      $2197 = call $151 with $184 $2196 ($847 is responsible)
      # Core:iterator:foldLeft:23:5:equals:then
      $2198 = { (responsible $2199) ->
        $2200 = call $167 with $2179 ($847 is responsible)
        $2201 = call $151 with $1048 $2200 ($847 is responsible)
        # Core:iterator:foldLeft:23:5:equals:then
        $2202 = { (responsible $2203) ->
          $2204 = call $166 with $2179 ($847 is responsible)
          $2205 = call $151 with $186 $2204 ($847 is responsible)
          # Core:iterator:foldLeft:23:5:equals:then
          $2206 = { (responsible $2207) ->
            $2208 = call $165 with $2179 ($847 is responsible)
            $2209 = call $170 with $2208 ($847 is responsible)
            $2210 = call $151 with $183 $2209 ($847 is responsible)
            # Core:iterator:foldLeft:23:5:equals:then
            $2211 = { (responsible $2212) ->
              $2213 = call $164 with $2208 $1046 ($847 is responsible)
              # Core:iterator:foldLeft:23:5:hasKey:then
              $2214 = { (responsible $2215) ->
                $2216 = call $163 with $2208 $1046 ($847 is responsible)
                $2217 = ($178, $2216)
              }
              # Core:iterator:foldLeft:23:5:hasKey:else
              $2218 = { (responsible $2219) ->
                $2220 = call $169 with $2208 ($847 is responsible)
                $2221 = call $168 with $1063 $2220 ($847 is responsible)
                $2222 = call $168 with $2221 $209 ($847 is responsible)
                $2223 = ($180, $2222)
              }
              $2224 = call $153 with $2213 $2214 $2218 ($847 is responsible)
              $2225 = call $160 with $2224 $187 ($847 is responsible)
              $2226 = call $151 with $2225 $178 ($847 is responsible)
              # Core:iterator:foldLeft:23:5:isMatch:then
              $2227 = { (responsible $2228) ->
                $2229 = call $160 with $2224 $188 ($847 is responsible)
                $2230 = call $164 with $2208 $1051 ($847 is responsible)
                # Core:iterator:foldLeft:23:5:hasKey:then
                $2231 = { (responsible $2232) ->
                  $2233 = call $163 with $2208 $1051 ($847 is responsible)
                  $2234 = ($178, $2233)
                }
                # Core:iterator:foldLeft:23:5:hasKey:else
                $2235 = { (responsible $2236) ->
                  $2237 = call $169 with $2208 ($847 is responsible)
                  $2238 = call $168 with $1066 $2237 ($847 is responsible)
                  $2239 = call $168 with $2238 $209 ($847 is responsible)
                  $2240 = ($180, $2239)
                }
                $2241 = call $153 with $2230 $2231 $2235 ($847 is responsible)
                $2242 = call $160 with $2241 $187 ($847 is responsible)
                $2243 = call $151 with $2242 $178 ($847 is responsible)
                # Core:iterator:foldLeft:23:5:isMatch:then
                $2244 = { (responsible $2245) ->
                  $2246 = call $160 with $2241 $188 ($847 is responsible)
                  $2247 = ($178, $2229, $2246)
                }
                # Core:iterator:foldLeft:23:5:isMatch:else
                $2248 = { (responsible $2249) ->
                  $2250 = $2241
                }
                $2251 = call $153 with $2243 $2244 $2248 ($847 is responsible)
              }
              # Core:iterator:foldLeft:23:5:isMatch:else
              $2252 = { (responsible $2253) ->
                $2254 = $2224
              }
              $2255 = call $153 with $2226 $2227 $2252 ($847 is responsible)
            }
            # Core:iterator:foldLeft:23:5:equals:else
            $2256 = { (responsible $2257) ->
              $2258 = call $169 with $2209 ($847 is responsible)
              $2259 = call $168 with $202 $2258 ($847 is responsible)
              $2260 = call $168 with $2259 $209 ($847 is responsible)
              $2261 = ($180, $2260)
            }
            $2262 = call $153 with $2210 $2211 $2256 ($847 is responsible)
          }
          # Core:iterator:foldLeft:23:5:equals:else
          $2263 = { (responsible $2264) ->
            $2265 = call $169 with $2204 ($847 is responsible)
            $2266 = $762
          }
          $2267 = call $153 with $2205 $2206 $2263 ($847 is responsible)
        }
        # Core:iterator:foldLeft:23:5:equals:else
        $2268 = { (responsible $2269) ->
          $2270 = call $169 with $2200 ($847 is responsible)
          $2271 = call $168 with $1058 $2270 ($847 is responsible)
          $2272 = call $168 with $2271 $195 ($847 is responsible)
          $2273 = ($180, $2272)
        }
        $2274 = call $153 with $2201 $2202 $2268 ($847 is responsible)
      }
      # Core:iterator:foldLeft:23:5:equals:else
      $2275 = { (responsible $2276) ->
        $2277 = call $169 with $2196 ($847 is responsible)
        $2278 = call $168 with $203 $2277 ($847 is responsible)
        $2279 = call $168 with $2278 $209 ($847 is responsible)
        $2280 = ($180, $2279)
      }
      $2281 = call $153 with $2197 $2198 $2275 ($847 is responsible)
      $2282 = call $160 with $2281 $187 ($847 is responsible)
      $2283 = call $151 with $2282 $178 ($847 is responsible)
      # Core:iterator:foldLeft:23:5:case-1:matched
      $2284 = { (responsible $2285) ->
        $2286 = call $160 with $2281 $188 ($850 is responsible)
        $2287 = call $160 with $2281 $189 ($851 is responsible)
        $2288 = call $2103 with $2178 $2286 ($849 is responsible)
        $2289 = [$1047: $2287, $1053: $2288]
        $2290 = call $2113 with $2289 ($848 is responsible)
      }
      # Core:iterator:foldLeft:23:5:case-1:didNotMatch
      $2291 = { (responsible $2292) ->
        $2293 = call $160 with $2281 $188 ($847 is responsible)
        $2294 = panicking because $205 ($847 is at fault)
      }
      $2295 = call $153 with $2283 $2284 $2291 ($847 is responsible)
    }
    $2296 = call $153 with $2189 $2190 $2193 ($847 is responsible)
  }
  $2297 = call $697 with $2112 ($123 is responsible)
  $2298 = call $252 with $2297 $206 $854 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $2299 = { $2300 $2301 (+ responsible $2302) ->
    # Core:controlFlow:recursive:18:0
    $2303 = { $2304 (+ responsible $2305) ->
      $2306 = call $2300 with $2300 $2304 ($120 is responsible)
    }
    $2307 = call $2112 with $2303 $2301 ($121 is responsible)
  }
  $2308 = call $2299 with $2299 $2111 ($122 is responsible)
}
$2309 = Error $1055
# Core:iterator:reduceLeft:18:case-0:matched
$2310 = { (responsible $2311) ->
  $2312 = $2309
}
# Core:iterator:reduceLeft
$2313 = { $2314 $2315 (+ responsible $2316) ->
  $2317 = call $697 with $2315 ($915 is responsible)
  $2318 = call $252 with $2317 $1087 $2316 ($908 is responsible)
  # Core:iterator:reduceLeft:14
  $2319 = { (responsible $2320) ->
    $2321 = panicking because $1105 ($2316 is at fault)
  }
  $2322 = call $1338 with $2314 $2319 ($909 is responsible)
  $2323 = call $1532 with $2322 ($910 is responsible)
  $2324 = call $151 with $1043 $2323 ($911 is responsible)
  # Core:iterator:reduceLeft:18:equals:else
  $2325 = { (responsible $2326) ->
    $2327 = call $169 with $2323 ($911 is responsible)
    $2328 = call $168 with $1060 $2327 ($911 is responsible)
    $2329 = call $168 with $2328 $209 ($911 is responsible)
    $2330 = ($180, $2329)
  }
  $2331 = call $153 with $2324 $277 $2325 ($911 is responsible)
  $2332 = call $160 with $2331 $187 ($911 is responsible)
  $2333 = call $151 with $2332 $178 ($911 is responsible)
  # Core:iterator:reduceLeft:18:case-0:didNotMatch
  $2334 = { (responsible $2335) ->
    $2336 = call $160 with $2331 $188 ($911 is responsible)
    $2337 = call $170 with $2323 ($911 is responsible)
    $2338 = call $151 with $184 $2337 ($911 is responsible)
    # Core:iterator:reduceLeft:18:equals:then
    $2339 = { (responsible $2340) ->
      $2341 = call $167 with $2323 ($911 is responsible)
      $2342 = call $151 with $1048 $2341 ($911 is responsible)
      # Core:iterator:reduceLeft:18:equals:then
      $2343 = { (responsible $2344) ->
        $2345 = call $166 with $2323 ($911 is responsible)
        $2346 = call $151 with $186 $2345 ($911 is responsible)
        # Core:iterator:reduceLeft:18:equals:then
        $2347 = { (responsible $2348) ->
          $2349 = call $165 with $2323 ($911 is responsible)
          $2350 = call $170 with $2349 ($911 is responsible)
          $2351 = call $151 with $183 $2350 ($911 is responsible)
          # Core:iterator:reduceLeft:18:equals:then
          $2352 = { (responsible $2353) ->
            $2354 = call $164 with $2349 $1046 ($911 is responsible)
            # Core:iterator:reduceLeft:18:hasKey:then
            $2355 = { (responsible $2356) ->
              $2357 = call $163 with $2349 $1046 ($911 is responsible)
              $2358 = ($178, $2357)
            }
            # Core:iterator:reduceLeft:18:hasKey:else
            $2359 = { (responsible $2360) ->
              $2361 = call $169 with $2349 ($911 is responsible)
              $2362 = call $168 with $1063 $2361 ($911 is responsible)
              $2363 = call $168 with $2362 $209 ($911 is responsible)
              $2364 = ($180, $2363)
            }
            $2365 = call $153 with $2354 $2355 $2359 ($911 is responsible)
            $2366 = call $160 with $2365 $187 ($911 is responsible)
            $2367 = call $151 with $2366 $178 ($911 is responsible)
            # Core:iterator:reduceLeft:18:isMatch:then
            $2368 = { (responsible $2369) ->
              $2370 = call $160 with $2365 $188 ($911 is responsible)
              $2371 = call $164 with $2349 $1051 ($911 is responsible)
              # Core:iterator:reduceLeft:18:hasKey:then
              $2372 = { (responsible $2373) ->
                $2374 = call $163 with $2349 $1051 ($911 is responsible)
                $2375 = ($178, $2374)
              }
              # Core:iterator:reduceLeft:18:hasKey:else
              $2376 = { (responsible $2377) ->
                $2378 = call $169 with $2349 ($911 is responsible)
                $2379 = call $168 with $1066 $2378 ($911 is responsible)
                $2380 = call $168 with $2379 $209 ($911 is responsible)
                $2381 = ($180, $2380)
              }
              $2382 = call $153 with $2371 $2372 $2376 ($911 is responsible)
              $2383 = call $160 with $2382 $187 ($911 is responsible)
              $2384 = call $151 with $2383 $178 ($911 is responsible)
              # Core:iterator:reduceLeft:18:isMatch:then
              $2385 = { (responsible $2386) ->
                $2387 = call $160 with $2382 $188 ($911 is responsible)
                $2388 = ($178, $2370, $2387)
              }
              # Core:iterator:reduceLeft:18:isMatch:else
              $2389 = { (responsible $2390) ->
                $2391 = $2382
              }
              $2392 = call $153 with $2384 $2385 $2389 ($911 is responsible)
            }
            # Core:iterator:reduceLeft:18:isMatch:else
            $2393 = { (responsible $2394) ->
              $2395 = $2365
            }
            $2396 = call $153 with $2367 $2368 $2393 ($911 is responsible)
          }
          # Core:iterator:reduceLeft:18:equals:else
          $2397 = { (responsible $2398) ->
            $2399 = call $169 with $2350 ($911 is responsible)
            $2400 = call $168 with $202 $2399 ($911 is responsible)
            $2401 = call $168 with $2400 $209 ($911 is responsible)
            $2402 = ($180, $2401)
          }
          $2403 = call $153 with $2351 $2352 $2397 ($911 is responsible)
        }
        # Core:iterator:reduceLeft:18:equals:else
        $2404 = { (responsible $2405) ->
          $2406 = call $169 with $2345 ($911 is responsible)
          $2407 = $762
        }
        $2408 = call $153 with $2346 $2347 $2404 ($911 is responsible)
      }
      # Core:iterator:reduceLeft:18:equals:else
      $2409 = { (responsible $2410) ->
        $2411 = call $169 with $2341 ($911 is responsible)
        $2412 = call $168 with $1058 $2411 ($911 is responsible)
        $2413 = call $168 with $2412 $195 ($911 is responsible)
        $2414 = ($180, $2413)
      }
      $2415 = call $153 with $2342 $2343 $2409 ($911 is responsible)
    }
    # Core:iterator:reduceLeft:18:equals:else
    $2416 = { (responsible $2417) ->
      $2418 = call $169 with $2337 ($911 is responsible)
      $2419 = call $168 with $203 $2418 ($911 is responsible)
      $2420 = call $168 with $2419 $209 ($911 is responsible)
      $2421 = ($180, $2420)
    }
    $2422 = call $153 with $2338 $2339 $2416 ($911 is responsible)
    $2423 = call $160 with $2422 $187 ($911 is responsible)
    $2424 = call $151 with $2423 $178 ($911 is responsible)
    # Core:iterator:reduceLeft:18:case-1:matched
    $2425 = { (responsible $2426) ->
      $2427 = call $160 with $2422 $188 ($913 is responsible)
      $2428 = call $160 with $2422 $189 ($914 is responsible)
      $2429 = call $2100 with $2428 $2427 $2315 ($912 is responsible)
      $2430 = Ok $2429
    }
    # Core:iterator:reduceLeft:18:case-1:didNotMatch
    $2431 = { (responsible $2432) ->
      $2433 = call $160 with $2422 $188 ($911 is responsible)
      $2434 = panicking because $205 ($911 is at fault)
    }
    $2435 = call $153 with $2424 $2425 $2431 ($911 is responsible)
  }
  $2436 = call $153 with $2333 $2310 $2334 ($911 is responsible)
}
# Core:iterator:sum:8
$2437 = { $2438 $2439 (+ responsible $2440) ->
  $2441 = call $170 with $2438 ($68 is responsible)
  $2442 = call $151 with $2441 $175 ($69 is responsible)
  $2443 = call $252 with $2442 $210 $935 ($19 is responsible)
  $2444 = call $170 with $2439 ($68 is responsible)
  $2445 = call $151 with $2444 $175 ($69 is responsible)
  $2446 = call $252 with $2445 $212 $935 ($17 is responsible)
  $2447 = call $154 with $2438 $2439 ($18 is responsible)
}
# Core:iterator:sum
$2448 = { $2449 (+ responsible $2450) ->
  # Core:iterator:sum:2
  $2451 = { (responsible $2452) ->
    $2453 = panicking because $1107 ($2450 is at fault)
  }
  $2454 = call $1338 with $2449 $2451 ($932 is responsible)
  # Core:iterator:sum:5
  $2455 = { $2456 (+ responsible $2457) ->
    $2458 = call $170 with $2456 ($70 is responsible)
    $2459 = call $151 with $2458 $175 ($1 is responsible)
    $2460 = call $252 with $2459 $1061 $2450 ($933 is responsible)
  }
  $2461 = call $2083 with $2454 $2455 ($934 is responsible)
  $2462 = call $2313 with $2461 $2437 ($936 is responsible)
  $2463 = call $1305 with $2462 $187 ($931 is responsible)
}
# Core:iterator:length:5
$2464 = { $2465 (+ responsible $2466) ->
  $2467 = $188
}
# Core:iterator:all
$2468 = { $2469 $2470 (+ responsible $2471) ->
  $2472 = call $782 with $2470 ($824 is responsible)
  $2473 = call $252 with $2472 $1085 $2471 ($817 is responsible)
  # Core:iterator:all:14
  $2474 = { (responsible $2475) ->
    $2476 = panicking because $1072 ($2471 is at fault)
  }
  $2477 = call $1338 with $2469 $2474 ($818 is responsible)
  # Core:iterator:all:18
  $2478 = { $2479 $2480 (+ responsible $2481) ->
    $2482 = call $2470 with $2480 ($821 is responsible)
    $2483 = call $513 with $2482 ($819 is responsible)
    $2484 = call $252 with $2483 $1075 $2471 ($820 is responsible)
    $2485 = call $513 with $2479 ($72 is responsible)
    $2486 = call $252 with $2485 $230 $822 ($73 is responsible)
    $2487 = call $513 with $2482 ($74 is responsible)
    $2488 = call $252 with $2487 $231 $822 ($75 is responsible)
    # Core:bool:and:12
    $2489 = { (responsible $2490) ->
      $2491 = $2482
    }
    $2492 = call $581 with $2479 $2489 ($71 is responsible)
  }
  $2493 = call $2100 with $2477 $186 $2478 ($823 is responsible)
}
# Core:iterator:any
$2494 = { $2495 $2496 (+ responsible $2497) ->
  $2498 = call $782 with $2496 ($832 is responsible)
  $2499 = call $252 with $2498 $1085 $2497 ($825 is responsible)
  # Core:iterator:any:14
  $2500 = { (responsible $2501) ->
    $2502 = panicking because $1073 ($2497 is at fault)
  }
  $2503 = call $1338 with $2495 $2500 ($826 is responsible)
  # Core:iterator:any:18
  $2504 = { $2505 $2506 (+ responsible $2507) ->
    $2508 = call $2496 with $2506 ($829 is responsible)
    $2509 = call $513 with $2508 ($827 is responsible)
    $2510 = call $252 with $2509 $1075 $2497 ($828 is responsible)
    $2511 = call $513 with $2505 ($97 is responsible)
    $2512 = call $252 with $2511 $230 $830 ($98 is responsible)
    $2513 = call $513 with $2508 ($99 is responsible)
    $2514 = call $252 with $2513 $231 $830 ($100 is responsible)
    # Core:bool:or:12
    $2515 = { (responsible $2516) ->
      $2517 = $2508
    }
    $2518 = call $625 with $2505 $2515 ($96 is responsible)
  }
  $2519 = call $2100 with $2503 $172 $2504 ($831 is responsible)
}
# Core:iterator:joinToText
$2520 = { $2521 (+ responsible $2522) ->
  # Core:iterator:joinToText:2
  $2523 = { (responsible $2524) ->
    $2525 = panicking because $1100 ($2522 is at fault)
  }
  $2526 = call $1338 with $2521 $2523 ($891 is responsible)
  # Core:iterator:joinToText:12
  $2527 = { $2528 $2529 (+ responsible $2530) ->
    $2531 = call $170 with $2529 ($70 is responsible)
    $2532 = call $151 with $2531 $185 ($1 is responsible)
    $2533 = call $252 with $2532 $1110 $2522 ($888 is responsible)
    $2534 = call $170 with $2528 ($68 is responsible)
    $2535 = call $151 with $2534 $185 ($69 is responsible)
    $2536 = call $252 with $2535 $211 $889 ($66 is responsible)
    $2537 = call $170 with $2529 ($68 is responsible)
    $2538 = call $151 with $2537 $185 ($69 is responsible)
    $2539 = call $252 with $2538 $213 $889 ($64 is responsible)
    $2540 = call $168 with $2528 $2529 ($65 is responsible)
  }
  $2541 = call $2100 with $2526 $1054 $2527 ($890 is responsible)
}
# Core:iterator:where
$2542 = { $2543 $2544 (+ responsible $2545) ->
  # Core:iterator:where:2
  $2546 = { (responsible $2547) ->
    $2548 = panicking because $1112 ($2545 is at fault)
  }
  $2549 = call $1338 with $2543 $2546 ($975 is responsible)
  $2550 = call $782 with $2544 ($960 is responsible)
  $2551 = call $252 with $2550 $1085 $2545 ($961 is responsible)
  # Core:iterator:where:19
  $2552 = { $2553 $2554 (+ responsible $2555) ->
    # Core:iterator:where:19:2
    $2556 = { $2557 (+ responsible $2558) ->
      $2559 = call $1532 with $2557 ($962 is responsible)
      $2560 = call $151 with $1043 $2559 ($963 is responsible)
      # Core:iterator:where:19:2:3:equals:else
      $2561 = { (responsible $2562) ->
        $2563 = call $169 with $2559 ($963 is responsible)
        $2564 = call $168 with $1060 $2563 ($963 is responsible)
        $2565 = call $168 with $2564 $209 ($963 is responsible)
        $2566 = ($180, $2565)
      }
      $2567 = call $153 with $2560 $277 $2561 ($963 is responsible)
      $2568 = call $160 with $2567 $187 ($963 is responsible)
      $2569 = call $151 with $2568 $178 ($963 is responsible)
      # Core:iterator:where:19:2:3:case-0:didNotMatch
      $2570 = { (responsible $2571) ->
        $2572 = call $160 with $2567 $188 ($963 is responsible)
        $2573 = call $170 with $2559 ($963 is responsible)
        $2574 = call $151 with $184 $2573 ($963 is responsible)
        # Core:iterator:where:19:2:3:equals:then
        $2575 = { (responsible $2576) ->
          $2577 = call $167 with $2559 ($963 is responsible)
          $2578 = call $151 with $1048 $2577 ($963 is responsible)
          # Core:iterator:where:19:2:3:equals:then
          $2579 = { (responsible $2580) ->
            $2581 = call $166 with $2559 ($963 is responsible)
            $2582 = call $151 with $186 $2581 ($963 is responsible)
            # Core:iterator:where:19:2:3:equals:then
            $2583 = { (responsible $2584) ->
              $2585 = call $165 with $2559 ($963 is responsible)
              $2586 = call $170 with $2585 ($963 is responsible)
              $2587 = call $151 with $183 $2586 ($963 is responsible)
              # Core:iterator:where:19:2:3:equals:then
              $2588 = { (responsible $2589) ->
                $2590 = call $164 with $2585 $1046 ($963 is responsible)
                # Core:iterator:where:19:2:3:hasKey:then
                $2591 = { (responsible $2592) ->
                  $2593 = call $163 with $2585 $1046 ($963 is responsible)
                  $2594 = ($178, $2593)
                }
                # Core:iterator:where:19:2:3:hasKey:else
                $2595 = { (responsible $2596) ->
                  $2597 = call $169 with $2585 ($963 is responsible)
                  $2598 = call $168 with $1063 $2597 ($963 is responsible)
                  $2599 = call $168 with $2598 $209 ($963 is responsible)
                  $2600 = ($180, $2599)
                }
                $2601 = call $153 with $2590 $2591 $2595 ($963 is responsible)
                $2602 = call $160 with $2601 $187 ($963 is responsible)
                $2603 = call $151 with $2602 $178 ($963 is responsible)
                # Core:iterator:where:19:2:3:isMatch:then
                $2604 = { (responsible $2605) ->
                  $2606 = call $160 with $2601 $188 ($963 is responsible)
                  $2607 = call $164 with $2585 $1051 ($963 is responsible)
                  # Core:iterator:where:19:2:3:hasKey:then
                  $2608 = { (responsible $2609) ->
                    $2610 = call $163 with $2585 $1051 ($963 is responsible)
                    $2611 = ($178, $2610)
                  }
                  # Core:iterator:where:19:2:3:hasKey:else
                  $2612 = { (responsible $2613) ->
                    $2614 = call $169 with $2585 ($963 is responsible)
                    $2615 = call $168 with $1066 $2614 ($963 is responsible)
                    $2616 = call $168 with $2615 $209 ($963 is responsible)
                    $2617 = ($180, $2616)
                  }
                  $2618 = call $153 with $2607 $2608 $2612 ($963 is responsible)
                  $2619 = call $160 with $2618 $187 ($963 is responsible)
                  $2620 = call $151 with $2619 $178 ($963 is responsible)
                  # Core:iterator:where:19:2:3:isMatch:then
                  $2621 = { (responsible $2622) ->
                    $2623 = call $160 with $2618 $188 ($963 is responsible)
                    $2624 = ($178, $2606, $2623)
                  }
                  # Core:iterator:where:19:2:3:isMatch:else
                  $2625 = { (responsible $2626) ->
                    $2627 = $2618
                  }
                  $2628 = call $153 with $2620 $2621 $2625 ($963 is responsible)
                }
                # Core:iterator:where:19:2:3:isMatch:else
                $2629 = { (responsible $2630) ->
                  $2631 = $2601
                }
                $2632 = call $153 with $2603 $2604 $2629 ($963 is responsible)
              }
              # Core:iterator:where:19:2:3:equals:else
              $2633 = { (responsible $2634) ->
                $2635 = call $169 with $2586 ($963 is responsible)
                $2636 = call $168 with $202 $2635 ($963 is responsible)
                $2637 = call $168 with $2636 $209 ($963 is responsible)
                $2638 = ($180, $2637)
              }
              $2639 = call $153 with $2587 $2588 $2633 ($963 is responsible)
            }
            # Core:iterator:where:19:2:3:equals:else
            $2640 = { (responsible $2641) ->
              $2642 = call $169 with $2581 ($963 is responsible)
              $2643 = $762
            }
            $2644 = call $153 with $2582 $2583 $2640 ($963 is responsible)
          }
          # Core:iterator:where:19:2:3:equals:else
          $2645 = { (responsible $2646) ->
            $2647 = call $169 with $2577 ($963 is responsible)
            $2648 = call $168 with $1058 $2647 ($963 is responsible)
            $2649 = call $168 with $2648 $195 ($963 is responsible)
            $2650 = ($180, $2649)
          }
          $2651 = call $153 with $2578 $2579 $2645 ($963 is responsible)
        }
        # Core:iterator:where:19:2:3:equals:else
        $2652 = { (responsible $2653) ->
          $2654 = call $169 with $2573 ($963 is responsible)
          $2655 = call $168 with $203 $2654 ($963 is responsible)
          $2656 = call $168 with $2655 $209 ($963 is responsible)
          $2657 = ($180, $2656)
        }
        $2658 = call $153 with $2574 $2575 $2652 ($963 is responsible)
        $2659 = call $160 with $2658 $187 ($963 is responsible)
        $2660 = call $151 with $2659 $178 ($963 is responsible)
        # Core:iterator:where:19:2:3:case-1:matched
        $2661 = { (responsible $2662) ->
          $2663 = call $160 with $2658 $188 ($971 is responsible)
          $2664 = call $160 with $2658 $189 ($972 is responsible)
          $2665 = call $2544 with $2663 ($964 is responsible)
          # Core:iterator:where:19:2:3:5
          $2666 = { (responsible $2667) ->
            $2668 = [$1046: $2663, $1052: $2664]
            $2669 = More $2668
          }
          # Core:iterator:where:19:2:3:6
          $2670 = { (responsible $2671) ->
            $2672 = call $2553 with $2664 ($965 is responsible)
            $2673 = call $1532 with $2672 ($966 is responsible)
            $2674 = call $151 with $1043 $2673 ($967 is responsible)
            # Core:iterator:where:19:2:3:6:5:equals:else
            $2675 = { (responsible $2676) ->
              $2677 = call $169 with $2673 ($967 is responsible)
              $2678 = call $168 with $1060 $2677 ($967 is responsible)
              $2679 = call $168 with $2678 $209 ($967 is responsible)
              $2680 = ($180, $2679)
            }
            $2681 = call $153 with $2674 $277 $2675 ($967 is responsible)
            $2682 = call $160 with $2681 $187 ($967 is responsible)
            $2683 = call $151 with $2682 $178 ($967 is responsible)
            # Core:iterator:where:19:2:3:6:5:case-0:didNotMatch
            $2684 = { (responsible $2685) ->
              $2686 = call $160 with $2681 $188 ($967 is responsible)
              $2687 = call $170 with $2673 ($967 is responsible)
              $2688 = call $151 with $184 $2687 ($967 is responsible)
              # Core:iterator:where:19:2:3:6:5:equals:then
              $2689 = { (responsible $2690) ->
                $2691 = call $167 with $2673 ($967 is responsible)
                $2692 = call $151 with $1048 $2691 ($967 is responsible)
                # Core:iterator:where:19:2:3:6:5:equals:then
                $2693 = { (responsible $2694) ->
                  $2695 = call $166 with $2673 ($967 is responsible)
                  $2696 = call $151 with $186 $2695 ($967 is responsible)
                  # Core:iterator:where:19:2:3:6:5:equals:then
                  $2697 = { (responsible $2698) ->
                    $2699 = call $165 with $2673 ($967 is responsible)
                    $2700 = call $170 with $2699 ($967 is responsible)
                    $2701 = call $151 with $183 $2700 ($967 is responsible)
                    # Core:iterator:where:19:2:3:6:5:equals:then
                    $2702 = { (responsible $2703) ->
                      $2704 = call $164 with $2699 $1046 ($967 is responsible)
                      # Core:iterator:where:19:2:3:6:5:hasKey:then
                      $2705 = { (responsible $2706) ->
                        $2707 = call $163 with $2699 $1046 ($967 is responsible)
                        $2708 = ($178, $2707)
                      }
                      # Core:iterator:where:19:2:3:6:5:hasKey:else
                      $2709 = { (responsible $2710) ->
                        $2711 = call $169 with $2699 ($967 is responsible)
                        $2712 = call $168 with $1063 $2711 ($967 is responsible)
                        $2713 = call $168 with $2712 $209 ($967 is responsible)
                        $2714 = ($180, $2713)
                      }
                      $2715 = call $153 with $2704 $2705 $2709 ($967 is responsible)
                      $2716 = call $160 with $2715 $187 ($967 is responsible)
                      $2717 = call $151 with $2716 $178 ($967 is responsible)
                      # Core:iterator:where:19:2:3:6:5:isMatch:then
                      $2718 = { (responsible $2719) ->
                        $2720 = call $160 with $2715 $188 ($967 is responsible)
                        $2721 = call $164 with $2699 $1051 ($967 is responsible)
                        # Core:iterator:where:19:2:3:6:5:hasKey:then
                        $2722 = { (responsible $2723) ->
                          $2724 = call $163 with $2699 $1051 ($967 is responsible)
                          $2725 = ($178, $2724)
                        }
                        # Core:iterator:where:19:2:3:6:5:hasKey:else
                        $2726 = { (responsible $2727) ->
                          $2728 = call $169 with $2699 ($967 is responsible)
                          $2729 = call $168 with $1066 $2728 ($967 is responsible)
                          $2730 = call $168 with $2729 $209 ($967 is responsible)
                          $2731 = ($180, $2730)
                        }
                        $2732 = call $153 with $2721 $2722 $2726 ($967 is responsible)
                        $2733 = call $160 with $2732 $187 ($967 is responsible)
                        $2734 = call $151 with $2733 $178 ($967 is responsible)
                        # Core:iterator:where:19:2:3:6:5:isMatch:then
                        $2735 = { (responsible $2736) ->
                          $2737 = call $160 with $2732 $188 ($967 is responsible)
                          $2738 = ($178, $2720, $2737)
                        }
                        # Core:iterator:where:19:2:3:6:5:isMatch:else
                        $2739 = { (responsible $2740) ->
                          $2741 = $2732
                        }
                        $2742 = call $153 with $2734 $2735 $2739 ($967 is responsible)
                      }
                      # Core:iterator:where:19:2:3:6:5:isMatch:else
                      $2743 = { (responsible $2744) ->
                        $2745 = $2715
                      }
                      $2746 = call $153 with $2717 $2718 $2743 ($967 is responsible)
                    }
                    # Core:iterator:where:19:2:3:6:5:equals:else
                    $2747 = { (responsible $2748) ->
                      $2749 = call $169 with $2700 ($967 is responsible)
                      $2750 = call $168 with $202 $2749 ($967 is responsible)
                      $2751 = call $168 with $2750 $209 ($967 is responsible)
                      $2752 = ($180, $2751)
                    }
                    $2753 = call $153 with $2701 $2702 $2747 ($967 is responsible)
                  }
                  # Core:iterator:where:19:2:3:6:5:equals:else
                  $2754 = { (responsible $2755) ->
                    $2756 = call $169 with $2695 ($967 is responsible)
                    $2757 = $762
                  }
                  $2758 = call $153 with $2696 $2697 $2754 ($967 is responsible)
                }
                # Core:iterator:where:19:2:3:6:5:equals:else
                $2759 = { (responsible $2760) ->
                  $2761 = call $169 with $2691 ($967 is responsible)
                  $2762 = call $168 with $1058 $2761 ($967 is responsible)
                  $2763 = call $168 with $2762 $195 ($967 is responsible)
                  $2764 = ($180, $2763)
                }
                $2765 = call $153 with $2692 $2693 $2759 ($967 is responsible)
              }
              # Core:iterator:where:19:2:3:6:5:equals:else
              $2766 = { (responsible $2767) ->
                $2768 = call $169 with $2687 ($967 is responsible)
                $2769 = call $168 with $203 $2768 ($967 is responsible)
                $2770 = call $168 with $2769 $209 ($967 is responsible)
                $2771 = ($180, $2770)
              }
              $2772 = call $153 with $2688 $2689 $2766 ($967 is responsible)
              $2773 = call $160 with $2772 $187 ($967 is responsible)
              $2774 = call $151 with $2773 $178 ($967 is responsible)
              # Core:iterator:where:19:2:3:6:5:case-1:matched
              $2775 = { (responsible $2776) ->
                $2777 = call $160 with $2772 $188 ($968 is responsible)
                $2778 = call $160 with $2772 $189 ($969 is responsible)
                $2779 = [$1046: $2777, $1052: $2778]
                $2780 = More $2779
              }
              # Core:iterator:where:19:2:3:6:5:case-1:didNotMatch
              $2781 = { (responsible $2782) ->
                $2783 = call $160 with $2772 $188 ($967 is responsible)
                $2784 = panicking because $205 ($967 is at fault)
              }
              $2785 = call $153 with $2774 $2775 $2781 ($967 is responsible)
            }
            $2786 = call $153 with $2683 $1335 $2684 ($967 is responsible)
          }
          $2787 = call $391 with $2665 $2666 $2670 ($970 is responsible)
        }
        # Core:iterator:where:19:2:3:case-1:didNotMatch
        $2788 = { (responsible $2789) ->
          $2790 = call $160 with $2658 $188 ($963 is responsible)
          $2791 = panicking because $205 ($963 is at fault)
        }
        $2792 = call $153 with $2660 $2661 $2788 ($963 is responsible)
      }
      $2793 = call $153 with $2569 $1335 $2570 ($963 is responsible)
    }
    $2794 = call $1581 with $2554 $2556 ($973 is responsible)
  }
  $2795 = call $697 with $2552 ($123 is responsible)
  $2796 = call $252 with $2795 $206 $974 ($119 is responsible)
  # Core:controlFlow:recursive:18
  $2797 = { $2798 $2799 (+ responsible $2800) ->
    # Core:controlFlow:recursive:18:0
    $2801 = { $2802 (+ responsible $2803) ->
      $2804 = call $2798 with $2798 $2802 ($120 is responsible)
    }
    $2805 = call $2552 with $2801 $2799 ($121 is responsible)
  }
  $2806 = call $2797 with $2797 $2549 ($122 is responsible)
}
# Core:iterator:takeWhile
$2807 = { $2808 $2809 (+ responsible $2810) ->
  # Core:iterator:takeWhile:2
  $2811 = { (responsible $2812) ->
    $2813 = panicking because $1108 ($2810 is at fault)
  }
  $2814 = call $1338 with $2808 $2811 ($949 is responsible)
  # Core:iterator:takeWhile:7
  $2815 = { $2816 (+ responsible $2817) ->
    $2818 = call $1532 with $2816 ($950 is responsible)
    $2819 = call $151 with $1043 $2818 ($951 is responsible)
    # Core:iterator:takeWhile:7:3:equals:else
    $2820 = { (responsible $2821) ->
      $2822 = call $169 with $2818 ($951 is responsible)
      $2823 = call $168 with $1060 $2822 ($951 is responsible)
      $2824 = call $168 with $2823 $209 ($951 is responsible)
      $2825 = ($180, $2824)
    }
    $2826 = call $153 with $2819 $277 $2820 ($951 is responsible)
    $2827 = call $160 with $2826 $187 ($951 is responsible)
    $2828 = call $151 with $2827 $178 ($951 is responsible)
    # Core:iterator:takeWhile:7:3:case-0:didNotMatch
    $2829 = { (responsible $2830) ->
      $2831 = call $160 with $2826 $188 ($951 is responsible)
      $2832 = call $170 with $2818 ($951 is responsible)
      $2833 = call $151 with $184 $2832 ($951 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $2834 = { (responsible $2835) ->
        $2836 = call $167 with $2818 ($951 is responsible)
        $2837 = call $151 with $1048 $2836 ($951 is responsible)
        # Core:iterator:takeWhile:7:3:equals:then
        $2838 = { (responsible $2839) ->
          $2840 = call $166 with $2818 ($951 is responsible)
          $2841 = call $151 with $186 $2840 ($951 is responsible)
          # Core:iterator:takeWhile:7:3:equals:then
          $2842 = { (responsible $2843) ->
            $2844 = call $165 with $2818 ($951 is responsible)
            $2845 = call $170 with $2844 ($951 is responsible)
            $2846 = call $151 with $183 $2845 ($951 is responsible)
            # Core:iterator:takeWhile:7:3:equals:then
            $2847 = { (responsible $2848) ->
              $2849 = call $164 with $2844 $1046 ($951 is responsible)
              # Core:iterator:takeWhile:7:3:hasKey:then
              $2850 = { (responsible $2851) ->
                $2852 = call $163 with $2844 $1046 ($951 is responsible)
                $2853 = ($178, $2852)
              }
              # Core:iterator:takeWhile:7:3:hasKey:else
              $2854 = { (responsible $2855) ->
                $2856 = call $169 with $2844 ($951 is responsible)
                $2857 = call $168 with $1063 $2856 ($951 is responsible)
                $2858 = call $168 with $2857 $209 ($951 is responsible)
                $2859 = ($180, $2858)
              }
              $2860 = call $153 with $2849 $2850 $2854 ($951 is responsible)
              $2861 = call $160 with $2860 $187 ($951 is responsible)
              $2862 = call $151 with $2861 $178 ($951 is responsible)
              # Core:iterator:takeWhile:7:3:isMatch:then
              $2863 = { (responsible $2864) ->
                $2865 = call $160 with $2860 $188 ($951 is responsible)
                $2866 = call $164 with $2844 $1051 ($951 is responsible)
                # Core:iterator:takeWhile:7:3:hasKey:then
                $2867 = { (responsible $2868) ->
                  $2869 = call $163 with $2844 $1051 ($951 is responsible)
                  $2870 = ($178, $2869)
                }
                # Core:iterator:takeWhile:7:3:hasKey:else
                $2871 = { (responsible $2872) ->
                  $2873 = call $169 with $2844 ($951 is responsible)
                  $2874 = call $168 with $1066 $2873 ($951 is responsible)
                  $2875 = call $168 with $2874 $209 ($951 is responsible)
                  $2876 = ($180, $2875)
                }
                $2877 = call $153 with $2866 $2867 $2871 ($951 is responsible)
                $2878 = call $160 with $2877 $187 ($951 is responsible)
                $2879 = call $151 with $2878 $178 ($951 is responsible)
                # Core:iterator:takeWhile:7:3:isMatch:then
                $2880 = { (responsible $2881) ->
                  $2882 = call $160 with $2877 $188 ($951 is responsible)
                  $2883 = ($178, $2865, $2882)
                }
                # Core:iterator:takeWhile:7:3:isMatch:else
                $2884 = { (responsible $2885) ->
                  $2886 = $2877
                }
                $2887 = call $153 with $2879 $2880 $2884 ($951 is responsible)
              }
              # Core:iterator:takeWhile:7:3:isMatch:else
              $2888 = { (responsible $2889) ->
                $2890 = $2860
              }
              $2891 = call $153 with $2862 $2863 $2888 ($951 is responsible)
            }
            # Core:iterator:takeWhile:7:3:equals:else
            $2892 = { (responsible $2893) ->
              $2894 = call $169 with $2845 ($951 is responsible)
              $2895 = call $168 with $202 $2894 ($951 is responsible)
              $2896 = call $168 with $2895 $209 ($951 is responsible)
              $2897 = ($180, $2896)
            }
            $2898 = call $153 with $2846 $2847 $2892 ($951 is responsible)
          }
          # Core:iterator:takeWhile:7:3:equals:else
          $2899 = { (responsible $2900) ->
            $2901 = call $169 with $2840 ($951 is responsible)
            $2902 = $762
          }
          $2903 = call $153 with $2841 $2842 $2899 ($951 is responsible)
        }
        # Core:iterator:takeWhile:7:3:equals:else
        $2904 = { (responsible $2905) ->
          $2906 = call $169 with $2836 ($951 is responsible)
          $2907 = call $168 with $1058 $2906 ($951 is responsible)
          $2908 = call $168 with $2907 $195 ($951 is responsible)
          $2909 = ($180, $2908)
        }
        $2910 = call $153 with $2837 $2838 $2904 ($951 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $2911 = { (responsible $2912) ->
        $2913 = call $169 with $2832 ($951 is responsible)
        $2914 = call $168 with $203 $2913 ($951 is responsible)
        $2915 = call $168 with $2914 $209 ($951 is responsible)
        $2916 = ($180, $2915)
      }
      $2917 = call $153 with $2833 $2834 $2911 ($951 is responsible)
      $2918 = call $160 with $2917 $187 ($951 is responsible)
      $2919 = call $151 with $2918 $178 ($951 is responsible)
      # Core:iterator:takeWhile:7:3:case-1:matched
      $2920 = { (responsible $2921) ->
        $2922 = call $160 with $2917 $188 ($954 is responsible)
        $2923 = call $160 with $2917 $189 ($955 is responsible)
        $2924 = call $2809 with $2922 ($952 is responsible)
        # Core:iterator:takeWhile:7:3:5
        $2925 = { (responsible $2926) ->
          $2927 = [$1046: $2922, $1052: $2923]
          $2928 = More $2927
        }
        $2929 = call $391 with $2924 $2925 $1335 ($953 is responsible)
      }
      # Core:iterator:takeWhile:7:3:case-1:didNotMatch
      $2930 = { (responsible $2931) ->
        $2932 = call $160 with $2917 $188 ($951 is responsible)
        $2933 = panicking because $205 ($951 is at fault)
      }
      $2934 = call $153 with $2919 $2920 $2930 ($951 is responsible)
    }
    $2935 = call $153 with $2828 $1335 $2829 ($951 is responsible)
  }
  $2936 = call $1581 with $2814 $2815 ($956 is responsible)
}
# Core:iterator:withIndex:2
$2937 = { (responsible $2938) ->
  $2939 = panicking because $1114 ($941 is at fault)
}
# Core:iterator:take:34
$2940 = { $2941 (+ responsible $2942) ->
  $2943 = call $170 with $2941 ($68 is responsible)
  $2944 = call $151 with $2943 $183 ($69 is responsible)
  $2945 = call $252 with $2944 $239 $947 ($59 is responsible)
  $2946 = call $164 with $2941 $1046 ($56 is responsible)
  $2947 = call $252 with $2946 $240 $947 ($57 is responsible)
  $2948 = call $163 with $2941 $1046 ($58 is responsible)
}
# Core:iterator:take
$2949 = { $2950 $2951 (+ responsible $2952) ->
  $2953 = call $170 with $2951 ($70 is responsible)
  $2954 = call $151 with $2953 $175 ($1 is responsible)
  $2955 = call $252 with $2954 $1090 $2952 ($937 is responsible)
  $2956 = call $751 with $2951 ($938 is responsible)
  $2957 = call $252 with $2956 $1094 $2952 ($939 is responsible)
  # Core:iterator:take:26
  $2958 = { (responsible $2959) ->
    $2960 = panicking because $1109 ($2952 is at fault)
  }
  $2961 = call $1338 with $2950 $2958 ($940 is responsible)
  $2962 = call $1338 with $2961 $2937 ($1001 is responsible)
  $2963 = [$1047: $2962, $1045: $187]
  $2964 = call $1581 with $2963 $1897 ($1000 is responsible)
  # Core:iterator:take:31
  $2965 = { $2966 (+ responsible $2967) ->
    $2968 = call $170 with $2966 ($942 is responsible)
    $2969 = call $151 with $183 $2968 ($942 is responsible)
    # Core:iterator:take:31:1:equals:then
    $2970 = { (responsible $2971) ->
      $2972 = call $164 with $2966 $1046 ($942 is responsible)
      # Core:iterator:take:31:1:hasKey:then
      $2973 = { (responsible $2974) ->
        $2975 = call $163 with $2966 $1046 ($942 is responsible)
        $2976 = ($178, $2975)
      }
      # Core:iterator:take:31:1:hasKey:else
      $2977 = { (responsible $2978) ->
        $2979 = call $169 with $2966 ($942 is responsible)
        $2980 = call $168 with $1063 $2979 ($942 is responsible)
        $2981 = call $168 with $2980 $209 ($942 is responsible)
        $2982 = ($180, $2981)
      }
      $2983 = call $153 with $2972 $2973 $2977 ($942 is responsible)
      $2984 = call $160 with $2983 $187 ($942 is responsible)
      $2985 = call $151 with $2984 $178 ($942 is responsible)
      # Core:iterator:take:31:1:isMatch:then
      $2986 = { (responsible $2987) ->
        $2988 = call $160 with $2983 $188 ($942 is responsible)
        $2989 = call $164 with $2966 $1045 ($942 is responsible)
        # Core:iterator:take:31:1:hasKey:then
        $2990 = { (responsible $2991) ->
          $2992 = call $163 with $2966 $1045 ($942 is responsible)
          $2993 = ($178, $2992)
        }
        # Core:iterator:take:31:1:hasKey:else
        $2994 = { (responsible $2995) ->
          $2996 = call $169 with $2966 ($942 is responsible)
          $2997 = call $168 with $1062 $2996 ($942 is responsible)
          $2998 = call $168 with $2997 $209 ($942 is responsible)
          $2999 = ($180, $2998)
        }
        $3000 = call $153 with $2989 $2990 $2994 ($942 is responsible)
        $3001 = call $160 with $3000 $187 ($942 is responsible)
        $3002 = call $151 with $3001 $178 ($942 is responsible)
        # Core:iterator:take:31:1:isMatch:then
        $3003 = { (responsible $3004) ->
          $3005 = call $160 with $3000 $188 ($942 is responsible)
          $3006 = ($178, $2988, $3005)
        }
        # Core:iterator:take:31:1:isMatch:else
        $3007 = { (responsible $3008) ->
          $3009 = $3000
        }
        $3010 = call $153 with $3002 $3003 $3007 ($942 is responsible)
      }
      # Core:iterator:take:31:1:isMatch:else
      $3011 = { (responsible $3012) ->
        $3013 = $2983
      }
      $3014 = call $153 with $2985 $2986 $3011 ($942 is responsible)
    }
    # Core:iterator:take:31:1:equals:else
    $3015 = { (responsible $3016) ->
      $3017 = call $169 with $2968 ($942 is responsible)
      $3018 = call $168 with $202 $3017 ($942 is responsible)
      $3019 = call $168 with $3018 $209 ($942 is responsible)
      $3020 = ($180, $3019)
    }
    $3021 = call $153 with $2969 $2970 $3015 ($942 is responsible)
    $3022 = call $160 with $3021 $187 ($942 is responsible)
    $3023 = call $151 with $3022 $178 ($942 is responsible)
    # Core:iterator:take:31:1:isMatch:else
    $3024 = { (responsible $3025) ->
      $3026 = call $160 with $3021 $188 ($942 is responsible)
      $3027 = panicking because $3026 ($942 is at fault)
    }
    $3028 = call $153 with $3023 $249 $3024 ($942 is responsible)
    $3029 = call $160 with $3021 $188 ($945 is responsible)
    $3030 = call $160 with $3021 $189 ($944 is responsible)
    $3031 = call $727 with $3030 $2951 ($943 is responsible)
  }
  $3032 = call $2807 with $2964 $2965 ($946 is responsible)
  $3033 = call $1768 with $3032 $2940 ($948 is responsible)
}
# Core:iterator:skip:30:6
$3034 = { $3035 $3036 (+ responsible $3037) ->
  $3038 = call $170 with $3036 ($920 is responsible)
  $3039 = call $151 with $183 $3038 ($920 is responsible)
  # Core:iterator:skip:30:6:1:equals:then
  $3040 = { (responsible $3041) ->
    $3042 = call $164 with $3036 $1047 ($920 is responsible)
    # Core:iterator:skip:30:6:1:hasKey:then
    $3043 = { (responsible $3044) ->
      $3045 = call $163 with $3036 $1047 ($920 is responsible)
      $3046 = ($178, $3045)
    }
    # Core:iterator:skip:30:6:1:hasKey:else
    $3047 = { (responsible $3048) ->
      $3049 = call $169 with $3036 ($920 is responsible)
      $3050 = call $168 with $1064 $3049 ($920 is responsible)
      $3051 = call $168 with $3050 $209 ($920 is responsible)
      $3052 = ($180, $3051)
    }
    $3053 = call $153 with $3042 $3043 $3047 ($920 is responsible)
    $3054 = call $160 with $3053 $187 ($920 is responsible)
    $3055 = call $151 with $3054 $178 ($920 is responsible)
    # Core:iterator:skip:30:6:1:isMatch:then
    $3056 = { (responsible $3057) ->
      $3058 = call $160 with $3053 $188 ($920 is responsible)
      $3059 = call $164 with $3036 $1049 ($920 is responsible)
      # Core:iterator:skip:30:6:1:hasKey:then
      $3060 = { (responsible $3061) ->
        $3062 = call $163 with $3036 $1049 ($920 is responsible)
        $3063 = ($178, $3062)
      }
      # Core:iterator:skip:30:6:1:hasKey:else
      $3064 = { (responsible $3065) ->
        $3066 = call $169 with $3036 ($920 is responsible)
        $3067 = call $168 with $1065 $3066 ($920 is responsible)
        $3068 = call $168 with $3067 $209 ($920 is responsible)
        $3069 = ($180, $3068)
      }
      $3070 = call $153 with $3059 $3060 $3064 ($920 is responsible)
      $3071 = call $160 with $3070 $187 ($920 is responsible)
      $3072 = call $151 with $3071 $178 ($920 is responsible)
      # Core:iterator:skip:30:6:1:isMatch:then
      $3073 = { (responsible $3074) ->
        $3075 = call $160 with $3070 $188 ($920 is responsible)
        $3076 = ($178, $3058, $3075)
      }
      # Core:iterator:skip:30:6:1:isMatch:else
      $3077 = { (responsible $3078) ->
        $3079 = $3070
      }
      $3080 = call $153 with $3072 $3073 $3077 ($920 is responsible)
    }
    # Core:iterator:skip:30:6:1:isMatch:else
    $3081 = { (responsible $3082) ->
      $3083 = $3053
    }
    $3084 = call $153 with $3055 $3056 $3081 ($920 is responsible)
  }
  # Core:iterator:skip:30:6:1:equals:else
  $3085 = { (responsible $3086) ->
    $3087 = call $169 with $3038 ($920 is responsible)
    $3088 = call $168 with $202 $3087 ($920 is responsible)
    $3089 = call $168 with $3088 $209 ($920 is responsible)
    $3090 = ($180, $3089)
  }
  $3091 = call $153 with $3039 $3040 $3085 ($920 is responsible)
  $3092 = call $160 with $3091 $187 ($920 is responsible)
  $3093 = call $151 with $3092 $178 ($920 is responsible)
  # Core:iterator:skip:30:6:1:isMatch:else
  $3094 = { (responsible $3095) ->
    $3096 = call $160 with $3091 $188 ($920 is responsible)
    $3097 = panicking because $3096 ($920 is at fault)
  }
  $3098 = call $153 with $3093 $249 $3094 ($920 is responsible)
  $3099 = call $160 with $3091 $188 ($928 is responsible)
  $3100 = call $160 with $3091 $189 ($929 is responsible)
  $3101 = call $151 with $3100 $187 ($1 is responsible)
  # Core:iterator:skip:30:6:7
  $3102 = { (responsible $3103) ->
    $3104 = call $1532 with $3099 ($921 is responsible)
  }
  # Core:iterator:skip:30:6:8
  $3105 = { (responsible $3106) ->
    $3107 = call $1532 with $3099 ($922 is responsible)
    $3108 = call $151 with $1043 $3107 ($923 is responsible)
    # Core:iterator:skip:30:6:8:3:equals:else
    $3109 = { (responsible $3110) ->
      $3111 = call $169 with $3107 ($923 is responsible)
      $3112 = call $168 with $1060 $3111 ($923 is responsible)
      $3113 = call $168 with $3112 $209 ($923 is responsible)
      $3114 = ($180, $3113)
    }
    $3115 = call $153 with $3108 $277 $3109 ($923 is responsible)
    $3116 = call $160 with $3115 $187 ($923 is responsible)
    $3117 = call $151 with $3116 $178 ($923 is responsible)
    # Core:iterator:skip:30:6:8:3:case-0:didNotMatch
    $3118 = { (responsible $3119) ->
      $3120 = call $160 with $3115 $188 ($923 is responsible)
      $3121 = call $170 with $3107 ($923 is responsible)
      $3122 = call $151 with $184 $3121 ($923 is responsible)
      # Core:iterator:skip:30:6:8:3:equals:then
      $3123 = { (responsible $3124) ->
        $3125 = call $167 with $3107 ($923 is responsible)
        $3126 = call $151 with $1048 $3125 ($923 is responsible)
        # Core:iterator:skip:30:6:8:3:equals:then
        $3127 = { (responsible $3128) ->
          $3129 = call $166 with $3107 ($923 is responsible)
          $3130 = call $151 with $186 $3129 ($923 is responsible)
          # Core:iterator:skip:30:6:8:3:equals:then
          $3131 = { (responsible $3132) ->
            $3133 = call $165 with $3107 ($923 is responsible)
            $3134 = call $170 with $3133 ($923 is responsible)
            $3135 = call $151 with $183 $3134 ($923 is responsible)
            # Core:iterator:skip:30:6:8:3:equals:then
            $3136 = { (responsible $3137) ->
              $3138 = call $164 with $3133 $1051 ($923 is responsible)
              # Core:iterator:skip:30:6:8:3:hasKey:then
              $3139 = { (responsible $3140) ->
                $3141 = call $163 with $3133 $1051 ($923 is responsible)
                $3142 = ($178, $3141)
              }
              # Core:iterator:skip:30:6:8:3:hasKey:else
              $3143 = { (responsible $3144) ->
                $3145 = call $169 with $3133 ($923 is responsible)
                $3146 = call $168 with $1066 $3145 ($923 is responsible)
                $3147 = call $168 with $3146 $209 ($923 is responsible)
                $3148 = ($180, $3147)
              }
              $3149 = call $153 with $3138 $3139 $3143 ($923 is responsible)
              $3150 = call $160 with $3149 $187 ($923 is responsible)
              $3151 = call $151 with $3150 $178 ($923 is responsible)
              # Core:iterator:skip:30:6:8:3:isMatch:then
              $3152 = { (responsible $3153) ->
                $3154 = call $160 with $3149 $188 ($923 is responsible)
                $3155 = ($178, $3154)
              }
              # Core:iterator:skip:30:6:8:3:isMatch:else
              $3156 = { (responsible $3157) ->
                $3158 = $3149
              }
              $3159 = call $153 with $3151 $3152 $3156 ($923 is responsible)
            }
            # Core:iterator:skip:30:6:8:3:equals:else
            $3160 = { (responsible $3161) ->
              $3162 = call $169 with $3134 ($923 is responsible)
              $3163 = call $168 with $202 $3162 ($923 is responsible)
              $3164 = call $168 with $3163 $209 ($923 is responsible)
              $3165 = ($180, $3164)
            }
            $3166 = call $153 with $3135 $3136 $3160 ($923 is responsible)
          }
          # Core:iterator:skip:30:6:8:3:equals:else
          $3167 = { (responsible $3168) ->
            $3169 = call $169 with $3129 ($923 is responsible)
            $3170 = $762
          }
          $3171 = call $153 with $3130 $3131 $3167 ($923 is responsible)
        }
        # Core:iterator:skip:30:6:8:3:equals:else
        $3172 = { (responsible $3173) ->
          $3174 = call $169 with $3125 ($923 is responsible)
          $3175 = call $168 with $1058 $3174 ($923 is responsible)
          $3176 = call $168 with $3175 $195 ($923 is responsible)
          $3177 = ($180, $3176)
        }
        $3178 = call $153 with $3126 $3127 $3172 ($923 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:equals:else
      $3179 = { (responsible $3180) ->
        $3181 = call $169 with $3121 ($923 is responsible)
        $3182 = call $168 with $203 $3181 ($923 is responsible)
        $3183 = call $168 with $3182 $209 ($923 is responsible)
        $3184 = ($180, $3183)
      }
      $3185 = call $153 with $3122 $3123 $3179 ($923 is responsible)
      $3186 = call $160 with $3185 $187 ($923 is responsible)
      $3187 = call $151 with $3186 $178 ($923 is responsible)
      # Core:iterator:skip:30:6:8:3:case-1:matched
      $3188 = { (responsible $3189) ->
        $3190 = call $160 with $3185 $188 ($926 is responsible)
        $3191 = call $170 with $3100 ($68 is responsible)
        $3192 = call $151 with $3191 $175 ($69 is responsible)
        $3193 = call $252 with $3192 $238 $924 ($30 is responsible)
        $3194 = call $159 with $3100 $188 ($29 is responsible)
        $3195 = [$1049: $3194, $1047: $3190]
        $3196 = call $3035 with $3195 ($925 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:case-1:didNotMatch
      $3197 = { (responsible $3198) ->
        $3199 = call $160 with $3185 $188 ($923 is responsible)
        $3200 = panicking because $205 ($923 is at fault)
      }
      $3201 = call $153 with $3187 $3188 $3197 ($923 is responsible)
    }
    $3202 = call $153 with $3117 $1335 $3118 ($923 is responsible)
  }
  $3203 = call $391 with $3101 $3102 $3105 ($927 is responsible)
}
# Core:controlFlow:recursive:18
$3204 = { $3205 $3206 (+ responsible $3207) ->
  # Core:controlFlow:recursive:18:0
  $3208 = { $3209 (+ responsible $3210) ->
    $3211 = call $3205 with $3205 $3209 ($120 is responsible)
  }
  $3212 = call $3034 with $3208 $3206 ($121 is responsible)
}
# Core:iterator:skip
$3213 = { $3214 $3215 (+ responsible $3216) ->
  # Core:iterator:skip:2
  $3217 = { (responsible $3218) ->
    $3219 = panicking because $1106 ($3216 is at fault)
  }
  $3220 = call $1338 with $3214 $3217 ($919 is responsible)
  $3221 = call $170 with $3215 ($70 is responsible)
  $3222 = call $151 with $3221 $175 ($1 is responsible)
  $3223 = call $252 with $3222 $1090 $3216 ($916 is responsible)
  $3224 = call $751 with $3215 ($917 is responsible)
  $3225 = call $252 with $3224 $1094 $3216 ($918 is responsible)
  # Core:iterator:skip:30
  $3226 = { (responsible $3227) ->
    $3228 = [$1047: $3220, $1049: $3215]
    $3229 = call $697 with $3034 ($123 is responsible)
    $3230 = call $252 with $3229 $206 $930 ($119 is responsible)
    $3231 = call $3204 with $3204 $3228 ($122 is responsible)
  }
  $3232 = Iterator $3226
}
# Core:iterator:fromList
$3233 = { $3234 (+ responsible $3235) ->
  $3236 = call $170 with $3234 ($70 is responsible)
  $3237 = call $151 with $3236 $177 ($1 is responsible)
  $3238 = call $252 with $3237 $1102 $3235 ($856 is responsible)
  $3239 = call $170 with $3234 ($68 is responsible)
  $3240 = call $151 with $3239 $177 ($69 is responsible)
  $3241 = call $252 with $3240 $237 $857 ($55 is responsible)
  $3242 = call $162 with $3234 ($54 is responsible)
  # Core:iterator:fromList:23
  $3243 = { $3244 (+ responsible $3245) ->
    $3246 = call $447 with $3234 $3244 ($858 is responsible)
  }
  $3247 = call $1735 with $3242 $3243 ($859 is responsible)
}
$3248 = (,)
# Core:iterator:toList:6
$3249 = { $3250 $3251 (+ responsible $3252) ->
  $3253 = call $1323 with $3250 $3251 ($958 is responsible)
}
# Core:iterator:toList:2
$3254 = { (responsible $3255) ->
  $3256 = panicking because $1111 ($990 is at fault)
}
# Core:iterator:windowed
$3257 = { $3258 $3259 $3260 $3261 (+ responsible $3262) ->
  # Core:iterator:windowed:2
  $3263 = { (responsible $3264) ->
    $3265 = panicking because $1113 ($3262 is at fault)
  }
  $3266 = call $1338 with $3258 $3263 ($979 is responsible)
  $3267 = call $170 with $3259 ($70 is responsible)
  $3268 = call $151 with $3267 $175 ($1 is responsible)
  $3269 = call $252 with $3268 $1091 $3262 ($976 is responsible)
  $3270 = call $170 with $3259 ($70 is responsible)
  $3271 = call $151 with $3270 $175 ($1 is responsible)
  $3272 = call $252 with $3271 $234 $977 ($801 is responsible)
  $3273 = call $739 with $3259 $187 ($802 is responsible)
  $3274 = call $252 with $3273 $1095 $3262 ($978 is responsible)
  $3275 = call $170 with $3260 ($70 is responsible)
  $3276 = call $151 with $3275 $175 ($1 is responsible)
  $3277 = call $252 with $3276 $1092 $3262 ($980 is responsible)
  $3278 = call $170 with $3260 ($70 is responsible)
  $3279 = call $151 with $3278 $175 ($1 is responsible)
  $3280 = call $252 with $3279 $234 $981 ($801 is responsible)
  $3281 = call $739 with $3260 $187 ($802 is responsible)
  $3282 = call $252 with $3281 $1096 $3262 ($982 is responsible)
  $3283 = call $513 with $3261 ($983 is responsible)
  $3284 = call $252 with $3283 $1074 $3262 ($984 is responsible)
  # Core:iterator:windowed:67
  $3285 = { $3286 (+ responsible $3287) ->
    $3288 = call $2949 with $3286 $3259 ($989 is responsible)
    $3289 = call $1338 with $3288 $3254 ($957 is responsible)
    $3290 = call $2100 with $3289 $3248 $3249 ($959 is responsible)
    $3291 = call $170 with $3290 ($68 is responsible)
    $3292 = call $151 with $3291 $177 ($69 is responsible)
    $3293 = call $252 with $3292 $237 $985 ($55 is responsible)
    $3294 = call $162 with $3290 ($54 is responsible)
    # Core:iterator:windowed:67:20
    $3295 = { (responsible $3296) ->
      $3297 = call $739 with $3294 $187 ($802 is responsible)
    }
    # Core:iterator:windowed:67:21
    $3298 = { (responsible $3299) ->
      $3300 = call $151 with $3294 $3259 ($1 is responsible)
    }
    $3301 = call $391 with $3261 $3295 $3298 ($986 is responsible)
    # Core:iterator:windowed:67:26
    $3302 = { (responsible $3303) ->
      $3304 = call $3213 with $3286 $3260 ($987 is responsible)
      $3305 = [$1046: $3290, $1052: $3304]
      $3306 = More $3305
    }
    $3307 = call $391 with $3301 $3302 $1335 ($988 is responsible)
  }
  $3308 = call $1581 with $3266 $3285 ($991 is responsible)
}
# Core:iterator:chunked
$3309 = { $3310 $3311 (+ responsible $3312) ->
  $3313 = call $170 with $3311 ($70 is responsible)
  $3314 = call $151 with $3313 $175 ($1 is responsible)
  $3315 = call $252 with $3314 $1091 $3312 ($833 is responsible)
  $3316 = call $170 with $3311 ($70 is responsible)
  $3317 = call $151 with $3316 $175 ($1 is responsible)
  $3318 = call $252 with $3317 $234 $834 ($801 is responsible)
  $3319 = call $739 with $3311 $187 ($802 is responsible)
  $3320 = call $252 with $3319 $1095 $3312 ($835 is responsible)
  # Core:iterator:chunked:26
  $3321 = { (responsible $3322) ->
    $3323 = panicking because $1076 ($3312 is at fault)
  }
  $3324 = call $1338 with $3310 $3321 ($836 is responsible)
  $3325 = call $3257 with $3324 $3311 $3311 $186 ($837 is responsible)
}
$3326 = ($188, $189, $190)
$3327 = call $3233 with $3326 ($816 is responsible)
$3328 = 6
$3329 = 7
$3330 = 8
$3331 = 9
$3332 = ($188, $189, $190, $191, $192, $3328, $3329, $3330, $3331, $193)
$3333 = Core:iterator:123
$3334 = call $3233 with $3332 ($3333 is responsible)
$3335 = Core:iterator:127
$3336 = call $1532 with $3327 ($3335 is responsible)
$3337 = Core:iterator:128
$3338 = call $170 with $3336 ($3337 is responsible)
$3339 = call $151 with $184 $3338 ($3337 is responsible)
# Core:iterator:128:equals:then
$3340 = { (responsible $3341) ->
  $3342 = call $167 with $3336 ($3337 is responsible)
  $3343 = call $151 with $1048 $3342 ($3337 is responsible)
  # Core:iterator:128:equals:then
  $3344 = { (responsible $3345) ->
    $3346 = call $166 with $3336 ($3337 is responsible)
    $3347 = call $151 with $186 $3346 ($3337 is responsible)
    # Core:iterator:128:equals:then
    $3348 = { (responsible $3349) ->
      $3350 = call $165 with $3336 ($3337 is responsible)
      $3351 = call $170 with $3350 ($3337 is responsible)
      $3352 = call $151 with $183 $3351 ($3337 is responsible)
      # Core:iterator:128:equals:then
      $3353 = { (responsible $3354) ->
        $3355 = call $164 with $3350 $1046 ($3337 is responsible)
        # Core:iterator:128:hasKey:then
        $3356 = { (responsible $3357) ->
          $3358 = call $163 with $3350 $1046 ($3337 is responsible)
          $3359 = ($178, $3358)
        }
        # Core:iterator:128:hasKey:else
        $3360 = { (responsible $3361) ->
          $3362 = call $169 with $3350 ($3337 is responsible)
          $3363 = call $168 with $1063 $3362 ($3337 is responsible)
          $3364 = call $168 with $3363 $209 ($3337 is responsible)
          $3365 = ($180, $3364)
        }
        $3366 = call $153 with $3355 $3356 $3360 ($3337 is responsible)
        $3367 = call $160 with $3366 $187 ($3337 is responsible)
        $3368 = call $151 with $3367 $178 ($3337 is responsible)
        # Core:iterator:128:isMatch:then
        $3369 = { (responsible $3370) ->
          $3371 = call $160 with $3366 $188 ($3337 is responsible)
          $3372 = call $164 with $3350 $1051 ($3337 is responsible)
          # Core:iterator:128:hasKey:then
          $3373 = { (responsible $3374) ->
            $3375 = call $163 with $3350 $1051 ($3337 is responsible)
            $3376 = ($178, $3375)
          }
          # Core:iterator:128:hasKey:else
          $3377 = { (responsible $3378) ->
            $3379 = call $169 with $3350 ($3337 is responsible)
            $3380 = call $168 with $1066 $3379 ($3337 is responsible)
            $3381 = call $168 with $3380 $209 ($3337 is responsible)
            $3382 = ($180, $3381)
          }
          $3383 = call $153 with $3372 $3373 $3377 ($3337 is responsible)
          $3384 = call $160 with $3383 $187 ($3337 is responsible)
          $3385 = call $151 with $3384 $178 ($3337 is responsible)
          # Core:iterator:128:isMatch:then
          $3386 = { (responsible $3387) ->
            $3388 = call $160 with $3383 $188 ($3337 is responsible)
            $3389 = ($178, $3371, $3388)
          }
          # Core:iterator:128:isMatch:else
          $3390 = { (responsible $3391) ->
            $3392 = $3383
          }
          $3393 = call $153 with $3385 $3386 $3390 ($3337 is responsible)
        }
        # Core:iterator:128:isMatch:else
        $3394 = { (responsible $3395) ->
          $3396 = $3366
        }
        $3397 = call $153 with $3368 $3369 $3394 ($3337 is responsible)
      }
      # Core:iterator:128:equals:else
      $3398 = { (responsible $3399) ->
        $3400 = call $169 with $3351 ($3337 is responsible)
        $3401 = call $168 with $202 $3400 ($3337 is responsible)
        $3402 = call $168 with $3401 $209 ($3337 is responsible)
        $3403 = ($180, $3402)
      }
      $3404 = call $153 with $3352 $3353 $3398 ($3337 is responsible)
    }
    # Core:iterator:128:equals:else
    $3405 = { (responsible $3406) ->
      $3407 = call $169 with $3346 ($3337 is responsible)
      $3408 = $762
    }
    $3409 = call $153 with $3347 $3348 $3405 ($3337 is responsible)
  }
  # Core:iterator:128:equals:else
  $3410 = { (responsible $3411) ->
    $3412 = call $169 with $3342 ($3337 is responsible)
    $3413 = call $168 with $1058 $3412 ($3337 is responsible)
    $3414 = call $168 with $3413 $195 ($3337 is responsible)
    $3415 = ($180, $3414)
  }
  $3416 = call $153 with $3343 $3344 $3410 ($3337 is responsible)
}
# Core:iterator:128:equals:else
$3417 = { (responsible $3418) ->
  $3419 = call $169 with $3338 ($3337 is responsible)
  $3420 = call $168 with $203 $3419 ($3337 is responsible)
  $3421 = call $168 with $3420 $209 ($3337 is responsible)
  $3422 = ($180, $3421)
}
$3423 = call $153 with $3339 $3340 $3417 ($3337 is responsible)
$3424 = call $160 with $3423 $187 ($3337 is responsible)
$3425 = call $151 with $3424 $178 ($3337 is responsible)
# Core:iterator:128:isMatch:else
$3426 = { (responsible $3427) ->
  $3428 = call $160 with $3423 $188 ($3337 is responsible)
  $3429 = panicking because $3428 ($3337 is at fault)
}
$3430 = call $153 with $3425 $249 $3426 ($3337 is responsible)
$3431 = Core:iterator:item
$3432 = call $160 with $3423 $188 ($3431 is responsible)
$3433 = Core:iterator:rest
$3434 = call $160 with $3423 $189 ($3433 is responsible)
$3435 = Core:iterator:133
$3436 = call $669 with $3432 $188 ($3435 is responsible)
$3437 = Core:iterator:136
$3438 = call $1532 with $3434 ($3437 is responsible)
$3439 = Core:iterator:137
$3440 = call $170 with $3438 ($3439 is responsible)
$3441 = call $151 with $184 $3440 ($3439 is responsible)
# Core:iterator:137:equals:then
$3442 = { (responsible $3443) ->
  $3444 = call $167 with $3438 ($3439 is responsible)
  $3445 = call $151 with $1048 $3444 ($3439 is responsible)
  # Core:iterator:137:equals:then
  $3446 = { (responsible $3447) ->
    $3448 = call $166 with $3438 ($3439 is responsible)
    $3449 = call $151 with $186 $3448 ($3439 is responsible)
    # Core:iterator:137:equals:then
    $3450 = { (responsible $3451) ->
      $3452 = call $165 with $3438 ($3439 is responsible)
      $3453 = call $170 with $3452 ($3439 is responsible)
      $3454 = call $151 with $183 $3453 ($3439 is responsible)
      # Core:iterator:137:equals:then
      $3455 = { (responsible $3456) ->
        $3457 = call $164 with $3452 $1046 ($3439 is responsible)
        # Core:iterator:137:hasKey:then
        $3458 = { (responsible $3459) ->
          $3460 = call $163 with $3452 $1046 ($3439 is responsible)
          $3461 = ($178, $3460)
        }
        # Core:iterator:137:hasKey:else
        $3462 = { (responsible $3463) ->
          $3464 = call $169 with $3452 ($3439 is responsible)
          $3465 = call $168 with $1063 $3464 ($3439 is responsible)
          $3466 = call $168 with $3465 $209 ($3439 is responsible)
          $3467 = ($180, $3466)
        }
        $3468 = call $153 with $3457 $3458 $3462 ($3439 is responsible)
        $3469 = call $160 with $3468 $187 ($3439 is responsible)
        $3470 = call $151 with $3469 $178 ($3439 is responsible)
        # Core:iterator:137:isMatch:then
        $3471 = { (responsible $3472) ->
          $3473 = call $160 with $3468 $188 ($3439 is responsible)
          $3474 = call $164 with $3452 $1051 ($3439 is responsible)
          # Core:iterator:137:hasKey:then
          $3475 = { (responsible $3476) ->
            $3477 = call $163 with $3452 $1051 ($3439 is responsible)
            $3478 = ($178, $3477)
          }
          # Core:iterator:137:hasKey:else
          $3479 = { (responsible $3480) ->
            $3481 = call $169 with $3452 ($3439 is responsible)
            $3482 = call $168 with $1066 $3481 ($3439 is responsible)
            $3483 = call $168 with $3482 $209 ($3439 is responsible)
            $3484 = ($180, $3483)
          }
          $3485 = call $153 with $3474 $3475 $3479 ($3439 is responsible)
          $3486 = call $160 with $3485 $187 ($3439 is responsible)
          $3487 = call $151 with $3486 $178 ($3439 is responsible)
          # Core:iterator:137:isMatch:then
          $3488 = { (responsible $3489) ->
            $3490 = call $160 with $3485 $188 ($3439 is responsible)
            $3491 = ($178, $3473, $3490)
          }
          # Core:iterator:137:isMatch:else
          $3492 = { (responsible $3493) ->
            $3494 = $3485
          }
          $3495 = call $153 with $3487 $3488 $3492 ($3439 is responsible)
        }
        # Core:iterator:137:isMatch:else
        $3496 = { (responsible $3497) ->
          $3498 = $3468
        }
        $3499 = call $153 with $3470 $3471 $3496 ($3439 is responsible)
      }
      # Core:iterator:137:equals:else
      $3500 = { (responsible $3501) ->
        $3502 = call $169 with $3453 ($3439 is responsible)
        $3503 = call $168 with $202 $3502 ($3439 is responsible)
        $3504 = call $168 with $3503 $209 ($3439 is responsible)
        $3505 = ($180, $3504)
      }
      $3506 = call $153 with $3454 $3455 $3500 ($3439 is responsible)
    }
    # Core:iterator:137:equals:else
    $3507 = { (responsible $3508) ->
      $3509 = call $169 with $3448 ($3439 is responsible)
      $3510 = $762
    }
    $3511 = call $153 with $3449 $3450 $3507 ($3439 is responsible)
  }
  # Core:iterator:137:equals:else
  $3512 = { (responsible $3513) ->
    $3514 = call $169 with $3444 ($3439 is responsible)
    $3515 = call $168 with $1058 $3514 ($3439 is responsible)
    $3516 = call $168 with $3515 $195 ($3439 is responsible)
    $3517 = ($180, $3516)
  }
  $3518 = call $153 with $3445 $3446 $3512 ($3439 is responsible)
}
# Core:iterator:137:equals:else
$3519 = { (responsible $3520) ->
  $3521 = call $169 with $3440 ($3439 is responsible)
  $3522 = call $168 with $203 $3521 ($3439 is responsible)
  $3523 = call $168 with $3522 $209 ($3439 is responsible)
  $3524 = ($180, $3523)
}
$3525 = call $153 with $3441 $3442 $3519 ($3439 is responsible)
$3526 = call $160 with $3525 $187 ($3439 is responsible)
$3527 = call $151 with $3526 $178 ($3439 is responsible)
# Core:iterator:137:isMatch:else
$3528 = { (responsible $3529) ->
  $3530 = call $160 with $3525 $188 ($3439 is responsible)
  $3531 = panicking because $3530 ($3439 is at fault)
}
$3532 = call $153 with $3527 $249 $3528 ($3439 is responsible)
$3533 = Core:iterator:item#1
$3534 = call $160 with $3525 $188 ($3533 is responsible)
$3535 = Core:iterator:rest#1
$3536 = call $160 with $3525 $189 ($3535 is responsible)
$3537 = Core:iterator:142
$3538 = call $669 with $3534 $189 ($3537 is responsible)
$3539 = Core:iterator:147
# Core:iterator:isEmpty:2
$3540 = { (responsible $3541) ->
  $3542 = panicking because $1099 ($3539 is at fault)
}
$3543 = call $1338 with $3327 $3540 ($886 is responsible)
$3544 = call $1532 with $3543 ($887 is responsible)
$3545 = call $151 with $3544 $1043 ($1 is responsible)
$3546 = Core:iterator:149
$3547 = call $669 with $3545 $172 ($3546 is responsible)
$3548 = Core:iterator:154
$3549 = call $3233 with $3248 ($3548 is responsible)
$3550 = Core:iterator:155
# Core:iterator:isEmpty:2
$3551 = { (responsible $3552) ->
  $3553 = panicking because $1099 ($3550 is at fault)
}
$3554 = call $1338 with $3549 $3551 ($886 is responsible)
$3555 = call $1532 with $3554 ($887 is responsible)
$3556 = call $151 with $3555 $1043 ($1 is responsible)
$3557 = Core:iterator:157
$3558 = call $669 with $3556 $186 ($3557 is responsible)
$3559 = Core:iterator:161:10
# Core:iterator:161
$3560 = { $3561 (+ responsible $3562) ->
  $3563 = call $170 with $3561 ($68 is responsible)
  $3564 = call $151 with $3563 $175 ($69 is responsible)
  $3565 = call $252 with $3564 $219 $3559 ($26 is responsible)
  $3566 = call $157 with $3561 $189 ($25 is responsible)
}
$3567 = Core:iterator:162
$3568 = call $1768 with $3327 $3560 ($3567 is responsible)
$3569 = Core:iterator:164
# Core:iterator:toList:2
$3570 = { (responsible $3571) ->
  $3572 = panicking because $1111 ($3569 is at fault)
}
$3573 = call $1338 with $3568 $3570 ($957 is responsible)
$3574 = call $2100 with $3573 $3248 $3249 ($959 is responsible)
$3575 = ($189, $191, $3328)
$3576 = Core:iterator:169
$3577 = call $669 with $3574 $3575 ($3576 is responsible)
$3578 = Core:iterator:173
$3579 = call $2448 with $3327 ($3578 is responsible)
$3580 = Core:iterator:175
$3581 = call $669 with $3579 $3328 ($3580 is responsible)
$3582 = Core:iterator:179
# Core:iterator:length:2
$3583 = { (responsible $3584) ->
  $3585 = panicking because $1101 ($3582 is at fault)
}
$3586 = call $1338 with $3327 $3583 ($892 is responsible)
$3587 = call $1768 with $3586 $2464 ($893 is responsible)
$3588 = call $2448 with $3587 ($894 is responsible)
$3589 = Core:iterator:181
$3590 = call $669 with $3588 $190 ($3589 is responsible)
$3591 = Core:iterator:185:9
# Core:iterator:185
$3592 = { $3593 (+ responsible $3594) ->
  $3595 = call $170 with $3593 ($70 is responsible)
  $3596 = call $151 with $3595 $175 ($1 is responsible)
  $3597 = call $252 with $3596 $234 $3591 ($801 is responsible)
  $3598 = call $739 with $3593 $187 ($802 is responsible)
}
$3599 = Core:iterator:186
$3600 = call $2468 with $3327 $3592 ($3599 is responsible)
$3601 = Core:iterator:188
$3602 = call $669 with $3600 $186 ($3601 is responsible)
# Core:iterator:192
$3603 = { $3604 (+ responsible $3605) ->
  $3606 = call $151 with $3604 $189 ($1 is responsible)
}
$3607 = Core:iterator:193
$3608 = call $2494 with $3327 $3603 ($3607 is responsible)
$3609 = Core:iterator:195
$3610 = call $669 with $3608 $186 ($3609 is responsible)
$3611 = Core:iterator:200
$3612 = call $1768 with $3327 $484 ($3611 is responsible)
$3613 = Core:iterator:202
$3614 = call $2520 with $3612 ($3613 is responsible)
$3615 = "123"
$3616 = Core:iterator:210
$3617 = call $669 with $3614 $3615 ($3616 is responsible)
$3618 = Core:iterator:214:9
# Core:iterator:214
$3619 = { $3620 (+ responsible $3621) ->
  $3622 = call $805 with $3620 ($3618 is responsible)
}
$3623 = Core:iterator:215
$3624 = call $2542 with $3334 $3619 ($3623 is responsible)
$3625 = Core:iterator:217
# Core:iterator:toList:2
$3626 = { (responsible $3627) ->
  $3628 = panicking because $1111 ($3625 is at fault)
}
$3629 = call $1338 with $3624 $3626 ($957 is responsible)
$3630 = call $2100 with $3629 $3248 $3249 ($959 is responsible)
$3631 = ($188, $190, $192, $3329, $3331)
$3632 = Core:iterator:224
$3633 = call $669 with $3630 $3631 ($3632 is responsible)
$3634 = Core:iterator:228:10
# Core:iterator:228
$3635 = { $3636 (+ responsible $3637) ->
  $3638 = call $727 with $3636 $191 ($3634 is responsible)
}
$3639 = Core:iterator:229
$3640 = call $2807 with $3334 $3635 ($3639 is responsible)
$3641 = Core:iterator:231
# Core:iterator:toList:2
$3642 = { (responsible $3643) ->
  $3644 = panicking because $1111 ($3641 is at fault)
}
$3645 = call $1338 with $3640 $3642 ($957 is responsible)
$3646 = call $2100 with $3645 $3248 $3249 ($959 is responsible)
$3647 = Core:iterator:236
$3648 = call $669 with $3646 $3326 ($3647 is responsible)
$3649 = Core:iterator:241
$3650 = call $2949 with $3334 $191 ($3649 is responsible)
$3651 = Core:iterator:243
# Core:iterator:toList:2
$3652 = { (responsible $3653) ->
  $3654 = panicking because $1111 ($3651 is at fault)
}
$3655 = call $1338 with $3650 $3652 ($957 is responsible)
$3656 = call $2100 with $3655 $3248 $3249 ($959 is responsible)
$3657 = ($188, $189, $190, $191)
$3658 = Core:iterator:249
$3659 = call $669 with $3656 $3657 ($3658 is responsible)
$3660 = 12
$3661 = Core:iterator:254
$3662 = call $2949 with $3334 $3660 ($3661 is responsible)
$3663 = Core:iterator:256
# Core:iterator:toList:2
$3664 = { (responsible $3665) ->
  $3666 = panicking because $1111 ($3663 is at fault)
}
$3667 = call $1338 with $3662 $3664 ($957 is responsible)
$3668 = call $2100 with $3667 $3248 $3249 ($959 is responsible)
$3669 = Core:iterator:268
$3670 = call $669 with $3668 $3332 ($3669 is responsible)
$3671 = Core:iterator:273
$3672 = call $3213 with $3334 $191 ($3671 is responsible)
$3673 = Core:iterator:275
# Core:iterator:toList:2
$3674 = { (responsible $3675) ->
  $3676 = panicking because $1111 ($3673 is at fault)
}
$3677 = call $1338 with $3672 $3674 ($957 is responsible)
$3678 = call $2100 with $3677 $3248 $3249 ($959 is responsible)
$3679 = ($192, $3328, $3329, $3330, $3331, $193)
$3680 = Core:iterator:283
$3681 = call $669 with $3678 $3679 ($3680 is responsible)
$3682 = 40
$3683 = Core:iterator:288
$3684 = call $3213 with $3334 $3682 ($3683 is responsible)
$3685 = Core:iterator:290
# Core:iterator:toList:2
$3686 = { (responsible $3687) ->
  $3688 = panicking because $1111 ($3685 is at fault)
}
$3689 = call $1338 with $3684 $3686 ($957 is responsible)
$3690 = call $2100 with $3689 $3248 $3249 ($959 is responsible)
$3691 = Core:iterator:292
$3692 = call $669 with $3690 $3248 ($3691 is responsible)
$3693 = Core:iterator:299
$3694 = call $3257 with $3334 $191 $190 $172 ($3693 is responsible)
$3695 = Core:iterator:301
# Core:iterator:toList:2
$3696 = { (responsible $3697) ->
  $3698 = panicking because $1111 ($3695 is at fault)
}
$3699 = call $1338 with $3694 $3696 ($957 is responsible)
$3700 = call $2100 with $3699 $3248 $3249 ($959 is responsible)
$3701 = ($191, $192, $3328, $3329)
$3702 = ($3329, $3330, $3331, $193)
$3703 = ($3657, $3701, $3702)
$3704 = Core:iterator:318
$3705 = call $669 with $3700 $3703 ($3704 is responsible)
$3706 = Core:iterator:323
$3707 = call $3309 with $3334 $190 ($3706 is responsible)
$3708 = Core:iterator:325
# Core:iterator:toList:2
$3709 = { (responsible $3710) ->
  $3711 = panicking because $1111 ($3708 is at fault)
}
$3712 = call $1338 with $3707 $3709 ($957 is responsible)
$3713 = call $2100 with $3712 $3248 $3249 ($959 is responsible)
$3714 = ($191, $192, $3328)
$3715 = ($3329, $3330, $3331)
$3716 = ($193,)
$3717 = ($3326, $3714, $3715, $3716)
$3718 = Core:iterator:341
$3719 = call $669 with $3713 $3717 ($3718 is responsible)
$3720 = Core:result:flatMap:14
$3721 = Core:result:flatMap:16
$3722 = Core:result:flatMap:19:2
$3723 = Core:result:flatMap:2
$3724 = Core:result:flatMap:21
$3725 = Core:result:flatMap:4
$3726 = Core:result:getValue:14
$3727 = Core:result:getValue:2
$3728 = Core:result:getValue:4
$3729 = Core:result:map:14
$3730 = Core:result:map:16
$3731 = Core:result:map:19:3
$3732 = Core:result:map:2
$3733 = Core:result:map:20
$3734 = Core:result:map:4
$3735 = Core:result:mapOr:14
$3736 = Core:result:mapOr:16
$3737 = Core:result:mapOr:2
$3738 = Core:result:mapOr:21
$3739 = Core:result:mapOr:4
$3740 = "Expected 1 item, got "
$3741 = "Expected a List, got `"
# Core:result:getValue
$3742 = { $3743 (+ responsible $3744) ->
  $3745 = call $1115 with $3743 ($3727 is responsible)
  $3746 = call $252 with $3745 $1098 $3744 ($3728 is responsible)
  $3747 = call $170 with $3743 ($68 is responsible)
  $3748 = call $151 with $3747 $184 ($69 is responsible)
  $3749 = call $252 with $3748 $241 $3726 ($63 is responsible)
  $3750 = call $166 with $3743 ($60 is responsible)
  $3751 = call $252 with $3750 $242 $3726 ($61 is responsible)
  $3752 = call $165 with $3743 ($62 is responsible)
}
# Core:result:flatMap
$3753 = { $3754 $3755 (+ responsible $3756) ->
  $3757 = call $1115 with $3754 ($3723 is responsible)
  $3758 = call $252 with $3757 $1098 $3756 ($3725 is responsible)
  $3759 = call $782 with $3755 ($3720 is responsible)
  $3760 = call $252 with $3759 $1084 $3756 ($3721 is responsible)
  # Core:result:flatMap:19
  $3761 = { $3762 (+ responsible $3763) ->
    $3764 = call $3755 with $3762 ($3722 is responsible)
  }
  $3765 = call $1115 with $3754 ($3737 is responsible)
  $3766 = call $252 with $3765 $1098 $3724 ($3739 is responsible)
  $3767 = call $782 with $3761 ($3735 is responsible)
  $3768 = call $252 with $3767 $1084 $3724 ($3736 is responsible)
  # Core:result:mapOr:20
  $3769 = { $3770 (+ responsible $3771) ->
    $3772 = $3754
  }
  $3773 = call $1203 with $3754 $3761 $3769 ($3738 is responsible)
}
# Core:result:map
$3774 = { $3775 $3776 (+ responsible $3777) ->
  $3778 = call $1115 with $3775 ($3732 is responsible)
  $3779 = call $252 with $3778 $1098 $3777 ($3734 is responsible)
  $3780 = call $782 with $3776 ($3729 is responsible)
  $3781 = call $252 with $3780 $1084 $3777 ($3730 is responsible)
  # Core:result:map:19
  $3782 = { $3783 (+ responsible $3784) ->
    $3785 = call $3776 with $3783 ($3731 is responsible)
    $3786 = Ok $3785
  }
  $3787 = call $3753 with $3775 $3782 ($3733 is responsible)
}
$3788 = Examples:fibonacci:recursive:0:0:3
$3789 = Examples:fibonacci:recursive:0:5
$3790 = Examples:fibonacci:recursive:5
$3791 = Examples:fibonacci:compareTo:10
# Examples:fibonacci:isLessThan
$3792 = { $3793 $3794 (+ responsible $3795) ->
  $3796 = call $170 with $3793 ($68 is responsible)
  $3797 = call $151 with $3796 $175 ($69 is responsible)
  $3798 = call $252 with $3797 $210 $3791 ($24 is responsible)
  $3799 = call $170 with $3794 ($68 is responsible)
  $3800 = call $151 with $3799 $175 ($69 is responsible)
  $3801 = call $252 with $3800 $212 $3791 ($22 is responsible)
  $3802 = call $156 with $3793 $3794 ($23 is responsible)
  $3803 = call $151 with $3802 $176 ($1 is responsible)
}
$3804 = Examples:fibonacci:fibonacci:2:11
$3805 = Examples:fibonacci:fibonacci:2:13:11
$3806 = Examples:fibonacci:fibonacci:2:13:12
$3807 = Examples:fibonacci:fibonacci:2:13:32
$3808 = Examples:fibonacci:fibonacci:2:13:33
$3809 = Examples:fibonacci:fibonacci:2:13:34
$3810 = Examples:fibonacci:fibonacci:2:14
# Examples:fibonacci:fibonacci:2
$3811 = { $3812 $3813 (+ responsible $3814) ->
  $3815 = call $3792 with $3813 $189 ($3804 is responsible)
  # Examples:fibonacci:fibonacci:2:12
  $3816 = { (responsible $3817) ->
    $3818 = $3813
  }
  # Examples:fibonacci:fibonacci:2:13
  $3819 = { (responsible $3820) ->
    $3821 = call $170 with $3813 ($68 is responsible)
    $3822 = call $151 with $3821 $175 ($69 is responsible)
    $3823 = call $252 with $3822 $238 $3805 ($30 is responsible)
    $3824 = call $159 with $3813 $188 ($29 is responsible)
    $3825 = call $3812 with $3824 ($3806 is responsible)
    $3826 = call $170 with $3813 ($68 is responsible)
    $3827 = call $151 with $3826 $175 ($69 is responsible)
    $3828 = call $252 with $3827 $238 $3807 ($30 is responsible)
    $3829 = call $159 with $3813 $189 ($29 is responsible)
    $3830 = call $3812 with $3829 ($3808 is responsible)
    $3831 = call $170 with $3825 ($68 is responsible)
    $3832 = call $151 with $3831 $175 ($69 is responsible)
    $3833 = call $252 with $3832 $210 $3809 ($19 is responsible)
    $3834 = call $170 with $3830 ($68 is responsible)
    $3835 = call $151 with $3834 $175 ($69 is responsible)
    $3836 = call $252 with $3835 $212 $3809 ($17 is responsible)
    $3837 = call $154 with $3825 $3830 ($18 is responsible)
  }
  $3838 = call $391 with $3815 $3816 $3819 ($3810 is responsible)
}
# Examples:fibonacci:recursive:0
$3839 = { $3840 $3841 (+ responsible $3842) ->
  # Examples:fibonacci:recursive:0:0
  $3843 = { $3844 (+ responsible $3845) ->
    $3846 = call $3840 with $3840 $3844 ($3788 is responsible)
  }
  $3847 = call $3811 with $3843 $3841 ($3789 is responsible)
}
$3848 = Arguments
$3849 = Examples:fibonacci:21:7
$3850 = Examples:fibonacci:21:8
$3851 = Examples:fibonacci:21:8:n
$3852 = Examples:fibonacci:21:8:9
# Examples:fibonacci:21:8:18
$3853 = { $3854 (+ responsible $3855) ->
  $3856 = call $3839 with $3839 $3854 ($3790 is responsible)
  $3857 = call $169 with $3856 ($67 is responsible)
}
$3858 = Examples:fibonacci:21:8:19
$3859 = Examples:fibonacci:21:8:28
$3860 = "Usage: `cargo run -- run fibonacci.candy -- <number>`"
$3861 = Stdout
$3862 = Examples:fibonacci:21:16
$3863 = Examples:fibonacci:21:17
# Examples:fibonacci:21
$3864 = { $3865 (+ responsible $3866) ->
  $3867 = call $170 with $3865 ($68 is responsible)
  $3868 = call $151 with $3867 $183 ($69 is responsible)
  $3869 = call $252 with $3868 $239 $3849 ($59 is responsible)
  $3870 = call $164 with $3865 $3848 ($56 is responsible)
  $3871 = call $252 with $3870 $240 $3849 ($57 is responsible)
  $3872 = call $163 with $3865 $3848 ($58 is responsible)
  $3873 = call $170 with $3872 ($3850 is responsible)
  $3874 = call $151 with $177 $3873 ($3850 is responsible)
  # Examples:fibonacci:21:8:equals:then
  $3875 = { (responsible $3876) ->
    $3877 = call $162 with $3872 ($3850 is responsible)
    $3878 = call $151 with $188 $3877 ($3850 is responsible)
    # Examples:fibonacci:21:8:equals:then
    $3879 = { (responsible $3880) ->
      $3881 = call $160 with $3872 $187 ($3850 is responsible)
      $3882 = ($178, $3881)
    }
    # Examples:fibonacci:21:8:equals:else
    $3883 = { (responsible $3884) ->
      $3885 = call $169 with $3877 ($3850 is responsible)
      $3886 = call $168 with $3740 $3885 ($3850 is responsible)
      $3887 = call $168 with $3886 $195 ($3850 is responsible)
      $3888 = ($180, $3887)
    }
    $3889 = call $153 with $3878 $3879 $3883 ($3850 is responsible)
  }
  # Examples:fibonacci:21:8:equals:else
  $3890 = { (responsible $3891) ->
    $3892 = call $169 with $3873 ($3850 is responsible)
    $3893 = call $168 with $3741 $3892 ($3850 is responsible)
    $3894 = call $168 with $3893 $209 ($3850 is responsible)
    $3895 = ($180, $3894)
  }
  $3896 = call $153 with $3874 $3875 $3890 ($3850 is responsible)
  $3897 = call $160 with $3896 $187 ($3850 is responsible)
  $3898 = call $151 with $3897 $178 ($3850 is responsible)
  # Examples:fibonacci:21:8:case-0:matched
  $3899 = { (responsible $3900) ->
    $3901 = call $160 with $3896 $188 ($3851 is responsible)
    $3902 = call $170 with $3901 ($68 is responsible)
    $3903 = call $151 with $3902 $185 ($69 is responsible)
    $3904 = call $252 with $3903 $243 $3852 ($28 is responsible)
    $3905 = call $158 with $3901 ($27 is responsible)
    $3906 = call $3774 with $3905 $3853 ($3858 is responsible)
    $3907 = call $3742 with $3906 ($3859 is responsible)
  }
  # Examples:fibonacci:21:8:case-0:didNotMatch
  $3908 = { (responsible $3909) ->
    $3910 = call $160 with $3896 $188 ($3850 is responsible)
    $3911 = $3860
  }
  $3912 = call $153 with $3898 $3899 $3908 ($3850 is responsible)
  $3913 = call $170 with $3865 ($68 is responsible)
  $3914 = call $151 with $3913 $183 ($69 is responsible)
  $3915 = call $252 with $3914 $239 $3862 ($59 is responsible)
  $3916 = call $164 with $3865 $3861 ($56 is responsible)
  $3917 = call $252 with $3916 $240 $3862 ($57 is responsible)
  $3918 = call $163 with $3865 $3861 ($58 is responsible)
  $3919 = call $3918 with $3912 ($3863 is responsible)
}
