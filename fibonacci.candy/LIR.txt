# LIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::equals:6
%1 = Builtins::getArgumentCount:11
%2 = Builtins::getArgumentCount:5
%3 = Builtins::ifElse:1
%4 = Builtins::ifElse:11
%5 = Builtins::ifElse:14
%6 = Builtins::ifElse:19
%7 = Builtins::ifElse:25
%8 = Builtins::ifElse:28
%9 = Builtins::ifElse:33
%10 = Builtins::ifElse:41
%11 = Builtins::ifElse:5
%12 = Builtins::intAdd:11
%13 = Builtins::intAdd:18
%14 = Builtins::intAdd:5
%15 = Builtins::intCompareTo:11
%16 = Builtins::intCompareTo:18
%17 = Builtins::intCompareTo:5
%18 = Builtins::intParse:11
%19 = Builtins::intParse:5
%20 = Builtins::intSubtract:11
%21 = Builtins::intSubtract:18
%22 = Builtins::intSubtract:5
%23 = Builtins::structGet:12
%24 = Builtins::structGet:14
%25 = Builtins::structGet:21
%26 = Builtins::structGet:5
%27 = Builtins::tagGetValue:11
%28 = Builtins::tagGetValue:13
%29 = Builtins::tagGetValue:19
%30 = Builtins::tagGetValue:5
%31 = Builtins::toDebugText:5
%32 = Builtins::typeIs:19
%33 = Builtins::typeIs:25
%34 = Builtins::typeOf:5
%35 = Core:function:is1:11
%36 = Core:function:is1:9:3
%37 = Core:result:flatMap:12
%38 = Core:result:flatMap:14
%39 = Core:result:flatMap:17:2
%40 = Core:result:flatMap:19
%41 = Core:result:flatMap:2
%42 = Core:result:flatMap:4
%43 = Core:result:getValue:12
%44 = Core:result:getValue:2
%45 = Core:result:getValue:4
%46 = Core:result:is:1
%47 = Core:result:map:12
%48 = Core:result:map:14
%49 = Core:result:map:17:3
%50 = Core:result:map:18
%51 = Core:result:map:2
%52 = Core:result:map:4
%53 = Core:result:mapOr:12
%54 = Core:result:mapOr:14
%55 = Core:result:mapOr:19
%56 = Core:result:mapOr:2
%57 = Core:result:mapOr:4
%58 = Core:result:mapOrElse:12
%59 = Core:result:mapOrElse:14
%60 = Core:result:mapOrElse:2
%61 = Core:result:mapOrElse:22
%62 = Core:result:mapOrElse:24
%63 = Core:result:mapOrElse:26
%64 = Core:result:mapOrElse:26:2
%65 = Core:result:mapOrElse:26:5
%66 = Core:result:mapOrElse:26:value
%67 = Core:result:mapOrElse:26:value#1
%68 = Core:result:mapOrElse:4
%69 = Examples:fibonacci:23:12
%70 = Examples:fibonacci:23:13
%71 = Examples:fibonacci:23:5
%72 = Examples:fibonacci:23:6
%73 = Examples:fibonacci:23:6:14:2
%74 = Examples:fibonacci:23:6:15
%75 = Examples:fibonacci:23:6:22
%76 = Examples:fibonacci:23:6:7
%77 = Examples:fibonacci:23:6:n
%78 = Examples:fibonacci:compareTo:8
%79 = Examples:fibonacci:fibonacci:2:11:10
%80 = Examples:fibonacci:fibonacci:2:11:26
%81 = Examples:fibonacci:fibonacci:2:11:27
%82 = Examples:fibonacci:fibonacci:2:11:28
%83 = Examples:fibonacci:fibonacci:2:11:9
%84 = Examples:fibonacci:fibonacci:2:12
%85 = Examples:fibonacci:fibonacci:2:9
%86 = Examples:fibonacci:fibonacci:3
%87 = Examples:fibonacci:isLessThan:9
%88 = Examples:fibonacci:recursive:0:0:3
%89 = Examples:fibonacci:recursive:0:5
%90 = Examples:fibonacci:recursive:5
%91 = anonymous:$generated::needs
%92 = builtinEquals
%93 = builtinGetArgumentCount
%94 = builtinIfElse
%95 = builtinIntAdd
%96 = builtinIntCompareTo
%97 = builtinIntParse
%98 = builtinIntSubtract
%99 = builtinListGet
%100 = builtinListLength
%101 = builtinStructGet
%102 = builtinStructHasKey
%103 = builtinTagGetValue
%104 = builtinTagHasValue
%105 = builtinTagWithValue
%106 = builtinTagWithoutValue
%107 = builtinTextConcatenate
%108 = builtinToDebugText
%109 = builtinTypeOf
%110 = Arguments
%111 = Error
%112 = False
%113 = Function
%114 = Int
%115 = Less
%116 = List
%117 = Match
%118 = NoMatch
%119 = Nothing
%120 = Ok
%121 = Stdout
%122 = Struct
%123 = Tag
%124 = Text
%125 = True
%126 = 0
%127 = 1
%128 = 2
%129 = " arguments with 1 arguments."
%130 = " arguments with 2 arguments."
%131 = "No case matched the given expression."
%132 = "Tags can only be created with one value."
%133 = "The `condition` must be either `True` or `False`."
%134 = "The `reason` must be a text."
%135 = "Usage: `cargo run -- run fibonacci.candy -- <number>`"
%136 = "You called a function that expects "
%137 = "You called a tag that already has a value."
%138 = "You can only call tags or functions."
%139 = "`a | typeIs Int` was not satisfied"
%140 = "`b | typeIs Int` was not satisfied"
%141 = "`conditionIsBool` was not satisfied"
%142 = "`else | getArgumentCount | equals 0` was not satisfied"
%143 = "`else | typeIs Function` was not satisfied"
%144 = "`function | typeIs Function` was not satisfied"
%145 = "`function.is1 errorMapper` was not satisfied"
%146 = "`function.is1 okMapper` was not satisfied"
%147 = "`is result` was not satisfied"
%148 = "`minuend | typeIs Int` was not satisfied"
%149 = "`struct | typeIs Struct` was not satisfied"
%150 = "`struct | ✨.structHasKey key` was not satisfied"
%151 = "`subtrahend | typeIs Int` was not satisfied"
%152 = "`tag | typeIs Tag` was not satisfied"
%153 = "`tag | ✨.tagHasValue` was not satisfied"
%154 = "`text | typeIs Text` was not satisfied"
%155 = "`then | getArgumentCount | equals 0` was not satisfied"
%156 = "`then | typeIs Function` was not satisfied"
%157 = { body_0 }
%158 = { body_1 }
%159 = { body_6 }
%160 = (,)
%161 = Match %160<(,)>
%162 = { body_7 }
%163 = { body_8 }
%164 = { body_9 }
%165 = { body_10 }
%166 = { body_13 }
%167 = { body_14 }
%168 = { body_15 }
%169 = { body_16 }
%170 = { body_17 }
%171 = { body_18 }
%172 = { body_19 }
%173 = { body_20 }
%174 = { body_35 }
%175 = { body_36 }
%176 = { body_37 }
%177 = { body_42 }
%178 = { body_43 }
%179 = { body_44 }
%180 = { body_49 }
%181 = { body_50 }
%182 = { body_53 }
%183 = { body_54 }
%184 = { body_55 }
%185 = { body_60 }
%186 = { body_61 }
%187 = { body_62 }
%188 = { body_67 }
%189 = { body_68 }
%190 = { body_69 }
%191 = { body_74 }
%192 = { body_75 }
%193 = { body_76 }
%194 = { body_82 }
%195 = { body_91 }
%196 = { body_92 }
%197 = { body_93 }
%198 = { body_94 }
%199 = { body_95 }
%200 = { body_96 }
%201 = { body_97 }
%202 = { body_98 }
%203 = { body_99 }
%204 = { body_145 }
%205 = { body_146 }
%206 = { body_147 }
%207 = { body_148 }
%208 = { body_161 }
%209 = { body_162 }
%210 = { body_163 }
%211 = { body_182 }
%212 = { body_183 }
%213 = { body_184 }
%214 = { body_185 }
%215 = { body_186 }
%216 = { body_211 }
%217 = { body_212 }
%218 = { body_213 }
%219 = { body_214 }
%220 = { body_215 }
%221 = { body_240 }
%222 = { body_241 }
%223 = { body_242 }
%224 = { body_243 }
%225 = { body_244 }
%226 = { body_245 }
%227 = { body_246 }
%228 = { body_259 }
%229 = { body_260 }
%230 = { body_261 }
%231 = { body_264 }
%232 = { body_267 }
%233 = { body_268 }
%234 = { body_269 }
%235 = { body_270 }
%236 = { body_271 }
%237 = { body_272 }
%238 = { body_273 }
%239 = { body_274 }
%240 = { body_275 }
%241 = { body_276 }
%242 = { body_298 }
%243 = { body_305 }
%244 = { body_306 }
%245 = { body_307 }
%246 = { body_308 }
%247 = { body_309 }
%248 = { body_310 }
%249 = { body_311 }
%250 = { body_312 }
%251 = { body_313 }
%252 = { body_314 }
%253 = { body_315 }
%254 = { body_316 }
%255 = { body_341 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:result:is:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %125<True>
body_1 (responsible $0) =
  # Original HIR IDs: Core::104:isMatch:then, Core::155:isMatch:then, Core::166:isMatch:then, Core::21:isMatch:then, Core::32:isMatch:then, Core::43:isMatch:then, Core:bool:11:isMatch:then, Core:check:11:isMatch:then, Core:controlFlow:31:isMatch:then, Core:controlFlow:52:isMatch:then, Core:controlFlow:if:23, Core:fixedDecimal:105:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:function:21:isMatch:then, Core:int:31:isMatch:then, Core:int:42:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:32:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:list:31:isMatch:then, Core:list:42:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core:result:21:isMatch:then, Core:result:32:isMatch:then, Core:result:also:16:case-0:didNotMatch, Core:struct:21:isMatch:then, Core:tag:31:isMatch:then, Core:text:31:isMatch:then, Core:text:42:isMatch:then, Core:text:charFromAsciiCode:36:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:type:21:isMatch:then, Examples:fibonacci:21:isMatch:then, Examples:fibonacci:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %119<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = %133<"The `condition` must be either `True` or `False`.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%133<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = %134<"The `reason` must be a text.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%134<"The `reason` must be a text.">> ($0 is at fault)
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = %92<builtinEquals>
  $5 = dup $0 by 1
  $6 = %125<True>
  $7 = %91<anonymous:$generated::needs>
  $8 = call $4<%92<builtinEquals>> with $0 $6<%125<True>> ($7<%91<anonymous:$generated::needs>> is responsible)
  $9 = dup $0 by 1
  $10 = { body_2 capturing $0 }
  $11 = %94<builtinIfElse>
  $12 = dup $8 by 1
  $13 = %157<{ body_0 }>
  $14 = dup $10 by 1
  $15 = call $11<%94<builtinIfElse>> with $8 $13<%157<{ body_0 }>> $10 ($7<%91<anonymous:$generated::needs>> is responsible)
  $16 = dup $3 by 1
  $17 = { body_3 capturing $3 }
  $18 = dup $15 by 1
  $19 = %158<{ body_1 }>
  $20 = dup $17 by 1
  $21 = call $11<%94<builtinIfElse>> with $15 $19<%158<{ body_1 }>> $17 ($7<%91<anonymous:$generated::needs>> is responsible)
  $22 = %109<builtinTypeOf>
  $23 = dup $1 by 1
  $24 = call $22<%109<builtinTypeOf>> with $1 ($3 is responsible)
  $25 = dup $24 by 1
  $26 = %124<Text>
  $27 = call $4<%92<builtinEquals>> with $24 $26<%124<Text>> ($3 is responsible)
  $28 = dup $3 by 1
  $29 = { body_4 capturing $3 }
  $30 = dup $27 by 1
  $31 = dup $29 by 1
  $32 = call $11<%94<builtinIfElse>> with $27 $19<%158<{ body_1 }>> $29 ($7<%91<anonymous:$generated::needs>> is responsible)
  $33 = dup $1 by 1
  $34 = dup $2 by 1
  $35 = { body_5 capturing $1, $2 }
  $36 = dup $0 by 1
  $37 = dup $35 by 1
  $38 = call $11<%94<builtinIfElse>> with $0 $19<%158<{ body_1 }>> $35 ($7<%91<anonymous:$generated::needs>> is responsible)
  $39 = drop $35
  $40 = drop $32
  $41 = drop $29
  $42 = drop $27
  $43 = drop $24
  $44 = drop $21
  $45 = drop $17
  $46 = drop $15
  $47 = drop $10
  $48 = drop $8
  $49 = drop $2
  $50 = drop $1
  $51 = drop $0
  $52 = $38
body_7 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:16:equals:then, Core:bool:lazyOr:16:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:iterator:generateWithState:12:1:3:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:reduceLeft:16:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Core:iterator:where:17:2:3:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:19:equals:then, Core:list:lastWhere:19:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
  # Captured IDs: none
  $1 = %161<Match %160<(,)>>
body_8 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::isNonNegative:13:equals:else, Builtins::not:1:equals:else, Core::104:equals:else, Core::155:equals:else, Core::166:equals:else, Core::21:equals:else, Core::32:equals:else, Core::43:equals:else, Core:bool:11:equals:else, Core:bool:is:1:equals:else, Core:bool:lazyAnd:16:equals:else, Core:bool:lazyOr:16:equals:else, Core:bool:not:6:equals:else, Core:check:11:equals:else, Core:check:check:1:equals:else, Core:controlFlow:31:equals:else, Core:controlFlow:52:equals:else, Core:fixedDecimal:105:equals:else, Core:fixedDecimal:21:equals:else, Core:fixedDecimal:32:equals:else, Core:fixedDecimal:43:equals:else, Core:fixedDecimal:54:equals:else, Core:fixedDecimal:is:1:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:function:21:equals:else, Core:int:31:equals:else, Core:int:42:equals:else, Core:int:pow:21:1:equals:else, Core:int:pow:21:1:hasKey:else, Core:int:pow:21:4:equals:else, Core:iterator:21:equals:else, Core:iterator:32:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:map:17:3:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:next:6:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core:iterator:skip:26:6:1:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:iterator:skip:26:6:8:3:equals:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:iterator:take:27:1:equals:else, Core:iterator:take:27:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:iterator:where:17:2:3:equals:else, Core:iterator:where:17:2:3:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:withIndex:11:5:hasKey:else, Core:iterator:wrapSafe:14:1:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:list:31:equals:else, Core:list:42:equals:else, Core:list:first:6:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:list:firstWhere:19:equals:else, Core:list:generate:51:1:equals:else, Core:list:generate:51:1:hasKey:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:list:lastWhere:19:equals:else, Core:list:single:6:equals:else, Core:result:21:equals:else, Core:result:32:equals:else, Core:result:also:16:equals:else, Core:result:is:1:equals:else, Core:result:mapOrElse:26:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:31:equals:else, Core:text:42:equals:else, Core:text:charFromAsciiCode:36:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:text:repeat:30:1:equals:else, Examples:fibonacci:21:equals:else, Examples:fibonacci:23:6:equals:else
  # Captured IDs: none
  $1 = %118<NoMatch>
body_9 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:didNotMatch, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:is:1:case-0:didNotMatch, Core:bool:lazyAnd:16:case-1:matched, Core:bool:not:6:case-0:matched, Core:check:check:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:function:is0:10, Core:function:is1:10, Core:function:is2:10, Core:function:is3:10, Core:function:is4:10, Core:function:is5:10, Core:list:isValidIndex:19, Core:list:isValidInsertIndex:19, Core:result:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch
  # Captured IDs: none
  $1 = %112<False>
body_10 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %2<Builtins::getArgumentCount:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%2<Builtins::getArgumentCount:5>> is at fault)
body_11 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_12 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %144<"`function | typeIs Function` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%144<"`function | typeIs Function` was not satisfied">> ($0 is at fault)
body_13 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::getArgumentCount
  # Captured IDs: none
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %32<Builtins::typeIs:19>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%32<Builtins::typeIs:19>> is responsible)
  $6 = %92<builtinEquals>
  $7 = dup $5 by 1
  $8 = %113<Function>
  $9 = %33<Builtins::typeIs:25>
  $10 = call $6<%92<builtinEquals>> with $5 $8<%113<Function>> ($9<%33<Builtins::typeIs:25>> is responsible)
  $11 = %2<Builtins::getArgumentCount:5>
  $12 = %159<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %144<"`function | typeIs Function` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%159<{ body_6 }>> with $10 $14<%144<"`function | typeIs Function` was not satisfied">> $1 ($11<%2<Builtins::getArgumentCount:5>> is responsible, code is at $11<%2<Builtins::getArgumentCount:5>>)
  $17 = dup $10 by 1
  $18 = %125<True>
  $19 = %91<anonymous:$generated::needs>
  $20 = call $6<%92<builtinEquals>> with $10 $18<%125<True>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $21 = dup $10 by 1
  $22 = { body_11 capturing $10 }
  $23 = %94<builtinIfElse>
  $24 = dup $20 by 1
  $25 = %157<{ body_0 }>
  $26 = dup $22 by 1
  $27 = call $23<%94<builtinIfElse>> with $20 $25<%157<{ body_0 }>> $22 ($19<%91<anonymous:$generated::needs>> is responsible)
  $28 = dup $27 by 1
  $29 = %158<{ body_1 }>
  $30 = %165<{ body_10 }>
  $31 = call $23<%94<builtinIfElse>> with $27 $29<%158<{ body_1 }>> $30<%165<{ body_10 }>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $32 = dup $1 by 1
  $33 = { body_12 capturing $1 }
  $34 = dup $10 by 1
  $35 = dup $33 by 1
  $36 = call $23<%94<builtinIfElse>> with $10 $29<%158<{ body_1 }>> $33 ($19<%91<anonymous:$generated::needs>> is responsible)
  $37 = trace: end of call
  $38 = %93<builtinGetArgumentCount>
  $39 = dup $0 by 1
  $40 = %1<Builtins::getArgumentCount:11>
  $41 = call $38<%93<builtinGetArgumentCount>> with $0 ($40<%1<Builtins::getArgumentCount:11>> is responsible)
  $42 = drop $36
  $43 = drop $33
  $44 = drop $31
  $45 = drop $27
  $46 = drop $22
  $47 = drop $20
  $48 = drop $10
  $49 = drop $5
  $50 = drop $0
  $51 = $41
body_14 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %11<Builtins::ifElse:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%11<Builtins::ifElse:5>> is at fault)
body_15 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %4<Builtins::ifElse:11>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%4<Builtins::ifElse:11>> is at fault)
body_16 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %144<"`function | typeIs Function` was not satisfied">
  $2 = %5<Builtins::ifElse:14>
  $3 = panicking because $1<%144<"`function | typeIs Function` was not satisfied">> ($2<%5<Builtins::ifElse:14>> is at fault)
body_17 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %6<Builtins::ifElse:19>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%6<Builtins::ifElse:19>> is at fault)
body_18 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %7<Builtins::ifElse:25>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%7<Builtins::ifElse:25>> is at fault)
body_19 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %144<"`function | typeIs Function` was not satisfied">
  $2 = %8<Builtins::ifElse:28>
  $3 = panicking because $1<%144<"`function | typeIs Function` was not satisfied">> ($2<%8<Builtins::ifElse:28>> is at fault)
body_20 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %9<Builtins::ifElse:33>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%9<Builtins::ifElse:33>> is at fault)
body_21 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_22 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_23 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_24 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %141<"`conditionIsBool` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%141<"`conditionIsBool` was not satisfied">> ($0 is at fault)
body_25 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_26 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %156<"`then | typeIs Function` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%156<"`then | typeIs Function` was not satisfied">> ($0 is at fault)
body_27 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_28 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_29 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %155<"`then | getArgumentCount | equals 0` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%155<"`then | getArgumentCount | equals 0` was not satisfied">> ($0 is at fault)
body_30 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_31 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %143<"`else | typeIs Function` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%143<"`else | typeIs Function` was not satisfied">> ($0 is at fault)
body_32 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_33 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_34 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %142<"`else | getArgumentCount | equals 0` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%142<"`else | getArgumentCount | equals 0` was not satisfied">> ($0 is at fault)
body_35 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Builtins::ifElse
  # Captured IDs: none
  $4 = %92<builtinEquals>
  $5 = %125<True>
  $6 = dup $0 by 1
  $7 = %3<Builtins::ifElse:1>
  $8 = call $4<%92<builtinEquals>> with $5<%125<True>> $0 ($7<%3<Builtins::ifElse:1>> is responsible)
  $9 = %94<builtinIfElse>
  $10 = dup $8 by 1
  $11 = %162<{ body_7 }>
  $12 = %163<{ body_8 }>
  $13 = call $9<%94<builtinIfElse>> with $8 $11<%162<{ body_7 }>> $12<%163<{ body_8 }>> ($7<%3<Builtins::ifElse:1>> is responsible)
  $14 = %106<builtinTagWithoutValue>
  $15 = dup $13 by 1
  $16 = call $14<%106<builtinTagWithoutValue>> with $13 ($7<%3<Builtins::ifElse:1>> is responsible)
  $17 = dup $16 by 1
  $18 = %117<Match>
  $19 = call $4<%92<builtinEquals>> with $16 $18<%117<Match>> ($7<%3<Builtins::ifElse:1>> is responsible)
  $20 = dup $13 by 1
  $21 = { body_21 capturing $13 }
  $22 = dup $0 by 1
  $23 = { body_22 capturing $0 }
  $24 = dup $19 by 1
  $25 = dup $21 by 1
  $26 = dup $23 by 1
  $27 = call $9<%94<builtinIfElse>> with $19 $21 $23 ($7<%3<Builtins::ifElse:1>> is responsible)
  $28 = dup $27 by 1
  $29 = call $14<%106<builtinTagWithoutValue>> with $27 ($7<%3<Builtins::ifElse:1>> is responsible)
  $30 = dup $29 by 1
  $31 = call $4<%92<builtinEquals>> with $29 $18<%117<Match>> ($7<%3<Builtins::ifElse:1>> is responsible)
  $32 = dup $31 by 1
  $33 = %157<{ body_0 }>
  $34 = %164<{ body_9 }>
  $35 = call $9<%94<builtinIfElse>> with $31 $33<%157<{ body_0 }>> $34<%164<{ body_9 }>> ($7<%3<Builtins::ifElse:1>> is responsible)
  $36 = %11<Builtins::ifElse:5>
  $37 = %159<{ body_6 }>
  $38 = dup $35 by 1
  $39 = %141<"`conditionIsBool` was not satisfied">
  $40 = dup $3 by 1
  $41 = trace: start of call of $37<%159<{ body_6 }>> with $35 $39<%141<"`conditionIsBool` was not satisfied">> $3 ($36<%11<Builtins::ifElse:5>> is responsible, code is at $36<%11<Builtins::ifElse:5>>)
  $42 = dup $35 by 1
  $43 = %91<anonymous:$generated::needs>
  $44 = call $4<%92<builtinEquals>> with $35 $5<%125<True>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $45 = dup $35 by 1
  $46 = { body_23 capturing $35 }
  $47 = dup $44 by 1
  $48 = dup $46 by 1
  $49 = call $9<%94<builtinIfElse>> with $44 $33<%157<{ body_0 }>> $46 ($43<%91<anonymous:$generated::needs>> is responsible)
  $50 = dup $49 by 1
  $51 = %158<{ body_1 }>
  $52 = %167<{ body_14 }>
  $53 = call $9<%94<builtinIfElse>> with $49 $51<%158<{ body_1 }>> $52<%167<{ body_14 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $54 = dup $3 by 1
  $55 = { body_24 capturing $3 }
  $56 = dup $35 by 1
  $57 = dup $55 by 1
  $58 = call $9<%94<builtinIfElse>> with $35 $51<%158<{ body_1 }>> $55 ($43<%91<anonymous:$generated::needs>> is responsible)
  $59 = trace: end of call
  $60 = %109<builtinTypeOf>
  $61 = dup $1 by 1
  $62 = %32<Builtins::typeIs:19>
  $63 = call $60<%109<builtinTypeOf>> with $1 ($62<%32<Builtins::typeIs:19>> is responsible)
  $64 = dup $63 by 1
  $65 = %113<Function>
  $66 = %33<Builtins::typeIs:25>
  $67 = call $4<%92<builtinEquals>> with $63 $65<%113<Function>> ($66<%33<Builtins::typeIs:25>> is responsible)
  $68 = %4<Builtins::ifElse:11>
  $69 = dup $67 by 1
  $70 = %156<"`then | typeIs Function` was not satisfied">
  $71 = dup $3 by 1
  $72 = trace: start of call of $37<%159<{ body_6 }>> with $67 $70<%156<"`then | typeIs Function` was not satisfied">> $3 ($68<%4<Builtins::ifElse:11>> is responsible, code is at $68<%4<Builtins::ifElse:11>>)
  $73 = dup $67 by 1
  $74 = call $4<%92<builtinEquals>> with $67 $5<%125<True>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $75 = dup $67 by 1
  $76 = { body_25 capturing $67 }
  $77 = dup $74 by 1
  $78 = dup $76 by 1
  $79 = call $9<%94<builtinIfElse>> with $74 $33<%157<{ body_0 }>> $76 ($43<%91<anonymous:$generated::needs>> is responsible)
  $80 = dup $79 by 1
  $81 = %168<{ body_15 }>
  $82 = call $9<%94<builtinIfElse>> with $79 $51<%158<{ body_1 }>> $81<%168<{ body_15 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $83 = dup $3 by 1
  $84 = { body_26 capturing $3 }
  $85 = dup $67 by 1
  $86 = dup $84 by 1
  $87 = call $9<%94<builtinIfElse>> with $67 $51<%158<{ body_1 }>> $84 ($43<%91<anonymous:$generated::needs>> is responsible)
  $88 = trace: end of call
  $89 = %5<Builtins::ifElse:14>
  $90 = %166<{ body_13 }>
  $91 = dup $1 by 1
  $92 = trace: start of call of $90<%166<{ body_13 }>> with $1 ($89<%5<Builtins::ifElse:14>> is responsible, code is at $89<%5<Builtins::ifElse:14>>)
  $93 = dup $63 by 1
  $94 = call $4<%92<builtinEquals>> with $63 $65<%113<Function>> ($66<%33<Builtins::typeIs:25>> is responsible)
  $95 = %2<Builtins::getArgumentCount:5>
  $96 = dup $94 by 1
  $97 = %144<"`function | typeIs Function` was not satisfied">
  $98 = trace: start of call of $37<%159<{ body_6 }>> with $94 $97<%144<"`function | typeIs Function` was not satisfied">> $89<%5<Builtins::ifElse:14>> ($95<%2<Builtins::getArgumentCount:5>> is responsible, code is at $95<%2<Builtins::getArgumentCount:5>>)
  $99 = dup $94 by 1
  $100 = call $4<%92<builtinEquals>> with $94 $5<%125<True>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $101 = dup $94 by 1
  $102 = { body_27 capturing $94 }
  $103 = dup $100 by 1
  $104 = dup $102 by 1
  $105 = call $9<%94<builtinIfElse>> with $100 $33<%157<{ body_0 }>> $102 ($43<%91<anonymous:$generated::needs>> is responsible)
  $106 = dup $105 by 1
  $107 = %165<{ body_10 }>
  $108 = call $9<%94<builtinIfElse>> with $105 $51<%158<{ body_1 }>> $107<%165<{ body_10 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $109 = dup $94 by 1
  $110 = %169<{ body_16 }>
  $111 = call $9<%94<builtinIfElse>> with $94 $51<%158<{ body_1 }>> $110<%169<{ body_16 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $112 = trace: end of call
  $113 = %93<builtinGetArgumentCount>
  $114 = dup $1 by 1
  $115 = %1<Builtins::getArgumentCount:11>
  $116 = call $113<%93<builtinGetArgumentCount>> with $1 ($115<%1<Builtins::getArgumentCount:11>> is responsible)
  $117 = trace: end of call
  $118 = dup $116 by 1
  $119 = %126<0>
  $120 = %0<Builtins::equals:6>
  $121 = call $4<%92<builtinEquals>> with $116 $119<%126<0>> ($120<%0<Builtins::equals:6>> is responsible)
  $122 = %6<Builtins::ifElse:19>
  $123 = dup $121 by 1
  $124 = %155<"`then | getArgumentCount | equals 0` was not satisfied">
  $125 = dup $3 by 1
  $126 = trace: start of call of $37<%159<{ body_6 }>> with $121 $124<%155<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($122<%6<Builtins::ifElse:19>> is responsible, code is at $122<%6<Builtins::ifElse:19>>)
  $127 = dup $121 by 1
  $128 = call $4<%92<builtinEquals>> with $121 $5<%125<True>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $129 = dup $121 by 1
  $130 = { body_28 capturing $121 }
  $131 = dup $128 by 1
  $132 = dup $130 by 1
  $133 = call $9<%94<builtinIfElse>> with $128 $33<%157<{ body_0 }>> $130 ($43<%91<anonymous:$generated::needs>> is responsible)
  $134 = dup $133 by 1
  $135 = %170<{ body_17 }>
  $136 = call $9<%94<builtinIfElse>> with $133 $51<%158<{ body_1 }>> $135<%170<{ body_17 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $137 = dup $3 by 1
  $138 = { body_29 capturing $3 }
  $139 = dup $121 by 1
  $140 = dup $138 by 1
  $141 = call $9<%94<builtinIfElse>> with $121 $51<%158<{ body_1 }>> $138 ($43<%91<anonymous:$generated::needs>> is responsible)
  $142 = trace: end of call
  $143 = dup $2 by 1
  $144 = call $60<%109<builtinTypeOf>> with $2 ($62<%32<Builtins::typeIs:19>> is responsible)
  $145 = dup $144 by 1
  $146 = call $4<%92<builtinEquals>> with $144 $65<%113<Function>> ($66<%33<Builtins::typeIs:25>> is responsible)
  $147 = %7<Builtins::ifElse:25>
  $148 = dup $146 by 1
  $149 = %143<"`else | typeIs Function` was not satisfied">
  $150 = dup $3 by 1
  $151 = trace: start of call of $37<%159<{ body_6 }>> with $146 $149<%143<"`else | typeIs Function` was not satisfied">> $3 ($147<%7<Builtins::ifElse:25>> is responsible, code is at $147<%7<Builtins::ifElse:25>>)
  $152 = dup $146 by 1
  $153 = call $4<%92<builtinEquals>> with $146 $5<%125<True>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $154 = dup $146 by 1
  $155 = { body_30 capturing $146 }
  $156 = dup $153 by 1
  $157 = dup $155 by 1
  $158 = call $9<%94<builtinIfElse>> with $153 $33<%157<{ body_0 }>> $155 ($43<%91<anonymous:$generated::needs>> is responsible)
  $159 = dup $158 by 1
  $160 = %171<{ body_18 }>
  $161 = call $9<%94<builtinIfElse>> with $158 $51<%158<{ body_1 }>> $160<%171<{ body_18 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $162 = dup $3 by 1
  $163 = { body_31 capturing $3 }
  $164 = dup $146 by 1
  $165 = dup $163 by 1
  $166 = call $9<%94<builtinIfElse>> with $146 $51<%158<{ body_1 }>> $163 ($43<%91<anonymous:$generated::needs>> is responsible)
  $167 = trace: end of call
  $168 = %8<Builtins::ifElse:28>
  $169 = dup $2 by 1
  $170 = trace: start of call of $90<%166<{ body_13 }>> with $2 ($168<%8<Builtins::ifElse:28>> is responsible, code is at $168<%8<Builtins::ifElse:28>>)
  $171 = dup $144 by 1
  $172 = call $4<%92<builtinEquals>> with $144 $65<%113<Function>> ($66<%33<Builtins::typeIs:25>> is responsible)
  $173 = dup $172 by 1
  $174 = trace: start of call of $37<%159<{ body_6 }>> with $172 $97<%144<"`function | typeIs Function` was not satisfied">> $168<%8<Builtins::ifElse:28>> ($95<%2<Builtins::getArgumentCount:5>> is responsible, code is at $95<%2<Builtins::getArgumentCount:5>>)
  $175 = dup $172 by 1
  $176 = call $4<%92<builtinEquals>> with $172 $5<%125<True>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $177 = dup $172 by 1
  $178 = { body_32 capturing $172 }
  $179 = dup $176 by 1
  $180 = dup $178 by 1
  $181 = call $9<%94<builtinIfElse>> with $176 $33<%157<{ body_0 }>> $178 ($43<%91<anonymous:$generated::needs>> is responsible)
  $182 = dup $181 by 1
  $183 = call $9<%94<builtinIfElse>> with $181 $51<%158<{ body_1 }>> $107<%165<{ body_10 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $184 = dup $172 by 1
  $185 = %172<{ body_19 }>
  $186 = call $9<%94<builtinIfElse>> with $172 $51<%158<{ body_1 }>> $185<%172<{ body_19 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $187 = trace: end of call
  $188 = dup $2 by 1
  $189 = call $113<%93<builtinGetArgumentCount>> with $2 ($115<%1<Builtins::getArgumentCount:11>> is responsible)
  $190 = trace: end of call
  $191 = dup $189 by 1
  $192 = call $4<%92<builtinEquals>> with $189 $119<%126<0>> ($120<%0<Builtins::equals:6>> is responsible)
  $193 = %9<Builtins::ifElse:33>
  $194 = dup $192 by 1
  $195 = %142<"`else | getArgumentCount | equals 0` was not satisfied">
  $196 = dup $3 by 1
  $197 = trace: start of call of $37<%159<{ body_6 }>> with $192 $195<%142<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($193<%9<Builtins::ifElse:33>> is responsible, code is at $193<%9<Builtins::ifElse:33>>)
  $198 = dup $192 by 1
  $199 = call $4<%92<builtinEquals>> with $192 $5<%125<True>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $200 = dup $192 by 1
  $201 = { body_33 capturing $192 }
  $202 = dup $199 by 1
  $203 = dup $201 by 1
  $204 = call $9<%94<builtinIfElse>> with $199 $33<%157<{ body_0 }>> $201 ($43<%91<anonymous:$generated::needs>> is responsible)
  $205 = dup $204 by 1
  $206 = %173<{ body_20 }>
  $207 = call $9<%94<builtinIfElse>> with $204 $51<%158<{ body_1 }>> $206<%173<{ body_20 }>> ($43<%91<anonymous:$generated::needs>> is responsible)
  $208 = dup $3 by 1
  $209 = { body_34 capturing $3 }
  $210 = dup $192 by 1
  $211 = dup $209 by 1
  $212 = call $9<%94<builtinIfElse>> with $192 $51<%158<{ body_1 }>> $209 ($43<%91<anonymous:$generated::needs>> is responsible)
  $213 = trace: end of call
  $214 = %10<Builtins::ifElse:41>
  $215 = dup $0 by 1
  $216 = dup $1 by 1
  $217 = dup $2 by 1
  $218 = trace: tail call of $9<%94<builtinIfElse>> with $0 $1 $2 ($214<%10<Builtins::ifElse:41>> is responsible, code is at $214<%10<Builtins::ifElse:41>>)
  $219 = dup $0 by 1
  $220 = dup $1 by 1
  $221 = dup $2 by 1
  $222 = call $9<%94<builtinIfElse>> with $0 $1 $2 ($214<%10<Builtins::ifElse:41>> is responsible)
  $223 = drop $212
  $224 = drop $209
  $225 = drop $207
  $226 = drop $204
  $227 = drop $201
  $228 = drop $199
  $229 = drop $192
  $230 = drop $189
  $231 = drop $186
  $232 = drop $183
  $233 = drop $181
  $234 = drop $178
  $235 = drop $176
  $236 = drop $172
  $237 = drop $166
  $238 = drop $163
  $239 = drop $161
  $240 = drop $158
  $241 = drop $155
  $242 = drop $153
  $243 = drop $146
  $244 = drop $144
  $245 = drop $141
  $246 = drop $138
  $247 = drop $136
  $248 = drop $133
  $249 = drop $130
  $250 = drop $128
  $251 = drop $121
  $252 = drop $116
  $253 = drop $111
  $254 = drop $108
  $255 = drop $105
  $256 = drop $102
  $257 = drop $100
  $258 = drop $94
  $259 = drop $87
  $260 = drop $84
  $261 = drop $82
  $262 = drop $79
  $263 = drop $76
  $264 = drop $74
  $265 = drop $67
  $266 = drop $63
  $267 = drop $58
  $268 = drop $55
  $269 = drop $53
  $270 = drop $49
  $271 = drop $46
  $272 = drop $44
  $273 = drop $35
  $274 = drop $31
  $275 = drop $29
  $276 = drop $27
  $277 = drop $23
  $278 = drop $21
  $279 = drop $19
  $280 = drop $16
  $281 = drop $13
  $282 = drop $8
  $283 = drop $2
  $284 = drop $1
  $285 = drop $0
  $286 = $222
body_36 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %14<Builtins::intAdd:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%14<Builtins::intAdd:5>> is at fault)
body_37 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %12<Builtins::intAdd:11>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%12<Builtins::intAdd:11>> is at fault)
body_38 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_39 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %139<"`a | typeIs Int` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%139<"`a | typeIs Int` was not satisfied">> ($0 is at fault)
body_40 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_41 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %140<"`b | typeIs Int` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%140<"`b | typeIs Int` was not satisfied">> ($0 is at fault)
body_42 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::intAdd
  # Captured IDs: none
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %32<Builtins::typeIs:19>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%32<Builtins::typeIs:19>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %114<Int>
  $10 = %33<Builtins::typeIs:25>
  $11 = call $7<%92<builtinEquals>> with $6 $9<%114<Int>> ($10<%33<Builtins::typeIs:25>> is responsible)
  $12 = %14<Builtins::intAdd:5>
  $13 = %159<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %139<"`a | typeIs Int` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%159<{ body_6 }>> with $11 $15<%139<"`a | typeIs Int` was not satisfied">> $2 ($12<%14<Builtins::intAdd:5>> is responsible, code is at $12<%14<Builtins::intAdd:5>>)
  $18 = dup $11 by 1
  $19 = %125<True>
  $20 = %91<anonymous:$generated::needs>
  $21 = call $7<%92<builtinEquals>> with $11 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $22 = dup $11 by 1
  $23 = { body_38 capturing $11 }
  $24 = %94<builtinIfElse>
  $25 = dup $21 by 1
  $26 = %157<{ body_0 }>
  $27 = dup $23 by 1
  $28 = call $24<%94<builtinIfElse>> with $21 $26<%157<{ body_0 }>> $23 ($20<%91<anonymous:$generated::needs>> is responsible)
  $29 = dup $28 by 1
  $30 = %158<{ body_1 }>
  $31 = %175<{ body_36 }>
  $32 = call $24<%94<builtinIfElse>> with $28 $30<%158<{ body_1 }>> $31<%175<{ body_36 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $33 = dup $2 by 1
  $34 = { body_39 capturing $2 }
  $35 = dup $11 by 1
  $36 = dup $34 by 1
  $37 = call $24<%94<builtinIfElse>> with $11 $30<%158<{ body_1 }>> $34 ($20<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = dup $1 by 1
  $40 = call $3<%109<builtinTypeOf>> with $1 ($5<%32<Builtins::typeIs:19>> is responsible)
  $41 = dup $40 by 1
  $42 = call $7<%92<builtinEquals>> with $40 $9<%114<Int>> ($10<%33<Builtins::typeIs:25>> is responsible)
  $43 = %12<Builtins::intAdd:11>
  $44 = dup $42 by 1
  $45 = %140<"`b | typeIs Int` was not satisfied">
  $46 = dup $2 by 1
  $47 = trace: start of call of $13<%159<{ body_6 }>> with $42 $45<%140<"`b | typeIs Int` was not satisfied">> $2 ($43<%12<Builtins::intAdd:11>> is responsible, code is at $43<%12<Builtins::intAdd:11>>)
  $48 = dup $42 by 1
  $49 = call $7<%92<builtinEquals>> with $42 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $50 = dup $42 by 1
  $51 = { body_40 capturing $42 }
  $52 = dup $49 by 1
  $53 = dup $51 by 1
  $54 = call $24<%94<builtinIfElse>> with $49 $26<%157<{ body_0 }>> $51 ($20<%91<anonymous:$generated::needs>> is responsible)
  $55 = dup $54 by 1
  $56 = %176<{ body_37 }>
  $57 = call $24<%94<builtinIfElse>> with $54 $30<%158<{ body_1 }>> $56<%176<{ body_37 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $58 = dup $2 by 1
  $59 = { body_41 capturing $2 }
  $60 = dup $42 by 1
  $61 = dup $59 by 1
  $62 = call $24<%94<builtinIfElse>> with $42 $30<%158<{ body_1 }>> $59 ($20<%91<anonymous:$generated::needs>> is responsible)
  $63 = trace: end of call
  $64 = %95<builtinIntAdd>
  $65 = dup $0 by 1
  $66 = dup $1 by 1
  $67 = %13<Builtins::intAdd:18>
  $68 = call $64<%95<builtinIntAdd>> with $0 $1 ($67<%13<Builtins::intAdd:18>> is responsible)
  $69 = drop $62
  $70 = drop $59
  $71 = drop $57
  $72 = drop $54
  $73 = drop $51
  $74 = drop $49
  $75 = drop $42
  $76 = drop $40
  $77 = drop $37
  $78 = drop $34
  $79 = drop $32
  $80 = drop $28
  $81 = drop $23
  $82 = drop $21
  $83 = drop $11
  $84 = drop $6
  $85 = drop $1
  $86 = drop $0
  $87 = $68
body_43 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %17<Builtins::intCompareTo:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%17<Builtins::intCompareTo:5>> is at fault)
body_44 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %15<Builtins::intCompareTo:11>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%15<Builtins::intCompareTo:11>> is at fault)
body_45 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_46 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %139<"`a | typeIs Int` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%139<"`a | typeIs Int` was not satisfied">> ($0 is at fault)
body_47 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_48 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %140<"`b | typeIs Int` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%140<"`b | typeIs Int` was not satisfied">> ($0 is at fault)
body_49 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::intCompareTo
  # Captured IDs: none
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %32<Builtins::typeIs:19>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%32<Builtins::typeIs:19>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %114<Int>
  $10 = %33<Builtins::typeIs:25>
  $11 = call $7<%92<builtinEquals>> with $6 $9<%114<Int>> ($10<%33<Builtins::typeIs:25>> is responsible)
  $12 = %17<Builtins::intCompareTo:5>
  $13 = %159<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %139<"`a | typeIs Int` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%159<{ body_6 }>> with $11 $15<%139<"`a | typeIs Int` was not satisfied">> $2 ($12<%17<Builtins::intCompareTo:5>> is responsible, code is at $12<%17<Builtins::intCompareTo:5>>)
  $18 = dup $11 by 1
  $19 = %125<True>
  $20 = %91<anonymous:$generated::needs>
  $21 = call $7<%92<builtinEquals>> with $11 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $22 = dup $11 by 1
  $23 = { body_45 capturing $11 }
  $24 = %94<builtinIfElse>
  $25 = dup $21 by 1
  $26 = %157<{ body_0 }>
  $27 = dup $23 by 1
  $28 = call $24<%94<builtinIfElse>> with $21 $26<%157<{ body_0 }>> $23 ($20<%91<anonymous:$generated::needs>> is responsible)
  $29 = dup $28 by 1
  $30 = %158<{ body_1 }>
  $31 = %178<{ body_43 }>
  $32 = call $24<%94<builtinIfElse>> with $28 $30<%158<{ body_1 }>> $31<%178<{ body_43 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $33 = dup $2 by 1
  $34 = { body_46 capturing $2 }
  $35 = dup $11 by 1
  $36 = dup $34 by 1
  $37 = call $24<%94<builtinIfElse>> with $11 $30<%158<{ body_1 }>> $34 ($20<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = dup $1 by 1
  $40 = call $3<%109<builtinTypeOf>> with $1 ($5<%32<Builtins::typeIs:19>> is responsible)
  $41 = dup $40 by 1
  $42 = call $7<%92<builtinEquals>> with $40 $9<%114<Int>> ($10<%33<Builtins::typeIs:25>> is responsible)
  $43 = %15<Builtins::intCompareTo:11>
  $44 = dup $42 by 1
  $45 = %140<"`b | typeIs Int` was not satisfied">
  $46 = dup $2 by 1
  $47 = trace: start of call of $13<%159<{ body_6 }>> with $42 $45<%140<"`b | typeIs Int` was not satisfied">> $2 ($43<%15<Builtins::intCompareTo:11>> is responsible, code is at $43<%15<Builtins::intCompareTo:11>>)
  $48 = dup $42 by 1
  $49 = call $7<%92<builtinEquals>> with $42 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $50 = dup $42 by 1
  $51 = { body_47 capturing $42 }
  $52 = dup $49 by 1
  $53 = dup $51 by 1
  $54 = call $24<%94<builtinIfElse>> with $49 $26<%157<{ body_0 }>> $51 ($20<%91<anonymous:$generated::needs>> is responsible)
  $55 = dup $54 by 1
  $56 = %179<{ body_44 }>
  $57 = call $24<%94<builtinIfElse>> with $54 $30<%158<{ body_1 }>> $56<%179<{ body_44 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $58 = dup $2 by 1
  $59 = { body_48 capturing $2 }
  $60 = dup $42 by 1
  $61 = dup $59 by 1
  $62 = call $24<%94<builtinIfElse>> with $42 $30<%158<{ body_1 }>> $59 ($20<%91<anonymous:$generated::needs>> is responsible)
  $63 = trace: end of call
  $64 = %96<builtinIntCompareTo>
  $65 = dup $0 by 1
  $66 = dup $1 by 1
  $67 = %16<Builtins::intCompareTo:18>
  $68 = call $64<%96<builtinIntCompareTo>> with $0 $1 ($67<%16<Builtins::intCompareTo:18>> is responsible)
  $69 = drop $62
  $70 = drop $59
  $71 = drop $57
  $72 = drop $54
  $73 = drop $51
  $74 = drop $49
  $75 = drop $42
  $76 = drop $40
  $77 = drop $37
  $78 = drop $34
  $79 = drop $32
  $80 = drop $28
  $81 = drop $23
  $82 = drop $21
  $83 = drop $11
  $84 = drop $6
  $85 = drop $1
  $86 = drop $0
  $87 = $68
body_50 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %19<Builtins::intParse:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%19<Builtins::intParse:5>> is at fault)
body_51 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_52 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %154<"`text | typeIs Text` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%154<"`text | typeIs Text` was not satisfied">> ($0 is at fault)
body_53 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::intParse
  # Captured IDs: none
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %32<Builtins::typeIs:19>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%32<Builtins::typeIs:19>> is responsible)
  $6 = %92<builtinEquals>
  $7 = dup $5 by 1
  $8 = %124<Text>
  $9 = %33<Builtins::typeIs:25>
  $10 = call $6<%92<builtinEquals>> with $5 $8<%124<Text>> ($9<%33<Builtins::typeIs:25>> is responsible)
  $11 = %19<Builtins::intParse:5>
  $12 = %159<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %154<"`text | typeIs Text` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%159<{ body_6 }>> with $10 $14<%154<"`text | typeIs Text` was not satisfied">> $1 ($11<%19<Builtins::intParse:5>> is responsible, code is at $11<%19<Builtins::intParse:5>>)
  $17 = dup $10 by 1
  $18 = %125<True>
  $19 = %91<anonymous:$generated::needs>
  $20 = call $6<%92<builtinEquals>> with $10 $18<%125<True>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $21 = dup $10 by 1
  $22 = { body_51 capturing $10 }
  $23 = %94<builtinIfElse>
  $24 = dup $20 by 1
  $25 = %157<{ body_0 }>
  $26 = dup $22 by 1
  $27 = call $23<%94<builtinIfElse>> with $20 $25<%157<{ body_0 }>> $22 ($19<%91<anonymous:$generated::needs>> is responsible)
  $28 = dup $27 by 1
  $29 = %158<{ body_1 }>
  $30 = %181<{ body_50 }>
  $31 = call $23<%94<builtinIfElse>> with $27 $29<%158<{ body_1 }>> $30<%181<{ body_50 }>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $32 = dup $1 by 1
  $33 = { body_52 capturing $1 }
  $34 = dup $10 by 1
  $35 = dup $33 by 1
  $36 = call $23<%94<builtinIfElse>> with $10 $29<%158<{ body_1 }>> $33 ($19<%91<anonymous:$generated::needs>> is responsible)
  $37 = trace: end of call
  $38 = %97<builtinIntParse>
  $39 = dup $0 by 1
  $40 = %18<Builtins::intParse:11>
  $41 = call $38<%97<builtinIntParse>> with $0 ($40<%18<Builtins::intParse:11>> is responsible)
  $42 = drop $36
  $43 = drop $33
  $44 = drop $31
  $45 = drop $27
  $46 = drop $22
  $47 = drop $20
  $48 = drop $10
  $49 = drop $5
  $50 = drop $0
  $51 = $41
body_54 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %22<Builtins::intSubtract:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%22<Builtins::intSubtract:5>> is at fault)
body_55 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %20<Builtins::intSubtract:11>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%20<Builtins::intSubtract:11>> is at fault)
body_56 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_57 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %148<"`minuend | typeIs Int` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%148<"`minuend | typeIs Int` was not satisfied">> ($0 is at fault)
body_58 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_59 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %151<"`subtrahend | typeIs Int` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%151<"`subtrahend | typeIs Int` was not satisfied">> ($0 is at fault)
body_60 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::intSubtract
  # Captured IDs: none
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %32<Builtins::typeIs:19>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%32<Builtins::typeIs:19>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %114<Int>
  $10 = %33<Builtins::typeIs:25>
  $11 = call $7<%92<builtinEquals>> with $6 $9<%114<Int>> ($10<%33<Builtins::typeIs:25>> is responsible)
  $12 = %22<Builtins::intSubtract:5>
  $13 = %159<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %148<"`minuend | typeIs Int` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%159<{ body_6 }>> with $11 $15<%148<"`minuend | typeIs Int` was not satisfied">> $2 ($12<%22<Builtins::intSubtract:5>> is responsible, code is at $12<%22<Builtins::intSubtract:5>>)
  $18 = dup $11 by 1
  $19 = %125<True>
  $20 = %91<anonymous:$generated::needs>
  $21 = call $7<%92<builtinEquals>> with $11 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $22 = dup $11 by 1
  $23 = { body_56 capturing $11 }
  $24 = %94<builtinIfElse>
  $25 = dup $21 by 1
  $26 = %157<{ body_0 }>
  $27 = dup $23 by 1
  $28 = call $24<%94<builtinIfElse>> with $21 $26<%157<{ body_0 }>> $23 ($20<%91<anonymous:$generated::needs>> is responsible)
  $29 = dup $28 by 1
  $30 = %158<{ body_1 }>
  $31 = %183<{ body_54 }>
  $32 = call $24<%94<builtinIfElse>> with $28 $30<%158<{ body_1 }>> $31<%183<{ body_54 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $33 = dup $2 by 1
  $34 = { body_57 capturing $2 }
  $35 = dup $11 by 1
  $36 = dup $34 by 1
  $37 = call $24<%94<builtinIfElse>> with $11 $30<%158<{ body_1 }>> $34 ($20<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = dup $1 by 1
  $40 = call $3<%109<builtinTypeOf>> with $1 ($5<%32<Builtins::typeIs:19>> is responsible)
  $41 = dup $40 by 1
  $42 = call $7<%92<builtinEquals>> with $40 $9<%114<Int>> ($10<%33<Builtins::typeIs:25>> is responsible)
  $43 = %20<Builtins::intSubtract:11>
  $44 = dup $42 by 1
  $45 = %151<"`subtrahend | typeIs Int` was not satisfied">
  $46 = dup $2 by 1
  $47 = trace: start of call of $13<%159<{ body_6 }>> with $42 $45<%151<"`subtrahend | typeIs Int` was not satisfied">> $2 ($43<%20<Builtins::intSubtract:11>> is responsible, code is at $43<%20<Builtins::intSubtract:11>>)
  $48 = dup $42 by 1
  $49 = call $7<%92<builtinEquals>> with $42 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $50 = dup $42 by 1
  $51 = { body_58 capturing $42 }
  $52 = dup $49 by 1
  $53 = dup $51 by 1
  $54 = call $24<%94<builtinIfElse>> with $49 $26<%157<{ body_0 }>> $51 ($20<%91<anonymous:$generated::needs>> is responsible)
  $55 = dup $54 by 1
  $56 = %184<{ body_55 }>
  $57 = call $24<%94<builtinIfElse>> with $54 $30<%158<{ body_1 }>> $56<%184<{ body_55 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $58 = dup $2 by 1
  $59 = { body_59 capturing $2 }
  $60 = dup $42 by 1
  $61 = dup $59 by 1
  $62 = call $24<%94<builtinIfElse>> with $42 $30<%158<{ body_1 }>> $59 ($20<%91<anonymous:$generated::needs>> is responsible)
  $63 = trace: end of call
  $64 = %98<builtinIntSubtract>
  $65 = dup $0 by 1
  $66 = dup $1 by 1
  $67 = %21<Builtins::intSubtract:18>
  $68 = call $64<%98<builtinIntSubtract>> with $0 $1 ($67<%21<Builtins::intSubtract:18>> is responsible)
  $69 = drop $62
  $70 = drop $59
  $71 = drop $57
  $72 = drop $54
  $73 = drop $51
  $74 = drop $49
  $75 = drop $42
  $76 = drop $40
  $77 = drop $37
  $78 = drop $34
  $79 = drop $32
  $80 = drop $28
  $81 = drop $23
  $82 = drop $21
  $83 = drop $11
  $84 = drop $6
  $85 = drop $1
  $86 = drop $0
  $87 = $68
body_61 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %26<Builtins::structGet:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%26<Builtins::structGet:5>> is at fault)
body_62 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %24<Builtins::structGet:14>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%24<Builtins::structGet:14>> is at fault)
body_63 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_64 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %149<"`struct | typeIs Struct` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%149<"`struct | typeIs Struct` was not satisfied">> ($0 is at fault)
body_65 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_66 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %150<"`struct | ✨.structHasKey key` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%150<"`struct | ✨.structHasKey key` was not satisfied">> ($0 is at fault)
body_67 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::structGet
  # Captured IDs: none
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %32<Builtins::typeIs:19>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%32<Builtins::typeIs:19>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %122<Struct>
  $10 = %33<Builtins::typeIs:25>
  $11 = call $7<%92<builtinEquals>> with $6 $9<%122<Struct>> ($10<%33<Builtins::typeIs:25>> is responsible)
  $12 = %26<Builtins::structGet:5>
  $13 = %159<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %149<"`struct | typeIs Struct` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%159<{ body_6 }>> with $11 $15<%149<"`struct | typeIs Struct` was not satisfied">> $2 ($12<%26<Builtins::structGet:5>> is responsible, code is at $12<%26<Builtins::structGet:5>>)
  $18 = dup $11 by 1
  $19 = %125<True>
  $20 = %91<anonymous:$generated::needs>
  $21 = call $7<%92<builtinEquals>> with $11 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $22 = dup $11 by 1
  $23 = { body_63 capturing $11 }
  $24 = %94<builtinIfElse>
  $25 = dup $21 by 1
  $26 = %157<{ body_0 }>
  $27 = dup $23 by 1
  $28 = call $24<%94<builtinIfElse>> with $21 $26<%157<{ body_0 }>> $23 ($20<%91<anonymous:$generated::needs>> is responsible)
  $29 = dup $28 by 1
  $30 = %158<{ body_1 }>
  $31 = %186<{ body_61 }>
  $32 = call $24<%94<builtinIfElse>> with $28 $30<%158<{ body_1 }>> $31<%186<{ body_61 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $33 = dup $2 by 1
  $34 = { body_64 capturing $2 }
  $35 = dup $11 by 1
  $36 = dup $34 by 1
  $37 = call $24<%94<builtinIfElse>> with $11 $30<%158<{ body_1 }>> $34 ($20<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = %102<builtinStructHasKey>
  $40 = dup $0 by 1
  $41 = dup $1 by 1
  $42 = %23<Builtins::structGet:12>
  $43 = call $39<%102<builtinStructHasKey>> with $0 $1 ($42<%23<Builtins::structGet:12>> is responsible)
  $44 = %24<Builtins::structGet:14>
  $45 = dup $43 by 1
  $46 = %150<"`struct | ✨.structHasKey key` was not satisfied">
  $47 = dup $2 by 1
  $48 = trace: start of call of $13<%159<{ body_6 }>> with $43 $46<%150<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($44<%24<Builtins::structGet:14>> is responsible, code is at $44<%24<Builtins::structGet:14>>)
  $49 = dup $43 by 1
  $50 = call $7<%92<builtinEquals>> with $43 $19<%125<True>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $51 = dup $43 by 1
  $52 = { body_65 capturing $43 }
  $53 = dup $50 by 1
  $54 = dup $52 by 1
  $55 = call $24<%94<builtinIfElse>> with $50 $26<%157<{ body_0 }>> $52 ($20<%91<anonymous:$generated::needs>> is responsible)
  $56 = dup $55 by 1
  $57 = %187<{ body_62 }>
  $58 = call $24<%94<builtinIfElse>> with $55 $30<%158<{ body_1 }>> $57<%187<{ body_62 }>> ($20<%91<anonymous:$generated::needs>> is responsible)
  $59 = dup $2 by 1
  $60 = { body_66 capturing $2 }
  $61 = dup $43 by 1
  $62 = dup $60 by 1
  $63 = call $24<%94<builtinIfElse>> with $43 $30<%158<{ body_1 }>> $60 ($20<%91<anonymous:$generated::needs>> is responsible)
  $64 = trace: end of call
  $65 = %101<builtinStructGet>
  $66 = dup $0 by 1
  $67 = dup $1 by 1
  $68 = %25<Builtins::structGet:21>
  $69 = call $65<%101<builtinStructGet>> with $0 $1 ($68<%25<Builtins::structGet:21>> is responsible)
  $70 = drop $63
  $71 = drop $60
  $72 = drop $58
  $73 = drop $55
  $74 = drop $52
  $75 = drop $50
  $76 = drop $43
  $77 = drop $37
  $78 = drop $34
  $79 = drop $32
  $80 = drop $28
  $81 = drop $23
  $82 = drop $21
  $83 = drop $11
  $84 = drop $6
  $85 = drop $1
  $86 = drop $0
  $87 = $69
body_68 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %30<Builtins::tagGetValue:5>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%30<Builtins::tagGetValue:5>> is at fault)
body_69 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %28<Builtins::tagGetValue:13>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%28<Builtins::tagGetValue:13>> is at fault)
body_70 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_71 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %152<"`tag | typeIs Tag` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%152<"`tag | typeIs Tag` was not satisfied">> ($0 is at fault)
body_72 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_73 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %153<"`tag | ✨.tagHasValue` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%153<"`tag | ✨.tagHasValue` was not satisfied">> ($0 is at fault)
body_74 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::tagGetValue
  # Captured IDs: none
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %32<Builtins::typeIs:19>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%32<Builtins::typeIs:19>> is responsible)
  $6 = %92<builtinEquals>
  $7 = dup $5 by 1
  $8 = %123<Tag>
  $9 = %33<Builtins::typeIs:25>
  $10 = call $6<%92<builtinEquals>> with $5 $8<%123<Tag>> ($9<%33<Builtins::typeIs:25>> is responsible)
  $11 = %30<Builtins::tagGetValue:5>
  $12 = %159<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %152<"`tag | typeIs Tag` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%159<{ body_6 }>> with $10 $14<%152<"`tag | typeIs Tag` was not satisfied">> $1 ($11<%30<Builtins::tagGetValue:5>> is responsible, code is at $11<%30<Builtins::tagGetValue:5>>)
  $17 = dup $10 by 1
  $18 = %125<True>
  $19 = %91<anonymous:$generated::needs>
  $20 = call $6<%92<builtinEquals>> with $10 $18<%125<True>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $21 = dup $10 by 1
  $22 = { body_70 capturing $10 }
  $23 = %94<builtinIfElse>
  $24 = dup $20 by 1
  $25 = %157<{ body_0 }>
  $26 = dup $22 by 1
  $27 = call $23<%94<builtinIfElse>> with $20 $25<%157<{ body_0 }>> $22 ($19<%91<anonymous:$generated::needs>> is responsible)
  $28 = dup $27 by 1
  $29 = %158<{ body_1 }>
  $30 = %189<{ body_68 }>
  $31 = call $23<%94<builtinIfElse>> with $27 $29<%158<{ body_1 }>> $30<%189<{ body_68 }>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $32 = dup $1 by 1
  $33 = { body_71 capturing $1 }
  $34 = dup $10 by 1
  $35 = dup $33 by 1
  $36 = call $23<%94<builtinIfElse>> with $10 $29<%158<{ body_1 }>> $33 ($19<%91<anonymous:$generated::needs>> is responsible)
  $37 = trace: end of call
  $38 = %104<builtinTagHasValue>
  $39 = dup $0 by 1
  $40 = %27<Builtins::tagGetValue:11>
  $41 = call $38<%104<builtinTagHasValue>> with $0 ($40<%27<Builtins::tagGetValue:11>> is responsible)
  $42 = %28<Builtins::tagGetValue:13>
  $43 = dup $41 by 1
  $44 = %153<"`tag | ✨.tagHasValue` was not satisfied">
  $45 = dup $1 by 1
  $46 = trace: start of call of $12<%159<{ body_6 }>> with $41 $44<%153<"`tag | ✨.tagHasValue` was not satisfied">> $1 ($42<%28<Builtins::tagGetValue:13>> is responsible, code is at $42<%28<Builtins::tagGetValue:13>>)
  $47 = dup $41 by 1
  $48 = call $6<%92<builtinEquals>> with $41 $18<%125<True>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $49 = dup $41 by 1
  $50 = { body_72 capturing $41 }
  $51 = dup $48 by 1
  $52 = dup $50 by 1
  $53 = call $23<%94<builtinIfElse>> with $48 $25<%157<{ body_0 }>> $50 ($19<%91<anonymous:$generated::needs>> is responsible)
  $54 = dup $53 by 1
  $55 = %190<{ body_69 }>
  $56 = call $23<%94<builtinIfElse>> with $53 $29<%158<{ body_1 }>> $55<%190<{ body_69 }>> ($19<%91<anonymous:$generated::needs>> is responsible)
  $57 = dup $1 by 1
  $58 = { body_73 capturing $1 }
  $59 = dup $41 by 1
  $60 = dup $58 by 1
  $61 = call $23<%94<builtinIfElse>> with $41 $29<%158<{ body_1 }>> $58 ($19<%91<anonymous:$generated::needs>> is responsible)
  $62 = trace: end of call
  $63 = %103<builtinTagGetValue>
  $64 = dup $0 by 1
  $65 = %29<Builtins::tagGetValue:19>
  $66 = call $63<%103<builtinTagGetValue>> with $0 ($65<%29<Builtins::tagGetValue:19>> is responsible)
  $67 = drop $61
  $68 = drop $58
  $69 = drop $56
  $70 = drop $53
  $71 = drop $50
  $72 = drop $48
  $73 = drop $41
  $74 = drop $36
  $75 = drop $33
  $76 = drop $31
  $77 = drop $27
  $78 = drop $22
  $79 = drop $20
  $80 = drop $10
  $81 = drop $5
  $82 = drop $0
  $83 = $66
body_75 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %144<"`function | typeIs Function` was not satisfied">
  $2 = %36<Core:function:is1:9:3>
  $3 = panicking because $1<%144<"`function | typeIs Function` was not satisfied">> ($2<%36<Core:function:is1:9:3>> is at fault)
body_76 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %141<"`conditionIsBool` was not satisfied">
  $2 = %35<Core:function:is1:11>
  $3 = panicking because $1<%141<"`conditionIsBool` was not satisfied">> ($2<%35<Core:function:is1:11>> is at fault)
body_77 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_78 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %36<Core:function:is1:9:3>
  $3 = %166<{ body_13 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%166<{ body_13 }>> with $0 ($2<%36<Core:function:is1:9:3>> is responsible, code is at $2<%36<Core:function:is1:9:3>>)
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %32<Builtins::typeIs:19>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%32<Builtins::typeIs:19>> is responsible)
  $10 = %92<builtinEquals>
  $11 = dup $9 by 1
  $12 = %113<Function>
  $13 = %33<Builtins::typeIs:25>
  $14 = call $10<%92<builtinEquals>> with $9 $12<%113<Function>> ($13<%33<Builtins::typeIs:25>> is responsible)
  $15 = %2<Builtins::getArgumentCount:5>
  $16 = %159<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %144<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%159<{ body_6 }>> with $14 $18<%144<"`function | typeIs Function` was not satisfied">> $2<%36<Core:function:is1:9:3>> ($15<%2<Builtins::getArgumentCount:5>> is responsible, code is at $15<%2<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = %125<True>
  $22 = %91<anonymous:$generated::needs>
  $23 = call $10<%92<builtinEquals>> with $14 $21<%125<True>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $24 = dup $14 by 1
  $25 = { body_77 capturing $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $23 by 1
  $28 = %157<{ body_0 }>
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $23 $28<%157<{ body_0 }>> $25 ($22<%91<anonymous:$generated::needs>> is responsible)
  $31 = dup $30 by 1
  $32 = %158<{ body_1 }>
  $33 = %165<{ body_10 }>
  $34 = call $26<%94<builtinIfElse>> with $30 $32<%158<{ body_1 }>> $33<%165<{ body_10 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $35 = dup $14 by 1
  $36 = %192<{ body_75 }>
  $37 = call $26<%94<builtinIfElse>> with $14 $32<%158<{ body_1 }>> $36<%192<{ body_75 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = %93<builtinGetArgumentCount>
  $40 = dup $0 by 1
  $41 = %1<Builtins::getArgumentCount:11>
  $42 = call $39<%93<builtinGetArgumentCount>> with $0 ($41<%1<Builtins::getArgumentCount:11>> is responsible)
  $43 = trace: end of call
  $44 = dup $42 by 1
  $45 = %127<1>
  $46 = %0<Builtins::equals:6>
  $47 = call $10<%92<builtinEquals>> with $42 $45<%127<1>> ($46<%0<Builtins::equals:6>> is responsible)
  $48 = drop $42
  $49 = drop $37
  $50 = drop $34
  $51 = drop $30
  $52 = drop $25
  $53 = drop $23
  $54 = drop $14
  $55 = drop $9
  $56 = $47
body_79 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_80 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_81 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_82 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is1
  # Captured IDs: none
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %34<Builtins::typeOf:5>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%34<Builtins::typeOf:5>> is responsible)
  $6 = %92<builtinEquals>
  $7 = dup $5 by 1
  $8 = %113<Function>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%92<builtinEquals>> with $5 $8<%113<Function>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_78 capturing $0 }
  $13 = %35<Core:function:is1:11>
  $14 = %174<{ body_35 }>
  $15 = dup $10 by 1
  $16 = dup $12 by 1
  $17 = %164<{ body_9 }>
  $18 = trace: start of call of $14<%174<{ body_35 }>> with $10 $12 $17<%164<{ body_9 }>> ($13<%35<Core:function:is1:11>> is responsible, code is at $13<%35<Core:function:is1:11>>)
  $19 = %125<True>
  $20 = dup $10 by 1
  $21 = %3<Builtins::ifElse:1>
  $22 = call $6<%92<builtinEquals>> with $19<%125<True>> $10 ($21<%3<Builtins::ifElse:1>> is responsible)
  $23 = %94<builtinIfElse>
  $24 = dup $22 by 1
  $25 = %162<{ body_7 }>
  $26 = %163<{ body_8 }>
  $27 = call $23<%94<builtinIfElse>> with $22 $25<%162<{ body_7 }>> $26<%163<{ body_8 }>> ($21<%3<Builtins::ifElse:1>> is responsible)
  $28 = %106<builtinTagWithoutValue>
  $29 = dup $27 by 1
  $30 = call $28<%106<builtinTagWithoutValue>> with $27 ($21<%3<Builtins::ifElse:1>> is responsible)
  $31 = dup $30 by 1
  $32 = %117<Match>
  $33 = call $6<%92<builtinEquals>> with $30 $32<%117<Match>> ($21<%3<Builtins::ifElse:1>> is responsible)
  $34 = dup $27 by 1
  $35 = { body_79 capturing $27 }
  $36 = dup $10 by 1
  $37 = { body_80 capturing $10 }
  $38 = dup $33 by 1
  $39 = dup $35 by 1
  $40 = dup $37 by 1
  $41 = call $23<%94<builtinIfElse>> with $33 $35 $37 ($21<%3<Builtins::ifElse:1>> is responsible)
  $42 = dup $41 by 1
  $43 = call $28<%106<builtinTagWithoutValue>> with $41 ($21<%3<Builtins::ifElse:1>> is responsible)
  $44 = dup $43 by 1
  $45 = call $6<%92<builtinEquals>> with $43 $32<%117<Match>> ($21<%3<Builtins::ifElse:1>> is responsible)
  $46 = dup $45 by 1
  $47 = %157<{ body_0 }>
  $48 = call $23<%94<builtinIfElse>> with $45 $47<%157<{ body_0 }>> $17<%164<{ body_9 }>> ($21<%3<Builtins::ifElse:1>> is responsible)
  $49 = %11<Builtins::ifElse:5>
  $50 = %159<{ body_6 }>
  $51 = dup $48 by 1
  $52 = %141<"`conditionIsBool` was not satisfied">
  $53 = trace: start of call of $50<%159<{ body_6 }>> with $48 $52<%141<"`conditionIsBool` was not satisfied">> $13<%35<Core:function:is1:11>> ($49<%11<Builtins::ifElse:5>> is responsible, code is at $49<%11<Builtins::ifElse:5>>)
  $54 = dup $48 by 1
  $55 = %91<anonymous:$generated::needs>
  $56 = call $6<%92<builtinEquals>> with $48 $19<%125<True>> ($55<%91<anonymous:$generated::needs>> is responsible)
  $57 = dup $48 by 1
  $58 = { body_81 capturing $48 }
  $59 = dup $56 by 1
  $60 = dup $58 by 1
  $61 = call $23<%94<builtinIfElse>> with $56 $47<%157<{ body_0 }>> $58 ($55<%91<anonymous:$generated::needs>> is responsible)
  $62 = dup $61 by 1
  $63 = %158<{ body_1 }>
  $64 = %167<{ body_14 }>
  $65 = call $23<%94<builtinIfElse>> with $61 $63<%158<{ body_1 }>> $64<%167<{ body_14 }>> ($55<%91<anonymous:$generated::needs>> is responsible)
  $66 = dup $48 by 1
  $67 = %193<{ body_76 }>
  $68 = call $23<%94<builtinIfElse>> with $48 $63<%158<{ body_1 }>> $67<%193<{ body_76 }>> ($55<%91<anonymous:$generated::needs>> is responsible)
  $69 = trace: end of call
  $70 = %10<Builtins::ifElse:41>
  $71 = dup $10 by 1
  $72 = dup $12 by 1
  $73 = trace: start of call of $23<%94<builtinIfElse>> with $10 $12 $17<%164<{ body_9 }>> ($70<%10<Builtins::ifElse:41>> is responsible, code is at $70<%10<Builtins::ifElse:41>>)
  $74 = dup $10 by 1
  $75 = dup $12 by 1
  $76 = call $23<%94<builtinIfElse>> with $10 $12 $17<%164<{ body_9 }>> ($70<%10<Builtins::ifElse:41>> is responsible)
  $77 = trace: end of call
  $78 = trace: end of call
  $79 = dup $76 by 1
  $80 = $76
  $81 = drop $76
  $82 = drop $68
  $83 = drop $65
  $84 = drop $61
  $85 = drop $58
  $86 = drop $56
  $87 = drop $48
  $88 = drop $45
  $89 = drop $43
  $90 = drop $41
  $91 = drop $37
  $92 = drop $35
  $93 = drop $33
  $94 = drop $30
  $95 = drop $27
  $96 = drop $22
  $97 = drop $12
  $98 = drop $10
  $99 = drop $5
  $100 = drop $0
  $101 = $80
body_83 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_84 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_83 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_85 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_84 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_86 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_87 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_88 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_87 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_89 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_88 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_90 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_89 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_91 $0 (+ responsible $1) =
  # Original HIR IDs: Core:result:is
  # Captured IDs: none
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_85 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = %106<builtinTagWithoutValue>
  $18 = dup $16 by 1
  $19 = call $17<%106<builtinTagWithoutValue>> with $16 ($4<%46<Core:result:is:1>> is responsible)
  $20 = dup $19 by 1
  $21 = %117<Match>
  $22 = call $6<%92<builtinEquals>> with $19 $21<%117<Match>> ($4<%46<Core:result:is:1>> is responsible)
  $23 = dup $16 by 1
  $24 = { body_86 capturing $16 }
  $25 = dup $0 by 1
  $26 = { body_90 capturing $0 }
  $27 = dup $22 by 1
  $28 = dup $24 by 1
  $29 = dup $26 by 1
  $30 = call $12<%94<builtinIfElse>> with $22 $24 $26 ($4<%46<Core:result:is:1>> is responsible)
  $31 = dup $30 by 1
  $32 = call $17<%106<builtinTagWithoutValue>> with $30 ($4<%46<Core:result:is:1>> is responsible)
  $33 = dup $32 by 1
  $34 = call $6<%92<builtinEquals>> with $32 $21<%117<Match>> ($4<%46<Core:result:is:1>> is responsible)
  $35 = dup $34 by 1
  $36 = %157<{ body_0 }>
  $37 = %164<{ body_9 }>
  $38 = call $12<%94<builtinIfElse>> with $34 $36<%157<{ body_0 }>> $37<%164<{ body_9 }>> ($4<%46<Core:result:is:1>> is responsible)
  $39 = drop $34
  $40 = drop $32
  $41 = drop $30
  $42 = drop $26
  $43 = drop $24
  $44 = drop $22
  $45 = drop $19
  $46 = drop $16
  $47 = drop $11
  $48 = drop $9
  $49 = drop $5
  $50 = drop $0
  $51 = $38
body_92 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %68<Core:result:mapOrElse:4>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%68<Core:result:mapOrElse:4>> is at fault)
body_93 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %59<Core:result:mapOrElse:14>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%59<Core:result:mapOrElse:14>> is at fault)
body_94 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %62<Core:result:mapOrElse:24>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%62<Core:result:mapOrElse:24>> is at fault)
body_95 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %64<Core:result:mapOrElse:26:2>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%64<Core:result:mapOrElse:26:2>> is at fault)
body_96 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %64<Core:result:mapOrElse:26:2>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%64<Core:result:mapOrElse:26:2>> is at fault)
body_97 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %65<Core:result:mapOrElse:26:5>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%65<Core:result:mapOrElse:26:5>> is at fault)
body_98 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %65<Core:result:mapOrElse:26:5>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%65<Core:result:mapOrElse:26:5>> is at fault)
body_99 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-1:didNotMatch
  # Captured IDs: none
  $1 = %131<"No case matched the given expression.">
  $2 = %63<Core:result:mapOrElse:26>
  $3 = panicking because $1<%131<"No case matched the given expression.">> ($2<%63<Core:result:mapOrElse:26>> is at fault)
body_100 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_101 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_100 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_102 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_101 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_103 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_104 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_105 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_104 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_106 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_105 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_107 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_106 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_108 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_109 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %147<"`is result` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%147<"`is result` was not satisfied">> ($0 is at fault)
body_110 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_111 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %36<Core:function:is1:9:3>
  $3 = %166<{ body_13 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%166<{ body_13 }>> with $0 ($2<%36<Core:function:is1:9:3>> is responsible, code is at $2<%36<Core:function:is1:9:3>>)
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %32<Builtins::typeIs:19>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%32<Builtins::typeIs:19>> is responsible)
  $10 = %92<builtinEquals>
  $11 = dup $9 by 1
  $12 = %113<Function>
  $13 = %33<Builtins::typeIs:25>
  $14 = call $10<%92<builtinEquals>> with $9 $12<%113<Function>> ($13<%33<Builtins::typeIs:25>> is responsible)
  $15 = %2<Builtins::getArgumentCount:5>
  $16 = %159<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %144<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%159<{ body_6 }>> with $14 $18<%144<"`function | typeIs Function` was not satisfied">> $2<%36<Core:function:is1:9:3>> ($15<%2<Builtins::getArgumentCount:5>> is responsible, code is at $15<%2<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = %125<True>
  $22 = %91<anonymous:$generated::needs>
  $23 = call $10<%92<builtinEquals>> with $14 $21<%125<True>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $24 = dup $14 by 1
  $25 = { body_110 capturing $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $23 by 1
  $28 = %157<{ body_0 }>
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $23 $28<%157<{ body_0 }>> $25 ($22<%91<anonymous:$generated::needs>> is responsible)
  $31 = dup $30 by 1
  $32 = %158<{ body_1 }>
  $33 = %165<{ body_10 }>
  $34 = call $26<%94<builtinIfElse>> with $30 $32<%158<{ body_1 }>> $33<%165<{ body_10 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $35 = dup $14 by 1
  $36 = %192<{ body_75 }>
  $37 = call $26<%94<builtinIfElse>> with $14 $32<%158<{ body_1 }>> $36<%192<{ body_75 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = %93<builtinGetArgumentCount>
  $40 = dup $0 by 1
  $41 = %1<Builtins::getArgumentCount:11>
  $42 = call $39<%93<builtinGetArgumentCount>> with $0 ($41<%1<Builtins::getArgumentCount:11>> is responsible)
  $43 = trace: end of call
  $44 = dup $42 by 1
  $45 = %127<1>
  $46 = %0<Builtins::equals:6>
  $47 = call $10<%92<builtinEquals>> with $42 $45<%127<1>> ($46<%0<Builtins::equals:6>> is responsible)
  $48 = drop $42
  $49 = drop $37
  $50 = drop $34
  $51 = drop $30
  $52 = drop $25
  $53 = drop $23
  $54 = drop $14
  $55 = drop $9
  $56 = $47
body_112 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_113 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_114 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_115 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_116 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %146<"`function.is1 okMapper` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%146<"`function.is1 okMapper` was not satisfied">> ($0 is at fault)
body_117 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_118 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %36<Core:function:is1:9:3>
  $3 = %166<{ body_13 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%166<{ body_13 }>> with $0 ($2<%36<Core:function:is1:9:3>> is responsible, code is at $2<%36<Core:function:is1:9:3>>)
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %32<Builtins::typeIs:19>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%32<Builtins::typeIs:19>> is responsible)
  $10 = %92<builtinEquals>
  $11 = dup $9 by 1
  $12 = %113<Function>
  $13 = %33<Builtins::typeIs:25>
  $14 = call $10<%92<builtinEquals>> with $9 $12<%113<Function>> ($13<%33<Builtins::typeIs:25>> is responsible)
  $15 = %2<Builtins::getArgumentCount:5>
  $16 = %159<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %144<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%159<{ body_6 }>> with $14 $18<%144<"`function | typeIs Function` was not satisfied">> $2<%36<Core:function:is1:9:3>> ($15<%2<Builtins::getArgumentCount:5>> is responsible, code is at $15<%2<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = %125<True>
  $22 = %91<anonymous:$generated::needs>
  $23 = call $10<%92<builtinEquals>> with $14 $21<%125<True>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $24 = dup $14 by 1
  $25 = { body_117 capturing $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $23 by 1
  $28 = %157<{ body_0 }>
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $23 $28<%157<{ body_0 }>> $25 ($22<%91<anonymous:$generated::needs>> is responsible)
  $31 = dup $30 by 1
  $32 = %158<{ body_1 }>
  $33 = %165<{ body_10 }>
  $34 = call $26<%94<builtinIfElse>> with $30 $32<%158<{ body_1 }>> $33<%165<{ body_10 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $35 = dup $14 by 1
  $36 = %192<{ body_75 }>
  $37 = call $26<%94<builtinIfElse>> with $14 $32<%158<{ body_1 }>> $36<%192<{ body_75 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = %93<builtinGetArgumentCount>
  $40 = dup $0 by 1
  $41 = %1<Builtins::getArgumentCount:11>
  $42 = call $39<%93<builtinGetArgumentCount>> with $0 ($41<%1<Builtins::getArgumentCount:11>> is responsible)
  $43 = trace: end of call
  $44 = dup $42 by 1
  $45 = %127<1>
  $46 = %0<Builtins::equals:6>
  $47 = call $10<%92<builtinEquals>> with $42 $45<%127<1>> ($46<%0<Builtins::equals:6>> is responsible)
  $48 = drop $42
  $49 = drop $37
  $50 = drop $34
  $51 = drop $30
  $52 = drop $25
  $53 = drop $23
  $54 = drop $14
  $55 = drop $9
  $56 = $47
body_119 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_120 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_121 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_122 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_123 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %145<"`function.is1 errorMapper` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%145<"`function.is1 errorMapper` was not satisfied">> ($0 is at fault)
body_124 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:26>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_125 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:26>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_124 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_126 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:26>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_125 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_127 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = %105<builtinTagWithValue>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = %64<Core:result:mapOrElse:26:2>
  $7 = call $3<%105<builtinTagWithValue>> with $0 $1 ($6<%64<Core:result:mapOrElse:26:2>> is responsible)
body_128 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = %104<builtinTagHasValue>
  $4 = dup $0 by 1
  $5 = %64<Core:result:mapOrElse:26:2>
  $6 = call $3<%104<builtinTagHasValue>> with $0 ($5<%64<Core:result:mapOrElse:26:2>> is responsible)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = { body_127 capturing $0, $1 }
  $10 = %94<builtinIfElse>
  $11 = dup $6 by 1
  $12 = %199<{ body_95 }>
  $13 = dup $9 by 1
  $14 = call $10<%94<builtinIfElse>> with $6 $12<%199<{ body_95 }>> $9 ($5<%64<Core:result:mapOrElse:26:2>> is responsible)
  $15 = drop $9
  $16 = drop $6
  $17 = $14
body_129 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %64<Core:result:mapOrElse:26:2>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = trace: tail call of $0 with $1 ($3<%64<Core:result:mapOrElse:26:2>> is responsible, code is at $3<%64<Core:result:mapOrElse:26:2>>)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = call $0 with $1 ($3<%64<Core:result:mapOrElse:26:2>> is responsible)
body_130 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %64<Core:result:mapOrElse:26:2>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%64<Core:result:mapOrElse:26:2>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%64<Core:result:mapOrElse:26:2>> is responsible)
  $10 = dup $9 by 1
  $11 = %129<" arguments with 1 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%129<" arguments with 1 arguments.">> ($4<%64<Core:result:mapOrElse:26:2>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%64<Core:result:mapOrElse:26:2>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_131 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %64<Core:result:mapOrElse:26:2>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%64<Core:result:mapOrElse:26:2>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %127<1>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%127<1>> ($5<%64<Core:result:mapOrElse:26:2>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_129 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_130 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%64<Core:result:mapOrElse:26:2>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_132 (responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %64<Core:result:mapOrElse:26:2>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%64<Core:result:mapOrElse:26:2>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_131 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %200<{ body_96 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%200<{ body_96 }>> ($7<%64<Core:result:mapOrElse:26:2>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_133 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-0:matched
  # Captured IDs: $0, $1
  $3 = %103<builtinTagGetValue>
  $4 = dup $1 by 1
  $5 = %66<Core:result:mapOrElse:26:value>
  $6 = call $3<%103<builtinTagGetValue>> with $1 ($5<%66<Core:result:mapOrElse:26:value>> is responsible)
  $7 = %99<builtinListGet>
  $8 = dup $6 by 1
  $9 = %126<0>
  $10 = call $7<%99<builtinListGet>> with $6 $9<%126<0>> ($5<%66<Core:result:mapOrElse:26:value>> is responsible)
  $11 = %109<builtinTypeOf>
  $12 = dup $0 by 1
  $13 = %64<Core:result:mapOrElse:26:2>
  $14 = call $11<%109<builtinTypeOf>> with $0 ($13<%64<Core:result:mapOrElse:26:2>> is responsible)
  $15 = %92<builtinEquals>
  $16 = dup $14 by 1
  $17 = %123<Tag>
  $18 = call $15<%92<builtinEquals>> with $14 $17<%123<Tag>> ($13<%64<Core:result:mapOrElse:26:2>> is responsible)
  $19 = dup $0 by 1
  $20 = dup $10 by 1
  $21 = { body_128 capturing $0, $10 }
  $22 = dup $0 by 1
  $23 = dup $10 by 1
  $24 = dup $14 by 1
  $25 = { body_132 capturing $0, $10, $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $18 by 1
  $28 = dup $21 by 1
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $18 $21 $25 ($13<%64<Core:result:mapOrElse:26:2>> is responsible)
  $31 = drop $25
  $32 = drop $21
  $33 = drop $18
  $34 = drop $14
  $35 = drop $10
  $36 = drop $6
  $37 = $30
body_134 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:26>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_135 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:26>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_134 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_136 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:26>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_135 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%63<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_137 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = %105<builtinTagWithValue>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = %65<Core:result:mapOrElse:26:5>
  $7 = call $3<%105<builtinTagWithValue>> with $0 $1 ($6<%65<Core:result:mapOrElse:26:5>> is responsible)
body_138 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = %104<builtinTagHasValue>
  $4 = dup $0 by 1
  $5 = %65<Core:result:mapOrElse:26:5>
  $6 = call $3<%104<builtinTagHasValue>> with $0 ($5<%65<Core:result:mapOrElse:26:5>> is responsible)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = { body_137 capturing $0, $1 }
  $10 = %94<builtinIfElse>
  $11 = dup $6 by 1
  $12 = %201<{ body_97 }>
  $13 = dup $9 by 1
  $14 = call $10<%94<builtinIfElse>> with $6 $12<%201<{ body_97 }>> $9 ($5<%65<Core:result:mapOrElse:26:5>> is responsible)
  $15 = drop $9
  $16 = drop $6
  $17 = $14
body_139 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %65<Core:result:mapOrElse:26:5>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = trace: tail call of $0 with $1 ($3<%65<Core:result:mapOrElse:26:5>> is responsible, code is at $3<%65<Core:result:mapOrElse:26:5>>)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = call $0 with $1 ($3<%65<Core:result:mapOrElse:26:5>> is responsible)
body_140 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %65<Core:result:mapOrElse:26:5>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%65<Core:result:mapOrElse:26:5>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%65<Core:result:mapOrElse:26:5>> is responsible)
  $10 = dup $9 by 1
  $11 = %129<" arguments with 1 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%129<" arguments with 1 arguments.">> ($4<%65<Core:result:mapOrElse:26:5>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%65<Core:result:mapOrElse:26:5>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_141 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %65<Core:result:mapOrElse:26:5>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%65<Core:result:mapOrElse:26:5>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %127<1>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%127<1>> ($5<%65<Core:result:mapOrElse:26:5>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_139 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_140 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%65<Core:result:mapOrElse:26:5>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_142 (responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %65<Core:result:mapOrElse:26:5>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%65<Core:result:mapOrElse:26:5>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_141 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %202<{ body_98 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%202<{ body_98 }>> ($7<%65<Core:result:mapOrElse:26:5>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_143 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-1:matched
  # Captured IDs: $0, $1
  $3 = %103<builtinTagGetValue>
  $4 = dup $1 by 1
  $5 = %67<Core:result:mapOrElse:26:value#1>
  $6 = call $3<%103<builtinTagGetValue>> with $1 ($5<%67<Core:result:mapOrElse:26:value#1>> is responsible)
  $7 = %99<builtinListGet>
  $8 = dup $6 by 1
  $9 = %126<0>
  $10 = call $7<%99<builtinListGet>> with $6 $9<%126<0>> ($5<%67<Core:result:mapOrElse:26:value#1>> is responsible)
  $11 = %109<builtinTypeOf>
  $12 = dup $0 by 1
  $13 = %65<Core:result:mapOrElse:26:5>
  $14 = call $11<%109<builtinTypeOf>> with $0 ($13<%65<Core:result:mapOrElse:26:5>> is responsible)
  $15 = %92<builtinEquals>
  $16 = dup $14 by 1
  $17 = %123<Tag>
  $18 = call $15<%92<builtinEquals>> with $14 $17<%123<Tag>> ($13<%65<Core:result:mapOrElse:26:5>> is responsible)
  $19 = dup $0 by 1
  $20 = dup $10 by 1
  $21 = { body_138 capturing $0, $10 }
  $22 = dup $0 by 1
  $23 = dup $10 by 1
  $24 = dup $14 by 1
  $25 = { body_142 capturing $0, $10, $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $18 by 1
  $28 = dup $21 by 1
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $18 $21 $25 ($13<%65<Core:result:mapOrElse:26:5>> is responsible)
  $31 = drop $25
  $32 = drop $21
  $33 = drop $18
  $34 = drop $14
  $35 = drop $10
  $36 = drop $6
  $37 = $30
body_144 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-0:didNotMatch
  # Captured IDs: $0, $1
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %63<Core:result:mapOrElse:26>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%63<Core:result:mapOrElse:26>> is responsible)
  $7 = %92<builtinEquals>
  $8 = %123<Tag>
  $9 = dup $6 by 1
  $10 = call $7<%92<builtinEquals>> with $8<%123<Tag>> $6 ($5<%63<Core:result:mapOrElse:26>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_136 capturing $0 }
  $13 = %94<builtinIfElse>
  $14 = dup $10 by 1
  $15 = dup $12 by 1
  $16 = %163<{ body_8 }>
  $17 = call $13<%94<builtinIfElse>> with $10 $12 $16<%163<{ body_8 }>> ($5<%63<Core:result:mapOrElse:26>> is responsible)
  $18 = %106<builtinTagWithoutValue>
  $19 = dup $17 by 1
  $20 = call $18<%106<builtinTagWithoutValue>> with $17 ($5<%63<Core:result:mapOrElse:26>> is responsible)
  $21 = dup $20 by 1
  $22 = %117<Match>
  $23 = call $7<%92<builtinEquals>> with $20 $22<%117<Match>> ($5<%63<Core:result:mapOrElse:26>> is responsible)
  $24 = dup $1 by 1
  $25 = dup $17 by 1
  $26 = { body_143 capturing $1, $17 }
  $27 = dup $23 by 1
  $28 = dup $26 by 1
  $29 = %203<{ body_99 }>
  $30 = call $13<%94<builtinIfElse>> with $23 $26 $29<%203<{ body_99 }>> ($5<%63<Core:result:mapOrElse:26>> is responsible)
  $31 = drop $26
  $32 = drop $23
  $33 = drop $20
  $34 = drop $17
  $35 = drop $12
  $36 = drop $10
  $37 = drop $6
  $38 = $30
body_145 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse
  # Captured IDs: none
  $4 = %60<Core:result:mapOrElse:2>
  $5 = %195<{ body_91 }>
  $6 = dup $0 by 1
  $7 = trace: start of call of $5<%195<{ body_91 }>> with $0 ($4<%60<Core:result:mapOrElse:2>> is responsible, code is at $4<%60<Core:result:mapOrElse:2>>)
  $8 = %109<builtinTypeOf>
  $9 = dup $0 by 1
  $10 = %46<Core:result:is:1>
  $11 = call $8<%109<builtinTypeOf>> with $0 ($10<%46<Core:result:is:1>> is responsible)
  $12 = %92<builtinEquals>
  $13 = %123<Tag>
  $14 = dup $11 by 1
  $15 = call $12<%92<builtinEquals>> with $13<%123<Tag>> $11 ($10<%46<Core:result:is:1>> is responsible)
  $16 = dup $0 by 1
  $17 = { body_102 capturing $0 }
  $18 = %94<builtinIfElse>
  $19 = dup $15 by 1
  $20 = dup $17 by 1
  $21 = %163<{ body_8 }>
  $22 = call $18<%94<builtinIfElse>> with $15 $17 $21<%163<{ body_8 }>> ($10<%46<Core:result:is:1>> is responsible)
  $23 = %106<builtinTagWithoutValue>
  $24 = dup $22 by 1
  $25 = call $23<%106<builtinTagWithoutValue>> with $22 ($10<%46<Core:result:is:1>> is responsible)
  $26 = dup $25 by 1
  $27 = %117<Match>
  $28 = call $12<%92<builtinEquals>> with $25 $27<%117<Match>> ($10<%46<Core:result:is:1>> is responsible)
  $29 = dup $22 by 1
  $30 = { body_103 capturing $22 }
  $31 = dup $0 by 1
  $32 = { body_107 capturing $0 }
  $33 = dup $28 by 1
  $34 = dup $30 by 1
  $35 = dup $32 by 1
  $36 = call $18<%94<builtinIfElse>> with $28 $30 $32 ($10<%46<Core:result:is:1>> is responsible)
  $37 = dup $36 by 1
  $38 = call $23<%106<builtinTagWithoutValue>> with $36 ($10<%46<Core:result:is:1>> is responsible)
  $39 = dup $38 by 1
  $40 = call $12<%92<builtinEquals>> with $38 $27<%117<Match>> ($10<%46<Core:result:is:1>> is responsible)
  $41 = dup $40 by 1
  $42 = %157<{ body_0 }>
  $43 = %164<{ body_9 }>
  $44 = call $18<%94<builtinIfElse>> with $40 $42<%157<{ body_0 }>> $43<%164<{ body_9 }>> ($10<%46<Core:result:is:1>> is responsible)
  $45 = trace: end of call
  $46 = %68<Core:result:mapOrElse:4>
  $47 = %159<{ body_6 }>
  $48 = dup $44 by 1
  $49 = %147<"`is result` was not satisfied">
  $50 = dup $3 by 1
  $51 = trace: start of call of $47<%159<{ body_6 }>> with $44 $49<%147<"`is result` was not satisfied">> $3 ($46<%68<Core:result:mapOrElse:4>> is responsible, code is at $46<%68<Core:result:mapOrElse:4>>)
  $52 = dup $44 by 1
  $53 = %125<True>
  $54 = %91<anonymous:$generated::needs>
  $55 = call $12<%92<builtinEquals>> with $44 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $56 = dup $44 by 1
  $57 = { body_108 capturing $44 }
  $58 = dup $55 by 1
  $59 = dup $57 by 1
  $60 = call $18<%94<builtinIfElse>> with $55 $42<%157<{ body_0 }>> $57 ($54<%91<anonymous:$generated::needs>> is responsible)
  $61 = dup $60 by 1
  $62 = %158<{ body_1 }>
  $63 = %196<{ body_92 }>
  $64 = call $18<%94<builtinIfElse>> with $60 $62<%158<{ body_1 }>> $63<%196<{ body_92 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $65 = dup $3 by 1
  $66 = { body_109 capturing $3 }
  $67 = dup $44 by 1
  $68 = dup $66 by 1
  $69 = call $18<%94<builtinIfElse>> with $44 $62<%158<{ body_1 }>> $66 ($54<%91<anonymous:$generated::needs>> is responsible)
  $70 = trace: end of call
  $71 = %58<Core:result:mapOrElse:12>
  $72 = %194<{ body_82 }>
  $73 = dup $1 by 1
  $74 = trace: start of call of $72<%194<{ body_82 }>> with $1 ($71<%58<Core:result:mapOrElse:12>> is responsible, code is at $71<%58<Core:result:mapOrElse:12>>)
  $75 = dup $1 by 1
  $76 = %34<Builtins::typeOf:5>
  $77 = call $8<%109<builtinTypeOf>> with $1 ($76<%34<Builtins::typeOf:5>> is responsible)
  $78 = dup $77 by 1
  $79 = %113<Function>
  $80 = %0<Builtins::equals:6>
  $81 = call $12<%92<builtinEquals>> with $77 $79<%113<Function>> ($80<%0<Builtins::equals:6>> is responsible)
  $82 = dup $1 by 1
  $83 = { body_111 capturing $1 }
  $84 = %35<Core:function:is1:11>
  $85 = %174<{ body_35 }>
  $86 = dup $81 by 1
  $87 = dup $83 by 1
  $88 = trace: start of call of $85<%174<{ body_35 }>> with $81 $83 $43<%164<{ body_9 }>> ($84<%35<Core:function:is1:11>> is responsible, code is at $84<%35<Core:function:is1:11>>)
  $89 = dup $81 by 1
  $90 = %3<Builtins::ifElse:1>
  $91 = call $12<%92<builtinEquals>> with $53<%125<True>> $81 ($90<%3<Builtins::ifElse:1>> is responsible)
  $92 = dup $91 by 1
  $93 = %162<{ body_7 }>
  $94 = call $18<%94<builtinIfElse>> with $91 $93<%162<{ body_7 }>> $21<%163<{ body_8 }>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $95 = dup $94 by 1
  $96 = call $23<%106<builtinTagWithoutValue>> with $94 ($90<%3<Builtins::ifElse:1>> is responsible)
  $97 = dup $96 by 1
  $98 = call $12<%92<builtinEquals>> with $96 $27<%117<Match>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $99 = dup $94 by 1
  $100 = { body_112 capturing $94 }
  $101 = dup $81 by 1
  $102 = { body_113 capturing $81 }
  $103 = dup $98 by 1
  $104 = dup $100 by 1
  $105 = dup $102 by 1
  $106 = call $18<%94<builtinIfElse>> with $98 $100 $102 ($90<%3<Builtins::ifElse:1>> is responsible)
  $107 = dup $106 by 1
  $108 = call $23<%106<builtinTagWithoutValue>> with $106 ($90<%3<Builtins::ifElse:1>> is responsible)
  $109 = dup $108 by 1
  $110 = call $12<%92<builtinEquals>> with $108 $27<%117<Match>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $111 = dup $110 by 1
  $112 = call $18<%94<builtinIfElse>> with $110 $42<%157<{ body_0 }>> $43<%164<{ body_9 }>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $113 = %11<Builtins::ifElse:5>
  $114 = dup $112 by 1
  $115 = %141<"`conditionIsBool` was not satisfied">
  $116 = trace: start of call of $47<%159<{ body_6 }>> with $112 $115<%141<"`conditionIsBool` was not satisfied">> $84<%35<Core:function:is1:11>> ($113<%11<Builtins::ifElse:5>> is responsible, code is at $113<%11<Builtins::ifElse:5>>)
  $117 = dup $112 by 1
  $118 = call $12<%92<builtinEquals>> with $112 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $119 = dup $112 by 1
  $120 = { body_114 capturing $112 }
  $121 = dup $118 by 1
  $122 = dup $120 by 1
  $123 = call $18<%94<builtinIfElse>> with $118 $42<%157<{ body_0 }>> $120 ($54<%91<anonymous:$generated::needs>> is responsible)
  $124 = dup $123 by 1
  $125 = %167<{ body_14 }>
  $126 = call $18<%94<builtinIfElse>> with $123 $62<%158<{ body_1 }>> $125<%167<{ body_14 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $127 = dup $112 by 1
  $128 = %193<{ body_76 }>
  $129 = call $18<%94<builtinIfElse>> with $112 $62<%158<{ body_1 }>> $128<%193<{ body_76 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $130 = trace: end of call
  $131 = %10<Builtins::ifElse:41>
  $132 = dup $81 by 1
  $133 = dup $83 by 1
  $134 = trace: start of call of $18<%94<builtinIfElse>> with $81 $83 $43<%164<{ body_9 }>> ($131<%10<Builtins::ifElse:41>> is responsible, code is at $131<%10<Builtins::ifElse:41>>)
  $135 = dup $81 by 1
  $136 = dup $83 by 1
  $137 = call $18<%94<builtinIfElse>> with $81 $83 $43<%164<{ body_9 }>> ($131<%10<Builtins::ifElse:41>> is responsible)
  $138 = trace: end of call
  $139 = trace: end of call
  $140 = trace: end of call
  $141 = %59<Core:result:mapOrElse:14>
  $142 = dup $137 by 1
  $143 = %146<"`function.is1 okMapper` was not satisfied">
  $144 = dup $3 by 1
  $145 = trace: start of call of $47<%159<{ body_6 }>> with $137 $143<%146<"`function.is1 okMapper` was not satisfied">> $3 ($141<%59<Core:result:mapOrElse:14>> is responsible, code is at $141<%59<Core:result:mapOrElse:14>>)
  $146 = dup $137 by 1
  $147 = call $12<%92<builtinEquals>> with $137 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $148 = dup $137 by 1
  $149 = { body_115 capturing $137 }
  $150 = dup $147 by 1
  $151 = dup $149 by 1
  $152 = call $18<%94<builtinIfElse>> with $147 $42<%157<{ body_0 }>> $149 ($54<%91<anonymous:$generated::needs>> is responsible)
  $153 = dup $152 by 1
  $154 = %197<{ body_93 }>
  $155 = call $18<%94<builtinIfElse>> with $152 $62<%158<{ body_1 }>> $154<%197<{ body_93 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $156 = dup $3 by 1
  $157 = { body_116 capturing $3 }
  $158 = dup $137 by 1
  $159 = dup $157 by 1
  $160 = call $18<%94<builtinIfElse>> with $137 $62<%158<{ body_1 }>> $157 ($54<%91<anonymous:$generated::needs>> is responsible)
  $161 = trace: end of call
  $162 = %61<Core:result:mapOrElse:22>
  $163 = dup $2 by 1
  $164 = trace: start of call of $72<%194<{ body_82 }>> with $2 ($162<%61<Core:result:mapOrElse:22>> is responsible, code is at $162<%61<Core:result:mapOrElse:22>>)
  $165 = dup $2 by 1
  $166 = call $8<%109<builtinTypeOf>> with $2 ($76<%34<Builtins::typeOf:5>> is responsible)
  $167 = dup $166 by 1
  $168 = call $12<%92<builtinEquals>> with $166 $79<%113<Function>> ($80<%0<Builtins::equals:6>> is responsible)
  $169 = dup $2 by 1
  $170 = { body_118 capturing $2 }
  $171 = dup $168 by 1
  $172 = dup $170 by 1
  $173 = trace: start of call of $85<%174<{ body_35 }>> with $168 $170 $43<%164<{ body_9 }>> ($84<%35<Core:function:is1:11>> is responsible, code is at $84<%35<Core:function:is1:11>>)
  $174 = dup $168 by 1
  $175 = call $12<%92<builtinEquals>> with $53<%125<True>> $168 ($90<%3<Builtins::ifElse:1>> is responsible)
  $176 = dup $175 by 1
  $177 = call $18<%94<builtinIfElse>> with $175 $93<%162<{ body_7 }>> $21<%163<{ body_8 }>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $178 = dup $177 by 1
  $179 = call $23<%106<builtinTagWithoutValue>> with $177 ($90<%3<Builtins::ifElse:1>> is responsible)
  $180 = dup $179 by 1
  $181 = call $12<%92<builtinEquals>> with $179 $27<%117<Match>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $182 = dup $177 by 1
  $183 = { body_119 capturing $177 }
  $184 = dup $168 by 1
  $185 = { body_120 capturing $168 }
  $186 = dup $181 by 1
  $187 = dup $183 by 1
  $188 = dup $185 by 1
  $189 = call $18<%94<builtinIfElse>> with $181 $183 $185 ($90<%3<Builtins::ifElse:1>> is responsible)
  $190 = dup $189 by 1
  $191 = call $23<%106<builtinTagWithoutValue>> with $189 ($90<%3<Builtins::ifElse:1>> is responsible)
  $192 = dup $191 by 1
  $193 = call $12<%92<builtinEquals>> with $191 $27<%117<Match>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $194 = dup $193 by 1
  $195 = call $18<%94<builtinIfElse>> with $193 $42<%157<{ body_0 }>> $43<%164<{ body_9 }>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $196 = dup $195 by 1
  $197 = trace: start of call of $47<%159<{ body_6 }>> with $195 $115<%141<"`conditionIsBool` was not satisfied">> $84<%35<Core:function:is1:11>> ($113<%11<Builtins::ifElse:5>> is responsible, code is at $113<%11<Builtins::ifElse:5>>)
  $198 = dup $195 by 1
  $199 = call $12<%92<builtinEquals>> with $195 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $200 = dup $195 by 1
  $201 = { body_121 capturing $195 }
  $202 = dup $199 by 1
  $203 = dup $201 by 1
  $204 = call $18<%94<builtinIfElse>> with $199 $42<%157<{ body_0 }>> $201 ($54<%91<anonymous:$generated::needs>> is responsible)
  $205 = dup $204 by 1
  $206 = call $18<%94<builtinIfElse>> with $204 $62<%158<{ body_1 }>> $125<%167<{ body_14 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $207 = dup $195 by 1
  $208 = call $18<%94<builtinIfElse>> with $195 $62<%158<{ body_1 }>> $128<%193<{ body_76 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $209 = trace: end of call
  $210 = dup $168 by 1
  $211 = dup $170 by 1
  $212 = trace: start of call of $18<%94<builtinIfElse>> with $168 $170 $43<%164<{ body_9 }>> ($131<%10<Builtins::ifElse:41>> is responsible, code is at $131<%10<Builtins::ifElse:41>>)
  $213 = dup $168 by 1
  $214 = dup $170 by 1
  $215 = call $18<%94<builtinIfElse>> with $168 $170 $43<%164<{ body_9 }>> ($131<%10<Builtins::ifElse:41>> is responsible)
  $216 = trace: end of call
  $217 = trace: end of call
  $218 = trace: end of call
  $219 = %62<Core:result:mapOrElse:24>
  $220 = dup $215 by 1
  $221 = %145<"`function.is1 errorMapper` was not satisfied">
  $222 = dup $3 by 1
  $223 = trace: start of call of $47<%159<{ body_6 }>> with $215 $221<%145<"`function.is1 errorMapper` was not satisfied">> $3 ($219<%62<Core:result:mapOrElse:24>> is responsible, code is at $219<%62<Core:result:mapOrElse:24>>)
  $224 = dup $215 by 1
  $225 = call $12<%92<builtinEquals>> with $215 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $226 = dup $215 by 1
  $227 = { body_122 capturing $215 }
  $228 = dup $225 by 1
  $229 = dup $227 by 1
  $230 = call $18<%94<builtinIfElse>> with $225 $42<%157<{ body_0 }>> $227 ($54<%91<anonymous:$generated::needs>> is responsible)
  $231 = dup $230 by 1
  $232 = %198<{ body_94 }>
  $233 = call $18<%94<builtinIfElse>> with $230 $62<%158<{ body_1 }>> $232<%198<{ body_94 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $234 = dup $3 by 1
  $235 = { body_123 capturing $3 }
  $236 = dup $215 by 1
  $237 = dup $235 by 1
  $238 = call $18<%94<builtinIfElse>> with $215 $62<%158<{ body_1 }>> $235 ($54<%91<anonymous:$generated::needs>> is responsible)
  $239 = trace: end of call
  $240 = dup $0 by 1
  $241 = %63<Core:result:mapOrElse:26>
  $242 = call $8<%109<builtinTypeOf>> with $0 ($241<%63<Core:result:mapOrElse:26>> is responsible)
  $243 = dup $242 by 1
  $244 = call $12<%92<builtinEquals>> with $13<%123<Tag>> $242 ($241<%63<Core:result:mapOrElse:26>> is responsible)
  $245 = dup $0 by 1
  $246 = { body_126 capturing $0 }
  $247 = dup $244 by 1
  $248 = dup $246 by 1
  $249 = call $18<%94<builtinIfElse>> with $244 $246 $21<%163<{ body_8 }>> ($241<%63<Core:result:mapOrElse:26>> is responsible)
  $250 = dup $249 by 1
  $251 = call $23<%106<builtinTagWithoutValue>> with $249 ($241<%63<Core:result:mapOrElse:26>> is responsible)
  $252 = dup $251 by 1
  $253 = call $12<%92<builtinEquals>> with $251 $27<%117<Match>> ($241<%63<Core:result:mapOrElse:26>> is responsible)
  $254 = dup $1 by 1
  $255 = dup $249 by 1
  $256 = { body_133 capturing $1, $249 }
  $257 = dup $0 by 1
  $258 = dup $2 by 1
  $259 = { body_144 capturing $0, $2 }
  $260 = dup $253 by 1
  $261 = dup $256 by 1
  $262 = dup $259 by 1
  $263 = call $18<%94<builtinIfElse>> with $253 $256 $259 ($241<%63<Core:result:mapOrElse:26>> is responsible)
  $264 = drop $259
  $265 = drop $256
  $266 = drop $253
  $267 = drop $251
  $268 = drop $249
  $269 = drop $246
  $270 = drop $244
  $271 = drop $242
  $272 = drop $238
  $273 = drop $235
  $274 = drop $233
  $275 = drop $230
  $276 = drop $227
  $277 = drop $225
  $278 = drop $215
  $279 = drop $208
  $280 = drop $206
  $281 = drop $204
  $282 = drop $201
  $283 = drop $199
  $284 = drop $195
  $285 = drop $193
  $286 = drop $191
  $287 = drop $189
  $288 = drop $185
  $289 = drop $183
  $290 = drop $181
  $291 = drop $179
  $292 = drop $177
  $293 = drop $175
  $294 = drop $170
  $295 = drop $168
  $296 = drop $166
  $297 = drop $160
  $298 = drop $157
  $299 = drop $155
  $300 = drop $152
  $301 = drop $149
  $302 = drop $147
  $303 = drop $137
  $304 = drop $129
  $305 = drop $126
  $306 = drop $123
  $307 = drop $120
  $308 = drop $118
  $309 = drop $112
  $310 = drop $110
  $311 = drop $108
  $312 = drop $106
  $313 = drop $102
  $314 = drop $100
  $315 = drop $98
  $316 = drop $96
  $317 = drop $94
  $318 = drop $91
  $319 = drop $83
  $320 = drop $81
  $321 = drop $77
  $322 = drop $69
  $323 = drop $66
  $324 = drop $64
  $325 = drop $60
  $326 = drop $57
  $327 = drop $55
  $328 = drop $44
  $329 = drop $40
  $330 = drop $38
  $331 = drop $36
  $332 = drop $32
  $333 = drop $30
  $334 = drop $28
  $335 = drop $25
  $336 = drop $22
  $337 = drop $17
  $338 = drop $15
  $339 = drop $11
  $340 = drop $2
  $341 = drop $1
  $342 = drop $0
  $343 = $263
body_146 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %45<Core:result:getValue:4>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%45<Core:result:getValue:4>> is at fault)
body_147 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %152<"`tag | typeIs Tag` was not satisfied">
  $2 = %43<Core:result:getValue:12>
  $3 = panicking because $1<%152<"`tag | typeIs Tag` was not satisfied">> ($2<%43<Core:result:getValue:12>> is at fault)
body_148 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %153<"`tag | ✨.tagHasValue` was not satisfied">
  $2 = %43<Core:result:getValue:12>
  $3 = panicking because $1<%153<"`tag | ✨.tagHasValue` was not satisfied">> ($2<%43<Core:result:getValue:12>> is at fault)
body_149 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_150 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_149 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_151 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_150 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_152 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_153 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_154 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_153 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_155 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_154 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_156 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_155 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_157 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_158 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %147<"`is result` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%147<"`is result` was not satisfied">> ($0 is at fault)
body_159 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_160 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_161 $0 (+ responsible $1) =
  # Original HIR IDs: Core:result:getValue
  # Captured IDs: none
  $2 = %44<Core:result:getValue:2>
  $3 = %195<{ body_91 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%195<{ body_91 }>> with $0 ($2<%44<Core:result:getValue:2>> is responsible, code is at $2<%44<Core:result:getValue:2>>)
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %46<Core:result:is:1>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%46<Core:result:is:1>> is responsible)
  $10 = %92<builtinEquals>
  $11 = %123<Tag>
  $12 = dup $9 by 1
  $13 = call $10<%92<builtinEquals>> with $11<%123<Tag>> $9 ($8<%46<Core:result:is:1>> is responsible)
  $14 = dup $0 by 1
  $15 = { body_151 capturing $0 }
  $16 = %94<builtinIfElse>
  $17 = dup $13 by 1
  $18 = dup $15 by 1
  $19 = %163<{ body_8 }>
  $20 = call $16<%94<builtinIfElse>> with $13 $15 $19<%163<{ body_8 }>> ($8<%46<Core:result:is:1>> is responsible)
  $21 = %106<builtinTagWithoutValue>
  $22 = dup $20 by 1
  $23 = call $21<%106<builtinTagWithoutValue>> with $20 ($8<%46<Core:result:is:1>> is responsible)
  $24 = dup $23 by 1
  $25 = %117<Match>
  $26 = call $10<%92<builtinEquals>> with $23 $25<%117<Match>> ($8<%46<Core:result:is:1>> is responsible)
  $27 = dup $20 by 1
  $28 = { body_152 capturing $20 }
  $29 = dup $0 by 1
  $30 = { body_156 capturing $0 }
  $31 = dup $26 by 1
  $32 = dup $28 by 1
  $33 = dup $30 by 1
  $34 = call $16<%94<builtinIfElse>> with $26 $28 $30 ($8<%46<Core:result:is:1>> is responsible)
  $35 = dup $34 by 1
  $36 = call $21<%106<builtinTagWithoutValue>> with $34 ($8<%46<Core:result:is:1>> is responsible)
  $37 = dup $36 by 1
  $38 = call $10<%92<builtinEquals>> with $36 $25<%117<Match>> ($8<%46<Core:result:is:1>> is responsible)
  $39 = dup $38 by 1
  $40 = %157<{ body_0 }>
  $41 = %164<{ body_9 }>
  $42 = call $16<%94<builtinIfElse>> with $38 $40<%157<{ body_0 }>> $41<%164<{ body_9 }>> ($8<%46<Core:result:is:1>> is responsible)
  $43 = trace: end of call
  $44 = %45<Core:result:getValue:4>
  $45 = %159<{ body_6 }>
  $46 = dup $42 by 1
  $47 = %147<"`is result` was not satisfied">
  $48 = dup $1 by 1
  $49 = trace: start of call of $45<%159<{ body_6 }>> with $42 $47<%147<"`is result` was not satisfied">> $1 ($44<%45<Core:result:getValue:4>> is responsible, code is at $44<%45<Core:result:getValue:4>>)
  $50 = dup $42 by 1
  $51 = %125<True>
  $52 = %91<anonymous:$generated::needs>
  $53 = call $10<%92<builtinEquals>> with $42 $51<%125<True>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $54 = dup $42 by 1
  $55 = { body_157 capturing $42 }
  $56 = dup $53 by 1
  $57 = dup $55 by 1
  $58 = call $16<%94<builtinIfElse>> with $53 $40<%157<{ body_0 }>> $55 ($52<%91<anonymous:$generated::needs>> is responsible)
  $59 = dup $58 by 1
  $60 = %158<{ body_1 }>
  $61 = %205<{ body_146 }>
  $62 = call $16<%94<builtinIfElse>> with $58 $60<%158<{ body_1 }>> $61<%205<{ body_146 }>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $63 = dup $1 by 1
  $64 = { body_158 capturing $1 }
  $65 = dup $42 by 1
  $66 = dup $64 by 1
  $67 = call $16<%94<builtinIfElse>> with $42 $60<%158<{ body_1 }>> $64 ($52<%91<anonymous:$generated::needs>> is responsible)
  $68 = trace: end of call
  $69 = %43<Core:result:getValue:12>
  $70 = %191<{ body_74 }>
  $71 = dup $0 by 1
  $72 = trace: tail call of $70<%191<{ body_74 }>> with $0 ($69<%43<Core:result:getValue:12>> is responsible, code is at $69<%43<Core:result:getValue:12>>)
  $73 = dup $0 by 1
  $74 = %32<Builtins::typeIs:19>
  $75 = call $6<%109<builtinTypeOf>> with $0 ($74<%32<Builtins::typeIs:19>> is responsible)
  $76 = dup $75 by 1
  $77 = %33<Builtins::typeIs:25>
  $78 = call $10<%92<builtinEquals>> with $75 $11<%123<Tag>> ($77<%33<Builtins::typeIs:25>> is responsible)
  $79 = %30<Builtins::tagGetValue:5>
  $80 = dup $78 by 1
  $81 = %152<"`tag | typeIs Tag` was not satisfied">
  $82 = trace: start of call of $45<%159<{ body_6 }>> with $78 $81<%152<"`tag | typeIs Tag` was not satisfied">> $69<%43<Core:result:getValue:12>> ($79<%30<Builtins::tagGetValue:5>> is responsible, code is at $79<%30<Builtins::tagGetValue:5>>)
  $83 = dup $78 by 1
  $84 = call $10<%92<builtinEquals>> with $78 $51<%125<True>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $85 = dup $78 by 1
  $86 = { body_159 capturing $78 }
  $87 = dup $84 by 1
  $88 = dup $86 by 1
  $89 = call $16<%94<builtinIfElse>> with $84 $40<%157<{ body_0 }>> $86 ($52<%91<anonymous:$generated::needs>> is responsible)
  $90 = dup $89 by 1
  $91 = %189<{ body_68 }>
  $92 = call $16<%94<builtinIfElse>> with $89 $60<%158<{ body_1 }>> $91<%189<{ body_68 }>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $93 = dup $78 by 1
  $94 = %206<{ body_147 }>
  $95 = call $16<%94<builtinIfElse>> with $78 $60<%158<{ body_1 }>> $94<%206<{ body_147 }>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $96 = trace: end of call
  $97 = %104<builtinTagHasValue>
  $98 = dup $0 by 1
  $99 = %27<Builtins::tagGetValue:11>
  $100 = call $97<%104<builtinTagHasValue>> with $0 ($99<%27<Builtins::tagGetValue:11>> is responsible)
  $101 = %28<Builtins::tagGetValue:13>
  $102 = dup $100 by 1
  $103 = %153<"`tag | ✨.tagHasValue` was not satisfied">
  $104 = trace: start of call of $45<%159<{ body_6 }>> with $100 $103<%153<"`tag | ✨.tagHasValue` was not satisfied">> $69<%43<Core:result:getValue:12>> ($101<%28<Builtins::tagGetValue:13>> is responsible, code is at $101<%28<Builtins::tagGetValue:13>>)
  $105 = dup $100 by 1
  $106 = call $10<%92<builtinEquals>> with $100 $51<%125<True>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $107 = dup $100 by 1
  $108 = { body_160 capturing $100 }
  $109 = dup $106 by 1
  $110 = dup $108 by 1
  $111 = call $16<%94<builtinIfElse>> with $106 $40<%157<{ body_0 }>> $108 ($52<%91<anonymous:$generated::needs>> is responsible)
  $112 = dup $111 by 1
  $113 = %190<{ body_69 }>
  $114 = call $16<%94<builtinIfElse>> with $111 $60<%158<{ body_1 }>> $113<%190<{ body_69 }>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $115 = dup $100 by 1
  $116 = %207<{ body_148 }>
  $117 = call $16<%94<builtinIfElse>> with $100 $60<%158<{ body_1 }>> $116<%207<{ body_148 }>> ($52<%91<anonymous:$generated::needs>> is responsible)
  $118 = trace: end of call
  $119 = %103<builtinTagGetValue>
  $120 = dup $0 by 1
  $121 = %29<Builtins::tagGetValue:19>
  $122 = call $119<%103<builtinTagGetValue>> with $0 ($121<%29<Builtins::tagGetValue:19>> is responsible)
  $123 = drop $117
  $124 = drop $114
  $125 = drop $111
  $126 = drop $108
  $127 = drop $106
  $128 = drop $100
  $129 = drop $95
  $130 = drop $92
  $131 = drop $89
  $132 = drop $86
  $133 = drop $84
  $134 = drop $78
  $135 = drop $75
  $136 = drop $67
  $137 = drop $64
  $138 = drop $62
  $139 = drop $58
  $140 = drop $55
  $141 = drop $53
  $142 = drop $42
  $143 = drop $38
  $144 = drop $36
  $145 = drop $34
  $146 = drop $30
  $147 = drop $28
  $148 = drop $26
  $149 = drop $23
  $150 = drop $20
  $151 = drop $15
  $152 = drop $13
  $153 = drop $9
  $154 = drop $0
  $155 = $122
body_162 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %57<Core:result:mapOr:4>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%57<Core:result:mapOr:4>> is at fault)
body_163 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %54<Core:result:mapOr:14>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%54<Core:result:mapOr:14>> is at fault)
body_164 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_165 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_164 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_166 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_165 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_167 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_168 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_169 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_168 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_170 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_169 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_171 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_170 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_172 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_173 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %147<"`is result` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%147<"`is result` was not satisfied">> ($0 is at fault)
body_174 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_175 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %36<Core:function:is1:9:3>
  $3 = %166<{ body_13 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%166<{ body_13 }>> with $0 ($2<%36<Core:function:is1:9:3>> is responsible, code is at $2<%36<Core:function:is1:9:3>>)
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %32<Builtins::typeIs:19>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%32<Builtins::typeIs:19>> is responsible)
  $10 = %92<builtinEquals>
  $11 = dup $9 by 1
  $12 = %113<Function>
  $13 = %33<Builtins::typeIs:25>
  $14 = call $10<%92<builtinEquals>> with $9 $12<%113<Function>> ($13<%33<Builtins::typeIs:25>> is responsible)
  $15 = %2<Builtins::getArgumentCount:5>
  $16 = %159<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %144<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%159<{ body_6 }>> with $14 $18<%144<"`function | typeIs Function` was not satisfied">> $2<%36<Core:function:is1:9:3>> ($15<%2<Builtins::getArgumentCount:5>> is responsible, code is at $15<%2<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = %125<True>
  $22 = %91<anonymous:$generated::needs>
  $23 = call $10<%92<builtinEquals>> with $14 $21<%125<True>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $24 = dup $14 by 1
  $25 = { body_174 capturing $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $23 by 1
  $28 = %157<{ body_0 }>
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $23 $28<%157<{ body_0 }>> $25 ($22<%91<anonymous:$generated::needs>> is responsible)
  $31 = dup $30 by 1
  $32 = %158<{ body_1 }>
  $33 = %165<{ body_10 }>
  $34 = call $26<%94<builtinIfElse>> with $30 $32<%158<{ body_1 }>> $33<%165<{ body_10 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $35 = dup $14 by 1
  $36 = %192<{ body_75 }>
  $37 = call $26<%94<builtinIfElse>> with $14 $32<%158<{ body_1 }>> $36<%192<{ body_75 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = %93<builtinGetArgumentCount>
  $40 = dup $0 by 1
  $41 = %1<Builtins::getArgumentCount:11>
  $42 = call $39<%93<builtinGetArgumentCount>> with $0 ($41<%1<Builtins::getArgumentCount:11>> is responsible)
  $43 = trace: end of call
  $44 = dup $42 by 1
  $45 = %127<1>
  $46 = %0<Builtins::equals:6>
  $47 = call $10<%92<builtinEquals>> with $42 $45<%127<1>> ($46<%0<Builtins::equals:6>> is responsible)
  $48 = drop $42
  $49 = drop $37
  $50 = drop $34
  $51 = drop $30
  $52 = drop $25
  $53 = drop $23
  $54 = drop $14
  $55 = drop $9
  $56 = $47
body_176 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_177 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_178 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_179 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_180 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %146<"`function.is1 okMapper` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%146<"`function.is1 okMapper` was not satisfied">> ($0 is at fault)
body_181 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:mapOr:18
  # Captured IDs: $0
  $3 = dup $0 by 1
  $4 = $0
  $5 = drop $1
  $6 = $4
body_182 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Core:result:mapOr
  # Captured IDs: none
  $4 = %56<Core:result:mapOr:2>
  $5 = %195<{ body_91 }>
  $6 = dup $0 by 1
  $7 = trace: start of call of $5<%195<{ body_91 }>> with $0 ($4<%56<Core:result:mapOr:2>> is responsible, code is at $4<%56<Core:result:mapOr:2>>)
  $8 = %109<builtinTypeOf>
  $9 = dup $0 by 1
  $10 = %46<Core:result:is:1>
  $11 = call $8<%109<builtinTypeOf>> with $0 ($10<%46<Core:result:is:1>> is responsible)
  $12 = %92<builtinEquals>
  $13 = %123<Tag>
  $14 = dup $11 by 1
  $15 = call $12<%92<builtinEquals>> with $13<%123<Tag>> $11 ($10<%46<Core:result:is:1>> is responsible)
  $16 = dup $0 by 1
  $17 = { body_166 capturing $0 }
  $18 = %94<builtinIfElse>
  $19 = dup $15 by 1
  $20 = dup $17 by 1
  $21 = %163<{ body_8 }>
  $22 = call $18<%94<builtinIfElse>> with $15 $17 $21<%163<{ body_8 }>> ($10<%46<Core:result:is:1>> is responsible)
  $23 = %106<builtinTagWithoutValue>
  $24 = dup $22 by 1
  $25 = call $23<%106<builtinTagWithoutValue>> with $22 ($10<%46<Core:result:is:1>> is responsible)
  $26 = dup $25 by 1
  $27 = %117<Match>
  $28 = call $12<%92<builtinEquals>> with $25 $27<%117<Match>> ($10<%46<Core:result:is:1>> is responsible)
  $29 = dup $22 by 1
  $30 = { body_167 capturing $22 }
  $31 = dup $0 by 1
  $32 = { body_171 capturing $0 }
  $33 = dup $28 by 1
  $34 = dup $30 by 1
  $35 = dup $32 by 1
  $36 = call $18<%94<builtinIfElse>> with $28 $30 $32 ($10<%46<Core:result:is:1>> is responsible)
  $37 = dup $36 by 1
  $38 = call $23<%106<builtinTagWithoutValue>> with $36 ($10<%46<Core:result:is:1>> is responsible)
  $39 = dup $38 by 1
  $40 = call $12<%92<builtinEquals>> with $38 $27<%117<Match>> ($10<%46<Core:result:is:1>> is responsible)
  $41 = dup $40 by 1
  $42 = %157<{ body_0 }>
  $43 = %164<{ body_9 }>
  $44 = call $18<%94<builtinIfElse>> with $40 $42<%157<{ body_0 }>> $43<%164<{ body_9 }>> ($10<%46<Core:result:is:1>> is responsible)
  $45 = trace: end of call
  $46 = %57<Core:result:mapOr:4>
  $47 = %159<{ body_6 }>
  $48 = dup $44 by 1
  $49 = %147<"`is result` was not satisfied">
  $50 = dup $3 by 1
  $51 = trace: start of call of $47<%159<{ body_6 }>> with $44 $49<%147<"`is result` was not satisfied">> $3 ($46<%57<Core:result:mapOr:4>> is responsible, code is at $46<%57<Core:result:mapOr:4>>)
  $52 = dup $44 by 1
  $53 = %125<True>
  $54 = %91<anonymous:$generated::needs>
  $55 = call $12<%92<builtinEquals>> with $44 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $56 = dup $44 by 1
  $57 = { body_172 capturing $44 }
  $58 = dup $55 by 1
  $59 = dup $57 by 1
  $60 = call $18<%94<builtinIfElse>> with $55 $42<%157<{ body_0 }>> $57 ($54<%91<anonymous:$generated::needs>> is responsible)
  $61 = dup $60 by 1
  $62 = %158<{ body_1 }>
  $63 = %209<{ body_162 }>
  $64 = call $18<%94<builtinIfElse>> with $60 $62<%158<{ body_1 }>> $63<%209<{ body_162 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $65 = dup $3 by 1
  $66 = { body_173 capturing $3 }
  $67 = dup $44 by 1
  $68 = dup $66 by 1
  $69 = call $18<%94<builtinIfElse>> with $44 $62<%158<{ body_1 }>> $66 ($54<%91<anonymous:$generated::needs>> is responsible)
  $70 = trace: end of call
  $71 = %53<Core:result:mapOr:12>
  $72 = %194<{ body_82 }>
  $73 = dup $1 by 1
  $74 = trace: start of call of $72<%194<{ body_82 }>> with $1 ($71<%53<Core:result:mapOr:12>> is responsible, code is at $71<%53<Core:result:mapOr:12>>)
  $75 = dup $1 by 1
  $76 = %34<Builtins::typeOf:5>
  $77 = call $8<%109<builtinTypeOf>> with $1 ($76<%34<Builtins::typeOf:5>> is responsible)
  $78 = dup $77 by 1
  $79 = %113<Function>
  $80 = %0<Builtins::equals:6>
  $81 = call $12<%92<builtinEquals>> with $77 $79<%113<Function>> ($80<%0<Builtins::equals:6>> is responsible)
  $82 = dup $1 by 1
  $83 = { body_175 capturing $1 }
  $84 = %35<Core:function:is1:11>
  $85 = %174<{ body_35 }>
  $86 = dup $81 by 1
  $87 = dup $83 by 1
  $88 = trace: start of call of $85<%174<{ body_35 }>> with $81 $83 $43<%164<{ body_9 }>> ($84<%35<Core:function:is1:11>> is responsible, code is at $84<%35<Core:function:is1:11>>)
  $89 = dup $81 by 1
  $90 = %3<Builtins::ifElse:1>
  $91 = call $12<%92<builtinEquals>> with $53<%125<True>> $81 ($90<%3<Builtins::ifElse:1>> is responsible)
  $92 = dup $91 by 1
  $93 = %162<{ body_7 }>
  $94 = call $18<%94<builtinIfElse>> with $91 $93<%162<{ body_7 }>> $21<%163<{ body_8 }>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $95 = dup $94 by 1
  $96 = call $23<%106<builtinTagWithoutValue>> with $94 ($90<%3<Builtins::ifElse:1>> is responsible)
  $97 = dup $96 by 1
  $98 = call $12<%92<builtinEquals>> with $96 $27<%117<Match>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $99 = dup $94 by 1
  $100 = { body_176 capturing $94 }
  $101 = dup $81 by 1
  $102 = { body_177 capturing $81 }
  $103 = dup $98 by 1
  $104 = dup $100 by 1
  $105 = dup $102 by 1
  $106 = call $18<%94<builtinIfElse>> with $98 $100 $102 ($90<%3<Builtins::ifElse:1>> is responsible)
  $107 = dup $106 by 1
  $108 = call $23<%106<builtinTagWithoutValue>> with $106 ($90<%3<Builtins::ifElse:1>> is responsible)
  $109 = dup $108 by 1
  $110 = call $12<%92<builtinEquals>> with $108 $27<%117<Match>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $111 = dup $110 by 1
  $112 = call $18<%94<builtinIfElse>> with $110 $42<%157<{ body_0 }>> $43<%164<{ body_9 }>> ($90<%3<Builtins::ifElse:1>> is responsible)
  $113 = %11<Builtins::ifElse:5>
  $114 = dup $112 by 1
  $115 = %141<"`conditionIsBool` was not satisfied">
  $116 = trace: start of call of $47<%159<{ body_6 }>> with $112 $115<%141<"`conditionIsBool` was not satisfied">> $84<%35<Core:function:is1:11>> ($113<%11<Builtins::ifElse:5>> is responsible, code is at $113<%11<Builtins::ifElse:5>>)
  $117 = dup $112 by 1
  $118 = call $12<%92<builtinEquals>> with $112 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $119 = dup $112 by 1
  $120 = { body_178 capturing $112 }
  $121 = dup $118 by 1
  $122 = dup $120 by 1
  $123 = call $18<%94<builtinIfElse>> with $118 $42<%157<{ body_0 }>> $120 ($54<%91<anonymous:$generated::needs>> is responsible)
  $124 = dup $123 by 1
  $125 = %167<{ body_14 }>
  $126 = call $18<%94<builtinIfElse>> with $123 $62<%158<{ body_1 }>> $125<%167<{ body_14 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $127 = dup $112 by 1
  $128 = %193<{ body_76 }>
  $129 = call $18<%94<builtinIfElse>> with $112 $62<%158<{ body_1 }>> $128<%193<{ body_76 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $130 = trace: end of call
  $131 = %10<Builtins::ifElse:41>
  $132 = dup $81 by 1
  $133 = dup $83 by 1
  $134 = trace: start of call of $18<%94<builtinIfElse>> with $81 $83 $43<%164<{ body_9 }>> ($131<%10<Builtins::ifElse:41>> is responsible, code is at $131<%10<Builtins::ifElse:41>>)
  $135 = dup $81 by 1
  $136 = dup $83 by 1
  $137 = call $18<%94<builtinIfElse>> with $81 $83 $43<%164<{ body_9 }>> ($131<%10<Builtins::ifElse:41>> is responsible)
  $138 = trace: end of call
  $139 = trace: end of call
  $140 = trace: end of call
  $141 = %54<Core:result:mapOr:14>
  $142 = dup $137 by 1
  $143 = %146<"`function.is1 okMapper` was not satisfied">
  $144 = dup $3 by 1
  $145 = trace: start of call of $47<%159<{ body_6 }>> with $137 $143<%146<"`function.is1 okMapper` was not satisfied">> $3 ($141<%54<Core:result:mapOr:14>> is responsible, code is at $141<%54<Core:result:mapOr:14>>)
  $146 = dup $137 by 1
  $147 = call $12<%92<builtinEquals>> with $137 $53<%125<True>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $148 = dup $137 by 1
  $149 = { body_179 capturing $137 }
  $150 = dup $147 by 1
  $151 = dup $149 by 1
  $152 = call $18<%94<builtinIfElse>> with $147 $42<%157<{ body_0 }>> $149 ($54<%91<anonymous:$generated::needs>> is responsible)
  $153 = dup $152 by 1
  $154 = %210<{ body_163 }>
  $155 = call $18<%94<builtinIfElse>> with $152 $62<%158<{ body_1 }>> $154<%210<{ body_163 }>> ($54<%91<anonymous:$generated::needs>> is responsible)
  $156 = dup $3 by 1
  $157 = { body_180 capturing $3 }
  $158 = dup $137 by 1
  $159 = dup $157 by 1
  $160 = call $18<%94<builtinIfElse>> with $137 $62<%158<{ body_1 }>> $157 ($54<%91<anonymous:$generated::needs>> is responsible)
  $161 = trace: end of call
  $162 = dup $2 by 1
  $163 = { body_181 capturing $2 }
  $164 = %55<Core:result:mapOr:19>
  $165 = %204<{ body_145 }>
  $166 = dup $0 by 1
  $167 = dup $1 by 1
  $168 = dup $163 by 1
  $169 = trace: tail call of $165<%204<{ body_145 }>> with $0 $1 $163 ($164<%55<Core:result:mapOr:19>> is responsible, code is at $164<%55<Core:result:mapOr:19>>)
  $170 = dup $0 by 1
  $171 = dup $1 by 1
  $172 = dup $163 by 1
  $173 = call $165<%204<{ body_145 }>> with $0 $1 $163 ($164<%55<Core:result:mapOr:19>> is responsible)
  $174 = drop $163
  $175 = drop $160
  $176 = drop $157
  $177 = drop $155
  $178 = drop $152
  $179 = drop $149
  $180 = drop $147
  $181 = drop $137
  $182 = drop $129
  $183 = drop $126
  $184 = drop $123
  $185 = drop $120
  $186 = drop $118
  $187 = drop $112
  $188 = drop $110
  $189 = drop $108
  $190 = drop $106
  $191 = drop $102
  $192 = drop $100
  $193 = drop $98
  $194 = drop $96
  $195 = drop $94
  $196 = drop $91
  $197 = drop $83
  $198 = drop $81
  $199 = drop $77
  $200 = drop $69
  $201 = drop $66
  $202 = drop $64
  $203 = drop $60
  $204 = drop $57
  $205 = drop $55
  $206 = drop $44
  $207 = drop $40
  $208 = drop $38
  $209 = drop $36
  $210 = drop $32
  $211 = drop $30
  $212 = drop $28
  $213 = drop $25
  $214 = drop $22
  $215 = drop $17
  $216 = drop $15
  $217 = drop $11
  $218 = drop $2
  $219 = drop $1
  $220 = drop $0
  $221 = $173
body_183 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %42<Core:result:flatMap:4>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%42<Core:result:flatMap:4>> is at fault)
body_184 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %38<Core:result:flatMap:14>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%38<Core:result:flatMap:14>> is at fault)
body_185 (responsible $0) =
  # Original HIR IDs: Core:result:flatMap:17:2:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %39<Core:result:flatMap:17:2>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%39<Core:result:flatMap:17:2>> is at fault)
body_186 (responsible $0) =
  # Original HIR IDs: Core:result:flatMap:17:2:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %39<Core:result:flatMap:17:2>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%39<Core:result:flatMap:17:2>> is at fault)
body_187 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_188 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_187 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_189 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_188 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_190 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_191 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_192 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_191 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_193 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_192 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_194 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_193 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_195 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_196 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %147<"`is result` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%147<"`is result` was not satisfied">> ($0 is at fault)
body_197 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_198 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %36<Core:function:is1:9:3>
  $3 = %166<{ body_13 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%166<{ body_13 }>> with $0 ($2<%36<Core:function:is1:9:3>> is responsible, code is at $2<%36<Core:function:is1:9:3>>)
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %32<Builtins::typeIs:19>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%32<Builtins::typeIs:19>> is responsible)
  $10 = %92<builtinEquals>
  $11 = dup $9 by 1
  $12 = %113<Function>
  $13 = %33<Builtins::typeIs:25>
  $14 = call $10<%92<builtinEquals>> with $9 $12<%113<Function>> ($13<%33<Builtins::typeIs:25>> is responsible)
  $15 = %2<Builtins::getArgumentCount:5>
  $16 = %159<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %144<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%159<{ body_6 }>> with $14 $18<%144<"`function | typeIs Function` was not satisfied">> $2<%36<Core:function:is1:9:3>> ($15<%2<Builtins::getArgumentCount:5>> is responsible, code is at $15<%2<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = %125<True>
  $22 = %91<anonymous:$generated::needs>
  $23 = call $10<%92<builtinEquals>> with $14 $21<%125<True>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $24 = dup $14 by 1
  $25 = { body_197 capturing $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $23 by 1
  $28 = %157<{ body_0 }>
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $23 $28<%157<{ body_0 }>> $25 ($22<%91<anonymous:$generated::needs>> is responsible)
  $31 = dup $30 by 1
  $32 = %158<{ body_1 }>
  $33 = %165<{ body_10 }>
  $34 = call $26<%94<builtinIfElse>> with $30 $32<%158<{ body_1 }>> $33<%165<{ body_10 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $35 = dup $14 by 1
  $36 = %192<{ body_75 }>
  $37 = call $26<%94<builtinIfElse>> with $14 $32<%158<{ body_1 }>> $36<%192<{ body_75 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = %93<builtinGetArgumentCount>
  $40 = dup $0 by 1
  $41 = %1<Builtins::getArgumentCount:11>
  $42 = call $39<%93<builtinGetArgumentCount>> with $0 ($41<%1<Builtins::getArgumentCount:11>> is responsible)
  $43 = trace: end of call
  $44 = dup $42 by 1
  $45 = %127<1>
  $46 = %0<Builtins::equals:6>
  $47 = call $10<%92<builtinEquals>> with $42 $45<%127<1>> ($46<%0<Builtins::equals:6>> is responsible)
  $48 = drop $42
  $49 = drop $37
  $50 = drop $34
  $51 = drop $30
  $52 = drop $25
  $53 = drop $23
  $54 = drop $14
  $55 = drop $9
  $56 = $47
body_199 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_200 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_201 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_202 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_203 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %146<"`function.is1 okMapper` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%146<"`function.is1 okMapper` was not satisfied">> ($0 is at fault)
body_204 (responsible $2) =
  # Original HIR IDs: Core:result:flatMap:17:2:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = %105<builtinTagWithValue>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = %39<Core:result:flatMap:17:2>
  $7 = call $3<%105<builtinTagWithValue>> with $0 $1 ($6<%39<Core:result:flatMap:17:2>> is responsible)
body_205 (responsible $2) =
  # Original HIR IDs: Core:result:flatMap:17:2:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = %104<builtinTagHasValue>
  $4 = dup $0 by 1
  $5 = %39<Core:result:flatMap:17:2>
  $6 = call $3<%104<builtinTagHasValue>> with $0 ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = { body_204 capturing $0, $1 }
  $10 = %94<builtinIfElse>
  $11 = dup $6 by 1
  $12 = %214<{ body_185 }>
  $13 = dup $9 by 1
  $14 = call $10<%94<builtinIfElse>> with $6 $12<%214<{ body_185 }>> $9 ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $15 = drop $9
  $16 = drop $6
  $17 = $14
body_206 (responsible $2) =
  # Original HIR IDs: Core:result:flatMap:17:2:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %39<Core:result:flatMap:17:2>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = trace: tail call of $0 with $1 ($3<%39<Core:result:flatMap:17:2>> is responsible, code is at $3<%39<Core:result:flatMap:17:2>>)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = call $0 with $1 ($3<%39<Core:result:flatMap:17:2>> is responsible)
body_207 (responsible $1) =
  # Original HIR IDs: Core:result:flatMap:17:2:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %39<Core:result:flatMap:17:2>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%39<Core:result:flatMap:17:2>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%39<Core:result:flatMap:17:2>> is responsible)
  $10 = dup $9 by 1
  $11 = %129<" arguments with 1 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%129<" arguments with 1 arguments.">> ($4<%39<Core:result:flatMap:17:2>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%39<Core:result:flatMap:17:2>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_208 (responsible $2) =
  # Original HIR IDs: Core:result:flatMap:17:2:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %39<Core:result:flatMap:17:2>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %127<1>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%127<1>> ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_206 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_207 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_209 (responsible $3) =
  # Original HIR IDs: Core:result:flatMap:17:2:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %39<Core:result:flatMap:17:2>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%39<Core:result:flatMap:17:2>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_208 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %215<{ body_186 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%215<{ body_186 }>> ($7<%39<Core:result:flatMap:17:2>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_210 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:flatMap:17
  # Captured IDs: $0
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %39<Core:result:flatMap:17:2>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %123<Tag>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%123<Tag>> ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_205 capturing $0, $1 }
  $14 = dup $0 by 1
  $15 = dup $1 by 1
  $16 = dup $6 by 1
  $17 = { body_209 capturing $0, $1, $6 }
  $18 = %94<builtinIfElse>
  $19 = dup $10 by 1
  $20 = dup $13 by 1
  $21 = dup $17 by 1
  $22 = call $18<%94<builtinIfElse>> with $10 $13 $17 ($5<%39<Core:result:flatMap:17:2>> is responsible)
  $23 = drop $17
  $24 = drop $13
  $25 = drop $10
  $26 = drop $6
  $27 = drop $1
  $28 = $22
body_211 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:flatMap
  # Captured IDs: none
  $3 = %41<Core:result:flatMap:2>
  $4 = %195<{ body_91 }>
  $5 = dup $0 by 1
  $6 = trace: start of call of $4<%195<{ body_91 }>> with $0 ($3<%41<Core:result:flatMap:2>> is responsible, code is at $3<%41<Core:result:flatMap:2>>)
  $7 = %109<builtinTypeOf>
  $8 = dup $0 by 1
  $9 = %46<Core:result:is:1>
  $10 = call $7<%109<builtinTypeOf>> with $0 ($9<%46<Core:result:is:1>> is responsible)
  $11 = %92<builtinEquals>
  $12 = %123<Tag>
  $13 = dup $10 by 1
  $14 = call $11<%92<builtinEquals>> with $12<%123<Tag>> $10 ($9<%46<Core:result:is:1>> is responsible)
  $15 = dup $0 by 1
  $16 = { body_189 capturing $0 }
  $17 = %94<builtinIfElse>
  $18 = dup $14 by 1
  $19 = dup $16 by 1
  $20 = %163<{ body_8 }>
  $21 = call $17<%94<builtinIfElse>> with $14 $16 $20<%163<{ body_8 }>> ($9<%46<Core:result:is:1>> is responsible)
  $22 = %106<builtinTagWithoutValue>
  $23 = dup $21 by 1
  $24 = call $22<%106<builtinTagWithoutValue>> with $21 ($9<%46<Core:result:is:1>> is responsible)
  $25 = dup $24 by 1
  $26 = %117<Match>
  $27 = call $11<%92<builtinEquals>> with $24 $26<%117<Match>> ($9<%46<Core:result:is:1>> is responsible)
  $28 = dup $21 by 1
  $29 = { body_190 capturing $21 }
  $30 = dup $0 by 1
  $31 = { body_194 capturing $0 }
  $32 = dup $27 by 1
  $33 = dup $29 by 1
  $34 = dup $31 by 1
  $35 = call $17<%94<builtinIfElse>> with $27 $29 $31 ($9<%46<Core:result:is:1>> is responsible)
  $36 = dup $35 by 1
  $37 = call $22<%106<builtinTagWithoutValue>> with $35 ($9<%46<Core:result:is:1>> is responsible)
  $38 = dup $37 by 1
  $39 = call $11<%92<builtinEquals>> with $37 $26<%117<Match>> ($9<%46<Core:result:is:1>> is responsible)
  $40 = dup $39 by 1
  $41 = %157<{ body_0 }>
  $42 = %164<{ body_9 }>
  $43 = call $17<%94<builtinIfElse>> with $39 $41<%157<{ body_0 }>> $42<%164<{ body_9 }>> ($9<%46<Core:result:is:1>> is responsible)
  $44 = trace: end of call
  $45 = %42<Core:result:flatMap:4>
  $46 = %159<{ body_6 }>
  $47 = dup $43 by 1
  $48 = %147<"`is result` was not satisfied">
  $49 = dup $2 by 1
  $50 = trace: start of call of $46<%159<{ body_6 }>> with $43 $48<%147<"`is result` was not satisfied">> $2 ($45<%42<Core:result:flatMap:4>> is responsible, code is at $45<%42<Core:result:flatMap:4>>)
  $51 = dup $43 by 1
  $52 = %125<True>
  $53 = %91<anonymous:$generated::needs>
  $54 = call $11<%92<builtinEquals>> with $43 $52<%125<True>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $55 = dup $43 by 1
  $56 = { body_195 capturing $43 }
  $57 = dup $54 by 1
  $58 = dup $56 by 1
  $59 = call $17<%94<builtinIfElse>> with $54 $41<%157<{ body_0 }>> $56 ($53<%91<anonymous:$generated::needs>> is responsible)
  $60 = dup $59 by 1
  $61 = %158<{ body_1 }>
  $62 = %212<{ body_183 }>
  $63 = call $17<%94<builtinIfElse>> with $59 $61<%158<{ body_1 }>> $62<%212<{ body_183 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $64 = dup $2 by 1
  $65 = { body_196 capturing $2 }
  $66 = dup $43 by 1
  $67 = dup $65 by 1
  $68 = call $17<%94<builtinIfElse>> with $43 $61<%158<{ body_1 }>> $65 ($53<%91<anonymous:$generated::needs>> is responsible)
  $69 = trace: end of call
  $70 = %37<Core:result:flatMap:12>
  $71 = %194<{ body_82 }>
  $72 = dup $1 by 1
  $73 = trace: start of call of $71<%194<{ body_82 }>> with $1 ($70<%37<Core:result:flatMap:12>> is responsible, code is at $70<%37<Core:result:flatMap:12>>)
  $74 = dup $1 by 1
  $75 = %34<Builtins::typeOf:5>
  $76 = call $7<%109<builtinTypeOf>> with $1 ($75<%34<Builtins::typeOf:5>> is responsible)
  $77 = dup $76 by 1
  $78 = %113<Function>
  $79 = %0<Builtins::equals:6>
  $80 = call $11<%92<builtinEquals>> with $76 $78<%113<Function>> ($79<%0<Builtins::equals:6>> is responsible)
  $81 = dup $1 by 1
  $82 = { body_198 capturing $1 }
  $83 = %35<Core:function:is1:11>
  $84 = %174<{ body_35 }>
  $85 = dup $80 by 1
  $86 = dup $82 by 1
  $87 = trace: start of call of $84<%174<{ body_35 }>> with $80 $82 $42<%164<{ body_9 }>> ($83<%35<Core:function:is1:11>> is responsible, code is at $83<%35<Core:function:is1:11>>)
  $88 = dup $80 by 1
  $89 = %3<Builtins::ifElse:1>
  $90 = call $11<%92<builtinEquals>> with $52<%125<True>> $80 ($89<%3<Builtins::ifElse:1>> is responsible)
  $91 = dup $90 by 1
  $92 = %162<{ body_7 }>
  $93 = call $17<%94<builtinIfElse>> with $90 $92<%162<{ body_7 }>> $20<%163<{ body_8 }>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $94 = dup $93 by 1
  $95 = call $22<%106<builtinTagWithoutValue>> with $93 ($89<%3<Builtins::ifElse:1>> is responsible)
  $96 = dup $95 by 1
  $97 = call $11<%92<builtinEquals>> with $95 $26<%117<Match>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $98 = dup $93 by 1
  $99 = { body_199 capturing $93 }
  $100 = dup $80 by 1
  $101 = { body_200 capturing $80 }
  $102 = dup $97 by 1
  $103 = dup $99 by 1
  $104 = dup $101 by 1
  $105 = call $17<%94<builtinIfElse>> with $97 $99 $101 ($89<%3<Builtins::ifElse:1>> is responsible)
  $106 = dup $105 by 1
  $107 = call $22<%106<builtinTagWithoutValue>> with $105 ($89<%3<Builtins::ifElse:1>> is responsible)
  $108 = dup $107 by 1
  $109 = call $11<%92<builtinEquals>> with $107 $26<%117<Match>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $110 = dup $109 by 1
  $111 = call $17<%94<builtinIfElse>> with $109 $41<%157<{ body_0 }>> $42<%164<{ body_9 }>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $112 = %11<Builtins::ifElse:5>
  $113 = dup $111 by 1
  $114 = %141<"`conditionIsBool` was not satisfied">
  $115 = trace: start of call of $46<%159<{ body_6 }>> with $111 $114<%141<"`conditionIsBool` was not satisfied">> $83<%35<Core:function:is1:11>> ($112<%11<Builtins::ifElse:5>> is responsible, code is at $112<%11<Builtins::ifElse:5>>)
  $116 = dup $111 by 1
  $117 = call $11<%92<builtinEquals>> with $111 $52<%125<True>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $118 = dup $111 by 1
  $119 = { body_201 capturing $111 }
  $120 = dup $117 by 1
  $121 = dup $119 by 1
  $122 = call $17<%94<builtinIfElse>> with $117 $41<%157<{ body_0 }>> $119 ($53<%91<anonymous:$generated::needs>> is responsible)
  $123 = dup $122 by 1
  $124 = %167<{ body_14 }>
  $125 = call $17<%94<builtinIfElse>> with $122 $61<%158<{ body_1 }>> $124<%167<{ body_14 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $126 = dup $111 by 1
  $127 = %193<{ body_76 }>
  $128 = call $17<%94<builtinIfElse>> with $111 $61<%158<{ body_1 }>> $127<%193<{ body_76 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $129 = trace: end of call
  $130 = %10<Builtins::ifElse:41>
  $131 = dup $80 by 1
  $132 = dup $82 by 1
  $133 = trace: start of call of $17<%94<builtinIfElse>> with $80 $82 $42<%164<{ body_9 }>> ($130<%10<Builtins::ifElse:41>> is responsible, code is at $130<%10<Builtins::ifElse:41>>)
  $134 = dup $80 by 1
  $135 = dup $82 by 1
  $136 = call $17<%94<builtinIfElse>> with $80 $82 $42<%164<{ body_9 }>> ($130<%10<Builtins::ifElse:41>> is responsible)
  $137 = trace: end of call
  $138 = trace: end of call
  $139 = trace: end of call
  $140 = %38<Core:result:flatMap:14>
  $141 = dup $136 by 1
  $142 = %146<"`function.is1 okMapper` was not satisfied">
  $143 = dup $2 by 1
  $144 = trace: start of call of $46<%159<{ body_6 }>> with $136 $142<%146<"`function.is1 okMapper` was not satisfied">> $2 ($140<%38<Core:result:flatMap:14>> is responsible, code is at $140<%38<Core:result:flatMap:14>>)
  $145 = dup $136 by 1
  $146 = call $11<%92<builtinEquals>> with $136 $52<%125<True>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $147 = dup $136 by 1
  $148 = { body_202 capturing $136 }
  $149 = dup $146 by 1
  $150 = dup $148 by 1
  $151 = call $17<%94<builtinIfElse>> with $146 $41<%157<{ body_0 }>> $148 ($53<%91<anonymous:$generated::needs>> is responsible)
  $152 = dup $151 by 1
  $153 = %213<{ body_184 }>
  $154 = call $17<%94<builtinIfElse>> with $151 $61<%158<{ body_1 }>> $153<%213<{ body_184 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $155 = dup $2 by 1
  $156 = { body_203 capturing $2 }
  $157 = dup $136 by 1
  $158 = dup $156 by 1
  $159 = call $17<%94<builtinIfElse>> with $136 $61<%158<{ body_1 }>> $156 ($53<%91<anonymous:$generated::needs>> is responsible)
  $160 = trace: end of call
  $161 = dup $1 by 1
  $162 = { body_210 capturing $1 }
  $163 = %40<Core:result:flatMap:19>
  $164 = %211<{ body_182 }>
  $165 = dup $0 by 1
  $166 = dup $162 by 1
  $167 = dup $0 by 1
  $168 = trace: tail call of $164<%211<{ body_182 }>> with $0 $162 $0 ($163<%40<Core:result:flatMap:19>> is responsible, code is at $163<%40<Core:result:flatMap:19>>)
  $169 = dup $0 by 1
  $170 = dup $162 by 1
  $171 = dup $0 by 1
  $172 = call $164<%211<{ body_182 }>> with $0 $162 $0 ($163<%40<Core:result:flatMap:19>> is responsible)
  $173 = drop $162
  $174 = drop $159
  $175 = drop $156
  $176 = drop $154
  $177 = drop $151
  $178 = drop $148
  $179 = drop $146
  $180 = drop $136
  $181 = drop $128
  $182 = drop $125
  $183 = drop $122
  $184 = drop $119
  $185 = drop $117
  $186 = drop $111
  $187 = drop $109
  $188 = drop $107
  $189 = drop $105
  $190 = drop $101
  $191 = drop $99
  $192 = drop $97
  $193 = drop $95
  $194 = drop $93
  $195 = drop $90
  $196 = drop $82
  $197 = drop $80
  $198 = drop $76
  $199 = drop $68
  $200 = drop $65
  $201 = drop $63
  $202 = drop $59
  $203 = drop $56
  $204 = drop $54
  $205 = drop $43
  $206 = drop $39
  $207 = drop $37
  $208 = drop $35
  $209 = drop $31
  $210 = drop $29
  $211 = drop $27
  $212 = drop $24
  $213 = drop $21
  $214 = drop $16
  $215 = drop $14
  $216 = drop $10
  $217 = drop $1
  $218 = drop $0
  $219 = $172
body_212 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %52<Core:result:map:4>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%52<Core:result:map:4>> is at fault)
body_213 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: none
  $1 = %133<"The `condition` must be either `True` or `False`.">
  $2 = %48<Core:result:map:14>
  $3 = panicking because $1<%133<"The `condition` must be either `True` or `False`.">> ($2<%48<Core:result:map:14>> is at fault)
body_214 (responsible $0) =
  # Original HIR IDs: Core:result:map:17:3:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %49<Core:result:map:17:3>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%49<Core:result:map:17:3>> is at fault)
body_215 (responsible $0) =
  # Original HIR IDs: Core:result:map:17:3:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %49<Core:result:map:17:3>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%49<Core:result:map:17:3>> is at fault)
body_216 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_217 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_216 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_218 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_217 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_219 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_220 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_221 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_220 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_222 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_221 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_223 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_222 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_224 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_225 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %147<"`is result` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%147<"`is result` was not satisfied">> ($0 is at fault)
body_226 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_227 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %36<Core:function:is1:9:3>
  $3 = %166<{ body_13 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%166<{ body_13 }>> with $0 ($2<%36<Core:function:is1:9:3>> is responsible, code is at $2<%36<Core:function:is1:9:3>>)
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %32<Builtins::typeIs:19>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%32<Builtins::typeIs:19>> is responsible)
  $10 = %92<builtinEquals>
  $11 = dup $9 by 1
  $12 = %113<Function>
  $13 = %33<Builtins::typeIs:25>
  $14 = call $10<%92<builtinEquals>> with $9 $12<%113<Function>> ($13<%33<Builtins::typeIs:25>> is responsible)
  $15 = %2<Builtins::getArgumentCount:5>
  $16 = %159<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %144<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%159<{ body_6 }>> with $14 $18<%144<"`function | typeIs Function` was not satisfied">> $2<%36<Core:function:is1:9:3>> ($15<%2<Builtins::getArgumentCount:5>> is responsible, code is at $15<%2<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = %125<True>
  $22 = %91<anonymous:$generated::needs>
  $23 = call $10<%92<builtinEquals>> with $14 $21<%125<True>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $24 = dup $14 by 1
  $25 = { body_226 capturing $14 }
  $26 = %94<builtinIfElse>
  $27 = dup $23 by 1
  $28 = %157<{ body_0 }>
  $29 = dup $25 by 1
  $30 = call $26<%94<builtinIfElse>> with $23 $28<%157<{ body_0 }>> $25 ($22<%91<anonymous:$generated::needs>> is responsible)
  $31 = dup $30 by 1
  $32 = %158<{ body_1 }>
  $33 = %165<{ body_10 }>
  $34 = call $26<%94<builtinIfElse>> with $30 $32<%158<{ body_1 }>> $33<%165<{ body_10 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $35 = dup $14 by 1
  $36 = %192<{ body_75 }>
  $37 = call $26<%94<builtinIfElse>> with $14 $32<%158<{ body_1 }>> $36<%192<{ body_75 }>> ($22<%91<anonymous:$generated::needs>> is responsible)
  $38 = trace: end of call
  $39 = %93<builtinGetArgumentCount>
  $40 = dup $0 by 1
  $41 = %1<Builtins::getArgumentCount:11>
  $42 = call $39<%93<builtinGetArgumentCount>> with $0 ($41<%1<Builtins::getArgumentCount:11>> is responsible)
  $43 = trace: end of call
  $44 = dup $42 by 1
  $45 = %127<1>
  $46 = %0<Builtins::equals:6>
  $47 = call $10<%92<builtinEquals>> with $42 $45<%127<1>> ($46<%0<Builtins::equals:6>> is responsible)
  $48 = drop $42
  $49 = drop $37
  $50 = drop $34
  $51 = drop $30
  $52 = drop $25
  $53 = drop $23
  $54 = drop $14
  $55 = drop $9
  $56 = $47
body_228 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_229 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_230 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_231 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_232 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0
  $2 = %146<"`function.is1 okMapper` was not satisfied">
  $3 = dup $0 by 1
  $4 = panicking because $2<%146<"`function.is1 okMapper` was not satisfied">> ($0 is at fault)
body_233 (responsible $2) =
  # Original HIR IDs: Core:result:map:17:3:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = %105<builtinTagWithValue>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = %49<Core:result:map:17:3>
  $7 = call $3<%105<builtinTagWithValue>> with $0 $1 ($6<%49<Core:result:map:17:3>> is responsible)
body_234 (responsible $2) =
  # Original HIR IDs: Core:result:map:17:3:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = %104<builtinTagHasValue>
  $4 = dup $0 by 1
  $5 = %49<Core:result:map:17:3>
  $6 = call $3<%104<builtinTagHasValue>> with $0 ($5<%49<Core:result:map:17:3>> is responsible)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = { body_233 capturing $0, $1 }
  $10 = %94<builtinIfElse>
  $11 = dup $6 by 1
  $12 = %219<{ body_214 }>
  $13 = dup $9 by 1
  $14 = call $10<%94<builtinIfElse>> with $6 $12<%219<{ body_214 }>> $9 ($5<%49<Core:result:map:17:3>> is responsible)
  $15 = drop $9
  $16 = drop $6
  $17 = $14
body_235 (responsible $2) =
  # Original HIR IDs: Core:result:map:17:3:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %49<Core:result:map:17:3>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = trace: tail call of $0 with $1 ($3<%49<Core:result:map:17:3>> is responsible, code is at $3<%49<Core:result:map:17:3>>)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = call $0 with $1 ($3<%49<Core:result:map:17:3>> is responsible)
body_236 (responsible $1) =
  # Original HIR IDs: Core:result:map:17:3:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %49<Core:result:map:17:3>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%49<Core:result:map:17:3>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%49<Core:result:map:17:3>> is responsible)
  $10 = dup $9 by 1
  $11 = %129<" arguments with 1 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%129<" arguments with 1 arguments.">> ($4<%49<Core:result:map:17:3>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%49<Core:result:map:17:3>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_237 (responsible $2) =
  # Original HIR IDs: Core:result:map:17:3:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %49<Core:result:map:17:3>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%49<Core:result:map:17:3>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %127<1>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%127<1>> ($5<%49<Core:result:map:17:3>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_235 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_236 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%49<Core:result:map:17:3>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_238 (responsible $3) =
  # Original HIR IDs: Core:result:map:17:3:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %49<Core:result:map:17:3>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%49<Core:result:map:17:3>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_237 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %220<{ body_215 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%220<{ body_215 }>> ($7<%49<Core:result:map:17:3>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_239 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:map:17
  # Captured IDs: $0
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %49<Core:result:map:17:3>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%49<Core:result:map:17:3>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %123<Tag>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%123<Tag>> ($5<%49<Core:result:map:17:3>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_234 capturing $0, $1 }
  $14 = dup $0 by 1
  $15 = dup $1 by 1
  $16 = dup $6 by 1
  $17 = { body_238 capturing $0, $1, $6 }
  $18 = %94<builtinIfElse>
  $19 = dup $10 by 1
  $20 = dup $13 by 1
  $21 = dup $17 by 1
  $22 = call $18<%94<builtinIfElse>> with $10 $13 $17 ($5<%49<Core:result:map:17:3>> is responsible)
  $23 = dup $22 by 1
  $24 = Ok $22
  $25 = drop $22
  $26 = drop $17
  $27 = drop $13
  $28 = drop $10
  $29 = drop $6
  $30 = drop $1
  $31 = $24
body_240 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:map
  # Captured IDs: none
  $3 = %51<Core:result:map:2>
  $4 = %195<{ body_91 }>
  $5 = dup $0 by 1
  $6 = trace: start of call of $4<%195<{ body_91 }>> with $0 ($3<%51<Core:result:map:2>> is responsible, code is at $3<%51<Core:result:map:2>>)
  $7 = %109<builtinTypeOf>
  $8 = dup $0 by 1
  $9 = %46<Core:result:is:1>
  $10 = call $7<%109<builtinTypeOf>> with $0 ($9<%46<Core:result:is:1>> is responsible)
  $11 = %92<builtinEquals>
  $12 = %123<Tag>
  $13 = dup $10 by 1
  $14 = call $11<%92<builtinEquals>> with $12<%123<Tag>> $10 ($9<%46<Core:result:is:1>> is responsible)
  $15 = dup $0 by 1
  $16 = { body_218 capturing $0 }
  $17 = %94<builtinIfElse>
  $18 = dup $14 by 1
  $19 = dup $16 by 1
  $20 = %163<{ body_8 }>
  $21 = call $17<%94<builtinIfElse>> with $14 $16 $20<%163<{ body_8 }>> ($9<%46<Core:result:is:1>> is responsible)
  $22 = %106<builtinTagWithoutValue>
  $23 = dup $21 by 1
  $24 = call $22<%106<builtinTagWithoutValue>> with $21 ($9<%46<Core:result:is:1>> is responsible)
  $25 = dup $24 by 1
  $26 = %117<Match>
  $27 = call $11<%92<builtinEquals>> with $24 $26<%117<Match>> ($9<%46<Core:result:is:1>> is responsible)
  $28 = dup $21 by 1
  $29 = { body_219 capturing $21 }
  $30 = dup $0 by 1
  $31 = { body_223 capturing $0 }
  $32 = dup $27 by 1
  $33 = dup $29 by 1
  $34 = dup $31 by 1
  $35 = call $17<%94<builtinIfElse>> with $27 $29 $31 ($9<%46<Core:result:is:1>> is responsible)
  $36 = dup $35 by 1
  $37 = call $22<%106<builtinTagWithoutValue>> with $35 ($9<%46<Core:result:is:1>> is responsible)
  $38 = dup $37 by 1
  $39 = call $11<%92<builtinEquals>> with $37 $26<%117<Match>> ($9<%46<Core:result:is:1>> is responsible)
  $40 = dup $39 by 1
  $41 = %157<{ body_0 }>
  $42 = %164<{ body_9 }>
  $43 = call $17<%94<builtinIfElse>> with $39 $41<%157<{ body_0 }>> $42<%164<{ body_9 }>> ($9<%46<Core:result:is:1>> is responsible)
  $44 = trace: end of call
  $45 = %52<Core:result:map:4>
  $46 = %159<{ body_6 }>
  $47 = dup $43 by 1
  $48 = %147<"`is result` was not satisfied">
  $49 = dup $2 by 1
  $50 = trace: start of call of $46<%159<{ body_6 }>> with $43 $48<%147<"`is result` was not satisfied">> $2 ($45<%52<Core:result:map:4>> is responsible, code is at $45<%52<Core:result:map:4>>)
  $51 = dup $43 by 1
  $52 = %125<True>
  $53 = %91<anonymous:$generated::needs>
  $54 = call $11<%92<builtinEquals>> with $43 $52<%125<True>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $55 = dup $43 by 1
  $56 = { body_224 capturing $43 }
  $57 = dup $54 by 1
  $58 = dup $56 by 1
  $59 = call $17<%94<builtinIfElse>> with $54 $41<%157<{ body_0 }>> $56 ($53<%91<anonymous:$generated::needs>> is responsible)
  $60 = dup $59 by 1
  $61 = %158<{ body_1 }>
  $62 = %217<{ body_212 }>
  $63 = call $17<%94<builtinIfElse>> with $59 $61<%158<{ body_1 }>> $62<%217<{ body_212 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $64 = dup $2 by 1
  $65 = { body_225 capturing $2 }
  $66 = dup $43 by 1
  $67 = dup $65 by 1
  $68 = call $17<%94<builtinIfElse>> with $43 $61<%158<{ body_1 }>> $65 ($53<%91<anonymous:$generated::needs>> is responsible)
  $69 = trace: end of call
  $70 = %47<Core:result:map:12>
  $71 = %194<{ body_82 }>
  $72 = dup $1 by 1
  $73 = trace: start of call of $71<%194<{ body_82 }>> with $1 ($70<%47<Core:result:map:12>> is responsible, code is at $70<%47<Core:result:map:12>>)
  $74 = dup $1 by 1
  $75 = %34<Builtins::typeOf:5>
  $76 = call $7<%109<builtinTypeOf>> with $1 ($75<%34<Builtins::typeOf:5>> is responsible)
  $77 = dup $76 by 1
  $78 = %113<Function>
  $79 = %0<Builtins::equals:6>
  $80 = call $11<%92<builtinEquals>> with $76 $78<%113<Function>> ($79<%0<Builtins::equals:6>> is responsible)
  $81 = dup $1 by 1
  $82 = { body_227 capturing $1 }
  $83 = %35<Core:function:is1:11>
  $84 = %174<{ body_35 }>
  $85 = dup $80 by 1
  $86 = dup $82 by 1
  $87 = trace: start of call of $84<%174<{ body_35 }>> with $80 $82 $42<%164<{ body_9 }>> ($83<%35<Core:function:is1:11>> is responsible, code is at $83<%35<Core:function:is1:11>>)
  $88 = dup $80 by 1
  $89 = %3<Builtins::ifElse:1>
  $90 = call $11<%92<builtinEquals>> with $52<%125<True>> $80 ($89<%3<Builtins::ifElse:1>> is responsible)
  $91 = dup $90 by 1
  $92 = %162<{ body_7 }>
  $93 = call $17<%94<builtinIfElse>> with $90 $92<%162<{ body_7 }>> $20<%163<{ body_8 }>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $94 = dup $93 by 1
  $95 = call $22<%106<builtinTagWithoutValue>> with $93 ($89<%3<Builtins::ifElse:1>> is responsible)
  $96 = dup $95 by 1
  $97 = call $11<%92<builtinEquals>> with $95 $26<%117<Match>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $98 = dup $93 by 1
  $99 = { body_228 capturing $93 }
  $100 = dup $80 by 1
  $101 = { body_229 capturing $80 }
  $102 = dup $97 by 1
  $103 = dup $99 by 1
  $104 = dup $101 by 1
  $105 = call $17<%94<builtinIfElse>> with $97 $99 $101 ($89<%3<Builtins::ifElse:1>> is responsible)
  $106 = dup $105 by 1
  $107 = call $22<%106<builtinTagWithoutValue>> with $105 ($89<%3<Builtins::ifElse:1>> is responsible)
  $108 = dup $107 by 1
  $109 = call $11<%92<builtinEquals>> with $107 $26<%117<Match>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $110 = dup $109 by 1
  $111 = call $17<%94<builtinIfElse>> with $109 $41<%157<{ body_0 }>> $42<%164<{ body_9 }>> ($89<%3<Builtins::ifElse:1>> is responsible)
  $112 = %11<Builtins::ifElse:5>
  $113 = dup $111 by 1
  $114 = %141<"`conditionIsBool` was not satisfied">
  $115 = trace: start of call of $46<%159<{ body_6 }>> with $111 $114<%141<"`conditionIsBool` was not satisfied">> $83<%35<Core:function:is1:11>> ($112<%11<Builtins::ifElse:5>> is responsible, code is at $112<%11<Builtins::ifElse:5>>)
  $116 = dup $111 by 1
  $117 = call $11<%92<builtinEquals>> with $111 $52<%125<True>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $118 = dup $111 by 1
  $119 = { body_230 capturing $111 }
  $120 = dup $117 by 1
  $121 = dup $119 by 1
  $122 = call $17<%94<builtinIfElse>> with $117 $41<%157<{ body_0 }>> $119 ($53<%91<anonymous:$generated::needs>> is responsible)
  $123 = dup $122 by 1
  $124 = %167<{ body_14 }>
  $125 = call $17<%94<builtinIfElse>> with $122 $61<%158<{ body_1 }>> $124<%167<{ body_14 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $126 = dup $111 by 1
  $127 = %193<{ body_76 }>
  $128 = call $17<%94<builtinIfElse>> with $111 $61<%158<{ body_1 }>> $127<%193<{ body_76 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $129 = trace: end of call
  $130 = %10<Builtins::ifElse:41>
  $131 = dup $80 by 1
  $132 = dup $82 by 1
  $133 = trace: start of call of $17<%94<builtinIfElse>> with $80 $82 $42<%164<{ body_9 }>> ($130<%10<Builtins::ifElse:41>> is responsible, code is at $130<%10<Builtins::ifElse:41>>)
  $134 = dup $80 by 1
  $135 = dup $82 by 1
  $136 = call $17<%94<builtinIfElse>> with $80 $82 $42<%164<{ body_9 }>> ($130<%10<Builtins::ifElse:41>> is responsible)
  $137 = trace: end of call
  $138 = trace: end of call
  $139 = trace: end of call
  $140 = %48<Core:result:map:14>
  $141 = dup $136 by 1
  $142 = %146<"`function.is1 okMapper` was not satisfied">
  $143 = dup $2 by 1
  $144 = trace: start of call of $46<%159<{ body_6 }>> with $136 $142<%146<"`function.is1 okMapper` was not satisfied">> $2 ($140<%48<Core:result:map:14>> is responsible, code is at $140<%48<Core:result:map:14>>)
  $145 = dup $136 by 1
  $146 = call $11<%92<builtinEquals>> with $136 $52<%125<True>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $147 = dup $136 by 1
  $148 = { body_231 capturing $136 }
  $149 = dup $146 by 1
  $150 = dup $148 by 1
  $151 = call $17<%94<builtinIfElse>> with $146 $41<%157<{ body_0 }>> $148 ($53<%91<anonymous:$generated::needs>> is responsible)
  $152 = dup $151 by 1
  $153 = %218<{ body_213 }>
  $154 = call $17<%94<builtinIfElse>> with $151 $61<%158<{ body_1 }>> $153<%218<{ body_213 }>> ($53<%91<anonymous:$generated::needs>> is responsible)
  $155 = dup $2 by 1
  $156 = { body_232 capturing $2 }
  $157 = dup $136 by 1
  $158 = dup $156 by 1
  $159 = call $17<%94<builtinIfElse>> with $136 $61<%158<{ body_1 }>> $156 ($53<%91<anonymous:$generated::needs>> is responsible)
  $160 = trace: end of call
  $161 = dup $1 by 1
  $162 = { body_239 capturing $1 }
  $163 = %50<Core:result:map:18>
  $164 = %216<{ body_211 }>
  $165 = dup $0 by 1
  $166 = dup $162 by 1
  $167 = trace: tail call of $164<%216<{ body_211 }>> with $0 $162 ($163<%50<Core:result:map:18>> is responsible, code is at $163<%50<Core:result:map:18>>)
  $168 = dup $0 by 1
  $169 = dup $162 by 1
  $170 = call $164<%216<{ body_211 }>> with $0 $162 ($163<%50<Core:result:map:18>> is responsible)
  $171 = drop $162
  $172 = drop $159
  $173 = drop $156
  $174 = drop $154
  $175 = drop $151
  $176 = drop $148
  $177 = drop $146
  $178 = drop $136
  $179 = drop $128
  $180 = drop $125
  $181 = drop $122
  $182 = drop $119
  $183 = drop $117
  $184 = drop $111
  $185 = drop $109
  $186 = drop $107
  $187 = drop $105
  $188 = drop $101
  $189 = drop $99
  $190 = drop $97
  $191 = drop $95
  $192 = drop $93
  $193 = drop $90
  $194 = drop $82
  $195 = drop $80
  $196 = drop $76
  $197 = drop $68
  $198 = drop $65
  $199 = drop $63
  $200 = drop $59
  $201 = drop $56
  $202 = drop $54
  $203 = drop $43
  $204 = drop $39
  $205 = drop $37
  $206 = drop $35
  $207 = drop $31
  $208 = drop $29
  $209 = drop $27
  $210 = drop $24
  $211 = drop $21
  $212 = drop $16
  $213 = drop $14
  $214 = drop $10
  $215 = drop $1
  $216 = drop $0
  $217 = $170
body_241 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %88<Examples:fibonacci:recursive:0:0:3>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%88<Examples:fibonacci:recursive:0:0:3>> is at fault)
body_242 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:doesTagHaveValue:else
  # Captured IDs: none
  $1 = %132<"Tags can only be created with one value.">
  $2 = %88<Examples:fibonacci:recursive:0:0:3>
  $3 = panicking because $1<%132<"Tags can only be created with one value.">> ($2<%88<Examples:fibonacci:recursive:0:0:3>> is at fault)
body_243 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %88<Examples:fibonacci:recursive:0:0:3>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%88<Examples:fibonacci:recursive:0:0:3>> is at fault)
body_244 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %89<Examples:fibonacci:recursive:0:5>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%89<Examples:fibonacci:recursive:0:5>> is at fault)
body_245 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:doesTagHaveValue:else
  # Captured IDs: none
  $1 = %132<"Tags can only be created with one value.">
  $2 = %89<Examples:fibonacci:recursive:0:5>
  $3 = panicking because $1<%132<"Tags can only be created with one value.">> ($2<%89<Examples:fibonacci:recursive:0:5>> is at fault)
body_246 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %89<Examples:fibonacci:recursive:0:5>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%89<Examples:fibonacci:recursive:0:5>> is at fault)
body_247 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:calleeIsTag:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %88<Examples:fibonacci:recursive:0:0:3>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $6 = %94<builtinIfElse>
  $7 = dup $5 by 1
  $8 = %222<{ body_241 }>
  $9 = %223<{ body_242 }>
  $10 = call $6<%94<builtinIfElse>> with $5 $8<%222<{ body_241 }>> $9<%223<{ body_242 }>> ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $11 = drop $5
  $12 = $10
body_248 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %88<Examples:fibonacci:recursive:0:0:3>
  $4 = dup $0 by 1
  $5 = dup $0 by 1
  $6 = dup $1 by 1
  $7 = trace: tail call of $0 with $0 $1 ($3<%88<Examples:fibonacci:recursive:0:0:3>> is responsible, code is at $3<%88<Examples:fibonacci:recursive:0:0:3>>)
  $8 = dup $0 by 1
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = call $0 with $0 $1 ($3<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
body_249 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %88<Examples:fibonacci:recursive:0:0:3>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $10 = dup $9 by 1
  $11 = %130<" arguments with 2 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%130<" arguments with 2 arguments.">> ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_250 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %88<Examples:fibonacci:recursive:0:0:3>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %128<2>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%128<2>> ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_248 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_249 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_251 (responsible $3) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %88<Examples:fibonacci:recursive:0:0:3>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_250 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %224<{ body_243 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%224<{ body_243 }>> ($7<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_252 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0
  # Captured IDs: $0
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %88<Examples:fibonacci:recursive:0:0:3>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %123<Tag>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%123<Tag>> ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_247 capturing $0 }
  $13 = dup $0 by 1
  $14 = dup $1 by 1
  $15 = dup $6 by 1
  $16 = { body_251 capturing $0, $1, $6 }
  $17 = %94<builtinIfElse>
  $18 = dup $10 by 1
  $19 = dup $12 by 1
  $20 = dup $16 by 1
  $21 = call $17<%94<builtinIfElse>> with $10 $12 $16 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $22 = drop $16
  $23 = drop $12
  $24 = drop $10
  $25 = drop $6
  $26 = drop $1
  $27 = $21
body_253 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:calleeIsTag:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %89<Examples:fibonacci:recursive:0:5>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $6 = %94<builtinIfElse>
  $7 = dup $5 by 1
  $8 = %225<{ body_244 }>
  $9 = %226<{ body_245 }>
  $10 = call $6<%94<builtinIfElse>> with $5 $8<%225<{ body_244 }>> $9<%226<{ body_245 }>> ($4<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $11 = drop $5
  $12 = $10
body_254 (responsible $3) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1, $2
  $4 = %89<Examples:fibonacci:recursive:0:5>
  $5 = dup $0 by 1
  $6 = dup $2 by 1
  $7 = dup $1 by 1
  $8 = trace: tail call of $0 with $2 $1 ($4<%89<Examples:fibonacci:recursive:0:5>> is responsible, code is at $4<%89<Examples:fibonacci:recursive:0:5>>)
  $9 = dup $0 by 1
  $10 = dup $2 by 1
  $11 = dup $1 by 1
  $12 = call $0 with $2 $1 ($4<%89<Examples:fibonacci:recursive:0:5>> is responsible)
body_255 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %89<Examples:fibonacci:recursive:0:5>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $10 = dup $9 by 1
  $11 = %130<" arguments with 2 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%130<" arguments with 2 arguments.">> ($4<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%89<Examples:fibonacci:recursive:0:5>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_256 (responsible $3) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:calleeIsFunction:then
  # Captured IDs: $0, $1, $2
  $4 = %93<builtinGetArgumentCount>
  $5 = dup $0 by 1
  $6 = %89<Examples:fibonacci:recursive:0:5>
  $7 = call $4<%93<builtinGetArgumentCount>> with $0 ($6<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $8 = %92<builtinEquals>
  $9 = dup $7 by 1
  $10 = %128<2>
  $11 = call $8<%92<builtinEquals>> with $7 $10<%128<2>> ($6<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $12 = dup $0 by 1
  $13 = dup $1 by 1
  $14 = dup $2 by 1
  $15 = { body_254 capturing $0, $1, $2 }
  $16 = dup $7 by 1
  $17 = { body_255 capturing $7 }
  $18 = %94<builtinIfElse>
  $19 = dup $11 by 1
  $20 = dup $15 by 1
  $21 = dup $17 by 1
  $22 = call $18<%94<builtinIfElse>> with $11 $15 $17 ($6<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $23 = drop $17
  $24 = drop $15
  $25 = drop $11
  $26 = drop $7
  $27 = $22
body_257 (responsible $4) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:5:calleeIsTag:else
  # Captured IDs: $0, $1, $2, $3
  $5 = %92<builtinEquals>
  $6 = dup $3 by 1
  $7 = %113<Function>
  $8 = %89<Examples:fibonacci:recursive:0:5>
  $9 = call $5<%92<builtinEquals>> with $3 $7<%113<Function>> ($8<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $10 = dup $0 by 1
  $11 = dup $1 by 1
  $12 = dup $2 by 1
  $13 = { body_256 capturing $0, $1, $2 }
  $14 = %94<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $13 by 1
  $17 = %227<{ body_246 }>
  $18 = call $14<%94<builtinIfElse>> with $9 $13 $17<%227<{ body_246 }>> ($8<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $19 = drop $13
  $20 = drop $9
  $21 = $18
body_258 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Examples:fibonacci:recursive:0
  # Captured IDs: $0
  $4 = dup $1 by 1
  $5 = { body_252 capturing $1 }
  $6 = %109<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %89<Examples:fibonacci:recursive:0:5>
  $9 = call $6<%109<builtinTypeOf>> with $0 ($8<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $10 = %92<builtinEquals>
  $11 = dup $9 by 1
  $12 = %123<Tag>
  $13 = call $10<%92<builtinEquals>> with $9 $12<%123<Tag>> ($8<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $14 = dup $0 by 1
  $15 = { body_253 capturing $0 }
  $16 = dup $0 by 1
  $17 = dup $2 by 1
  $18 = dup $5 by 1
  $19 = dup $9 by 1
  $20 = { body_257 capturing $0, $2, $5, $9 }
  $21 = %94<builtinIfElse>
  $22 = dup $13 by 1
  $23 = dup $15 by 1
  $24 = dup $20 by 1
  $25 = call $21<%94<builtinIfElse>> with $13 $15 $20 ($8<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $26 = drop $20
  $27 = drop $15
  $28 = drop $13
  $29 = drop $9
  $30 = drop $5
  $31 = drop $2
  $32 = drop $1
  $33 = $25
body_259 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive
  # Captured IDs: none
  $3 = dup $1 by 1
  $4 = { body_258 capturing $1 }
  $5 = %90<Examples:fibonacci:recursive:5>
  $6 = dup $4 by 1
  $7 = dup $4 by 1
  $8 = dup $0 by 1
  $9 = trace: tail call of $4 with $4 $0 ($5<%90<Examples:fibonacci:recursive:5>> is responsible, code is at $5<%90<Examples:fibonacci:recursive:5>>)
  $10 = dup $4 by 1
  $11 = dup $4 by 1
  $12 = dup $0 by 1
  $13 = call $4 with $4 $0 ($5<%90<Examples:fibonacci:recursive:5>> is responsible)
  $14 = drop $4
  $15 = drop $1
  $16 = drop $0
  $17 = $13
body_260 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %139<"`a | typeIs Int` was not satisfied">
  $2 = %78<Examples:fibonacci:compareTo:8>
  $3 = panicking because $1<%139<"`a | typeIs Int` was not satisfied">> ($2<%78<Examples:fibonacci:compareTo:8>> is at fault)
body_261 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %140<"`b | typeIs Int` was not satisfied">
  $2 = %78<Examples:fibonacci:compareTo:8>
  $3 = panicking because $1<%140<"`b | typeIs Int` was not satisfied">> ($2<%78<Examples:fibonacci:compareTo:8>> is at fault)
body_262 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_263 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_264 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:compareTo
  # Captured IDs: none
  $3 = %78<Examples:fibonacci:compareTo:8>
  $4 = %180<{ body_49 }>
  $5 = dup $0 by 1
  $6 = dup $1 by 1
  $7 = trace: tail call of $4<%180<{ body_49 }>> with $0 $1 ($3<%78<Examples:fibonacci:compareTo:8>> is responsible, code is at $3<%78<Examples:fibonacci:compareTo:8>>)
  $8 = %109<builtinTypeOf>
  $9 = dup $0 by 1
  $10 = %32<Builtins::typeIs:19>
  $11 = call $8<%109<builtinTypeOf>> with $0 ($10<%32<Builtins::typeIs:19>> is responsible)
  $12 = %92<builtinEquals>
  $13 = dup $11 by 1
  $14 = %114<Int>
  $15 = %33<Builtins::typeIs:25>
  $16 = call $12<%92<builtinEquals>> with $11 $14<%114<Int>> ($15<%33<Builtins::typeIs:25>> is responsible)
  $17 = %17<Builtins::intCompareTo:5>
  $18 = %159<{ body_6 }>
  $19 = dup $16 by 1
  $20 = %139<"`a | typeIs Int` was not satisfied">
  $21 = trace: start of call of $18<%159<{ body_6 }>> with $16 $20<%139<"`a | typeIs Int` was not satisfied">> $3<%78<Examples:fibonacci:compareTo:8>> ($17<%17<Builtins::intCompareTo:5>> is responsible, code is at $17<%17<Builtins::intCompareTo:5>>)
  $22 = dup $16 by 1
  $23 = %125<True>
  $24 = %91<anonymous:$generated::needs>
  $25 = call $12<%92<builtinEquals>> with $16 $23<%125<True>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $26 = dup $16 by 1
  $27 = { body_262 capturing $16 }
  $28 = %94<builtinIfElse>
  $29 = dup $25 by 1
  $30 = %157<{ body_0 }>
  $31 = dup $27 by 1
  $32 = call $28<%94<builtinIfElse>> with $25 $30<%157<{ body_0 }>> $27 ($24<%91<anonymous:$generated::needs>> is responsible)
  $33 = dup $32 by 1
  $34 = %158<{ body_1 }>
  $35 = %178<{ body_43 }>
  $36 = call $28<%94<builtinIfElse>> with $32 $34<%158<{ body_1 }>> $35<%178<{ body_43 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $37 = dup $16 by 1
  $38 = %229<{ body_260 }>
  $39 = call $28<%94<builtinIfElse>> with $16 $34<%158<{ body_1 }>> $38<%229<{ body_260 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $40 = trace: end of call
  $41 = dup $1 by 1
  $42 = call $8<%109<builtinTypeOf>> with $1 ($10<%32<Builtins::typeIs:19>> is responsible)
  $43 = dup $42 by 1
  $44 = call $12<%92<builtinEquals>> with $42 $14<%114<Int>> ($15<%33<Builtins::typeIs:25>> is responsible)
  $45 = %15<Builtins::intCompareTo:11>
  $46 = dup $44 by 1
  $47 = %140<"`b | typeIs Int` was not satisfied">
  $48 = trace: start of call of $18<%159<{ body_6 }>> with $44 $47<%140<"`b | typeIs Int` was not satisfied">> $3<%78<Examples:fibonacci:compareTo:8>> ($45<%15<Builtins::intCompareTo:11>> is responsible, code is at $45<%15<Builtins::intCompareTo:11>>)
  $49 = dup $44 by 1
  $50 = call $12<%92<builtinEquals>> with $44 $23<%125<True>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $51 = dup $44 by 1
  $52 = { body_263 capturing $44 }
  $53 = dup $50 by 1
  $54 = dup $52 by 1
  $55 = call $28<%94<builtinIfElse>> with $50 $30<%157<{ body_0 }>> $52 ($24<%91<anonymous:$generated::needs>> is responsible)
  $56 = dup $55 by 1
  $57 = %179<{ body_44 }>
  $58 = call $28<%94<builtinIfElse>> with $55 $34<%158<{ body_1 }>> $57<%179<{ body_44 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $59 = dup $44 by 1
  $60 = %230<{ body_261 }>
  $61 = call $28<%94<builtinIfElse>> with $44 $34<%158<{ body_1 }>> $60<%230<{ body_261 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $62 = trace: end of call
  $63 = %96<builtinIntCompareTo>
  $64 = dup $0 by 1
  $65 = dup $1 by 1
  $66 = %16<Builtins::intCompareTo:18>
  $67 = call $63<%96<builtinIntCompareTo>> with $0 $1 ($66<%16<Builtins::intCompareTo:18>> is responsible)
  $68 = drop $61
  $69 = drop $58
  $70 = drop $55
  $71 = drop $52
  $72 = drop $50
  $73 = drop $44
  $74 = drop $42
  $75 = drop $39
  $76 = drop $36
  $77 = drop $32
  $78 = drop $27
  $79 = drop $25
  $80 = drop $16
  $81 = drop $11
  $82 = drop $1
  $83 = drop $0
  $84 = $67
body_265 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_266 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_267 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:isLessThan
  # Captured IDs: none
  $3 = %87<Examples:fibonacci:isLessThan:9>
  $4 = %231<{ body_264 }>
  $5 = dup $0 by 1
  $6 = dup $1 by 1
  $7 = trace: start of call of $4<%231<{ body_264 }>> with $0 $1 ($3<%87<Examples:fibonacci:isLessThan:9>> is responsible, code is at $3<%87<Examples:fibonacci:isLessThan:9>>)
  $8 = %78<Examples:fibonacci:compareTo:8>
  $9 = %180<{ body_49 }>
  $10 = dup $0 by 1
  $11 = dup $1 by 1
  $12 = trace: start of call of $9<%180<{ body_49 }>> with $0 $1 ($8<%78<Examples:fibonacci:compareTo:8>> is responsible, code is at $8<%78<Examples:fibonacci:compareTo:8>>)
  $13 = %109<builtinTypeOf>
  $14 = dup $0 by 1
  $15 = %32<Builtins::typeIs:19>
  $16 = call $13<%109<builtinTypeOf>> with $0 ($15<%32<Builtins::typeIs:19>> is responsible)
  $17 = %92<builtinEquals>
  $18 = dup $16 by 1
  $19 = %114<Int>
  $20 = %33<Builtins::typeIs:25>
  $21 = call $17<%92<builtinEquals>> with $16 $19<%114<Int>> ($20<%33<Builtins::typeIs:25>> is responsible)
  $22 = %17<Builtins::intCompareTo:5>
  $23 = %159<{ body_6 }>
  $24 = dup $21 by 1
  $25 = %139<"`a | typeIs Int` was not satisfied">
  $26 = trace: start of call of $23<%159<{ body_6 }>> with $21 $25<%139<"`a | typeIs Int` was not satisfied">> $8<%78<Examples:fibonacci:compareTo:8>> ($22<%17<Builtins::intCompareTo:5>> is responsible, code is at $22<%17<Builtins::intCompareTo:5>>)
  $27 = dup $21 by 1
  $28 = %125<True>
  $29 = %91<anonymous:$generated::needs>
  $30 = call $17<%92<builtinEquals>> with $21 $28<%125<True>> ($29<%91<anonymous:$generated::needs>> is responsible)
  $31 = dup $21 by 1
  $32 = { body_265 capturing $21 }
  $33 = %94<builtinIfElse>
  $34 = dup $30 by 1
  $35 = %157<{ body_0 }>
  $36 = dup $32 by 1
  $37 = call $33<%94<builtinIfElse>> with $30 $35<%157<{ body_0 }>> $32 ($29<%91<anonymous:$generated::needs>> is responsible)
  $38 = dup $37 by 1
  $39 = %158<{ body_1 }>
  $40 = %178<{ body_43 }>
  $41 = call $33<%94<builtinIfElse>> with $37 $39<%158<{ body_1 }>> $40<%178<{ body_43 }>> ($29<%91<anonymous:$generated::needs>> is responsible)
  $42 = dup $21 by 1
  $43 = %229<{ body_260 }>
  $44 = call $33<%94<builtinIfElse>> with $21 $39<%158<{ body_1 }>> $43<%229<{ body_260 }>> ($29<%91<anonymous:$generated::needs>> is responsible)
  $45 = trace: end of call
  $46 = dup $1 by 1
  $47 = call $13<%109<builtinTypeOf>> with $1 ($15<%32<Builtins::typeIs:19>> is responsible)
  $48 = dup $47 by 1
  $49 = call $17<%92<builtinEquals>> with $47 $19<%114<Int>> ($20<%33<Builtins::typeIs:25>> is responsible)
  $50 = %15<Builtins::intCompareTo:11>
  $51 = dup $49 by 1
  $52 = %140<"`b | typeIs Int` was not satisfied">
  $53 = trace: start of call of $23<%159<{ body_6 }>> with $49 $52<%140<"`b | typeIs Int` was not satisfied">> $8<%78<Examples:fibonacci:compareTo:8>> ($50<%15<Builtins::intCompareTo:11>> is responsible, code is at $50<%15<Builtins::intCompareTo:11>>)
  $54 = dup $49 by 1
  $55 = call $17<%92<builtinEquals>> with $49 $28<%125<True>> ($29<%91<anonymous:$generated::needs>> is responsible)
  $56 = dup $49 by 1
  $57 = { body_266 capturing $49 }
  $58 = dup $55 by 1
  $59 = dup $57 by 1
  $60 = call $33<%94<builtinIfElse>> with $55 $35<%157<{ body_0 }>> $57 ($29<%91<anonymous:$generated::needs>> is responsible)
  $61 = dup $60 by 1
  $62 = %179<{ body_44 }>
  $63 = call $33<%94<builtinIfElse>> with $60 $39<%158<{ body_1 }>> $62<%179<{ body_44 }>> ($29<%91<anonymous:$generated::needs>> is responsible)
  $64 = dup $49 by 1
  $65 = %230<{ body_261 }>
  $66 = call $33<%94<builtinIfElse>> with $49 $39<%158<{ body_1 }>> $65<%230<{ body_261 }>> ($29<%91<anonymous:$generated::needs>> is responsible)
  $67 = trace: end of call
  $68 = %96<builtinIntCompareTo>
  $69 = dup $0 by 1
  $70 = dup $1 by 1
  $71 = %16<Builtins::intCompareTo:18>
  $72 = call $68<%96<builtinIntCompareTo>> with $0 $1 ($71<%16<Builtins::intCompareTo:18>> is responsible)
  $73 = trace: end of call
  $74 = trace: end of call
  $75 = dup $72 by 1
  $76 = %115<Less>
  $77 = %0<Builtins::equals:6>
  $78 = call $17<%92<builtinEquals>> with $72 $76<%115<Less>> ($77<%0<Builtins::equals:6>> is responsible)
  $79 = drop $72
  $80 = drop $66
  $81 = drop $63
  $82 = drop $60
  $83 = drop $57
  $84 = drop $55
  $85 = drop $49
  $86 = drop $47
  $87 = drop $44
  $88 = drop $41
  $89 = drop $37
  $90 = drop $32
  $91 = drop $30
  $92 = drop $21
  $93 = drop $16
  $94 = drop $1
  $95 = drop $0
  $96 = $78
body_268 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %148<"`minuend | typeIs Int` was not satisfied">
  $2 = %83<Examples:fibonacci:fibonacci:2:11:9>
  $3 = panicking because $1<%148<"`minuend | typeIs Int` was not satisfied">> ($2<%83<Examples:fibonacci:fibonacci:2:11:9>> is at fault)
body_269 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%79<Examples:fibonacci:fibonacci:2:11:10>> is at fault)
body_270 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%79<Examples:fibonacci:fibonacci:2:11:10>> is at fault)
body_271 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %148<"`minuend | typeIs Int` was not satisfied">
  $2 = %80<Examples:fibonacci:fibonacci:2:11:26>
  $3 = panicking because $1<%148<"`minuend | typeIs Int` was not satisfied">> ($2<%80<Examples:fibonacci:fibonacci:2:11:26>> is at fault)
body_272 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%81<Examples:fibonacci:fibonacci:2:11:27>> is at fault)
body_273 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%81<Examples:fibonacci:fibonacci:2:11:27>> is at fault)
body_274 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %139<"`a | typeIs Int` was not satisfied">
  $2 = %82<Examples:fibonacci:fibonacci:2:11:28>
  $3 = panicking because $1<%139<"`a | typeIs Int` was not satisfied">> ($2<%82<Examples:fibonacci:fibonacci:2:11:28>> is at fault)
body_275 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %140<"`b | typeIs Int` was not satisfied">
  $2 = %82<Examples:fibonacci:fibonacci:2:11:28>
  $3 = panicking because $1<%140<"`b | typeIs Int` was not satisfied">> ($2<%82<Examples:fibonacci:fibonacci:2:11:28>> is at fault)
body_276 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %141<"`conditionIsBool` was not satisfied">
  $2 = %84<Examples:fibonacci:fibonacci:2:12>
  $3 = panicking because $1<%141<"`conditionIsBool` was not satisfied">> ($2<%84<Examples:fibonacci:fibonacci:2:12>> is at fault)
body_277 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_278 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:10
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_279 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_280 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = %105<builtinTagWithValue>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $7 = call $3<%105<builtinTagWithValue>> with $0 $1 ($6<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
body_281 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = %104<builtinTagHasValue>
  $4 = dup $0 by 1
  $5 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $6 = call $3<%104<builtinTagHasValue>> with $0 ($5<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = { body_280 capturing $0, $1 }
  $10 = %94<builtinIfElse>
  $11 = dup $6 by 1
  $12 = %234<{ body_269 }>
  $13 = dup $9 by 1
  $14 = call $10<%94<builtinIfElse>> with $6 $12<%234<{ body_269 }>> $9 ($5<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $15 = drop $9
  $16 = drop $6
  $17 = $14
body_282 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = trace: tail call of $0 with $1 ($3<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible, code is at $3<%79<Examples:fibonacci:fibonacci:2:11:10>>)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = call $0 with $1 ($3<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
body_283 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $10 = dup $9 by 1
  $11 = %129<" arguments with 1 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%129<" arguments with 1 arguments.">> ($4<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%79<Examples:fibonacci:fibonacci:2:11:10>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_284 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %127<1>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%127<1>> ($5<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_282 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_283 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_285 (responsible $3) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:10:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_284 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %235<{ body_270 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%235<{ body_270 }>> ($7<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_286 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = %105<builtinTagWithValue>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $7 = call $3<%105<builtinTagWithValue>> with $0 $1 ($6<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
body_287 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = %104<builtinTagHasValue>
  $4 = dup $0 by 1
  $5 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $6 = call $3<%104<builtinTagHasValue>> with $0 ($5<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = { body_286 capturing $0, $1 }
  $10 = %94<builtinIfElse>
  $11 = dup $6 by 1
  $12 = %237<{ body_272 }>
  $13 = dup $9 by 1
  $14 = call $10<%94<builtinIfElse>> with $6 $12<%237<{ body_272 }>> $9 ($5<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $15 = drop $9
  $16 = drop $6
  $17 = $14
body_288 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = trace: tail call of $0 with $1 ($3<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible, code is at $3<%81<Examples:fibonacci:fibonacci:2:11:27>>)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = call $0 with $1 ($3<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
body_289 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $10 = dup $9 by 1
  $11 = %129<" arguments with 1 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%129<" arguments with 1 arguments.">> ($4<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%81<Examples:fibonacci:fibonacci:2:11:27>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_290 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %127<1>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%127<1>> ($5<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_288 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_289 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_291 (responsible $3) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11:27:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_290 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %238<{ body_273 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%238<{ body_273 }>> ($7<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_292 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_293 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_294 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:11
  # Captured IDs: $0, $1
  $3 = %83<Examples:fibonacci:fibonacci:2:11:9>
  $4 = %185<{ body_60 }>
  $5 = dup $1 by 1
  $6 = %127<1>
  $7 = trace: start of call of $4<%185<{ body_60 }>> with $1 $6<%127<1>> ($3<%83<Examples:fibonacci:fibonacci:2:11:9>> is responsible, code is at $3<%83<Examples:fibonacci:fibonacci:2:11:9>>)
  $8 = %109<builtinTypeOf>
  $9 = dup $1 by 1
  $10 = %32<Builtins::typeIs:19>
  $11 = call $8<%109<builtinTypeOf>> with $1 ($10<%32<Builtins::typeIs:19>> is responsible)
  $12 = %92<builtinEquals>
  $13 = dup $11 by 1
  $14 = %114<Int>
  $15 = %33<Builtins::typeIs:25>
  $16 = call $12<%92<builtinEquals>> with $11 $14<%114<Int>> ($15<%33<Builtins::typeIs:25>> is responsible)
  $17 = %22<Builtins::intSubtract:5>
  $18 = %159<{ body_6 }>
  $19 = dup $16 by 1
  $20 = %148<"`minuend | typeIs Int` was not satisfied">
  $21 = trace: start of call of $18<%159<{ body_6 }>> with $16 $20<%148<"`minuend | typeIs Int` was not satisfied">> $3<%83<Examples:fibonacci:fibonacci:2:11:9>> ($17<%22<Builtins::intSubtract:5>> is responsible, code is at $17<%22<Builtins::intSubtract:5>>)
  $22 = dup $16 by 1
  $23 = %125<True>
  $24 = %91<anonymous:$generated::needs>
  $25 = call $12<%92<builtinEquals>> with $16 $23<%125<True>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $26 = dup $16 by 1
  $27 = { body_279 capturing $16 }
  $28 = %94<builtinIfElse>
  $29 = dup $25 by 1
  $30 = %157<{ body_0 }>
  $31 = dup $27 by 1
  $32 = call $28<%94<builtinIfElse>> with $25 $30<%157<{ body_0 }>> $27 ($24<%91<anonymous:$generated::needs>> is responsible)
  $33 = dup $32 by 1
  $34 = %158<{ body_1 }>
  $35 = %183<{ body_54 }>
  $36 = call $28<%94<builtinIfElse>> with $32 $34<%158<{ body_1 }>> $35<%183<{ body_54 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $37 = dup $16 by 1
  $38 = %233<{ body_268 }>
  $39 = call $28<%94<builtinIfElse>> with $16 $34<%158<{ body_1 }>> $38<%233<{ body_268 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $40 = trace: end of call
  $41 = %98<builtinIntSubtract>
  $42 = dup $1 by 1
  $43 = %21<Builtins::intSubtract:18>
  $44 = call $41<%98<builtinIntSubtract>> with $1 $6<%127<1>> ($43<%21<Builtins::intSubtract:18>> is responsible)
  $45 = trace: end of call
  $46 = dup $0 by 1
  $47 = %79<Examples:fibonacci:fibonacci:2:11:10>
  $48 = call $8<%109<builtinTypeOf>> with $0 ($47<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $49 = dup $48 by 1
  $50 = %123<Tag>
  $51 = call $12<%92<builtinEquals>> with $48 $50<%123<Tag>> ($47<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $52 = dup $0 by 1
  $53 = dup $44 by 1
  $54 = { body_281 capturing $0, $44 }
  $55 = dup $0 by 1
  $56 = dup $44 by 1
  $57 = dup $48 by 1
  $58 = { body_285 capturing $0, $44, $48 }
  $59 = dup $51 by 1
  $60 = dup $54 by 1
  $61 = dup $58 by 1
  $62 = call $28<%94<builtinIfElse>> with $51 $54 $58 ($47<%79<Examples:fibonacci:fibonacci:2:11:10>> is responsible)
  $63 = %80<Examples:fibonacci:fibonacci:2:11:26>
  $64 = dup $1 by 1
  $65 = %128<2>
  $66 = trace: start of call of $4<%185<{ body_60 }>> with $1 $65<%128<2>> ($63<%80<Examples:fibonacci:fibonacci:2:11:26>> is responsible, code is at $63<%80<Examples:fibonacci:fibonacci:2:11:26>>)
  $67 = dup $16 by 1
  $68 = trace: start of call of $18<%159<{ body_6 }>> with $16 $20<%148<"`minuend | typeIs Int` was not satisfied">> $63<%80<Examples:fibonacci:fibonacci:2:11:26>> ($17<%22<Builtins::intSubtract:5>> is responsible, code is at $17<%22<Builtins::intSubtract:5>>)
  $69 = dup $25 by 1
  $70 = dup $27 by 1
  $71 = call $28<%94<builtinIfElse>> with $25 $30<%157<{ body_0 }>> $27 ($24<%91<anonymous:$generated::needs>> is responsible)
  $72 = dup $71 by 1
  $73 = call $28<%94<builtinIfElse>> with $71 $34<%158<{ body_1 }>> $35<%183<{ body_54 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $74 = dup $16 by 1
  $75 = %236<{ body_271 }>
  $76 = call $28<%94<builtinIfElse>> with $16 $34<%158<{ body_1 }>> $75<%236<{ body_271 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $77 = trace: end of call
  $78 = dup $1 by 1
  $79 = call $41<%98<builtinIntSubtract>> with $1 $65<%128<2>> ($43<%21<Builtins::intSubtract:18>> is responsible)
  $80 = trace: end of call
  $81 = dup $0 by 1
  $82 = %81<Examples:fibonacci:fibonacci:2:11:27>
  $83 = call $8<%109<builtinTypeOf>> with $0 ($82<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $84 = dup $83 by 1
  $85 = call $12<%92<builtinEquals>> with $83 $50<%123<Tag>> ($82<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $86 = dup $0 by 1
  $87 = dup $79 by 1
  $88 = { body_287 capturing $0, $79 }
  $89 = dup $0 by 1
  $90 = dup $79 by 1
  $91 = dup $83 by 1
  $92 = { body_291 capturing $0, $79, $83 }
  $93 = dup $85 by 1
  $94 = dup $88 by 1
  $95 = dup $92 by 1
  $96 = call $28<%94<builtinIfElse>> with $85 $88 $92 ($82<%81<Examples:fibonacci:fibonacci:2:11:27>> is responsible)
  $97 = %82<Examples:fibonacci:fibonacci:2:11:28>
  $98 = %177<{ body_42 }>
  $99 = dup $62 by 1
  $100 = dup $96 by 1
  $101 = trace: tail call of $98<%177<{ body_42 }>> with $62 $96 ($97<%82<Examples:fibonacci:fibonacci:2:11:28>> is responsible, code is at $97<%82<Examples:fibonacci:fibonacci:2:11:28>>)
  $102 = dup $62 by 1
  $103 = call $8<%109<builtinTypeOf>> with $62 ($10<%32<Builtins::typeIs:19>> is responsible)
  $104 = dup $103 by 1
  $105 = call $12<%92<builtinEquals>> with $103 $14<%114<Int>> ($15<%33<Builtins::typeIs:25>> is responsible)
  $106 = %14<Builtins::intAdd:5>
  $107 = dup $105 by 1
  $108 = %139<"`a | typeIs Int` was not satisfied">
  $109 = trace: start of call of $18<%159<{ body_6 }>> with $105 $108<%139<"`a | typeIs Int` was not satisfied">> $97<%82<Examples:fibonacci:fibonacci:2:11:28>> ($106<%14<Builtins::intAdd:5>> is responsible, code is at $106<%14<Builtins::intAdd:5>>)
  $110 = dup $105 by 1
  $111 = call $12<%92<builtinEquals>> with $105 $23<%125<True>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $112 = dup $105 by 1
  $113 = { body_292 capturing $105 }
  $114 = dup $111 by 1
  $115 = dup $113 by 1
  $116 = call $28<%94<builtinIfElse>> with $111 $30<%157<{ body_0 }>> $113 ($24<%91<anonymous:$generated::needs>> is responsible)
  $117 = dup $116 by 1
  $118 = %175<{ body_36 }>
  $119 = call $28<%94<builtinIfElse>> with $116 $34<%158<{ body_1 }>> $118<%175<{ body_36 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $120 = dup $105 by 1
  $121 = %239<{ body_274 }>
  $122 = call $28<%94<builtinIfElse>> with $105 $34<%158<{ body_1 }>> $121<%239<{ body_274 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $123 = trace: end of call
  $124 = dup $96 by 1
  $125 = call $8<%109<builtinTypeOf>> with $96 ($10<%32<Builtins::typeIs:19>> is responsible)
  $126 = dup $125 by 1
  $127 = call $12<%92<builtinEquals>> with $125 $14<%114<Int>> ($15<%33<Builtins::typeIs:25>> is responsible)
  $128 = %12<Builtins::intAdd:11>
  $129 = dup $127 by 1
  $130 = %140<"`b | typeIs Int` was not satisfied">
  $131 = trace: start of call of $18<%159<{ body_6 }>> with $127 $130<%140<"`b | typeIs Int` was not satisfied">> $97<%82<Examples:fibonacci:fibonacci:2:11:28>> ($128<%12<Builtins::intAdd:11>> is responsible, code is at $128<%12<Builtins::intAdd:11>>)
  $132 = dup $127 by 1
  $133 = call $12<%92<builtinEquals>> with $127 $23<%125<True>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $134 = dup $127 by 1
  $135 = { body_293 capturing $127 }
  $136 = dup $133 by 1
  $137 = dup $135 by 1
  $138 = call $28<%94<builtinIfElse>> with $133 $30<%157<{ body_0 }>> $135 ($24<%91<anonymous:$generated::needs>> is responsible)
  $139 = dup $138 by 1
  $140 = %176<{ body_37 }>
  $141 = call $28<%94<builtinIfElse>> with $138 $34<%158<{ body_1 }>> $140<%176<{ body_37 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $142 = dup $127 by 1
  $143 = %240<{ body_275 }>
  $144 = call $28<%94<builtinIfElse>> with $127 $34<%158<{ body_1 }>> $143<%240<{ body_275 }>> ($24<%91<anonymous:$generated::needs>> is responsible)
  $145 = trace: end of call
  $146 = %95<builtinIntAdd>
  $147 = dup $62 by 1
  $148 = dup $96 by 1
  $149 = %13<Builtins::intAdd:18>
  $150 = call $146<%95<builtinIntAdd>> with $62 $96 ($149<%13<Builtins::intAdd:18>> is responsible)
  $151 = drop $144
  $152 = drop $141
  $153 = drop $138
  $154 = drop $135
  $155 = drop $133
  $156 = drop $127
  $157 = drop $125
  $158 = drop $122
  $159 = drop $119
  $160 = drop $116
  $161 = drop $113
  $162 = drop $111
  $163 = drop $105
  $164 = drop $103
  $165 = drop $96
  $166 = drop $92
  $167 = drop $88
  $168 = drop $85
  $169 = drop $83
  $170 = drop $79
  $171 = drop $76
  $172 = drop $73
  $173 = drop $71
  $174 = drop $62
  $175 = drop $58
  $176 = drop $54
  $177 = drop $51
  $178 = drop $48
  $179 = drop $44
  $180 = drop $39
  $181 = drop $36
  $182 = drop $32
  $183 = drop $27
  $184 = drop $25
  $185 = drop $16
  $186 = drop $11
  $187 = $150
body_295 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_296 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = %112<False>
  $4 = dup $0 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%92<builtinEquals>> with $3<%112<False>> $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %94<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %162<{ body_7 }>
  $10 = %163<{ body_8 }>
  $11 = call $7<%94<builtinIfElse>> with $6 $9<%162<{ body_7 }>> $10<%163<{ body_8 }>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_297 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_298 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2
  # Captured IDs: none
  $3 = %85<Examples:fibonacci:fibonacci:2:9>
  $4 = %232<{ body_267 }>
  $5 = dup $1 by 1
  $6 = %128<2>
  $7 = trace: start of call of $4<%232<{ body_267 }>> with $1 $6<%128<2>> ($3<%85<Examples:fibonacci:fibonacci:2:9>> is responsible, code is at $3<%85<Examples:fibonacci:fibonacci:2:9>>)
  $8 = %87<Examples:fibonacci:isLessThan:9>
  $9 = %231<{ body_264 }>
  $10 = dup $1 by 1
  $11 = trace: start of call of $9<%231<{ body_264 }>> with $1 $6<%128<2>> ($8<%87<Examples:fibonacci:isLessThan:9>> is responsible, code is at $8<%87<Examples:fibonacci:isLessThan:9>>)
  $12 = %78<Examples:fibonacci:compareTo:8>
  $13 = %180<{ body_49 }>
  $14 = dup $1 by 1
  $15 = trace: start of call of $13<%180<{ body_49 }>> with $1 $6<%128<2>> ($12<%78<Examples:fibonacci:compareTo:8>> is responsible, code is at $12<%78<Examples:fibonacci:compareTo:8>>)
  $16 = %109<builtinTypeOf>
  $17 = dup $1 by 1
  $18 = %32<Builtins::typeIs:19>
  $19 = call $16<%109<builtinTypeOf>> with $1 ($18<%32<Builtins::typeIs:19>> is responsible)
  $20 = %92<builtinEquals>
  $21 = dup $19 by 1
  $22 = %114<Int>
  $23 = %33<Builtins::typeIs:25>
  $24 = call $20<%92<builtinEquals>> with $19 $22<%114<Int>> ($23<%33<Builtins::typeIs:25>> is responsible)
  $25 = %17<Builtins::intCompareTo:5>
  $26 = %159<{ body_6 }>
  $27 = dup $24 by 1
  $28 = %139<"`a | typeIs Int` was not satisfied">
  $29 = trace: start of call of $26<%159<{ body_6 }>> with $24 $28<%139<"`a | typeIs Int` was not satisfied">> $12<%78<Examples:fibonacci:compareTo:8>> ($25<%17<Builtins::intCompareTo:5>> is responsible, code is at $25<%17<Builtins::intCompareTo:5>>)
  $30 = dup $24 by 1
  $31 = %125<True>
  $32 = %91<anonymous:$generated::needs>
  $33 = call $20<%92<builtinEquals>> with $24 $31<%125<True>> ($32<%91<anonymous:$generated::needs>> is responsible)
  $34 = dup $24 by 1
  $35 = { body_277 capturing $24 }
  $36 = %94<builtinIfElse>
  $37 = dup $33 by 1
  $38 = %157<{ body_0 }>
  $39 = dup $35 by 1
  $40 = call $36<%94<builtinIfElse>> with $33 $38<%157<{ body_0 }>> $35 ($32<%91<anonymous:$generated::needs>> is responsible)
  $41 = dup $40 by 1
  $42 = %158<{ body_1 }>
  $43 = %178<{ body_43 }>
  $44 = call $36<%94<builtinIfElse>> with $40 $42<%158<{ body_1 }>> $43<%178<{ body_43 }>> ($32<%91<anonymous:$generated::needs>> is responsible)
  $45 = dup $24 by 1
  $46 = %229<{ body_260 }>
  $47 = call $36<%94<builtinIfElse>> with $24 $42<%158<{ body_1 }>> $46<%229<{ body_260 }>> ($32<%91<anonymous:$generated::needs>> is responsible)
  $48 = trace: end of call
  $49 = %96<builtinIntCompareTo>
  $50 = dup $1 by 1
  $51 = %16<Builtins::intCompareTo:18>
  $52 = call $49<%96<builtinIntCompareTo>> with $1 $6<%128<2>> ($51<%16<Builtins::intCompareTo:18>> is responsible)
  $53 = trace: end of call
  $54 = trace: end of call
  $55 = dup $52 by 1
  $56 = %115<Less>
  $57 = %0<Builtins::equals:6>
  $58 = call $20<%92<builtinEquals>> with $52 $56<%115<Less>> ($57<%0<Builtins::equals:6>> is responsible)
  $59 = trace: end of call
  $60 = dup $1 by 1
  $61 = { body_278 capturing $1 }
  $62 = dup $0 by 1
  $63 = dup $1 by 1
  $64 = { body_294 capturing $0, $1 }
  $65 = %84<Examples:fibonacci:fibonacci:2:12>
  $66 = %174<{ body_35 }>
  $67 = dup $58 by 1
  $68 = dup $61 by 1
  $69 = dup $64 by 1
  $70 = trace: start of call of $66<%174<{ body_35 }>> with $58 $61 $64 ($65<%84<Examples:fibonacci:fibonacci:2:12>> is responsible, code is at $65<%84<Examples:fibonacci:fibonacci:2:12>>)
  $71 = dup $58 by 1
  $72 = %3<Builtins::ifElse:1>
  $73 = call $20<%92<builtinEquals>> with $31<%125<True>> $58 ($72<%3<Builtins::ifElse:1>> is responsible)
  $74 = dup $73 by 1
  $75 = %162<{ body_7 }>
  $76 = %163<{ body_8 }>
  $77 = call $36<%94<builtinIfElse>> with $73 $75<%162<{ body_7 }>> $76<%163<{ body_8 }>> ($72<%3<Builtins::ifElse:1>> is responsible)
  $78 = %106<builtinTagWithoutValue>
  $79 = dup $77 by 1
  $80 = call $78<%106<builtinTagWithoutValue>> with $77 ($72<%3<Builtins::ifElse:1>> is responsible)
  $81 = dup $80 by 1
  $82 = %117<Match>
  $83 = call $20<%92<builtinEquals>> with $80 $82<%117<Match>> ($72<%3<Builtins::ifElse:1>> is responsible)
  $84 = dup $77 by 1
  $85 = { body_295 capturing $77 }
  $86 = dup $58 by 1
  $87 = { body_296 capturing $58 }
  $88 = dup $83 by 1
  $89 = dup $85 by 1
  $90 = dup $87 by 1
  $91 = call $36<%94<builtinIfElse>> with $83 $85 $87 ($72<%3<Builtins::ifElse:1>> is responsible)
  $92 = dup $91 by 1
  $93 = call $78<%106<builtinTagWithoutValue>> with $91 ($72<%3<Builtins::ifElse:1>> is responsible)
  $94 = dup $93 by 1
  $95 = call $20<%92<builtinEquals>> with $93 $82<%117<Match>> ($72<%3<Builtins::ifElse:1>> is responsible)
  $96 = dup $95 by 1
  $97 = %164<{ body_9 }>
  $98 = call $36<%94<builtinIfElse>> with $95 $38<%157<{ body_0 }>> $97<%164<{ body_9 }>> ($72<%3<Builtins::ifElse:1>> is responsible)
  $99 = %11<Builtins::ifElse:5>
  $100 = dup $98 by 1
  $101 = %141<"`conditionIsBool` was not satisfied">
  $102 = trace: start of call of $26<%159<{ body_6 }>> with $98 $101<%141<"`conditionIsBool` was not satisfied">> $65<%84<Examples:fibonacci:fibonacci:2:12>> ($99<%11<Builtins::ifElse:5>> is responsible, code is at $99<%11<Builtins::ifElse:5>>)
  $103 = dup $98 by 1
  $104 = call $20<%92<builtinEquals>> with $98 $31<%125<True>> ($32<%91<anonymous:$generated::needs>> is responsible)
  $105 = dup $98 by 1
  $106 = { body_297 capturing $98 }
  $107 = dup $104 by 1
  $108 = dup $106 by 1
  $109 = call $36<%94<builtinIfElse>> with $104 $38<%157<{ body_0 }>> $106 ($32<%91<anonymous:$generated::needs>> is responsible)
  $110 = dup $109 by 1
  $111 = %167<{ body_14 }>
  $112 = call $36<%94<builtinIfElse>> with $109 $42<%158<{ body_1 }>> $111<%167<{ body_14 }>> ($32<%91<anonymous:$generated::needs>> is responsible)
  $113 = dup $98 by 1
  $114 = %241<{ body_276 }>
  $115 = call $36<%94<builtinIfElse>> with $98 $42<%158<{ body_1 }>> $114<%241<{ body_276 }>> ($32<%91<anonymous:$generated::needs>> is responsible)
  $116 = trace: end of call
  $117 = %10<Builtins::ifElse:41>
  $118 = dup $58 by 1
  $119 = dup $61 by 1
  $120 = dup $64 by 1
  $121 = trace: start of call of $36<%94<builtinIfElse>> with $58 $61 $64 ($117<%10<Builtins::ifElse:41>> is responsible, code is at $117<%10<Builtins::ifElse:41>>)
  $122 = dup $58 by 1
  $123 = dup $61 by 1
  $124 = dup $64 by 1
  $125 = call $36<%94<builtinIfElse>> with $58 $61 $64 ($117<%10<Builtins::ifElse:41>> is responsible)
  $126 = trace: end of call
  $127 = trace: end of call
  $128 = dup $125 by 1
  $129 = $125
  $130 = drop $125
  $131 = drop $115
  $132 = drop $112
  $133 = drop $109
  $134 = drop $106
  $135 = drop $104
  $136 = drop $98
  $137 = drop $95
  $138 = drop $93
  $139 = drop $91
  $140 = drop $87
  $141 = drop $85
  $142 = drop $83
  $143 = drop $80
  $144 = drop $77
  $145 = drop $73
  $146 = drop $64
  $147 = drop $61
  $148 = drop $58
  $149 = drop $52
  $150 = drop $47
  $151 = drop $44
  $152 = drop $40
  $153 = drop $35
  $154 = drop $33
  $155 = drop $24
  $156 = drop $19
  $157 = drop $1
  $158 = drop $0
  $159 = $129
body_299 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:calleeIsTag:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %88<Examples:fibonacci:recursive:0:0:3>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $6 = %94<builtinIfElse>
  $7 = dup $5 by 1
  $8 = %222<{ body_241 }>
  $9 = %223<{ body_242 }>
  $10 = call $6<%94<builtinIfElse>> with $5 $8<%222<{ body_241 }>> $9<%223<{ body_242 }>> ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $11 = drop $5
  $12 = $10
body_300 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %88<Examples:fibonacci:recursive:0:0:3>
  $4 = dup $0 by 1
  $5 = dup $0 by 1
  $6 = dup $1 by 1
  $7 = trace: tail call of $0 with $0 $1 ($3<%88<Examples:fibonacci:recursive:0:0:3>> is responsible, code is at $3<%88<Examples:fibonacci:recursive:0:0:3>>)
  $8 = dup $0 by 1
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = call $0 with $0 $1 ($3<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
body_301 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %88<Examples:fibonacci:recursive:0:0:3>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $10 = dup $9 by 1
  $11 = %130<" arguments with 2 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%130<" arguments with 2 arguments.">> ($4<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%88<Examples:fibonacci:recursive:0:0:3>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_302 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $0 by 1
  $5 = %88<Examples:fibonacci:recursive:0:0:3>
  $6 = call $3<%93<builtinGetArgumentCount>> with $0 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %128<2>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%128<2>> ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_300 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_301 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_303 (responsible $3) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0:3:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %88<Examples:fibonacci:recursive:0:0:3>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_302 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %224<{ body_243 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%224<{ body_243 }>> ($7<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_304 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0
  # Captured IDs: $0
  $3 = %109<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %88<Examples:fibonacci:recursive:0:0:3>
  $6 = call $3<%109<builtinTypeOf>> with $0 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %123<Tag>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%123<Tag>> ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_299 capturing $0 }
  $13 = dup $0 by 1
  $14 = dup $1 by 1
  $15 = dup $6 by 1
  $16 = { body_303 capturing $0, $1, $6 }
  $17 = %94<builtinIfElse>
  $18 = dup $10 by 1
  $19 = dup $12 by 1
  $20 = dup $16 by 1
  $21 = call $17<%94<builtinIfElse>> with $10 $12 $16 ($5<%88<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $22 = drop $16
  $23 = drop $12
  $24 = drop $10
  $25 = drop $6
  $26 = drop $1
  $27 = $21
body_305 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0
  # Captured IDs: none
  $3 = dup $0 by 1
  $4 = { body_304 capturing $0 }
  $5 = %89<Examples:fibonacci:recursive:0:5>
  $6 = %242<{ body_298 }>
  $7 = dup $4 by 1
  $8 = dup $1 by 1
  $9 = trace: tail call of $6<%242<{ body_298 }>> with $4 $1 ($5<%89<Examples:fibonacci:recursive:0:5>> is responsible, code is at $5<%89<Examples:fibonacci:recursive:0:5>>)
  $10 = dup $4 by 1
  $11 = dup $1 by 1
  $12 = call $6<%242<{ body_298 }>> with $4 $1 ($5<%89<Examples:fibonacci:recursive:0:5>> is responsible)
  $13 = drop $4
  $14 = drop $1
  $15 = drop $0
  $16 = $12
body_306 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:fibonacci:fibonacci
  # Captured IDs: none
  $2 = %86<Examples:fibonacci:fibonacci:3>
  $3 = %228<{ body_259 }>
  $4 = dup $0 by 1
  $5 = %242<{ body_298 }>
  $6 = trace: start of call of $3<%228<{ body_259 }>> with $0 $5<%242<{ body_298 }>> ($2<%86<Examples:fibonacci:fibonacci:3>> is responsible, code is at $2<%86<Examples:fibonacci:fibonacci:3>>)
  $7 = %90<Examples:fibonacci:recursive:5>
  $8 = %243<{ body_305 }>
  $9 = dup $0 by 1
  $10 = trace: start of call of $8<%243<{ body_305 }>> with $8<%243<{ body_305 }>> $0 ($7<%90<Examples:fibonacci:recursive:5>> is responsible, code is at $7<%90<Examples:fibonacci:recursive:5>>)
  $11 = dup $0 by 1
  $12 = call $8<%243<{ body_305 }>> with $8<%243<{ body_305 }>> $0 ($7<%90<Examples:fibonacci:recursive:5>> is responsible)
  $13 = trace: end of call
  $14 = trace: end of call
  $15 = dup $12 by 1
  $16 = $12
  $17 = drop $12
  $18 = drop $0
  $19 = $16
body_307 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %149<"`struct | typeIs Struct` was not satisfied">
  $2 = %71<Examples:fibonacci:23:5>
  $3 = panicking because $1<%149<"`struct | typeIs Struct` was not satisfied">> ($2<%71<Examples:fibonacci:23:5>> is at fault)
body_308 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %150<"`struct | ✨.structHasKey key` was not satisfied">
  $2 = %71<Examples:fibonacci:23:5>
  $3 = panicking because $1<%150<"`struct | ✨.structHasKey key` was not satisfied">> ($2<%71<Examples:fibonacci:23:5>> is at fault)
body_309 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %154<"`text | typeIs Text` was not satisfied">
  $2 = %76<Examples:fibonacci:23:6:7>
  $3 = panicking because $1<%154<"`text | typeIs Text` was not satisfied">> ($2<%76<Examples:fibonacci:23:6:7>> is at fault)
body_310 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:fibonacci:23:6:14
  # Captured IDs: none
  $2 = %73<Examples:fibonacci:23:6:14:2>
  $3 = %244<{ body_306 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%244<{ body_306 }>> with $0 ($2<%73<Examples:fibonacci:23:6:14:2>> is responsible, code is at $2<%73<Examples:fibonacci:23:6:14:2>>)
  $6 = %86<Examples:fibonacci:fibonacci:3>
  $7 = %228<{ body_259 }>
  $8 = dup $0 by 1
  $9 = %242<{ body_298 }>
  $10 = trace: start of call of $7<%228<{ body_259 }>> with $0 $9<%242<{ body_298 }>> ($6<%86<Examples:fibonacci:fibonacci:3>> is responsible, code is at $6<%86<Examples:fibonacci:fibonacci:3>>)
  $11 = %90<Examples:fibonacci:recursive:5>
  $12 = %243<{ body_305 }>
  $13 = dup $0 by 1
  $14 = trace: start of call of $12<%243<{ body_305 }>> with $12<%243<{ body_305 }>> $0 ($11<%90<Examples:fibonacci:recursive:5>> is responsible, code is at $11<%90<Examples:fibonacci:recursive:5>>)
  $15 = dup $0 by 1
  $16 = call $12<%243<{ body_305 }>> with $12<%243<{ body_305 }>> $0 ($11<%90<Examples:fibonacci:recursive:5>> is responsible)
  $17 = trace: end of call
  $18 = trace: end of call
  $19 = trace: end of call
  $20 = %108<builtinToDebugText>
  $21 = dup $16 by 1
  $22 = %31<Builtins::toDebugText:5>
  $23 = call $20<%108<builtinToDebugText>> with $16 ($22<%31<Builtins::toDebugText:5>> is responsible)
  $24 = drop $16
  $25 = drop $0
  $26 = $23
body_311 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %147<"`is result` was not satisfied">
  $2 = %75<Examples:fibonacci:23:6:22>
  $3 = panicking because $1<%147<"`is result` was not satisfied">> ($2<%75<Examples:fibonacci:23:6:22>> is at fault)
body_312 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:23:6:case-0:didNotMatch
  # Captured IDs: none
  $1 = %135<"Usage: `cargo run -- run fibonacci.candy -- <number>`">
body_313 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %149<"`struct | typeIs Struct` was not satisfied">
  $2 = %69<Examples:fibonacci:23:12>
  $3 = panicking because $1<%149<"`struct | typeIs Struct` was not satisfied">> ($2<%69<Examples:fibonacci:23:12>> is at fault)
body_314 (responsible $0) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: none
  $1 = %150<"`struct | ✨.structHasKey key` was not satisfied">
  $2 = %69<Examples:fibonacci:23:12>
  $3 = panicking because $1<%150<"`struct | ✨.structHasKey key` was not satisfied">> ($2<%69<Examples:fibonacci:23:12>> is at fault)
body_315 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:23:13:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %137<"You called a tag that already has a value.">
  $2 = %70<Examples:fibonacci:23:13>
  $3 = panicking because $1<%137<"You called a tag that already has a value.">> ($2<%70<Examples:fibonacci:23:13>> is at fault)
body_316 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:23:13:calleeIsFunction:else
  # Captured IDs: none
  $1 = %138<"You can only call tags or functions.">
  $2 = %70<Examples:fibonacci:23:13>
  $3 = panicking because $1<%138<"You can only call tags or functions.">> ($2<%70<Examples:fibonacci:23:13>> is at fault)
body_317 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_318 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_319 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:23:6:equals:then
  # Captured IDs: $0
  $2 = %99<builtinListGet>
  $3 = dup $0 by 1
  $4 = %126<0>
  $5 = %72<Examples:fibonacci:23:6>
  $6 = call $2<%99<builtinListGet>> with $0 $4<%126<0>> ($5<%72<Examples:fibonacci:23:6>> is responsible)
  $7 = dup $6 by 1
  $8 = ($6,)
  $9 = dup $8 by 1
  $10 = Match $8
  $11 = drop $8
  $12 = drop $6
  $13 = $10
body_320 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:23:6:equals:then
  # Captured IDs: $0
  $2 = %100<builtinListLength>
  $3 = dup $0 by 1
  $4 = %72<Examples:fibonacci:23:6>
  $5 = call $2<%100<builtinListLength>> with $0 ($4<%72<Examples:fibonacci:23:6>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %127<1>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%127<1>> $5 ($4<%72<Examples:fibonacci:23:6>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_319 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%72<Examples:fibonacci:23:6>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_321 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_322 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_323 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_322 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_324 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %120<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%120<Ok>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_323 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_325 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_326 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_327 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %104<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%104<builtinTagHasValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %125<True>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%125<True>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_326 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_328 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %106<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%106<builtinTagWithoutValue>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %111<Error>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%111<Error>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_327 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_329 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %109<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %46<Core:result:is:1>
  $5 = call $2<%109<builtinTypeOf>> with $0 ($4<%46<Core:result:is:1>> is responsible)
  $6 = %92<builtinEquals>
  $7 = %123<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%92<builtinEquals>> with $7<%123<Tag>> $5 ($4<%46<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_328 capturing $0 }
  $12 = %94<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %163<{ body_8 }>
  $16 = call $12<%94<builtinIfElse>> with $9 $11 $15<%163<{ body_8 }>> ($4<%46<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_330 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_331 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_332 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_333 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:23:6:case-0:matched
  # Captured IDs: $0
  $2 = %103<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %77<Examples:fibonacci:23:6:n>
  $5 = call $2<%103<builtinTagGetValue>> with $0 ($4<%77<Examples:fibonacci:23:6:n>> is responsible)
  $6 = %99<builtinListGet>
  $7 = dup $5 by 1
  $8 = %126<0>
  $9 = call $6<%99<builtinListGet>> with $5 $8<%126<0>> ($4<%77<Examples:fibonacci:23:6:n>> is responsible)
  $10 = %76<Examples:fibonacci:23:6:7>
  $11 = %182<{ body_53 }>
  $12 = dup $9 by 1
  $13 = trace: start of call of $11<%182<{ body_53 }>> with $9 ($10<%76<Examples:fibonacci:23:6:7>> is responsible, code is at $10<%76<Examples:fibonacci:23:6:7>>)
  $14 = %109<builtinTypeOf>
  $15 = dup $9 by 1
  $16 = %32<Builtins::typeIs:19>
  $17 = call $14<%109<builtinTypeOf>> with $9 ($16<%32<Builtins::typeIs:19>> is responsible)
  $18 = %92<builtinEquals>
  $19 = dup $17 by 1
  $20 = %124<Text>
  $21 = %33<Builtins::typeIs:25>
  $22 = call $18<%92<builtinEquals>> with $17 $20<%124<Text>> ($21<%33<Builtins::typeIs:25>> is responsible)
  $23 = %19<Builtins::intParse:5>
  $24 = %159<{ body_6 }>
  $25 = dup $22 by 1
  $26 = %154<"`text | typeIs Text` was not satisfied">
  $27 = trace: start of call of $24<%159<{ body_6 }>> with $22 $26<%154<"`text | typeIs Text` was not satisfied">> $10<%76<Examples:fibonacci:23:6:7>> ($23<%19<Builtins::intParse:5>> is responsible, code is at $23<%19<Builtins::intParse:5>>)
  $28 = dup $22 by 1
  $29 = %125<True>
  $30 = %91<anonymous:$generated::needs>
  $31 = call $18<%92<builtinEquals>> with $22 $29<%125<True>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $32 = dup $22 by 1
  $33 = { body_321 capturing $22 }
  $34 = %94<builtinIfElse>
  $35 = dup $31 by 1
  $36 = %157<{ body_0 }>
  $37 = dup $33 by 1
  $38 = call $34<%94<builtinIfElse>> with $31 $36<%157<{ body_0 }>> $33 ($30<%91<anonymous:$generated::needs>> is responsible)
  $39 = dup $38 by 1
  $40 = %158<{ body_1 }>
  $41 = %181<{ body_50 }>
  $42 = call $34<%94<builtinIfElse>> with $38 $40<%158<{ body_1 }>> $41<%181<{ body_50 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $43 = dup $22 by 1
  $44 = %247<{ body_309 }>
  $45 = call $34<%94<builtinIfElse>> with $22 $40<%158<{ body_1 }>> $44<%247<{ body_309 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $46 = trace: end of call
  $47 = %97<builtinIntParse>
  $48 = dup $9 by 1
  $49 = %18<Builtins::intParse:11>
  $50 = call $47<%97<builtinIntParse>> with $9 ($49<%18<Builtins::intParse:11>> is responsible)
  $51 = trace: end of call
  $52 = %74<Examples:fibonacci:23:6:15>
  $53 = %221<{ body_240 }>
  $54 = dup $50 by 1
  $55 = %248<{ body_310 }>
  $56 = trace: start of call of $53<%221<{ body_240 }>> with $50 $55<%248<{ body_310 }>> ($52<%74<Examples:fibonacci:23:6:15>> is responsible, code is at $52<%74<Examples:fibonacci:23:6:15>>)
  $57 = dup $50 by 1
  $58 = call $53<%221<{ body_240 }>> with $50 $55<%248<{ body_310 }>> ($52<%74<Examples:fibonacci:23:6:15>> is responsible)
  $59 = trace: end of call
  $60 = %75<Examples:fibonacci:23:6:22>
  $61 = %208<{ body_161 }>
  $62 = dup $58 by 1
  $63 = trace: start of call of $61<%208<{ body_161 }>> with $58 ($60<%75<Examples:fibonacci:23:6:22>> is responsible, code is at $60<%75<Examples:fibonacci:23:6:22>>)
  $64 = %44<Core:result:getValue:2>
  $65 = %195<{ body_91 }>
  $66 = dup $58 by 1
  $67 = trace: start of call of $65<%195<{ body_91 }>> with $58 ($64<%44<Core:result:getValue:2>> is responsible, code is at $64<%44<Core:result:getValue:2>>)
  $68 = dup $58 by 1
  $69 = %46<Core:result:is:1>
  $70 = call $14<%109<builtinTypeOf>> with $58 ($69<%46<Core:result:is:1>> is responsible)
  $71 = %123<Tag>
  $72 = dup $70 by 1
  $73 = call $18<%92<builtinEquals>> with $71<%123<Tag>> $70 ($69<%46<Core:result:is:1>> is responsible)
  $74 = dup $58 by 1
  $75 = { body_324 capturing $58 }
  $76 = dup $73 by 1
  $77 = dup $75 by 1
  $78 = %163<{ body_8 }>
  $79 = call $34<%94<builtinIfElse>> with $73 $75 $78<%163<{ body_8 }>> ($69<%46<Core:result:is:1>> is responsible)
  $80 = %106<builtinTagWithoutValue>
  $81 = dup $79 by 1
  $82 = call $80<%106<builtinTagWithoutValue>> with $79 ($69<%46<Core:result:is:1>> is responsible)
  $83 = dup $82 by 1
  $84 = %117<Match>
  $85 = call $18<%92<builtinEquals>> with $82 $84<%117<Match>> ($69<%46<Core:result:is:1>> is responsible)
  $86 = dup $79 by 1
  $87 = { body_325 capturing $79 }
  $88 = dup $58 by 1
  $89 = { body_329 capturing $58 }
  $90 = dup $85 by 1
  $91 = dup $87 by 1
  $92 = dup $89 by 1
  $93 = call $34<%94<builtinIfElse>> with $85 $87 $89 ($69<%46<Core:result:is:1>> is responsible)
  $94 = dup $93 by 1
  $95 = call $80<%106<builtinTagWithoutValue>> with $93 ($69<%46<Core:result:is:1>> is responsible)
  $96 = dup $95 by 1
  $97 = call $18<%92<builtinEquals>> with $95 $84<%117<Match>> ($69<%46<Core:result:is:1>> is responsible)
  $98 = dup $97 by 1
  $99 = %164<{ body_9 }>
  $100 = call $34<%94<builtinIfElse>> with $97 $36<%157<{ body_0 }>> $99<%164<{ body_9 }>> ($69<%46<Core:result:is:1>> is responsible)
  $101 = trace: end of call
  $102 = %45<Core:result:getValue:4>
  $103 = dup $100 by 1
  $104 = %147<"`is result` was not satisfied">
  $105 = trace: start of call of $24<%159<{ body_6 }>> with $100 $104<%147<"`is result` was not satisfied">> $60<%75<Examples:fibonacci:23:6:22>> ($102<%45<Core:result:getValue:4>> is responsible, code is at $102<%45<Core:result:getValue:4>>)
  $106 = dup $100 by 1
  $107 = call $18<%92<builtinEquals>> with $100 $29<%125<True>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $108 = dup $100 by 1
  $109 = { body_330 capturing $100 }
  $110 = dup $107 by 1
  $111 = dup $109 by 1
  $112 = call $34<%94<builtinIfElse>> with $107 $36<%157<{ body_0 }>> $109 ($30<%91<anonymous:$generated::needs>> is responsible)
  $113 = dup $112 by 1
  $114 = %205<{ body_146 }>
  $115 = call $34<%94<builtinIfElse>> with $112 $40<%158<{ body_1 }>> $114<%205<{ body_146 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $116 = dup $100 by 1
  $117 = %249<{ body_311 }>
  $118 = call $34<%94<builtinIfElse>> with $100 $40<%158<{ body_1 }>> $117<%249<{ body_311 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $119 = trace: end of call
  $120 = %43<Core:result:getValue:12>
  $121 = %191<{ body_74 }>
  $122 = dup $58 by 1
  $123 = trace: start of call of $121<%191<{ body_74 }>> with $58 ($120<%43<Core:result:getValue:12>> is responsible, code is at $120<%43<Core:result:getValue:12>>)
  $124 = dup $58 by 1
  $125 = call $14<%109<builtinTypeOf>> with $58 ($16<%32<Builtins::typeIs:19>> is responsible)
  $126 = dup $125 by 1
  $127 = call $18<%92<builtinEquals>> with $125 $71<%123<Tag>> ($21<%33<Builtins::typeIs:25>> is responsible)
  $128 = %30<Builtins::tagGetValue:5>
  $129 = dup $127 by 1
  $130 = %152<"`tag | typeIs Tag` was not satisfied">
  $131 = trace: start of call of $24<%159<{ body_6 }>> with $127 $130<%152<"`tag | typeIs Tag` was not satisfied">> $120<%43<Core:result:getValue:12>> ($128<%30<Builtins::tagGetValue:5>> is responsible, code is at $128<%30<Builtins::tagGetValue:5>>)
  $132 = dup $127 by 1
  $133 = call $18<%92<builtinEquals>> with $127 $29<%125<True>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $134 = dup $127 by 1
  $135 = { body_331 capturing $127 }
  $136 = dup $133 by 1
  $137 = dup $135 by 1
  $138 = call $34<%94<builtinIfElse>> with $133 $36<%157<{ body_0 }>> $135 ($30<%91<anonymous:$generated::needs>> is responsible)
  $139 = dup $138 by 1
  $140 = %189<{ body_68 }>
  $141 = call $34<%94<builtinIfElse>> with $138 $40<%158<{ body_1 }>> $140<%189<{ body_68 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $142 = dup $127 by 1
  $143 = %206<{ body_147 }>
  $144 = call $34<%94<builtinIfElse>> with $127 $40<%158<{ body_1 }>> $143<%206<{ body_147 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $145 = trace: end of call
  $146 = %104<builtinTagHasValue>
  $147 = dup $58 by 1
  $148 = %27<Builtins::tagGetValue:11>
  $149 = call $146<%104<builtinTagHasValue>> with $58 ($148<%27<Builtins::tagGetValue:11>> is responsible)
  $150 = %28<Builtins::tagGetValue:13>
  $151 = dup $149 by 1
  $152 = %153<"`tag | ✨.tagHasValue` was not satisfied">
  $153 = trace: start of call of $24<%159<{ body_6 }>> with $149 $152<%153<"`tag | ✨.tagHasValue` was not satisfied">> $120<%43<Core:result:getValue:12>> ($150<%28<Builtins::tagGetValue:13>> is responsible, code is at $150<%28<Builtins::tagGetValue:13>>)
  $154 = dup $149 by 1
  $155 = call $18<%92<builtinEquals>> with $149 $29<%125<True>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $156 = dup $149 by 1
  $157 = { body_332 capturing $149 }
  $158 = dup $155 by 1
  $159 = dup $157 by 1
  $160 = call $34<%94<builtinIfElse>> with $155 $36<%157<{ body_0 }>> $157 ($30<%91<anonymous:$generated::needs>> is responsible)
  $161 = dup $160 by 1
  $162 = %190<{ body_69 }>
  $163 = call $34<%94<builtinIfElse>> with $160 $40<%158<{ body_1 }>> $162<%190<{ body_69 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $164 = dup $149 by 1
  $165 = %207<{ body_148 }>
  $166 = call $34<%94<builtinIfElse>> with $149 $40<%158<{ body_1 }>> $165<%207<{ body_148 }>> ($30<%91<anonymous:$generated::needs>> is responsible)
  $167 = trace: end of call
  $168 = dup $58 by 1
  $169 = %29<Builtins::tagGetValue:19>
  $170 = call $2<%103<builtinTagGetValue>> with $58 ($169<%29<Builtins::tagGetValue:19>> is responsible)
  $171 = trace: end of call
  $172 = trace: end of call
  $173 = dup $170 by 1
  $174 = $170
  $175 = drop $170
  $176 = drop $166
  $177 = drop $163
  $178 = drop $160
  $179 = drop $157
  $180 = drop $155
  $181 = drop $149
  $182 = drop $144
  $183 = drop $141
  $184 = drop $138
  $185 = drop $135
  $186 = drop $133
  $187 = drop $127
  $188 = drop $125
  $189 = drop $118
  $190 = drop $115
  $191 = drop $112
  $192 = drop $109
  $193 = drop $107
  $194 = drop $100
  $195 = drop $97
  $196 = drop $95
  $197 = drop $93
  $198 = drop $89
  $199 = drop $87
  $200 = drop $85
  $201 = drop $82
  $202 = drop $79
  $203 = drop $75
  $204 = drop $73
  $205 = drop $70
  $206 = drop $58
  $207 = drop $50
  $208 = drop $45
  $209 = drop $42
  $210 = drop $38
  $211 = drop $33
  $212 = drop $31
  $213 = drop $22
  $214 = drop $17
  $215 = drop $9
  $216 = drop $5
  $217 = $174
body_334 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %92<builtinEquals>
  $3 = dup $0 by 1
  $4 = %112<False>
  $5 = %91<anonymous:$generated::needs>
  $6 = call $2<%92<builtinEquals>> with $0 $4<%112<False>> ($5<%91<anonymous:$generated::needs>> is responsible)
body_335 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:23:13:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = %105<builtinTagWithValue>
  $4 = dup $1 by 1
  $5 = dup $0 by 1
  $6 = %70<Examples:fibonacci:23:13>
  $7 = call $3<%105<builtinTagWithValue>> with $1 $0 ($6<%70<Examples:fibonacci:23:13>> is responsible)
body_336 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:23:13:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = %104<builtinTagHasValue>
  $4 = dup $1 by 1
  $5 = %70<Examples:fibonacci:23:13>
  $6 = call $3<%104<builtinTagHasValue>> with $1 ($5<%70<Examples:fibonacci:23:13>> is responsible)
  $7 = dup $0 by 1
  $8 = dup $1 by 1
  $9 = { body_335 capturing $0, $1 }
  $10 = %94<builtinIfElse>
  $11 = dup $6 by 1
  $12 = %253<{ body_315 }>
  $13 = dup $9 by 1
  $14 = call $10<%94<builtinIfElse>> with $6 $12<%253<{ body_315 }>> $9 ($5<%70<Examples:fibonacci:23:13>> is responsible)
  $15 = drop $9
  $16 = drop $6
  $17 = $14
body_337 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:23:13:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = %70<Examples:fibonacci:23:13>
  $4 = dup $1 by 1
  $5 = dup $0 by 1
  $6 = trace: tail call of $1 with $0 ($3<%70<Examples:fibonacci:23:13>> is responsible, code is at $3<%70<Examples:fibonacci:23:13>>)
  $7 = dup $1 by 1
  $8 = dup $0 by 1
  $9 = call $1 with $0 ($3<%70<Examples:fibonacci:23:13>> is responsible)
body_338 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:23:13:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = %108<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %70<Examples:fibonacci:23:13>
  $5 = call $2<%108<builtinToDebugText>> with $0 ($4<%70<Examples:fibonacci:23:13>> is responsible)
  $6 = %107<builtinTextConcatenate>
  $7 = %136<"You called a function that expects ">
  $8 = dup $5 by 1
  $9 = call $6<%107<builtinTextConcatenate>> with $7<%136<"You called a function that expects ">> $5 ($4<%70<Examples:fibonacci:23:13>> is responsible)
  $10 = dup $9 by 1
  $11 = %129<" arguments with 1 arguments.">
  $12 = call $6<%107<builtinTextConcatenate>> with $9 $11<%129<" arguments with 1 arguments.">> ($4<%70<Examples:fibonacci:23:13>> is responsible)
  $13 = dup $12 by 1
  $14 = panicking because $12 ($4<%70<Examples:fibonacci:23:13>> is at fault)
  $15 = drop $12
  $16 = drop $9
  $17 = drop $5
  $18 = $14
body_339 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:23:13:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = %93<builtinGetArgumentCount>
  $4 = dup $1 by 1
  $5 = %70<Examples:fibonacci:23:13>
  $6 = call $3<%93<builtinGetArgumentCount>> with $1 ($5<%70<Examples:fibonacci:23:13>> is responsible)
  $7 = %92<builtinEquals>
  $8 = dup $6 by 1
  $9 = %127<1>
  $10 = call $7<%92<builtinEquals>> with $6 $9<%127<1>> ($5<%70<Examples:fibonacci:23:13>> is responsible)
  $11 = dup $0 by 1
  $12 = dup $1 by 1
  $13 = { body_337 capturing $0, $1 }
  $14 = dup $6 by 1
  $15 = { body_338 capturing $6 }
  $16 = %94<builtinIfElse>
  $17 = dup $10 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%94<builtinIfElse>> with $10 $13 $15 ($5<%70<Examples:fibonacci:23:13>> is responsible)
  $21 = drop $15
  $22 = drop $13
  $23 = drop $10
  $24 = drop $6
  $25 = $20
body_340 (responsible $3) =
  # Original HIR IDs: Examples:fibonacci:23:13:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = %92<builtinEquals>
  $5 = dup $2 by 1
  $6 = %113<Function>
  $7 = %70<Examples:fibonacci:23:13>
  $8 = call $4<%92<builtinEquals>> with $2 $6<%113<Function>> ($7<%70<Examples:fibonacci:23:13>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_339 capturing $0, $1 }
  $12 = %94<builtinIfElse>
  $13 = dup $8 by 1
  $14 = dup $11 by 1
  $15 = %254<{ body_316 }>
  $16 = call $12<%94<builtinIfElse>> with $8 $11 $15<%254<{ body_316 }>> ($7<%70<Examples:fibonacci:23:13>> is responsible)
  $17 = drop $11
  $18 = drop $8
  $19 = $16
body_341 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:fibonacci:23
  # Captured IDs: none
  $2 = %71<Examples:fibonacci:23:5>
  $3 = %188<{ body_67 }>
  $4 = dup $0 by 1
  $5 = %110<Arguments>
  $6 = trace: start of call of $3<%188<{ body_67 }>> with $0 $5<%110<Arguments>> ($2<%71<Examples:fibonacci:23:5>> is responsible, code is at $2<%71<Examples:fibonacci:23:5>>)
  $7 = %109<builtinTypeOf>
  $8 = dup $0 by 1
  $9 = %32<Builtins::typeIs:19>
  $10 = call $7<%109<builtinTypeOf>> with $0 ($9<%32<Builtins::typeIs:19>> is responsible)
  $11 = %92<builtinEquals>
  $12 = dup $10 by 1
  $13 = %122<Struct>
  $14 = %33<Builtins::typeIs:25>
  $15 = call $11<%92<builtinEquals>> with $10 $13<%122<Struct>> ($14<%33<Builtins::typeIs:25>> is responsible)
  $16 = %26<Builtins::structGet:5>
  $17 = %159<{ body_6 }>
  $18 = dup $15 by 1
  $19 = %149<"`struct | typeIs Struct` was not satisfied">
  $20 = trace: start of call of $17<%159<{ body_6 }>> with $15 $19<%149<"`struct | typeIs Struct` was not satisfied">> $2<%71<Examples:fibonacci:23:5>> ($16<%26<Builtins::structGet:5>> is responsible, code is at $16<%26<Builtins::structGet:5>>)
  $21 = dup $15 by 1
  $22 = %125<True>
  $23 = %91<anonymous:$generated::needs>
  $24 = call $11<%92<builtinEquals>> with $15 $22<%125<True>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $25 = dup $15 by 1
  $26 = { body_317 capturing $15 }
  $27 = %94<builtinIfElse>
  $28 = dup $24 by 1
  $29 = %157<{ body_0 }>
  $30 = dup $26 by 1
  $31 = call $27<%94<builtinIfElse>> with $24 $29<%157<{ body_0 }>> $26 ($23<%91<anonymous:$generated::needs>> is responsible)
  $32 = dup $31 by 1
  $33 = %158<{ body_1 }>
  $34 = %186<{ body_61 }>
  $35 = call $27<%94<builtinIfElse>> with $31 $33<%158<{ body_1 }>> $34<%186<{ body_61 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $36 = dup $15 by 1
  $37 = %245<{ body_307 }>
  $38 = call $27<%94<builtinIfElse>> with $15 $33<%158<{ body_1 }>> $37<%245<{ body_307 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $39 = trace: end of call
  $40 = %102<builtinStructHasKey>
  $41 = dup $0 by 1
  $42 = %23<Builtins::structGet:12>
  $43 = call $40<%102<builtinStructHasKey>> with $0 $5<%110<Arguments>> ($42<%23<Builtins::structGet:12>> is responsible)
  $44 = %24<Builtins::structGet:14>
  $45 = dup $43 by 1
  $46 = %150<"`struct | ✨.structHasKey key` was not satisfied">
  $47 = trace: start of call of $17<%159<{ body_6 }>> with $43 $46<%150<"`struct | ✨.structHasKey key` was not satisfied">> $2<%71<Examples:fibonacci:23:5>> ($44<%24<Builtins::structGet:14>> is responsible, code is at $44<%24<Builtins::structGet:14>>)
  $48 = dup $43 by 1
  $49 = call $11<%92<builtinEquals>> with $43 $22<%125<True>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $50 = dup $43 by 1
  $51 = { body_318 capturing $43 }
  $52 = dup $49 by 1
  $53 = dup $51 by 1
  $54 = call $27<%94<builtinIfElse>> with $49 $29<%157<{ body_0 }>> $51 ($23<%91<anonymous:$generated::needs>> is responsible)
  $55 = dup $54 by 1
  $56 = %187<{ body_62 }>
  $57 = call $27<%94<builtinIfElse>> with $54 $33<%158<{ body_1 }>> $56<%187<{ body_62 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $58 = dup $43 by 1
  $59 = %246<{ body_308 }>
  $60 = call $27<%94<builtinIfElse>> with $43 $33<%158<{ body_1 }>> $59<%246<{ body_308 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $61 = trace: end of call
  $62 = %101<builtinStructGet>
  $63 = dup $0 by 1
  $64 = %25<Builtins::structGet:21>
  $65 = call $62<%101<builtinStructGet>> with $0 $5<%110<Arguments>> ($64<%25<Builtins::structGet:21>> is responsible)
  $66 = trace: end of call
  $67 = dup $65 by 1
  $68 = %72<Examples:fibonacci:23:6>
  $69 = call $7<%109<builtinTypeOf>> with $65 ($68<%72<Examples:fibonacci:23:6>> is responsible)
  $70 = %116<List>
  $71 = dup $69 by 1
  $72 = call $11<%92<builtinEquals>> with $70<%116<List>> $69 ($68<%72<Examples:fibonacci:23:6>> is responsible)
  $73 = dup $65 by 1
  $74 = { body_320 capturing $65 }
  $75 = dup $72 by 1
  $76 = dup $74 by 1
  $77 = %163<{ body_8 }>
  $78 = call $27<%94<builtinIfElse>> with $72 $74 $77<%163<{ body_8 }>> ($68<%72<Examples:fibonacci:23:6>> is responsible)
  $79 = %106<builtinTagWithoutValue>
  $80 = dup $78 by 1
  $81 = call $79<%106<builtinTagWithoutValue>> with $78 ($68<%72<Examples:fibonacci:23:6>> is responsible)
  $82 = dup $81 by 1
  $83 = %117<Match>
  $84 = call $11<%92<builtinEquals>> with $81 $83<%117<Match>> ($68<%72<Examples:fibonacci:23:6>> is responsible)
  $85 = dup $78 by 1
  $86 = { body_333 capturing $78 }
  $87 = dup $84 by 1
  $88 = dup $86 by 1
  $89 = %250<{ body_312 }>
  $90 = call $27<%94<builtinIfElse>> with $84 $86 $89<%250<{ body_312 }>> ($68<%72<Examples:fibonacci:23:6>> is responsible)
  $91 = %69<Examples:fibonacci:23:12>
  $92 = dup $0 by 1
  $93 = %121<Stdout>
  $94 = trace: start of call of $3<%188<{ body_67 }>> with $0 $93<%121<Stdout>> ($91<%69<Examples:fibonacci:23:12>> is responsible, code is at $91<%69<Examples:fibonacci:23:12>>)
  $95 = dup $15 by 1
  $96 = trace: start of call of $17<%159<{ body_6 }>> with $15 $19<%149<"`struct | typeIs Struct` was not satisfied">> $91<%69<Examples:fibonacci:23:12>> ($16<%26<Builtins::structGet:5>> is responsible, code is at $16<%26<Builtins::structGet:5>>)
  $97 = dup $24 by 1
  $98 = dup $26 by 1
  $99 = call $27<%94<builtinIfElse>> with $24 $29<%157<{ body_0 }>> $26 ($23<%91<anonymous:$generated::needs>> is responsible)
  $100 = dup $99 by 1
  $101 = call $27<%94<builtinIfElse>> with $99 $33<%158<{ body_1 }>> $34<%186<{ body_61 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $102 = dup $15 by 1
  $103 = %251<{ body_313 }>
  $104 = call $27<%94<builtinIfElse>> with $15 $33<%158<{ body_1 }>> $103<%251<{ body_313 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $105 = trace: end of call
  $106 = dup $0 by 1
  $107 = call $40<%102<builtinStructHasKey>> with $0 $93<%121<Stdout>> ($42<%23<Builtins::structGet:12>> is responsible)
  $108 = dup $107 by 1
  $109 = trace: start of call of $17<%159<{ body_6 }>> with $107 $46<%150<"`struct | ✨.structHasKey key` was not satisfied">> $91<%69<Examples:fibonacci:23:12>> ($44<%24<Builtins::structGet:14>> is responsible, code is at $44<%24<Builtins::structGet:14>>)
  $110 = dup $107 by 1
  $111 = call $11<%92<builtinEquals>> with $107 $22<%125<True>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $112 = dup $107 by 1
  $113 = { body_334 capturing $107 }
  $114 = dup $111 by 1
  $115 = dup $113 by 1
  $116 = call $27<%94<builtinIfElse>> with $111 $29<%157<{ body_0 }>> $113 ($23<%91<anonymous:$generated::needs>> is responsible)
  $117 = dup $116 by 1
  $118 = call $27<%94<builtinIfElse>> with $116 $33<%158<{ body_1 }>> $56<%187<{ body_62 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $119 = dup $107 by 1
  $120 = %252<{ body_314 }>
  $121 = call $27<%94<builtinIfElse>> with $107 $33<%158<{ body_1 }>> $120<%252<{ body_314 }>> ($23<%91<anonymous:$generated::needs>> is responsible)
  $122 = trace: end of call
  $123 = dup $0 by 1
  $124 = call $62<%101<builtinStructGet>> with $0 $93<%121<Stdout>> ($64<%25<Builtins::structGet:21>> is responsible)
  $125 = trace: end of call
  $126 = dup $124 by 1
  $127 = %70<Examples:fibonacci:23:13>
  $128 = call $7<%109<builtinTypeOf>> with $124 ($127<%70<Examples:fibonacci:23:13>> is responsible)
  $129 = dup $128 by 1
  $130 = %123<Tag>
  $131 = call $11<%92<builtinEquals>> with $128 $130<%123<Tag>> ($127<%70<Examples:fibonacci:23:13>> is responsible)
  $132 = dup $90 by 1
  $133 = dup $124 by 1
  $134 = { body_336 capturing $90, $124 }
  $135 = dup $90 by 1
  $136 = dup $124 by 1
  $137 = dup $128 by 1
  $138 = { body_340 capturing $90, $124, $128 }
  $139 = dup $131 by 1
  $140 = dup $134 by 1
  $141 = dup $138 by 1
  $142 = call $27<%94<builtinIfElse>> with $131 $134 $138 ($127<%70<Examples:fibonacci:23:13>> is responsible)
  $143 = drop $138
  $144 = drop $134
  $145 = drop $131
  $146 = drop $128
  $147 = drop $124
  $148 = drop $121
  $149 = drop $118
  $150 = drop $116
  $151 = drop $113
  $152 = drop $111
  $153 = drop $107
  $154 = drop $104
  $155 = drop $101
  $156 = drop $99
  $157 = drop $90
  $158 = drop $86
  $159 = drop $84
  $160 = drop $81
  $161 = drop $78
  $162 = drop $74
  $163 = drop $72
  $164 = drop $69
  $165 = drop $65
  $166 = drop $60
  $167 = drop $57
  $168 = drop $54
  $169 = drop $51
  $170 = drop $49
  $171 = drop $43
  $172 = drop $38
  $173 = drop $35
  $174 = drop $31
  $175 = drop $26
  $176 = drop $24
  $177 = drop $15
  $178 = drop $10
  $179 = drop $0
  $180 = $142
body_342 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:
  # Captured IDs: none
  $1 = %255<{ body_341 }>
