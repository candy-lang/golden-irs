# LIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::equals:6
%1 = Builtins::getArgumentCount:11
%2 = Builtins::getArgumentCount:5
%3 = Builtins::ifElse:1
%4 = Builtins::ifElse:11
%5 = Builtins::ifElse:14
%6 = Builtins::ifElse:19
%7 = Builtins::ifElse:25
%8 = Builtins::ifElse:28
%9 = Builtins::ifElse:33
%10 = Builtins::ifElse:41
%11 = Builtins::ifElse:5
%12 = Builtins::intAdd:11
%13 = Builtins::intAdd:18
%14 = Builtins::intAdd:5
%15 = Builtins::intCompareTo:11
%16 = Builtins::intCompareTo:18
%17 = Builtins::intCompareTo:5
%18 = Builtins::intParse:11
%19 = Builtins::intParse:5
%20 = Builtins::intSubtract:18
%21 = Builtins::intSubtract:5
%22 = Builtins::structGet:12
%23 = Builtins::structGet:14
%24 = Builtins::structGet:21
%25 = Builtins::structGet:5
%26 = Builtins::tagGetValue:11
%27 = Builtins::tagGetValue:13
%28 = Builtins::tagGetValue:19
%29 = Builtins::tagGetValue:5
%30 = Builtins::toDebugText:5
%31 = Builtins::typeIs:19
%32 = Builtins::typeIs:25
%33 = Builtins::typeOf:5
%34 = Core:function:is1:11:3
%35 = Core:function:is1:13
%36 = Core:result:flatMap:14
%37 = Core:result:flatMap:16
%38 = Core:result:flatMap:19:2
%39 = Core:result:flatMap:2
%40 = Core:result:flatMap:21
%41 = Core:result:flatMap:4
%42 = Core:result:getValue:14
%43 = Core:result:getValue:2
%44 = Core:result:getValue:4
%45 = Core:result:is:1
%46 = Core:result:is:1:_
%47 = Core:result:map:14
%48 = Core:result:map:16
%49 = Core:result:map:19:3
%50 = Core:result:map:2
%51 = Core:result:map:20
%52 = Core:result:map:4
%53 = Core:result:mapOr:14
%54 = Core:result:mapOr:16
%55 = Core:result:mapOr:2
%56 = Core:result:mapOr:21
%57 = Core:result:mapOr:4
%58 = Core:result:mapOrElse:14
%59 = Core:result:mapOrElse:16
%60 = Core:result:mapOrElse:2
%61 = Core:result:mapOrElse:26
%62 = Core:result:mapOrElse:28
%63 = Core:result:mapOrElse:30
%64 = Core:result:mapOrElse:30:2
%65 = Core:result:mapOrElse:30:5
%66 = Core:result:mapOrElse:30:value
%67 = Core:result:mapOrElse:30:value#1
%68 = Core:result:mapOrElse:4
%69 = Examples:fibonacci:21:16
%70 = Examples:fibonacci:21:17
%71 = Examples:fibonacci:21:7
%72 = Examples:fibonacci:21:8
%73 = Examples:fibonacci:21:8:19
%74 = Examples:fibonacci:21:8:28
%75 = Examples:fibonacci:21:8:9
%76 = Examples:fibonacci:21:8:n
%77 = Examples:fibonacci:compareTo:10
%78 = Examples:fibonacci:fibonacci:2:11
%79 = Examples:fibonacci:fibonacci:2:13:11
%80 = Examples:fibonacci:fibonacci:2:13:12
%81 = Examples:fibonacci:fibonacci:2:13:32
%82 = Examples:fibonacci:fibonacci:2:13:33
%83 = Examples:fibonacci:fibonacci:2:13:34
%84 = Examples:fibonacci:fibonacci:2:14
%85 = Examples:fibonacci:recursive:0:0:3
%86 = Examples:fibonacci:recursive:0:5
%87 = Examples:fibonacci:recursive:5
%88 = anonymous:$generated::needs
%89 = builtinEquals
%90 = builtinGetArgumentCount
%91 = builtinIfElse
%92 = builtinIntAdd
%93 = builtinIntCompareTo
%94 = builtinIntParse
%95 = builtinIntSubtract
%96 = builtinListGet
%97 = builtinListLength
%98 = builtinStructGet
%99 = builtinStructHasKey
%100 = builtinTagGetValue
%101 = builtinTagHasValue
%102 = builtinTagWithoutValue
%103 = builtinTextConcatenate
%104 = builtinToDebugText
%105 = builtinTypeOf
%106 = Arguments
%107 = Error
%108 = False
%109 = Function
%110 = Int
%111 = Less
%112 = List
%113 = Match
%114 = NoMatch
%115 = Nothing
%116 = Ok
%117 = Stdout
%118 = Struct
%119 = Tag
%120 = Text
%121 = True
%122 = 0
%123 = 1
%124 = 2
%125 = "."
%126 = "Expected 1 item, got "
%127 = "Expected Error, got "
%128 = "Expected False, got "
%129 = "Expected Ok, got "
%130 = "Expected True, got "
%131 = "Expected a List, got `"
%132 = "Expected a Tag, got `"
%133 = "Expected tag to have a value, but it doesn't have any."
%134 = "Expected tag to not have a value, but it has one: `"
%135 = "No case matched the given expression."
%136 = "The `condition` must be either `True` or `False`."
%137 = "The `reason` must be a text."
%138 = "Usage: `cargo run -- run fibonacci.candy -- <number>`"
%139 = "`."
%140 = "`a | typeIs Int` was not satisfied"
%141 = "`b | typeIs Int` was not satisfied"
%142 = "`conditionIsBool` was not satisfied"
%143 = "`else | getArgumentCount | equals 0` was not satisfied"
%144 = "`else | typeIs Function` was not satisfied"
%145 = "`function | typeIs Function` was not satisfied"
%146 = "`function.is1 errorMapper` was not satisfied"
%147 = "`function.is1 okMapper` was not satisfied"
%148 = "`is result` was not satisfied"
%149 = "`minuend | typeIs Int` was not satisfied"
%150 = "`struct | typeIs Struct` was not satisfied"
%151 = "`struct | ✨.structHasKey key` was not satisfied"
%152 = "`tag | typeIs Tag` was not satisfied"
%153 = "`tag | ✨.tagHasValue` was not satisfied"
%154 = "`text | typeIs Text` was not satisfied"
%155 = "`then | getArgumentCount | equals 0` was not satisfied"
%156 = "`then | typeIs Function` was not satisfied"
%157 = { body_0 }
%158 = { body_1 }
%159 = { body_6 }
%160 = (%113<Match>,)
%161 = { body_7 }
%162 = { body_8 }
%163 = { body_22 }
%164 = (%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)
%165 = { body_24 }
%166 = { body_41 }
%167 = { body_58 }
%168 = { body_61 }
%169 = { body_63 }
%170 = { body_64 }
%171 = { body_65 }
%172 = { body_68 }
%173 = { body_70 }
%174 = { body_71 }
%175 = { body_78 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %121<True>
body_1 (responsible $0) =
  # Original HIR IDs: Core::19:isMatch:then, Core::30:isMatch:then, Core::41:isMatch:then, Core::102:isMatch:then, Core::153:isMatch:then, Core::164:isMatch:then, Core:bool:9:isMatch:then, Core:check:9:isMatch:then, Core:controlFlow:if:27, Core:controlFlow:29:isMatch:then, Core:controlFlow:50:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:fixedDecimal:30:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:function:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:29:isMatch:then, Core:int:40:isMatch:then, Core:iterable:generateWithState:14:0:11:1:isMatch:then, Core:iterable:map:19:11:1:isMatch:then, Core:iterable:reduceLeft:38:1:isMatch:then, Core:iterable:take:33:1:isMatch:then, Core:iterable:takeWhile:2:11:1:isMatch:then, Core:iterable:withIndex:11:1:isMatch:then, Core:iterable:withIndex:11:14:1:isMatch:then, Core:iterable:19:isMatch:then, Core:iterable:30:isMatch:then, Core:iterable:82:11:1:isMatch:then, Core:iterable:84:2:11:1:isMatch:then, Core:iterable:84:2:11:7:15:1:isMatch:then, Core:list:generate:59:1:isMatch:then, Core:list:29:isMatch:then, Core:list:40:isMatch:then, Core:result:19:isMatch:then, Core:result:30:isMatch:then, Core:struct:19:isMatch:then, Core:tag:29:isMatch:then, Core:text:29:isMatch:then, Core:text:40:isMatch:then, Core:type:19:isMatch:then, Examples:fibonacci:then, Examples:fibonacci:19:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %115<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %89<builtinEquals>
  $3 = dup $0 by 1
  $4 = %108<False>
  $5 = %88<anonymous:$generated::needs>
  $6 = call $2<%89<builtinEquals>> with $0 $4<%108<False>> ($5<%88<anonymous:$generated::needs>> is responsible)
  $7 = drop $0
  $8 = $6
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = %136<"The `condition` must be either `True` or `False`.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%136<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
  $5 = drop $0
  $6 = $4
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = %137<"The `reason` must be a text.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%137<"The `reason` must be a text.">> ($0 is at fault)
  $5 = drop $0
  $6 = $4
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
  $6 = drop $1
  $7 = drop $0
  $8 = $5
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = %89<builtinEquals>
  $5 = dup $0 by 1
  $6 = %121<True>
  $7 = %88<anonymous:$generated::needs>
  $8 = call $4<%89<builtinEquals>> with $0 $6<%121<True>> ($7<%88<anonymous:$generated::needs>> is responsible)
  $9 = dup $0 by 1
  $10 = { body_2 capturing $0 }
  $11 = %91<builtinIfElse>
  $12 = dup $8 by 1
  $13 = %157<{ body_0 }>
  $14 = dup $10 by 1
  $15 = call $11<%91<builtinIfElse>> with $8 $13<%157<{ body_0 }>> $10 ($7<%88<anonymous:$generated::needs>> is responsible)
  $16 = { body_3 capturing $3 }
  $17 = dup $15 by 1
  $18 = %158<{ body_1 }>
  $19 = dup $16 by 1
  $20 = call $11<%91<builtinIfElse>> with $15 $18<%158<{ body_1 }>> $16 ($7<%88<anonymous:$generated::needs>> is responsible)
  $21 = %105<builtinTypeOf>
  $22 = dup $1 by 1
  $23 = call $21<%105<builtinTypeOf>> with $1 ($3 is responsible)
  $24 = dup $23 by 1
  $25 = %120<Text>
  $26 = call $4<%89<builtinEquals>> with $23 $25<%120<Text>> ($3 is responsible)
  $27 = { body_4 capturing $3 }
  $28 = dup $26 by 1
  $29 = dup $27 by 1
  $30 = call $11<%91<builtinIfElse>> with $26 $18<%158<{ body_1 }>> $27 ($7<%88<anonymous:$generated::needs>> is responsible)
  $31 = dup $1 by 1
  $32 = dup $2 by 1
  $33 = { body_5 capturing $1, $2 }
  $34 = dup $0 by 1
  $35 = dup $33 by 1
  $36 = call $11<%91<builtinIfElse>> with $0 $18<%158<{ body_1 }>> $33 ($7<%88<anonymous:$generated::needs>> is responsible)
  $37 = drop $33
  $38 = drop $30
  $39 = drop $27
  $40 = drop $26
  $41 = drop $23
  $42 = drop $20
  $43 = drop $16
  $44 = drop $15
  $45 = drop $10
  $46 = drop $8
  $47 = drop $2
  $48 = drop $1
  $49 = drop $0
  $50 = $36
body_7 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:18:equals:then, Core:bool:lazyOr:18:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:list:first:6:equals:then, Core:list:single:6:equals:then
  # Captured IDs: none
  $1 = %160<(%113<Match>,)>
body_8 (responsible $0) =
  # Original HIR IDs: Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:lazyAnd:18:case-1:matched, Core:bool:not:6:case-0:matched, Core:function:is0:12, Core:function:is1:12, Core:function:is2:12, Core:function:is3:12, Core:function:is4:12, Core:function:is5:12, Core:list:isValidIndex:21, Core:list:isValidInsertIndex:21, anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: none
  $1 = %108<False>
body_9 (responsible $2) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0, $1
  $3 = %104<builtinToDebugText>
  $4 = dup $1 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $3<%104<builtinToDebugText>> with $1 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %100<builtinTagGetValue>
  $8 = dup $0 by 1
  $9 = call $7<%100<builtinTagGetValue>> with $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = call $3<%104<builtinToDebugText>> with $9 ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = %103<builtinTextConcatenate>
  $13 = %134<"Expected tag to not have a value, but it has one: `">
  $14 = dup $11 by 1
  $15 = call $12<%103<builtinTextConcatenate>> with $13<%134<"Expected tag to not have a value, but it has one: `">> $11 ($5<%3<Builtins::ifElse:1>> is responsible)
  $16 = dup $15 by 1
  $17 = %139<"`.">
  $18 = call $12<%103<builtinTextConcatenate>> with $15 $17<%139<"`.">> ($5<%3<Builtins::ifElse:1>> is responsible)
  $19 = %114<NoMatch>
  $20 = dup $18 by 1
  $21 = ($19<%114<NoMatch>>, $18)
  $22 = drop $18
  $23 = drop $15
  $24 = drop $11
  $25 = drop $9
  $26 = drop $6
  $27 = drop $1
  $28 = drop $0
  $29 = $21
body_10 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %101<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%101<builtinTagHasValue>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %108<False>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%108<False>> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = dup $5 by 1
  $12 = { body_9 capturing $0, $5 }
  $13 = %91<builtinIfElse>
  $14 = dup $9 by 1
  $15 = %161<{ body_7 }>
  $16 = dup $12 by 1
  $17 = call $13<%91<builtinIfElse>> with $9 $15<%161<{ body_7 }>> $12 ($4<%3<Builtins::ifElse:1>> is responsible)
  $18 = drop $12
  $19 = drop $9
  $20 = drop $5
  $21 = drop $0
  $22 = $17
body_11 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %130<"Expected True, got ">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%130<"Expected True, got ">> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %125<".">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%125<".">> ($4<%3<Builtins::ifElse:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_12 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %102<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%102<builtinTagWithoutValue>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %121<True>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%121<True>> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_10 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_11 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%3<Builtins::ifElse:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_13 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %132<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%132<"Expected a Tag, got `">> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %139<"`.">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%139<"`.">> ($4<%3<Builtins::ifElse:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_14 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
  $4 = drop $0
  $5 = $3
body_15 (responsible $2) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0, $1
  $3 = %104<builtinToDebugText>
  $4 = dup $1 by 1
  $5 = %3<Builtins::ifElse:1>
  $6 = call $3<%104<builtinToDebugText>> with $1 ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %100<builtinTagGetValue>
  $8 = dup $0 by 1
  $9 = call $7<%100<builtinTagGetValue>> with $0 ($5<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = call $3<%104<builtinToDebugText>> with $9 ($5<%3<Builtins::ifElse:1>> is responsible)
  $12 = %103<builtinTextConcatenate>
  $13 = %134<"Expected tag to not have a value, but it has one: `">
  $14 = dup $11 by 1
  $15 = call $12<%103<builtinTextConcatenate>> with $13<%134<"Expected tag to not have a value, but it has one: `">> $11 ($5<%3<Builtins::ifElse:1>> is responsible)
  $16 = dup $15 by 1
  $17 = %139<"`.">
  $18 = call $12<%103<builtinTextConcatenate>> with $15 $17<%139<"`.">> ($5<%3<Builtins::ifElse:1>> is responsible)
  $19 = %114<NoMatch>
  $20 = dup $18 by 1
  $21 = ($19<%114<NoMatch>>, $18)
  $22 = drop $18
  $23 = drop $15
  $24 = drop $11
  $25 = drop $9
  $26 = drop $6
  $27 = drop $1
  $28 = drop $0
  $29 = $21
body_16 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %101<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%101<builtinTagHasValue>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %108<False>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%108<False>> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = dup $5 by 1
  $12 = { body_15 capturing $0, $5 }
  $13 = %91<builtinIfElse>
  $14 = dup $9 by 1
  $15 = %161<{ body_7 }>
  $16 = dup $12 by 1
  $17 = call $13<%91<builtinIfElse>> with $9 $15<%161<{ body_7 }>> $12 ($4<%3<Builtins::ifElse:1>> is responsible)
  $18 = drop $12
  $19 = drop $9
  $20 = drop $5
  $21 = drop $0
  $22 = $17
body_17 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %128<"Expected False, got ">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%128<"Expected False, got ">> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %125<".">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%125<".">> ($4<%3<Builtins::ifElse:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_18 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %102<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%102<builtinTagWithoutValue>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %108<False>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%108<False>> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_16 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_17 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%3<Builtins::ifElse:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_19 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %132<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%132<"Expected a Tag, got `">> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %139<"`.">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%139<"`.">> ($4<%3<Builtins::ifElse:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_20 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %105<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %3<Builtins::ifElse:1>
  $5 = call $2<%105<builtinTypeOf>> with $0 ($4<%3<Builtins::ifElse:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %119<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%119<Tag>> $5 ($4<%3<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_18 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_19 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%3<Builtins::ifElse:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_21 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:didNotMatch
  # Captured IDs: $0
  $2 = %96<builtinListGet>
  $3 = dup $0 by 1
  $4 = %123<1>
  $5 = %3<Builtins::ifElse:1>
  $6 = call $2<%96<builtinListGet>> with $0 $4<%123<1>> ($5<%3<Builtins::ifElse:1>> is responsible)
  $7 = %108<False>
  $8 = drop $6
  $9 = drop $0
  $10 = $7<%108<False>>
body_22 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Builtins::ifElse
  # Captured IDs: none
  $4 = %105<builtinTypeOf>
  $5 = dup $0 by 1
  $6 = %3<Builtins::ifElse:1>
  $7 = call $4<%105<builtinTypeOf>> with $0 ($6<%3<Builtins::ifElse:1>> is responsible)
  $8 = %89<builtinEquals>
  $9 = %119<Tag>
  $10 = dup $7 by 1
  $11 = call $8<%89<builtinEquals>> with $9<%119<Tag>> $7 ($6<%3<Builtins::ifElse:1>> is responsible)
  $12 = dup $0 by 1
  $13 = { body_12 capturing $0 }
  $14 = dup $7 by 1
  $15 = { body_13 capturing $7 }
  $16 = %91<builtinIfElse>
  $17 = dup $11 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%91<builtinIfElse>> with $11 $13 $15 ($6<%3<Builtins::ifElse:1>> is responsible)
  $21 = %96<builtinListGet>
  $22 = dup $20 by 1
  $23 = %122<0>
  $24 = call $21<%96<builtinListGet>> with $20 $23<%122<0>> ($6<%3<Builtins::ifElse:1>> is responsible)
  $25 = dup $24 by 1
  $26 = %113<Match>
  $27 = call $8<%89<builtinEquals>> with $24 $26<%113<Match>> ($6<%3<Builtins::ifElse:1>> is responsible)
  $28 = dup $20 by 1
  $29 = { body_14 capturing $20 }
  $30 = dup $0 by 1
  $31 = { body_20 capturing $0 }
  $32 = dup $27 by 1
  $33 = dup $29 by 1
  $34 = dup $31 by 1
  $35 = call $16<%91<builtinIfElse>> with $27 $29 $31 ($6<%3<Builtins::ifElse:1>> is responsible)
  $36 = dup $35 by 1
  $37 = call $21<%96<builtinListGet>> with $35 $23<%122<0>> ($6<%3<Builtins::ifElse:1>> is responsible)
  $38 = dup $37 by 1
  $39 = call $8<%89<builtinEquals>> with $37 $26<%113<Match>> ($6<%3<Builtins::ifElse:1>> is responsible)
  $40 = dup $35 by 1
  $41 = { body_21 capturing $35 }
  $42 = dup $39 by 1
  $43 = %157<{ body_0 }>
  $44 = dup $41 by 1
  $45 = call $16<%91<builtinIfElse>> with $39 $43<%157<{ body_0 }>> $41 ($6<%3<Builtins::ifElse:1>> is responsible)
  $46 = %159<{ body_6 }>
  $47 = dup $45 by 1
  $48 = %142<"`conditionIsBool` was not satisfied">
  $49 = %11<Builtins::ifElse:5>
  $50 = call $46<%159<{ body_6 }>> with $45 $48<%142<"`conditionIsBool` was not satisfied">> $3 ($49<%11<Builtins::ifElse:5>> is responsible)
  $51 = dup $1 by 1
  $52 = %31<Builtins::typeIs:19>
  $53 = call $4<%105<builtinTypeOf>> with $1 ($52<%31<Builtins::typeIs:19>> is responsible)
  $54 = dup $53 by 1
  $55 = %109<Function>
  $56 = %32<Builtins::typeIs:25>
  $57 = call $8<%89<builtinEquals>> with $53 $55<%109<Function>> ($56<%32<Builtins::typeIs:25>> is responsible)
  $58 = dup $57 by 1
  $59 = %156<"`then | typeIs Function` was not satisfied">
  $60 = %4<Builtins::ifElse:11>
  $61 = call $46<%159<{ body_6 }>> with $57 $59<%156<"`then | typeIs Function` was not satisfied">> $3 ($60<%4<Builtins::ifElse:11>> is responsible)
  $62 = dup $1 by 1
  $63 = call $4<%105<builtinTypeOf>> with $1 ($52<%31<Builtins::typeIs:19>> is responsible)
  $64 = dup $63 by 1
  $65 = call $8<%89<builtinEquals>> with $63 $55<%109<Function>> ($56<%32<Builtins::typeIs:25>> is responsible)
  $66 = dup $65 by 1
  $67 = %145<"`function | typeIs Function` was not satisfied">
  $68 = %5<Builtins::ifElse:14>
  $69 = %2<Builtins::getArgumentCount:5>
  $70 = call $46<%159<{ body_6 }>> with $65 $67<%145<"`function | typeIs Function` was not satisfied">> $68<%5<Builtins::ifElse:14>> ($69<%2<Builtins::getArgumentCount:5>> is responsible)
  $71 = %90<builtinGetArgumentCount>
  $72 = dup $1 by 1
  $73 = %1<Builtins::getArgumentCount:11>
  $74 = call $71<%90<builtinGetArgumentCount>> with $1 ($73<%1<Builtins::getArgumentCount:11>> is responsible)
  $75 = dup $74 by 1
  $76 = %0<Builtins::equals:6>
  $77 = call $8<%89<builtinEquals>> with $74 $23<%122<0>> ($76<%0<Builtins::equals:6>> is responsible)
  $78 = dup $77 by 1
  $79 = %155<"`then | getArgumentCount | equals 0` was not satisfied">
  $80 = %6<Builtins::ifElse:19>
  $81 = call $46<%159<{ body_6 }>> with $77 $79<%155<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($80<%6<Builtins::ifElse:19>> is responsible)
  $82 = dup $2 by 1
  $83 = call $4<%105<builtinTypeOf>> with $2 ($52<%31<Builtins::typeIs:19>> is responsible)
  $84 = dup $83 by 1
  $85 = call $8<%89<builtinEquals>> with $83 $55<%109<Function>> ($56<%32<Builtins::typeIs:25>> is responsible)
  $86 = dup $85 by 1
  $87 = %144<"`else | typeIs Function` was not satisfied">
  $88 = %7<Builtins::ifElse:25>
  $89 = call $46<%159<{ body_6 }>> with $85 $87<%144<"`else | typeIs Function` was not satisfied">> $3 ($88<%7<Builtins::ifElse:25>> is responsible)
  $90 = dup $2 by 1
  $91 = call $4<%105<builtinTypeOf>> with $2 ($52<%31<Builtins::typeIs:19>> is responsible)
  $92 = dup $91 by 1
  $93 = call $8<%89<builtinEquals>> with $91 $55<%109<Function>> ($56<%32<Builtins::typeIs:25>> is responsible)
  $94 = dup $93 by 1
  $95 = %8<Builtins::ifElse:28>
  $96 = call $46<%159<{ body_6 }>> with $93 $67<%145<"`function | typeIs Function` was not satisfied">> $95<%8<Builtins::ifElse:28>> ($69<%2<Builtins::getArgumentCount:5>> is responsible)
  $97 = dup $2 by 1
  $98 = call $71<%90<builtinGetArgumentCount>> with $2 ($73<%1<Builtins::getArgumentCount:11>> is responsible)
  $99 = dup $98 by 1
  $100 = call $8<%89<builtinEquals>> with $98 $23<%122<0>> ($76<%0<Builtins::equals:6>> is responsible)
  $101 = dup $100 by 1
  $102 = %143<"`else | getArgumentCount | equals 0` was not satisfied">
  $103 = %9<Builtins::ifElse:33>
  $104 = call $46<%159<{ body_6 }>> with $100 $102<%143<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($103<%9<Builtins::ifElse:33>> is responsible)
  $105 = dup $0 by 1
  $106 = dup $1 by 1
  $107 = dup $2 by 1
  $108 = %10<Builtins::ifElse:41>
  $109 = call $16<%91<builtinIfElse>> with $0 $1 $2 ($108<%10<Builtins::ifElse:41>> is responsible)
  $110 = drop $104
  $111 = drop $100
  $112 = drop $98
  $113 = drop $96
  $114 = drop $93
  $115 = drop $91
  $116 = drop $89
  $117 = drop $85
  $118 = drop $83
  $119 = drop $81
  $120 = drop $77
  $121 = drop $74
  $122 = drop $70
  $123 = drop $65
  $124 = drop $63
  $125 = drop $61
  $126 = drop $57
  $127 = drop $53
  $128 = drop $50
  $129 = drop $45
  $130 = drop $41
  $131 = drop $39
  $132 = drop $37
  $133 = drop $35
  $134 = drop $31
  $135 = drop $29
  $136 = drop $27
  $137 = drop $24
  $138 = drop $20
  $139 = drop $15
  $140 = drop $13
  $141 = drop $11
  $142 = drop $7
  $143 = drop $2
  $144 = drop $1
  $145 = drop $0
  $146 = $109
body_23 (responsible $1) =
  # Original HIR IDs: Core:function:is1:11
  # Captured IDs: $0
  $2 = %105<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %31<Builtins::typeIs:19>
  $5 = call $2<%105<builtinTypeOf>> with $0 ($4<%31<Builtins::typeIs:19>> is responsible)
  $6 = %89<builtinEquals>
  $7 = dup $5 by 1
  $8 = %109<Function>
  $9 = %32<Builtins::typeIs:25>
  $10 = call $6<%89<builtinEquals>> with $5 $8<%109<Function>> ($9<%32<Builtins::typeIs:25>> is responsible)
  $11 = %159<{ body_6 }>
  $12 = dup $10 by 1
  $13 = %145<"`function | typeIs Function` was not satisfied">
  $14 = %34<Core:function:is1:11:3>
  $15 = %2<Builtins::getArgumentCount:5>
  $16 = call $11<%159<{ body_6 }>> with $10 $13<%145<"`function | typeIs Function` was not satisfied">> $14<%34<Core:function:is1:11:3>> ($15<%2<Builtins::getArgumentCount:5>> is responsible)
  $17 = %90<builtinGetArgumentCount>
  $18 = dup $0 by 1
  $19 = %1<Builtins::getArgumentCount:11>
  $20 = call $17<%90<builtinGetArgumentCount>> with $0 ($19<%1<Builtins::getArgumentCount:11>> is responsible)
  $21 = dup $20 by 1
  $22 = %123<1>
  $23 = %0<Builtins::equals:6>
  $24 = call $6<%89<builtinEquals>> with $20 $22<%123<1>> ($23<%0<Builtins::equals:6>> is responsible)
  $25 = drop $20
  $26 = drop $16
  $27 = drop $10
  $28 = drop $5
  $29 = drop $0
  $30 = $24
body_24 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is1
  # Captured IDs: none
  $2 = %105<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %33<Builtins::typeOf:5>
  $5 = call $2<%105<builtinTypeOf>> with $0 ($4<%33<Builtins::typeOf:5>> is responsible)
  $6 = %89<builtinEquals>
  $7 = dup $5 by 1
  $8 = %109<Function>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%89<builtinEquals>> with $5 $8<%109<Function>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_23 capturing $0 }
  $13 = %163<{ body_22 }>
  $14 = dup $10 by 1
  $15 = dup $12 by 1
  $16 = %162<{ body_8 }>
  $17 = %35<Core:function:is1:13>
  $18 = call $13<%163<{ body_22 }>> with $10 $12 $16<%162<{ body_8 }>> ($17<%35<Core:function:is1:13>> is responsible)
  $19 = drop $12
  $20 = drop $10
  $21 = drop $5
  $22 = drop $0
  $23 = $18
body_25 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %100<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%100<builtinTagGetValue>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %113<Match>
  $7 = dup $5 by 1
  $8 = ($6<%113<Match>>, $5)
  $9 = drop $5
  $10 = drop $0
  $11 = $8
body_26 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>
  $7 = drop $5
  $8 = drop $0
  $9 = $6<%164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>>
body_27 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %101<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%101<builtinTagHasValue>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %121<True>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%121<True>> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_25 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_26 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%45<Core:result:is:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_28 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %129<"Expected Ok, got ">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%129<"Expected Ok, got ">> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %125<".">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%125<".">> ($4<%45<Core:result:is:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_29 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %102<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%102<builtinTagWithoutValue>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %116<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%116<Ok>> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_27 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_28 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%45<Core:result:is:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_30 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %132<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%132<"Expected a Tag, got `">> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %139<"`.">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%139<"`.">> ($4<%45<Core:result:is:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_31 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
  $4 = drop $0
  $5 = $3
body_32 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %100<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%100<builtinTagGetValue>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %113<Match>
  $7 = dup $5 by 1
  $8 = ($6<%113<Match>>, $5)
  $9 = drop $5
  $10 = drop $0
  $11 = $8
body_33 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>
  $7 = drop $5
  $8 = drop $0
  $9 = $6<%164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>>
body_34 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %101<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%101<builtinTagHasValue>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %121<True>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%121<True>> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_32 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_33 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%45<Core:result:is:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_35 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %127<"Expected Error, got ">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%127<"Expected Error, got ">> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %125<".">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%125<".">> ($4<%45<Core:result:is:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_36 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %102<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%102<builtinTagWithoutValue>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %107<Error>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%107<Error>> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_34 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_35 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%45<Core:result:is:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_37 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %132<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%132<"Expected a Tag, got `">> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %139<"`.">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%139<"`.">> ($4<%45<Core:result:is:1>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_38 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %105<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%105<builtinTypeOf>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %119<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%119<Tag>> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_36 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_37 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%45<Core:result:is:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_39 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:case-0:matched
  # Captured IDs: $0
  $2 = %96<builtinListGet>
  $3 = dup $0 by 1
  $4 = %123<1>
  $5 = %46<Core:result:is:1:_>
  $6 = call $2<%96<builtinListGet>> with $0 $4<%123<1>> ($5<%46<Core:result:is:1:_>> is responsible)
  $7 = %121<True>
  $8 = drop $6
  $9 = drop $0
  $10 = $7<%121<True>>
body_40 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:case-0:didNotMatch
  # Captured IDs: $0
  $2 = %96<builtinListGet>
  $3 = dup $0 by 1
  $4 = %123<1>
  $5 = %45<Core:result:is:1>
  $6 = call $2<%96<builtinListGet>> with $0 $4<%123<1>> ($5<%45<Core:result:is:1>> is responsible)
  $7 = %108<False>
  $8 = drop $6
  $9 = drop $0
  $10 = $7<%108<False>>
body_41 $0 (+ responsible $1) =
  # Original HIR IDs: Core:result:is
  # Captured IDs: none
  $2 = %105<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %45<Core:result:is:1>
  $5 = call $2<%105<builtinTypeOf>> with $0 ($4<%45<Core:result:is:1>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %119<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%119<Tag>> $5 ($4<%45<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_29 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_30 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%45<Core:result:is:1>> is responsible)
  $19 = %96<builtinListGet>
  $20 = dup $18 by 1
  $21 = %122<0>
  $22 = call $19<%96<builtinListGet>> with $18 $21<%122<0>> ($4<%45<Core:result:is:1>> is responsible)
  $23 = dup $22 by 1
  $24 = %113<Match>
  $25 = call $6<%89<builtinEquals>> with $22 $24<%113<Match>> ($4<%45<Core:result:is:1>> is responsible)
  $26 = dup $18 by 1
  $27 = { body_31 capturing $18 }
  $28 = dup $0 by 1
  $29 = { body_38 capturing $0 }
  $30 = dup $25 by 1
  $31 = dup $27 by 1
  $32 = dup $29 by 1
  $33 = call $14<%91<builtinIfElse>> with $25 $27 $29 ($4<%45<Core:result:is:1>> is responsible)
  $34 = dup $33 by 1
  $35 = call $19<%96<builtinListGet>> with $33 $21<%122<0>> ($4<%45<Core:result:is:1>> is responsible)
  $36 = dup $35 by 1
  $37 = call $6<%89<builtinEquals>> with $35 $24<%113<Match>> ($4<%45<Core:result:is:1>> is responsible)
  $38 = dup $33 by 1
  $39 = { body_39 capturing $33 }
  $40 = dup $33 by 1
  $41 = { body_40 capturing $33 }
  $42 = dup $37 by 1
  $43 = dup $39 by 1
  $44 = dup $41 by 1
  $45 = call $14<%91<builtinIfElse>> with $37 $39 $41 ($4<%45<Core:result:is:1>> is responsible)
  $46 = drop $41
  $47 = drop $39
  $48 = drop $37
  $49 = drop $35
  $50 = drop $33
  $51 = drop $29
  $52 = drop $27
  $53 = drop $25
  $54 = drop $22
  $55 = drop $18
  $56 = drop $13
  $57 = drop $11
  $58 = drop $9
  $59 = drop $5
  $60 = drop $0
  $61 = $45
body_42 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:then
  # Captured IDs: $0
  $2 = %100<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%100<builtinTagGetValue>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %113<Match>
  $7 = dup $5 by 1
  $8 = ($6<%113<Match>>, $5)
  $9 = drop $5
  $10 = drop $0
  $11 = $8
body_43 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>
  $7 = drop $5
  $8 = drop $0
  $9 = $6<%164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>>
body_44 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:then
  # Captured IDs: $0
  $2 = %101<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%101<builtinTagHasValue>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %121<True>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%121<True>> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_42 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_43 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_45 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %129<"Expected Ok, got ">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%129<"Expected Ok, got ">> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $9 by 1
  $11 = %125<".">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%125<".">> ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_46 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:then
  # Captured IDs: $0
  $2 = %102<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%102<builtinTagWithoutValue>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %116<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%116<Ok>> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_44 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_45 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_47 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %132<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%132<"Expected a Tag, got `">> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $9 by 1
  $11 = %139<"`.">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%139<"`.">> ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_48 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:30:case-0:matched
  # Captured IDs: $0, $1
  $3 = %96<builtinListGet>
  $4 = dup $1 by 1
  $5 = %123<1>
  $6 = %66<Core:result:mapOrElse:30:value>
  $7 = call $3<%96<builtinListGet>> with $1 $5<%123<1>> ($6<%66<Core:result:mapOrElse:30:value>> is responsible)
  $8 = dup $0 by 1
  $9 = dup $7 by 1
  $10 = %64<Core:result:mapOrElse:30:2>
  $11 = call $0 with $7 ($10<%64<Core:result:mapOrElse:30:2>> is responsible)
  $12 = drop $7
  $13 = drop $1
  $14 = drop $0
  $15 = $11
body_49 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:then
  # Captured IDs: $0
  $2 = %100<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%100<builtinTagGetValue>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %113<Match>
  $7 = dup $5 by 1
  $8 = ($6<%113<Match>>, $5)
  $9 = drop $5
  $10 = drop $0
  $11 = $8
body_50 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>
  $7 = drop $5
  $8 = drop $0
  $9 = $6<%164<(%114<NoMatch>, %133<"Expected tag to have a value, but it doesn't have any.">)>>
body_51 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:then
  # Captured IDs: $0
  $2 = %101<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%101<builtinTagHasValue>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %121<True>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%121<True>> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_49 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_50 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_52 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %127<"Expected Error, got ">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%127<"Expected Error, got ">> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $9 by 1
  $11 = %125<".">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%125<".">> ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_53 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:then
  # Captured IDs: $0
  $2 = %102<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%102<builtinTagWithoutValue>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %107<Error>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%107<Error>> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_51 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_52 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_54 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %63<Core:result:mapOrElse:30>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %132<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%132<"Expected a Tag, got `">> $5 ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $10 = dup $9 by 1
  $11 = %139<"`.">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%139<"`.">> ($4<%63<Core:result:mapOrElse:30>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_55 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:30:case-1:matched
  # Captured IDs: $0, $1
  $3 = %96<builtinListGet>
  $4 = dup $1 by 1
  $5 = %123<1>
  $6 = %67<Core:result:mapOrElse:30:value#1>
  $7 = call $3<%96<builtinListGet>> with $1 $5<%123<1>> ($6<%67<Core:result:mapOrElse:30:value#1>> is responsible)
  $8 = dup $0 by 1
  $9 = dup $7 by 1
  $10 = %65<Core:result:mapOrElse:30:5>
  $11 = call $0 with $7 ($10<%65<Core:result:mapOrElse:30:5>> is responsible)
  $12 = drop $7
  $13 = drop $1
  $14 = drop $0
  $15 = $11
body_56 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:30:case-1:didNotMatch
  # Captured IDs: $0
  $2 = %96<builtinListGet>
  $3 = dup $0 by 1
  $4 = %123<1>
  $5 = %63<Core:result:mapOrElse:30>
  $6 = call $2<%96<builtinListGet>> with $0 $4<%123<1>> ($5<%63<Core:result:mapOrElse:30>> is responsible)
  $7 = %135<"No case matched the given expression.">
  $8 = panicking because $7<%135<"No case matched the given expression.">> ($5<%63<Core:result:mapOrElse:30>> is at fault)
  $9 = drop $6
  $10 = drop $0
  $11 = $8
body_57 (responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse:30:case-0:didNotMatch
  # Captured IDs: $0, $1, $2
  $4 = %96<builtinListGet>
  $5 = dup $2 by 1
  $6 = %123<1>
  $7 = %63<Core:result:mapOrElse:30>
  $8 = call $4<%96<builtinListGet>> with $2 $6<%123<1>> ($7<%63<Core:result:mapOrElse:30>> is responsible)
  $9 = %105<builtinTypeOf>
  $10 = dup $0 by 1
  $11 = call $9<%105<builtinTypeOf>> with $0 ($7<%63<Core:result:mapOrElse:30>> is responsible)
  $12 = %89<builtinEquals>
  $13 = %119<Tag>
  $14 = dup $11 by 1
  $15 = call $12<%89<builtinEquals>> with $13<%119<Tag>> $11 ($7<%63<Core:result:mapOrElse:30>> is responsible)
  $16 = dup $0 by 1
  $17 = { body_53 capturing $0 }
  $18 = dup $11 by 1
  $19 = { body_54 capturing $11 }
  $20 = %91<builtinIfElse>
  $21 = dup $15 by 1
  $22 = dup $17 by 1
  $23 = dup $19 by 1
  $24 = call $20<%91<builtinIfElse>> with $15 $17 $19 ($7<%63<Core:result:mapOrElse:30>> is responsible)
  $25 = dup $24 by 1
  $26 = %122<0>
  $27 = call $4<%96<builtinListGet>> with $24 $26<%122<0>> ($7<%63<Core:result:mapOrElse:30>> is responsible)
  $28 = dup $27 by 1
  $29 = %113<Match>
  $30 = call $12<%89<builtinEquals>> with $27 $29<%113<Match>> ($7<%63<Core:result:mapOrElse:30>> is responsible)
  $31 = dup $1 by 1
  $32 = dup $24 by 1
  $33 = { body_55 capturing $1, $24 }
  $34 = dup $24 by 1
  $35 = { body_56 capturing $24 }
  $36 = dup $30 by 1
  $37 = dup $33 by 1
  $38 = dup $35 by 1
  $39 = call $20<%91<builtinIfElse>> with $30 $33 $35 ($7<%63<Core:result:mapOrElse:30>> is responsible)
  $40 = drop $35
  $41 = drop $33
  $42 = drop $30
  $43 = drop $27
  $44 = drop $24
  $45 = drop $19
  $46 = drop $17
  $47 = drop $15
  $48 = drop $11
  $49 = drop $8
  $50 = drop $2
  $51 = drop $1
  $52 = drop $0
  $53 = $39
body_58 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse
  # Captured IDs: none
  $4 = %166<{ body_41 }>
  $5 = dup $0 by 1
  $6 = %60<Core:result:mapOrElse:2>
  $7 = call $4<%166<{ body_41 }>> with $0 ($6<%60<Core:result:mapOrElse:2>> is responsible)
  $8 = %159<{ body_6 }>
  $9 = dup $7 by 1
  $10 = %148<"`is result` was not satisfied">
  $11 = %68<Core:result:mapOrElse:4>
  $12 = call $8<%159<{ body_6 }>> with $7 $10<%148<"`is result` was not satisfied">> $3 ($11<%68<Core:result:mapOrElse:4>> is responsible)
  $13 = %165<{ body_24 }>
  $14 = dup $1 by 1
  $15 = %58<Core:result:mapOrElse:14>
  $16 = call $13<%165<{ body_24 }>> with $1 ($15<%58<Core:result:mapOrElse:14>> is responsible)
  $17 = dup $16 by 1
  $18 = %147<"`function.is1 okMapper` was not satisfied">
  $19 = %59<Core:result:mapOrElse:16>
  $20 = call $8<%159<{ body_6 }>> with $16 $18<%147<"`function.is1 okMapper` was not satisfied">> $3 ($19<%59<Core:result:mapOrElse:16>> is responsible)
  $21 = dup $2 by 1
  $22 = %61<Core:result:mapOrElse:26>
  $23 = call $13<%165<{ body_24 }>> with $2 ($22<%61<Core:result:mapOrElse:26>> is responsible)
  $24 = dup $23 by 1
  $25 = %146<"`function.is1 errorMapper` was not satisfied">
  $26 = %62<Core:result:mapOrElse:28>
  $27 = call $8<%159<{ body_6 }>> with $23 $25<%146<"`function.is1 errorMapper` was not satisfied">> $3 ($26<%62<Core:result:mapOrElse:28>> is responsible)
  $28 = %105<builtinTypeOf>
  $29 = dup $0 by 1
  $30 = %63<Core:result:mapOrElse:30>
  $31 = call $28<%105<builtinTypeOf>> with $0 ($30<%63<Core:result:mapOrElse:30>> is responsible)
  $32 = %89<builtinEquals>
  $33 = %119<Tag>
  $34 = dup $31 by 1
  $35 = call $32<%89<builtinEquals>> with $33<%119<Tag>> $31 ($30<%63<Core:result:mapOrElse:30>> is responsible)
  $36 = dup $0 by 1
  $37 = { body_46 capturing $0 }
  $38 = dup $31 by 1
  $39 = { body_47 capturing $31 }
  $40 = %91<builtinIfElse>
  $41 = dup $35 by 1
  $42 = dup $37 by 1
  $43 = dup $39 by 1
  $44 = call $40<%91<builtinIfElse>> with $35 $37 $39 ($30<%63<Core:result:mapOrElse:30>> is responsible)
  $45 = %96<builtinListGet>
  $46 = dup $44 by 1
  $47 = %122<0>
  $48 = call $45<%96<builtinListGet>> with $44 $47<%122<0>> ($30<%63<Core:result:mapOrElse:30>> is responsible)
  $49 = dup $48 by 1
  $50 = %113<Match>
  $51 = call $32<%89<builtinEquals>> with $48 $50<%113<Match>> ($30<%63<Core:result:mapOrElse:30>> is responsible)
  $52 = dup $1 by 1
  $53 = dup $44 by 1
  $54 = { body_48 capturing $1, $44 }
  $55 = dup $0 by 1
  $56 = dup $2 by 1
  $57 = dup $44 by 1
  $58 = { body_57 capturing $0, $2, $44 }
  $59 = dup $51 by 1
  $60 = dup $54 by 1
  $61 = dup $58 by 1
  $62 = call $40<%91<builtinIfElse>> with $51 $54 $58 ($30<%63<Core:result:mapOrElse:30>> is responsible)
  $63 = drop $58
  $64 = drop $54
  $65 = drop $51
  $66 = drop $48
  $67 = drop $44
  $68 = drop $39
  $69 = drop $37
  $70 = drop $35
  $71 = drop $31
  $72 = drop $27
  $73 = drop $23
  $74 = drop $20
  $75 = drop $16
  $76 = drop $12
  $77 = drop $7
  $78 = drop $2
  $79 = drop $1
  $80 = drop $0
  $81 = $62
body_59 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:flatMap:19
  # Captured IDs: $0
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %38<Core:result:flatMap:19:2>
  $6 = call $0 with $1 ($5<%38<Core:result:flatMap:19:2>> is responsible)
  $7 = drop $1
  $8 = drop $0
  $9 = $6
body_60 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:mapOr:20
  # Captured IDs: $0
  $3 = dup $0 by 1
  $4 = $0
  $5 = drop $1
  $6 = drop $0
  $7 = $4
body_61 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:flatMap
  # Captured IDs: none
  $3 = %166<{ body_41 }>
  $4 = dup $0 by 1
  $5 = %39<Core:result:flatMap:2>
  $6 = call $3<%166<{ body_41 }>> with $0 ($5<%39<Core:result:flatMap:2>> is responsible)
  $7 = %159<{ body_6 }>
  $8 = dup $6 by 1
  $9 = %148<"`is result` was not satisfied">
  $10 = %41<Core:result:flatMap:4>
  $11 = call $7<%159<{ body_6 }>> with $6 $9<%148<"`is result` was not satisfied">> $2 ($10<%41<Core:result:flatMap:4>> is responsible)
  $12 = %165<{ body_24 }>
  $13 = dup $1 by 1
  $14 = %36<Core:result:flatMap:14>
  $15 = call $12<%165<{ body_24 }>> with $1 ($14<%36<Core:result:flatMap:14>> is responsible)
  $16 = dup $15 by 1
  $17 = %147<"`function.is1 okMapper` was not satisfied">
  $18 = %37<Core:result:flatMap:16>
  $19 = call $7<%159<{ body_6 }>> with $15 $17<%147<"`function.is1 okMapper` was not satisfied">> $2 ($18<%37<Core:result:flatMap:16>> is responsible)
  $20 = dup $1 by 1
  $21 = { body_59 capturing $1 }
  $22 = dup $0 by 1
  $23 = %55<Core:result:mapOr:2>
  $24 = call $3<%166<{ body_41 }>> with $0 ($23<%55<Core:result:mapOr:2>> is responsible)
  $25 = dup $24 by 1
  $26 = %40<Core:result:flatMap:21>
  $27 = %57<Core:result:mapOr:4>
  $28 = call $7<%159<{ body_6 }>> with $24 $9<%148<"`is result` was not satisfied">> $26<%40<Core:result:flatMap:21>> ($27<%57<Core:result:mapOr:4>> is responsible)
  $29 = dup $21 by 1
  $30 = %53<Core:result:mapOr:14>
  $31 = call $12<%165<{ body_24 }>> with $21 ($30<%53<Core:result:mapOr:14>> is responsible)
  $32 = dup $31 by 1
  $33 = %54<Core:result:mapOr:16>
  $34 = call $7<%159<{ body_6 }>> with $31 $17<%147<"`function.is1 okMapper` was not satisfied">> $26<%40<Core:result:flatMap:21>> ($33<%54<Core:result:mapOr:16>> is responsible)
  $35 = dup $0 by 1
  $36 = { body_60 capturing $0 }
  $37 = %167<{ body_58 }>
  $38 = dup $0 by 1
  $39 = dup $21 by 1
  $40 = dup $36 by 1
  $41 = %56<Core:result:mapOr:21>
  $42 = call $37<%167<{ body_58 }>> with $0 $21 $36 ($41<%56<Core:result:mapOr:21>> is responsible)
  $43 = drop $36
  $44 = drop $34
  $45 = drop $31
  $46 = drop $28
  $47 = drop $24
  $48 = drop $21
  $49 = drop $19
  $50 = drop $15
  $51 = drop $11
  $52 = drop $6
  $53 = drop $1
  $54 = drop $0
  $55 = $42
body_62 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:map:19
  # Captured IDs: $0
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %49<Core:result:map:19:3>
  $6 = call $0 with $1 ($5<%49<Core:result:map:19:3>> is responsible)
  $7 = dup $6 by 1
  $8 = Ok $6
  $9 = drop $6
  $10 = drop $1
  $11 = drop $0
  $12 = $8
body_63 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:result:map
  # Captured IDs: none
  $3 = %166<{ body_41 }>
  $4 = dup $0 by 1
  $5 = %50<Core:result:map:2>
  $6 = call $3<%166<{ body_41 }>> with $0 ($5<%50<Core:result:map:2>> is responsible)
  $7 = %159<{ body_6 }>
  $8 = dup $6 by 1
  $9 = %148<"`is result` was not satisfied">
  $10 = %52<Core:result:map:4>
  $11 = call $7<%159<{ body_6 }>> with $6 $9<%148<"`is result` was not satisfied">> $2 ($10<%52<Core:result:map:4>> is responsible)
  $12 = %165<{ body_24 }>
  $13 = dup $1 by 1
  $14 = %47<Core:result:map:14>
  $15 = call $12<%165<{ body_24 }>> with $1 ($14<%47<Core:result:map:14>> is responsible)
  $16 = dup $15 by 1
  $17 = %147<"`function.is1 okMapper` was not satisfied">
  $18 = %48<Core:result:map:16>
  $19 = call $7<%159<{ body_6 }>> with $15 $17<%147<"`function.is1 okMapper` was not satisfied">> $2 ($18<%48<Core:result:map:16>> is responsible)
  $20 = dup $1 by 1
  $21 = { body_62 capturing $1 }
  $22 = %168<{ body_61 }>
  $23 = dup $0 by 1
  $24 = dup $21 by 1
  $25 = %51<Core:result:map:20>
  $26 = call $22<%168<{ body_61 }>> with $0 $21 ($25<%51<Core:result:map:20>> is responsible)
  $27 = drop $21
  $28 = drop $19
  $29 = drop $15
  $30 = drop $11
  $31 = drop $6
  $32 = drop $1
  $33 = drop $0
  $34 = $26
body_64 $0 (+ responsible $1) =
  # Original HIR IDs: Core:result:getValue
  # Captured IDs: none
  $2 = %166<{ body_41 }>
  $3 = dup $0 by 1
  $4 = %43<Core:result:getValue:2>
  $5 = call $2<%166<{ body_41 }>> with $0 ($4<%43<Core:result:getValue:2>> is responsible)
  $6 = %159<{ body_6 }>
  $7 = dup $5 by 1
  $8 = %148<"`is result` was not satisfied">
  $9 = %44<Core:result:getValue:4>
  $10 = call $6<%159<{ body_6 }>> with $5 $8<%148<"`is result` was not satisfied">> $1 ($9<%44<Core:result:getValue:4>> is responsible)
  $11 = %105<builtinTypeOf>
  $12 = dup $0 by 1
  $13 = %31<Builtins::typeIs:19>
  $14 = call $11<%105<builtinTypeOf>> with $0 ($13<%31<Builtins::typeIs:19>> is responsible)
  $15 = %89<builtinEquals>
  $16 = dup $14 by 1
  $17 = %119<Tag>
  $18 = %32<Builtins::typeIs:25>
  $19 = call $15<%89<builtinEquals>> with $14 $17<%119<Tag>> ($18<%32<Builtins::typeIs:25>> is responsible)
  $20 = dup $19 by 1
  $21 = %152<"`tag | typeIs Tag` was not satisfied">
  $22 = %42<Core:result:getValue:14>
  $23 = %29<Builtins::tagGetValue:5>
  $24 = call $6<%159<{ body_6 }>> with $19 $21<%152<"`tag | typeIs Tag` was not satisfied">> $22<%42<Core:result:getValue:14>> ($23<%29<Builtins::tagGetValue:5>> is responsible)
  $25 = %101<builtinTagHasValue>
  $26 = dup $0 by 1
  $27 = %26<Builtins::tagGetValue:11>
  $28 = call $25<%101<builtinTagHasValue>> with $0 ($27<%26<Builtins::tagGetValue:11>> is responsible)
  $29 = dup $28 by 1
  $30 = %153<"`tag | ✨.tagHasValue` was not satisfied">
  $31 = %27<Builtins::tagGetValue:13>
  $32 = call $6<%159<{ body_6 }>> with $28 $30<%153<"`tag | ✨.tagHasValue` was not satisfied">> $22<%42<Core:result:getValue:14>> ($31<%27<Builtins::tagGetValue:13>> is responsible)
  $33 = %100<builtinTagGetValue>
  $34 = dup $0 by 1
  $35 = %28<Builtins::tagGetValue:19>
  $36 = call $33<%100<builtinTagGetValue>> with $0 ($35<%28<Builtins::tagGetValue:19>> is responsible)
  $37 = drop $32
  $38 = drop $28
  $39 = drop $24
  $40 = drop $19
  $41 = drop $14
  $42 = drop $10
  $43 = drop $5
  $44 = drop $0
  $45 = $36
body_65 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:isLessThan
  # Captured IDs: none
  $3 = %105<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %31<Builtins::typeIs:19>
  $6 = call $3<%105<builtinTypeOf>> with $0 ($5<%31<Builtins::typeIs:19>> is responsible)
  $7 = %89<builtinEquals>
  $8 = dup $6 by 1
  $9 = %110<Int>
  $10 = %32<Builtins::typeIs:25>
  $11 = call $7<%89<builtinEquals>> with $6 $9<%110<Int>> ($10<%32<Builtins::typeIs:25>> is responsible)
  $12 = %159<{ body_6 }>
  $13 = dup $11 by 1
  $14 = %140<"`a | typeIs Int` was not satisfied">
  $15 = %77<Examples:fibonacci:compareTo:10>
  $16 = %17<Builtins::intCompareTo:5>
  $17 = call $12<%159<{ body_6 }>> with $11 $14<%140<"`a | typeIs Int` was not satisfied">> $15<%77<Examples:fibonacci:compareTo:10>> ($16<%17<Builtins::intCompareTo:5>> is responsible)
  $18 = dup $1 by 1
  $19 = call $3<%105<builtinTypeOf>> with $1 ($5<%31<Builtins::typeIs:19>> is responsible)
  $20 = dup $19 by 1
  $21 = call $7<%89<builtinEquals>> with $19 $9<%110<Int>> ($10<%32<Builtins::typeIs:25>> is responsible)
  $22 = dup $21 by 1
  $23 = %141<"`b | typeIs Int` was not satisfied">
  $24 = %15<Builtins::intCompareTo:11>
  $25 = call $12<%159<{ body_6 }>> with $21 $23<%141<"`b | typeIs Int` was not satisfied">> $15<%77<Examples:fibonacci:compareTo:10>> ($24<%15<Builtins::intCompareTo:11>> is responsible)
  $26 = %93<builtinIntCompareTo>
  $27 = dup $0 by 1
  $28 = dup $1 by 1
  $29 = %16<Builtins::intCompareTo:18>
  $30 = call $26<%93<builtinIntCompareTo>> with $0 $1 ($29<%16<Builtins::intCompareTo:18>> is responsible)
  $31 = dup $30 by 1
  $32 = %111<Less>
  $33 = %0<Builtins::equals:6>
  $34 = call $7<%89<builtinEquals>> with $30 $32<%111<Less>> ($33<%0<Builtins::equals:6>> is responsible)
  $35 = drop $30
  $36 = drop $25
  $37 = drop $21
  $38 = drop $19
  $39 = drop $17
  $40 = drop $11
  $41 = drop $6
  $42 = drop $1
  $43 = drop $0
  $44 = $34
body_66 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:12
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
  $4 = drop $0
  $5 = $3
body_67 (responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2:13
  # Captured IDs: $0, $1
  $3 = %105<builtinTypeOf>
  $4 = dup $1 by 1
  $5 = %31<Builtins::typeIs:19>
  $6 = call $3<%105<builtinTypeOf>> with $1 ($5<%31<Builtins::typeIs:19>> is responsible)
  $7 = %89<builtinEquals>
  $8 = dup $6 by 1
  $9 = %110<Int>
  $10 = %32<Builtins::typeIs:25>
  $11 = call $7<%89<builtinEquals>> with $6 $9<%110<Int>> ($10<%32<Builtins::typeIs:25>> is responsible)
  $12 = %159<{ body_6 }>
  $13 = dup $11 by 1
  $14 = %149<"`minuend | typeIs Int` was not satisfied">
  $15 = %79<Examples:fibonacci:fibonacci:2:13:11>
  $16 = %21<Builtins::intSubtract:5>
  $17 = call $12<%159<{ body_6 }>> with $11 $14<%149<"`minuend | typeIs Int` was not satisfied">> $15<%79<Examples:fibonacci:fibonacci:2:13:11>> ($16<%21<Builtins::intSubtract:5>> is responsible)
  $18 = %95<builtinIntSubtract>
  $19 = dup $1 by 1
  $20 = %123<1>
  $21 = %20<Builtins::intSubtract:18>
  $22 = call $18<%95<builtinIntSubtract>> with $1 $20<%123<1>> ($21<%20<Builtins::intSubtract:18>> is responsible)
  $23 = dup $0 by 1
  $24 = dup $22 by 1
  $25 = %80<Examples:fibonacci:fibonacci:2:13:12>
  $26 = call $0 with $22 ($25<%80<Examples:fibonacci:fibonacci:2:13:12>> is responsible)
  $27 = dup $1 by 1
  $28 = call $3<%105<builtinTypeOf>> with $1 ($5<%31<Builtins::typeIs:19>> is responsible)
  $29 = dup $28 by 1
  $30 = call $7<%89<builtinEquals>> with $28 $9<%110<Int>> ($10<%32<Builtins::typeIs:25>> is responsible)
  $31 = dup $30 by 1
  $32 = %81<Examples:fibonacci:fibonacci:2:13:32>
  $33 = call $12<%159<{ body_6 }>> with $30 $14<%149<"`minuend | typeIs Int` was not satisfied">> $32<%81<Examples:fibonacci:fibonacci:2:13:32>> ($16<%21<Builtins::intSubtract:5>> is responsible)
  $34 = dup $1 by 1
  $35 = %124<2>
  $36 = call $18<%95<builtinIntSubtract>> with $1 $35<%124<2>> ($21<%20<Builtins::intSubtract:18>> is responsible)
  $37 = dup $0 by 1
  $38 = dup $36 by 1
  $39 = %82<Examples:fibonacci:fibonacci:2:13:33>
  $40 = call $0 with $36 ($39<%82<Examples:fibonacci:fibonacci:2:13:33>> is responsible)
  $41 = dup $26 by 1
  $42 = call $3<%105<builtinTypeOf>> with $26 ($5<%31<Builtins::typeIs:19>> is responsible)
  $43 = dup $42 by 1
  $44 = call $7<%89<builtinEquals>> with $42 $9<%110<Int>> ($10<%32<Builtins::typeIs:25>> is responsible)
  $45 = dup $44 by 1
  $46 = %140<"`a | typeIs Int` was not satisfied">
  $47 = %83<Examples:fibonacci:fibonacci:2:13:34>
  $48 = %14<Builtins::intAdd:5>
  $49 = call $12<%159<{ body_6 }>> with $44 $46<%140<"`a | typeIs Int` was not satisfied">> $47<%83<Examples:fibonacci:fibonacci:2:13:34>> ($48<%14<Builtins::intAdd:5>> is responsible)
  $50 = dup $40 by 1
  $51 = call $3<%105<builtinTypeOf>> with $40 ($5<%31<Builtins::typeIs:19>> is responsible)
  $52 = dup $51 by 1
  $53 = call $7<%89<builtinEquals>> with $51 $9<%110<Int>> ($10<%32<Builtins::typeIs:25>> is responsible)
  $54 = dup $53 by 1
  $55 = %141<"`b | typeIs Int` was not satisfied">
  $56 = %12<Builtins::intAdd:11>
  $57 = call $12<%159<{ body_6 }>> with $53 $55<%141<"`b | typeIs Int` was not satisfied">> $47<%83<Examples:fibonacci:fibonacci:2:13:34>> ($56<%12<Builtins::intAdd:11>> is responsible)
  $58 = %92<builtinIntAdd>
  $59 = dup $26 by 1
  $60 = dup $40 by 1
  $61 = %13<Builtins::intAdd:18>
  $62 = call $58<%92<builtinIntAdd>> with $26 $40 ($61<%13<Builtins::intAdd:18>> is responsible)
  $63 = drop $57
  $64 = drop $53
  $65 = drop $51
  $66 = drop $49
  $67 = drop $44
  $68 = drop $42
  $69 = drop $40
  $70 = drop $36
  $71 = drop $33
  $72 = drop $30
  $73 = drop $28
  $74 = drop $26
  $75 = drop $22
  $76 = drop $17
  $77 = drop $11
  $78 = drop $6
  $79 = drop $1
  $80 = drop $0
  $81 = $62
body_68 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:fibonacci:2
  # Captured IDs: none
  $3 = %171<{ body_65 }>
  $4 = dup $1 by 1
  $5 = %124<2>
  $6 = %78<Examples:fibonacci:fibonacci:2:11>
  $7 = call $3<%171<{ body_65 }>> with $1 $5<%124<2>> ($6<%78<Examples:fibonacci:fibonacci:2:11>> is responsible)
  $8 = dup $1 by 1
  $9 = { body_66 capturing $1 }
  $10 = dup $0 by 1
  $11 = dup $1 by 1
  $12 = { body_67 capturing $0, $1 }
  $13 = %163<{ body_22 }>
  $14 = dup $7 by 1
  $15 = dup $9 by 1
  $16 = dup $12 by 1
  $17 = %84<Examples:fibonacci:fibonacci:2:14>
  $18 = call $13<%163<{ body_22 }>> with $7 $9 $12 ($17<%84<Examples:fibonacci:fibonacci:2:14>> is responsible)
  $19 = drop $12
  $20 = drop $9
  $21 = drop $7
  $22 = drop $1
  $23 = drop $0
  $24 = $18
body_69 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0:0
  # Captured IDs: $0
  $3 = dup $0 by 1
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = %85<Examples:fibonacci:recursive:0:0:3>
  $7 = call $0 with $0 $1 ($6<%85<Examples:fibonacci:recursive:0:0:3>> is responsible)
  $8 = drop $1
  $9 = drop $0
  $10 = $7
body_70 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:fibonacci:recursive:0
  # Captured IDs: none
  $3 = dup $0 by 1
  $4 = { body_69 capturing $0 }
  $5 = %172<{ body_68 }>
  $6 = dup $4 by 1
  $7 = dup $1 by 1
  $8 = %86<Examples:fibonacci:recursive:0:5>
  $9 = call $5<%172<{ body_68 }>> with $4 $1 ($8<%86<Examples:fibonacci:recursive:0:5>> is responsible)
  $10 = drop $4
  $11 = drop $1
  $12 = drop $0
  $13 = $9
body_71 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21:8:18
  # Captured IDs: none
  $2 = %173<{ body_70 }>
  $3 = dup $0 by 1
  $4 = %87<Examples:fibonacci:recursive:5>
  $5 = call $2<%173<{ body_70 }>> with $2<%173<{ body_70 }>> $0 ($4<%87<Examples:fibonacci:recursive:5>> is responsible)
  $6 = %104<builtinToDebugText>
  $7 = dup $5 by 1
  $8 = %30<Builtins::toDebugText:5>
  $9 = call $6<%104<builtinToDebugText>> with $5 ($8<%30<Builtins::toDebugText:5>> is responsible)
  $10 = drop $5
  $11 = drop $0
  $12 = $9
body_72 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21:8:equals:then
  # Captured IDs: $0
  $2 = %96<builtinListGet>
  $3 = dup $0 by 1
  $4 = %122<0>
  $5 = %72<Examples:fibonacci:21:8>
  $6 = call $2<%96<builtinListGet>> with $0 $4<%122<0>> ($5<%72<Examples:fibonacci:21:8>> is responsible)
  $7 = %113<Match>
  $8 = dup $6 by 1
  $9 = ($7<%113<Match>>, $6)
  $10 = drop $6
  $11 = drop $0
  $12 = $9
body_73 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21:8:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %72<Examples:fibonacci:21:8>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %126<"Expected 1 item, got ">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%126<"Expected 1 item, got ">> $5 ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $10 = dup $9 by 1
  $11 = %125<".">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%125<".">> ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_74 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21:8:equals:then
  # Captured IDs: $0
  $2 = %97<builtinListLength>
  $3 = dup $0 by 1
  $4 = %72<Examples:fibonacci:21:8>
  $5 = call $2<%97<builtinListLength>> with $0 ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $6 = %89<builtinEquals>
  $7 = %123<1>
  $8 = dup $5 by 1
  $9 = call $6<%89<builtinEquals>> with $7<%123<1>> $5 ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_72 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_73 capturing $5 }
  $14 = %91<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%91<builtinIfElse>> with $9 $11 $13 ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_75 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21:8:equals:else
  # Captured IDs: $0
  $2 = %104<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %72<Examples:fibonacci:21:8>
  $5 = call $2<%104<builtinToDebugText>> with $0 ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $6 = %103<builtinTextConcatenate>
  $7 = %131<"Expected a List, got `">
  $8 = dup $5 by 1
  $9 = call $6<%103<builtinTextConcatenate>> with $7<%131<"Expected a List, got `">> $5 ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $10 = dup $9 by 1
  $11 = %139<"`.">
  $12 = call $6<%103<builtinTextConcatenate>> with $9 $11<%139<"`.">> ($4<%72<Examples:fibonacci:21:8>> is responsible)
  $13 = %114<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%114<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_76 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21:8:case-0:matched
  # Captured IDs: $0
  $2 = %96<builtinListGet>
  $3 = dup $0 by 1
  $4 = %123<1>
  $5 = %76<Examples:fibonacci:21:8:n>
  $6 = call $2<%96<builtinListGet>> with $0 $4<%123<1>> ($5<%76<Examples:fibonacci:21:8:n>> is responsible)
  $7 = %105<builtinTypeOf>
  $8 = dup $6 by 1
  $9 = %31<Builtins::typeIs:19>
  $10 = call $7<%105<builtinTypeOf>> with $6 ($9<%31<Builtins::typeIs:19>> is responsible)
  $11 = %89<builtinEquals>
  $12 = dup $10 by 1
  $13 = %120<Text>
  $14 = %32<Builtins::typeIs:25>
  $15 = call $11<%89<builtinEquals>> with $10 $13<%120<Text>> ($14<%32<Builtins::typeIs:25>> is responsible)
  $16 = %159<{ body_6 }>
  $17 = dup $15 by 1
  $18 = %154<"`text | typeIs Text` was not satisfied">
  $19 = %75<Examples:fibonacci:21:8:9>
  $20 = %19<Builtins::intParse:5>
  $21 = call $16<%159<{ body_6 }>> with $15 $18<%154<"`text | typeIs Text` was not satisfied">> $19<%75<Examples:fibonacci:21:8:9>> ($20<%19<Builtins::intParse:5>> is responsible)
  $22 = %94<builtinIntParse>
  $23 = dup $6 by 1
  $24 = %18<Builtins::intParse:11>
  $25 = call $22<%94<builtinIntParse>> with $6 ($24<%18<Builtins::intParse:11>> is responsible)
  $26 = %169<{ body_63 }>
  $27 = dup $25 by 1
  $28 = %174<{ body_71 }>
  $29 = %73<Examples:fibonacci:21:8:19>
  $30 = call $26<%169<{ body_63 }>> with $25 $28<%174<{ body_71 }>> ($29<%73<Examples:fibonacci:21:8:19>> is responsible)
  $31 = %170<{ body_64 }>
  $32 = dup $30 by 1
  $33 = %74<Examples:fibonacci:21:8:28>
  $34 = call $31<%170<{ body_64 }>> with $30 ($33<%74<Examples:fibonacci:21:8:28>> is responsible)
  $35 = drop $30
  $36 = drop $25
  $37 = drop $21
  $38 = drop $15
  $39 = drop $10
  $40 = drop $6
  $41 = drop $0
  $42 = $34
body_77 (responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21:8:case-0:didNotMatch
  # Captured IDs: $0
  $2 = %96<builtinListGet>
  $3 = dup $0 by 1
  $4 = %123<1>
  $5 = %72<Examples:fibonacci:21:8>
  $6 = call $2<%96<builtinListGet>> with $0 $4<%123<1>> ($5<%72<Examples:fibonacci:21:8>> is responsible)
  $7 = %138<"Usage: `cargo run -- run fibonacci.candy -- <number>`">
  $8 = drop $6
  $9 = drop $0
  $10 = $7<%138<"Usage: `cargo run -- run fibonacci.candy -- <number>`">>
body_78 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:fibonacci:21
  # Captured IDs: none
  $2 = %105<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %31<Builtins::typeIs:19>
  $5 = call $2<%105<builtinTypeOf>> with $0 ($4<%31<Builtins::typeIs:19>> is responsible)
  $6 = %89<builtinEquals>
  $7 = dup $5 by 1
  $8 = %118<Struct>
  $9 = %32<Builtins::typeIs:25>
  $10 = call $6<%89<builtinEquals>> with $5 $8<%118<Struct>> ($9<%32<Builtins::typeIs:25>> is responsible)
  $11 = %159<{ body_6 }>
  $12 = dup $10 by 1
  $13 = %150<"`struct | typeIs Struct` was not satisfied">
  $14 = %71<Examples:fibonacci:21:7>
  $15 = %25<Builtins::structGet:5>
  $16 = call $11<%159<{ body_6 }>> with $10 $13<%150<"`struct | typeIs Struct` was not satisfied">> $14<%71<Examples:fibonacci:21:7>> ($15<%25<Builtins::structGet:5>> is responsible)
  $17 = %99<builtinStructHasKey>
  $18 = dup $0 by 1
  $19 = %106<Arguments>
  $20 = %22<Builtins::structGet:12>
  $21 = call $17<%99<builtinStructHasKey>> with $0 $19<%106<Arguments>> ($20<%22<Builtins::structGet:12>> is responsible)
  $22 = dup $21 by 1
  $23 = %151<"`struct | ✨.structHasKey key` was not satisfied">
  $24 = %23<Builtins::structGet:14>
  $25 = call $11<%159<{ body_6 }>> with $21 $23<%151<"`struct | ✨.structHasKey key` was not satisfied">> $14<%71<Examples:fibonacci:21:7>> ($24<%23<Builtins::structGet:14>> is responsible)
  $26 = %98<builtinStructGet>
  $27 = dup $0 by 1
  $28 = %24<Builtins::structGet:21>
  $29 = call $26<%98<builtinStructGet>> with $0 $19<%106<Arguments>> ($28<%24<Builtins::structGet:21>> is responsible)
  $30 = dup $29 by 1
  $31 = %72<Examples:fibonacci:21:8>
  $32 = call $2<%105<builtinTypeOf>> with $29 ($31<%72<Examples:fibonacci:21:8>> is responsible)
  $33 = %112<List>
  $34 = dup $32 by 1
  $35 = call $6<%89<builtinEquals>> with $33<%112<List>> $32 ($31<%72<Examples:fibonacci:21:8>> is responsible)
  $36 = dup $29 by 1
  $37 = { body_74 capturing $29 }
  $38 = dup $32 by 1
  $39 = { body_75 capturing $32 }
  $40 = %91<builtinIfElse>
  $41 = dup $35 by 1
  $42 = dup $37 by 1
  $43 = dup $39 by 1
  $44 = call $40<%91<builtinIfElse>> with $35 $37 $39 ($31<%72<Examples:fibonacci:21:8>> is responsible)
  $45 = %96<builtinListGet>
  $46 = dup $44 by 1
  $47 = %122<0>
  $48 = call $45<%96<builtinListGet>> with $44 $47<%122<0>> ($31<%72<Examples:fibonacci:21:8>> is responsible)
  $49 = dup $48 by 1
  $50 = %113<Match>
  $51 = call $6<%89<builtinEquals>> with $48 $50<%113<Match>> ($31<%72<Examples:fibonacci:21:8>> is responsible)
  $52 = dup $44 by 1
  $53 = { body_76 capturing $44 }
  $54 = dup $44 by 1
  $55 = { body_77 capturing $44 }
  $56 = dup $51 by 1
  $57 = dup $53 by 1
  $58 = dup $55 by 1
  $59 = call $40<%91<builtinIfElse>> with $51 $53 $55 ($31<%72<Examples:fibonacci:21:8>> is responsible)
  $60 = dup $0 by 1
  $61 = call $2<%105<builtinTypeOf>> with $0 ($4<%31<Builtins::typeIs:19>> is responsible)
  $62 = dup $61 by 1
  $63 = call $6<%89<builtinEquals>> with $61 $8<%118<Struct>> ($9<%32<Builtins::typeIs:25>> is responsible)
  $64 = dup $63 by 1
  $65 = %69<Examples:fibonacci:21:16>
  $66 = call $11<%159<{ body_6 }>> with $63 $13<%150<"`struct | typeIs Struct` was not satisfied">> $65<%69<Examples:fibonacci:21:16>> ($15<%25<Builtins::structGet:5>> is responsible)
  $67 = dup $0 by 1
  $68 = %117<Stdout>
  $69 = call $17<%99<builtinStructHasKey>> with $0 $68<%117<Stdout>> ($20<%22<Builtins::structGet:12>> is responsible)
  $70 = dup $69 by 1
  $71 = call $11<%159<{ body_6 }>> with $69 $23<%151<"`struct | ✨.structHasKey key` was not satisfied">> $65<%69<Examples:fibonacci:21:16>> ($24<%23<Builtins::structGet:14>> is responsible)
  $72 = dup $0 by 1
  $73 = call $26<%98<builtinStructGet>> with $0 $68<%117<Stdout>> ($28<%24<Builtins::structGet:21>> is responsible)
  $74 = dup $73 by 1
  $75 = dup $59 by 1
  $76 = %70<Examples:fibonacci:21:17>
  $77 = call $73 with $59 ($76<%70<Examples:fibonacci:21:17>> is responsible)
  $78 = drop $73
  $79 = drop $71
  $80 = drop $69
  $81 = drop $66
  $82 = drop $63
  $83 = drop $61
  $84 = drop $59
  $85 = drop $55
  $86 = drop $53
  $87 = drop $51
  $88 = drop $48
  $89 = drop $44
  $90 = drop $39
  $91 = drop $37
  $92 = drop $35
  $93 = drop $32
  $94 = drop $29
  $95 = drop $25
  $96 = drop $21
  $97 = drop $16
  $98 = drop $10
  $99 = drop $5
  $100 = drop $0
  $101 = $77
body_79 (responsible $0) =
  # Original HIR IDs: Examples:fibonacci:
  # Captured IDs: none
  $1 = %175<{ body_78 }>
