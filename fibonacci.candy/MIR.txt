# MIR for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# anonymous:$generated::needs
$50 = { $2 $3 $4 (+ responsible $1) ->
  $5 = anonymous:$generated::needs
  $6 = builtinEquals
  $7 = True
  $8 = builtinEquals
  $9 = call $8 with $2 $7 ($5 is responsible)
  $10 = builtinIfElse
  # anonymous:$generated::needs:isValueTrue:then
  $13 = { (responsible $11) ->
    $12 = $9
  }
  # anonymous:$generated::needs:isValueTrue:else
  $18 = { (responsible $14) ->
    $15 = False
    $16 = builtinEquals
    $17 = call $16 with $2 $15 ($5 is responsible)
  }
  $19 = call $10 with $9 $13 $18 ($5 is responsible)
  $20 = builtinIfElse
  # anonymous:$generated::needs:isConditionBool:then
  $23 = { (responsible $21) ->
    $22 = Nothing
  }
  # anonymous:$generated::needs:isConditionBool:else
  $27 = { (responsible $24) ->
    $25 = "The `condition` must be either `True` or `False`."
    $26 = panicking because $25 ($1 is at fault)
  }
  $28 = call $20 with $19 $23 $27 ($5 is responsible)
  $29 = builtinTypeOf
  $30 = call $29 with $3 ($1 is responsible)
  $31 = Text
  $32 = call $6 with $30 $31 ($1 is responsible)
  $33 = builtinIfElse
  # anonymous:$generated::needs:isReasonText:then
  $36 = { (responsible $34) ->
    $35 = Nothing
  }
  # anonymous:$generated::needs:isReasonText:else
  $40 = { (responsible $37) ->
    $38 = "The `reason` must be a text."
    $39 = panicking because $38 ($1 is at fault)
  }
  $41 = call $33 with $32 $36 $40 ($5 is responsible)
  $42 = builtinIfElse
  # anonymous:$generated::needs:condition:then
  $45 = { (responsible $43) ->
    $44 = Nothing
  }
  # anonymous:$generated::needs:condition:else
  $48 = { (responsible $46) ->
    $47 = panicking because $3 ($4 is at fault)
  }
  $49 = call $42 with $2 $45 $48 ($5 is responsible)
}
$51 = Examples:fibonacci:
# Examples:fibonacci:use
$55 = { $53 (+ responsible $52) ->
  $54 = use $53 (relative to Examples:fibonacci; $52 is responsible)
}
$56 = $55
$57 = builtinTextConcatenate
$58 = builtinTypeOf
$59 = Text
$60 = builtinEquals
$61 = builtinIfElse
$62 = builtinToDebugText
$63 = "Builtins"
$64 = Examples:fibonacci:8
$65 = call $56 with $63 ($64 is responsible)
$66 = $65
$67 = $66
$68 = Nothing
$69 = $55
$70 = builtinTextConcatenate
$71 = builtinTypeOf
$72 = Text
$73 = builtinEquals
$74 = builtinIfElse
$75 = builtinToDebugText
$76 = "Core"
$77 = Examples:fibonacci:18
$78 = call $69 with $76 ($77 is responsible)
$79 = Examples:fibonacci:19
$80 = Match
$81 = NoMatch
$82 = Struct
$83 = builtinTypeOf
$84 = call $83 with $78 ($79 is responsible)
$85 = builtinEquals
$86 = call $85 with $82 $84 ($79 is responsible)
$87 = builtinIfElse
# Examples:fibonacci:19:equals:then
$206 = { (responsible $88) ->
  $89 = builtinStructHasKey
  $90 = builtinStructGet
  $91 = Int
  $92 = call $89 with $78 $91 ($79 is responsible)
  $93 = builtinIfElse
  # Examples:fibonacci:19:hasKey:then
  $97 = { (responsible $94) ->
    $95 = call $90 with $78 $91 ($79 is responsible)
    $96 = ($80, $95)
  }
  # Examples:fibonacci:19:hasKey:else
  $111 = { (responsible $98) ->
    $99 = builtinToDebugText
    $100 = call $99 with $91 ($79 is responsible)
    $101 = call $99 with $78 ($79 is responsible)
    $102 = "Struct doesn't contain key `"
    $103 = "`: `"
    $104 = "`."
    $105 = builtinTextConcatenate
    $106 = call $105 with $102 $100 ($79 is responsible)
    $107 = call $105 with $106 $103 ($79 is responsible)
    $108 = call $105 with $107 $101 ($79 is responsible)
    $109 = call $105 with $108 $104 ($79 is responsible)
    $110 = ($81, $109)
  }
  $112 = call $93 with $92 $97 $111 ($79 is responsible)
  $113 = builtinListGet
  $114 = 0
  $115 = call $113 with $112 $114 ($79 is responsible)
  $116 = builtinEquals
  $117 = Match
  $118 = call $116 with $115 $117 ($79 is responsible)
  $119 = builtinIfElse
  # Examples:fibonacci:19:isMatch:then
  $201 = { (responsible $120) ->
    $121 = builtinListGet
    $122 = 1
    $123 = call $121 with $112 $122 ($79 is responsible)
    $124 = Result
    $125 = call $89 with $78 $124 ($79 is responsible)
    $126 = builtinIfElse
    # Examples:fibonacci:19:hasKey:then
    $130 = { (responsible $127) ->
      $128 = call $90 with $78 $124 ($79 is responsible)
      $129 = ($80, $128)
    }
    # Examples:fibonacci:19:hasKey:else
    $144 = { (responsible $131) ->
      $132 = builtinToDebugText
      $133 = call $132 with $124 ($79 is responsible)
      $134 = call $132 with $78 ($79 is responsible)
      $135 = "Struct doesn't contain key `"
      $136 = "`: `"
      $137 = "`."
      $138 = builtinTextConcatenate
      $139 = call $138 with $135 $133 ($79 is responsible)
      $140 = call $138 with $139 $136 ($79 is responsible)
      $141 = call $138 with $140 $134 ($79 is responsible)
      $142 = call $138 with $141 $137 ($79 is responsible)
      $143 = ($81, $142)
    }
    $145 = call $126 with $125 $130 $144 ($79 is responsible)
    $146 = builtinListGet
    $147 = 0
    $148 = call $146 with $145 $147 ($79 is responsible)
    $149 = builtinEquals
    $150 = Match
    $151 = call $149 with $148 $150 ($79 is responsible)
    $152 = builtinIfElse
    # Examples:fibonacci:19:isMatch:then
    $196 = { (responsible $153) ->
      $154 = builtinListGet
      $155 = 1
      $156 = call $154 with $145 $155 ($79 is responsible)
      $157 = ToDebugText
      $158 = call $89 with $78 $157 ($79 is responsible)
      $159 = builtinIfElse
      # Examples:fibonacci:19:hasKey:then
      $163 = { (responsible $160) ->
        $161 = call $90 with $78 $157 ($79 is responsible)
        $162 = ($80, $161)
      }
      # Examples:fibonacci:19:hasKey:else
      $177 = { (responsible $164) ->
        $165 = builtinToDebugText
        $166 = call $165 with $157 ($79 is responsible)
        $167 = call $165 with $78 ($79 is responsible)
        $168 = "Struct doesn't contain key `"
        $169 = "`: `"
        $170 = "`."
        $171 = builtinTextConcatenate
        $172 = call $171 with $168 $166 ($79 is responsible)
        $173 = call $171 with $172 $169 ($79 is responsible)
        $174 = call $171 with $173 $167 ($79 is responsible)
        $175 = call $171 with $174 $170 ($79 is responsible)
        $176 = ($81, $175)
      }
      $178 = call $159 with $158 $163 $177 ($79 is responsible)
      $179 = builtinListGet
      $180 = 0
      $181 = call $179 with $178 $180 ($79 is responsible)
      $182 = builtinEquals
      $183 = Match
      $184 = call $182 with $181 $183 ($79 is responsible)
      $185 = builtinIfElse
      # Examples:fibonacci:19:isMatch:then
      $191 = { (responsible $186) ->
        $187 = builtinListGet
        $188 = 1
        $189 = call $187 with $178 $188 ($79 is responsible)
        $190 = ($80, $123, $156, $189)
      }
      # Examples:fibonacci:19:isMatch:else
      $194 = { (responsible $192) ->
        $193 = $178
      }
      $195 = call $185 with $184 $191 $194 ($79 is responsible)
    }
    # Examples:fibonacci:19:isMatch:else
    $199 = { (responsible $197) ->
      $198 = $145
    }
    $200 = call $152 with $151 $196 $199 ($79 is responsible)
  }
  # Examples:fibonacci:19:isMatch:else
  $204 = { (responsible $202) ->
    $203 = $112
  }
  $205 = call $119 with $118 $201 $204 ($79 is responsible)
}
# Examples:fibonacci:19:equals:else
$220 = { (responsible $207) ->
  $208 = builtinToDebugText
  $209 = call $208 with $82 ($79 is responsible)
  $210 = call $208 with $84 ($79 is responsible)
  $211 = "Expected a "
  $212 = ", got `"
  $213 = "`."
  $214 = builtinTextConcatenate
  $215 = call $214 with $211 $209 ($79 is responsible)
  $216 = call $214 with $215 $212 ($79 is responsible)
  $217 = call $214 with $216 $210 ($79 is responsible)
  $218 = call $214 with $217 $213 ($79 is responsible)
  $219 = ($81, $218)
}
$221 = call $87 with $86 $206 $220 ($79 is responsible)
$222 = builtinListGet
$223 = 0
$224 = call $222 with $221 $223 ($79 is responsible)
$225 = builtinEquals
$226 = Match
$227 = call $225 with $224 $226 ($79 is responsible)
$228 = builtinIfElse
# Examples:fibonacci:19:isMatch:then
$231 = { (responsible $229) ->
  $230 = Nothing
}
# Examples:fibonacci:19:isMatch:else
$237 = { (responsible $232) ->
  $233 = builtinListGet
  $234 = 1
  $235 = call $233 with $221 $234 ($79 is responsible)
  $236 = panicking because $235 ($79 is at fault)
}
$238 = call $228 with $227 $231 $237 ($79 is responsible)
$239 = builtinListGet
$240 = 1
$241 = Examples:fibonacci:int
$242 = call $239 with $221 $240 ($241 is responsible)
$243 = builtinListGet
$244 = 2
$245 = Examples:fibonacci:result
$246 = call $243 with $221 $244 ($245 is responsible)
$247 = builtinListGet
$248 = 3
$249 = Examples:fibonacci:toDebugText
$250 = call $247 with $221 $248 ($249 is responsible)
$251 = Nothing
# Examples:fibonacci:recursive
$283 = { $253 $254 (+ responsible $252) ->
  # Examples:fibonacci:recursive:0
  $274 = { $256 $257 (+ responsible $255) ->
    # Examples:fibonacci:recursive:0:0
    $265 = { $259 (+ responsible $258) ->
      $260 = $256
      $261 = $256
      $262 = $259
      $263 = Examples:fibonacci:recursive:0:0:3
      $264 = call $260 with $261 $262 ($263 is responsible)
    }
    $266 = $265
    $267 = $266
    $268 = Nothing
    $269 = $254
    $270 = $267
    $271 = $257
    $272 = Examples:fibonacci:recursive:0:5
    $273 = call $269 with $270 $271 ($272 is responsible)
  }
  $275 = $274
  $276 = $275
  $277 = Nothing
  $278 = $276
  $279 = $276
  $280 = $253
  $281 = Examples:fibonacci:recursive:5
  $282 = call $278 with $279 $280 ($281 is responsible)
}
$284 = $283
# Examples:fibonacci:compareTo
$307 = { $286 $287 (+ responsible $285) ->
  $288 = $286
  $289 = "Builtins"
  $290 = Examples:fibonacci:compareTo:2
  $291 = call $55 with $289 ($290 is responsible)
  $292 = builtinStructGet
  $293 = StructGet
  $294 = Examples:fibonacci:compareTo:5
  $295 = call $292 with $291 $293 ($294 is responsible)
  $296 = $67
  $297 = IntCompareTo
  $298 = Examples:fibonacci:compareTo:8
  $299 = call $295 with $296 $297 ($298 is responsible)
  $300 = $287
  $301 = Examples:fibonacci:compareTo:10
  $302 = call $299 with $288 $300 ($301 is responsible)
  $303 = $302
  $304 = $303
  $305 = Nothing
  $306 = $304
}
$308 = $307
# Examples:fibonacci:isLessThan
$331 = { $310 $311 (+ responsible $309) ->
  $312 = "Builtins"
  $313 = Examples:fibonacci:isLessThan:1
  $314 = call $55 with $312 ($313 is responsible)
  $315 = builtinStructGet
  $316 = StructGet
  $317 = Examples:fibonacci:isLessThan:4
  $318 = call $315 with $314 $316 ($317 is responsible)
  $319 = $67
  $320 = Equals
  $321 = Examples:fibonacci:isLessThan:7
  $322 = call $318 with $319 $320 ($321 is responsible)
  $323 = $308
  $324 = $310
  $325 = $311
  $326 = Examples:fibonacci:isLessThan:11
  $327 = call $323 with $324 $325 ($326 is responsible)
  $328 = Less
  $329 = Examples:fibonacci:isLessThan:13
  $330 = call $322 with $327 $328 ($329 is responsible)
}
$332 = $331
# Examples:fibonacci:fibonacci
$415 = { $334 (+ responsible $333) ->
  $335 = $284
  $336 = $334
  # Examples:fibonacci:fibonacci:2
  $412 = { $338 $339 (+ responsible $337) ->
    $340 = "Builtins"
    $341 = Examples:fibonacci:fibonacci:2:1
    $342 = call $55 with $340 ($341 is responsible)
    $343 = builtinStructGet
    $344 = StructGet
    $345 = Examples:fibonacci:fibonacci:2:4
    $346 = call $343 with $342 $344 ($345 is responsible)
    $347 = $67
    $348 = IfElse
    $349 = Examples:fibonacci:fibonacci:2:7
    $350 = call $346 with $347 $348 ($349 is responsible)
    $351 = $339
    $352 = $332
    $353 = 2
    $354 = Examples:fibonacci:fibonacci:2:11
    $355 = call $352 with $351 $353 ($354 is responsible)
    # Examples:fibonacci:fibonacci:2:12
    $358 = { (responsible $356) ->
      $357 = $339
    }
    # Examples:fibonacci:fibonacci:2:13
    $409 = { (responsible $359) ->
      $360 = $338
      $361 = $339
      $362 = "Builtins"
      $363 = Examples:fibonacci:fibonacci:2:13:3
      $364 = call $55 with $362 ($363 is responsible)
      $365 = builtinStructGet
      $366 = StructGet
      $367 = Examples:fibonacci:fibonacci:2:13:6
      $368 = call $365 with $364 $366 ($367 is responsible)
      $369 = $67
      $370 = IntSubtract
      $371 = Examples:fibonacci:fibonacci:2:13:9
      $372 = call $368 with $369 $370 ($371 is responsible)
      $373 = 1
      $374 = Examples:fibonacci:fibonacci:2:13:11
      $375 = call $372 with $361 $373 ($374 is responsible)
      $376 = Examples:fibonacci:fibonacci:2:13:12
      $377 = call $360 with $375 ($376 is responsible)
      $378 = "Builtins"
      $379 = Examples:fibonacci:fibonacci:2:13:14
      $380 = call $55 with $378 ($379 is responsible)
      $381 = builtinStructGet
      $382 = StructGet
      $383 = Examples:fibonacci:fibonacci:2:13:17
      $384 = call $381 with $380 $382 ($383 is responsible)
      $385 = $67
      $386 = IntAdd
      $387 = Examples:fibonacci:fibonacci:2:13:20
      $388 = call $384 with $385 $386 ($387 is responsible)
      $389 = $338
      $390 = $339
      $391 = "Builtins"
      $392 = Examples:fibonacci:fibonacci:2:13:24
      $393 = call $55 with $391 ($392 is responsible)
      $394 = builtinStructGet
      $395 = StructGet
      $396 = Examples:fibonacci:fibonacci:2:13:27
      $397 = call $394 with $393 $395 ($396 is responsible)
      $398 = $67
      $399 = IntSubtract
      $400 = Examples:fibonacci:fibonacci:2:13:30
      $401 = call $397 with $398 $399 ($400 is responsible)
      $402 = 2
      $403 = Examples:fibonacci:fibonacci:2:13:32
      $404 = call $401 with $390 $402 ($403 is responsible)
      $405 = Examples:fibonacci:fibonacci:2:13:33
      $406 = call $389 with $404 ($405 is responsible)
      $407 = Examples:fibonacci:fibonacci:2:13:34
      $408 = call $388 with $377 $406 ($407 is responsible)
    }
    $410 = Examples:fibonacci:fibonacci:2:14
    $411 = call $350 with $355 $358 $409 ($410 is responsible)
  }
  $413 = Examples:fibonacci:fibonacci:3
  $414 = call $335 with $336 $412 ($413 is responsible)
}
$416 = $415
# Examples:fibonacci:21
$606 = { $418 (+ responsible $417) ->
  $419 = "Builtins"
  $420 = Examples:fibonacci:21:1
  $421 = call $55 with $419 ($420 is responsible)
  $422 = builtinStructGet
  $423 = StructGet
  $424 = Examples:fibonacci:21:4
  $425 = call $422 with $421 $423 ($424 is responsible)
  $426 = $418
  $427 = Arguments
  $428 = Examples:fibonacci:21:7
  $429 = call $425 with $426 $427 ($428 is responsible)
  $430 = Examples:fibonacci:21:8
  $431 = Match
  $432 = NoMatch
  $433 = List
  $434 = builtinTypeOf
  $435 = call $434 with $429 ($430 is responsible)
  $436 = builtinEquals
  $437 = call $436 with $433 $435 ($430 is responsible)
  $438 = builtinIfElse
  # Examples:fibonacci:21:8:equals:then
  $481 = { (responsible $439) ->
    $440 = 1
    $441 = builtinListLength
    $442 = call $441 with $429 ($430 is responsible)
    $443 = builtinEquals
    $444 = call $443 with $440 $442 ($430 is responsible)
    $445 = builtinIfElse
    # Examples:fibonacci:21:8:equals:then
    $468 = { (responsible $446) ->
      $447 = builtinListGet
      $448 = 0
      $449 = call $447 with $429 $448 ($430 is responsible)
      $450 = ($431, $449)
      $451 = builtinListGet
      $452 = 0
      $453 = call $451 with $450 $452 ($430 is responsible)
      $454 = builtinEquals
      $455 = Match
      $456 = call $454 with $453 $455 ($430 is responsible)
      $457 = builtinIfElse
      # Examples:fibonacci:21:8:isMatch:then
      $463 = { (responsible $458) ->
        $459 = builtinListGet
        $460 = 1
        $461 = call $459 with $450 $460 ($430 is responsible)
        $462 = ($431, $461)
      }
      # Examples:fibonacci:21:8:isMatch:else
      $466 = { (responsible $464) ->
        $465 = $450
      }
      $467 = call $457 with $456 $463 $466 ($430 is responsible)
    }
    # Examples:fibonacci:21:8:equals:else
    $479 = { (responsible $469) ->
      $470 = builtinToDebugText
      $471 = call $470 with $440 ($430 is responsible)
      $472 = call $470 with $442 ($430 is responsible)
      $473 = "Expected 1 item, got "
      $474 = "."
      $475 = builtinTextConcatenate
      $476 = call $475 with $473 $472 ($430 is responsible)
      $477 = call $475 with $476 $474 ($430 is responsible)
      $478 = ($432, $477)
    }
    $480 = call $445 with $444 $468 $479 ($430 is responsible)
  }
  # Examples:fibonacci:21:8:equals:else
  $495 = { (responsible $482) ->
    $483 = builtinToDebugText
    $484 = call $483 with $433 ($430 is responsible)
    $485 = call $483 with $435 ($430 is responsible)
    $486 = "Expected a "
    $487 = ", got `"
    $488 = "`."
    $489 = builtinTextConcatenate
    $490 = call $489 with $486 $484 ($430 is responsible)
    $491 = call $489 with $490 $487 ($430 is responsible)
    $492 = call $489 with $491 $485 ($430 is responsible)
    $493 = call $489 with $492 $488 ($430 is responsible)
    $494 = ($432, $493)
  }
  $496 = call $438 with $437 $481 $495 ($430 is responsible)
  $497 = builtinIfElse
  $498 = builtinListGet
  $499 = 0
  $500 = call $498 with $496 $499 ($430 is responsible)
  $501 = builtinEquals
  $502 = Match
  $503 = call $501 with $500 $502 ($430 is responsible)
  # Examples:fibonacci:21:8:case-0:didNotMatch
  $534 = { (responsible $504) ->
    $505 = Match
    $506 = NoMatch
    $507 = ($505, $429)
    $508 = builtinIfElse
    $509 = builtinListGet
    $510 = 0
    $511 = call $509 with $507 $510 ($430 is responsible)
    $512 = builtinEquals
    $513 = Match
    $514 = call $512 with $511 $513 ($430 is responsible)
    # Examples:fibonacci:21:8:case-1:didNotMatch
    $518 = { (responsible $515) ->
      $516 = "No case matched the given expression."
      $517 = panicking because $516 ($430 is at fault)
    }
    # Examples:fibonacci:21:8:case-1:patternMatch
    $532 = { (responsible $519) ->
      $520 = builtinListGet
      $521 = 1
      $522 = Examples:fibonacci:21:8:_
      $523 = call $520 with $507 $521 ($522 is responsible)
      $524 = builtinIfElse
      $525 = builtinTextConcatenate
      $526 = builtinTypeOf
      $527 = Text
      $528 = builtinEquals
      $529 = builtinIfElse
      $530 = builtinToDebugText
      $531 = "Usage: `cargo run -- run fibonacci.candy -- <number>`"
    }
    $533 = call $508 with $514 $532 $518 ($430 is responsible)
  }
  # Examples:fibonacci:21:8:case-0:patternMatch
  $591 = { (responsible $535) ->
    $536 = builtinListGet
    $537 = 1
    $538 = Examples:fibonacci:21:8:n
    $539 = call $536 with $496 $537 ($538 is responsible)
    $540 = builtinIfElse
    $541 = $539
    $542 = "Builtins"
    $543 = Examples:fibonacci:21:8:2
    $544 = call $55 with $542 ($543 is responsible)
    $545 = builtinStructGet
    $546 = StructGet
    $547 = Examples:fibonacci:21:8:5
    $548 = call $545 with $544 $546 ($547 is responsible)
    $549 = $242
    $550 = Parse
    $551 = Examples:fibonacci:21:8:8
    $552 = call $548 with $549 $550 ($551 is responsible)
    $553 = Examples:fibonacci:21:8:9
    $554 = call $552 with $541 ($553 is responsible)
    $555 = "Builtins"
    $556 = Examples:fibonacci:21:8:11
    $557 = call $55 with $555 ($556 is responsible)
    $558 = builtinStructGet
    $559 = StructGet
    $560 = Examples:fibonacci:21:8:14
    $561 = call $558 with $557 $559 ($560 is responsible)
    $562 = $246
    $563 = Map
    $564 = Examples:fibonacci:21:8:17
    $565 = call $561 with $562 $563 ($564 is responsible)
    # Examples:fibonacci:21:8:18
    $575 = { $567 (+ responsible $566) ->
      $568 = $416
      $569 = $567
      $570 = Examples:fibonacci:21:8:18:2
      $571 = call $568 with $569 ($570 is responsible)
      $572 = $250
      $573 = Examples:fibonacci:21:8:18:4
      $574 = call $572 with $571 ($573 is responsible)
    }
    $576 = Examples:fibonacci:21:8:19
    $577 = call $565 with $554 $575 ($576 is responsible)
    $578 = "Builtins"
    $579 = Examples:fibonacci:21:8:21
    $580 = call $55 with $578 ($579 is responsible)
    $581 = builtinStructGet
    $582 = StructGet
    $583 = Examples:fibonacci:21:8:24
    $584 = call $581 with $580 $582 ($583 is responsible)
    $585 = $246
    $586 = GetValue
    $587 = Examples:fibonacci:21:8:27
    $588 = call $584 with $585 $586 ($587 is responsible)
    $589 = Examples:fibonacci:21:8:28
    $590 = call $588 with $577 ($589 is responsible)
  }
  $592 = call $497 with $503 $591 $534 ($430 is responsible)
  $593 = "Builtins"
  $594 = Examples:fibonacci:21:10
  $595 = call $55 with $593 ($594 is responsible)
  $596 = builtinStructGet
  $597 = StructGet
  $598 = Examples:fibonacci:21:13
  $599 = call $596 with $595 $597 ($598 is responsible)
  $600 = $418
  $601 = Stdout
  $602 = Examples:fibonacci:21:16
  $603 = call $599 with $600 $601 ($602 is responsible)
  $604 = Examples:fibonacci:21:17
  $605 = call $603 with $592 ($604 is responsible)
}
$607 = $606
$608 = $607
$609 = Nothing
$610 = Main
$611 = [$610: $608]
$612 = builtinStructHasKey
$613 = Main
$614 = call $612 with $611 $613 ($51 is responsible)
$615 = "The module doesn't export a main function."
$616 = builtinIfElse
# Examples:fibonacci:then
$619 = { (responsible $617) ->
  $618 = Nothing
}
# Examples:fibonacci:else
$622 = { (responsible $620) ->
  $621 = panicking because $615 ($51 is at fault)
}
$623 = call $616 with $614 $619 $622 ($51 is responsible)
$624 = builtinStructGet
$625 = call $624 with $611 $613 ($51 is responsible)
$626 = builtinTypeOf
$627 = call $626 with $625 ($51 is responsible)
$628 = builtinEquals
$629 = Function
$630 = call $628 with $627 $629 ($51 is responsible)
$631 = "The exported main value is not a function."
$632 = builtinIfElse
# Examples:fibonacci:then
$635 = { (responsible $633) ->
  $634 = Nothing
}
# Examples:fibonacci:else
$638 = { (responsible $636) ->
  $637 = panicking because $631 ($51 is at fault)
}
$639 = call $632 with $630 $635 $638 ($51 is responsible)
$640 = builtinGetArgumentCount
$641 = call $640 with $625 ($51 is responsible)
$642 = 1
$643 = call $628 with $641 $642 ($51 is responsible)
$644 = "The exported main function doesn't accept exactly one parameter."
$645 = builtinIfElse
# Examples:fibonacci:then
$648 = { (responsible $646) ->
  $647 = Nothing
}
# Examples:fibonacci:else
$651 = { (responsible $649) ->
  $650 = panicking because $644 ($51 is at fault)
}
$652 = call $645 with $643 $648 $651 ($51 is responsible)
$653 = $625
