; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intParse:11" = global ptr null
@"Builtins::intParse:5" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:13" = global ptr null
@"Core:result:flatMap:16" = global ptr null
@"Core:result:flatMap:19:2" = global ptr null
@"Core:result:flatMap:21" = global ptr null
@"Core:result:flatMap:4" = global ptr null
@"Core:result:getValue:14" = global ptr null
@"Core:result:getValue:4" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:map:16" = global ptr null
@"Core:result:map:19:3" = global ptr null
@"Core:result:map:20" = global ptr null
@"Core:result:map:4" = global ptr null
@"Core:result:mapOr:16" = global ptr null
@"Core:result:mapOr:21" = global ptr null
@"Core:result:mapOr:4" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Examples:fibonacci:21:16" = global ptr null
@"Examples:fibonacci:21:17" = global ptr null
@"Examples:fibonacci:21:7" = global ptr null
@"Examples:fibonacci:21:8" = global ptr null
@"Examples:fibonacci:21:8:19" = global ptr null
@"Examples:fibonacci:21:8:28" = global ptr null
@"Examples:fibonacci:21:8:9" = global ptr null
@"Examples:fibonacci:21:8:n" = global ptr null
@"Examples:fibonacci:compareTo:10" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:11" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:12" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:32" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:33" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:34" = global ptr null
@"Examples:fibonacci:fibonacci:2:14" = global ptr null
@"Examples:fibonacci:recursive:0:0:3" = global ptr null
@"Examples:fibonacci:recursive:0:5" = global ptr null
@"Examples:fibonacci:recursive:5" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_parse = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Arguments = global ptr null
@tag_Error = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_Int = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_Match = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Ok = global ptr null
@tag_Stdout = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@text_. = global ptr null
@"text_Expected 1 item, got " = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a List, got `" = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_Usage: `cargo run -- run fibonacci.candy -- <number>`" = global ptr null
@"text_`." = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then" = global ptr null
@"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.2 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__ifElse_1_equals_else.4 = global ptr null
@2 = global ptr null
@fun_Builtins__ifElse_1_equals_else.6 = global ptr null
@3 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.8 = global ptr null
@fun_Builtins__ifElse_1_equals_then.10 = global ptr null
@fun_Builtins__ifElse_1_equals_else.12 = global ptr null
@4 = global ptr null
@fun_Builtins__ifElse_1_equals_else.14 = global ptr null
@5 = global ptr null
@fun_Builtins__ifElse_1_equals_else.16 = global ptr null
@6 = global ptr null
@7 = global ptr null
@"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else" = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.18 = global ptr null
@fun_Core_result_is_1_equals_then.20 = global ptr null
@8 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@9 = global ptr null
@fun_Core_result_is_1_equals_else.22 = global ptr null
@10 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.24 = global ptr null
@fun_Core_result_is_1_equals_then.26 = global ptr null
@fun_Core_result_is_1_equals_then.28 = global ptr null
@11 = global ptr null
@fun_Core_result_is_1_equals_else.30 = global ptr null
@12 = global ptr null
@fun_Core_result_is_1_equals_else.32 = global ptr null
@13 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@fun_Core_function_is1_11.34 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.36 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.38 = global ptr null
@14 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@15 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.40 = global ptr null
@16 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.42 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.44 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.46 = global ptr null
@17 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.48 = global ptr null
@18 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.50 = global ptr null
@19 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_matched = global ptr null
@fun_Core_result_mapOr = global ptr null
@fun_Core_result_is_1_equals_then.52 = global ptr null
@fun_Core_result_is_1_equals_then.54 = global ptr null
@fun_Core_result_is_1_equals_then.56 = global ptr null
@20 = global ptr null
@fun_Core_result_is_1_equals_else.58 = global ptr null
@21 = global ptr null
@fun_Core_result_is_1_equals_else.60 = global ptr null
@22 = global ptr null
@fun_Core_result_is_1_isMatch_then.62 = global ptr null
@fun_Core_result_is_1_isMatch_else.64 = global ptr null
@fun_Core_result_is_1_equals_then.66 = global ptr null
@fun_Core_result_is_1_equals_then.68 = global ptr null
@fun_Core_result_is_1_equals_then.70 = global ptr null
@23 = global ptr null
@fun_Core_result_is_1_equals_else.72 = global ptr null
@24 = global ptr null
@fun_Core_result_is_1_equals_else.74 = global ptr null
@25 = global ptr null
@fun_Core_function_is1_11.76 = global ptr null
@fun_Core_result_mapOr_20 = global ptr null
@fun_Core_result_flatMap = global ptr null
@fun_Core_result_is_1_equals_then.78 = global ptr null
@fun_Core_result_is_1_equals_then.80 = global ptr null
@fun_Core_result_is_1_equals_then.82 = global ptr null
@26 = global ptr null
@fun_Core_result_is_1_equals_else.84 = global ptr null
@27 = global ptr null
@fun_Core_result_is_1_equals_else.86 = global ptr null
@28 = global ptr null
@fun_Core_result_is_1_isMatch_then.88 = global ptr null
@fun_Core_result_is_1_isMatch_else.90 = global ptr null
@fun_Core_result_is_1_equals_then.92 = global ptr null
@fun_Core_result_is_1_equals_then.94 = global ptr null
@fun_Core_result_is_1_equals_then.96 = global ptr null
@29 = global ptr null
@fun_Core_result_is_1_equals_else.98 = global ptr null
@30 = global ptr null
@fun_Core_result_is_1_equals_else.100 = global ptr null
@31 = global ptr null
@fun_Core_function_is1_11.102 = global ptr null
@fun_Core_result_flatMap_19 = global ptr null
@fun_Core_result_map = global ptr null
@fun_Core_result_is_1_equals_then.104 = global ptr null
@fun_Core_result_is_1_equals_then.106 = global ptr null
@fun_Core_result_is_1_equals_then.108 = global ptr null
@32 = global ptr null
@fun_Core_result_is_1_equals_else.110 = global ptr null
@33 = global ptr null
@fun_Core_result_is_1_equals_else.112 = global ptr null
@34 = global ptr null
@fun_Core_result_is_1_isMatch_then.114 = global ptr null
@fun_Core_result_is_1_isMatch_else.116 = global ptr null
@fun_Core_result_is_1_equals_then.118 = global ptr null
@fun_Core_result_is_1_equals_then.120 = global ptr null
@fun_Core_result_is_1_equals_then.122 = global ptr null
@35 = global ptr null
@fun_Core_result_is_1_equals_else.124 = global ptr null
@36 = global ptr null
@fun_Core_result_is_1_equals_else.126 = global ptr null
@37 = global ptr null
@fun_Core_function_is1_11.128 = global ptr null
@fun_Core_result_map_19 = global ptr null
@tag_Ok.129 = global ptr null
@fun_Core_result_getValue = global ptr null
@fun_Core_result_is_1_equals_then.131 = global ptr null
@fun_Core_result_is_1_equals_then.133 = global ptr null
@fun_Core_result_is_1_equals_then.135 = global ptr null
@38 = global ptr null
@fun_Core_result_is_1_equals_else.137 = global ptr null
@39 = global ptr null
@fun_Core_result_is_1_equals_else.139 = global ptr null
@40 = global ptr null
@fun_Core_result_is_1_isMatch_then.141 = global ptr null
@fun_Core_result_is_1_isMatch_else.143 = global ptr null
@fun_Core_result_is_1_equals_then.145 = global ptr null
@fun_Core_result_is_1_equals_then.147 = global ptr null
@fun_Core_result_is_1_equals_then.149 = global ptr null
@41 = global ptr null
@fun_Core_result_is_1_equals_else.151 = global ptr null
@42 = global ptr null
@fun_Core_result_is_1_equals_else.153 = global ptr null
@43 = global ptr null
@fun_Examples_fibonacci_fibonacci_2 = global ptr null
@fun_Examples_fibonacci_fibonacci_2_12 = global ptr null
@fun_Examples_fibonacci_fibonacci_2_13 = global ptr null
@fun_Examples_fibonacci_recursive_0 = global ptr null
@fun_Examples_fibonacci_recursive_0_0 = global ptr null
@fun_Examples_fibonacci_21_8_18 = global ptr null
@fun_Examples_fibonacci_21_8_case-0_didNotMatch = global ptr null
@fun_Examples_fibonacci_21 = global ptr null
@fun_Examples_fibonacci_21_8_equals_then = global ptr null
@fun_Examples_fibonacci_21_8_equals_then.155 = global ptr null
@44 = global ptr null
@fun_Examples_fibonacci_21_8_equals_else = global ptr null
@45 = global ptr null
@fun_Examples_fibonacci_21_8_equals_else.157 = global ptr null
@46 = global ptr null
@fun_Examples_fibonacci_21_8_case-0_matched = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::getArgumentCount:11", align 8
  %4 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::getArgumentCount:5", align 8
  %6 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::ifElse:1", align 8
  %8 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::ifElse:11", align 8
  %10 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::ifElse:14", align 8
  %12 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::ifElse:19", align 8
  %14 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::ifElse:25", align 8
  %16 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::ifElse:28", align 8
  %18 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::ifElse:33", align 8
  %20 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::ifElse:41", align 8
  %22 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:5", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::intAdd:11", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::intAdd:18", align 8
  %28 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::intAdd:5", align 8
  %30 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::intCompareTo:18", align 8
  %32 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::intCompareTo:5", align 8
  %34 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intParse:11\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::intParse:11", align 8
  %36 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::intParse:5\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::intParse:5", align 8
  %38 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::intSubtract:18", align 8
  %40 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intSubtract:5", align 8
  %42 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::structGet:12", align 8
  %44 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::structGet:14", align 8
  %46 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::structGet:21", align 8
  %48 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::structGet:5", align 8
  %50 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::tagGetValue:11", align 8
  %52 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::tagGetValue:13", align 8
  %54 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::tagGetValue:19", align 8
  %56 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::tagGetValue:5", align 8
  %58 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::toDebugText:5", align 8
  %60 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::typeIs:19", align 8
  %62 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::typeIs:25", align 8
  %64 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::typeOf:5", align 8
  %66 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Core:function:is1:11:3", align 8
  %68 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Core:function:is1:13", align 8
  %70 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:16\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Core:result:flatMap:16", align 8
  %72 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:flatMap:19:2\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Core:result:flatMap:19:2", align 8
  %74 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:21\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Core:result:flatMap:21", align 8
  %76 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:4\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Core:result:flatMap:4", align 8
  %78 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:getValue:14\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Core:result:getValue:14", align 8
  %80 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:getValue:4\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Core:result:getValue:4", align 8
  %82 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Core:result:is:1", align 8
  %84 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:16\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Core:result:map:16", align 8
  %86 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:map:19:3\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Core:result:map:19:3", align 8
  %88 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:20\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Core:result:map:20", align 8
  %90 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:4\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Core:result:map:4", align 8
  %92 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:16\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Core:result:mapOr:16", align 8
  %94 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:21\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Core:result:mapOr:21", align 8
  %96 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:4\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Core:result:mapOr:4", align 8
  %98 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Core:result:mapOrElse:16", align 8
  %100 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Core:result:mapOrElse:28", align 8
  %102 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Core:result:mapOrElse:30", align 8
  %104 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Core:result:mapOrElse:30:2", align 8
  %106 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Core:result:mapOrElse:30:5", align 8
  %108 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Core:result:mapOrElse:30:value", align 8
  %110 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %112 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Core:result:mapOrElse:4", align 8
  %114 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:fibonacci:21:16\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Examples:fibonacci:21:16", align 8
  %116 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:fibonacci:21:17\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Examples:fibonacci:21:17", align 8
  %118 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:fibonacci:21:7\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Examples:fibonacci:21:7", align 8
  %120 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:fibonacci:21:8\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Examples:fibonacci:21:8", align 8
  %122 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:21:8:19\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Examples:fibonacci:21:8:19", align 8
  %124 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:21:8:28\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Examples:fibonacci:21:8:28", align 8
  %126 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:fibonacci:21:8:9\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Examples:fibonacci:21:8:9", align 8
  %128 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:fibonacci:21:8:n\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Examples:fibonacci:21:8:n", align 8
  %130 = alloca i8, i64 32, align 1
  store [32 x i8] c"Examples:fibonacci:compareTo:10\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Examples:fibonacci:compareTo:10", align 8
  %132 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:11\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Examples:fibonacci:fibonacci:2:13:11", align 8
  %134 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:12\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Examples:fibonacci:fibonacci:2:13:12", align 8
  %136 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:32\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Examples:fibonacci:fibonacci:2:13:32", align 8
  %138 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:33\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Examples:fibonacci:fibonacci:2:13:33", align 8
  %140 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:34\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Examples:fibonacci:fibonacci:2:13:34", align 8
  %142 = alloca i8, i64 34, align 1
  store [34 x i8] c"Examples:fibonacci:fibonacci:2:14\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Examples:fibonacci:fibonacci:2:14", align 8
  %144 = alloca i8, i64 35, align 1
  store [35 x i8] c"Examples:fibonacci:recursive:0:0:3\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Examples:fibonacci:recursive:0:0:3", align 8
  %146 = alloca i8, i64 33, align 1
  store [33 x i8] c"Examples:fibonacci:recursive:0:5\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Examples:fibonacci:recursive:0:5", align 8
  %148 = alloca i8, i64 31, align 1
  store [31 x i8] c"Examples:fibonacci:recursive:5\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Examples:fibonacci:recursive:5", align 8
  %150 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"anonymous:$generated::needs", align 8
  %152 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %152, ptr @fun_candy_builtin_equals, align 8
  %153 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %153, ptr @fun_candy_builtin_get_argument_count, align 8
  %154 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %154, ptr @fun_candy_builtin_if_else, align 8
  %155 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %155, ptr @fun_candy_builtin_int_add, align 8
  %156 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %156, ptr @fun_candy_builtin_int_compare_to, align 8
  %157 = call ptr @make_candy_function(ptr @candy_builtin_int_parse, ptr null, i64 0)
  store ptr %157, ptr @fun_candy_builtin_int_parse, align 8
  %158 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %158, ptr @fun_candy_builtin_int_subtract, align 8
  %159 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %159, ptr @fun_candy_builtin_list_get, align 8
  %160 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %160, ptr @fun_candy_builtin_list_length, align 8
  %161 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %161, ptr @fun_candy_builtin_struct_get, align 8
  %162 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %162, ptr @fun_candy_builtin_struct_has_key, align 8
  %163 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %163, ptr @fun_candy_builtin_tag_get_value, align 8
  %164 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %164, ptr @fun_candy_builtin_tag_has_value, align 8
  %165 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %165, ptr @fun_candy_builtin_tag_without_value, align 8
  %166 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %166, ptr @fun_candy_builtin_text_concatenate, align 8
  %167 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %167, ptr @fun_candy_builtin_to_debug_text, align 8
  %168 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %168, ptr @fun_candy_builtin_type_of, align 8
  %169 = alloca i8, i64 10, align 1
  store [10 x i8] c"Arguments\00", ptr %169, align 1
  %170 = call ptr @make_candy_tag(ptr %169, ptr null)
  store ptr %170, ptr @tag_Arguments, align 8
  %171 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %171, align 1
  %172 = call ptr @make_candy_tag(ptr %171, ptr null)
  store ptr %172, ptr @tag_Error, align 8
  %173 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %173, align 1
  %174 = call ptr @make_candy_tag(ptr %173, ptr null)
  store ptr %174, ptr @tag_False, align 8
  %175 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %175, align 1
  %176 = call ptr @make_candy_tag(ptr %175, ptr null)
  store ptr %176, ptr @tag_Function, align 8
  %177 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %177, align 1
  %178 = call ptr @make_candy_tag(ptr %177, ptr null)
  store ptr %178, ptr @tag_Int, align 8
  %179 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %179, align 1
  %180 = call ptr @make_candy_tag(ptr %179, ptr null)
  store ptr %180, ptr @tag_Less, align 8
  %181 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %181, align 1
  %182 = call ptr @make_candy_tag(ptr %181, ptr null)
  store ptr %182, ptr @tag_List, align 8
  %183 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %183, align 1
  %184 = call ptr @make_candy_tag(ptr %183, ptr null)
  store ptr %184, ptr @tag_Match, align 8
  %185 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %185, align 1
  %186 = call ptr @make_candy_tag(ptr %185, ptr null)
  store ptr %186, ptr @tag_NoMatch, align 8
  %187 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %187, align 1
  %188 = call ptr @make_candy_tag(ptr %187, ptr null)
  store ptr %188, ptr @tag_Nothing, align 8
  %189 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %189, align 1
  %190 = call ptr @make_candy_tag(ptr %189, ptr null)
  store ptr %190, ptr @tag_Ok, align 8
  %191 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %191, align 1
  %192 = call ptr @make_candy_tag(ptr %191, ptr null)
  store ptr %192, ptr @tag_Stdout, align 8
  %193 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %193, align 1
  %194 = call ptr @make_candy_tag(ptr %193, ptr null)
  store ptr %194, ptr @tag_Struct, align 8
  %195 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %195, align 1
  %196 = call ptr @make_candy_tag(ptr %195, ptr null)
  store ptr %196, ptr @tag_Tag, align 8
  %197 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %197, align 1
  %198 = call ptr @make_candy_tag(ptr %197, ptr null)
  store ptr %198, ptr @tag_Text, align 8
  %199 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %199, align 1
  %200 = call ptr @make_candy_tag(ptr %199, ptr null)
  store ptr %200, ptr @tag_True, align 8
  %201 = call ptr @make_candy_int(i64 0)
  store ptr %201, ptr @num_0, align 8
  %202 = call ptr @make_candy_int(i64 1)
  store ptr %202, ptr @num_1, align 8
  %203 = call ptr @make_candy_int(i64 2)
  store ptr %203, ptr @num_2, align 8
  %204 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @text_., align 8
  %206 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected 1 item, got \00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"text_Expected 1 item, got ", align 8
  %208 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"text_Expected Error, got ", align 8
  %210 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"text_Expected False, got ", align 8
  %212 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"text_Expected Ok, got ", align 8
  %214 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"text_Expected True, got ", align 8
  %216 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected a List, got `\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"text_Expected a List, got `", align 8
  %218 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"text_Expected a Tag, got `", align 8
  %220 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %222 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %224 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"text_No case matched the given expression.", align 8
  %226 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %228 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"text_The `reason` must be a text.", align 8
  %230 = alloca i8, i64 54, align 1
  store [54 x i8] c"Usage: `cargo run -- run fibonacci.candy -- <number>`\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  %232 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"text_`.", align 8
  %234 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %236 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %238 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %240 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %242 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %244 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %246 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %248 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %250 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"text_`is result` was not satisfied", align 8
  %252 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %254 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %256 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %258 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %260 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %262 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %264 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %266 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %268 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %269 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %268, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %269, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %270 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %271 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %270, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %271, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %272 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %273 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %272, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %273, ptr @"fun_anonymous_$generated__needs", align 8
  %274 = alloca ptr, i64 2, align 8
  %275 = load ptr, ptr @tag_Match, align 8
  %276 = getelementptr ptr, ptr %274, i64 0
  store ptr %275, ptr %276, align 8
  %277 = getelementptr ptr, ptr %274, i64 1
  store ptr null, ptr %277, align 8
  %278 = call ptr @make_candy_list(ptr %274)
  store ptr %278, ptr @0, align 8
  %279 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %280 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", ptr %279, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %280, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %281 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %282 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", ptr %281, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %282, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %283 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %284 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %283, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %284, ptr @fun_Builtins__ifElse, align 8
  %285 = alloca ptr, i64 3, align 8
  %286 = load ptr, ptr @tag_NoMatch, align 8
  %287 = getelementptr ptr, ptr %285, i64 0
  store ptr %286, ptr %287, align 8
  %288 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %289 = getelementptr ptr, ptr %285, i64 1
  store ptr %288, ptr %289, align 8
  %290 = getelementptr ptr, ptr %285, i64 2
  store ptr null, ptr %290, align 8
  %291 = call ptr @make_candy_list(ptr %285)
  store ptr %291, ptr @7, align 8
  %292 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %293 = call ptr @make_candy_function(ptr @"Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", ptr %292, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %293, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %294 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %295 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %294, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %295, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %296 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %297 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %296, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %297, ptr @fun_Core_result_mapOrElse, align 8
  %298 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %299 = call ptr @make_candy_function(ptr @Core_result_mapOr, ptr %298, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %299, ptr @fun_Core_result_mapOr, align 8
  %300 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %301 = call ptr @make_candy_function(ptr @Core_result_flatMap, ptr %300, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %301, ptr @fun_Core_result_flatMap, align 8
  %302 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %303 = call ptr @make_candy_function(ptr @Core_result_map, ptr %302, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %303, ptr @fun_Core_result_map, align 8
  %304 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %305 = call ptr @make_candy_function(ptr @Core_result_getValue, ptr %304, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %305, ptr @fun_Core_result_getValue, align 8
  %306 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %307 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2, ptr %306, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %307, ptr @fun_Examples_fibonacci_fibonacci_2, align 8
  %308 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %309 = call ptr @make_candy_function(ptr @Examples_fibonacci_recursive_0, ptr %308, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %309, ptr @fun_Examples_fibonacci_recursive_0, align 8
  %310 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %311 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_18, ptr %310, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %311, ptr @fun_Examples_fibonacci_21_8_18, align 8
  %312 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %313 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_case-0_didNotMatch, ptr %312, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %313, ptr @fun_Examples_fibonacci_21_8_case-0_didNotMatch, align 8
  %314 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %315 = call ptr @make_candy_function(ptr @Examples_fibonacci_21, ptr %314, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %315, ptr @fun_Examples_fibonacci_21, align 8
  %316 = call ptr @run_candy_main(ptr @fun_Examples_fibonacci_21, ptr @candy_environment)
  call void @print_candy_value(ptr %316)
  %317 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %317)
  %318 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %318)
  %319 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %319)
  %320 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %320)
  %321 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %321)
  %322 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %322)
  %323 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %323)
  %324 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %324)
  %325 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %325)
  %326 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %326)
  %327 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %327)
  %328 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %328)
  %329 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %329)
  %330 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %330)
  %331 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %331)
  %332 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %332)
  %333 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %333)
  %334 = load ptr, ptr @"Builtins::intParse:11", align 8
  call void @free_candy_value(ptr %334)
  %335 = load ptr, ptr @"Builtins::intParse:5", align 8
  call void @free_candy_value(ptr %335)
  %336 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %336)
  %337 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %337)
  %338 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %338)
  %339 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %339)
  %340 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %340)
  %341 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %341)
  %342 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %342)
  %343 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %343)
  %344 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %344)
  %345 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %345)
  %346 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %346)
  %347 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %347)
  %348 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %348)
  %349 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %349)
  %350 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %350)
  %351 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %351)
  %352 = load ptr, ptr @"Core:result:flatMap:16", align 8
  call void @free_candy_value(ptr %352)
  %353 = load ptr, ptr @"Core:result:flatMap:19:2", align 8
  call void @free_candy_value(ptr %353)
  %354 = load ptr, ptr @"Core:result:flatMap:21", align 8
  call void @free_candy_value(ptr %354)
  %355 = load ptr, ptr @"Core:result:flatMap:4", align 8
  call void @free_candy_value(ptr %355)
  %356 = load ptr, ptr @"Core:result:getValue:14", align 8
  call void @free_candy_value(ptr %356)
  %357 = load ptr, ptr @"Core:result:getValue:4", align 8
  call void @free_candy_value(ptr %357)
  %358 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %358)
  %359 = load ptr, ptr @"Core:result:map:16", align 8
  call void @free_candy_value(ptr %359)
  %360 = load ptr, ptr @"Core:result:map:19:3", align 8
  call void @free_candy_value(ptr %360)
  %361 = load ptr, ptr @"Core:result:map:20", align 8
  call void @free_candy_value(ptr %361)
  %362 = load ptr, ptr @"Core:result:map:4", align 8
  call void @free_candy_value(ptr %362)
  %363 = load ptr, ptr @"Core:result:mapOr:16", align 8
  call void @free_candy_value(ptr %363)
  %364 = load ptr, ptr @"Core:result:mapOr:21", align 8
  call void @free_candy_value(ptr %364)
  %365 = load ptr, ptr @"Core:result:mapOr:4", align 8
  call void @free_candy_value(ptr %365)
  %366 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %366)
  %367 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %367)
  %368 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %368)
  %369 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %369)
  %370 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %370)
  %371 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %371)
  %372 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %372)
  %373 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %373)
  %374 = load ptr, ptr @"Examples:fibonacci:21:16", align 8
  call void @free_candy_value(ptr %374)
  %375 = load ptr, ptr @"Examples:fibonacci:21:17", align 8
  call void @free_candy_value(ptr %375)
  %376 = load ptr, ptr @"Examples:fibonacci:21:7", align 8
  call void @free_candy_value(ptr %376)
  %377 = load ptr, ptr @"Examples:fibonacci:21:8", align 8
  call void @free_candy_value(ptr %377)
  %378 = load ptr, ptr @"Examples:fibonacci:21:8:19", align 8
  call void @free_candy_value(ptr %378)
  %379 = load ptr, ptr @"Examples:fibonacci:21:8:28", align 8
  call void @free_candy_value(ptr %379)
  %380 = load ptr, ptr @"Examples:fibonacci:21:8:9", align 8
  call void @free_candy_value(ptr %380)
  %381 = load ptr, ptr @"Examples:fibonacci:21:8:n", align 8
  call void @free_candy_value(ptr %381)
  %382 = load ptr, ptr @"Examples:fibonacci:compareTo:10", align 8
  call void @free_candy_value(ptr %382)
  %383 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:11", align 8
  call void @free_candy_value(ptr %383)
  %384 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:12", align 8
  call void @free_candy_value(ptr %384)
  %385 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:32", align 8
  call void @free_candy_value(ptr %385)
  %386 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:33", align 8
  call void @free_candy_value(ptr %386)
  %387 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:34", align 8
  call void @free_candy_value(ptr %387)
  %388 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:14", align 8
  call void @free_candy_value(ptr %388)
  %389 = load ptr, ptr @"Examples:fibonacci:recursive:0:0:3", align 8
  call void @free_candy_value(ptr %389)
  %390 = load ptr, ptr @"Examples:fibonacci:recursive:0:5", align 8
  call void @free_candy_value(ptr %390)
  %391 = load ptr, ptr @"Examples:fibonacci:recursive:5", align 8
  call void @free_candy_value(ptr %391)
  %392 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %392)
  %393 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %393)
  %394 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %394)
  %395 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %395)
  %396 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %396)
  %397 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %397)
  %398 = load ptr, ptr @fun_candy_builtin_int_parse, align 8
  call void @free_candy_value(ptr %398)
  %399 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %399)
  %400 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %400)
  %401 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %401)
  %402 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %402)
  %403 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %403)
  %404 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %404)
  %405 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %405)
  %406 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %406)
  %407 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %407)
  %408 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %408)
  %409 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %409)
  %410 = load ptr, ptr @tag_Arguments, align 8
  call void @free_candy_value(ptr %410)
  %411 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %411)
  %412 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %412)
  %413 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %413)
  %414 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %414)
  %415 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %415)
  %416 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %416)
  %417 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %417)
  %418 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %418)
  %419 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %419)
  %420 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %420)
  %421 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %421)
  %422 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %422)
  %423 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %423)
  %424 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %424)
  %425 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %425)
  %426 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %426)
  %427 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %427)
  %428 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %428)
  %429 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %429)
  %430 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  call void @free_candy_value(ptr %430)
  %431 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %431)
  %432 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %432)
  %433 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %433)
  %434 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %434)
  %435 = load ptr, ptr @"text_Expected a List, got `", align 8
  call void @free_candy_value(ptr %435)
  %436 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %436)
  %437 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %437)
  %438 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %438)
  %439 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %439)
  %440 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %440)
  %441 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %441)
  %442 = load ptr, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  call void @free_candy_value(ptr %442)
  %443 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %443)
  %444 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %444)
  %445 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %445)
  %446 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %446)
  %447 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %447)
  %448 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %448)
  %449 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %449)
  %450 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %450)
  %451 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %451)
  %452 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %452)
  %453 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %453)
  %454 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %454)
  %455 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %455)
  %456 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %456)
  %457 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %457)
  %458 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %458)
  %459 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %459)
  %460 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %460)
  %461 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %461)
  %462 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %462)
  %463 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %463)
  %464 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %464)
  %465 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %465)
  %466 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %466)
  %467 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %467)
  %468 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %468)
  %469 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  call void @free_candy_value(ptr %469)
  %470 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %470)
  %471 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %471)
  %472 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %472)
  %473 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  call void @free_candy_value(ptr %473)
  %474 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %474)
  %475 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %475)
  %476 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  call void @free_candy_value(ptr %476)
  %477 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %477)
  %478 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  call void @free_candy_value(ptr %478)
  %479 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %479)
  %480 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %480)
  %481 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %481)
  %482 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  call void @free_candy_value(ptr %482)
  %483 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  call void @free_candy_value(ptr %483)
  %484 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  call void @free_candy_value(ptr %484)
  %485 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %485)
  %486 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  call void @free_candy_value(ptr %486)
  %487 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %487)
  %488 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  call void @free_candy_value(ptr %488)
  %489 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %489)
  %490 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %490)
  %491 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  call void @free_candy_value(ptr %491)
  %492 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %492)
  %493 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %493)
  %494 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %494)
  %495 = load ptr, ptr @fun_Core_result_is_1_equals_then.18, align 8
  call void @free_candy_value(ptr %495)
  %496 = load ptr, ptr @fun_Core_result_is_1_equals_then.20, align 8
  call void @free_candy_value(ptr %496)
  %497 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %497)
  %498 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %498)
  %499 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %499)
  %500 = load ptr, ptr @fun_Core_result_is_1_equals_else.22, align 8
  call void @free_candy_value(ptr %500)
  %501 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %501)
  %502 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %502)
  %503 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %503)
  %504 = load ptr, ptr @fun_Core_result_is_1_equals_then.24, align 8
  call void @free_candy_value(ptr %504)
  %505 = load ptr, ptr @fun_Core_result_is_1_equals_then.26, align 8
  call void @free_candy_value(ptr %505)
  %506 = load ptr, ptr @fun_Core_result_is_1_equals_then.28, align 8
  call void @free_candy_value(ptr %506)
  %507 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %507)
  %508 = load ptr, ptr @fun_Core_result_is_1_equals_else.30, align 8
  call void @free_candy_value(ptr %508)
  %509 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %509)
  %510 = load ptr, ptr @fun_Core_result_is_1_equals_else.32, align 8
  call void @free_candy_value(ptr %510)
  %511 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %511)
  %512 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %512)
  %513 = load ptr, ptr @fun_Core_function_is1_11.34, align 8
  call void @free_candy_value(ptr %513)
  %514 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %514)
  %515 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.36, align 8
  call void @free_candy_value(ptr %515)
  %516 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.38, align 8
  call void @free_candy_value(ptr %516)
  %517 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %517)
  %518 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %518)
  %519 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %519)
  %520 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.40, align 8
  call void @free_candy_value(ptr %520)
  %521 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %521)
  %522 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  call void @free_candy_value(ptr %522)
  %523 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %523)
  %524 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.42, align 8
  call void @free_candy_value(ptr %524)
  %525 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.44, align 8
  call void @free_candy_value(ptr %525)
  %526 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.46, align 8
  call void @free_candy_value(ptr %526)
  %527 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %527)
  %528 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.48, align 8
  call void @free_candy_value(ptr %528)
  %529 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %529)
  %530 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.50, align 8
  call void @free_candy_value(ptr %530)
  %531 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %531)
  %532 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  call void @free_candy_value(ptr %532)
  %533 = load ptr, ptr @fun_Core_result_mapOr, align 8
  call void @free_candy_value(ptr %533)
  %534 = load ptr, ptr @fun_Core_result_is_1_equals_then.52, align 8
  call void @free_candy_value(ptr %534)
  %535 = load ptr, ptr @fun_Core_result_is_1_equals_then.54, align 8
  call void @free_candy_value(ptr %535)
  %536 = load ptr, ptr @fun_Core_result_is_1_equals_then.56, align 8
  call void @free_candy_value(ptr %536)
  %537 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %537)
  %538 = load ptr, ptr @fun_Core_result_is_1_equals_else.58, align 8
  call void @free_candy_value(ptr %538)
  %539 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %539)
  %540 = load ptr, ptr @fun_Core_result_is_1_equals_else.60, align 8
  call void @free_candy_value(ptr %540)
  %541 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %541)
  %542 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.62, align 8
  call void @free_candy_value(ptr %542)
  %543 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.64, align 8
  call void @free_candy_value(ptr %543)
  %544 = load ptr, ptr @fun_Core_result_is_1_equals_then.66, align 8
  call void @free_candy_value(ptr %544)
  %545 = load ptr, ptr @fun_Core_result_is_1_equals_then.68, align 8
  call void @free_candy_value(ptr %545)
  %546 = load ptr, ptr @fun_Core_result_is_1_equals_then.70, align 8
  call void @free_candy_value(ptr %546)
  %547 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %547)
  %548 = load ptr, ptr @fun_Core_result_is_1_equals_else.72, align 8
  call void @free_candy_value(ptr %548)
  %549 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %549)
  %550 = load ptr, ptr @fun_Core_result_is_1_equals_else.74, align 8
  call void @free_candy_value(ptr %550)
  %551 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %551)
  %552 = load ptr, ptr @fun_Core_function_is1_11.76, align 8
  call void @free_candy_value(ptr %552)
  %553 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  call void @free_candy_value(ptr %553)
  %554 = load ptr, ptr @fun_Core_result_flatMap, align 8
  call void @free_candy_value(ptr %554)
  %555 = load ptr, ptr @fun_Core_result_is_1_equals_then.78, align 8
  call void @free_candy_value(ptr %555)
  %556 = load ptr, ptr @fun_Core_result_is_1_equals_then.80, align 8
  call void @free_candy_value(ptr %556)
  %557 = load ptr, ptr @fun_Core_result_is_1_equals_then.82, align 8
  call void @free_candy_value(ptr %557)
  %558 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %558)
  %559 = load ptr, ptr @fun_Core_result_is_1_equals_else.84, align 8
  call void @free_candy_value(ptr %559)
  %560 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %560)
  %561 = load ptr, ptr @fun_Core_result_is_1_equals_else.86, align 8
  call void @free_candy_value(ptr %561)
  %562 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %562)
  %563 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.88, align 8
  call void @free_candy_value(ptr %563)
  %564 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.90, align 8
  call void @free_candy_value(ptr %564)
  %565 = load ptr, ptr @fun_Core_result_is_1_equals_then.92, align 8
  call void @free_candy_value(ptr %565)
  %566 = load ptr, ptr @fun_Core_result_is_1_equals_then.94, align 8
  call void @free_candy_value(ptr %566)
  %567 = load ptr, ptr @fun_Core_result_is_1_equals_then.96, align 8
  call void @free_candy_value(ptr %567)
  %568 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %568)
  %569 = load ptr, ptr @fun_Core_result_is_1_equals_else.98, align 8
  call void @free_candy_value(ptr %569)
  %570 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %570)
  %571 = load ptr, ptr @fun_Core_result_is_1_equals_else.100, align 8
  call void @free_candy_value(ptr %571)
  %572 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %572)
  %573 = load ptr, ptr @fun_Core_function_is1_11.102, align 8
  call void @free_candy_value(ptr %573)
  %574 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  call void @free_candy_value(ptr %574)
  %575 = load ptr, ptr @fun_Core_result_map, align 8
  call void @free_candy_value(ptr %575)
  %576 = load ptr, ptr @fun_Core_result_is_1_equals_then.104, align 8
  call void @free_candy_value(ptr %576)
  %577 = load ptr, ptr @fun_Core_result_is_1_equals_then.106, align 8
  call void @free_candy_value(ptr %577)
  %578 = load ptr, ptr @fun_Core_result_is_1_equals_then.108, align 8
  call void @free_candy_value(ptr %578)
  %579 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %579)
  %580 = load ptr, ptr @fun_Core_result_is_1_equals_else.110, align 8
  call void @free_candy_value(ptr %580)
  %581 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %581)
  %582 = load ptr, ptr @fun_Core_result_is_1_equals_else.112, align 8
  call void @free_candy_value(ptr %582)
  %583 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %583)
  %584 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.114, align 8
  call void @free_candy_value(ptr %584)
  %585 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.116, align 8
  call void @free_candy_value(ptr %585)
  %586 = load ptr, ptr @fun_Core_result_is_1_equals_then.118, align 8
  call void @free_candy_value(ptr %586)
  %587 = load ptr, ptr @fun_Core_result_is_1_equals_then.120, align 8
  call void @free_candy_value(ptr %587)
  %588 = load ptr, ptr @fun_Core_result_is_1_equals_then.122, align 8
  call void @free_candy_value(ptr %588)
  %589 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %589)
  %590 = load ptr, ptr @fun_Core_result_is_1_equals_else.124, align 8
  call void @free_candy_value(ptr %590)
  %591 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %591)
  %592 = load ptr, ptr @fun_Core_result_is_1_equals_else.126, align 8
  call void @free_candy_value(ptr %592)
  %593 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %593)
  %594 = load ptr, ptr @fun_Core_function_is1_11.128, align 8
  call void @free_candy_value(ptr %594)
  %595 = load ptr, ptr @fun_Core_result_map_19, align 8
  call void @free_candy_value(ptr %595)
  %596 = load ptr, ptr @tag_Ok.129, align 8
  call void @free_candy_value(ptr %596)
  %597 = load ptr, ptr @fun_Core_result_getValue, align 8
  call void @free_candy_value(ptr %597)
  %598 = load ptr, ptr @fun_Core_result_is_1_equals_then.131, align 8
  call void @free_candy_value(ptr %598)
  %599 = load ptr, ptr @fun_Core_result_is_1_equals_then.133, align 8
  call void @free_candy_value(ptr %599)
  %600 = load ptr, ptr @fun_Core_result_is_1_equals_then.135, align 8
  call void @free_candy_value(ptr %600)
  %601 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %601)
  %602 = load ptr, ptr @fun_Core_result_is_1_equals_else.137, align 8
  call void @free_candy_value(ptr %602)
  %603 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %603)
  %604 = load ptr, ptr @fun_Core_result_is_1_equals_else.139, align 8
  call void @free_candy_value(ptr %604)
  %605 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %605)
  %606 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.141, align 8
  call void @free_candy_value(ptr %606)
  %607 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.143, align 8
  call void @free_candy_value(ptr %607)
  %608 = load ptr, ptr @fun_Core_result_is_1_equals_then.145, align 8
  call void @free_candy_value(ptr %608)
  %609 = load ptr, ptr @fun_Core_result_is_1_equals_then.147, align 8
  call void @free_candy_value(ptr %609)
  %610 = load ptr, ptr @fun_Core_result_is_1_equals_then.149, align 8
  call void @free_candy_value(ptr %610)
  %611 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %611)
  %612 = load ptr, ptr @fun_Core_result_is_1_equals_else.151, align 8
  call void @free_candy_value(ptr %612)
  %613 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %613)
  %614 = load ptr, ptr @fun_Core_result_is_1_equals_else.153, align 8
  call void @free_candy_value(ptr %614)
  %615 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %615)
  %616 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2, align 8
  call void @free_candy_value(ptr %616)
  %617 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_12, align 8
  call void @free_candy_value(ptr %617)
  %618 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_13, align 8
  call void @free_candy_value(ptr %618)
  %619 = load ptr, ptr @fun_Examples_fibonacci_recursive_0, align 8
  call void @free_candy_value(ptr %619)
  %620 = load ptr, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  call void @free_candy_value(ptr %620)
  %621 = load ptr, ptr @fun_Examples_fibonacci_21_8_18, align 8
  call void @free_candy_value(ptr %621)
  %622 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %622)
  %623 = load ptr, ptr @fun_Examples_fibonacci_21, align 8
  call void @free_candy_value(ptr %623)
  %624 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then, align 8
  call void @free_candy_value(ptr %624)
  %625 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then.155, align 8
  call void @free_candy_value(ptr %625)
  %626 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %626)
  %627 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else, align 8
  call void @free_candy_value(ptr %627)
  %628 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %628)
  %629 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else.157, align 8
  call void @free_candy_value(ptr %629)
  %630 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %630)
  %631 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_matched, align 8
  call void @free_candy_value(ptr %631)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_parse(ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then,":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.5, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %41 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr null)
  %42 = load ptr, ptr @tag_Function, align 8
  %43 = call ptr @candy_builtin_equals(ptr %37, ptr %42)
  %44 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %45 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %48 = load ptr, ptr @num_0, align 8
  %49 = call ptr @candy_builtin_equals(ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %51 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %50, ptr null)
  %52 = call ptr @candy_builtin_type_of(ptr %2)
  %53 = load ptr, ptr @tag_Function, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr null)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %52, ptr %57)
  %59 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %60 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %63 = load ptr, ptr @num_0, align 8
  %64 = call ptr @candy_builtin_equals(ptr %62, ptr %63)
  %65 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %64, ptr %65, ptr null)
  %67 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %67
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.1, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.3, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.1(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__ifElse_1_equals_else.3(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__ifElse_1_equals_else.5(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.15, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.7(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.9, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.13, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.9(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.11, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else.11(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__ifElse_1_equals_else.13(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__ifElse_1_equals_else.15(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @"Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else"() {
"Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else":
  %0 = load ptr, ptr @7, align 8
  ret ptr %0
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch() {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_result_is_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.21, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_result_is_1_equals_else.22, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_result_is_1_equals_else.22, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %1, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_function_is1_11, align 8
  %43 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %44 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %45 = call ptr @Builtins__ifElse(ptr %39, ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %47 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr null)
  %48 = call ptr @candy_builtin_type_of(ptr %2)
  %49 = load ptr, ptr @tag_Function, align 8
  %50 = call ptr @candy_builtin_equals(ptr %48, ptr %49)
  %51 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %52 = getelementptr inbounds { ptr }, ptr %51, i32 0, i32 0
  store ptr %2, ptr %52, align 8
  %53 = call ptr @make_candy_function(ptr @Core_function_is1_11.33, ptr %51, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %53, ptr @fun_Core_function_is1_11.34, align 8
  %54 = load ptr, ptr @fun_Core_function_is1_11.34, align 8
  %55 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %56 = call ptr @Builtins__ifElse(ptr %50, ptr %54, ptr %55)
  %57 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %58 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr null)
  %59 = call ptr @candy_builtin_type_of(ptr %0)
  %60 = load ptr, ptr @tag_Tag, align 8
  %61 = call ptr @candy_builtin_equals(ptr %60, ptr %59)
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr }, ptr %62, i32 0, i32 0
  store ptr %0, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %65 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %66 = getelementptr inbounds { ptr }, ptr %65, i32 0, i32 0
  store ptr %59, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.39, ptr %65, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_result_mapOrElse_30_equals_else.40, align 8
  %68 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %69 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.40, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %61, ptr %68, ptr %69)
  %71 = load ptr, ptr @num_0, align 8
  %72 = call ptr @candy_builtin_list_get(ptr %70, ptr %71)
  %73 = load ptr, ptr @tag_Match, align 8
  %74 = call ptr @candy_builtin_equals(ptr %72, ptr %73)
  %75 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %76 = getelementptr inbounds { ptr, ptr }, ptr %75, i32 0, i32 0
  store ptr %70, ptr %76, align 8
  %77 = getelementptr inbounds { ptr, ptr }, ptr %75, i32 0, i32 1
  store ptr %1, ptr %77, align 8
  %78 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_matched, ptr %75, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %78, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %79 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %80 = getelementptr inbounds { ptr, ptr }, ptr %79, i32 0, i32 0
  store ptr %2, ptr %80, align 8
  %81 = getelementptr inbounds { ptr, ptr }, ptr %79, i32 0, i32 1
  store ptr %0, ptr %81, align 8
  %82 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %79, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %82, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %83 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %84 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %85 = call ptr @candy_builtin_if_else(ptr %74, ptr %83, ptr %84)
  ret ptr %85
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.17, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.18, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.18, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.17(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.19, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.20, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.20, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.19(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @8, align 8
  ret ptr @8
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @9, align 8
  ret ptr @9
}

define ptr @Core_result_is_1_equals_else.21(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.23, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.24, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.31, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.32, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.24, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.32, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.23(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.25, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.26, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.29, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.30, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.26, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.30, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.25(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.27, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.28, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.28, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.27(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @11, align 8
  ret ptr @11
}

define ptr @Core_result_is_1_equals_else.29(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Core_result_is_1_equals_else.31(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @13, align 8
  ret ptr @13
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1_11.33(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.35, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.36, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.36, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.35(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.37, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.38, align 8
  %11 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.38, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_30_equals_then.37(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @14, align 8
  ret ptr @14
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @15, align 8
  ret ptr @15
}

define ptr @Core_result_mapOrElse_30_equals_else.39(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @16, align 8
  ret ptr @16
}

define ptr @Core_result_mapOrElse_30_case-0_matched(ptr %0) {
Core_result_mapOrElse_30_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.41, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.42, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.49, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.50, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.42, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.50, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_result_mapOrElse_30_equals_then.41(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.43, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.44, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.47, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.48, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.44, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.48, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.43(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.45, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.46, align 8
  %11 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.46, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_30_equals_then.45(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @17, align 8
  ret ptr @17
}

define ptr @Core_result_mapOrElse_30_equals_else.47(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Core_result_mapOrElse_30_equals_else.49(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @19, align 8
  ret ptr @19
}

define ptr @Core_result_mapOrElse_30_case-1_matched(ptr %0) {
Core_result_mapOrElse_30_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOr(ptr %0, ptr %1, ptr %2) {
Core_result_mapOr:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.51, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_result_is_1_equals_then.52, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.59, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_result_is_1_equals_else.60, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_then.52, align 8
  %13 = load ptr, ptr @fun_Core_result_is_1_equals_else.60, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then.61, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_result_is_1_isMatch_then.62, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else.63, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_result_is_1_isMatch_else.64, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.62, align 8
  %26 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.64, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %1, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_function_is1_11.75, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_function_is1_11.76, align 8
  %43 = load ptr, ptr @fun_Core_function_is1_11.76, align 8
  %44 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %45 = call ptr @Builtins__ifElse(ptr %39, ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %47 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr null)
  %48 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %49 = getelementptr inbounds { ptr }, ptr %48, i32 0, i32 0
  store ptr %2, ptr %49, align 8
  %50 = call ptr @make_candy_function(ptr @Core_result_mapOr_20, ptr %48, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %50, ptr @fun_Core_result_mapOr_20, align 8
  %51 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  %52 = call ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %51)
  ret ptr %52
}

define ptr @Core_result_is_1_equals_then.51(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.53, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.54, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.57, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.58, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.54, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.58, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.53(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.55, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.56, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.56, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.55(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @20, align 8
  ret ptr @20
}

define ptr @Core_result_is_1_equals_else.57(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Core_result_is_1_equals_else.59(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @22, align 8
  ret ptr @22
}

define ptr @Core_result_is_1_isMatch_then.61(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else.63(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.65, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.66, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.73, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.74, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.66, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.74, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.65(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.67, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.68, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.71, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.72, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.68, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.72, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.67(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.69, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.70, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.70, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.69(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @23, align 8
  ret ptr @23
}

define ptr @Core_result_is_1_equals_else.71(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Core_result_is_1_equals_else.73(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_function_is1_11.75(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOr_20(ptr %0, ptr %1) {
Core_result_mapOr_20:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_flatMap(ptr %0, ptr %1) {
Core_result_flatMap:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.77, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_is_1_equals_then.78, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.85, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_else.86, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.78, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_else.86, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then.87, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_is_1_isMatch_then.88, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else.89, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_result_is_1_isMatch_else.90, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.88, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.90, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Function, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr }, ptr %39, i32 0, i32 0
  store ptr %1, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Core_function_is1_11.101, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Core_function_is1_11.102, align 8
  %42 = load ptr, ptr @fun_Core_function_is1_11.102, align 8
  %43 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %44 = call ptr @Builtins__ifElse(ptr %38, ptr %42, ptr %43)
  %45 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %44, ptr %45, ptr null)
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_result_flatMap_19, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_result_flatMap_19, align 8
  %50 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  %51 = call ptr @Core_result_mapOr(ptr %0, ptr %50, ptr %0)
  ret ptr %51
}

define ptr @Core_result_is_1_equals_then.77(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.79, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.80, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.83, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.84, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.80, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.84, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.79(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.81, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.82, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.82, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.81(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_result_is_1_equals_else.83(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_result_is_1_equals_else.85(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_result_is_1_isMatch_then.87(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else.89(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.91, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.92, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.99, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.100, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.92, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.100, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.91(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.93, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.94, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.97, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.98, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.94, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.98, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.93(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.95, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.96, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.96, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.95(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_result_is_1_equals_else.97(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_result_is_1_equals_else.99(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_function_is1_11.101(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_flatMap_19(ptr %0, ptr %1) {
Core_result_flatMap_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %6
}

define ptr @Core_result_map(ptr %0, ptr %1) {
Core_result_map:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.103, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_is_1_equals_then.104, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.111, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_else.112, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.104, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_else.112, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then.113, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_is_1_isMatch_then.114, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else.115, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_result_is_1_isMatch_else.116, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.114, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.116, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Function, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr }, ptr %39, i32 0, i32 0
  store ptr %1, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Core_function_is1_11.127, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Core_function_is1_11.128, align 8
  %42 = load ptr, ptr @fun_Core_function_is1_11.128, align 8
  %43 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %44 = call ptr @Builtins__ifElse(ptr %38, ptr %42, ptr %43)
  %45 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %44, ptr %45, ptr null)
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %1, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_result_map_19, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_result_map_19, align 8
  %50 = load ptr, ptr @fun_Core_result_map_19, align 8
  %51 = call ptr @Core_result_flatMap(ptr %0, ptr %50)
  ret ptr %51
}

define ptr @Core_result_is_1_equals_then.103(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.105, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.106, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.109, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.110, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.106, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.110, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.105(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.107, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.108, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.108, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.107(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_result_is_1_equals_else.109(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_result_is_1_equals_else.111(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_result_is_1_isMatch_then.113(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else.115(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.117, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.118, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.125, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.126, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.118, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.126, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.117(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.119, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.120, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.123, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.124, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.120, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.124, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.119(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.121, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.122, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.122, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.121(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_result_is_1_equals_else.123(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_result_is_1_equals_else.125(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @37, align 8
  ret ptr @37
}

define ptr @Core_function_is1_11.127(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_map_19(ptr %0, ptr %1) {
Core_result_map_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  %7 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Ok.129, align 8
  ret ptr @tag_Ok.129
}

define ptr @Core_result_getValue(ptr %0) {
Core_result_getValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.130, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then.131, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.138, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.139, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then.131, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.139, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then.140, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then.141, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else.142, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else.143, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then.141, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else.143, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %32 = call ptr @candy_builtin_if_else(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = call ptr @candy_builtin_type_of(ptr %0)
  %36 = load ptr, ptr @tag_Tag, align 8
  %37 = call ptr @candy_builtin_equals(ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %39 = load ptr, ptr @"Core:result:getValue:14", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr %39)
  %41 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %42 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %43 = load ptr, ptr @"Core:result:getValue:14", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr %43)
  %45 = call ptr @candy_builtin_tag_get_value(ptr %0)
  ret ptr %45
}

define ptr @Core_result_is_1_equals_then.130(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.132, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.133, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.136, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.137, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.133, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.137, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.132(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.134, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.135, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.135, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.134(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_result_is_1_equals_else.136(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_result_is_1_equals_else.138(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_result_is_1_isMatch_then.140(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else.142(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.144, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.145, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.152, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.153, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.145, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.153, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.144(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.146, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.147, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.150, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.151, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.147, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.151, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.146(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.148, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.149, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.149, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.148(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_result_is_1_equals_else.150(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_result_is_1_equals_else.152(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @43, align 8
  ret ptr @43
}

define ptr @Examples_fibonacci_fibonacci_2(ptr %0, ptr %1) {
Examples_fibonacci_fibonacci_2:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = load ptr, ptr @"Examples:fibonacci:compareTo:10", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %8)
  %10 = load ptr, ptr @tag_Less, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2_12, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Examples_fibonacci_fibonacci_2_12, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = getelementptr inbounds { ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %0, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2_13, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Examples_fibonacci_fibonacci_2_13, align 8
  %19 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_12, align 8
  %20 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_13, align 8
  %21 = call ptr @Builtins__ifElse(ptr %11, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Examples_fibonacci_fibonacci_2_12(ptr %0) {
Examples_fibonacci_fibonacci_2_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_fibonacci_fibonacci_2_13(ptr %0) {
Examples_fibonacci_fibonacci_2_13:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:11", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @num_1, align 8
  %12 = call ptr @candy_builtin_int_subtract(ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %16)
  %18 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %19 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:32", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %18, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr @num_2, align 8
  %24 = call ptr @candy_builtin_int_subtract(ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %24, ptr %28)
  %30 = call ptr @candy_builtin_type_of(ptr %17)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @candy_builtin_type_of(ptr %29)
  %37 = load ptr, ptr @tag_Int, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %40 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:34", align 8
  %41 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr %40)
  %42 = call ptr @candy_builtin_int_add(ptr %17, ptr %29)
  ret ptr %42
}

define ptr @Examples_fibonacci_recursive_0(ptr %0, ptr %1) {
Examples_fibonacci_recursive_0:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Examples_fibonacci_recursive_0_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  %5 = load ptr, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  %6 = call ptr @Examples_fibonacci_fibonacci_2(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Examples_fibonacci_recursive_0_0(ptr %0, ptr %1) {
Examples_fibonacci_recursive_0_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Examples_fibonacci_21_8_18(ptr %0) {
Examples_fibonacci_21_8_18:
  %1 = load ptr, ptr @fun_Examples_fibonacci_recursive_0, align 8
  %2 = call ptr @Examples_fibonacci_recursive_0(ptr %1, ptr %0)
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Examples_fibonacci_21_8_case-0_didNotMatch() {
Examples_fibonacci_21_8_case-0_didNotMatch:
  %0 = load ptr, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  ret ptr %0
}

define ptr @Examples_fibonacci_21(ptr %0) {
Examples_fibonacci_21:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Examples:fibonacci:21:7", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Arguments, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Examples:fibonacci:21:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Arguments, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  %14 = call ptr @candy_builtin_type_of(ptr %13)
  %15 = load ptr, ptr @tag_List, align 8
  %16 = call ptr @candy_builtin_equals(ptr %15, ptr %14)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %13, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Examples_fibonacci_21_8_equals_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %14, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_else.156, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Examples_fibonacci_21_8_equals_else.157, align 8
  %23 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then, align 8
  %24 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else.157, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Examples_fibonacci_21_8_case-0_matched, align 8
  %33 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_matched, align 8
  %34 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %37 = load ptr, ptr @"Examples:fibonacci:21:16", align 8
  %38 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Stdout, align 8
  %40 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %39)
  %41 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %42 = load ptr, ptr @"Examples:fibonacci:21:16", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr %42)
  %44 = load ptr, ptr @tag_Stdout, align 8
  %45 = call ptr @candy_builtin_struct_get(ptr %0, ptr %44)
  %46 = call ptr @get_candy_function_pointer(ptr %45)
  %47 = call ptr @get_candy_function_environment(ptr %45)
  %48 = call ptr (...) %46(ptr %35, ptr %47)
  ret ptr %48
}

define ptr @Examples_fibonacci_21_8_equals_then(ptr %0) {
Examples_fibonacci_21_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_list_length(ptr %2)
  %4 = load ptr, ptr @num_1, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_then.154, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Examples_fibonacci_21_8_equals_then.155, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Examples_fibonacci_21_8_equals_else, align 8
  %14 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then.155, align 8
  %15 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Examples_fibonacci_21_8_equals_then.154(ptr %0) {
Examples_fibonacci_21_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @44, align 8
  ret ptr @44
}

define ptr @Examples_fibonacci_21_8_equals_else(ptr %0) {
Examples_fibonacci_21_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Examples_fibonacci_21_8_equals_else.156(ptr %0) {
Examples_fibonacci_21_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a List, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @46, align 8
  ret ptr @46
}

define ptr @Examples_fibonacci_21_8_case-0_matched(ptr %0) {
Examples_fibonacci_21_8_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Text, align 8
  %7 = call ptr @candy_builtin_equals(ptr %5, ptr %6)
  %8 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %9 = load ptr, ptr @"Examples:fibonacci:21:8:9", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr %9)
  %11 = call ptr @candy_builtin_int_parse(ptr %4)
  %12 = load ptr, ptr @fun_Examples_fibonacci_21_8_18, align 8
  %13 = call ptr @Core_result_map(ptr %11, ptr %12)
  %14 = call ptr @Core_result_getValue(ptr %13)
  ret ptr %14
}
