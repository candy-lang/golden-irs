; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intParse:11" = global ptr null
@"Builtins::intParse:5" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:bool:and:13" = global ptr null
@"Core:bool:and:2" = global ptr null
@"Core:bool:and:4" = global ptr null
@"Core:bool:and:7" = global ptr null
@"Core:bool:and:9" = global ptr null
@"Core:bool:is:1" = global ptr null
@"Core:bool:lazyAnd:12" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:16:11" = global ptr null
@"Core:bool:lazyAnd:16:19" = global ptr null
@"Core:bool:lazyAnd:16:7" = global ptr null
@"Core:bool:lazyAnd:2" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyOr:12" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:16:12" = global ptr null
@"Core:bool:lazyOr:16:20" = global ptr null
@"Core:bool:lazyOr:16:8" = global ptr null
@"Core:bool:lazyOr:2" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:not:2" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:or:2" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:7" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:check:checkEquals:12" = global ptr null
@"Core:check:checkEquals:13" = global ptr null
@"Core:check:checkEquals:15:0" = global ptr null
@"Core:check:checkEquals:16" = global ptr null
@"Core:check:checkEquals:19" = global ptr null
@"Core:check:checkEquals:20" = global ptr null
@"Core:check:checkEquals:22:0" = global ptr null
@"Core:check:checkEquals:23" = global ptr null
@"Core:check:checkEquals:25" = global ptr null
@"Core:check:checkEquals:26" = global ptr null
@"Core:check:checkEquals:27" = global ptr null
@"Core:check:checkEquals:28" = global ptr null
@"Core:check:checkEquals:29" = global ptr null
@"Core:controlFlow:if:17" = global ptr null
@"Core:controlFlow:if:19" = global ptr null
@"Core:controlFlow:if:24" = global ptr null
@"Core:controlFlow:if:7" = global ptr null
@"Core:controlFlow:if:9" = global ptr null
@"Core:controlFlow:recursive:15" = global ptr null
@"Core:controlFlow:recursive:16:0:3" = global ptr null
@"Core:controlFlow:recursive:16:5" = global ptr null
@"Core:controlFlow:recursive:21" = global ptr null
@"Core:controlFlow:recursive:7" = global ptr null
@"Core:fixedDecimal:fromInt:13" = global ptr null
@"Core:fixedDecimal:fromIntScaled:14" = global ptr null
@"Core:fixedDecimal:fromIntScaled:9" = global ptr null
@"Core:fixedDecimal:isScale:14:7" = global ptr null
@"Core:fixedDecimal:isScale:15" = global ptr null
@"Core:function:is0:11" = global ptr null
@"Core:function:is0:9:3" = global ptr null
@"Core:function:is2:11" = global ptr null
@"Core:function:is2:9:3" = global ptr null
@"Core:function:run:12" = global ptr null
@"Core:function:run:2" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:int:compareTo:18" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@"Core:int:isNonNegative:14" = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_parse = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Equal = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_Greater = global ptr null
@tag_Int = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_Match = global ptr null
@tag_MinorUnits = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Scale = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@num_3 = global ptr null
@num_4 = global ptr null
@num_5 = global ptr null
@num_10 = global ptr null
@"text_ to be " = global ptr null
@text_. = global ptr null
@"text_A check failed: Expected " = global ptr null
@"text_Expected `Equal`, got `" = global ptr null
@"text_Expected `False`, got `" = global ptr null
@"text_Expected `Greater`, got `" = global ptr null
@"text_Expected `Less`, got `" = global ptr null
@"text_Expected `True`, got `" = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_`." = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"text_`function.is0 then` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`int.is minorUnits` was not satisfied" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`isScale scale` was not satisfied" = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then" = global ptr null
@"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.2 = global ptr null
@2 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.4 = global ptr null
@3 = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@4 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.6 = global ptr null
@5 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.8 = global ptr null
@6 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@7 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_else.10 = global ptr null
@8 = global ptr null
@fun_Builtins__ifElse_1_case-0_didNotMatch = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Builtins__listInsert = global ptr null
@"fun_Builtins__toDebugText, Core_iterator_201, Core_toDebugText_toDebugText" = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_9 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@9 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_else.12 = global ptr null
@10 = global ptr null
@fun_Core_bool_is_1_case-0_didNotMatch = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@11 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_else.14 = global ptr null
@12 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_lazyAnd_16_equals_else = global ptr null
@13 = global ptr null
@fun_Core_bool_lazyAnd_16_case-0_matched = global ptr null
@fun_Core_bool_lazyAnd_16_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_16_equals_else.16 = global ptr null
@14 = global ptr null
@fun_Core_bool_lazyAnd_16_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_lazyOr_16_equals_else = global ptr null
@15 = global ptr null
@fun_Core_bool_lazyOr_16_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_16_equals_else.18 = global ptr null
@16 = global ptr null
@fun_Core_bool_lazyOr_16_case-1_matched = global ptr null
@fun_Core_bool_lazyOr_16_case-1_didNotMatch = global ptr null
@fun_Core_check_checkEquals = global ptr null
@fun_Core_check_checkEquals_14 = global ptr null
@fun_Core_check_checkEquals_15 = global ptr null
@fun_Core_check_checkEquals_21 = global ptr null
@fun_Core_check_checkEquals_22 = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_9 = global ptr null
@fun_Core_int_compareTo = global ptr null
@fun_Core_int_isLessThan = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@17 = global ptr null
@fun_Core_fixedDecimal_fromIntScaled = global ptr null
@fun_Core_fixedDecimal_isScale_14 = global ptr null
@tag_FixedDecimal = global ptr null
@"Core:function:is1:11" = global ptr null
@"Core:function:is1:9:3" = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_9 = global ptr null
@"Core:int:fitsInRustU32:15" = global ptr null
@"Core:int:fitsInRustU32:4" = global ptr null
@"Core:int:fitsInRustU32:7" = global ptr null
@"Core:int:fitsInRustU32:9" = global ptr null
@"Core:int:isOdd:4" = global ptr null
@"Core:int:isOdd:8" = global ptr null
@"Core:int:isPositive:4" = global ptr null
@"Core:int:isPositive:8" = global ptr null
@num_4294967295 = global ptr null
@"text_`isNonNegative value` was not satisfied" = global ptr null
@fun_Core_int_isOdd = global ptr null
@"Core:iterator:111" = global ptr null
@"Core:iterator:all:13" = global ptr null
@"Core:iterator:all:16:11" = global ptr null
@"Core:iterator:all:16:13" = global ptr null
@"Core:iterator:all:16:2" = global ptr null
@"Core:iterator:all:16:22" = global ptr null
@"Core:iterator:all:17" = global ptr null
@"Core:iterator:all:7" = global ptr null
@"Core:iterator:all:9" = global ptr null
@"Core:iterator:any:13" = global ptr null
@"Core:iterator:any:16:11" = global ptr null
@"Core:iterator:any:16:13" = global ptr null
@"Core:iterator:any:16:2" = global ptr null
@"Core:iterator:any:16:22" = global ptr null
@"Core:iterator:any:17" = global ptr null
@"Core:iterator:any:7" = global ptr null
@"Core:iterator:any:9" = global ptr null
@"Core:iterator:chunked:17" = global ptr null
@"Core:iterator:chunked:19" = global ptr null
@"Core:iterator:chunked:23" = global ptr null
@"Core:iterator:chunked:28" = global ptr null
@"Core:iterator:chunked:9" = global ptr null
@"Core:iterator:ensure:13" = global ptr null
@"Core:iterator:ensure:17:2" = global ptr null
@"Core:iterator:ensure:18" = global ptr null
@"Core:iterator:ensure:7" = global ptr null
@"Core:iterator:ensure:9" = global ptr null
@"Core:iterator:foldLeft:12" = global ptr null
@"Core:iterator:foldLeft:14" = global ptr null
@"Core:iterator:foldLeft:21:1" = global ptr null
@"Core:iterator:foldLeft:21:4" = global ptr null
@"Core:iterator:foldLeft:21:5" = global ptr null
@"Core:iterator:foldLeft:21:5:10" = global ptr null
@"Core:iterator:foldLeft:21:5:8" = global ptr null
@"Core:iterator:foldLeft:21:5:item" = global ptr null
@"Core:iterator:foldLeft:21:5:rest" = global ptr null
@"Core:iterator:foldLeft:21:iterator" = global ptr null
@"Core:iterator:foldLeft:21:value" = global ptr null
@"Core:iterator:foldLeft:22" = global ptr null
@"Core:iterator:foldLeft:3" = global ptr null
@"Core:iterator:fromList:18" = global ptr null
@"Core:iterator:fromList:19:8" = global ptr null
@"Core:iterator:fromList:20" = global ptr null
@"Core:iterator:fromList:9" = global ptr null
@"Core:iterator:generate:17" = global ptr null
@"Core:iterator:generate:19" = global ptr null
@"Core:iterator:generate:27" = global ptr null
@"Core:iterator:generate:29" = global ptr null
@"Core:iterator:generate:37" = global ptr null
@"Core:iterator:generate:39" = global ptr null
@"Core:iterator:generate:42:6:14" = global ptr null
@"Core:iterator:generate:42:6:4" = global ptr null
@"Core:iterator:generate:42:7" = global ptr null
@"Core:iterator:generate:43" = global ptr null
@"Core:iterator:generate:9" = global ptr null
@"Core:iterator:generateWithState:12:1:2" = global ptr null
@"Core:iterator:generateWithState:12:1:3" = global ptr null
@"Core:iterator:generateWithState:12:1:3:19" = global ptr null
@"Core:iterator:generateWithState:12:1:3:20" = global ptr null
@"Core:iterator:generateWithState:12:1:3:22:0" = global ptr null
@"Core:iterator:generateWithState:12:1:3:23" = global ptr null
@"Core:iterator:generateWithState:12:1:3:25" = global ptr null
@"Core:iterator:generateWithState:12:1:3:26" = global ptr null
@"Core:iterator:generateWithState:12:1:3:27" = global ptr null
@"Core:iterator:generateWithState:12:1:3:6" = global ptr null
@"Core:iterator:generateWithState:12:1:3:item" = global ptr null
@"Core:iterator:generateWithState:12:1:3:state" = global ptr null
@"Core:iterator:generateWithState:13" = global ptr null
@"Core:iterator:generateWithState:7" = global ptr null
@"Core:iterator:generateWithState:9" = global ptr null
@"Core:iterator:isEmpty:3" = global ptr null
@"Core:iterator:isEmpty:7" = global ptr null
@"Core:iterator:joinToText:12:18" = global ptr null
@"Core:iterator:joinToText:12:9" = global ptr null
@"Core:iterator:joinToText:13" = global ptr null
@"Core:iterator:joinToText:3" = global ptr null
@"Core:iterator:length:3" = global ptr null
@"Core:iterator:length:6" = global ptr null
@"Core:iterator:length:8" = global ptr null
@"Core:iterator:map:12" = global ptr null
@"Core:iterator:map:14" = global ptr null
@"Core:iterator:map:17:2" = global ptr null
@"Core:iterator:map:17:3" = global ptr null
@"Core:iterator:map:17:3:5" = global ptr null
@"Core:iterator:map:17:3:item" = global ptr null
@"Core:iterator:map:17:3:rest" = global ptr null
@"Core:iterator:map:18" = global ptr null
@"Core:iterator:map:3" = global ptr null
@"Core:iterator:next:15" = global ptr null
@"Core:iterator:next:3" = global ptr null
@"Core:iterator:next:6" = global ptr null
@"Core:iterator:next:nextFunction" = global ptr null
@"Core:iterator:reduceLeft:13" = global ptr null
@"Core:iterator:reduceLeft:15" = global ptr null
@"Core:iterator:reduceLeft:16" = global ptr null
@"Core:iterator:reduceLeft:16:14" = global ptr null
@"Core:iterator:reduceLeft:16:item" = global ptr null
@"Core:iterator:reduceLeft:16:rest" = global ptr null
@"Core:iterator:reduceLeft:7" = global ptr null
@"Core:iterator:reduceLeft:9" = global ptr null
@"Core:iterator:skip:14" = global ptr null
@"Core:iterator:skip:22" = global ptr null
@"Core:iterator:skip:24" = global ptr null
@"Core:iterator:skip:26:6:1" = global ptr null
@"Core:iterator:skip:26:6:7:2" = global ptr null
@"Core:iterator:skip:26:6:8:2" = global ptr null
@"Core:iterator:skip:26:6:8:3" = global ptr null
@"Core:iterator:skip:26:6:8:3:13" = global ptr null
@"Core:iterator:skip:26:6:8:3:15" = global ptr null
@"Core:iterator:skip:26:6:8:3:rest" = global ptr null
@"Core:iterator:skip:26:6:9" = global ptr null
@"Core:iterator:skip:26:6:iterator" = global ptr null
@"Core:iterator:skip:26:6:n" = global ptr null
@"Core:iterator:skip:26:7" = global ptr null
@"Core:iterator:skip:3" = global ptr null
@"Core:iterator:sum:17" = global ptr null
@"Core:iterator:sum:3" = global ptr null
@"Core:iterator:sum:5:15" = global ptr null
@"Core:iterator:sum:6" = global ptr null
@"Core:iterator:sum:8:8" = global ptr null
@"Core:iterator:sum:9" = global ptr null
@"Core:iterator:take:17" = global ptr null
@"Core:iterator:take:19" = global ptr null
@"Core:iterator:take:23" = global ptr null
@"Core:iterator:take:25" = global ptr null
@"Core:iterator:take:27:1" = global ptr null
@"Core:iterator:take:27:10" = global ptr null
@"Core:iterator:take:27:index" = global ptr null
@"Core:iterator:take:27:item" = global ptr null
@"Core:iterator:take:28" = global ptr null
@"Core:iterator:take:30:5" = global ptr null
@"Core:iterator:take:31" = global ptr null
@"Core:iterator:take:9" = global ptr null
@"Core:iterator:takeWhile:3" = global ptr null
@"Core:iterator:takeWhile:7:2" = global ptr null
@"Core:iterator:takeWhile:7:3" = global ptr null
@"Core:iterator:takeWhile:7:3:4" = global ptr null
@"Core:iterator:takeWhile:7:3:7" = global ptr null
@"Core:iterator:takeWhile:7:3:item" = global ptr null
@"Core:iterator:takeWhile:7:3:rest" = global ptr null
@"Core:iterator:takeWhile:8" = global ptr null
@"Core:iterator:toList:3" = global ptr null
@"Core:iterator:toList:6:8" = global ptr null
@"Core:iterator:toList:7" = global ptr null
@"Core:iterator:where:12" = global ptr null
@"Core:iterator:where:14" = global ptr null
@"Core:iterator:where:17:2:2" = global ptr null
@"Core:iterator:where:17:2:3" = global ptr null
@"Core:iterator:where:17:2:3:4" = global ptr null
@"Core:iterator:where:17:2:3:6:2" = global ptr null
@"Core:iterator:where:17:2:3:6:4" = global ptr null
@"Core:iterator:where:17:2:3:6:5" = global ptr null
@"Core:iterator:where:17:2:3:6:5:item" = global ptr null
@"Core:iterator:where:17:2:3:6:5:rest" = global ptr null
@"Core:iterator:where:17:2:3:7" = global ptr null
@"Core:iterator:where:17:2:3:item" = global ptr null
@"Core:iterator:where:17:2:3:rest" = global ptr null
@"Core:iterator:where:17:3" = global ptr null
@"Core:iterator:where:18" = global ptr null
@"Core:iterator:where:3" = global ptr null
@"Core:iterator:windowed:14" = global ptr null
@"Core:iterator:windowed:22" = global ptr null
@"Core:iterator:windowed:24" = global ptr null
@"Core:iterator:windowed:3" = global ptr null
@"Core:iterator:windowed:34" = global ptr null
@"Core:iterator:windowed:42" = global ptr null
@"Core:iterator:windowed:44" = global ptr null
@"Core:iterator:windowed:52" = global ptr null
@"Core:iterator:windowed:54" = global ptr null
@"Core:iterator:windowed:57:14" = global ptr null
@"Core:iterator:windowed:57:20" = global ptr null
@"Core:iterator:windowed:57:24:7" = global ptr null
@"Core:iterator:windowed:57:26" = global ptr null
@"Core:iterator:windowed:57:3" = global ptr null
@"Core:iterator:windowed:57:5" = global ptr null
@"Core:iterator:windowed:58" = global ptr null
@"Core:iterator:withIndex:11:1" = global ptr null
@"Core:iterator:withIndex:11:4" = global ptr null
@"Core:iterator:withIndex:11:5" = global ptr null
@"Core:iterator:withIndex:11:5:20" = global ptr null
@"Core:iterator:withIndex:11:5:item" = global ptr null
@"Core:iterator:withIndex:11:5:rest" = global ptr null
@"Core:iterator:withIndex:11:index" = global ptr null
@"Core:iterator:withIndex:11:iterator" = global ptr null
@"Core:iterator:withIndex:12" = global ptr null
@"Core:iterator:withIndex:3" = global ptr null
@"Core:iterator:wrapSafe:10:7" = global ptr null
@"Core:iterator:wrapSafe:14:1" = global ptr null
@"Core:iterator:wrapSafe:14:11" = global ptr null
@"Core:iterator:wrapSafe:14:18" = global ptr null
@"Core:iterator:wrapSafe:14:1:8" = global ptr null
@"Core:iterator:wrapSafe:14:1:function" = global ptr null
@"Core:iterator:wrapSafe:14:20" = global ptr null
@"Core:iterator:wrapSafe:14:22:7" = global ptr null
@"Core:iterator:wrapSafe:14:22:8" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:17" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:7" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:item" = global ptr null
@"Core:iterator:wrapSafe:14:22:8:rest" = global ptr null
@"Core:iterator:wrapSafe:15" = global ptr null
@"Core:iterator:wrapSafe:7" = global ptr null
@"Core:iterator:wrapSafe:9" = global ptr null
@"Core:list:append:11" = global ptr null
@"Core:list:append:4" = global ptr null
@"Core:list:append:9" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:is:1:_" = global ptr null
@"Core:result:mapOrElse:12" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"Core:result:mapOrElse:2" = global ptr null
@"Core:result:mapOrElse:22" = global ptr null
@"Core:result:mapOrElse:24" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"Core:result:mapOrElse:26:2" = global ptr null
@"Core:result:mapOrElse:26:5" = global ptr null
@"Core:result:mapOrElse:26:value" = global ptr null
@"Core:result:mapOrElse:26:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:unwrapOr:2" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@"Core:result:unwrapOrElse:12" = global ptr null
@"Core:result:unwrapOrElse:14" = global ptr null
@"Core:result:unwrapOrElse:18:7" = global ptr null
@"Core:result:unwrapOrElse:19" = global ptr null
@"Core:result:unwrapOrElse:2" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@tag_Empty = global ptr null
@tag_Error = global ptr null
@tag_Index = global ptr null
@tag_Item = global ptr null
@tag_Iterator = global ptr null
@tag_More = global ptr null
@tag_N = global ptr null
@tag_Ok = global ptr null
@tag_Rest = global ptr null
@tag_State = global ptr null
@tag_Value = global ptr null
@text_ = global ptr null
@"text_Can't `reduceLeft` an empty iterator" = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected Iterator, got " = global ptr null
@"text_Expected More, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Expected `Empty`, got `" = global ptr null
@"text_Iterator items need to be ints." = global ptr null
@"text_Struct doesn't contain key `Index`: `" = global ptr null
@"text_Struct doesn't contain key `Item`: `" = global ptr null
@"text_Struct doesn't contain key `Iterator`: `" = global ptr null
@"text_Struct doesn't contain key `N`: `" = global ptr null
@"text_Struct doesn't contain key `Rest`: `" = global ptr null
@"text_Struct doesn't contain key `State`: `" = global ptr null
@"text_Struct doesn't contain key `Value`: `" = global ptr null
@"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `" = global ptr null
@"text_The guard needs to panic." = global ptr null
@"text_`" = global ptr null
@"text_`all` needs an iterator." = global ptr null
@"text_`any` needs an iterator." = global ptr null
@"text_`bool.is allowPartialWindows` was not satisfied" = global ptr null
@"text_`bool.is itemResult` was not satisfied" = global ptr null
@"text_`chunked` needs an iterator." = global ptr null
@"text_`ensure` needs an iterator." = global ptr null
@"text_`foldLeft` needs an iterator." = global ptr null
@"text_`function.is0 defaultGetter` was not satisfied" = global ptr null
@"text_`function.is0 notIteratorGuard` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 guard` was not satisfied" = global ptr null
@"text_`function.is1 mapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`function.is1 tester` was not satisfied" = global ptr null
@"text_`function.is1 valueGetter` was not satisfied" = global ptr null
@"text_`function.is2 combine` was not satisfied" = global ptr null
@"text_`int.fitsInRustU32 length` was not satisfied" = global ptr null
@"text_`int.is length` was not satisfied" = global ptr null
@"text_`int.is n` was not satisfied" = global ptr null
@"text_`int.is size` was not satisfied" = global ptr null
@"text_`int.is step` was not satisfied" = global ptr null
@"text_`int.isNonNegative length` was not satisfied" = global ptr null
@"text_`int.isNonNegative n` was not satisfied" = global ptr null
@"text_`int.isPositive size` was not satisfied" = global ptr null
@"text_`int.isPositive step` was not satisfied" = global ptr null
@"text_`is list` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`isEmpty` needs an iterator." = global ptr null
@"text_`joinToText` needs an iterator." = global ptr null
@"text_`length` needs an iterator." = global ptr null
@"text_`list.is l` was not satisfied" = global ptr null
@"text_`map` needs an iterator." = global ptr null
@"text_`next` needs an iterator." = global ptr null
@"text_`reduceLeft` needs an iterator." = global ptr null
@"text_`skip` needs an iterator." = global ptr null
@"text_`sum` needs an iterator." = global ptr null
@"text_`takeWhile` needs an iterator." = global ptr null
@"text_`take` needs an iterator." = global ptr null
@"text_`text.is item` was not satisfied" = global ptr null
@"text_`toList` needs an iterator." = global ptr null
@"text_`where` needs an iterator." = global ptr null
@"text_`windowed` needs an iterator." = global ptr null
@"text_`withIndex` needs an iterator." = global ptr null
@fun_Core_result_is = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.20 = global ptr null
@fun_Core_result_is_1_equals_then.22 = global ptr null
@18 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@fun_Core_result_is_1_equals_else.24 = global ptr null
@19 = global ptr null
@fun_Core_result_is_1_equals_else.26 = global ptr null
@20 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.28 = global ptr null
@fun_Core_result_is_1_equals_then.30 = global ptr null
@fun_Core_result_is_1_equals_then.32 = global ptr null
@21 = global ptr null
@fun_Core_result_is_1_equals_else.34 = global ptr null
@fun_Core_result_is_1_equals_else.36 = global ptr null
@22 = global ptr null
@fun_Core_result_is_1_equals_else.38 = global ptr null
@23 = global ptr null
@fun_Core_result_is_1_case-0_matched = global ptr null
@fun_Core_result_is_1_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_mapOrElse_26_equals_then = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.40 = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.42 = global ptr null
@24 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.44 = global ptr null
@25 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.46 = global ptr null
@26 = global ptr null
@fun_Core_result_mapOrElse_26_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_26_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.48 = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.50 = global ptr null
@fun_Core_result_mapOrElse_26_equals_then.52 = global ptr null
@27 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.54 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.56 = global ptr null
@28 = global ptr null
@fun_Core_result_mapOrElse_26_equals_else.58 = global ptr null
@29 = global ptr null
@fun_Core_result_mapOrElse_26_case-1_matched = global ptr null
@fun_Core_result_mapOrElse_26_case-1_didNotMatch = global ptr null
@"fun_Core_iterator_range_32, Core_result_unwrapOrElse_17" = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@fun_Core_result_unwrapOrElse_18 = global ptr null
@fun_Core_list_append = global ptr null
@"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched" = global ptr null
@fun_Core_iterator_wrapSafe = global ptr null
@fun_Core_iterator_wrapSafe_10 = global ptr null
@fun_Core_iterator_wrapSafe_14 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.60 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_then.62 = global ptr null
@30 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.64 = global ptr null
@31 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_equals_else.66 = global ptr null
@32 = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_matched = global ptr null
@fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_14_22 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else = global ptr null
@33 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.68 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.70 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_then.72 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then = global ptr null
@34 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else = global ptr null
@35 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.74 = global ptr null
@36 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.76 = global ptr null
@37 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.78 = global ptr null
@38 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.80 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.82 = global ptr null
@39 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.84 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.86 = global ptr null
@40 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_equals_else.88 = global ptr null
@41 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_matched = global ptr null
@tag_More.89 = global ptr null
@fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch = global ptr null
@tag_Iterator.90 = global ptr null
@fun_Core_controlFlow_recursive_16 = global ptr null
@fun_Core_controlFlow_recursive_16_0 = global ptr null
@fun_Core_iterator_next = global ptr null
@fun_Core_iterator_next_2 = global ptr null
@fun_Core_iterator_next_6_equals_then = global ptr null
@fun_Core_iterator_next_6_equals_then.92 = global ptr null
@fun_Core_iterator_next_6_equals_then.94 = global ptr null
@42 = global ptr null
@fun_Core_iterator_next_6_equals_else = global ptr null
@fun_Core_iterator_next_6_equals_else.96 = global ptr null
@43 = global ptr null
@fun_Core_iterator_next_6_equals_else.98 = global ptr null
@44 = global ptr null
@fun_Core_iterator_next_6_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState = global ptr null
@fun_Core_iterator_generateWithState_12 = global ptr null
@fun_Core_iterator_generateWithState_12_1 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.100 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.102 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_then.104 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then = global ptr null
@45 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else = global ptr null
@46 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_then.106 = global ptr null
@47 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_hasKey_else.108 = global ptr null
@48 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_then.110 = global ptr null
@49 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_isMatch_else.112 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else = global ptr null
@50 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.114 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.116 = global ptr null
@51 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.118 = global ptr null
@52 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_matched = global ptr null
@tag_More.119 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_equals_else.121 = global ptr null
@53 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_case-2_matched = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_21 = global ptr null
@fun_Core_iterator_generateWithState_12_1_3_22 = global ptr null
@tag_Iterator.122 = global ptr null
@fun_Core_controlFlow_recursive_16.124 = global ptr null
@fun_Core_controlFlow_recursive_16_0.126 = global ptr null
@fun_Core_iterator_generate = global ptr null
@fun_Core_iterator_generate_42 = global ptr null
@fun_Core_iterator_generate_42_6 = global ptr null
@tag_More.127 = global ptr null
@fun_Core_iterator_map = global ptr null
@fun_Core_iterator_map_2 = global ptr null
@fun_Core_iterator_map_17 = global ptr null
@fun_Core_iterator_map_17_3_equals_else = global ptr null
@54 = global ptr null
@fun_Core_iterator_map_17_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_map_17_3_equals_then = global ptr null
@fun_Core_iterator_map_17_3_equals_then.129 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.131 = global ptr null
@fun_Core_iterator_map_17_3_equals_then.133 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then = global ptr null
@55 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else = global ptr null
@56 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then = global ptr null
@fun_Core_iterator_map_17_3_hasKey_then.135 = global ptr null
@57 = global ptr null
@fun_Core_iterator_map_17_3_hasKey_else.137 = global ptr null
@58 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_then.139 = global ptr null
@59 = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else = global ptr null
@fun_Core_iterator_map_17_3_isMatch_else.141 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.143 = global ptr null
@60 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.145 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.147 = global ptr null
@61 = global ptr null
@fun_Core_iterator_map_17_3_equals_else.149 = global ptr null
@62 = global ptr null
@fun_Core_iterator_map_17_3_case-1_matched = global ptr null
@tag_More.150 = global ptr null
@fun_Core_iterator_map_17_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then = global ptr null
@63 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else = global ptr null
@64 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then.152 = global ptr null
@65 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else.154 = global ptr null
@66 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then.156 = global ptr null
@67 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.158 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_else = global ptr null
@68 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.160 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else = global ptr null
@69 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.162 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.164 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.166 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then = global ptr null
@70 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else = global ptr null
@71 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then.168 = global ptr null
@72 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else.170 = global ptr null
@73 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then.172 = global ptr null
@74 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else.174 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.176 = global ptr null
@75 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.178 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.180 = global ptr null
@76 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.182 = global ptr null
@77 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_matched = global ptr null
@tag_More.183 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_ensure = global ptr null
@fun_Core_iterator_ensure_12 = global ptr null
@fun_Core_iterator_ensure_17 = global ptr null
@fun_Core_iterator_foldLeft = global ptr null
@fun_Core_iterator_foldLeft_2 = global ptr null
@fun_Core_iterator_foldLeft_21 = global ptr null
@fun_Core_iterator_foldLeft_21_1_equals_then = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_then = global ptr null
@78 = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_else = global ptr null
@79 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_then.185 = global ptr null
@80 = global ptr null
@fun_Core_iterator_foldLeft_21_1_hasKey_else.187 = global ptr null
@81 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_then.189 = global ptr null
@82 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_else.191 = global ptr null
@fun_Core_iterator_foldLeft_21_1_equals_else = global ptr null
@83 = global ptr null
@fun_Core_iterator_foldLeft_21_1_isMatch_else.193 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else = global ptr null
@84 = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-0_matched = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then.195 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then.197 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_then.199 = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_then = global ptr null
@85 = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_else = global ptr null
@86 = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_then.201 = global ptr null
@87 = global ptr null
@fun_Core_iterator_foldLeft_21_5_hasKey_else.203 = global ptr null
@88 = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_then.205 = global ptr null
@89 = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_21_5_isMatch_else.207 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else.209 = global ptr null
@90 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else.211 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else.213 = global ptr null
@91 = global ptr null
@fun_Core_iterator_foldLeft_21_5_equals_else.215 = global ptr null
@92 = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-1_matched = global ptr null
@fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_16.217 = global ptr null
@fun_Core_controlFlow_recursive_16_0.219 = global ptr null
@tag_Error.220 = global ptr null
@fun_Core_iterator_reduceLeft_16_case-0_matched = global ptr null
@fun_Core_iterator_reduceLeft = global ptr null
@fun_Core_iterator_reduceLeft_12 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else = global ptr null
@93 = global ptr null
@fun_Core_iterator_reduceLeft_16_case-0_didNotMatch = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then.222 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then.224 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_then.226 = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_then = global ptr null
@94 = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_else = global ptr null
@95 = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_then = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_then.228 = global ptr null
@96 = global ptr null
@fun_Core_iterator_reduceLeft_16_hasKey_else.230 = global ptr null
@97 = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_then.232 = global ptr null
@98 = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_else = global ptr null
@fun_Core_iterator_reduceLeft_16_isMatch_else.234 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else.236 = global ptr null
@99 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else.238 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else.240 = global ptr null
@100 = global ptr null
@fun_Core_iterator_reduceLeft_16_equals_else.242 = global ptr null
@101 = global ptr null
@fun_Core_iterator_reduceLeft_16_case-1_matched = global ptr null
@tag_Ok.243 = global ptr null
@fun_Core_iterator_reduceLeft_16_case-1_didNotMatch = global ptr null
@fun_Core_iterator_sum_8 = global ptr null
@fun_Core_iterator_sum = global ptr null
@fun_Core_iterator_sum_2 = global ptr null
@fun_Core_iterator_sum_5 = global ptr null
@fun_Core_iterator_length_5 = global ptr null
@fun_Core_iterator_all = global ptr null
@fun_Core_iterator_all_12 = global ptr null
@fun_Core_iterator_all_16 = global ptr null
@fun_Core_bool_and_12 = global ptr null
@fun_Core_iterator_any = global ptr null
@fun_Core_iterator_any_12 = global ptr null
@fun_Core_iterator_any_16 = global ptr null
@fun_Core_bool_or_12 = global ptr null
@fun_Core_iterator_joinToText = global ptr null
@fun_Core_iterator_joinToText_2 = global ptr null
@fun_Core_iterator_joinToText_12 = global ptr null
@fun_Core_iterator_where = global ptr null
@fun_Core_iterator_where_2 = global ptr null
@fun_Core_iterator_where_17 = global ptr null
@fun_Core_iterator_where_17_2 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else = global ptr null
@102 = global ptr null
@fun_Core_iterator_where_17_2_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then.245 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then.247 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_then.249 = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_then = global ptr null
@103 = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_else = global ptr null
@104 = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_then = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_then.251 = global ptr null
@105 = global ptr null
@fun_Core_iterator_where_17_2_3_hasKey_else.253 = global ptr null
@106 = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_then.255 = global ptr null
@107 = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_else = global ptr null
@fun_Core_iterator_where_17_2_3_isMatch_else.257 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else.259 = global ptr null
@108 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else.261 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else.263 = global ptr null
@109 = global ptr null
@fun_Core_iterator_where_17_2_3_equals_else.265 = global ptr null
@110 = global ptr null
@fun_Core_iterator_where_17_2_3_case-1_matched = global ptr null
@fun_Core_iterator_where_17_2_3_5 = global ptr null
@tag_More.266 = global ptr null
@fun_Core_iterator_where_17_2_3_6 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else = global ptr null
@111 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then.268 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then.270 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_then.272 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_then = global ptr null
@112 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_else = global ptr null
@113 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_then = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_then.274 = global ptr null
@114 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_hasKey_else.276 = global ptr null
@115 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_then.278 = global ptr null
@116 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_else = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_isMatch_else.280 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else.282 = global ptr null
@117 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else.284 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else.286 = global ptr null
@118 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_equals_else.288 = global ptr null
@119 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_case-1_matched = global ptr null
@tag_More.289 = global ptr null
@fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_where_17_2_3_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_16.291 = global ptr null
@fun_Core_controlFlow_recursive_16_0.293 = global ptr null
@fun_Core_iterator_takeWhile = global ptr null
@fun_Core_iterator_takeWhile_2 = global ptr null
@fun_Core_iterator_takeWhile_7 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else = global ptr null
@120 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.295 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.297 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.299 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then = global ptr null
@121 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else = global ptr null
@122 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then.301 = global ptr null
@123 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else.303 = global ptr null
@124 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then.305 = global ptr null
@125 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else.307 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.309 = global ptr null
@126 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.311 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.313 = global ptr null
@127 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.315 = global ptr null
@128 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_matched = global ptr null
@fun_Core_iterator_takeWhile_7_3_5 = global ptr null
@tag_More.316 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_2 = global ptr null
@fun_Core_iterator_take_30 = global ptr null
@fun_Core_iterator_take = global ptr null
@fun_Core_iterator_take_22 = global ptr null
@fun_Core_iterator_take_27 = global ptr null
@fun_Core_iterator_take_27_1_equals_then = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then = global ptr null
@129 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else = global ptr null
@130 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then = global ptr null
@fun_Core_iterator_take_27_1_hasKey_then.318 = global ptr null
@131 = global ptr null
@fun_Core_iterator_take_27_1_hasKey_else.320 = global ptr null
@132 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_then.322 = global ptr null
@133 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.324 = global ptr null
@fun_Core_iterator_take_27_1_equals_else = global ptr null
@134 = global ptr null
@fun_Core_iterator_take_27_1_isMatch_else.326 = global ptr null
@fun_Core_iterator_skip_26_6 = global ptr null
@fun_Core_iterator_skip_26_6_1_equals_then = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_then = global ptr null
@135 = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_else = global ptr null
@136 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_then = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_then.328 = global ptr null
@137 = global ptr null
@fun_Core_iterator_skip_26_6_1_hasKey_else.330 = global ptr null
@138 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_then.332 = global ptr null
@139 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_else = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_else.334 = global ptr null
@fun_Core_iterator_skip_26_6_1_equals_else = global ptr null
@140 = global ptr null
@fun_Core_iterator_skip_26_6_1_isMatch_else.336 = global ptr null
@fun_Core_iterator_skip_26_6_7 = global ptr null
@fun_Core_iterator_skip_26_6_8 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else = global ptr null
@141 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then.338 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then.340 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_then.342 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_hasKey_then = global ptr null
@142 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_hasKey_else = global ptr null
@143 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_isMatch_then = global ptr null
@144 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_isMatch_else = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else.344 = global ptr null
@145 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else.346 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else.348 = global ptr null
@146 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_equals_else.350 = global ptr null
@147 = global ptr null
@fun_Core_iterator_skip_26_6_8_3_case-1_matched = global ptr null
@fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_16.352 = global ptr null
@fun_Core_controlFlow_recursive_16_0.354 = global ptr null
@fun_Core_iterator_skip = global ptr null
@fun_Core_iterator_skip_2 = global ptr null
@fun_Core_iterator_skip_26 = global ptr null
@tag_Iterator.355 = global ptr null
@fun_Core_iterator_fromList = global ptr null
@fun_Core_iterator_fromList_19 = global ptr null
@148 = global ptr null
@fun_Core_iterator_toList_6 = global ptr null
@fun_Core_iterator_toList_2 = global ptr null
@fun_Core_iterator_windowed = global ptr null
@fun_Core_iterator_windowed_2 = global ptr null
@fun_Core_iterator_windowed_57 = global ptr null
@fun_Core_iterator_windowed_57_18 = global ptr null
@fun_Core_iterator_windowed_57_19 = global ptr null
@fun_Core_iterator_windowed_57_24 = global ptr null
@tag_More.356 = global ptr null
@fun_Core_iterator_chunked = global ptr null
@fun_Core_iterator_chunked_22 = global ptr null
@149 = global ptr null
@num_6 = global ptr null
@num_7 = global ptr null
@num_8 = global ptr null
@num_9 = global ptr null
@150 = global ptr null
@"Core:iterator:125" = global ptr null
@"Core:iterator:129" = global ptr null
@"Core:iterator:130" = global ptr null
@fun_Core_iterator_130_equals_then = global ptr null
@fun_Core_iterator_130_equals_then.358 = global ptr null
@fun_Core_iterator_130_equals_then.360 = global ptr null
@fun_Core_iterator_130_equals_then.362 = global ptr null
@fun_Core_iterator_130_hasKey_then = global ptr null
@151 = global ptr null
@fun_Core_iterator_130_hasKey_else = global ptr null
@152 = global ptr null
@fun_Core_iterator_130_isMatch_then = global ptr null
@fun_Core_iterator_130_hasKey_then.364 = global ptr null
@153 = global ptr null
@fun_Core_iterator_130_hasKey_else.366 = global ptr null
@154 = global ptr null
@fun_Core_iterator_130_isMatch_then.368 = global ptr null
@155 = global ptr null
@fun_Core_iterator_130_isMatch_else = global ptr null
@fun_Core_iterator_130_isMatch_else.370 = global ptr null
@fun_Core_iterator_130_equals_else = global ptr null
@156 = global ptr null
@fun_Core_iterator_130_equals_else.372 = global ptr null
@fun_Core_iterator_130_equals_else.374 = global ptr null
@157 = global ptr null
@fun_Core_iterator_130_equals_else.376 = global ptr null
@158 = global ptr null
@fun_Core_iterator_130_isMatch_else.378 = global ptr null
@"Core:iterator:item" = global ptr null
@"Core:iterator:rest" = global ptr null
@"Core:iterator:135" = global ptr null
@"Core:iterator:138" = global ptr null
@"Core:iterator:139" = global ptr null
@fun_Core_iterator_139_equals_then = global ptr null
@fun_Core_iterator_139_equals_then.380 = global ptr null
@fun_Core_iterator_139_equals_then.382 = global ptr null
@fun_Core_iterator_139_equals_then.384 = global ptr null
@fun_Core_iterator_139_hasKey_then = global ptr null
@159 = global ptr null
@fun_Core_iterator_139_hasKey_else = global ptr null
@160 = global ptr null
@fun_Core_iterator_139_isMatch_then = global ptr null
@fun_Core_iterator_139_hasKey_then.386 = global ptr null
@161 = global ptr null
@fun_Core_iterator_139_hasKey_else.388 = global ptr null
@162 = global ptr null
@fun_Core_iterator_139_isMatch_then.390 = global ptr null
@163 = global ptr null
@fun_Core_iterator_139_isMatch_else = global ptr null
@fun_Core_iterator_139_isMatch_else.392 = global ptr null
@fun_Core_iterator_139_equals_else = global ptr null
@164 = global ptr null
@fun_Core_iterator_139_equals_else.394 = global ptr null
@fun_Core_iterator_139_equals_else.396 = global ptr null
@165 = global ptr null
@fun_Core_iterator_139_equals_else.398 = global ptr null
@166 = global ptr null
@fun_Core_iterator_139_isMatch_else.400 = global ptr null
@"Core:iterator:item#1" = global ptr null
@"Core:iterator:rest#1" = global ptr null
@"Core:iterator:144" = global ptr null
@"Core:iterator:149" = global ptr null
@fun_Core_iterator_isEmpty_2 = global ptr null
@"Core:iterator:151" = global ptr null
@"Core:iterator:156" = global ptr null
@"Core:iterator:157" = global ptr null
@fun_Core_iterator_isEmpty_2.402 = global ptr null
@"Core:iterator:159" = global ptr null
@"Core:iterator:163:8" = global ptr null
@fun_Core_iterator_163 = global ptr null
@"Core:iterator:164" = global ptr null
@"Core:iterator:166" = global ptr null
@fun_Core_iterator_toList_2.404 = global ptr null
@167 = global ptr null
@"Core:iterator:171" = global ptr null
@"Core:iterator:175" = global ptr null
@"Core:iterator:177" = global ptr null
@"Core:iterator:181" = global ptr null
@fun_Core_iterator_length_2 = global ptr null
@"Core:iterator:183" = global ptr null
@"Core:iterator:187:7" = global ptr null
@fun_Core_iterator_187 = global ptr null
@"Core:iterator:188" = global ptr null
@"Core:iterator:190" = global ptr null
@fun_Core_iterator_194 = global ptr null
@"Core:iterator:195" = global ptr null
@"Core:iterator:197" = global ptr null
@"Core:iterator:202" = global ptr null
@"Core:iterator:204" = global ptr null
@text_123 = global ptr null
@"Core:iterator:212" = global ptr null
@"Core:iterator:216:7" = global ptr null
@fun_Core_iterator_216 = global ptr null
@"Core:iterator:217" = global ptr null
@"Core:iterator:219" = global ptr null
@fun_Core_iterator_toList_2.406 = global ptr null
@168 = global ptr null
@"Core:iterator:226" = global ptr null
@"Core:iterator:230:8" = global ptr null
@fun_Core_iterator_230 = global ptr null
@"Core:iterator:231" = global ptr null
@"Core:iterator:233" = global ptr null
@fun_Core_iterator_toList_2.408 = global ptr null
@"Core:iterator:238" = global ptr null
@"Core:iterator:243" = global ptr null
@"Core:iterator:245" = global ptr null
@fun_Core_iterator_toList_2.410 = global ptr null
@169 = global ptr null
@"Core:iterator:251" = global ptr null
@num_12 = global ptr null
@"Core:iterator:256" = global ptr null
@"Core:iterator:258" = global ptr null
@fun_Core_iterator_toList_2.412 = global ptr null
@"Core:iterator:270" = global ptr null
@"Core:iterator:275" = global ptr null
@"Core:iterator:277" = global ptr null
@fun_Core_iterator_toList_2.414 = global ptr null
@170 = global ptr null
@"Core:iterator:285" = global ptr null
@num_40 = global ptr null
@"Core:iterator:290" = global ptr null
@"Core:iterator:292" = global ptr null
@fun_Core_iterator_toList_2.416 = global ptr null
@"Core:iterator:294" = global ptr null
@"Core:iterator:301" = global ptr null
@"Core:iterator:303" = global ptr null
@fun_Core_iterator_toList_2.418 = global ptr null
@171 = global ptr null
@172 = global ptr null
@173 = global ptr null
@"Core:iterator:320" = global ptr null
@"Core:iterator:325" = global ptr null
@"Core:iterator:327" = global ptr null
@fun_Core_iterator_toList_2.420 = global ptr null
@174 = global ptr null
@175 = global ptr null
@176 = global ptr null
@177 = global ptr null
@"Core:iterator:343" = global ptr null
@"Core:result:flatMap:12" = global ptr null
@"Core:result:flatMap:14" = global ptr null
@"Core:result:flatMap:17:2" = global ptr null
@"Core:result:flatMap:19" = global ptr null
@"Core:result:flatMap:2" = global ptr null
@"Core:result:flatMap:4" = global ptr null
@"Core:result:getValue:12" = global ptr null
@"Core:result:getValue:2" = global ptr null
@"Core:result:getValue:4" = global ptr null
@"Core:result:map:12" = global ptr null
@"Core:result:map:14" = global ptr null
@"Core:result:map:17:3" = global ptr null
@"Core:result:map:18" = global ptr null
@"Core:result:map:2" = global ptr null
@"Core:result:map:4" = global ptr null
@"Core:result:mapOr:12" = global ptr null
@"Core:result:mapOr:14" = global ptr null
@"Core:result:mapOr:19" = global ptr null
@"Core:result:mapOr:2" = global ptr null
@"Core:result:mapOr:4" = global ptr null
@"text_Expected 1 item, got " = global ptr null
@"text_Expected a List, got `" = global ptr null
@fun_Core_result_getValue = global ptr null
@fun_Core_result_flatMap = global ptr null
@fun_Core_result_flatMap_17 = global ptr null
@fun_Core_result_mapOr_18 = global ptr null
@fun_Core_result_map = global ptr null
@fun_Core_result_map_17 = global ptr null
@tag_Ok.421 = global ptr null
@"Examples:fibonacci:recursive:0:0:3" = global ptr null
@"Examples:fibonacci:recursive:0:5" = global ptr null
@"Examples:fibonacci:recursive:5" = global ptr null
@"Examples:fibonacci:compareTo:8" = global ptr null
@fun_Examples_fibonacci_isLessThan = global ptr null
@"Examples:fibonacci:fibonacci:2:9" = global ptr null
@"Examples:fibonacci:fibonacci:2:11:9" = global ptr null
@"Examples:fibonacci:fibonacci:2:11:10" = global ptr null
@"Examples:fibonacci:fibonacci:2:11:26" = global ptr null
@"Examples:fibonacci:fibonacci:2:11:27" = global ptr null
@"Examples:fibonacci:fibonacci:2:11:28" = global ptr null
@"Examples:fibonacci:fibonacci:2:12" = global ptr null
@fun_Examples_fibonacci_fibonacci_2 = global ptr null
@fun_Examples_fibonacci_fibonacci_2_10 = global ptr null
@fun_Examples_fibonacci_fibonacci_2_11 = global ptr null
@fun_Examples_fibonacci_recursive_0 = global ptr null
@fun_Examples_fibonacci_recursive_0_0 = global ptr null
@tag_Arguments = global ptr null
@"Examples:fibonacci:23:5" = global ptr null
@"Examples:fibonacci:23:6" = global ptr null
@"Examples:fibonacci:23:6:n" = global ptr null
@"Examples:fibonacci:23:6:7" = global ptr null
@fun_Examples_fibonacci_23_6_14 = global ptr null
@"Examples:fibonacci:23:6:15" = global ptr null
@"Examples:fibonacci:23:6:22" = global ptr null
@"text_Usage: `cargo run -- run fibonacci.candy -- <number>`" = global ptr null
@tag_Stdout = global ptr null
@"Examples:fibonacci:23:12" = global ptr null
@"Examples:fibonacci:23:13" = global ptr null
@fun_Examples_fibonacci_23 = global ptr null
@fun_Examples_fibonacci_23_6_equals_then = global ptr null
@fun_Examples_fibonacci_23_6_equals_then.423 = global ptr null
@178 = global ptr null
@fun_Examples_fibonacci_23_6_equals_else = global ptr null
@179 = global ptr null
@fun_Examples_fibonacci_23_6_equals_else.425 = global ptr null
@180 = global ptr null
@fun_Examples_fibonacci_23_6_case-0_matched = global ptr null
@fun_Examples_fibonacci_23_6_case-0_didNotMatch = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::functionRun:11", align 8
  %4 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::functionRun:16", align 8
  %6 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::functionRun:22", align 8
  %8 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::functionRun:5", align 8
  %10 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::getArgumentCount:11", align 8
  %12 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::getArgumentCount:5", align 8
  %14 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::ifElse:1", align 8
  %16 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::ifElse:11", align 8
  %18 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::ifElse:14", align 8
  %20 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::ifElse:19", align 8
  %22 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:25", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:28", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:33", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:41", align 8
  %30 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:5", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::intAdd:11", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::intAdd:18", align 8
  %36 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::intAdd:5", align 8
  %38 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::intBitwiseAnd:18", align 8
  %40 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intBitwiseAnd:5", align 8
  %42 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intCompareTo:11", align 8
  %44 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intCompareTo:18", align 8
  %46 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intCompareTo:5", align 8
  %48 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intMultiply:18", align 8
  %50 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intMultiply:5", align 8
  %52 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intParse:11\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intParse:11", align 8
  %54 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::intParse:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intParse:5", align 8
  %56 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::intSubtract:18", align 8
  %58 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::intSubtract:5", align 8
  %60 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %62 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %64 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %66 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %68 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::isNonNegative:12", align 8
  %70 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::isNonNegative:13", align 8
  %72 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::isNonNegative:5", align 8
  %74 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::listGet:11", align 8
  %76 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::listGet:14", align 8
  %78 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::listGet:16", align 8
  %80 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::listGet:24", align 8
  %82 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::listGet:25", align 8
  %84 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::listGet:30", align 8
  %86 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::listGet:37", align 8
  %88 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::listGet:5", align 8
  %90 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::listInsert:11", align 8
  %92 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::listInsert:14", align 8
  %94 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::listInsert:16", align 8
  %96 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::listInsert:24", align 8
  %98 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::listInsert:25", align 8
  %100 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::listInsert:27", align 8
  %102 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::listInsert:35", align 8
  %104 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::listInsert:5", align 8
  %106 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::listLength:11", align 8
  %108 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::listLength:5", align 8
  %110 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::structGet:12", align 8
  %112 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::structGet:14", align 8
  %114 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::structGet:21", align 8
  %116 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::structGet:5", align 8
  %118 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::tagGetValue:11", align 8
  %120 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::tagGetValue:13", align 8
  %122 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::tagGetValue:19", align 8
  %124 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::tagGetValue:5", align 8
  %126 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::textConcatenate:11", align 8
  %128 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Builtins::textConcatenate:18", align 8
  %130 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Builtins::textConcatenate:5", align 8
  %132 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Builtins::toDebugText:5", align 8
  %134 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Builtins::typeIs:19", align 8
  %136 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Builtins::typeIs:25", align 8
  %138 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Builtins::typeOf:5", align 8
  %140 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:and:13\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Core:bool:and:13", align 8
  %142 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:2\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Core:bool:and:2", align 8
  %144 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:4\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Core:bool:and:4", align 8
  %146 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:7\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Core:bool:and:7", align 8
  %148 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:9\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Core:bool:and:9", align 8
  %150 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Core:bool:is:1", align 8
  %152 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:12\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Core:bool:lazyAnd:12", align 8
  %154 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Core:bool:lazyAnd:14", align 8
  %156 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Core:bool:lazyAnd:16", align 8
  %158 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:16:11\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Core:bool:lazyAnd:16:11", align 8
  %160 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:16:19\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Core:bool:lazyAnd:16:19", align 8
  %162 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:16:7\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Core:bool:lazyAnd:16:7", align 8
  %164 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:2\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Core:bool:lazyAnd:2", align 8
  %166 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Core:bool:lazyAnd:4", align 8
  %168 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:12\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Core:bool:lazyOr:12", align 8
  %170 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Core:bool:lazyOr:14", align 8
  %172 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Core:bool:lazyOr:16", align 8
  %174 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:16:12\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Core:bool:lazyOr:16:12", align 8
  %176 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:16:20\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Core:bool:lazyOr:16:20", align 8
  %178 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:bool:lazyOr:16:8\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Core:bool:lazyOr:16:8", align 8
  %180 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:2\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Core:bool:lazyOr:2", align 8
  %182 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Core:bool:lazyOr:4", align 8
  %184 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:2\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Core:bool:not:2", align 8
  %186 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Core:bool:not:4", align 8
  %188 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Core:bool:not:6", align 8
  %190 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Core:bool:or:13", align 8
  %192 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:2\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Core:bool:or:2", align 8
  %194 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Core:bool:or:4", align 8
  %196 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:7\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Core:bool:or:7", align 8
  %198 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Core:bool:or:9", align 8
  %200 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:12\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Core:check:checkEquals:12", align 8
  %202 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:13\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Core:check:checkEquals:13", align 8
  %204 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:15:0\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Core:check:checkEquals:15:0", align 8
  %206 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:16\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Core:check:checkEquals:16", align 8
  %208 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:19\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Core:check:checkEquals:19", align 8
  %210 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:20\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Core:check:checkEquals:20", align 8
  %212 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:22:0\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Core:check:checkEquals:22:0", align 8
  %214 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:23\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Core:check:checkEquals:23", align 8
  %216 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:25\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Core:check:checkEquals:25", align 8
  %218 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:26\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Core:check:checkEquals:26", align 8
  %220 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:27\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Core:check:checkEquals:27", align 8
  %222 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:28\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Core:check:checkEquals:28", align 8
  %224 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:29\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Core:check:checkEquals:29", align 8
  %226 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:17\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Core:controlFlow:if:17", align 8
  %228 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:19\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Core:controlFlow:if:19", align 8
  %230 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:24\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Core:controlFlow:if:24", align 8
  %232 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:controlFlow:if:7\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Core:controlFlow:if:7", align 8
  %234 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:controlFlow:if:9\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Core:controlFlow:if:9", align 8
  %236 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:15\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Core:controlFlow:recursive:15", align 8
  %238 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:16:0:3\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Core:controlFlow:recursive:16:0:3", align 8
  %240 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:16:5\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Core:controlFlow:recursive:16:5", align 8
  %242 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:21\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Core:controlFlow:recursive:21", align 8
  %244 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:7\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Core:controlFlow:recursive:7", align 8
  %246 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:fromInt:13\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Core:fixedDecimal:fromInt:13", align 8
  %248 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:14\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Core:fixedDecimal:fromIntScaled:14", align 8
  %250 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:fromIntScaled:9\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Core:fixedDecimal:fromIntScaled:9", align 8
  %252 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isScale:14:7\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  %254 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:isScale:15\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Core:fixedDecimal:isScale:15", align 8
  %256 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:11\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Core:function:is0:11", align 8
  %258 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:function:is0:9:3\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Core:function:is0:9:3", align 8
  %260 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:11\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Core:function:is2:11", align 8
  %262 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:function:is2:9:3\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Core:function:is2:9:3", align 8
  %264 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:12\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Core:function:run:12", align 8
  %266 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:2\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Core:function:run:2", align 8
  %268 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Core:function:run:4", align 8
  %270 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:18\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Core:int:compareTo:18", align 8
  %272 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Core:int:compareTo:4", align 8
  %274 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Core:int:compareTo:9", align 8
  %276 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Core:int:isGreaterThan:13", align 8
  %278 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Core:int:isGreaterThan:4", align 8
  %280 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Core:int:isGreaterThan:9", align 8
  %282 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Core:int:isLessThan:13", align 8
  %284 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Core:int:isLessThan:4", align 8
  %286 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Core:int:isLessThan:9", align 8
  %288 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Core:int:isNegative:4", align 8
  %290 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Core:int:isNegative:8", align 8
  %292 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:14\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Core:int:isNonNegative:14", align 8
  %294 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Core:int:isNonNegative:4", align 8
  %296 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Core:int:isNonNegative:7", align 8
  %298 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"anonymous:$generated::needs", align 8
  %300 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %300, ptr @fun_candy_builtin_equals, align 8
  %301 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %301, ptr @fun_candy_builtin_get_argument_count, align 8
  %302 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %302, ptr @fun_candy_builtin_if_else, align 8
  %303 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %303, ptr @fun_candy_builtin_int_add, align 8
  %304 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %304, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %305 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %305, ptr @fun_candy_builtin_int_compare_to, align 8
  %306 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %306, ptr @fun_candy_builtin_int_multiply, align 8
  %307 = call ptr @make_candy_function(ptr @candy_builtin_int_parse, ptr null, i64 0)
  store ptr %307, ptr @fun_candy_builtin_int_parse, align 8
  %308 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %308, ptr @fun_candy_builtin_int_subtract, align 8
  %309 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %309, ptr @fun_candy_builtin_list_get, align 8
  %310 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %310, ptr @fun_candy_builtin_list_insert, align 8
  %311 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %311, ptr @fun_candy_builtin_list_length, align 8
  %312 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %312, ptr @fun_candy_builtin_struct_get, align 8
  %313 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %313, ptr @fun_candy_builtin_struct_has_key, align 8
  %314 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %314, ptr @fun_candy_builtin_tag_get_value, align 8
  %315 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %315, ptr @fun_candy_builtin_tag_has_value, align 8
  %316 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %316, ptr @fun_candy_builtin_tag_without_value, align 8
  %317 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %317, ptr @fun_candy_builtin_text_concatenate, align 8
  %318 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %318, ptr @fun_candy_builtin_to_debug_text, align 8
  %319 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %319, ptr @fun_candy_builtin_type_of, align 8
  %320 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %320, align 1
  %321 = call ptr @make_candy_tag(ptr %320, ptr null)
  store ptr %321, ptr @tag_Equal, align 8
  %322 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %322, align 1
  %323 = call ptr @make_candy_tag(ptr %322, ptr null)
  store ptr %323, ptr @tag_False, align 8
  %324 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %324, align 1
  %325 = call ptr @make_candy_tag(ptr %324, ptr null)
  store ptr %325, ptr @tag_Function, align 8
  %326 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %326, align 1
  %327 = call ptr @make_candy_tag(ptr %326, ptr null)
  store ptr %327, ptr @tag_Greater, align 8
  %328 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %328, align 1
  %329 = call ptr @make_candy_tag(ptr %328, ptr null)
  store ptr %329, ptr @tag_Int, align 8
  %330 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %330, align 1
  %331 = call ptr @make_candy_tag(ptr %330, ptr null)
  store ptr %331, ptr @tag_Less, align 8
  %332 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %332, align 1
  %333 = call ptr @make_candy_tag(ptr %332, ptr null)
  store ptr %333, ptr @tag_List, align 8
  %334 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %334, align 1
  %335 = call ptr @make_candy_tag(ptr %334, ptr null)
  store ptr %335, ptr @tag_Match, align 8
  %336 = alloca i8, i64 11, align 1
  store [11 x i8] c"MinorUnits\00", ptr %336, align 1
  %337 = call ptr @make_candy_tag(ptr %336, ptr null)
  store ptr %337, ptr @tag_MinorUnits, align 8
  %338 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %338, align 1
  %339 = call ptr @make_candy_tag(ptr %338, ptr null)
  store ptr %339, ptr @tag_NoMatch, align 8
  %340 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %340, align 1
  %341 = call ptr @make_candy_tag(ptr %340, ptr null)
  store ptr %341, ptr @tag_Nothing, align 8
  %342 = alloca i8, i64 6, align 1
  store [6 x i8] c"Scale\00", ptr %342, align 1
  %343 = call ptr @make_candy_tag(ptr %342, ptr null)
  store ptr %343, ptr @tag_Scale, align 8
  %344 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %344, align 1
  %345 = call ptr @make_candy_tag(ptr %344, ptr null)
  store ptr %345, ptr @tag_Struct, align 8
  %346 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %346, align 1
  %347 = call ptr @make_candy_tag(ptr %346, ptr null)
  store ptr %347, ptr @tag_Tag, align 8
  %348 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %348, align 1
  %349 = call ptr @make_candy_tag(ptr %348, ptr null)
  store ptr %349, ptr @tag_Text, align 8
  %350 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %350, align 1
  %351 = call ptr @make_candy_tag(ptr %350, ptr null)
  store ptr %351, ptr @tag_True, align 8
  %352 = call ptr @make_candy_int(i64 0)
  store ptr %352, ptr @num_0, align 8
  %353 = call ptr @make_candy_int(i64 1)
  store ptr %353, ptr @num_1, align 8
  %354 = call ptr @make_candy_int(i64 2)
  store ptr %354, ptr @num_2, align 8
  %355 = call ptr @make_candy_int(i64 3)
  store ptr %355, ptr @num_3, align 8
  %356 = call ptr @make_candy_int(i64 4)
  store ptr %356, ptr @num_4, align 8
  %357 = call ptr @make_candy_int(i64 5)
  store ptr %357, ptr @num_5, align 8
  %358 = call ptr @make_candy_int(i64 10)
  store ptr %358, ptr @num_10, align 8
  %359 = alloca i8, i64 8, align 1
  store [8 x i8] c" to be \00", ptr %359, align 1
  %360 = call ptr @make_candy_text(ptr %359)
  store ptr %360, ptr @"text_ to be ", align 8
  %361 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %361, align 1
  %362 = call ptr @make_candy_text(ptr %361)
  store ptr %362, ptr @text_., align 8
  %363 = alloca i8, i64 26, align 1
  store [26 x i8] c"A check failed: Expected \00", ptr %363, align 1
  %364 = call ptr @make_candy_text(ptr %363)
  store ptr %364, ptr @"text_A check failed: Expected ", align 8
  %365 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected `Equal`, got `\00", ptr %365, align 1
  %366 = call ptr @make_candy_text(ptr %365)
  store ptr %366, ptr @"text_Expected `Equal`, got `", align 8
  %367 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected `False`, got `\00", ptr %367, align 1
  %368 = call ptr @make_candy_text(ptr %367)
  store ptr %368, ptr @"text_Expected `False`, got `", align 8
  %369 = alloca i8, i64 26, align 1
  store [26 x i8] c"Expected `Greater`, got `\00", ptr %369, align 1
  %370 = call ptr @make_candy_text(ptr %369)
  store ptr %370, ptr @"text_Expected `Greater`, got `", align 8
  %371 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected `Less`, got `\00", ptr %371, align 1
  %372 = call ptr @make_candy_text(ptr %371)
  store ptr %372, ptr @"text_Expected `Less`, got `", align 8
  %373 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected `True`, got `\00", ptr %373, align 1
  %374 = call ptr @make_candy_text(ptr %373)
  store ptr %374, ptr @"text_Expected `True`, got `", align 8
  %375 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %375, align 1
  %376 = call ptr @make_candy_text(ptr %375)
  store ptr %376, ptr @"text_Expected a Struct, got `", align 8
  %377 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %377, align 1
  %378 = call ptr @make_candy_text(ptr %377)
  store ptr %378, ptr @"text_Expected a Tag, got `", align 8
  %379 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %379, align 1
  %380 = call ptr @make_candy_text(ptr %379)
  store ptr %380, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %381 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %381, align 1
  %382 = call ptr @make_candy_text(ptr %381)
  store ptr %382, ptr @"text_No case matched the given expression.", align 8
  %383 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %383, align 1
  %384 = call ptr @make_candy_text(ptr %383)
  store ptr %384, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %385 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %385, align 1
  %386 = call ptr @make_candy_text(ptr %385)
  store ptr %386, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %387 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %387, align 1
  %388 = call ptr @make_candy_text(ptr %387)
  store ptr %388, ptr @"text_The `reason` must be a text.", align 8
  %389 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %389, align 1
  %390 = call ptr @make_candy_text(ptr %389)
  store ptr %390, ptr @"text_`.", align 8
  %391 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %391, align 1
  %392 = call ptr @make_candy_text(ptr %391)
  store ptr %392, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %393 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %393, align 1
  %394 = call ptr @make_candy_text(ptr %393)
  store ptr %394, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %395 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %395, align 1
  %396 = call ptr @make_candy_text(ptr %395)
  store ptr %396, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %397 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %397, align 1
  %398 = call ptr @make_candy_text(ptr %397)
  store ptr %398, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %399 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %399, align 1
  %400 = call ptr @make_candy_text(ptr %399)
  store ptr %400, ptr @"text_`b` didn't return a bool.", align 8
  %401 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %401, align 1
  %402 = call ptr @make_candy_text(ptr %401)
  store ptr %402, ptr @"text_`bool.is condition` was not satisfied", align 8
  %403 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %403, align 1
  %404 = call ptr @make_candy_text(ptr %403)
  store ptr %404, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %405 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %405, align 1
  %406 = call ptr @make_candy_text(ptr %405)
  store ptr %406, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %407 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %407, align 1
  %408 = call ptr @make_candy_text(ptr %407)
  store ptr %408, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %409 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %409, align 1
  %410 = call ptr @make_candy_text(ptr %409)
  store ptr %410, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %411 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %411, align 1
  %412 = call ptr @make_candy_text(ptr %411)
  store ptr %412, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %413 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %413, align 1
  %414 = call ptr @make_candy_text(ptr %413)
  store ptr %414, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %415 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %415, align 1
  %416 = call ptr @make_candy_text(ptr %415)
  store ptr %416, ptr @"text_`function.is0 b` was not satisfied", align 8
  %417 = alloca i8, i64 38, align 1
  store [38 x i8] c"`function.is0 then` was not satisfied\00", ptr %417, align 1
  %418 = call ptr @make_candy_text(ptr %417)
  store ptr %418, ptr @"text_`function.is0 then` was not satisfied", align 8
  %419 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %419, align 1
  %420 = call ptr @make_candy_text(ptr %419)
  store ptr %420, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %421 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %421, align 1
  %422 = call ptr @make_candy_text(ptr %421)
  store ptr %422, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %423 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %423, align 1
  %424 = call ptr @make_candy_text(ptr %423)
  store ptr %424, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %425 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %425, align 1
  %426 = call ptr @make_candy_text(ptr %425)
  store ptr %426, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %427 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %427, align 1
  %428 = call ptr @make_candy_text(ptr %427)
  store ptr %428, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %429 = alloca i8, i64 38, align 1
  store [38 x i8] c"`int.is minorUnits` was not satisfied\00", ptr %429, align 1
  %430 = call ptr @make_candy_text(ptr %429)
  store ptr %430, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %431 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %431, align 1
  %432 = call ptr @make_candy_text(ptr %431)
  store ptr %432, ptr @"text_`is a` was not satisfied", align 8
  %433 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %433, align 1
  %434 = call ptr @make_candy_text(ptr %433)
  store ptr %434, ptr @"text_`is b` was not satisfied", align 8
  %435 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %435, align 1
  %436 = call ptr @make_candy_text(ptr %435)
  store ptr %436, ptr @"text_`is valueA` was not satisfied", align 8
  %437 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %437, align 1
  %438 = call ptr @make_candy_text(ptr %437)
  store ptr %438, ptr @"text_`is valueB` was not satisfied", align 8
  %439 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %439, align 1
  %440 = call ptr @make_candy_text(ptr %439)
  store ptr %440, ptr @"text_`is value` was not satisfied", align 8
  %441 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %441, align 1
  %442 = call ptr @make_candy_text(ptr %441)
  store ptr %442, ptr @"text_`is0 body` was not satisfied", align 8
  %443 = alloca i8, i64 34, align 1
  store [34 x i8] c"`isScale scale` was not satisfied\00", ptr %443, align 1
  %444 = call ptr @make_candy_text(ptr %443)
  store ptr %444, ptr @"text_`isScale scale` was not satisfied", align 8
  %445 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %445, align 1
  %446 = call ptr @make_candy_text(ptr %445)
  store ptr %446, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %447 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %447, align 1
  %448 = call ptr @make_candy_text(ptr %447)
  store ptr %448, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %449 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %449, align 1
  %450 = call ptr @make_candy_text(ptr %449)
  store ptr %450, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %451 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %451, align 1
  %452 = call ptr @make_candy_text(ptr %451)
  store ptr %452, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %453 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %453, align 1
  %454 = call ptr @make_candy_text(ptr %453)
  store ptr %454, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %455 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %455, align 1
  %456 = call ptr @make_candy_text(ptr %455)
  store ptr %456, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %457 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %457, align 1
  %458 = call ptr @make_candy_text(ptr %457)
  store ptr %458, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %459 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %459, align 1
  %460 = call ptr @make_candy_text(ptr %459)
  store ptr %460, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %461 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %461, align 1
  %462 = call ptr @make_candy_text(ptr %461)
  store ptr %462, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %463 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %464 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %463, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %464, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %465 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %466 = call ptr @make_candy_function(ptr @"Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %465, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %466, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %467 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %468 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %467, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %468, ptr @"fun_anonymous_$generated__needs", align 8
  %469 = alloca ptr, i64 2, align 8
  %470 = load ptr, ptr @tag_Match, align 8
  %471 = getelementptr ptr, ptr %469, i64 0
  store ptr %470, ptr %471, align 8
  %472 = getelementptr ptr, ptr %469, i64 1
  store ptr null, ptr %472, align 8
  %473 = call ptr @make_candy_list(ptr %469)
  store ptr %473, ptr @0, align 8
  %474 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %475 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", ptr %474, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %475, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %476 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %477 = call ptr @make_candy_function(ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", ptr %476, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %477, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %478 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %479 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %478, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %479, ptr @fun_Builtins__isNonNegative, align 8
  %480 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %481 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %480, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %481, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %482 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %483 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %482, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %483, ptr @fun_Builtins__ifElse, align 8
  %484 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %485 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %484, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %485, ptr @fun_Builtins__listGet, align 8
  %486 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %487 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %486, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %487, ptr @fun_Builtins__listInsert, align 8
  %488 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %489 = call ptr @make_candy_function(ptr @"Builtins__toDebugText, Core_iterator_201, Core_toDebugText_toDebugText", ptr %488, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %489, ptr @"fun_Builtins__toDebugText, Core_iterator_201, Core_toDebugText_toDebugText", align 8
  %490 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %491 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %490, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %491, ptr @fun_Core_function_is0, align 8
  %492 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %493 = call ptr @make_candy_function(ptr @Core_function_run, ptr %492, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %493, ptr @fun_Core_function_run, align 8
  %494 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %495 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %494, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %495, ptr @fun_Core_bool_is, align 8
  %496 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %497 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %496, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %497, ptr @fun_Core_bool_not, align 8
  %498 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %499 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %498, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %499, ptr @fun_Core_bool_lazyAnd, align 8
  %500 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %501 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %500, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %501, ptr @fun_Core_bool_lazyOr, align 8
  %502 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %503 = call ptr @make_candy_function(ptr @Core_check_checkEquals, ptr %502, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %503, ptr @fun_Core_check_checkEquals, align 8
  %504 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %505 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %504, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %505, ptr @fun_Core_function_is2, align 8
  %506 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %507 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %506, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %507, ptr @fun_Core_int_compareTo, align 8
  %508 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %509 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %508, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %509, ptr @fun_Core_int_isLessThan, align 8
  %510 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %511 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %510, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %511, ptr @fun_Core_int_isGreaterThan, align 8
  %512 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %513 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %512, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %513, ptr @fun_Core_int_isNonNegative, align 8
  %514 = alloca ptr, i64 3, align 8
  %515 = load ptr, ptr @tag_NoMatch, align 8
  %516 = getelementptr ptr, ptr %514, i64 0
  store ptr %515, ptr %516, align 8
  %517 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %518 = getelementptr ptr, ptr %514, i64 1
  store ptr %517, ptr %518, align 8
  %519 = getelementptr ptr, ptr %514, i64 2
  store ptr null, ptr %519, align 8
  %520 = call ptr @make_candy_list(ptr %514)
  store ptr %520, ptr @17, align 8
  %521 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %522 = call ptr @make_candy_function(ptr @Core_fixedDecimal_fromIntScaled, ptr %521, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %522, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  %523 = load ptr, ptr @num_0, align 8
  %524 = load ptr, ptr @num_0, align 8
  %525 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %523, ptr %524)
  %526 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:11\00", ptr %526, align 1
  %527 = call ptr @make_candy_text(ptr %526)
  store ptr %527, ptr @"Core:function:is1:11", align 8
  %528 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:function:is1:9:3\00", ptr %528, align 1
  %529 = call ptr @make_candy_text(ptr %528)
  store ptr %529, ptr @"Core:function:is1:9:3", align 8
  %530 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %531 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %530, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %531, ptr @fun_Core_function_is1, align 8
  %532 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU32:15\00", ptr %532, align 1
  %533 = call ptr @make_candy_text(ptr %532)
  store ptr %533, ptr @"Core:int:fitsInRustU32:15", align 8
  %534 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:4\00", ptr %534, align 1
  %535 = call ptr @make_candy_text(ptr %534)
  store ptr %535, ptr @"Core:int:fitsInRustU32:4", align 8
  %536 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:7\00", ptr %536, align 1
  %537 = call ptr @make_candy_text(ptr %536)
  store ptr %537, ptr @"Core:int:fitsInRustU32:7", align 8
  %538 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:9\00", ptr %538, align 1
  %539 = call ptr @make_candy_text(ptr %538)
  store ptr %539, ptr @"Core:int:fitsInRustU32:9", align 8
  %540 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:4\00", ptr %540, align 1
  %541 = call ptr @make_candy_text(ptr %540)
  store ptr %541, ptr @"Core:int:isOdd:4", align 8
  %542 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:8\00", ptr %542, align 1
  %543 = call ptr @make_candy_text(ptr %542)
  store ptr %543, ptr @"Core:int:isOdd:8", align 8
  %544 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:4\00", ptr %544, align 1
  %545 = call ptr @make_candy_text(ptr %544)
  store ptr %545, ptr @"Core:int:isPositive:4", align 8
  %546 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:8\00", ptr %546, align 1
  %547 = call ptr @make_candy_text(ptr %546)
  store ptr %547, ptr @"Core:int:isPositive:8", align 8
  %548 = call ptr @make_candy_int(i64 4294967295)
  store ptr %548, ptr @num_4294967295, align 8
  %549 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative value` was not satisfied\00", ptr %549, align 1
  %550 = call ptr @make_candy_text(ptr %549)
  store ptr %550, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %551 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %552 = call ptr @make_candy_function(ptr @Core_int_isOdd, ptr %551, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %552, ptr @fun_Core_int_isOdd, align 8
  %553 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:111\00", ptr %553, align 1
  %554 = call ptr @make_candy_text(ptr %553)
  store ptr %554, ptr @"Core:iterator:111", align 8
  %555 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:13\00", ptr %555, align 1
  %556 = call ptr @make_candy_text(ptr %555)
  store ptr %556, ptr @"Core:iterator:all:13", align 8
  %557 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:16:11\00", ptr %557, align 1
  %558 = call ptr @make_candy_text(ptr %557)
  store ptr %558, ptr @"Core:iterator:all:16:11", align 8
  %559 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:16:13\00", ptr %559, align 1
  %560 = call ptr @make_candy_text(ptr %559)
  store ptr %560, ptr @"Core:iterator:all:16:13", align 8
  %561 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:all:16:2\00", ptr %561, align 1
  %562 = call ptr @make_candy_text(ptr %561)
  store ptr %562, ptr @"Core:iterator:all:16:2", align 8
  %563 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:16:22\00", ptr %563, align 1
  %564 = call ptr @make_candy_text(ptr %563)
  store ptr %564, ptr @"Core:iterator:all:16:22", align 8
  %565 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:17\00", ptr %565, align 1
  %566 = call ptr @make_candy_text(ptr %565)
  store ptr %566, ptr @"Core:iterator:all:17", align 8
  %567 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:all:7\00", ptr %567, align 1
  %568 = call ptr @make_candy_text(ptr %567)
  store ptr %568, ptr @"Core:iterator:all:7", align 8
  %569 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:all:9\00", ptr %569, align 1
  %570 = call ptr @make_candy_text(ptr %569)
  store ptr %570, ptr @"Core:iterator:all:9", align 8
  %571 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:13\00", ptr %571, align 1
  %572 = call ptr @make_candy_text(ptr %571)
  store ptr %572, ptr @"Core:iterator:any:13", align 8
  %573 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:16:11\00", ptr %573, align 1
  %574 = call ptr @make_candy_text(ptr %573)
  store ptr %574, ptr @"Core:iterator:any:16:11", align 8
  %575 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:16:13\00", ptr %575, align 1
  %576 = call ptr @make_candy_text(ptr %575)
  store ptr %576, ptr @"Core:iterator:any:16:13", align 8
  %577 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:any:16:2\00", ptr %577, align 1
  %578 = call ptr @make_candy_text(ptr %577)
  store ptr %578, ptr @"Core:iterator:any:16:2", align 8
  %579 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:16:22\00", ptr %579, align 1
  %580 = call ptr @make_candy_text(ptr %579)
  store ptr %580, ptr @"Core:iterator:any:16:22", align 8
  %581 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:17\00", ptr %581, align 1
  %582 = call ptr @make_candy_text(ptr %581)
  store ptr %582, ptr @"Core:iterator:any:17", align 8
  %583 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:any:7\00", ptr %583, align 1
  %584 = call ptr @make_candy_text(ptr %583)
  store ptr %584, ptr @"Core:iterator:any:7", align 8
  %585 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:any:9\00", ptr %585, align 1
  %586 = call ptr @make_candy_text(ptr %585)
  store ptr %586, ptr @"Core:iterator:any:9", align 8
  %587 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:17\00", ptr %587, align 1
  %588 = call ptr @make_candy_text(ptr %587)
  store ptr %588, ptr @"Core:iterator:chunked:17", align 8
  %589 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:19\00", ptr %589, align 1
  %590 = call ptr @make_candy_text(ptr %589)
  store ptr %590, ptr @"Core:iterator:chunked:19", align 8
  %591 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:23\00", ptr %591, align 1
  %592 = call ptr @make_candy_text(ptr %591)
  store ptr %592, ptr @"Core:iterator:chunked:23", align 8
  %593 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:28\00", ptr %593, align 1
  %594 = call ptr @make_candy_text(ptr %593)
  store ptr %594, ptr @"Core:iterator:chunked:28", align 8
  %595 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:chunked:9\00", ptr %595, align 1
  %596 = call ptr @make_candy_text(ptr %595)
  store ptr %596, ptr @"Core:iterator:chunked:9", align 8
  %597 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:13\00", ptr %597, align 1
  %598 = call ptr @make_candy_text(ptr %597)
  store ptr %598, ptr @"Core:iterator:ensure:13", align 8
  %599 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:ensure:17:2\00", ptr %599, align 1
  %600 = call ptr @make_candy_text(ptr %599)
  store ptr %600, ptr @"Core:iterator:ensure:17:2", align 8
  %601 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:18\00", ptr %601, align 1
  %602 = call ptr @make_candy_text(ptr %601)
  store ptr %602, ptr @"Core:iterator:ensure:18", align 8
  %603 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:ensure:7\00", ptr %603, align 1
  %604 = call ptr @make_candy_text(ptr %603)
  store ptr %604, ptr @"Core:iterator:ensure:7", align 8
  %605 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:ensure:9\00", ptr %605, align 1
  %606 = call ptr @make_candy_text(ptr %605)
  store ptr %606, ptr @"Core:iterator:ensure:9", align 8
  %607 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:12\00", ptr %607, align 1
  %608 = call ptr @make_candy_text(ptr %607)
  store ptr %608, ptr @"Core:iterator:foldLeft:12", align 8
  %609 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:14\00", ptr %609, align 1
  %610 = call ptr @make_candy_text(ptr %609)
  store ptr %610, ptr @"Core:iterator:foldLeft:14", align 8
  %611 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:21:1\00", ptr %611, align 1
  %612 = call ptr @make_candy_text(ptr %611)
  store ptr %612, ptr @"Core:iterator:foldLeft:21:1", align 8
  %613 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:21:4\00", ptr %613, align 1
  %614 = call ptr @make_candy_text(ptr %613)
  store ptr %614, ptr @"Core:iterator:foldLeft:21:4", align 8
  %615 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:21:5\00", ptr %615, align 1
  %616 = call ptr @make_candy_text(ptr %615)
  store ptr %616, ptr @"Core:iterator:foldLeft:21:5", align 8
  %617 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:foldLeft:21:5:10\00", ptr %617, align 1
  %618 = call ptr @make_candy_text(ptr %617)
  store ptr %618, ptr @"Core:iterator:foldLeft:21:5:10", align 8
  %619 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:foldLeft:21:5:8\00", ptr %619, align 1
  %620 = call ptr @make_candy_text(ptr %619)
  store ptr %620, ptr @"Core:iterator:foldLeft:21:5:8", align 8
  %621 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:21:5:item\00", ptr %621, align 1
  %622 = call ptr @make_candy_text(ptr %621)
  store ptr %622, ptr @"Core:iterator:foldLeft:21:5:item", align 8
  %623 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:21:5:rest\00", ptr %623, align 1
  %624 = call ptr @make_candy_text(ptr %623)
  store ptr %624, ptr @"Core:iterator:foldLeft:21:5:rest", align 8
  %625 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:foldLeft:21:iterator\00", ptr %625, align 1
  %626 = call ptr @make_candy_text(ptr %625)
  store ptr %626, ptr @"Core:iterator:foldLeft:21:iterator", align 8
  %627 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:foldLeft:21:value\00", ptr %627, align 1
  %628 = call ptr @make_candy_text(ptr %627)
  store ptr %628, ptr @"Core:iterator:foldLeft:21:value", align 8
  %629 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:22\00", ptr %629, align 1
  %630 = call ptr @make_candy_text(ptr %629)
  store ptr %630, ptr @"Core:iterator:foldLeft:22", align 8
  %631 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:foldLeft:3\00", ptr %631, align 1
  %632 = call ptr @make_candy_text(ptr %631)
  store ptr %632, ptr @"Core:iterator:foldLeft:3", align 8
  %633 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:18\00", ptr %633, align 1
  %634 = call ptr @make_candy_text(ptr %633)
  store ptr %634, ptr @"Core:iterator:fromList:18", align 8
  %635 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:fromList:19:8\00", ptr %635, align 1
  %636 = call ptr @make_candy_text(ptr %635)
  store ptr %636, ptr @"Core:iterator:fromList:19:8", align 8
  %637 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:20\00", ptr %637, align 1
  %638 = call ptr @make_candy_text(ptr %637)
  store ptr %638, ptr @"Core:iterator:fromList:20", align 8
  %639 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:fromList:9\00", ptr %639, align 1
  %640 = call ptr @make_candy_text(ptr %639)
  store ptr %640, ptr @"Core:iterator:fromList:9", align 8
  %641 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:17\00", ptr %641, align 1
  %642 = call ptr @make_candy_text(ptr %641)
  store ptr %642, ptr @"Core:iterator:generate:17", align 8
  %643 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:19\00", ptr %643, align 1
  %644 = call ptr @make_candy_text(ptr %643)
  store ptr %644, ptr @"Core:iterator:generate:19", align 8
  %645 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:27\00", ptr %645, align 1
  %646 = call ptr @make_candy_text(ptr %645)
  store ptr %646, ptr @"Core:iterator:generate:27", align 8
  %647 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:29\00", ptr %647, align 1
  %648 = call ptr @make_candy_text(ptr %647)
  store ptr %648, ptr @"Core:iterator:generate:29", align 8
  %649 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:37\00", ptr %649, align 1
  %650 = call ptr @make_candy_text(ptr %649)
  store ptr %650, ptr @"Core:iterator:generate:37", align 8
  %651 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:39\00", ptr %651, align 1
  %652 = call ptr @make_candy_text(ptr %651)
  store ptr %652, ptr @"Core:iterator:generate:39", align 8
  %653 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:generate:42:6:14\00", ptr %653, align 1
  %654 = call ptr @make_candy_text(ptr %653)
  store ptr %654, ptr @"Core:iterator:generate:42:6:14", align 8
  %655 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:generate:42:6:4\00", ptr %655, align 1
  %656 = call ptr @make_candy_text(ptr %655)
  store ptr %656, ptr @"Core:iterator:generate:42:6:4", align 8
  %657 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:generate:42:7\00", ptr %657, align 1
  %658 = call ptr @make_candy_text(ptr %657)
  store ptr %658, ptr @"Core:iterator:generate:42:7", align 8
  %659 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:43\00", ptr %659, align 1
  %660 = call ptr @make_candy_text(ptr %659)
  store ptr %660, ptr @"Core:iterator:generate:43", align 8
  %661 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:generate:9\00", ptr %661, align 1
  %662 = call ptr @make_candy_text(ptr %661)
  store ptr %662, ptr @"Core:iterator:generate:9", align 8
  %663 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:12:1:2\00", ptr %663, align 1
  %664 = call ptr @make_candy_text(ptr %663)
  store ptr %664, ptr @"Core:iterator:generateWithState:12:1:2", align 8
  %665 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:12:1:3\00", ptr %665, align 1
  %666 = call ptr @make_candy_text(ptr %665)
  store ptr %666, ptr @"Core:iterator:generateWithState:12:1:3", align 8
  %667 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:19\00", ptr %667, align 1
  %668 = call ptr @make_candy_text(ptr %667)
  store ptr %668, ptr @"Core:iterator:generateWithState:12:1:3:19", align 8
  %669 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:20\00", ptr %669, align 1
  %670 = call ptr @make_candy_text(ptr %669)
  store ptr %670, ptr @"Core:iterator:generateWithState:12:1:3:20", align 8
  %671 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:12:1:3:22:0\00", ptr %671, align 1
  %672 = call ptr @make_candy_text(ptr %671)
  store ptr %672, ptr @"Core:iterator:generateWithState:12:1:3:22:0", align 8
  %673 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:23\00", ptr %673, align 1
  %674 = call ptr @make_candy_text(ptr %673)
  store ptr %674, ptr @"Core:iterator:generateWithState:12:1:3:23", align 8
  %675 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:25\00", ptr %675, align 1
  %676 = call ptr @make_candy_text(ptr %675)
  store ptr %676, ptr @"Core:iterator:generateWithState:12:1:3:25", align 8
  %677 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:26\00", ptr %677, align 1
  %678 = call ptr @make_candy_text(ptr %677)
  store ptr %678, ptr @"Core:iterator:generateWithState:12:1:3:26", align 8
  %679 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:12:1:3:27\00", ptr %679, align 1
  %680 = call ptr @make_candy_text(ptr %679)
  store ptr %680, ptr @"Core:iterator:generateWithState:12:1:3:27", align 8
  %681 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:iterator:generateWithState:12:1:3:6\00", ptr %681, align 1
  %682 = call ptr @make_candy_text(ptr %681)
  store ptr %682, ptr @"Core:iterator:generateWithState:12:1:3:6", align 8
  %683 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:12:1:3:item\00", ptr %683, align 1
  %684 = call ptr @make_candy_text(ptr %683)
  store ptr %684, ptr @"Core:iterator:generateWithState:12:1:3:item", align 8
  %685 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:iterator:generateWithState:12:1:3:state\00", ptr %685, align 1
  %686 = call ptr @make_candy_text(ptr %685)
  store ptr %686, ptr @"Core:iterator:generateWithState:12:1:3:state", align 8
  %687 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:13\00", ptr %687, align 1
  %688 = call ptr @make_candy_text(ptr %687)
  store ptr %688, ptr @"Core:iterator:generateWithState:13", align 8
  %689 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:generateWithState:7\00", ptr %689, align 1
  %690 = call ptr @make_candy_text(ptr %689)
  store ptr %690, ptr @"Core:iterator:generateWithState:7", align 8
  %691 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:generateWithState:9\00", ptr %691, align 1
  %692 = call ptr @make_candy_text(ptr %691)
  store ptr %692, ptr @"Core:iterator:generateWithState:9", align 8
  %693 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:3\00", ptr %693, align 1
  %694 = call ptr @make_candy_text(ptr %693)
  store ptr %694, ptr @"Core:iterator:isEmpty:3", align 8
  %695 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:7\00", ptr %695, align 1
  %696 = call ptr @make_candy_text(ptr %695)
  store ptr %696, ptr @"Core:iterator:isEmpty:7", align 8
  %697 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:18\00", ptr %697, align 1
  %698 = call ptr @make_candy_text(ptr %697)
  store ptr %698, ptr @"Core:iterator:joinToText:12:18", align 8
  %699 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:joinToText:12:9\00", ptr %699, align 1
  %700 = call ptr @make_candy_text(ptr %699)
  store ptr %700, ptr @"Core:iterator:joinToText:12:9", align 8
  %701 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:joinToText:13\00", ptr %701, align 1
  %702 = call ptr @make_candy_text(ptr %701)
  store ptr %702, ptr @"Core:iterator:joinToText:13", align 8
  %703 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:joinToText:3\00", ptr %703, align 1
  %704 = call ptr @make_candy_text(ptr %703)
  store ptr %704, ptr @"Core:iterator:joinToText:3", align 8
  %705 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:3\00", ptr %705, align 1
  %706 = call ptr @make_candy_text(ptr %705)
  store ptr %706, ptr @"Core:iterator:length:3", align 8
  %707 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:6\00", ptr %707, align 1
  %708 = call ptr @make_candy_text(ptr %707)
  store ptr %708, ptr @"Core:iterator:length:6", align 8
  %709 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:8\00", ptr %709, align 1
  %710 = call ptr @make_candy_text(ptr %709)
  store ptr %710, ptr @"Core:iterator:length:8", align 8
  %711 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:12\00", ptr %711, align 1
  %712 = call ptr @make_candy_text(ptr %711)
  store ptr %712, ptr @"Core:iterator:map:12", align 8
  %713 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:14\00", ptr %713, align 1
  %714 = call ptr @make_candy_text(ptr %713)
  store ptr %714, ptr @"Core:iterator:map:14", align 8
  %715 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:17:2\00", ptr %715, align 1
  %716 = call ptr @make_candy_text(ptr %715)
  store ptr %716, ptr @"Core:iterator:map:17:2", align 8
  %717 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:17:3\00", ptr %717, align 1
  %718 = call ptr @make_candy_text(ptr %717)
  store ptr %718, ptr @"Core:iterator:map:17:3", align 8
  %719 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:map:17:3:5\00", ptr %719, align 1
  %720 = call ptr @make_candy_text(ptr %719)
  store ptr %720, ptr @"Core:iterator:map:17:3:5", align 8
  %721 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:17:3:item\00", ptr %721, align 1
  %722 = call ptr @make_candy_text(ptr %721)
  store ptr %722, ptr @"Core:iterator:map:17:3:item", align 8
  %723 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:17:3:rest\00", ptr %723, align 1
  %724 = call ptr @make_candy_text(ptr %723)
  store ptr %724, ptr @"Core:iterator:map:17:3:rest", align 8
  %725 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:18\00", ptr %725, align 1
  %726 = call ptr @make_candy_text(ptr %725)
  store ptr %726, ptr @"Core:iterator:map:18", align 8
  %727 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:map:3\00", ptr %727, align 1
  %728 = call ptr @make_candy_text(ptr %727)
  store ptr %728, ptr @"Core:iterator:map:3", align 8
  %729 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:next:15\00", ptr %729, align 1
  %730 = call ptr @make_candy_text(ptr %729)
  store ptr %730, ptr @"Core:iterator:next:15", align 8
  %731 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:3\00", ptr %731, align 1
  %732 = call ptr @make_candy_text(ptr %731)
  store ptr %732, ptr @"Core:iterator:next:3", align 8
  %733 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:6\00", ptr %733, align 1
  %734 = call ptr @make_candy_text(ptr %733)
  store ptr %734, ptr @"Core:iterator:next:6", align 8
  %735 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:next:nextFunction\00", ptr %735, align 1
  %736 = call ptr @make_candy_text(ptr %735)
  store ptr %736, ptr @"Core:iterator:next:nextFunction", align 8
  %737 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:13\00", ptr %737, align 1
  %738 = call ptr @make_candy_text(ptr %737)
  store ptr %738, ptr @"Core:iterator:reduceLeft:13", align 8
  %739 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:15\00", ptr %739, align 1
  %740 = call ptr @make_candy_text(ptr %739)
  store ptr %740, ptr @"Core:iterator:reduceLeft:15", align 8
  %741 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:16\00", ptr %741, align 1
  %742 = call ptr @make_candy_text(ptr %741)
  store ptr %742, ptr @"Core:iterator:reduceLeft:16", align 8
  %743 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:reduceLeft:16:14\00", ptr %743, align 1
  %744 = call ptr @make_candy_text(ptr %743)
  store ptr %744, ptr @"Core:iterator:reduceLeft:16:14", align 8
  %745 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:16:item\00", ptr %745, align 1
  %746 = call ptr @make_candy_text(ptr %745)
  store ptr %746, ptr @"Core:iterator:reduceLeft:16:item", align 8
  %747 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:16:rest\00", ptr %747, align 1
  %748 = call ptr @make_candy_text(ptr %747)
  store ptr %748, ptr @"Core:iterator:reduceLeft:16:rest", align 8
  %749 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:reduceLeft:7\00", ptr %749, align 1
  %750 = call ptr @make_candy_text(ptr %749)
  store ptr %750, ptr @"Core:iterator:reduceLeft:7", align 8
  %751 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:reduceLeft:9\00", ptr %751, align 1
  %752 = call ptr @make_candy_text(ptr %751)
  store ptr %752, ptr @"Core:iterator:reduceLeft:9", align 8
  %753 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:14\00", ptr %753, align 1
  %754 = call ptr @make_candy_text(ptr %753)
  store ptr %754, ptr @"Core:iterator:skip:14", align 8
  %755 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:22\00", ptr %755, align 1
  %756 = call ptr @make_candy_text(ptr %755)
  store ptr %756, ptr @"Core:iterator:skip:22", align 8
  %757 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:24\00", ptr %757, align 1
  %758 = call ptr @make_candy_text(ptr %757)
  store ptr %758, ptr @"Core:iterator:skip:24", align 8
  %759 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:26:6:1\00", ptr %759, align 1
  %760 = call ptr @make_candy_text(ptr %759)
  store ptr %760, ptr @"Core:iterator:skip:26:6:1", align 8
  %761 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:26:6:7:2\00", ptr %761, align 1
  %762 = call ptr @make_candy_text(ptr %761)
  store ptr %762, ptr @"Core:iterator:skip:26:6:7:2", align 8
  %763 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:26:6:8:2\00", ptr %763, align 1
  %764 = call ptr @make_candy_text(ptr %763)
  store ptr %764, ptr @"Core:iterator:skip:26:6:8:2", align 8
  %765 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:26:6:8:3\00", ptr %765, align 1
  %766 = call ptr @make_candy_text(ptr %765)
  store ptr %766, ptr @"Core:iterator:skip:26:6:8:3", align 8
  %767 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:26:6:8:3:13\00", ptr %767, align 1
  %768 = call ptr @make_candy_text(ptr %767)
  store ptr %768, ptr @"Core:iterator:skip:26:6:8:3:13", align 8
  %769 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:26:6:8:3:15\00", ptr %769, align 1
  %770 = call ptr @make_candy_text(ptr %769)
  store ptr %770, ptr @"Core:iterator:skip:26:6:8:3:15", align 8
  %771 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:26:6:8:3:rest\00", ptr %771, align 1
  %772 = call ptr @make_candy_text(ptr %771)
  store ptr %772, ptr @"Core:iterator:skip:26:6:8:3:rest", align 8
  %773 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:26:6:9\00", ptr %773, align 1
  %774 = call ptr @make_candy_text(ptr %773)
  store ptr %774, ptr @"Core:iterator:skip:26:6:9", align 8
  %775 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:26:6:iterator\00", ptr %775, align 1
  %776 = call ptr @make_candy_text(ptr %775)
  store ptr %776, ptr @"Core:iterator:skip:26:6:iterator", align 8
  %777 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:26:6:n\00", ptr %777, align 1
  %778 = call ptr @make_candy_text(ptr %777)
  store ptr %778, ptr @"Core:iterator:skip:26:6:n", align 8
  %779 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:skip:26:7\00", ptr %779, align 1
  %780 = call ptr @make_candy_text(ptr %779)
  store ptr %780, ptr @"Core:iterator:skip:26:7", align 8
  %781 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:skip:3\00", ptr %781, align 1
  %782 = call ptr @make_candy_text(ptr %781)
  store ptr %782, ptr @"Core:iterator:skip:3", align 8
  %783 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:sum:17\00", ptr %783, align 1
  %784 = call ptr @make_candy_text(ptr %783)
  store ptr %784, ptr @"Core:iterator:sum:17", align 8
  %785 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:3\00", ptr %785, align 1
  %786 = call ptr @make_candy_text(ptr %785)
  store ptr %786, ptr @"Core:iterator:sum:3", align 8
  %787 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:5:15\00", ptr %787, align 1
  %788 = call ptr @make_candy_text(ptr %787)
  store ptr %788, ptr @"Core:iterator:sum:5:15", align 8
  %789 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:6\00", ptr %789, align 1
  %790 = call ptr @make_candy_text(ptr %789)
  store ptr %790, ptr @"Core:iterator:sum:6", align 8
  %791 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:sum:8:8\00", ptr %791, align 1
  %792 = call ptr @make_candy_text(ptr %791)
  store ptr %792, ptr @"Core:iterator:sum:8:8", align 8
  %793 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:9\00", ptr %793, align 1
  %794 = call ptr @make_candy_text(ptr %793)
  store ptr %794, ptr @"Core:iterator:sum:9", align 8
  %795 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:17\00", ptr %795, align 1
  %796 = call ptr @make_candy_text(ptr %795)
  store ptr %796, ptr @"Core:iterator:take:17", align 8
  %797 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:19\00", ptr %797, align 1
  %798 = call ptr @make_candy_text(ptr %797)
  store ptr %798, ptr @"Core:iterator:take:19", align 8
  %799 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:23\00", ptr %799, align 1
  %800 = call ptr @make_candy_text(ptr %799)
  store ptr %800, ptr @"Core:iterator:take:23", align 8
  %801 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:25\00", ptr %801, align 1
  %802 = call ptr @make_candy_text(ptr %801)
  store ptr %802, ptr @"Core:iterator:take:25", align 8
  %803 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:27:1\00", ptr %803, align 1
  %804 = call ptr @make_candy_text(ptr %803)
  store ptr %804, ptr @"Core:iterator:take:27:1", align 8
  %805 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:take:27:10\00", ptr %805, align 1
  %806 = call ptr @make_candy_text(ptr %805)
  store ptr %806, ptr @"Core:iterator:take:27:10", align 8
  %807 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:take:27:index\00", ptr %807, align 1
  %808 = call ptr @make_candy_text(ptr %807)
  store ptr %808, ptr @"Core:iterator:take:27:index", align 8
  %809 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:take:27:item\00", ptr %809, align 1
  %810 = call ptr @make_candy_text(ptr %809)
  store ptr %810, ptr @"Core:iterator:take:27:item", align 8
  %811 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:28\00", ptr %811, align 1
  %812 = call ptr @make_candy_text(ptr %811)
  store ptr %812, ptr @"Core:iterator:take:28", align 8
  %813 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:30:5\00", ptr %813, align 1
  %814 = call ptr @make_candy_text(ptr %813)
  store ptr %814, ptr @"Core:iterator:take:30:5", align 8
  %815 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:31\00", ptr %815, align 1
  %816 = call ptr @make_candy_text(ptr %815)
  store ptr %816, ptr @"Core:iterator:take:31", align 8
  %817 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:take:9\00", ptr %817, align 1
  %818 = call ptr @make_candy_text(ptr %817)
  store ptr %818, ptr @"Core:iterator:take:9", align 8
  %819 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:3\00", ptr %819, align 1
  %820 = call ptr @make_candy_text(ptr %819)
  store ptr %820, ptr @"Core:iterator:takeWhile:3", align 8
  %821 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:2\00", ptr %821, align 1
  %822 = call ptr @make_candy_text(ptr %821)
  store ptr %822, ptr @"Core:iterator:takeWhile:7:2", align 8
  %823 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:3\00", ptr %823, align 1
  %824 = call ptr @make_candy_text(ptr %823)
  store ptr %824, ptr @"Core:iterator:takeWhile:7:3", align 8
  %825 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:4\00", ptr %825, align 1
  %826 = call ptr @make_candy_text(ptr %825)
  store ptr %826, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  %827 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:7\00", ptr %827, align 1
  %828 = call ptr @make_candy_text(ptr %827)
  store ptr %828, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  %829 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:item\00", ptr %829, align 1
  %830 = call ptr @make_candy_text(ptr %829)
  store ptr %830, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  %831 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:rest\00", ptr %831, align 1
  %832 = call ptr @make_candy_text(ptr %831)
  store ptr %832, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  %833 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:8\00", ptr %833, align 1
  %834 = call ptr @make_candy_text(ptr %833)
  store ptr %834, ptr @"Core:iterator:takeWhile:8", align 8
  %835 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:3\00", ptr %835, align 1
  %836 = call ptr @make_candy_text(ptr %835)
  store ptr %836, ptr @"Core:iterator:toList:3", align 8
  %837 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:toList:6:8\00", ptr %837, align 1
  %838 = call ptr @make_candy_text(ptr %837)
  store ptr %838, ptr @"Core:iterator:toList:6:8", align 8
  %839 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:7\00", ptr %839, align 1
  %840 = call ptr @make_candy_text(ptr %839)
  store ptr %840, ptr @"Core:iterator:toList:7", align 8
  %841 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:12\00", ptr %841, align 1
  %842 = call ptr @make_candy_text(ptr %841)
  store ptr %842, ptr @"Core:iterator:where:12", align 8
  %843 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:14\00", ptr %843, align 1
  %844 = call ptr @make_candy_text(ptr %843)
  store ptr %844, ptr @"Core:iterator:where:14", align 8
  %845 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:17:2:2\00", ptr %845, align 1
  %846 = call ptr @make_candy_text(ptr %845)
  store ptr %846, ptr @"Core:iterator:where:17:2:2", align 8
  %847 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:17:2:3\00", ptr %847, align 1
  %848 = call ptr @make_candy_text(ptr %847)
  store ptr %848, ptr @"Core:iterator:where:17:2:3", align 8
  %849 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:17:2:3:4\00", ptr %849, align 1
  %850 = call ptr @make_candy_text(ptr %849)
  store ptr %850, ptr @"Core:iterator:where:17:2:3:4", align 8
  %851 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:17:2:3:6:2\00", ptr %851, align 1
  %852 = call ptr @make_candy_text(ptr %851)
  store ptr %852, ptr @"Core:iterator:where:17:2:3:6:2", align 8
  %853 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:17:2:3:6:4\00", ptr %853, align 1
  %854 = call ptr @make_candy_text(ptr %853)
  store ptr %854, ptr @"Core:iterator:where:17:2:3:6:4", align 8
  %855 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:17:2:3:6:5\00", ptr %855, align 1
  %856 = call ptr @make_candy_text(ptr %855)
  store ptr %856, ptr @"Core:iterator:where:17:2:3:6:5", align 8
  %857 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:17:2:3:6:5:item\00", ptr %857, align 1
  %858 = call ptr @make_candy_text(ptr %857)
  store ptr %858, ptr @"Core:iterator:where:17:2:3:6:5:item", align 8
  %859 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:17:2:3:6:5:rest\00", ptr %859, align 1
  %860 = call ptr @make_candy_text(ptr %859)
  store ptr %860, ptr @"Core:iterator:where:17:2:3:6:5:rest", align 8
  %861 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:17:2:3:7\00", ptr %861, align 1
  %862 = call ptr @make_candy_text(ptr %861)
  store ptr %862, ptr @"Core:iterator:where:17:2:3:7", align 8
  %863 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:17:2:3:item\00", ptr %863, align 1
  %864 = call ptr @make_candy_text(ptr %863)
  store ptr %864, ptr @"Core:iterator:where:17:2:3:item", align 8
  %865 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:17:2:3:rest\00", ptr %865, align 1
  %866 = call ptr @make_candy_text(ptr %865)
  store ptr %866, ptr @"Core:iterator:where:17:2:3:rest", align 8
  %867 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:where:17:3\00", ptr %867, align 1
  %868 = call ptr @make_candy_text(ptr %867)
  store ptr %868, ptr @"Core:iterator:where:17:3", align 8
  %869 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:18\00", ptr %869, align 1
  %870 = call ptr @make_candy_text(ptr %869)
  store ptr %870, ptr @"Core:iterator:where:18", align 8
  %871 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:where:3\00", ptr %871, align 1
  %872 = call ptr @make_candy_text(ptr %871)
  store ptr %872, ptr @"Core:iterator:where:3", align 8
  %873 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:14\00", ptr %873, align 1
  %874 = call ptr @make_candy_text(ptr %873)
  store ptr %874, ptr @"Core:iterator:windowed:14", align 8
  %875 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:22\00", ptr %875, align 1
  %876 = call ptr @make_candy_text(ptr %875)
  store ptr %876, ptr @"Core:iterator:windowed:22", align 8
  %877 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:24\00", ptr %877, align 1
  %878 = call ptr @make_candy_text(ptr %877)
  store ptr %878, ptr @"Core:iterator:windowed:24", align 8
  %879 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:windowed:3\00", ptr %879, align 1
  %880 = call ptr @make_candy_text(ptr %879)
  store ptr %880, ptr @"Core:iterator:windowed:3", align 8
  %881 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:34\00", ptr %881, align 1
  %882 = call ptr @make_candy_text(ptr %881)
  store ptr %882, ptr @"Core:iterator:windowed:34", align 8
  %883 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:42\00", ptr %883, align 1
  %884 = call ptr @make_candy_text(ptr %883)
  store ptr %884, ptr @"Core:iterator:windowed:42", align 8
  %885 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:44\00", ptr %885, align 1
  %886 = call ptr @make_candy_text(ptr %885)
  store ptr %886, ptr @"Core:iterator:windowed:44", align 8
  %887 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:52\00", ptr %887, align 1
  %888 = call ptr @make_candy_text(ptr %887)
  store ptr %888, ptr @"Core:iterator:windowed:52", align 8
  %889 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:54\00", ptr %889, align 1
  %890 = call ptr @make_candy_text(ptr %889)
  store ptr %890, ptr @"Core:iterator:windowed:54", align 8
  %891 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:57:14\00", ptr %891, align 1
  %892 = call ptr @make_candy_text(ptr %891)
  store ptr %892, ptr @"Core:iterator:windowed:57:14", align 8
  %893 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:57:20\00", ptr %893, align 1
  %894 = call ptr @make_candy_text(ptr %893)
  store ptr %894, ptr @"Core:iterator:windowed:57:20", align 8
  %895 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:windowed:57:24:7\00", ptr %895, align 1
  %896 = call ptr @make_candy_text(ptr %895)
  store ptr %896, ptr @"Core:iterator:windowed:57:24:7", align 8
  %897 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:57:26\00", ptr %897, align 1
  %898 = call ptr @make_candy_text(ptr %897)
  store ptr %898, ptr @"Core:iterator:windowed:57:26", align 8
  %899 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:57:3\00", ptr %899, align 1
  %900 = call ptr @make_candy_text(ptr %899)
  store ptr %900, ptr @"Core:iterator:windowed:57:3", align 8
  %901 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:57:5\00", ptr %901, align 1
  %902 = call ptr @make_candy_text(ptr %901)
  store ptr %902, ptr @"Core:iterator:windowed:57:5", align 8
  %903 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:58\00", ptr %903, align 1
  %904 = call ptr @make_candy_text(ptr %903)
  store ptr %904, ptr @"Core:iterator:windowed:58", align 8
  %905 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:1\00", ptr %905, align 1
  %906 = call ptr @make_candy_text(ptr %905)
  store ptr %906, ptr @"Core:iterator:withIndex:11:1", align 8
  %907 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:4\00", ptr %907, align 1
  %908 = call ptr @make_candy_text(ptr %907)
  store ptr %908, ptr @"Core:iterator:withIndex:11:4", align 8
  %909 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:5\00", ptr %909, align 1
  %910 = call ptr @make_candy_text(ptr %909)
  store ptr %910, ptr @"Core:iterator:withIndex:11:5", align 8
  %911 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:withIndex:11:5:20\00", ptr %911, align 1
  %912 = call ptr @make_candy_text(ptr %911)
  store ptr %912, ptr @"Core:iterator:withIndex:11:5:20", align 8
  %913 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:item\00", ptr %913, align 1
  %914 = call ptr @make_candy_text(ptr %913)
  store ptr %914, ptr @"Core:iterator:withIndex:11:5:item", align 8
  %915 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:rest\00", ptr %915, align 1
  %916 = call ptr @make_candy_text(ptr %915)
  store ptr %916, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  %917 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:withIndex:11:index\00", ptr %917, align 1
  %918 = call ptr @make_candy_text(ptr %917)
  store ptr %918, ptr @"Core:iterator:withIndex:11:index", align 8
  %919 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:withIndex:11:iterator\00", ptr %919, align 1
  %920 = call ptr @make_candy_text(ptr %919)
  store ptr %920, ptr @"Core:iterator:withIndex:11:iterator", align 8
  %921 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:withIndex:12\00", ptr %921, align 1
  %922 = call ptr @make_candy_text(ptr %921)
  store ptr %922, ptr @"Core:iterator:withIndex:12", align 8
  %923 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:withIndex:3\00", ptr %923, align 1
  %924 = call ptr @make_candy_text(ptr %923)
  store ptr %924, ptr @"Core:iterator:withIndex:3", align 8
  %925 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:10:7\00", ptr %925, align 1
  %926 = call ptr @make_candy_text(ptr %925)
  store ptr %926, ptr @"Core:iterator:wrapSafe:10:7", align 8
  %927 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:14:1\00", ptr %927, align 1
  %928 = call ptr @make_candy_text(ptr %927)
  store ptr %928, ptr @"Core:iterator:wrapSafe:14:1", align 8
  %929 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:14:11\00", ptr %929, align 1
  %930 = call ptr @make_candy_text(ptr %929)
  store ptr %930, ptr @"Core:iterator:wrapSafe:14:11", align 8
  %931 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:14:18\00", ptr %931, align 1
  %932 = call ptr @make_candy_text(ptr %931)
  store ptr %932, ptr @"Core:iterator:wrapSafe:14:18", align 8
  %933 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:wrapSafe:14:1:8\00", ptr %933, align 1
  %934 = call ptr @make_candy_text(ptr %933)
  store ptr %934, ptr @"Core:iterator:wrapSafe:14:1:8", align 8
  %935 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:14:1:function\00", ptr %935, align 1
  %936 = call ptr @make_candy_text(ptr %935)
  store ptr %936, ptr @"Core:iterator:wrapSafe:14:1:function", align 8
  %937 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:14:20\00", ptr %937, align 1
  %938 = call ptr @make_candy_text(ptr %937)
  store ptr %938, ptr @"Core:iterator:wrapSafe:14:20", align 8
  %939 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:14:22:7\00", ptr %939, align 1
  %940 = call ptr @make_candy_text(ptr %939)
  store ptr %940, ptr @"Core:iterator:wrapSafe:14:22:7", align 8
  %941 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:14:22:8\00", ptr %941, align 1
  %942 = call ptr @make_candy_text(ptr %941)
  store ptr %942, ptr @"Core:iterator:wrapSafe:14:22:8", align 8
  %943 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:wrapSafe:14:22:8:17\00", ptr %943, align 1
  %944 = call ptr @make_candy_text(ptr %943)
  store ptr %944, ptr @"Core:iterator:wrapSafe:14:22:8:17", align 8
  %945 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:wrapSafe:14:22:8:7\00", ptr %945, align 1
  %946 = call ptr @make_candy_text(ptr %945)
  store ptr %946, ptr @"Core:iterator:wrapSafe:14:22:8:7", align 8
  %947 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:wrapSafe:14:22:8:item\00", ptr %947, align 1
  %948 = call ptr @make_candy_text(ptr %947)
  store ptr %948, ptr @"Core:iterator:wrapSafe:14:22:8:item", align 8
  %949 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:wrapSafe:14:22:8:rest\00", ptr %949, align 1
  %950 = call ptr @make_candy_text(ptr %949)
  store ptr %950, ptr @"Core:iterator:wrapSafe:14:22:8:rest", align 8
  %951 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:15\00", ptr %951, align 1
  %952 = call ptr @make_candy_text(ptr %951)
  store ptr %952, ptr @"Core:iterator:wrapSafe:15", align 8
  %953 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:wrapSafe:7\00", ptr %953, align 1
  %954 = call ptr @make_candy_text(ptr %953)
  store ptr %954, ptr @"Core:iterator:wrapSafe:7", align 8
  %955 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:wrapSafe:9\00", ptr %955, align 1
  %956 = call ptr @make_candy_text(ptr %955)
  store ptr %956, ptr @"Core:iterator:wrapSafe:9", align 8
  %957 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:append:11\00", ptr %957, align 1
  %958 = call ptr @make_candy_text(ptr %957)
  store ptr %958, ptr @"Core:list:append:11", align 8
  %959 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:4\00", ptr %959, align 1
  %960 = call ptr @make_candy_text(ptr %959)
  store ptr %960, ptr @"Core:list:append:4", align 8
  %961 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:9\00", ptr %961, align 1
  %962 = call ptr @make_candy_text(ptr %961)
  store ptr %962, ptr @"Core:list:append:9", align 8
  %963 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %963, align 1
  %964 = call ptr @make_candy_text(ptr %963)
  store ptr %964, ptr @"Core:result:is:1", align 8
  %965 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:is:1:_\00", ptr %965, align 1
  %966 = call ptr @make_candy_text(ptr %965)
  store ptr %966, ptr @"Core:result:is:1:_", align 8
  %967 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:12\00", ptr %967, align 1
  %968 = call ptr @make_candy_text(ptr %967)
  store ptr %968, ptr @"Core:result:mapOrElse:12", align 8
  %969 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %969, align 1
  %970 = call ptr @make_candy_text(ptr %969)
  store ptr %970, ptr @"Core:result:mapOrElse:14", align 8
  %971 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:2\00", ptr %971, align 1
  %972 = call ptr @make_candy_text(ptr %971)
  store ptr %972, ptr @"Core:result:mapOrElse:2", align 8
  %973 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:22\00", ptr %973, align 1
  %974 = call ptr @make_candy_text(ptr %973)
  store ptr %974, ptr @"Core:result:mapOrElse:22", align 8
  %975 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:24\00", ptr %975, align 1
  %976 = call ptr @make_candy_text(ptr %975)
  store ptr %976, ptr @"Core:result:mapOrElse:24", align 8
  %977 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %977, align 1
  %978 = call ptr @make_candy_text(ptr %977)
  store ptr %978, ptr @"Core:result:mapOrElse:26", align 8
  %979 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:26:2\00", ptr %979, align 1
  %980 = call ptr @make_candy_text(ptr %979)
  store ptr %980, ptr @"Core:result:mapOrElse:26:2", align 8
  %981 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:26:5\00", ptr %981, align 1
  %982 = call ptr @make_candy_text(ptr %981)
  store ptr %982, ptr @"Core:result:mapOrElse:26:5", align 8
  %983 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:26:value\00", ptr %983, align 1
  %984 = call ptr @make_candy_text(ptr %983)
  store ptr %984, ptr @"Core:result:mapOrElse:26:value", align 8
  %985 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:26:value#1\00", ptr %985, align 1
  %986 = call ptr @make_candy_text(ptr %985)
  store ptr %986, ptr @"Core:result:mapOrElse:26:value#1", align 8
  %987 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %987, align 1
  %988 = call ptr @make_candy_text(ptr %987)
  store ptr %988, ptr @"Core:result:mapOrElse:4", align 8
  %989 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:2\00", ptr %989, align 1
  %990 = call ptr @make_candy_text(ptr %989)
  store ptr %990, ptr @"Core:result:unwrapOr:2", align 8
  %991 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %991, align 1
  %992 = call ptr @make_candy_text(ptr %991)
  store ptr %992, ptr @"Core:result:unwrapOr:4", align 8
  %993 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %993, align 1
  %994 = call ptr @make_candy_text(ptr %993)
  store ptr %994, ptr @"Core:result:unwrapOr:8", align 8
  %995 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:12\00", ptr %995, align 1
  %996 = call ptr @make_candy_text(ptr %995)
  store ptr %996, ptr @"Core:result:unwrapOrElse:12", align 8
  %997 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:14\00", ptr %997, align 1
  %998 = call ptr @make_candy_text(ptr %997)
  store ptr %998, ptr @"Core:result:unwrapOrElse:14", align 8
  %999 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:18:7\00", ptr %999, align 1
  %1000 = call ptr @make_candy_text(ptr %999)
  store ptr %1000, ptr @"Core:result:unwrapOrElse:18:7", align 8
  %1001 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:19\00", ptr %1001, align 1
  %1002 = call ptr @make_candy_text(ptr %1001)
  store ptr %1002, ptr @"Core:result:unwrapOrElse:19", align 8
  %1003 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:2\00", ptr %1003, align 1
  %1004 = call ptr @make_candy_text(ptr %1003)
  store ptr %1004, ptr @"Core:result:unwrapOrElse:2", align 8
  %1005 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %1005, align 1
  %1006 = call ptr @make_candy_text(ptr %1005)
  store ptr %1006, ptr @"Core:result:unwrapOrElse:4", align 8
  %1007 = alloca i8, i64 6, align 1
  store [6 x i8] c"Empty\00", ptr %1007, align 1
  %1008 = call ptr @make_candy_tag(ptr %1007, ptr null)
  store ptr %1008, ptr @tag_Empty, align 8
  %1009 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1009, align 1
  %1010 = call ptr @make_candy_tag(ptr %1009, ptr null)
  store ptr %1010, ptr @tag_Error, align 8
  %1011 = alloca i8, i64 6, align 1
  store [6 x i8] c"Index\00", ptr %1011, align 1
  %1012 = call ptr @make_candy_tag(ptr %1011, ptr null)
  store ptr %1012, ptr @tag_Index, align 8
  %1013 = alloca i8, i64 5, align 1
  store [5 x i8] c"Item\00", ptr %1013, align 1
  %1014 = call ptr @make_candy_tag(ptr %1013, ptr null)
  store ptr %1014, ptr @tag_Item, align 8
  %1015 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %1015, align 1
  %1016 = call ptr @make_candy_tag(ptr %1015, ptr null)
  store ptr %1016, ptr @tag_Iterator, align 8
  %1017 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %1017, align 1
  %1018 = call ptr @make_candy_tag(ptr %1017, ptr null)
  store ptr %1018, ptr @tag_More, align 8
  %1019 = alloca i8, i64 2, align 1
  store [2 x i8] c"N\00", ptr %1019, align 1
  %1020 = call ptr @make_candy_tag(ptr %1019, ptr null)
  store ptr %1020, ptr @tag_N, align 8
  %1021 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %1021, align 1
  %1022 = call ptr @make_candy_tag(ptr %1021, ptr null)
  store ptr %1022, ptr @tag_Ok, align 8
  %1023 = alloca i8, i64 5, align 1
  store [5 x i8] c"Rest\00", ptr %1023, align 1
  %1024 = call ptr @make_candy_tag(ptr %1023, ptr null)
  store ptr %1024, ptr @tag_Rest, align 8
  %1025 = alloca i8, i64 6, align 1
  store [6 x i8] c"State\00", ptr %1025, align 1
  %1026 = call ptr @make_candy_tag(ptr %1025, ptr null)
  store ptr %1026, ptr @tag_State, align 8
  %1027 = alloca i8, i64 6, align 1
  store [6 x i8] c"Value\00", ptr %1027, align 1
  %1028 = call ptr @make_candy_tag(ptr %1027, ptr null)
  store ptr %1028, ptr @tag_Value, align 8
  %1029 = alloca i8, i64 1, align 1
  store [1 x i8] zeroinitializer, ptr %1029, align 1
  %1030 = call ptr @make_candy_text(ptr %1029)
  store ptr %1030, ptr @text_, align 8
  %1031 = alloca i8, i64 37, align 1
  store [37 x i8] c"Can't `reduceLeft` an empty iterator\00", ptr %1031, align 1
  %1032 = call ptr @make_candy_text(ptr %1031)
  store ptr %1032, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1033 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %1033, align 1
  %1034 = call ptr @make_candy_text(ptr %1033)
  store ptr %1034, ptr @"text_Expected Error, got ", align 8
  %1035 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected Iterator, got \00", ptr %1035, align 1
  %1036 = call ptr @make_candy_text(ptr %1035)
  store ptr %1036, ptr @"text_Expected Iterator, got ", align 8
  %1037 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected More, got \00", ptr %1037, align 1
  %1038 = call ptr @make_candy_text(ptr %1037)
  store ptr %1038, ptr @"text_Expected More, got ", align 8
  %1039 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %1039, align 1
  %1040 = call ptr @make_candy_text(ptr %1039)
  store ptr %1040, ptr @"text_Expected Ok, got ", align 8
  %1041 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected `Empty`, got `\00", ptr %1041, align 1
  %1042 = call ptr @make_candy_text(ptr %1041)
  store ptr %1042, ptr @"text_Expected `Empty`, got `", align 8
  %1043 = alloca i8, i64 32, align 1
  store [32 x i8] c"Iterator items need to be ints.\00", ptr %1043, align 1
  %1044 = call ptr @make_candy_text(ptr %1043)
  store ptr %1044, ptr @"text_Iterator items need to be ints.", align 8
  %1045 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Index`: `\00", ptr %1045, align 1
  %1046 = call ptr @make_candy_text(ptr %1045)
  store ptr %1046, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %1047 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Item`: `\00", ptr %1047, align 1
  %1048 = call ptr @make_candy_text(ptr %1047)
  store ptr %1048, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %1049 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Iterator`: `\00", ptr %1049, align 1
  %1050 = call ptr @make_candy_text(ptr %1049)
  store ptr %1050, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %1051 = alloca i8, i64 34, align 1
  store [34 x i8] c"Struct doesn't contain key `N`: `\00", ptr %1051, align 1
  %1052 = call ptr @make_candy_text(ptr %1051)
  store ptr %1052, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %1053 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Rest`: `\00", ptr %1053, align 1
  %1054 = call ptr @make_candy_text(ptr %1053)
  store ptr %1054, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %1055 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `State`: `\00", ptr %1055, align 1
  %1056 = call ptr @make_candy_text(ptr %1055)
  store ptr %1056, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %1057 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Value`: `\00", ptr %1057, align 1
  %1058 = call ptr @make_candy_text(ptr %1057)
  store ptr %1058, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %1059 = alloca i8, i64 95, align 1
  store [95 x i8] c"The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `\00", ptr %1059, align 1
  %1060 = call ptr @make_candy_text(ptr %1059)
  store ptr %1060, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %1061 = alloca i8, i64 26, align 1
  store [26 x i8] c"The guard needs to panic.\00", ptr %1061, align 1
  %1062 = call ptr @make_candy_text(ptr %1061)
  store ptr %1062, ptr @"text_The guard needs to panic.", align 8
  %1063 = alloca i8, i64 2, align 1
  store [2 x i8] c"`\00", ptr %1063, align 1
  %1064 = call ptr @make_candy_text(ptr %1063)
  store ptr %1064, ptr @"text_`", align 8
  %1065 = alloca i8, i64 25, align 1
  store [25 x i8] c"`all` needs an iterator.\00", ptr %1065, align 1
  %1066 = call ptr @make_candy_text(ptr %1065)
  store ptr %1066, ptr @"text_`all` needs an iterator.", align 8
  %1067 = alloca i8, i64 25, align 1
  store [25 x i8] c"`any` needs an iterator.\00", ptr %1067, align 1
  %1068 = call ptr @make_candy_text(ptr %1067)
  store ptr %1068, ptr @"text_`any` needs an iterator.", align 8
  %1069 = alloca i8, i64 48, align 1
  store [48 x i8] c"`bool.is allowPartialWindows` was not satisfied\00", ptr %1069, align 1
  %1070 = call ptr @make_candy_text(ptr %1069)
  store ptr %1070, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %1071 = alloca i8, i64 39, align 1
  store [39 x i8] c"`bool.is itemResult` was not satisfied\00", ptr %1071, align 1
  %1072 = call ptr @make_candy_text(ptr %1071)
  store ptr %1072, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %1073 = alloca i8, i64 29, align 1
  store [29 x i8] c"`chunked` needs an iterator.\00", ptr %1073, align 1
  %1074 = call ptr @make_candy_text(ptr %1073)
  store ptr %1074, ptr @"text_`chunked` needs an iterator.", align 8
  %1075 = alloca i8, i64 28, align 1
  store [28 x i8] c"`ensure` needs an iterator.\00", ptr %1075, align 1
  %1076 = call ptr @make_candy_text(ptr %1075)
  store ptr %1076, ptr @"text_`ensure` needs an iterator.", align 8
  %1077 = alloca i8, i64 30, align 1
  store [30 x i8] c"`foldLeft` needs an iterator.\00", ptr %1077, align 1
  %1078 = call ptr @make_candy_text(ptr %1077)
  store ptr %1078, ptr @"text_`foldLeft` needs an iterator.", align 8
  %1079 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function.is0 defaultGetter` was not satisfied\00", ptr %1079, align 1
  %1080 = call ptr @make_candy_text(ptr %1079)
  store ptr %1080, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %1081 = alloca i8, i64 50, align 1
  store [50 x i8] c"`function.is0 notIteratorGuard` was not satisfied\00", ptr %1081, align 1
  %1082 = call ptr @make_candy_text(ptr %1081)
  store ptr %1082, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %1083 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %1083, align 1
  %1084 = call ptr @make_candy_text(ptr %1083)
  store ptr %1084, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %1085 = alloca i8, i64 39, align 1
  store [39 x i8] c"`function.is1 guard` was not satisfied\00", ptr %1085, align 1
  %1086 = call ptr @make_candy_text(ptr %1085)
  store ptr %1086, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %1087 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 mapper` was not satisfied\00", ptr %1087, align 1
  %1088 = call ptr @make_candy_text(ptr %1087)
  store ptr %1088, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %1089 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %1089, align 1
  %1090 = call ptr @make_candy_text(ptr %1089)
  store ptr %1090, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %1091 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 tester` was not satisfied\00", ptr %1091, align 1
  %1092 = call ptr @make_candy_text(ptr %1091)
  store ptr %1092, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %1093 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 valueGetter` was not satisfied\00", ptr %1093, align 1
  %1094 = call ptr @make_candy_text(ptr %1093)
  store ptr %1094, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %1095 = alloca i8, i64 41, align 1
  store [41 x i8] c"`function.is2 combine` was not satisfied\00", ptr %1095, align 1
  %1096 = call ptr @make_candy_text(ptr %1095)
  store ptr %1096, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %1097 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.fitsInRustU32 length` was not satisfied\00", ptr %1097, align 1
  %1098 = call ptr @make_candy_text(ptr %1097)
  store ptr %1098, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %1099 = alloca i8, i64 34, align 1
  store [34 x i8] c"`int.is length` was not satisfied\00", ptr %1099, align 1
  %1100 = call ptr @make_candy_text(ptr %1099)
  store ptr %1100, ptr @"text_`int.is length` was not satisfied", align 8
  %1101 = alloca i8, i64 29, align 1
  store [29 x i8] c"`int.is n` was not satisfied\00", ptr %1101, align 1
  %1102 = call ptr @make_candy_text(ptr %1101)
  store ptr %1102, ptr @"text_`int.is n` was not satisfied", align 8
  %1103 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is size` was not satisfied\00", ptr %1103, align 1
  %1104 = call ptr @make_candy_text(ptr %1103)
  store ptr %1104, ptr @"text_`int.is size` was not satisfied", align 8
  %1105 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is step` was not satisfied\00", ptr %1105, align 1
  %1106 = call ptr @make_candy_text(ptr %1105)
  store ptr %1106, ptr @"text_`int.is step` was not satisfied", align 8
  %1107 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.isNonNegative length` was not satisfied\00", ptr %1107, align 1
  %1108 = call ptr @make_candy_text(ptr %1107)
  store ptr %1108, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %1109 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isNonNegative n` was not satisfied\00", ptr %1109, align 1
  %1110 = call ptr @make_candy_text(ptr %1109)
  store ptr %1110, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %1111 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive size` was not satisfied\00", ptr %1111, align 1
  %1112 = call ptr @make_candy_text(ptr %1111)
  store ptr %1112, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %1113 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive step` was not satisfied\00", ptr %1113, align 1
  %1114 = call ptr @make_candy_text(ptr %1113)
  store ptr %1114, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %1115 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is list` was not satisfied\00", ptr %1115, align 1
  %1116 = call ptr @make_candy_text(ptr %1115)
  store ptr %1116, ptr @"text_`is list` was not satisfied", align 8
  %1117 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %1117, align 1
  %1118 = call ptr @make_candy_text(ptr %1117)
  store ptr %1118, ptr @"text_`is result` was not satisfied", align 8
  %1119 = alloca i8, i64 29, align 1
  store [29 x i8] c"`isEmpty` needs an iterator.\00", ptr %1119, align 1
  %1120 = call ptr @make_candy_text(ptr %1119)
  store ptr %1120, ptr @"text_`isEmpty` needs an iterator.", align 8
  %1121 = alloca i8, i64 32, align 1
  store [32 x i8] c"`joinToText` needs an iterator.\00", ptr %1121, align 1
  %1122 = call ptr @make_candy_text(ptr %1121)
  store ptr %1122, ptr @"text_`joinToText` needs an iterator.", align 8
  %1123 = alloca i8, i64 28, align 1
  store [28 x i8] c"`length` needs an iterator.\00", ptr %1123, align 1
  %1124 = call ptr @make_candy_text(ptr %1123)
  store ptr %1124, ptr @"text_`length` needs an iterator.", align 8
  %1125 = alloca i8, i64 30, align 1
  store [30 x i8] c"`list.is l` was not satisfied\00", ptr %1125, align 1
  %1126 = call ptr @make_candy_text(ptr %1125)
  store ptr %1126, ptr @"text_`list.is l` was not satisfied", align 8
  %1127 = alloca i8, i64 25, align 1
  store [25 x i8] c"`map` needs an iterator.\00", ptr %1127, align 1
  %1128 = call ptr @make_candy_text(ptr %1127)
  store ptr %1128, ptr @"text_`map` needs an iterator.", align 8
  %1129 = alloca i8, i64 26, align 1
  store [26 x i8] c"`next` needs an iterator.\00", ptr %1129, align 1
  %1130 = call ptr @make_candy_text(ptr %1129)
  store ptr %1130, ptr @"text_`next` needs an iterator.", align 8
  %1131 = alloca i8, i64 32, align 1
  store [32 x i8] c"`reduceLeft` needs an iterator.\00", ptr %1131, align 1
  %1132 = call ptr @make_candy_text(ptr %1131)
  store ptr %1132, ptr @"text_`reduceLeft` needs an iterator.", align 8
  %1133 = alloca i8, i64 26, align 1
  store [26 x i8] c"`skip` needs an iterator.\00", ptr %1133, align 1
  %1134 = call ptr @make_candy_text(ptr %1133)
  store ptr %1134, ptr @"text_`skip` needs an iterator.", align 8
  %1135 = alloca i8, i64 25, align 1
  store [25 x i8] c"`sum` needs an iterator.\00", ptr %1135, align 1
  %1136 = call ptr @make_candy_text(ptr %1135)
  store ptr %1136, ptr @"text_`sum` needs an iterator.", align 8
  %1137 = alloca i8, i64 31, align 1
  store [31 x i8] c"`takeWhile` needs an iterator.\00", ptr %1137, align 1
  %1138 = call ptr @make_candy_text(ptr %1137)
  store ptr %1138, ptr @"text_`takeWhile` needs an iterator.", align 8
  %1139 = alloca i8, i64 26, align 1
  store [26 x i8] c"`take` needs an iterator.\00", ptr %1139, align 1
  %1140 = call ptr @make_candy_text(ptr %1139)
  store ptr %1140, ptr @"text_`take` needs an iterator.", align 8
  %1141 = alloca i8, i64 33, align 1
  store [33 x i8] c"`text.is item` was not satisfied\00", ptr %1141, align 1
  %1142 = call ptr @make_candy_text(ptr %1141)
  store ptr %1142, ptr @"text_`text.is item` was not satisfied", align 8
  %1143 = alloca i8, i64 28, align 1
  store [28 x i8] c"`toList` needs an iterator.\00", ptr %1143, align 1
  %1144 = call ptr @make_candy_text(ptr %1143)
  store ptr %1144, ptr @"text_`toList` needs an iterator.", align 8
  %1145 = alloca i8, i64 27, align 1
  store [27 x i8] c"`where` needs an iterator.\00", ptr %1145, align 1
  %1146 = call ptr @make_candy_text(ptr %1145)
  store ptr %1146, ptr @"text_`where` needs an iterator.", align 8
  %1147 = alloca i8, i64 30, align 1
  store [30 x i8] c"`windowed` needs an iterator.\00", ptr %1147, align 1
  %1148 = call ptr @make_candy_text(ptr %1147)
  store ptr %1148, ptr @"text_`windowed` needs an iterator.", align 8
  %1149 = alloca i8, i64 31, align 1
  store [31 x i8] c"`withIndex` needs an iterator.\00", ptr %1149, align 1
  %1150 = call ptr @make_candy_text(ptr %1149)
  store ptr %1150, ptr @"text_`withIndex` needs an iterator.", align 8
  %1151 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1152 = call ptr @make_candy_function(ptr @Core_result_is, ptr %1151, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1152, ptr @fun_Core_result_is, align 8
  %1153 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1154 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %1153, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1154, ptr @fun_Core_result_mapOrElse, align 8
  %1155 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1156 = call ptr @make_candy_function(ptr @"Core_iterator_range_32, Core_result_unwrapOrElse_17", ptr %1155, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1156, ptr @"fun_Core_iterator_range_32, Core_result_unwrapOrElse_17", align 8
  %1157 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1158 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %1157, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1158, ptr @fun_Core_result_unwrapOr, align 8
  %1159 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1160 = call ptr @make_candy_function(ptr @Core_list_append, ptr %1159, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1160, ptr @fun_Core_list_append, align 8
  %1161 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1162 = call ptr @make_candy_function(ptr @"Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", ptr %1161, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1162, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %1163 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1164 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe, ptr %1163, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1164, ptr @fun_Core_iterator_wrapSafe, align 8
  %1165 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1166 = call ptr @make_candy_function(ptr @Core_iterator_next, ptr %1165, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1166, ptr @fun_Core_iterator_next, align 8
  %1167 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1168 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState, ptr %1167, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1168, ptr @fun_Core_iterator_generateWithState, align 8
  %1169 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1170 = call ptr @make_candy_function(ptr @Core_iterator_generate, ptr %1169, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1170, ptr @fun_Core_iterator_generate, align 8
  %1171 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1172 = call ptr @make_candy_function(ptr @Core_iterator_map, ptr %1171, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1172, ptr @fun_Core_iterator_map, align 8
  %1173 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1174 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11, ptr %1173, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1174, ptr @fun_Core_iterator_withIndex_11, align 8
  %1175 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1176 = call ptr @make_candy_function(ptr @Core_iterator_ensure, ptr %1175, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1176, ptr @fun_Core_iterator_ensure, align 8
  %1177 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1178 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft, ptr %1177, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1178, ptr @fun_Core_iterator_foldLeft, align 8
  %1179 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1180 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1180, align 1
  %1181 = call ptr @make_candy_tag(ptr %1180, ptr %1179)
  store ptr %1181, ptr @tag_Error.220, align 8
  %1182 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1183 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-0_matched, ptr %1182, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1183, ptr @fun_Core_iterator_reduceLeft_16_case-0_matched, align 8
  %1184 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1185 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft, ptr %1184, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1185, ptr @fun_Core_iterator_reduceLeft, align 8
  %1186 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1187 = call ptr @make_candy_function(ptr @Core_iterator_sum_8, ptr %1186, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1187, ptr @fun_Core_iterator_sum_8, align 8
  %1188 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1189 = call ptr @make_candy_function(ptr @Core_iterator_sum, ptr %1188, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1189, ptr @fun_Core_iterator_sum, align 8
  %1190 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1191 = call ptr @make_candy_function(ptr @Core_iterator_length_5, ptr %1190, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1191, ptr @fun_Core_iterator_length_5, align 8
  %1192 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1193 = call ptr @make_candy_function(ptr @Core_iterator_all, ptr %1192, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1193, ptr @fun_Core_iterator_all, align 8
  %1194 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1195 = call ptr @make_candy_function(ptr @Core_iterator_any, ptr %1194, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1195, ptr @fun_Core_iterator_any, align 8
  %1196 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1197 = call ptr @make_candy_function(ptr @Core_iterator_joinToText, ptr %1196, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1197, ptr @fun_Core_iterator_joinToText, align 8
  %1198 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1199 = call ptr @make_candy_function(ptr @Core_iterator_where, ptr %1198, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1199, ptr @fun_Core_iterator_where, align 8
  %1200 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1201 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile, ptr %1200, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1201, ptr @fun_Core_iterator_takeWhile, align 8
  %1202 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1203 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_2, ptr %1202, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1203, ptr @fun_Core_iterator_withIndex_2, align 8
  %1204 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1205 = call ptr @make_candy_function(ptr @Core_iterator_take_30, ptr %1204, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1205, ptr @fun_Core_iterator_take_30, align 8
  %1206 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1207 = call ptr @make_candy_function(ptr @Core_iterator_take, ptr %1206, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1207, ptr @fun_Core_iterator_take, align 8
  %1208 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1209 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6, ptr %1208, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1209, ptr @fun_Core_iterator_skip_26_6, align 8
  %1210 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1211 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.351, ptr %1210, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1211, ptr @fun_Core_controlFlow_recursive_16.352, align 8
  %1212 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1213 = call ptr @make_candy_function(ptr @Core_iterator_skip, ptr %1212, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1213, ptr @fun_Core_iterator_skip, align 8
  %1214 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1215 = call ptr @make_candy_function(ptr @Core_iterator_fromList, ptr %1214, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1215, ptr @fun_Core_iterator_fromList, align 8
  %1216 = alloca ptr, i64 1, align 8
  %1217 = getelementptr ptr, ptr %1216, i64 0
  store ptr null, ptr %1217, align 8
  %1218 = call ptr @make_candy_list(ptr %1216)
  store ptr %1218, ptr @148, align 8
  %1219 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1220 = call ptr @make_candy_function(ptr @Core_iterator_toList_6, ptr %1219, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1220, ptr @fun_Core_iterator_toList_6, align 8
  %1221 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1222 = call ptr @make_candy_function(ptr @Core_iterator_toList_2, ptr %1221, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1222, ptr @fun_Core_iterator_toList_2, align 8
  %1223 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1224 = call ptr @make_candy_function(ptr @Core_iterator_windowed, ptr %1223, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1224, ptr @fun_Core_iterator_windowed, align 8
  %1225 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1226 = call ptr @make_candy_function(ptr @Core_iterator_chunked, ptr %1225, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1226, ptr @fun_Core_iterator_chunked, align 8
  %1227 = alloca ptr, i64 4, align 8
  %1228 = load ptr, ptr @num_1, align 8
  %1229 = getelementptr ptr, ptr %1227, i64 0
  store ptr %1228, ptr %1229, align 8
  %1230 = load ptr, ptr @num_2, align 8
  %1231 = getelementptr ptr, ptr %1227, i64 1
  store ptr %1230, ptr %1231, align 8
  %1232 = load ptr, ptr @num_3, align 8
  %1233 = getelementptr ptr, ptr %1227, i64 2
  store ptr %1232, ptr %1233, align 8
  %1234 = getelementptr ptr, ptr %1227, i64 3
  store ptr null, ptr %1234, align 8
  %1235 = call ptr @make_candy_list(ptr %1227)
  store ptr %1235, ptr @149, align 8
  %1236 = load ptr, ptr @149, align 8
  %1237 = call ptr @Core_iterator_fromList(ptr %1236)
  %1238 = call ptr @make_candy_int(i64 6)
  store ptr %1238, ptr @num_6, align 8
  %1239 = call ptr @make_candy_int(i64 7)
  store ptr %1239, ptr @num_7, align 8
  %1240 = call ptr @make_candy_int(i64 8)
  store ptr %1240, ptr @num_8, align 8
  %1241 = call ptr @make_candy_int(i64 9)
  store ptr %1241, ptr @num_9, align 8
  %1242 = alloca ptr, i64 11, align 8
  %1243 = load ptr, ptr @num_1, align 8
  %1244 = getelementptr ptr, ptr %1242, i64 0
  store ptr %1243, ptr %1244, align 8
  %1245 = load ptr, ptr @num_2, align 8
  %1246 = getelementptr ptr, ptr %1242, i64 1
  store ptr %1245, ptr %1246, align 8
  %1247 = load ptr, ptr @num_3, align 8
  %1248 = getelementptr ptr, ptr %1242, i64 2
  store ptr %1247, ptr %1248, align 8
  %1249 = load ptr, ptr @num_4, align 8
  %1250 = getelementptr ptr, ptr %1242, i64 3
  store ptr %1249, ptr %1250, align 8
  %1251 = load ptr, ptr @num_5, align 8
  %1252 = getelementptr ptr, ptr %1242, i64 4
  store ptr %1251, ptr %1252, align 8
  %1253 = load ptr, ptr @num_6, align 8
  %1254 = getelementptr ptr, ptr %1242, i64 5
  store ptr %1253, ptr %1254, align 8
  %1255 = load ptr, ptr @num_7, align 8
  %1256 = getelementptr ptr, ptr %1242, i64 6
  store ptr %1255, ptr %1256, align 8
  %1257 = load ptr, ptr @num_8, align 8
  %1258 = getelementptr ptr, ptr %1242, i64 7
  store ptr %1257, ptr %1258, align 8
  %1259 = load ptr, ptr @num_9, align 8
  %1260 = getelementptr ptr, ptr %1242, i64 8
  store ptr %1259, ptr %1260, align 8
  %1261 = load ptr, ptr @num_10, align 8
  %1262 = getelementptr ptr, ptr %1242, i64 9
  store ptr %1261, ptr %1262, align 8
  %1263 = getelementptr ptr, ptr %1242, i64 10
  store ptr null, ptr %1263, align 8
  %1264 = call ptr @make_candy_list(ptr %1242)
  store ptr %1264, ptr @150, align 8
  %1265 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:125\00", ptr %1265, align 1
  %1266 = call ptr @make_candy_text(ptr %1265)
  store ptr %1266, ptr @"Core:iterator:125", align 8
  %1267 = load ptr, ptr @150, align 8
  %1268 = call ptr @Core_iterator_fromList(ptr %1267)
  %1269 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:129\00", ptr %1269, align 1
  %1270 = call ptr @make_candy_text(ptr %1269)
  store ptr %1270, ptr @"Core:iterator:129", align 8
  %1271 = call ptr @Core_iterator_next(ptr %1237)
  %1272 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:130\00", ptr %1272, align 1
  %1273 = call ptr @make_candy_text(ptr %1272)
  store ptr %1273, ptr @"Core:iterator:130", align 8
  %1274 = call ptr @candy_builtin_type_of(ptr %1271)
  %1275 = load ptr, ptr @tag_Tag, align 8
  %1276 = call ptr @candy_builtin_equals(ptr %1275, ptr %1274)
  %1277 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1278 = getelementptr inbounds { ptr }, ptr %1277, i32 0, i32 0
  store ptr %1271, ptr %1278, align 8
  %1279 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then, ptr %1277, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1279, ptr @fun_Core_iterator_130_equals_then, align 8
  %1280 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1281 = getelementptr inbounds { ptr }, ptr %1280, i32 0, i32 0
  store ptr %1274, ptr %1281, align 8
  %1282 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_else.375, ptr %1280, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1282, ptr @fun_Core_iterator_130_equals_else.376, align 8
  %1283 = load ptr, ptr @fun_Core_iterator_130_equals_then, align 8
  %1284 = load ptr, ptr @fun_Core_iterator_130_equals_else.376, align 8
  %1285 = call ptr @candy_builtin_if_else(ptr %1276, ptr %1283, ptr %1284)
  %1286 = load ptr, ptr @num_0, align 8
  %1287 = call ptr @candy_builtin_list_get(ptr %1285, ptr %1286)
  %1288 = load ptr, ptr @tag_Match, align 8
  %1289 = call ptr @candy_builtin_equals(ptr %1287, ptr %1288)
  %1290 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1291 = getelementptr inbounds { ptr }, ptr %1290, i32 0, i32 0
  store ptr %1285, ptr %1291, align 8
  %1292 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_else.377, ptr %1290, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1292, ptr @fun_Core_iterator_130_isMatch_else.378, align 8
  %1293 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1294 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.378, align 8
  %1295 = call ptr @candy_builtin_if_else(ptr %1289, ptr %1293, ptr %1294)
  %1296 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:item\00", ptr %1296, align 1
  %1297 = call ptr @make_candy_text(ptr %1296)
  store ptr %1297, ptr @"Core:iterator:item", align 8
  %1298 = load ptr, ptr @num_1, align 8
  %1299 = call ptr @candy_builtin_list_get(ptr %1285, ptr %1298)
  %1300 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:rest\00", ptr %1300, align 1
  %1301 = call ptr @make_candy_text(ptr %1300)
  store ptr %1301, ptr @"Core:iterator:rest", align 8
  %1302 = load ptr, ptr @num_2, align 8
  %1303 = call ptr @candy_builtin_list_get(ptr %1285, ptr %1302)
  %1304 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:135\00", ptr %1304, align 1
  %1305 = call ptr @make_candy_text(ptr %1304)
  store ptr %1305, ptr @"Core:iterator:135", align 8
  %1306 = load ptr, ptr @num_1, align 8
  %1307 = call ptr @Core_check_checkEquals(ptr %1299, ptr %1306)
  %1308 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:138\00", ptr %1308, align 1
  %1309 = call ptr @make_candy_text(ptr %1308)
  store ptr %1309, ptr @"Core:iterator:138", align 8
  %1310 = call ptr @Core_iterator_next(ptr %1303)
  %1311 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:139\00", ptr %1311, align 1
  %1312 = call ptr @make_candy_text(ptr %1311)
  store ptr %1312, ptr @"Core:iterator:139", align 8
  %1313 = call ptr @candy_builtin_type_of(ptr %1310)
  %1314 = load ptr, ptr @tag_Tag, align 8
  %1315 = call ptr @candy_builtin_equals(ptr %1314, ptr %1313)
  %1316 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1317 = getelementptr inbounds { ptr }, ptr %1316, i32 0, i32 0
  store ptr %1310, ptr %1317, align 8
  %1318 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then, ptr %1316, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1318, ptr @fun_Core_iterator_139_equals_then, align 8
  %1319 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1320 = getelementptr inbounds { ptr }, ptr %1319, i32 0, i32 0
  store ptr %1313, ptr %1320, align 8
  %1321 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_else.397, ptr %1319, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1321, ptr @fun_Core_iterator_139_equals_else.398, align 8
  %1322 = load ptr, ptr @fun_Core_iterator_139_equals_then, align 8
  %1323 = load ptr, ptr @fun_Core_iterator_139_equals_else.398, align 8
  %1324 = call ptr @candy_builtin_if_else(ptr %1315, ptr %1322, ptr %1323)
  %1325 = load ptr, ptr @num_0, align 8
  %1326 = call ptr @candy_builtin_list_get(ptr %1324, ptr %1325)
  %1327 = load ptr, ptr @tag_Match, align 8
  %1328 = call ptr @candy_builtin_equals(ptr %1326, ptr %1327)
  %1329 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1330 = getelementptr inbounds { ptr }, ptr %1329, i32 0, i32 0
  store ptr %1324, ptr %1330, align 8
  %1331 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_else.399, ptr %1329, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1331, ptr @fun_Core_iterator_139_isMatch_else.400, align 8
  %1332 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1333 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.400, align 8
  %1334 = call ptr @candy_builtin_if_else(ptr %1328, ptr %1332, ptr %1333)
  %1335 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:item#1\00", ptr %1335, align 1
  %1336 = call ptr @make_candy_text(ptr %1335)
  store ptr %1336, ptr @"Core:iterator:item#1", align 8
  %1337 = load ptr, ptr @num_1, align 8
  %1338 = call ptr @candy_builtin_list_get(ptr %1324, ptr %1337)
  %1339 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:rest#1\00", ptr %1339, align 1
  %1340 = call ptr @make_candy_text(ptr %1339)
  store ptr %1340, ptr @"Core:iterator:rest#1", align 8
  %1341 = load ptr, ptr @num_2, align 8
  %1342 = call ptr @candy_builtin_list_get(ptr %1324, ptr %1341)
  %1343 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:144\00", ptr %1343, align 1
  %1344 = call ptr @make_candy_text(ptr %1343)
  store ptr %1344, ptr @"Core:iterator:144", align 8
  %1345 = load ptr, ptr @num_2, align 8
  %1346 = call ptr @Core_check_checkEquals(ptr %1338, ptr %1345)
  %1347 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:149\00", ptr %1347, align 1
  %1348 = call ptr @make_candy_text(ptr %1347)
  store ptr %1348, ptr @"Core:iterator:149", align 8
  %1349 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1350 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2, ptr %1349, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1350, ptr @fun_Core_iterator_isEmpty_2, align 8
  %1351 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %1352 = call ptr @Core_iterator_wrapSafe(ptr %1237, ptr %1351)
  %1353 = call ptr @Core_iterator_next(ptr %1352)
  %1354 = load ptr, ptr @tag_Empty, align 8
  %1355 = call ptr @candy_builtin_equals(ptr %1353, ptr %1354)
  %1356 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:151\00", ptr %1356, align 1
  %1357 = call ptr @make_candy_text(ptr %1356)
  store ptr %1357, ptr @"Core:iterator:151", align 8
  %1358 = load ptr, ptr @tag_False, align 8
  %1359 = call ptr @Core_check_checkEquals(ptr %1355, ptr %1358)
  %1360 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:156\00", ptr %1360, align 1
  %1361 = call ptr @make_candy_text(ptr %1360)
  store ptr %1361, ptr @"Core:iterator:156", align 8
  %1362 = load ptr, ptr @148, align 8
  %1363 = call ptr @Core_iterator_fromList(ptr %1362)
  %1364 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:157\00", ptr %1364, align 1
  %1365 = call ptr @make_candy_text(ptr %1364)
  store ptr %1365, ptr @"Core:iterator:157", align 8
  %1366 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1367 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2.401, ptr %1366, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1367, ptr @fun_Core_iterator_isEmpty_2.402, align 8
  %1368 = load ptr, ptr @fun_Core_iterator_isEmpty_2.402, align 8
  %1369 = call ptr @Core_iterator_wrapSafe(ptr %1363, ptr %1368)
  %1370 = call ptr @Core_iterator_next(ptr %1369)
  %1371 = load ptr, ptr @tag_Empty, align 8
  %1372 = call ptr @candy_builtin_equals(ptr %1370, ptr %1371)
  %1373 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:159\00", ptr %1373, align 1
  %1374 = call ptr @make_candy_text(ptr %1373)
  store ptr %1374, ptr @"Core:iterator:159", align 8
  %1375 = load ptr, ptr @tag_True, align 8
  %1376 = call ptr @Core_check_checkEquals(ptr %1372, ptr %1375)
  %1377 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:163:8\00", ptr %1377, align 1
  %1378 = call ptr @make_candy_text(ptr %1377)
  store ptr %1378, ptr @"Core:iterator:163:8", align 8
  %1379 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1380 = call ptr @make_candy_function(ptr @Core_iterator_163, ptr %1379, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1380, ptr @fun_Core_iterator_163, align 8
  %1381 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:164\00", ptr %1381, align 1
  %1382 = call ptr @make_candy_text(ptr %1381)
  store ptr %1382, ptr @"Core:iterator:164", align 8
  %1383 = load ptr, ptr @fun_Core_iterator_163, align 8
  %1384 = call ptr @Core_iterator_map(ptr %1237, ptr %1383)
  %1385 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:166\00", ptr %1385, align 1
  %1386 = call ptr @make_candy_text(ptr %1385)
  store ptr %1386, ptr @"Core:iterator:166", align 8
  %1387 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1388 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.403, ptr %1387, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1388, ptr @fun_Core_iterator_toList_2.404, align 8
  %1389 = load ptr, ptr @fun_Core_iterator_toList_2.404, align 8
  %1390 = call ptr @Core_iterator_wrapSafe(ptr %1384, ptr %1389)
  %1391 = load ptr, ptr @148, align 8
  %1392 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1393 = call ptr @Core_iterator_foldLeft(ptr %1390, ptr %1391, ptr %1392)
  %1394 = alloca ptr, i64 4, align 8
  %1395 = load ptr, ptr @num_2, align 8
  %1396 = getelementptr ptr, ptr %1394, i64 0
  store ptr %1395, ptr %1396, align 8
  %1397 = load ptr, ptr @num_4, align 8
  %1398 = getelementptr ptr, ptr %1394, i64 1
  store ptr %1397, ptr %1398, align 8
  %1399 = load ptr, ptr @num_6, align 8
  %1400 = getelementptr ptr, ptr %1394, i64 2
  store ptr %1399, ptr %1400, align 8
  %1401 = getelementptr ptr, ptr %1394, i64 3
  store ptr null, ptr %1401, align 8
  %1402 = call ptr @make_candy_list(ptr %1394)
  store ptr %1402, ptr @167, align 8
  %1403 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:171\00", ptr %1403, align 1
  %1404 = call ptr @make_candy_text(ptr %1403)
  store ptr %1404, ptr @"Core:iterator:171", align 8
  %1405 = load ptr, ptr @167, align 8
  %1406 = call ptr @Core_check_checkEquals(ptr %1393, ptr %1405)
  %1407 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:175\00", ptr %1407, align 1
  %1408 = call ptr @make_candy_text(ptr %1407)
  store ptr %1408, ptr @"Core:iterator:175", align 8
  %1409 = call ptr @Core_iterator_sum(ptr %1237)
  %1410 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:177\00", ptr %1410, align 1
  %1411 = call ptr @make_candy_text(ptr %1410)
  store ptr %1411, ptr @"Core:iterator:177", align 8
  %1412 = load ptr, ptr @num_6, align 8
  %1413 = call ptr @Core_check_checkEquals(ptr %1409, ptr %1412)
  %1414 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:181\00", ptr %1414, align 1
  %1415 = call ptr @make_candy_text(ptr %1414)
  store ptr %1415, ptr @"Core:iterator:181", align 8
  %1416 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1417 = call ptr @make_candy_function(ptr @Core_iterator_length_2, ptr %1416, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1417, ptr @fun_Core_iterator_length_2, align 8
  %1418 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %1419 = call ptr @Core_iterator_wrapSafe(ptr %1237, ptr %1418)
  %1420 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %1421 = call ptr @Core_iterator_map(ptr %1419, ptr %1420)
  %1422 = call ptr @Core_iterator_sum(ptr %1421)
  %1423 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:183\00", ptr %1423, align 1
  %1424 = call ptr @make_candy_text(ptr %1423)
  store ptr %1424, ptr @"Core:iterator:183", align 8
  %1425 = load ptr, ptr @num_3, align 8
  %1426 = call ptr @Core_check_checkEquals(ptr %1422, ptr %1425)
  %1427 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:187:7\00", ptr %1427, align 1
  %1428 = call ptr @make_candy_text(ptr %1427)
  store ptr %1428, ptr @"Core:iterator:187:7", align 8
  %1429 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1430 = call ptr @make_candy_function(ptr @Core_iterator_187, ptr %1429, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1430, ptr @fun_Core_iterator_187, align 8
  %1431 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:188\00", ptr %1431, align 1
  %1432 = call ptr @make_candy_text(ptr %1431)
  store ptr %1432, ptr @"Core:iterator:188", align 8
  %1433 = load ptr, ptr @fun_Core_iterator_187, align 8
  %1434 = call ptr @Core_iterator_all(ptr %1237, ptr %1433)
  %1435 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:190\00", ptr %1435, align 1
  %1436 = call ptr @make_candy_text(ptr %1435)
  store ptr %1436, ptr @"Core:iterator:190", align 8
  %1437 = load ptr, ptr @tag_True, align 8
  %1438 = call ptr @Core_check_checkEquals(ptr %1434, ptr %1437)
  %1439 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1440 = call ptr @make_candy_function(ptr @Core_iterator_194, ptr %1439, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1440, ptr @fun_Core_iterator_194, align 8
  %1441 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:195\00", ptr %1441, align 1
  %1442 = call ptr @make_candy_text(ptr %1441)
  store ptr %1442, ptr @"Core:iterator:195", align 8
  %1443 = load ptr, ptr @fun_Core_iterator_194, align 8
  %1444 = call ptr @Core_iterator_any(ptr %1237, ptr %1443)
  %1445 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:197\00", ptr %1445, align 1
  %1446 = call ptr @make_candy_text(ptr %1445)
  store ptr %1446, ptr @"Core:iterator:197", align 8
  %1447 = load ptr, ptr @tag_True, align 8
  %1448 = call ptr @Core_check_checkEquals(ptr %1444, ptr %1447)
  %1449 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:202\00", ptr %1449, align 1
  %1450 = call ptr @make_candy_text(ptr %1449)
  store ptr %1450, ptr @"Core:iterator:202", align 8
  %1451 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_201, Core_toDebugText_toDebugText", align 8
  %1452 = call ptr @Core_iterator_map(ptr %1237, ptr %1451)
  %1453 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:204\00", ptr %1453, align 1
  %1454 = call ptr @make_candy_text(ptr %1453)
  store ptr %1454, ptr @"Core:iterator:204", align 8
  %1455 = call ptr @Core_iterator_joinToText(ptr %1452)
  %1456 = alloca i8, i64 4, align 1
  store [4 x i8] c"123\00", ptr %1456, align 1
  %1457 = call ptr @make_candy_text(ptr %1456)
  store ptr %1457, ptr @text_123, align 8
  %1458 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:212\00", ptr %1458, align 1
  %1459 = call ptr @make_candy_text(ptr %1458)
  store ptr %1459, ptr @"Core:iterator:212", align 8
  %1460 = load ptr, ptr @text_123, align 8
  %1461 = call ptr @Core_check_checkEquals(ptr %1455, ptr %1460)
  %1462 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:216:7\00", ptr %1462, align 1
  %1463 = call ptr @make_candy_text(ptr %1462)
  store ptr %1463, ptr @"Core:iterator:216:7", align 8
  %1464 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1465 = call ptr @make_candy_function(ptr @Core_iterator_216, ptr %1464, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1465, ptr @fun_Core_iterator_216, align 8
  %1466 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:217\00", ptr %1466, align 1
  %1467 = call ptr @make_candy_text(ptr %1466)
  store ptr %1467, ptr @"Core:iterator:217", align 8
  %1468 = load ptr, ptr @fun_Core_iterator_216, align 8
  %1469 = call ptr @Core_iterator_where(ptr %1268, ptr %1468)
  %1470 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:219\00", ptr %1470, align 1
  %1471 = call ptr @make_candy_text(ptr %1470)
  store ptr %1471, ptr @"Core:iterator:219", align 8
  %1472 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1473 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.405, ptr %1472, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1473, ptr @fun_Core_iterator_toList_2.406, align 8
  %1474 = load ptr, ptr @fun_Core_iterator_toList_2.406, align 8
  %1475 = call ptr @Core_iterator_wrapSafe(ptr %1469, ptr %1474)
  %1476 = load ptr, ptr @148, align 8
  %1477 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1478 = call ptr @Core_iterator_foldLeft(ptr %1475, ptr %1476, ptr %1477)
  %1479 = alloca ptr, i64 6, align 8
  %1480 = load ptr, ptr @num_1, align 8
  %1481 = getelementptr ptr, ptr %1479, i64 0
  store ptr %1480, ptr %1481, align 8
  %1482 = load ptr, ptr @num_3, align 8
  %1483 = getelementptr ptr, ptr %1479, i64 1
  store ptr %1482, ptr %1483, align 8
  %1484 = load ptr, ptr @num_5, align 8
  %1485 = getelementptr ptr, ptr %1479, i64 2
  store ptr %1484, ptr %1485, align 8
  %1486 = load ptr, ptr @num_7, align 8
  %1487 = getelementptr ptr, ptr %1479, i64 3
  store ptr %1486, ptr %1487, align 8
  %1488 = load ptr, ptr @num_9, align 8
  %1489 = getelementptr ptr, ptr %1479, i64 4
  store ptr %1488, ptr %1489, align 8
  %1490 = getelementptr ptr, ptr %1479, i64 5
  store ptr null, ptr %1490, align 8
  %1491 = call ptr @make_candy_list(ptr %1479)
  store ptr %1491, ptr @168, align 8
  %1492 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:226\00", ptr %1492, align 1
  %1493 = call ptr @make_candy_text(ptr %1492)
  store ptr %1493, ptr @"Core:iterator:226", align 8
  %1494 = load ptr, ptr @168, align 8
  %1495 = call ptr @Core_check_checkEquals(ptr %1478, ptr %1494)
  %1496 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:230:8\00", ptr %1496, align 1
  %1497 = call ptr @make_candy_text(ptr %1496)
  store ptr %1497, ptr @"Core:iterator:230:8", align 8
  %1498 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1499 = call ptr @make_candy_function(ptr @Core_iterator_230, ptr %1498, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1499, ptr @fun_Core_iterator_230, align 8
  %1500 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:231\00", ptr %1500, align 1
  %1501 = call ptr @make_candy_text(ptr %1500)
  store ptr %1501, ptr @"Core:iterator:231", align 8
  %1502 = load ptr, ptr @fun_Core_iterator_230, align 8
  %1503 = call ptr @Core_iterator_takeWhile(ptr %1268, ptr %1502)
  %1504 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:233\00", ptr %1504, align 1
  %1505 = call ptr @make_candy_text(ptr %1504)
  store ptr %1505, ptr @"Core:iterator:233", align 8
  %1506 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1507 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.407, ptr %1506, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1507, ptr @fun_Core_iterator_toList_2.408, align 8
  %1508 = load ptr, ptr @fun_Core_iterator_toList_2.408, align 8
  %1509 = call ptr @Core_iterator_wrapSafe(ptr %1503, ptr %1508)
  %1510 = load ptr, ptr @148, align 8
  %1511 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1512 = call ptr @Core_iterator_foldLeft(ptr %1509, ptr %1510, ptr %1511)
  %1513 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:238\00", ptr %1513, align 1
  %1514 = call ptr @make_candy_text(ptr %1513)
  store ptr %1514, ptr @"Core:iterator:238", align 8
  %1515 = load ptr, ptr @149, align 8
  %1516 = call ptr @Core_check_checkEquals(ptr %1512, ptr %1515)
  %1517 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:243\00", ptr %1517, align 1
  %1518 = call ptr @make_candy_text(ptr %1517)
  store ptr %1518, ptr @"Core:iterator:243", align 8
  %1519 = load ptr, ptr @num_4, align 8
  %1520 = call ptr @Core_iterator_take(ptr %1268, ptr %1519)
  %1521 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:245\00", ptr %1521, align 1
  %1522 = call ptr @make_candy_text(ptr %1521)
  store ptr %1522, ptr @"Core:iterator:245", align 8
  %1523 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1524 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.409, ptr %1523, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1524, ptr @fun_Core_iterator_toList_2.410, align 8
  %1525 = load ptr, ptr @fun_Core_iterator_toList_2.410, align 8
  %1526 = call ptr @Core_iterator_wrapSafe(ptr %1520, ptr %1525)
  %1527 = load ptr, ptr @148, align 8
  %1528 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1529 = call ptr @Core_iterator_foldLeft(ptr %1526, ptr %1527, ptr %1528)
  %1530 = alloca ptr, i64 5, align 8
  %1531 = load ptr, ptr @num_1, align 8
  %1532 = getelementptr ptr, ptr %1530, i64 0
  store ptr %1531, ptr %1532, align 8
  %1533 = load ptr, ptr @num_2, align 8
  %1534 = getelementptr ptr, ptr %1530, i64 1
  store ptr %1533, ptr %1534, align 8
  %1535 = load ptr, ptr @num_3, align 8
  %1536 = getelementptr ptr, ptr %1530, i64 2
  store ptr %1535, ptr %1536, align 8
  %1537 = load ptr, ptr @num_4, align 8
  %1538 = getelementptr ptr, ptr %1530, i64 3
  store ptr %1537, ptr %1538, align 8
  %1539 = getelementptr ptr, ptr %1530, i64 4
  store ptr null, ptr %1539, align 8
  %1540 = call ptr @make_candy_list(ptr %1530)
  store ptr %1540, ptr @169, align 8
  %1541 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:251\00", ptr %1541, align 1
  %1542 = call ptr @make_candy_text(ptr %1541)
  store ptr %1542, ptr @"Core:iterator:251", align 8
  %1543 = load ptr, ptr @169, align 8
  %1544 = call ptr @Core_check_checkEquals(ptr %1529, ptr %1543)
  %1545 = call ptr @make_candy_int(i64 12)
  store ptr %1545, ptr @num_12, align 8
  %1546 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:256\00", ptr %1546, align 1
  %1547 = call ptr @make_candy_text(ptr %1546)
  store ptr %1547, ptr @"Core:iterator:256", align 8
  %1548 = load ptr, ptr @num_12, align 8
  %1549 = call ptr @Core_iterator_take(ptr %1268, ptr %1548)
  %1550 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:258\00", ptr %1550, align 1
  %1551 = call ptr @make_candy_text(ptr %1550)
  store ptr %1551, ptr @"Core:iterator:258", align 8
  %1552 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1553 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.411, ptr %1552, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1553, ptr @fun_Core_iterator_toList_2.412, align 8
  %1554 = load ptr, ptr @fun_Core_iterator_toList_2.412, align 8
  %1555 = call ptr @Core_iterator_wrapSafe(ptr %1549, ptr %1554)
  %1556 = load ptr, ptr @148, align 8
  %1557 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1558 = call ptr @Core_iterator_foldLeft(ptr %1555, ptr %1556, ptr %1557)
  %1559 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:270\00", ptr %1559, align 1
  %1560 = call ptr @make_candy_text(ptr %1559)
  store ptr %1560, ptr @"Core:iterator:270", align 8
  %1561 = load ptr, ptr @150, align 8
  %1562 = call ptr @Core_check_checkEquals(ptr %1558, ptr %1561)
  %1563 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:275\00", ptr %1563, align 1
  %1564 = call ptr @make_candy_text(ptr %1563)
  store ptr %1564, ptr @"Core:iterator:275", align 8
  %1565 = load ptr, ptr @num_4, align 8
  %1566 = call ptr @Core_iterator_skip(ptr %1268, ptr %1565)
  %1567 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:277\00", ptr %1567, align 1
  %1568 = call ptr @make_candy_text(ptr %1567)
  store ptr %1568, ptr @"Core:iterator:277", align 8
  %1569 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1570 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.413, ptr %1569, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1570, ptr @fun_Core_iterator_toList_2.414, align 8
  %1571 = load ptr, ptr @fun_Core_iterator_toList_2.414, align 8
  %1572 = call ptr @Core_iterator_wrapSafe(ptr %1566, ptr %1571)
  %1573 = load ptr, ptr @148, align 8
  %1574 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1575 = call ptr @Core_iterator_foldLeft(ptr %1572, ptr %1573, ptr %1574)
  %1576 = alloca ptr, i64 7, align 8
  %1577 = load ptr, ptr @num_5, align 8
  %1578 = getelementptr ptr, ptr %1576, i64 0
  store ptr %1577, ptr %1578, align 8
  %1579 = load ptr, ptr @num_6, align 8
  %1580 = getelementptr ptr, ptr %1576, i64 1
  store ptr %1579, ptr %1580, align 8
  %1581 = load ptr, ptr @num_7, align 8
  %1582 = getelementptr ptr, ptr %1576, i64 2
  store ptr %1581, ptr %1582, align 8
  %1583 = load ptr, ptr @num_8, align 8
  %1584 = getelementptr ptr, ptr %1576, i64 3
  store ptr %1583, ptr %1584, align 8
  %1585 = load ptr, ptr @num_9, align 8
  %1586 = getelementptr ptr, ptr %1576, i64 4
  store ptr %1585, ptr %1586, align 8
  %1587 = load ptr, ptr @num_10, align 8
  %1588 = getelementptr ptr, ptr %1576, i64 5
  store ptr %1587, ptr %1588, align 8
  %1589 = getelementptr ptr, ptr %1576, i64 6
  store ptr null, ptr %1589, align 8
  %1590 = call ptr @make_candy_list(ptr %1576)
  store ptr %1590, ptr @170, align 8
  %1591 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:285\00", ptr %1591, align 1
  %1592 = call ptr @make_candy_text(ptr %1591)
  store ptr %1592, ptr @"Core:iterator:285", align 8
  %1593 = load ptr, ptr @170, align 8
  %1594 = call ptr @Core_check_checkEquals(ptr %1575, ptr %1593)
  %1595 = call ptr @make_candy_int(i64 40)
  store ptr %1595, ptr @num_40, align 8
  %1596 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:290\00", ptr %1596, align 1
  %1597 = call ptr @make_candy_text(ptr %1596)
  store ptr %1597, ptr @"Core:iterator:290", align 8
  %1598 = load ptr, ptr @num_40, align 8
  %1599 = call ptr @Core_iterator_skip(ptr %1268, ptr %1598)
  %1600 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:292\00", ptr %1600, align 1
  %1601 = call ptr @make_candy_text(ptr %1600)
  store ptr %1601, ptr @"Core:iterator:292", align 8
  %1602 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1603 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.415, ptr %1602, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1603, ptr @fun_Core_iterator_toList_2.416, align 8
  %1604 = load ptr, ptr @fun_Core_iterator_toList_2.416, align 8
  %1605 = call ptr @Core_iterator_wrapSafe(ptr %1599, ptr %1604)
  %1606 = load ptr, ptr @148, align 8
  %1607 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1608 = call ptr @Core_iterator_foldLeft(ptr %1605, ptr %1606, ptr %1607)
  %1609 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:294\00", ptr %1609, align 1
  %1610 = call ptr @make_candy_text(ptr %1609)
  store ptr %1610, ptr @"Core:iterator:294", align 8
  %1611 = load ptr, ptr @148, align 8
  %1612 = call ptr @Core_check_checkEquals(ptr %1608, ptr %1611)
  %1613 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:301\00", ptr %1613, align 1
  %1614 = call ptr @make_candy_text(ptr %1613)
  store ptr %1614, ptr @"Core:iterator:301", align 8
  %1615 = load ptr, ptr @num_4, align 8
  %1616 = load ptr, ptr @num_3, align 8
  %1617 = load ptr, ptr @tag_False, align 8
  %1618 = call ptr @Core_iterator_windowed(ptr %1268, ptr %1615, ptr %1616, ptr %1617)
  %1619 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:303\00", ptr %1619, align 1
  %1620 = call ptr @make_candy_text(ptr %1619)
  store ptr %1620, ptr @"Core:iterator:303", align 8
  %1621 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1622 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.417, ptr %1621, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1622, ptr @fun_Core_iterator_toList_2.418, align 8
  %1623 = load ptr, ptr @fun_Core_iterator_toList_2.418, align 8
  %1624 = call ptr @Core_iterator_wrapSafe(ptr %1618, ptr %1623)
  %1625 = load ptr, ptr @148, align 8
  %1626 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1627 = call ptr @Core_iterator_foldLeft(ptr %1624, ptr %1625, ptr %1626)
  %1628 = alloca ptr, i64 5, align 8
  %1629 = load ptr, ptr @num_4, align 8
  %1630 = getelementptr ptr, ptr %1628, i64 0
  store ptr %1629, ptr %1630, align 8
  %1631 = load ptr, ptr @num_5, align 8
  %1632 = getelementptr ptr, ptr %1628, i64 1
  store ptr %1631, ptr %1632, align 8
  %1633 = load ptr, ptr @num_6, align 8
  %1634 = getelementptr ptr, ptr %1628, i64 2
  store ptr %1633, ptr %1634, align 8
  %1635 = load ptr, ptr @num_7, align 8
  %1636 = getelementptr ptr, ptr %1628, i64 3
  store ptr %1635, ptr %1636, align 8
  %1637 = getelementptr ptr, ptr %1628, i64 4
  store ptr null, ptr %1637, align 8
  %1638 = call ptr @make_candy_list(ptr %1628)
  store ptr %1638, ptr @171, align 8
  %1639 = alloca ptr, i64 5, align 8
  %1640 = load ptr, ptr @num_7, align 8
  %1641 = getelementptr ptr, ptr %1639, i64 0
  store ptr %1640, ptr %1641, align 8
  %1642 = load ptr, ptr @num_8, align 8
  %1643 = getelementptr ptr, ptr %1639, i64 1
  store ptr %1642, ptr %1643, align 8
  %1644 = load ptr, ptr @num_9, align 8
  %1645 = getelementptr ptr, ptr %1639, i64 2
  store ptr %1644, ptr %1645, align 8
  %1646 = load ptr, ptr @num_10, align 8
  %1647 = getelementptr ptr, ptr %1639, i64 3
  store ptr %1646, ptr %1647, align 8
  %1648 = getelementptr ptr, ptr %1639, i64 4
  store ptr null, ptr %1648, align 8
  %1649 = call ptr @make_candy_list(ptr %1639)
  store ptr %1649, ptr @172, align 8
  %1650 = alloca ptr, i64 4, align 8
  %1651 = load ptr, ptr @169, align 8
  %1652 = getelementptr ptr, ptr %1650, i64 0
  store ptr %1651, ptr %1652, align 8
  %1653 = load ptr, ptr @171, align 8
  %1654 = getelementptr ptr, ptr %1650, i64 1
  store ptr %1653, ptr %1654, align 8
  %1655 = load ptr, ptr @172, align 8
  %1656 = getelementptr ptr, ptr %1650, i64 2
  store ptr %1655, ptr %1656, align 8
  %1657 = getelementptr ptr, ptr %1650, i64 3
  store ptr null, ptr %1657, align 8
  %1658 = call ptr @make_candy_list(ptr %1650)
  store ptr %1658, ptr @173, align 8
  %1659 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:320\00", ptr %1659, align 1
  %1660 = call ptr @make_candy_text(ptr %1659)
  store ptr %1660, ptr @"Core:iterator:320", align 8
  %1661 = load ptr, ptr @173, align 8
  %1662 = call ptr @Core_check_checkEquals(ptr %1627, ptr %1661)
  %1663 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:325\00", ptr %1663, align 1
  %1664 = call ptr @make_candy_text(ptr %1663)
  store ptr %1664, ptr @"Core:iterator:325", align 8
  %1665 = load ptr, ptr @num_3, align 8
  %1666 = call ptr @Core_iterator_chunked(ptr %1268, ptr %1665)
  %1667 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:327\00", ptr %1667, align 1
  %1668 = call ptr @make_candy_text(ptr %1667)
  store ptr %1668, ptr @"Core:iterator:327", align 8
  %1669 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1670 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.419, ptr %1669, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1670, ptr @fun_Core_iterator_toList_2.420, align 8
  %1671 = load ptr, ptr @fun_Core_iterator_toList_2.420, align 8
  %1672 = call ptr @Core_iterator_wrapSafe(ptr %1666, ptr %1671)
  %1673 = load ptr, ptr @148, align 8
  %1674 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1675 = call ptr @Core_iterator_foldLeft(ptr %1672, ptr %1673, ptr %1674)
  %1676 = alloca ptr, i64 4, align 8
  %1677 = load ptr, ptr @num_4, align 8
  %1678 = getelementptr ptr, ptr %1676, i64 0
  store ptr %1677, ptr %1678, align 8
  %1679 = load ptr, ptr @num_5, align 8
  %1680 = getelementptr ptr, ptr %1676, i64 1
  store ptr %1679, ptr %1680, align 8
  %1681 = load ptr, ptr @num_6, align 8
  %1682 = getelementptr ptr, ptr %1676, i64 2
  store ptr %1681, ptr %1682, align 8
  %1683 = getelementptr ptr, ptr %1676, i64 3
  store ptr null, ptr %1683, align 8
  %1684 = call ptr @make_candy_list(ptr %1676)
  store ptr %1684, ptr @174, align 8
  %1685 = alloca ptr, i64 4, align 8
  %1686 = load ptr, ptr @num_7, align 8
  %1687 = getelementptr ptr, ptr %1685, i64 0
  store ptr %1686, ptr %1687, align 8
  %1688 = load ptr, ptr @num_8, align 8
  %1689 = getelementptr ptr, ptr %1685, i64 1
  store ptr %1688, ptr %1689, align 8
  %1690 = load ptr, ptr @num_9, align 8
  %1691 = getelementptr ptr, ptr %1685, i64 2
  store ptr %1690, ptr %1691, align 8
  %1692 = getelementptr ptr, ptr %1685, i64 3
  store ptr null, ptr %1692, align 8
  %1693 = call ptr @make_candy_list(ptr %1685)
  store ptr %1693, ptr @175, align 8
  %1694 = alloca ptr, i64 2, align 8
  %1695 = load ptr, ptr @num_10, align 8
  %1696 = getelementptr ptr, ptr %1694, i64 0
  store ptr %1695, ptr %1696, align 8
  %1697 = getelementptr ptr, ptr %1694, i64 1
  store ptr null, ptr %1697, align 8
  %1698 = call ptr @make_candy_list(ptr %1694)
  store ptr %1698, ptr @176, align 8
  %1699 = alloca ptr, i64 5, align 8
  %1700 = load ptr, ptr @149, align 8
  %1701 = getelementptr ptr, ptr %1699, i64 0
  store ptr %1700, ptr %1701, align 8
  %1702 = load ptr, ptr @174, align 8
  %1703 = getelementptr ptr, ptr %1699, i64 1
  store ptr %1702, ptr %1703, align 8
  %1704 = load ptr, ptr @175, align 8
  %1705 = getelementptr ptr, ptr %1699, i64 2
  store ptr %1704, ptr %1705, align 8
  %1706 = load ptr, ptr @176, align 8
  %1707 = getelementptr ptr, ptr %1699, i64 3
  store ptr %1706, ptr %1707, align 8
  %1708 = getelementptr ptr, ptr %1699, i64 4
  store ptr null, ptr %1708, align 8
  %1709 = call ptr @make_candy_list(ptr %1699)
  store ptr %1709, ptr @177, align 8
  %1710 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:343\00", ptr %1710, align 1
  %1711 = call ptr @make_candy_text(ptr %1710)
  store ptr %1711, ptr @"Core:iterator:343", align 8
  %1712 = load ptr, ptr @177, align 8
  %1713 = call ptr @Core_check_checkEquals(ptr %1675, ptr %1712)
  %1714 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:12\00", ptr %1714, align 1
  %1715 = call ptr @make_candy_text(ptr %1714)
  store ptr %1715, ptr @"Core:result:flatMap:12", align 8
  %1716 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:14\00", ptr %1716, align 1
  %1717 = call ptr @make_candy_text(ptr %1716)
  store ptr %1717, ptr @"Core:result:flatMap:14", align 8
  %1718 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:flatMap:17:2\00", ptr %1718, align 1
  %1719 = call ptr @make_candy_text(ptr %1718)
  store ptr %1719, ptr @"Core:result:flatMap:17:2", align 8
  %1720 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:19\00", ptr %1720, align 1
  %1721 = call ptr @make_candy_text(ptr %1720)
  store ptr %1721, ptr @"Core:result:flatMap:19", align 8
  %1722 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:2\00", ptr %1722, align 1
  %1723 = call ptr @make_candy_text(ptr %1722)
  store ptr %1723, ptr @"Core:result:flatMap:2", align 8
  %1724 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:4\00", ptr %1724, align 1
  %1725 = call ptr @make_candy_text(ptr %1724)
  store ptr %1725, ptr @"Core:result:flatMap:4", align 8
  %1726 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:getValue:12\00", ptr %1726, align 1
  %1727 = call ptr @make_candy_text(ptr %1726)
  store ptr %1727, ptr @"Core:result:getValue:12", align 8
  %1728 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:getValue:2\00", ptr %1728, align 1
  %1729 = call ptr @make_candy_text(ptr %1728)
  store ptr %1729, ptr @"Core:result:getValue:2", align 8
  %1730 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:getValue:4\00", ptr %1730, align 1
  %1731 = call ptr @make_candy_text(ptr %1730)
  store ptr %1731, ptr @"Core:result:getValue:4", align 8
  %1732 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:12\00", ptr %1732, align 1
  %1733 = call ptr @make_candy_text(ptr %1732)
  store ptr %1733, ptr @"Core:result:map:12", align 8
  %1734 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:14\00", ptr %1734, align 1
  %1735 = call ptr @make_candy_text(ptr %1734)
  store ptr %1735, ptr @"Core:result:map:14", align 8
  %1736 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:map:17:3\00", ptr %1736, align 1
  %1737 = call ptr @make_candy_text(ptr %1736)
  store ptr %1737, ptr @"Core:result:map:17:3", align 8
  %1738 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:18\00", ptr %1738, align 1
  %1739 = call ptr @make_candy_text(ptr %1738)
  store ptr %1739, ptr @"Core:result:map:18", align 8
  %1740 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:2\00", ptr %1740, align 1
  %1741 = call ptr @make_candy_text(ptr %1740)
  store ptr %1741, ptr @"Core:result:map:2", align 8
  %1742 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:4\00", ptr %1742, align 1
  %1743 = call ptr @make_candy_text(ptr %1742)
  store ptr %1743, ptr @"Core:result:map:4", align 8
  %1744 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:12\00", ptr %1744, align 1
  %1745 = call ptr @make_candy_text(ptr %1744)
  store ptr %1745, ptr @"Core:result:mapOr:12", align 8
  %1746 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:14\00", ptr %1746, align 1
  %1747 = call ptr @make_candy_text(ptr %1746)
  store ptr %1747, ptr @"Core:result:mapOr:14", align 8
  %1748 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:19\00", ptr %1748, align 1
  %1749 = call ptr @make_candy_text(ptr %1748)
  store ptr %1749, ptr @"Core:result:mapOr:19", align 8
  %1750 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:2\00", ptr %1750, align 1
  %1751 = call ptr @make_candy_text(ptr %1750)
  store ptr %1751, ptr @"Core:result:mapOr:2", align 8
  %1752 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:4\00", ptr %1752, align 1
  %1753 = call ptr @make_candy_text(ptr %1752)
  store ptr %1753, ptr @"Core:result:mapOr:4", align 8
  %1754 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected 1 item, got \00", ptr %1754, align 1
  %1755 = call ptr @make_candy_text(ptr %1754)
  store ptr %1755, ptr @"text_Expected 1 item, got ", align 8
  %1756 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected a List, got `\00", ptr %1756, align 1
  %1757 = call ptr @make_candy_text(ptr %1756)
  store ptr %1757, ptr @"text_Expected a List, got `", align 8
  %1758 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1759 = call ptr @make_candy_function(ptr @Core_result_getValue, ptr %1758, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1759, ptr @fun_Core_result_getValue, align 8
  %1760 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1761 = call ptr @make_candy_function(ptr @Core_result_flatMap, ptr %1760, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1761, ptr @fun_Core_result_flatMap, align 8
  %1762 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1763 = call ptr @make_candy_function(ptr @Core_result_map, ptr %1762, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1763, ptr @fun_Core_result_map, align 8
  %1764 = alloca i8, i64 35, align 1
  store [35 x i8] c"Examples:fibonacci:recursive:0:0:3\00", ptr %1764, align 1
  %1765 = call ptr @make_candy_text(ptr %1764)
  store ptr %1765, ptr @"Examples:fibonacci:recursive:0:0:3", align 8
  %1766 = alloca i8, i64 33, align 1
  store [33 x i8] c"Examples:fibonacci:recursive:0:5\00", ptr %1766, align 1
  %1767 = call ptr @make_candy_text(ptr %1766)
  store ptr %1767, ptr @"Examples:fibonacci:recursive:0:5", align 8
  %1768 = alloca i8, i64 31, align 1
  store [31 x i8] c"Examples:fibonacci:recursive:5\00", ptr %1768, align 1
  %1769 = call ptr @make_candy_text(ptr %1768)
  store ptr %1769, ptr @"Examples:fibonacci:recursive:5", align 8
  %1770 = alloca i8, i64 31, align 1
  store [31 x i8] c"Examples:fibonacci:compareTo:8\00", ptr %1770, align 1
  %1771 = call ptr @make_candy_text(ptr %1770)
  store ptr %1771, ptr @"Examples:fibonacci:compareTo:8", align 8
  %1772 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1773 = call ptr @make_candy_function(ptr @Examples_fibonacci_isLessThan, ptr %1772, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1773, ptr @fun_Examples_fibonacci_isLessThan, align 8
  %1774 = alloca i8, i64 33, align 1
  store [33 x i8] c"Examples:fibonacci:fibonacci:2:9\00", ptr %1774, align 1
  %1775 = call ptr @make_candy_text(ptr %1774)
  store ptr %1775, ptr @"Examples:fibonacci:fibonacci:2:9", align 8
  %1776 = alloca i8, i64 36, align 1
  store [36 x i8] c"Examples:fibonacci:fibonacci:2:11:9\00", ptr %1776, align 1
  %1777 = call ptr @make_candy_text(ptr %1776)
  store ptr %1777, ptr @"Examples:fibonacci:fibonacci:2:11:9", align 8
  %1778 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:11:10\00", ptr %1778, align 1
  %1779 = call ptr @make_candy_text(ptr %1778)
  store ptr %1779, ptr @"Examples:fibonacci:fibonacci:2:11:10", align 8
  %1780 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:11:26\00", ptr %1780, align 1
  %1781 = call ptr @make_candy_text(ptr %1780)
  store ptr %1781, ptr @"Examples:fibonacci:fibonacci:2:11:26", align 8
  %1782 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:11:27\00", ptr %1782, align 1
  %1783 = call ptr @make_candy_text(ptr %1782)
  store ptr %1783, ptr @"Examples:fibonacci:fibonacci:2:11:27", align 8
  %1784 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:11:28\00", ptr %1784, align 1
  %1785 = call ptr @make_candy_text(ptr %1784)
  store ptr %1785, ptr @"Examples:fibonacci:fibonacci:2:11:28", align 8
  %1786 = alloca i8, i64 34, align 1
  store [34 x i8] c"Examples:fibonacci:fibonacci:2:12\00", ptr %1786, align 1
  %1787 = call ptr @make_candy_text(ptr %1786)
  store ptr %1787, ptr @"Examples:fibonacci:fibonacci:2:12", align 8
  %1788 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1789 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2, ptr %1788, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1789, ptr @fun_Examples_fibonacci_fibonacci_2, align 8
  %1790 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1791 = call ptr @make_candy_function(ptr @Examples_fibonacci_recursive_0, ptr %1790, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1791, ptr @fun_Examples_fibonacci_recursive_0, align 8
  %1792 = alloca i8, i64 10, align 1
  store [10 x i8] c"Arguments\00", ptr %1792, align 1
  %1793 = call ptr @make_candy_tag(ptr %1792, ptr null)
  store ptr %1793, ptr @tag_Arguments, align 8
  %1794 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:fibonacci:23:5\00", ptr %1794, align 1
  %1795 = call ptr @make_candy_text(ptr %1794)
  store ptr %1795, ptr @"Examples:fibonacci:23:5", align 8
  %1796 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:fibonacci:23:6\00", ptr %1796, align 1
  %1797 = call ptr @make_candy_text(ptr %1796)
  store ptr %1797, ptr @"Examples:fibonacci:23:6", align 8
  %1798 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:fibonacci:23:6:n\00", ptr %1798, align 1
  %1799 = call ptr @make_candy_text(ptr %1798)
  store ptr %1799, ptr @"Examples:fibonacci:23:6:n", align 8
  %1800 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:fibonacci:23:6:7\00", ptr %1800, align 1
  %1801 = call ptr @make_candy_text(ptr %1800)
  store ptr %1801, ptr @"Examples:fibonacci:23:6:7", align 8
  %1802 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1803 = call ptr @make_candy_function(ptr @Examples_fibonacci_23_6_14, ptr %1802, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1803, ptr @fun_Examples_fibonacci_23_6_14, align 8
  %1804 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:23:6:15\00", ptr %1804, align 1
  %1805 = call ptr @make_candy_text(ptr %1804)
  store ptr %1805, ptr @"Examples:fibonacci:23:6:15", align 8
  %1806 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:23:6:22\00", ptr %1806, align 1
  %1807 = call ptr @make_candy_text(ptr %1806)
  store ptr %1807, ptr @"Examples:fibonacci:23:6:22", align 8
  %1808 = alloca i8, i64 54, align 1
  store [54 x i8] c"Usage: `cargo run -- run fibonacci.candy -- <number>`\00", ptr %1808, align 1
  %1809 = call ptr @make_candy_text(ptr %1808)
  store ptr %1809, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  %1810 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %1810, align 1
  %1811 = call ptr @make_candy_tag(ptr %1810, ptr null)
  store ptr %1811, ptr @tag_Stdout, align 8
  %1812 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:fibonacci:23:12\00", ptr %1812, align 1
  %1813 = call ptr @make_candy_text(ptr %1812)
  store ptr %1813, ptr @"Examples:fibonacci:23:12", align 8
  %1814 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:fibonacci:23:13\00", ptr %1814, align 1
  %1815 = call ptr @make_candy_text(ptr %1814)
  store ptr %1815, ptr @"Examples:fibonacci:23:13", align 8
  %1816 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1817 = call ptr @make_candy_function(ptr @Examples_fibonacci_23, ptr %1816, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1817, ptr @fun_Examples_fibonacci_23, align 8
  %1818 = call ptr @run_candy_main(ptr @fun_Examples_fibonacci_23, ptr @candy_environment)
  call void @print_candy_value(ptr %1818)
  %1819 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %1819)
  %1820 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %1820)
  %1821 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %1821)
  %1822 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %1822)
  %1823 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %1823)
  %1824 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %1824)
  %1825 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %1825)
  %1826 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %1826)
  %1827 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %1827)
  %1828 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %1828)
  %1829 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %1829)
  %1830 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %1830)
  %1831 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %1831)
  %1832 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %1832)
  %1833 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %1833)
  %1834 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %1834)
  %1835 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %1835)
  %1836 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %1836)
  %1837 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %1837)
  %1838 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %1838)
  %1839 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %1839)
  %1840 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %1840)
  %1841 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %1841)
  %1842 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %1842)
  %1843 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %1843)
  %1844 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %1844)
  %1845 = load ptr, ptr @"Builtins::intParse:11", align 8
  call void @free_candy_value(ptr %1845)
  %1846 = load ptr, ptr @"Builtins::intParse:5", align 8
  call void @free_candy_value(ptr %1846)
  %1847 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %1847)
  %1848 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %1848)
  %1849 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %1849)
  %1850 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %1850)
  %1851 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %1851)
  %1852 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %1852)
  %1853 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %1853)
  %1854 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %1854)
  %1855 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %1855)
  %1856 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %1856)
  %1857 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %1857)
  %1858 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %1858)
  %1859 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %1859)
  %1860 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %1860)
  %1861 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %1861)
  %1862 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %1862)
  %1863 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %1863)
  %1864 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %1864)
  %1865 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %1865)
  %1866 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %1866)
  %1867 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %1867)
  %1868 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %1868)
  %1869 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %1869)
  %1870 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %1870)
  %1871 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %1871)
  %1872 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %1872)
  %1873 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %1873)
  %1874 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %1874)
  %1875 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %1875)
  %1876 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %1876)
  %1877 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %1877)
  %1878 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %1878)
  %1879 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %1879)
  %1880 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %1880)
  %1881 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %1881)
  %1882 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %1882)
  %1883 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %1883)
  %1884 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %1884)
  %1885 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %1885)
  %1886 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %1886)
  %1887 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %1887)
  %1888 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %1888)
  %1889 = load ptr, ptr @"Core:bool:and:13", align 8
  call void @free_candy_value(ptr %1889)
  %1890 = load ptr, ptr @"Core:bool:and:2", align 8
  call void @free_candy_value(ptr %1890)
  %1891 = load ptr, ptr @"Core:bool:and:4", align 8
  call void @free_candy_value(ptr %1891)
  %1892 = load ptr, ptr @"Core:bool:and:7", align 8
  call void @free_candy_value(ptr %1892)
  %1893 = load ptr, ptr @"Core:bool:and:9", align 8
  call void @free_candy_value(ptr %1893)
  %1894 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %1894)
  %1895 = load ptr, ptr @"Core:bool:lazyAnd:12", align 8
  call void @free_candy_value(ptr %1895)
  %1896 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %1896)
  %1897 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %1897)
  %1898 = load ptr, ptr @"Core:bool:lazyAnd:16:11", align 8
  call void @free_candy_value(ptr %1898)
  %1899 = load ptr, ptr @"Core:bool:lazyAnd:16:19", align 8
  call void @free_candy_value(ptr %1899)
  %1900 = load ptr, ptr @"Core:bool:lazyAnd:16:7", align 8
  call void @free_candy_value(ptr %1900)
  %1901 = load ptr, ptr @"Core:bool:lazyAnd:2", align 8
  call void @free_candy_value(ptr %1901)
  %1902 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %1902)
  %1903 = load ptr, ptr @"Core:bool:lazyOr:12", align 8
  call void @free_candy_value(ptr %1903)
  %1904 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %1904)
  %1905 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %1905)
  %1906 = load ptr, ptr @"Core:bool:lazyOr:16:12", align 8
  call void @free_candy_value(ptr %1906)
  %1907 = load ptr, ptr @"Core:bool:lazyOr:16:20", align 8
  call void @free_candy_value(ptr %1907)
  %1908 = load ptr, ptr @"Core:bool:lazyOr:16:8", align 8
  call void @free_candy_value(ptr %1908)
  %1909 = load ptr, ptr @"Core:bool:lazyOr:2", align 8
  call void @free_candy_value(ptr %1909)
  %1910 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %1910)
  %1911 = load ptr, ptr @"Core:bool:not:2", align 8
  call void @free_candy_value(ptr %1911)
  %1912 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %1912)
  %1913 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %1913)
  %1914 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %1914)
  %1915 = load ptr, ptr @"Core:bool:or:2", align 8
  call void @free_candy_value(ptr %1915)
  %1916 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %1916)
  %1917 = load ptr, ptr @"Core:bool:or:7", align 8
  call void @free_candy_value(ptr %1917)
  %1918 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %1918)
  %1919 = load ptr, ptr @"Core:check:checkEquals:12", align 8
  call void @free_candy_value(ptr %1919)
  %1920 = load ptr, ptr @"Core:check:checkEquals:13", align 8
  call void @free_candy_value(ptr %1920)
  %1921 = load ptr, ptr @"Core:check:checkEquals:15:0", align 8
  call void @free_candy_value(ptr %1921)
  %1922 = load ptr, ptr @"Core:check:checkEquals:16", align 8
  call void @free_candy_value(ptr %1922)
  %1923 = load ptr, ptr @"Core:check:checkEquals:19", align 8
  call void @free_candy_value(ptr %1923)
  %1924 = load ptr, ptr @"Core:check:checkEquals:20", align 8
  call void @free_candy_value(ptr %1924)
  %1925 = load ptr, ptr @"Core:check:checkEquals:22:0", align 8
  call void @free_candy_value(ptr %1925)
  %1926 = load ptr, ptr @"Core:check:checkEquals:23", align 8
  call void @free_candy_value(ptr %1926)
  %1927 = load ptr, ptr @"Core:check:checkEquals:25", align 8
  call void @free_candy_value(ptr %1927)
  %1928 = load ptr, ptr @"Core:check:checkEquals:26", align 8
  call void @free_candy_value(ptr %1928)
  %1929 = load ptr, ptr @"Core:check:checkEquals:27", align 8
  call void @free_candy_value(ptr %1929)
  %1930 = load ptr, ptr @"Core:check:checkEquals:28", align 8
  call void @free_candy_value(ptr %1930)
  %1931 = load ptr, ptr @"Core:check:checkEquals:29", align 8
  call void @free_candy_value(ptr %1931)
  %1932 = load ptr, ptr @"Core:controlFlow:if:17", align 8
  call void @free_candy_value(ptr %1932)
  %1933 = load ptr, ptr @"Core:controlFlow:if:19", align 8
  call void @free_candy_value(ptr %1933)
  %1934 = load ptr, ptr @"Core:controlFlow:if:24", align 8
  call void @free_candy_value(ptr %1934)
  %1935 = load ptr, ptr @"Core:controlFlow:if:7", align 8
  call void @free_candy_value(ptr %1935)
  %1936 = load ptr, ptr @"Core:controlFlow:if:9", align 8
  call void @free_candy_value(ptr %1936)
  %1937 = load ptr, ptr @"Core:controlFlow:recursive:15", align 8
  call void @free_candy_value(ptr %1937)
  %1938 = load ptr, ptr @"Core:controlFlow:recursive:16:0:3", align 8
  call void @free_candy_value(ptr %1938)
  %1939 = load ptr, ptr @"Core:controlFlow:recursive:16:5", align 8
  call void @free_candy_value(ptr %1939)
  %1940 = load ptr, ptr @"Core:controlFlow:recursive:21", align 8
  call void @free_candy_value(ptr %1940)
  %1941 = load ptr, ptr @"Core:controlFlow:recursive:7", align 8
  call void @free_candy_value(ptr %1941)
  %1942 = load ptr, ptr @"Core:fixedDecimal:fromInt:13", align 8
  call void @free_candy_value(ptr %1942)
  %1943 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:14", align 8
  call void @free_candy_value(ptr %1943)
  %1944 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:9", align 8
  call void @free_candy_value(ptr %1944)
  %1945 = load ptr, ptr @"Core:fixedDecimal:isScale:14:7", align 8
  call void @free_candy_value(ptr %1945)
  %1946 = load ptr, ptr @"Core:fixedDecimal:isScale:15", align 8
  call void @free_candy_value(ptr %1946)
  %1947 = load ptr, ptr @"Core:function:is0:11", align 8
  call void @free_candy_value(ptr %1947)
  %1948 = load ptr, ptr @"Core:function:is0:9:3", align 8
  call void @free_candy_value(ptr %1948)
  %1949 = load ptr, ptr @"Core:function:is2:11", align 8
  call void @free_candy_value(ptr %1949)
  %1950 = load ptr, ptr @"Core:function:is2:9:3", align 8
  call void @free_candy_value(ptr %1950)
  %1951 = load ptr, ptr @"Core:function:run:12", align 8
  call void @free_candy_value(ptr %1951)
  %1952 = load ptr, ptr @"Core:function:run:2", align 8
  call void @free_candy_value(ptr %1952)
  %1953 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %1953)
  %1954 = load ptr, ptr @"Core:int:compareTo:18", align 8
  call void @free_candy_value(ptr %1954)
  %1955 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %1955)
  %1956 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %1956)
  %1957 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %1957)
  %1958 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %1958)
  %1959 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %1959)
  %1960 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %1960)
  %1961 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %1961)
  %1962 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %1962)
  %1963 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %1963)
  %1964 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %1964)
  %1965 = load ptr, ptr @"Core:int:isNonNegative:14", align 8
  call void @free_candy_value(ptr %1965)
  %1966 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %1966)
  %1967 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %1967)
  %1968 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %1968)
  %1969 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %1969)
  %1970 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %1970)
  %1971 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %1971)
  %1972 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %1972)
  %1973 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %1973)
  %1974 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %1974)
  %1975 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %1975)
  %1976 = load ptr, ptr @fun_candy_builtin_int_parse, align 8
  call void @free_candy_value(ptr %1976)
  %1977 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %1977)
  %1978 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %1978)
  %1979 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %1979)
  %1980 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %1980)
  %1981 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %1981)
  %1982 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %1982)
  %1983 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %1983)
  %1984 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %1984)
  %1985 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %1985)
  %1986 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %1986)
  %1987 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %1987)
  %1988 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %1988)
  %1989 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %1989)
  %1990 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %1990)
  %1991 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %1991)
  %1992 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %1992)
  %1993 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %1993)
  %1994 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %1994)
  %1995 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %1995)
  %1996 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %1996)
  %1997 = load ptr, ptr @tag_MinorUnits, align 8
  call void @free_candy_value(ptr %1997)
  %1998 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %1998)
  %1999 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %1999)
  %2000 = load ptr, ptr @tag_Scale, align 8
  call void @free_candy_value(ptr %2000)
  %2001 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %2001)
  %2002 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %2002)
  %2003 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %2003)
  %2004 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %2004)
  %2005 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %2005)
  %2006 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %2006)
  %2007 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %2007)
  %2008 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %2008)
  %2009 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %2009)
  %2010 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %2010)
  %2011 = load ptr, ptr @num_10, align 8
  call void @free_candy_value(ptr %2011)
  %2012 = load ptr, ptr @"text_ to be ", align 8
  call void @free_candy_value(ptr %2012)
  %2013 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %2013)
  %2014 = load ptr, ptr @"text_A check failed: Expected ", align 8
  call void @free_candy_value(ptr %2014)
  %2015 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  call void @free_candy_value(ptr %2015)
  %2016 = load ptr, ptr @"text_Expected `False`, got `", align 8
  call void @free_candy_value(ptr %2016)
  %2017 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  call void @free_candy_value(ptr %2017)
  %2018 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  call void @free_candy_value(ptr %2018)
  %2019 = load ptr, ptr @"text_Expected `True`, got `", align 8
  call void @free_candy_value(ptr %2019)
  %2020 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %2020)
  %2021 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %2021)
  %2022 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %2022)
  %2023 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %2023)
  %2024 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %2024)
  %2025 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %2025)
  %2026 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %2026)
  %2027 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %2027)
  %2028 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2028)
  %2029 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2029)
  %2030 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2030)
  %2031 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2031)
  %2032 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %2032)
  %2033 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %2033)
  %2034 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %2034)
  %2035 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2035)
  %2036 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2036)
  %2037 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2037)
  %2038 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2038)
  %2039 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2039)
  %2040 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %2040)
  %2041 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  call void @free_candy_value(ptr %2041)
  %2042 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %2042)
  %2043 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %2043)
  %2044 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %2044)
  %2045 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2045)
  %2046 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2046)
  %2047 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  call void @free_candy_value(ptr %2047)
  %2048 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %2048)
  %2049 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %2049)
  %2050 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %2050)
  %2051 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %2051)
  %2052 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %2052)
  %2053 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %2053)
  %2054 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  call void @free_candy_value(ptr %2054)
  %2055 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %2055)
  %2056 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2056)
  %2057 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %2057)
  %2058 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %2058)
  %2059 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %2059)
  %2060 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %2060)
  %2061 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2061)
  %2062 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2062)
  %2063 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2063)
  %2064 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %2064)
  %2065 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %2065)
  %2066 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %2066)
  %2067 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %2067)
  %2068 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %2068)
  %2069 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %2069)
  %2070 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %2070)
  %2071 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %2071)
  %2072 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  call void @free_candy_value(ptr %2072)
  %2073 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %2073)
  %2074 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %2074)
  %2075 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %2075)
  %2076 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %2076)
  %2077 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %2077)
  %2078 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %2078)
  %2079 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.2, align 8
  call void @free_candy_value(ptr %2079)
  %2080 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %2080)
  %2081 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2081)
  %2082 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.4, align 8
  call void @free_candy_value(ptr %2082)
  %2083 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %2083)
  %2084 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2084)
  %2085 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %2085)
  %2086 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %2086)
  %2087 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %2087)
  %2088 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %2088)
  %2089 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %2089)
  %2090 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.6, align 8
  call void @free_candy_value(ptr %2090)
  %2091 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %2091)
  %2092 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2092)
  %2093 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.8, align 8
  call void @free_candy_value(ptr %2093)
  %2094 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %2094)
  %2095 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2095)
  %2096 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %2096)
  %2097 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %2097)
  %2098 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %2098)
  %2099 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2099)
  %2100 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2100)
  %2101 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.10, align 8
  call void @free_candy_value(ptr %2101)
  %2102 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %2102)
  %2103 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2103)
  %2104 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %2104)
  %2105 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %2105)
  %2106 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_201, Core_toDebugText_toDebugText", align 8
  call void @free_candy_value(ptr %2106)
  %2107 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %2107)
  %2108 = load ptr, ptr @fun_Core_function_is0_9, align 8
  call void @free_candy_value(ptr %2108)
  %2109 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %2109)
  %2110 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %2110)
  %2111 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %2111)
  %2112 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %2112)
  %2113 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2113)
  %2114 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2114)
  %2115 = load ptr, ptr @fun_Core_bool_is_1_equals_else.12, align 8
  call void @free_candy_value(ptr %2115)
  %2116 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %2116)
  %2117 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2117)
  %2118 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %2118)
  %2119 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %2119)
  %2120 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %2120)
  %2121 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2121)
  %2122 = load ptr, ptr @fun_Core_bool_not_6_equals_else.14, align 8
  call void @free_candy_value(ptr %2122)
  %2123 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %2123)
  %2124 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2124)
  %2125 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %2125)
  %2126 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else, align 8
  call void @free_candy_value(ptr %2126)
  %2127 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %2127)
  %2128 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_matched, align 8
  call void @free_candy_value(ptr %2128)
  %2129 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2129)
  %2130 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else.16, align 8
  call void @free_candy_value(ptr %2130)
  %2131 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %2131)
  %2132 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2132)
  %2133 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %2133)
  %2134 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else, align 8
  call void @free_candy_value(ptr %2134)
  %2135 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %2135)
  %2136 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2136)
  %2137 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else.18, align 8
  call void @free_candy_value(ptr %2137)
  %2138 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %2138)
  %2139 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_matched, align 8
  call void @free_candy_value(ptr %2139)
  %2140 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2140)
  %2141 = load ptr, ptr @fun_Core_check_checkEquals, align 8
  call void @free_candy_value(ptr %2141)
  %2142 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  call void @free_candy_value(ptr %2142)
  %2143 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  call void @free_candy_value(ptr %2143)
  %2144 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  call void @free_candy_value(ptr %2144)
  %2145 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  call void @free_candy_value(ptr %2145)
  %2146 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %2146)
  %2147 = load ptr, ptr @fun_Core_function_is2_9, align 8
  call void @free_candy_value(ptr %2147)
  %2148 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %2148)
  %2149 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %2149)
  %2150 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %2150)
  %2151 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %2151)
  %2152 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %2152)
  %2153 = load ptr, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  call void @free_candy_value(ptr %2153)
  %2154 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14, align 8
  call void @free_candy_value(ptr %2154)
  %2155 = load ptr, ptr @tag_FixedDecimal, align 8
  call void @free_candy_value(ptr %2155)
  %2156 = load ptr, ptr @"Core:function:is1:11", align 8
  call void @free_candy_value(ptr %2156)
  %2157 = load ptr, ptr @"Core:function:is1:9:3", align 8
  call void @free_candy_value(ptr %2157)
  %2158 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %2158)
  %2159 = load ptr, ptr @fun_Core_function_is1_9, align 8
  call void @free_candy_value(ptr %2159)
  %2160 = load ptr, ptr @"Core:int:fitsInRustU32:15", align 8
  call void @free_candy_value(ptr %2160)
  %2161 = load ptr, ptr @"Core:int:fitsInRustU32:4", align 8
  call void @free_candy_value(ptr %2161)
  %2162 = load ptr, ptr @"Core:int:fitsInRustU32:7", align 8
  call void @free_candy_value(ptr %2162)
  %2163 = load ptr, ptr @"Core:int:fitsInRustU32:9", align 8
  call void @free_candy_value(ptr %2163)
  %2164 = load ptr, ptr @"Core:int:isOdd:4", align 8
  call void @free_candy_value(ptr %2164)
  %2165 = load ptr, ptr @"Core:int:isOdd:8", align 8
  call void @free_candy_value(ptr %2165)
  %2166 = load ptr, ptr @"Core:int:isPositive:4", align 8
  call void @free_candy_value(ptr %2166)
  %2167 = load ptr, ptr @"Core:int:isPositive:8", align 8
  call void @free_candy_value(ptr %2167)
  %2168 = load ptr, ptr @num_4294967295, align 8
  call void @free_candy_value(ptr %2168)
  %2169 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  call void @free_candy_value(ptr %2169)
  %2170 = load ptr, ptr @fun_Core_int_isOdd, align 8
  call void @free_candy_value(ptr %2170)
  %2171 = load ptr, ptr @"Core:iterator:111", align 8
  call void @free_candy_value(ptr %2171)
  %2172 = load ptr, ptr @"Core:iterator:all:13", align 8
  call void @free_candy_value(ptr %2172)
  %2173 = load ptr, ptr @"Core:iterator:all:16:11", align 8
  call void @free_candy_value(ptr %2173)
  %2174 = load ptr, ptr @"Core:iterator:all:16:13", align 8
  call void @free_candy_value(ptr %2174)
  %2175 = load ptr, ptr @"Core:iterator:all:16:2", align 8
  call void @free_candy_value(ptr %2175)
  %2176 = load ptr, ptr @"Core:iterator:all:16:22", align 8
  call void @free_candy_value(ptr %2176)
  %2177 = load ptr, ptr @"Core:iterator:all:17", align 8
  call void @free_candy_value(ptr %2177)
  %2178 = load ptr, ptr @"Core:iterator:all:7", align 8
  call void @free_candy_value(ptr %2178)
  %2179 = load ptr, ptr @"Core:iterator:all:9", align 8
  call void @free_candy_value(ptr %2179)
  %2180 = load ptr, ptr @"Core:iterator:any:13", align 8
  call void @free_candy_value(ptr %2180)
  %2181 = load ptr, ptr @"Core:iterator:any:16:11", align 8
  call void @free_candy_value(ptr %2181)
  %2182 = load ptr, ptr @"Core:iterator:any:16:13", align 8
  call void @free_candy_value(ptr %2182)
  %2183 = load ptr, ptr @"Core:iterator:any:16:2", align 8
  call void @free_candy_value(ptr %2183)
  %2184 = load ptr, ptr @"Core:iterator:any:16:22", align 8
  call void @free_candy_value(ptr %2184)
  %2185 = load ptr, ptr @"Core:iterator:any:17", align 8
  call void @free_candy_value(ptr %2185)
  %2186 = load ptr, ptr @"Core:iterator:any:7", align 8
  call void @free_candy_value(ptr %2186)
  %2187 = load ptr, ptr @"Core:iterator:any:9", align 8
  call void @free_candy_value(ptr %2187)
  %2188 = load ptr, ptr @"Core:iterator:chunked:17", align 8
  call void @free_candy_value(ptr %2188)
  %2189 = load ptr, ptr @"Core:iterator:chunked:19", align 8
  call void @free_candy_value(ptr %2189)
  %2190 = load ptr, ptr @"Core:iterator:chunked:23", align 8
  call void @free_candy_value(ptr %2190)
  %2191 = load ptr, ptr @"Core:iterator:chunked:28", align 8
  call void @free_candy_value(ptr %2191)
  %2192 = load ptr, ptr @"Core:iterator:chunked:9", align 8
  call void @free_candy_value(ptr %2192)
  %2193 = load ptr, ptr @"Core:iterator:ensure:13", align 8
  call void @free_candy_value(ptr %2193)
  %2194 = load ptr, ptr @"Core:iterator:ensure:17:2", align 8
  call void @free_candy_value(ptr %2194)
  %2195 = load ptr, ptr @"Core:iterator:ensure:18", align 8
  call void @free_candy_value(ptr %2195)
  %2196 = load ptr, ptr @"Core:iterator:ensure:7", align 8
  call void @free_candy_value(ptr %2196)
  %2197 = load ptr, ptr @"Core:iterator:ensure:9", align 8
  call void @free_candy_value(ptr %2197)
  %2198 = load ptr, ptr @"Core:iterator:foldLeft:12", align 8
  call void @free_candy_value(ptr %2198)
  %2199 = load ptr, ptr @"Core:iterator:foldLeft:14", align 8
  call void @free_candy_value(ptr %2199)
  %2200 = load ptr, ptr @"Core:iterator:foldLeft:21:1", align 8
  call void @free_candy_value(ptr %2200)
  %2201 = load ptr, ptr @"Core:iterator:foldLeft:21:4", align 8
  call void @free_candy_value(ptr %2201)
  %2202 = load ptr, ptr @"Core:iterator:foldLeft:21:5", align 8
  call void @free_candy_value(ptr %2202)
  %2203 = load ptr, ptr @"Core:iterator:foldLeft:21:5:10", align 8
  call void @free_candy_value(ptr %2203)
  %2204 = load ptr, ptr @"Core:iterator:foldLeft:21:5:8", align 8
  call void @free_candy_value(ptr %2204)
  %2205 = load ptr, ptr @"Core:iterator:foldLeft:21:5:item", align 8
  call void @free_candy_value(ptr %2205)
  %2206 = load ptr, ptr @"Core:iterator:foldLeft:21:5:rest", align 8
  call void @free_candy_value(ptr %2206)
  %2207 = load ptr, ptr @"Core:iterator:foldLeft:21:iterator", align 8
  call void @free_candy_value(ptr %2207)
  %2208 = load ptr, ptr @"Core:iterator:foldLeft:21:value", align 8
  call void @free_candy_value(ptr %2208)
  %2209 = load ptr, ptr @"Core:iterator:foldLeft:22", align 8
  call void @free_candy_value(ptr %2209)
  %2210 = load ptr, ptr @"Core:iterator:foldLeft:3", align 8
  call void @free_candy_value(ptr %2210)
  %2211 = load ptr, ptr @"Core:iterator:fromList:18", align 8
  call void @free_candy_value(ptr %2211)
  %2212 = load ptr, ptr @"Core:iterator:fromList:19:8", align 8
  call void @free_candy_value(ptr %2212)
  %2213 = load ptr, ptr @"Core:iterator:fromList:20", align 8
  call void @free_candy_value(ptr %2213)
  %2214 = load ptr, ptr @"Core:iterator:fromList:9", align 8
  call void @free_candy_value(ptr %2214)
  %2215 = load ptr, ptr @"Core:iterator:generate:17", align 8
  call void @free_candy_value(ptr %2215)
  %2216 = load ptr, ptr @"Core:iterator:generate:19", align 8
  call void @free_candy_value(ptr %2216)
  %2217 = load ptr, ptr @"Core:iterator:generate:27", align 8
  call void @free_candy_value(ptr %2217)
  %2218 = load ptr, ptr @"Core:iterator:generate:29", align 8
  call void @free_candy_value(ptr %2218)
  %2219 = load ptr, ptr @"Core:iterator:generate:37", align 8
  call void @free_candy_value(ptr %2219)
  %2220 = load ptr, ptr @"Core:iterator:generate:39", align 8
  call void @free_candy_value(ptr %2220)
  %2221 = load ptr, ptr @"Core:iterator:generate:42:6:14", align 8
  call void @free_candy_value(ptr %2221)
  %2222 = load ptr, ptr @"Core:iterator:generate:42:6:4", align 8
  call void @free_candy_value(ptr %2222)
  %2223 = load ptr, ptr @"Core:iterator:generate:42:7", align 8
  call void @free_candy_value(ptr %2223)
  %2224 = load ptr, ptr @"Core:iterator:generate:43", align 8
  call void @free_candy_value(ptr %2224)
  %2225 = load ptr, ptr @"Core:iterator:generate:9", align 8
  call void @free_candy_value(ptr %2225)
  %2226 = load ptr, ptr @"Core:iterator:generateWithState:12:1:2", align 8
  call void @free_candy_value(ptr %2226)
  %2227 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3", align 8
  call void @free_candy_value(ptr %2227)
  %2228 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:19", align 8
  call void @free_candy_value(ptr %2228)
  %2229 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:20", align 8
  call void @free_candy_value(ptr %2229)
  %2230 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:22:0", align 8
  call void @free_candy_value(ptr %2230)
  %2231 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:23", align 8
  call void @free_candy_value(ptr %2231)
  %2232 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:25", align 8
  call void @free_candy_value(ptr %2232)
  %2233 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:26", align 8
  call void @free_candy_value(ptr %2233)
  %2234 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:27", align 8
  call void @free_candy_value(ptr %2234)
  %2235 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:6", align 8
  call void @free_candy_value(ptr %2235)
  %2236 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:item", align 8
  call void @free_candy_value(ptr %2236)
  %2237 = load ptr, ptr @"Core:iterator:generateWithState:12:1:3:state", align 8
  call void @free_candy_value(ptr %2237)
  %2238 = load ptr, ptr @"Core:iterator:generateWithState:13", align 8
  call void @free_candy_value(ptr %2238)
  %2239 = load ptr, ptr @"Core:iterator:generateWithState:7", align 8
  call void @free_candy_value(ptr %2239)
  %2240 = load ptr, ptr @"Core:iterator:generateWithState:9", align 8
  call void @free_candy_value(ptr %2240)
  %2241 = load ptr, ptr @"Core:iterator:isEmpty:3", align 8
  call void @free_candy_value(ptr %2241)
  %2242 = load ptr, ptr @"Core:iterator:isEmpty:7", align 8
  call void @free_candy_value(ptr %2242)
  %2243 = load ptr, ptr @"Core:iterator:joinToText:12:18", align 8
  call void @free_candy_value(ptr %2243)
  %2244 = load ptr, ptr @"Core:iterator:joinToText:12:9", align 8
  call void @free_candy_value(ptr %2244)
  %2245 = load ptr, ptr @"Core:iterator:joinToText:13", align 8
  call void @free_candy_value(ptr %2245)
  %2246 = load ptr, ptr @"Core:iterator:joinToText:3", align 8
  call void @free_candy_value(ptr %2246)
  %2247 = load ptr, ptr @"Core:iterator:length:3", align 8
  call void @free_candy_value(ptr %2247)
  %2248 = load ptr, ptr @"Core:iterator:length:6", align 8
  call void @free_candy_value(ptr %2248)
  %2249 = load ptr, ptr @"Core:iterator:length:8", align 8
  call void @free_candy_value(ptr %2249)
  %2250 = load ptr, ptr @"Core:iterator:map:12", align 8
  call void @free_candy_value(ptr %2250)
  %2251 = load ptr, ptr @"Core:iterator:map:14", align 8
  call void @free_candy_value(ptr %2251)
  %2252 = load ptr, ptr @"Core:iterator:map:17:2", align 8
  call void @free_candy_value(ptr %2252)
  %2253 = load ptr, ptr @"Core:iterator:map:17:3", align 8
  call void @free_candy_value(ptr %2253)
  %2254 = load ptr, ptr @"Core:iterator:map:17:3:5", align 8
  call void @free_candy_value(ptr %2254)
  %2255 = load ptr, ptr @"Core:iterator:map:17:3:item", align 8
  call void @free_candy_value(ptr %2255)
  %2256 = load ptr, ptr @"Core:iterator:map:17:3:rest", align 8
  call void @free_candy_value(ptr %2256)
  %2257 = load ptr, ptr @"Core:iterator:map:18", align 8
  call void @free_candy_value(ptr %2257)
  %2258 = load ptr, ptr @"Core:iterator:map:3", align 8
  call void @free_candy_value(ptr %2258)
  %2259 = load ptr, ptr @"Core:iterator:next:15", align 8
  call void @free_candy_value(ptr %2259)
  %2260 = load ptr, ptr @"Core:iterator:next:3", align 8
  call void @free_candy_value(ptr %2260)
  %2261 = load ptr, ptr @"Core:iterator:next:6", align 8
  call void @free_candy_value(ptr %2261)
  %2262 = load ptr, ptr @"Core:iterator:next:nextFunction", align 8
  call void @free_candy_value(ptr %2262)
  %2263 = load ptr, ptr @"Core:iterator:reduceLeft:13", align 8
  call void @free_candy_value(ptr %2263)
  %2264 = load ptr, ptr @"Core:iterator:reduceLeft:15", align 8
  call void @free_candy_value(ptr %2264)
  %2265 = load ptr, ptr @"Core:iterator:reduceLeft:16", align 8
  call void @free_candy_value(ptr %2265)
  %2266 = load ptr, ptr @"Core:iterator:reduceLeft:16:14", align 8
  call void @free_candy_value(ptr %2266)
  %2267 = load ptr, ptr @"Core:iterator:reduceLeft:16:item", align 8
  call void @free_candy_value(ptr %2267)
  %2268 = load ptr, ptr @"Core:iterator:reduceLeft:16:rest", align 8
  call void @free_candy_value(ptr %2268)
  %2269 = load ptr, ptr @"Core:iterator:reduceLeft:7", align 8
  call void @free_candy_value(ptr %2269)
  %2270 = load ptr, ptr @"Core:iterator:reduceLeft:9", align 8
  call void @free_candy_value(ptr %2270)
  %2271 = load ptr, ptr @"Core:iterator:skip:14", align 8
  call void @free_candy_value(ptr %2271)
  %2272 = load ptr, ptr @"Core:iterator:skip:22", align 8
  call void @free_candy_value(ptr %2272)
  %2273 = load ptr, ptr @"Core:iterator:skip:24", align 8
  call void @free_candy_value(ptr %2273)
  %2274 = load ptr, ptr @"Core:iterator:skip:26:6:1", align 8
  call void @free_candy_value(ptr %2274)
  %2275 = load ptr, ptr @"Core:iterator:skip:26:6:7:2", align 8
  call void @free_candy_value(ptr %2275)
  %2276 = load ptr, ptr @"Core:iterator:skip:26:6:8:2", align 8
  call void @free_candy_value(ptr %2276)
  %2277 = load ptr, ptr @"Core:iterator:skip:26:6:8:3", align 8
  call void @free_candy_value(ptr %2277)
  %2278 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:13", align 8
  call void @free_candy_value(ptr %2278)
  %2279 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:15", align 8
  call void @free_candy_value(ptr %2279)
  %2280 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:rest", align 8
  call void @free_candy_value(ptr %2280)
  %2281 = load ptr, ptr @"Core:iterator:skip:26:6:9", align 8
  call void @free_candy_value(ptr %2281)
  %2282 = load ptr, ptr @"Core:iterator:skip:26:6:iterator", align 8
  call void @free_candy_value(ptr %2282)
  %2283 = load ptr, ptr @"Core:iterator:skip:26:6:n", align 8
  call void @free_candy_value(ptr %2283)
  %2284 = load ptr, ptr @"Core:iterator:skip:26:7", align 8
  call void @free_candy_value(ptr %2284)
  %2285 = load ptr, ptr @"Core:iterator:skip:3", align 8
  call void @free_candy_value(ptr %2285)
  %2286 = load ptr, ptr @"Core:iterator:sum:17", align 8
  call void @free_candy_value(ptr %2286)
  %2287 = load ptr, ptr @"Core:iterator:sum:3", align 8
  call void @free_candy_value(ptr %2287)
  %2288 = load ptr, ptr @"Core:iterator:sum:5:15", align 8
  call void @free_candy_value(ptr %2288)
  %2289 = load ptr, ptr @"Core:iterator:sum:6", align 8
  call void @free_candy_value(ptr %2289)
  %2290 = load ptr, ptr @"Core:iterator:sum:8:8", align 8
  call void @free_candy_value(ptr %2290)
  %2291 = load ptr, ptr @"Core:iterator:sum:9", align 8
  call void @free_candy_value(ptr %2291)
  %2292 = load ptr, ptr @"Core:iterator:take:17", align 8
  call void @free_candy_value(ptr %2292)
  %2293 = load ptr, ptr @"Core:iterator:take:19", align 8
  call void @free_candy_value(ptr %2293)
  %2294 = load ptr, ptr @"Core:iterator:take:23", align 8
  call void @free_candy_value(ptr %2294)
  %2295 = load ptr, ptr @"Core:iterator:take:25", align 8
  call void @free_candy_value(ptr %2295)
  %2296 = load ptr, ptr @"Core:iterator:take:27:1", align 8
  call void @free_candy_value(ptr %2296)
  %2297 = load ptr, ptr @"Core:iterator:take:27:10", align 8
  call void @free_candy_value(ptr %2297)
  %2298 = load ptr, ptr @"Core:iterator:take:27:index", align 8
  call void @free_candy_value(ptr %2298)
  %2299 = load ptr, ptr @"Core:iterator:take:27:item", align 8
  call void @free_candy_value(ptr %2299)
  %2300 = load ptr, ptr @"Core:iterator:take:28", align 8
  call void @free_candy_value(ptr %2300)
  %2301 = load ptr, ptr @"Core:iterator:take:30:5", align 8
  call void @free_candy_value(ptr %2301)
  %2302 = load ptr, ptr @"Core:iterator:take:31", align 8
  call void @free_candy_value(ptr %2302)
  %2303 = load ptr, ptr @"Core:iterator:take:9", align 8
  call void @free_candy_value(ptr %2303)
  %2304 = load ptr, ptr @"Core:iterator:takeWhile:3", align 8
  call void @free_candy_value(ptr %2304)
  %2305 = load ptr, ptr @"Core:iterator:takeWhile:7:2", align 8
  call void @free_candy_value(ptr %2305)
  %2306 = load ptr, ptr @"Core:iterator:takeWhile:7:3", align 8
  call void @free_candy_value(ptr %2306)
  %2307 = load ptr, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  call void @free_candy_value(ptr %2307)
  %2308 = load ptr, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  call void @free_candy_value(ptr %2308)
  %2309 = load ptr, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  call void @free_candy_value(ptr %2309)
  %2310 = load ptr, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  call void @free_candy_value(ptr %2310)
  %2311 = load ptr, ptr @"Core:iterator:takeWhile:8", align 8
  call void @free_candy_value(ptr %2311)
  %2312 = load ptr, ptr @"Core:iterator:toList:3", align 8
  call void @free_candy_value(ptr %2312)
  %2313 = load ptr, ptr @"Core:iterator:toList:6:8", align 8
  call void @free_candy_value(ptr %2313)
  %2314 = load ptr, ptr @"Core:iterator:toList:7", align 8
  call void @free_candy_value(ptr %2314)
  %2315 = load ptr, ptr @"Core:iterator:where:12", align 8
  call void @free_candy_value(ptr %2315)
  %2316 = load ptr, ptr @"Core:iterator:where:14", align 8
  call void @free_candy_value(ptr %2316)
  %2317 = load ptr, ptr @"Core:iterator:where:17:2:2", align 8
  call void @free_candy_value(ptr %2317)
  %2318 = load ptr, ptr @"Core:iterator:where:17:2:3", align 8
  call void @free_candy_value(ptr %2318)
  %2319 = load ptr, ptr @"Core:iterator:where:17:2:3:4", align 8
  call void @free_candy_value(ptr %2319)
  %2320 = load ptr, ptr @"Core:iterator:where:17:2:3:6:2", align 8
  call void @free_candy_value(ptr %2320)
  %2321 = load ptr, ptr @"Core:iterator:where:17:2:3:6:4", align 8
  call void @free_candy_value(ptr %2321)
  %2322 = load ptr, ptr @"Core:iterator:where:17:2:3:6:5", align 8
  call void @free_candy_value(ptr %2322)
  %2323 = load ptr, ptr @"Core:iterator:where:17:2:3:6:5:item", align 8
  call void @free_candy_value(ptr %2323)
  %2324 = load ptr, ptr @"Core:iterator:where:17:2:3:6:5:rest", align 8
  call void @free_candy_value(ptr %2324)
  %2325 = load ptr, ptr @"Core:iterator:where:17:2:3:7", align 8
  call void @free_candy_value(ptr %2325)
  %2326 = load ptr, ptr @"Core:iterator:where:17:2:3:item", align 8
  call void @free_candy_value(ptr %2326)
  %2327 = load ptr, ptr @"Core:iterator:where:17:2:3:rest", align 8
  call void @free_candy_value(ptr %2327)
  %2328 = load ptr, ptr @"Core:iterator:where:17:3", align 8
  call void @free_candy_value(ptr %2328)
  %2329 = load ptr, ptr @"Core:iterator:where:18", align 8
  call void @free_candy_value(ptr %2329)
  %2330 = load ptr, ptr @"Core:iterator:where:3", align 8
  call void @free_candy_value(ptr %2330)
  %2331 = load ptr, ptr @"Core:iterator:windowed:14", align 8
  call void @free_candy_value(ptr %2331)
  %2332 = load ptr, ptr @"Core:iterator:windowed:22", align 8
  call void @free_candy_value(ptr %2332)
  %2333 = load ptr, ptr @"Core:iterator:windowed:24", align 8
  call void @free_candy_value(ptr %2333)
  %2334 = load ptr, ptr @"Core:iterator:windowed:3", align 8
  call void @free_candy_value(ptr %2334)
  %2335 = load ptr, ptr @"Core:iterator:windowed:34", align 8
  call void @free_candy_value(ptr %2335)
  %2336 = load ptr, ptr @"Core:iterator:windowed:42", align 8
  call void @free_candy_value(ptr %2336)
  %2337 = load ptr, ptr @"Core:iterator:windowed:44", align 8
  call void @free_candy_value(ptr %2337)
  %2338 = load ptr, ptr @"Core:iterator:windowed:52", align 8
  call void @free_candy_value(ptr %2338)
  %2339 = load ptr, ptr @"Core:iterator:windowed:54", align 8
  call void @free_candy_value(ptr %2339)
  %2340 = load ptr, ptr @"Core:iterator:windowed:57:14", align 8
  call void @free_candy_value(ptr %2340)
  %2341 = load ptr, ptr @"Core:iterator:windowed:57:20", align 8
  call void @free_candy_value(ptr %2341)
  %2342 = load ptr, ptr @"Core:iterator:windowed:57:24:7", align 8
  call void @free_candy_value(ptr %2342)
  %2343 = load ptr, ptr @"Core:iterator:windowed:57:26", align 8
  call void @free_candy_value(ptr %2343)
  %2344 = load ptr, ptr @"Core:iterator:windowed:57:3", align 8
  call void @free_candy_value(ptr %2344)
  %2345 = load ptr, ptr @"Core:iterator:windowed:57:5", align 8
  call void @free_candy_value(ptr %2345)
  %2346 = load ptr, ptr @"Core:iterator:windowed:58", align 8
  call void @free_candy_value(ptr %2346)
  %2347 = load ptr, ptr @"Core:iterator:withIndex:11:1", align 8
  call void @free_candy_value(ptr %2347)
  %2348 = load ptr, ptr @"Core:iterator:withIndex:11:4", align 8
  call void @free_candy_value(ptr %2348)
  %2349 = load ptr, ptr @"Core:iterator:withIndex:11:5", align 8
  call void @free_candy_value(ptr %2349)
  %2350 = load ptr, ptr @"Core:iterator:withIndex:11:5:20", align 8
  call void @free_candy_value(ptr %2350)
  %2351 = load ptr, ptr @"Core:iterator:withIndex:11:5:item", align 8
  call void @free_candy_value(ptr %2351)
  %2352 = load ptr, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  call void @free_candy_value(ptr %2352)
  %2353 = load ptr, ptr @"Core:iterator:withIndex:11:index", align 8
  call void @free_candy_value(ptr %2353)
  %2354 = load ptr, ptr @"Core:iterator:withIndex:11:iterator", align 8
  call void @free_candy_value(ptr %2354)
  %2355 = load ptr, ptr @"Core:iterator:withIndex:12", align 8
  call void @free_candy_value(ptr %2355)
  %2356 = load ptr, ptr @"Core:iterator:withIndex:3", align 8
  call void @free_candy_value(ptr %2356)
  %2357 = load ptr, ptr @"Core:iterator:wrapSafe:10:7", align 8
  call void @free_candy_value(ptr %2357)
  %2358 = load ptr, ptr @"Core:iterator:wrapSafe:14:1", align 8
  call void @free_candy_value(ptr %2358)
  %2359 = load ptr, ptr @"Core:iterator:wrapSafe:14:11", align 8
  call void @free_candy_value(ptr %2359)
  %2360 = load ptr, ptr @"Core:iterator:wrapSafe:14:18", align 8
  call void @free_candy_value(ptr %2360)
  %2361 = load ptr, ptr @"Core:iterator:wrapSafe:14:1:8", align 8
  call void @free_candy_value(ptr %2361)
  %2362 = load ptr, ptr @"Core:iterator:wrapSafe:14:1:function", align 8
  call void @free_candy_value(ptr %2362)
  %2363 = load ptr, ptr @"Core:iterator:wrapSafe:14:20", align 8
  call void @free_candy_value(ptr %2363)
  %2364 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:7", align 8
  call void @free_candy_value(ptr %2364)
  %2365 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8", align 8
  call void @free_candy_value(ptr %2365)
  %2366 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:17", align 8
  call void @free_candy_value(ptr %2366)
  %2367 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:7", align 8
  call void @free_candy_value(ptr %2367)
  %2368 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:item", align 8
  call void @free_candy_value(ptr %2368)
  %2369 = load ptr, ptr @"Core:iterator:wrapSafe:14:22:8:rest", align 8
  call void @free_candy_value(ptr %2369)
  %2370 = load ptr, ptr @"Core:iterator:wrapSafe:15", align 8
  call void @free_candy_value(ptr %2370)
  %2371 = load ptr, ptr @"Core:iterator:wrapSafe:7", align 8
  call void @free_candy_value(ptr %2371)
  %2372 = load ptr, ptr @"Core:iterator:wrapSafe:9", align 8
  call void @free_candy_value(ptr %2372)
  %2373 = load ptr, ptr @"Core:list:append:11", align 8
  call void @free_candy_value(ptr %2373)
  %2374 = load ptr, ptr @"Core:list:append:4", align 8
  call void @free_candy_value(ptr %2374)
  %2375 = load ptr, ptr @"Core:list:append:9", align 8
  call void @free_candy_value(ptr %2375)
  %2376 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %2376)
  %2377 = load ptr, ptr @"Core:result:is:1:_", align 8
  call void @free_candy_value(ptr %2377)
  %2378 = load ptr, ptr @"Core:result:mapOrElse:12", align 8
  call void @free_candy_value(ptr %2378)
  %2379 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %2379)
  %2380 = load ptr, ptr @"Core:result:mapOrElse:2", align 8
  call void @free_candy_value(ptr %2380)
  %2381 = load ptr, ptr @"Core:result:mapOrElse:22", align 8
  call void @free_candy_value(ptr %2381)
  %2382 = load ptr, ptr @"Core:result:mapOrElse:24", align 8
  call void @free_candy_value(ptr %2382)
  %2383 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %2383)
  %2384 = load ptr, ptr @"Core:result:mapOrElse:26:2", align 8
  call void @free_candy_value(ptr %2384)
  %2385 = load ptr, ptr @"Core:result:mapOrElse:26:5", align 8
  call void @free_candy_value(ptr %2385)
  %2386 = load ptr, ptr @"Core:result:mapOrElse:26:value", align 8
  call void @free_candy_value(ptr %2386)
  %2387 = load ptr, ptr @"Core:result:mapOrElse:26:value#1", align 8
  call void @free_candy_value(ptr %2387)
  %2388 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %2388)
  %2389 = load ptr, ptr @"Core:result:unwrapOr:2", align 8
  call void @free_candy_value(ptr %2389)
  %2390 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %2390)
  %2391 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %2391)
  %2392 = load ptr, ptr @"Core:result:unwrapOrElse:12", align 8
  call void @free_candy_value(ptr %2392)
  %2393 = load ptr, ptr @"Core:result:unwrapOrElse:14", align 8
  call void @free_candy_value(ptr %2393)
  %2394 = load ptr, ptr @"Core:result:unwrapOrElse:18:7", align 8
  call void @free_candy_value(ptr %2394)
  %2395 = load ptr, ptr @"Core:result:unwrapOrElse:19", align 8
  call void @free_candy_value(ptr %2395)
  %2396 = load ptr, ptr @"Core:result:unwrapOrElse:2", align 8
  call void @free_candy_value(ptr %2396)
  %2397 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %2397)
  %2398 = load ptr, ptr @tag_Empty, align 8
  call void @free_candy_value(ptr %2398)
  %2399 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %2399)
  %2400 = load ptr, ptr @tag_Index, align 8
  call void @free_candy_value(ptr %2400)
  %2401 = load ptr, ptr @tag_Item, align 8
  call void @free_candy_value(ptr %2401)
  %2402 = load ptr, ptr @tag_Iterator, align 8
  call void @free_candy_value(ptr %2402)
  %2403 = load ptr, ptr @tag_More, align 8
  call void @free_candy_value(ptr %2403)
  %2404 = load ptr, ptr @tag_N, align 8
  call void @free_candy_value(ptr %2404)
  %2405 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %2405)
  %2406 = load ptr, ptr @tag_Rest, align 8
  call void @free_candy_value(ptr %2406)
  %2407 = load ptr, ptr @tag_State, align 8
  call void @free_candy_value(ptr %2407)
  %2408 = load ptr, ptr @tag_Value, align 8
  call void @free_candy_value(ptr %2408)
  %2409 = load ptr, ptr @text_, align 8
  call void @free_candy_value(ptr %2409)
  %2410 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  call void @free_candy_value(ptr %2410)
  %2411 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %2411)
  %2412 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  call void @free_candy_value(ptr %2412)
  %2413 = load ptr, ptr @"text_Expected More, got ", align 8
  call void @free_candy_value(ptr %2413)
  %2414 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %2414)
  %2415 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  call void @free_candy_value(ptr %2415)
  %2416 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  call void @free_candy_value(ptr %2416)
  %2417 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  call void @free_candy_value(ptr %2417)
  %2418 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  call void @free_candy_value(ptr %2418)
  %2419 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  call void @free_candy_value(ptr %2419)
  %2420 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  call void @free_candy_value(ptr %2420)
  %2421 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  call void @free_candy_value(ptr %2421)
  %2422 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  call void @free_candy_value(ptr %2422)
  %2423 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  call void @free_candy_value(ptr %2423)
  %2424 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  call void @free_candy_value(ptr %2424)
  %2425 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @free_candy_value(ptr %2425)
  %2426 = load ptr, ptr @"text_`", align 8
  call void @free_candy_value(ptr %2426)
  %2427 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @free_candy_value(ptr %2427)
  %2428 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @free_candy_value(ptr %2428)
  %2429 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  call void @free_candy_value(ptr %2429)
  %2430 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  call void @free_candy_value(ptr %2430)
  %2431 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @free_candy_value(ptr %2431)
  %2432 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @free_candy_value(ptr %2432)
  %2433 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %2433)
  %2434 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %2434)
  %2435 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  call void @free_candy_value(ptr %2435)
  %2436 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %2436)
  %2437 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  call void @free_candy_value(ptr %2437)
  %2438 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  call void @free_candy_value(ptr %2438)
  %2439 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %2439)
  %2440 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  call void @free_candy_value(ptr %2440)
  %2441 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %2441)
  %2442 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  call void @free_candy_value(ptr %2442)
  %2443 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  call void @free_candy_value(ptr %2443)
  %2444 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  call void @free_candy_value(ptr %2444)
  %2445 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  call void @free_candy_value(ptr %2445)
  %2446 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  call void @free_candy_value(ptr %2446)
  %2447 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  call void @free_candy_value(ptr %2447)
  %2448 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  call void @free_candy_value(ptr %2448)
  %2449 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  call void @free_candy_value(ptr %2449)
  %2450 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  call void @free_candy_value(ptr %2450)
  %2451 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  call void @free_candy_value(ptr %2451)
  %2452 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  call void @free_candy_value(ptr %2452)
  %2453 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %2453)
  %2454 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @free_candy_value(ptr %2454)
  %2455 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @free_candy_value(ptr %2455)
  %2456 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @free_candy_value(ptr %2456)
  %2457 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  call void @free_candy_value(ptr %2457)
  %2458 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @free_candy_value(ptr %2458)
  %2459 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @free_candy_value(ptr %2459)
  %2460 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %2460)
  %2461 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @free_candy_value(ptr %2461)
  %2462 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @free_candy_value(ptr %2462)
  %2463 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @free_candy_value(ptr %2463)
  %2464 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @free_candy_value(ptr %2464)
  %2465 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  call void @free_candy_value(ptr %2465)
  %2466 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @free_candy_value(ptr %2466)
  %2467 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @free_candy_value(ptr %2467)
  %2468 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @free_candy_value(ptr %2468)
  %2469 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @free_candy_value(ptr %2469)
  %2470 = load ptr, ptr @fun_Core_result_is, align 8
  call void @free_candy_value(ptr %2470)
  %2471 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %2471)
  %2472 = load ptr, ptr @fun_Core_result_is_1_equals_then.20, align 8
  call void @free_candy_value(ptr %2472)
  %2473 = load ptr, ptr @fun_Core_result_is_1_equals_then.22, align 8
  call void @free_candy_value(ptr %2473)
  %2474 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %2474)
  %2475 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %2475)
  %2476 = load ptr, ptr @fun_Core_result_is_1_equals_else.24, align 8
  call void @free_candy_value(ptr %2476)
  %2477 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %2477)
  %2478 = load ptr, ptr @fun_Core_result_is_1_equals_else.26, align 8
  call void @free_candy_value(ptr %2478)
  %2479 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %2479)
  %2480 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2480)
  %2481 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2481)
  %2482 = load ptr, ptr @fun_Core_result_is_1_equals_then.28, align 8
  call void @free_candy_value(ptr %2482)
  %2483 = load ptr, ptr @fun_Core_result_is_1_equals_then.30, align 8
  call void @free_candy_value(ptr %2483)
  %2484 = load ptr, ptr @fun_Core_result_is_1_equals_then.32, align 8
  call void @free_candy_value(ptr %2484)
  %2485 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %2485)
  %2486 = load ptr, ptr @fun_Core_result_is_1_equals_else.34, align 8
  call void @free_candy_value(ptr %2486)
  %2487 = load ptr, ptr @fun_Core_result_is_1_equals_else.36, align 8
  call void @free_candy_value(ptr %2487)
  %2488 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %2488)
  %2489 = load ptr, ptr @fun_Core_result_is_1_equals_else.38, align 8
  call void @free_candy_value(ptr %2489)
  %2490 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %2490)
  %2491 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %2491)
  %2492 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2492)
  %2493 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %2493)
  %2494 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then, align 8
  call void @free_candy_value(ptr %2494)
  %2495 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.40, align 8
  call void @free_candy_value(ptr %2495)
  %2496 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.42, align 8
  call void @free_candy_value(ptr %2496)
  %2497 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %2497)
  %2498 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else, align 8
  call void @free_candy_value(ptr %2498)
  %2499 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.44, align 8
  call void @free_candy_value(ptr %2499)
  %2500 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %2500)
  %2501 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.46, align 8
  call void @free_candy_value(ptr %2501)
  %2502 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %2502)
  %2503 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_matched, align 8
  call void @free_candy_value(ptr %2503)
  %2504 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2504)
  %2505 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.48, align 8
  call void @free_candy_value(ptr %2505)
  %2506 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.50, align 8
  call void @free_candy_value(ptr %2506)
  %2507 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.52, align 8
  call void @free_candy_value(ptr %2507)
  %2508 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %2508)
  %2509 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.54, align 8
  call void @free_candy_value(ptr %2509)
  %2510 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.56, align 8
  call void @free_candy_value(ptr %2510)
  %2511 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %2511)
  %2512 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.58, align 8
  call void @free_candy_value(ptr %2512)
  %2513 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %2513)
  %2514 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_matched, align 8
  call void @free_candy_value(ptr %2514)
  %2515 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2515)
  %2516 = load ptr, ptr @"fun_Core_iterator_range_32, Core_result_unwrapOrElse_17", align 8
  call void @free_candy_value(ptr %2516)
  %2517 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %2517)
  %2518 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %2518)
  %2519 = load ptr, ptr @fun_Core_result_unwrapOrElse_18, align 8
  call void @free_candy_value(ptr %2519)
  %2520 = load ptr, ptr @fun_Core_list_append, align 8
  call void @free_candy_value(ptr %2520)
  %2521 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  call void @free_candy_value(ptr %2521)
  %2522 = load ptr, ptr @fun_Core_iterator_wrapSafe, align 8
  call void @free_candy_value(ptr %2522)
  %2523 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  call void @free_candy_value(ptr %2523)
  %2524 = load ptr, ptr @fun_Core_iterator_wrapSafe_14, align 8
  call void @free_candy_value(ptr %2524)
  %2525 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then, align 8
  call void @free_candy_value(ptr %2525)
  %2526 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.60, align 8
  call void @free_candy_value(ptr %2526)
  %2527 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.62, align 8
  call void @free_candy_value(ptr %2527)
  %2528 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %2528)
  %2529 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else, align 8
  call void @free_candy_value(ptr %2529)
  %2530 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.64, align 8
  call void @free_candy_value(ptr %2530)
  %2531 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %2531)
  %2532 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.66, align 8
  call void @free_candy_value(ptr %2532)
  %2533 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %2533)
  %2534 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched, align 8
  call void @free_candy_value(ptr %2534)
  %2535 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2535)
  %2536 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22, align 8
  call void @free_candy_value(ptr %2536)
  %2537 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else, align 8
  call void @free_candy_value(ptr %2537)
  %2538 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %2538)
  %2539 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2539)
  %2540 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then, align 8
  call void @free_candy_value(ptr %2540)
  %2541 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.68, align 8
  call void @free_candy_value(ptr %2541)
  %2542 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.70, align 8
  call void @free_candy_value(ptr %2542)
  %2543 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.72, align 8
  call void @free_candy_value(ptr %2543)
  %2544 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then, align 8
  call void @free_candy_value(ptr %2544)
  %2545 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %2545)
  %2546 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else, align 8
  call void @free_candy_value(ptr %2546)
  %2547 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %2547)
  %2548 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then, align 8
  call void @free_candy_value(ptr %2548)
  %2549 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.74, align 8
  call void @free_candy_value(ptr %2549)
  %2550 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %2550)
  %2551 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.76, align 8
  call void @free_candy_value(ptr %2551)
  %2552 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %2552)
  %2553 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.78, align 8
  call void @free_candy_value(ptr %2553)
  %2554 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %2554)
  %2555 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else, align 8
  call void @free_candy_value(ptr %2555)
  %2556 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.80, align 8
  call void @free_candy_value(ptr %2556)
  %2557 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.82, align 8
  call void @free_candy_value(ptr %2557)
  %2558 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %2558)
  %2559 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.84, align 8
  call void @free_candy_value(ptr %2559)
  %2560 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.86, align 8
  call void @free_candy_value(ptr %2560)
  %2561 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %2561)
  %2562 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.88, align 8
  call void @free_candy_value(ptr %2562)
  %2563 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %2563)
  %2564 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched, align 8
  call void @free_candy_value(ptr %2564)
  %2565 = load ptr, ptr @tag_More.89, align 8
  call void @free_candy_value(ptr %2565)
  %2566 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2566)
  %2567 = load ptr, ptr @tag_Iterator.90, align 8
  call void @free_candy_value(ptr %2567)
  %2568 = load ptr, ptr @fun_Core_controlFlow_recursive_16, align 8
  call void @free_candy_value(ptr %2568)
  %2569 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0, align 8
  call void @free_candy_value(ptr %2569)
  %2570 = load ptr, ptr @fun_Core_iterator_next, align 8
  call void @free_candy_value(ptr %2570)
  %2571 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  call void @free_candy_value(ptr %2571)
  %2572 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  call void @free_candy_value(ptr %2572)
  %2573 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.92, align 8
  call void @free_candy_value(ptr %2573)
  %2574 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.94, align 8
  call void @free_candy_value(ptr %2574)
  %2575 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %2575)
  %2576 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  call void @free_candy_value(ptr %2576)
  %2577 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.96, align 8
  call void @free_candy_value(ptr %2577)
  %2578 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %2578)
  %2579 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.98, align 8
  call void @free_candy_value(ptr %2579)
  %2580 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %2580)
  %2581 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  call void @free_candy_value(ptr %2581)
  %2582 = load ptr, ptr @fun_Core_iterator_generateWithState, align 8
  call void @free_candy_value(ptr %2582)
  %2583 = load ptr, ptr @fun_Core_iterator_generateWithState_12, align 8
  call void @free_candy_value(ptr %2583)
  %2584 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1, align 8
  call void @free_candy_value(ptr %2584)
  %2585 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then, align 8
  call void @free_candy_value(ptr %2585)
  %2586 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.100, align 8
  call void @free_candy_value(ptr %2586)
  %2587 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.102, align 8
  call void @free_candy_value(ptr %2587)
  %2588 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.104, align 8
  call void @free_candy_value(ptr %2588)
  %2589 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then, align 8
  call void @free_candy_value(ptr %2589)
  %2590 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %2590)
  %2591 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else, align 8
  call void @free_candy_value(ptr %2591)
  %2592 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %2592)
  %2593 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then, align 8
  call void @free_candy_value(ptr %2593)
  %2594 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.106, align 8
  call void @free_candy_value(ptr %2594)
  %2595 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %2595)
  %2596 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.108, align 8
  call void @free_candy_value(ptr %2596)
  %2597 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %2597)
  %2598 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.110, align 8
  call void @free_candy_value(ptr %2598)
  %2599 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %2599)
  %2600 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else, align 8
  call void @free_candy_value(ptr %2600)
  %2601 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.112, align 8
  call void @free_candy_value(ptr %2601)
  %2602 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else, align 8
  call void @free_candy_value(ptr %2602)
  %2603 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %2603)
  %2604 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.114, align 8
  call void @free_candy_value(ptr %2604)
  %2605 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.116, align 8
  call void @free_candy_value(ptr %2605)
  %2606 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %2606)
  %2607 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.118, align 8
  call void @free_candy_value(ptr %2607)
  %2608 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %2608)
  %2609 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched, align 8
  call void @free_candy_value(ptr %2609)
  %2610 = load ptr, ptr @tag_More.119, align 8
  call void @free_candy_value(ptr %2610)
  %2611 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2611)
  %2612 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.121, align 8
  call void @free_candy_value(ptr %2612)
  %2613 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %2613)
  %2614 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2614)
  %2615 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-2_matched, align 8
  call void @free_candy_value(ptr %2615)
  %2616 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21, align 8
  call void @free_candy_value(ptr %2616)
  %2617 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22, align 8
  call void @free_candy_value(ptr %2617)
  %2618 = load ptr, ptr @tag_Iterator.122, align 8
  call void @free_candy_value(ptr %2618)
  %2619 = load ptr, ptr @fun_Core_controlFlow_recursive_16.124, align 8
  call void @free_candy_value(ptr %2619)
  %2620 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.126, align 8
  call void @free_candy_value(ptr %2620)
  %2621 = load ptr, ptr @fun_Core_iterator_generate, align 8
  call void @free_candy_value(ptr %2621)
  %2622 = load ptr, ptr @fun_Core_iterator_generate_42, align 8
  call void @free_candy_value(ptr %2622)
  %2623 = load ptr, ptr @fun_Core_iterator_generate_42_6, align 8
  call void @free_candy_value(ptr %2623)
  %2624 = load ptr, ptr @tag_More.127, align 8
  call void @free_candy_value(ptr %2624)
  %2625 = load ptr, ptr @fun_Core_iterator_map, align 8
  call void @free_candy_value(ptr %2625)
  %2626 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  call void @free_candy_value(ptr %2626)
  %2627 = load ptr, ptr @fun_Core_iterator_map_17, align 8
  call void @free_candy_value(ptr %2627)
  %2628 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else, align 8
  call void @free_candy_value(ptr %2628)
  %2629 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %2629)
  %2630 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2630)
  %2631 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then, align 8
  call void @free_candy_value(ptr %2631)
  %2632 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.129, align 8
  call void @free_candy_value(ptr %2632)
  %2633 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.131, align 8
  call void @free_candy_value(ptr %2633)
  %2634 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.133, align 8
  call void @free_candy_value(ptr %2634)
  %2635 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then, align 8
  call void @free_candy_value(ptr %2635)
  %2636 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %2636)
  %2637 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else, align 8
  call void @free_candy_value(ptr %2637)
  %2638 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %2638)
  %2639 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then, align 8
  call void @free_candy_value(ptr %2639)
  %2640 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.135, align 8
  call void @free_candy_value(ptr %2640)
  %2641 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %2641)
  %2642 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.137, align 8
  call void @free_candy_value(ptr %2642)
  %2643 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %2643)
  %2644 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.139, align 8
  call void @free_candy_value(ptr %2644)
  %2645 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %2645)
  %2646 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else, align 8
  call void @free_candy_value(ptr %2646)
  %2647 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.141, align 8
  call void @free_candy_value(ptr %2647)
  %2648 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.143, align 8
  call void @free_candy_value(ptr %2648)
  %2649 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %2649)
  %2650 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.145, align 8
  call void @free_candy_value(ptr %2650)
  %2651 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.147, align 8
  call void @free_candy_value(ptr %2651)
  %2652 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %2652)
  %2653 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.149, align 8
  call void @free_candy_value(ptr %2653)
  %2654 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %2654)
  %2655 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched, align 8
  call void @free_candy_value(ptr %2655)
  %2656 = load ptr, ptr @tag_More.150, align 8
  call void @free_candy_value(ptr %2656)
  %2657 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2657)
  %2658 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  call void @free_candy_value(ptr %2658)
  %2659 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  call void @free_candy_value(ptr %2659)
  %2660 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  call void @free_candy_value(ptr %2660)
  %2661 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %2661)
  %2662 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  call void @free_candy_value(ptr %2662)
  %2663 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %2663)
  %2664 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2664)
  %2665 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.152, align 8
  call void @free_candy_value(ptr %2665)
  %2666 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %2666)
  %2667 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.154, align 8
  call void @free_candy_value(ptr %2667)
  %2668 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %2668)
  %2669 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.156, align 8
  call void @free_candy_value(ptr %2669)
  %2670 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %2670)
  %2671 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2671)
  %2672 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.158, align 8
  call void @free_candy_value(ptr %2672)
  %2673 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  call void @free_candy_value(ptr %2673)
  %2674 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %2674)
  %2675 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.160, align 8
  call void @free_candy_value(ptr %2675)
  %2676 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  call void @free_candy_value(ptr %2676)
  %2677 = load ptr, ptr @69, align 8
  call void @free_candy_value(ptr %2677)
  %2678 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2678)
  %2679 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  call void @free_candy_value(ptr %2679)
  %2680 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.162, align 8
  call void @free_candy_value(ptr %2680)
  %2681 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.164, align 8
  call void @free_candy_value(ptr %2681)
  %2682 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.166, align 8
  call void @free_candy_value(ptr %2682)
  %2683 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  call void @free_candy_value(ptr %2683)
  %2684 = load ptr, ptr @70, align 8
  call void @free_candy_value(ptr %2684)
  %2685 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  call void @free_candy_value(ptr %2685)
  %2686 = load ptr, ptr @71, align 8
  call void @free_candy_value(ptr %2686)
  %2687 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  call void @free_candy_value(ptr %2687)
  %2688 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.168, align 8
  call void @free_candy_value(ptr %2688)
  %2689 = load ptr, ptr @72, align 8
  call void @free_candy_value(ptr %2689)
  %2690 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.170, align 8
  call void @free_candy_value(ptr %2690)
  %2691 = load ptr, ptr @73, align 8
  call void @free_candy_value(ptr %2691)
  %2692 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.172, align 8
  call void @free_candy_value(ptr %2692)
  %2693 = load ptr, ptr @74, align 8
  call void @free_candy_value(ptr %2693)
  %2694 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  call void @free_candy_value(ptr %2694)
  %2695 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.174, align 8
  call void @free_candy_value(ptr %2695)
  %2696 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.176, align 8
  call void @free_candy_value(ptr %2696)
  %2697 = load ptr, ptr @75, align 8
  call void @free_candy_value(ptr %2697)
  %2698 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.178, align 8
  call void @free_candy_value(ptr %2698)
  %2699 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.180, align 8
  call void @free_candy_value(ptr %2699)
  %2700 = load ptr, ptr @76, align 8
  call void @free_candy_value(ptr %2700)
  %2701 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.182, align 8
  call void @free_candy_value(ptr %2701)
  %2702 = load ptr, ptr @77, align 8
  call void @free_candy_value(ptr %2702)
  %2703 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  call void @free_candy_value(ptr %2703)
  %2704 = load ptr, ptr @tag_More.183, align 8
  call void @free_candy_value(ptr %2704)
  %2705 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2705)
  %2706 = load ptr, ptr @fun_Core_iterator_ensure, align 8
  call void @free_candy_value(ptr %2706)
  %2707 = load ptr, ptr @fun_Core_iterator_ensure_12, align 8
  call void @free_candy_value(ptr %2707)
  %2708 = load ptr, ptr @fun_Core_iterator_ensure_17, align 8
  call void @free_candy_value(ptr %2708)
  %2709 = load ptr, ptr @fun_Core_iterator_foldLeft, align 8
  call void @free_candy_value(ptr %2709)
  %2710 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  call void @free_candy_value(ptr %2710)
  %2711 = load ptr, ptr @fun_Core_iterator_foldLeft_21, align 8
  call void @free_candy_value(ptr %2711)
  %2712 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_then, align 8
  call void @free_candy_value(ptr %2712)
  %2713 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then, align 8
  call void @free_candy_value(ptr %2713)
  %2714 = load ptr, ptr @78, align 8
  call void @free_candy_value(ptr %2714)
  %2715 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else, align 8
  call void @free_candy_value(ptr %2715)
  %2716 = load ptr, ptr @79, align 8
  call void @free_candy_value(ptr %2716)
  %2717 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2717)
  %2718 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then.185, align 8
  call void @free_candy_value(ptr %2718)
  %2719 = load ptr, ptr @80, align 8
  call void @free_candy_value(ptr %2719)
  %2720 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else.187, align 8
  call void @free_candy_value(ptr %2720)
  %2721 = load ptr, ptr @81, align 8
  call void @free_candy_value(ptr %2721)
  %2722 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then.189, align 8
  call void @free_candy_value(ptr %2722)
  %2723 = load ptr, ptr @82, align 8
  call void @free_candy_value(ptr %2723)
  %2724 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2724)
  %2725 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.191, align 8
  call void @free_candy_value(ptr %2725)
  %2726 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_else, align 8
  call void @free_candy_value(ptr %2726)
  %2727 = load ptr, ptr @83, align 8
  call void @free_candy_value(ptr %2727)
  %2728 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.193, align 8
  call void @free_candy_value(ptr %2728)
  %2729 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else, align 8
  call void @free_candy_value(ptr %2729)
  %2730 = load ptr, ptr @84, align 8
  call void @free_candy_value(ptr %2730)
  %2731 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_matched, align 8
  call void @free_candy_value(ptr %2731)
  %2732 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2732)
  %2733 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then, align 8
  call void @free_candy_value(ptr %2733)
  %2734 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.195, align 8
  call void @free_candy_value(ptr %2734)
  %2735 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.197, align 8
  call void @free_candy_value(ptr %2735)
  %2736 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.199, align 8
  call void @free_candy_value(ptr %2736)
  %2737 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then, align 8
  call void @free_candy_value(ptr %2737)
  %2738 = load ptr, ptr @85, align 8
  call void @free_candy_value(ptr %2738)
  %2739 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else, align 8
  call void @free_candy_value(ptr %2739)
  %2740 = load ptr, ptr @86, align 8
  call void @free_candy_value(ptr %2740)
  %2741 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then, align 8
  call void @free_candy_value(ptr %2741)
  %2742 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then.201, align 8
  call void @free_candy_value(ptr %2742)
  %2743 = load ptr, ptr @87, align 8
  call void @free_candy_value(ptr %2743)
  %2744 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else.203, align 8
  call void @free_candy_value(ptr %2744)
  %2745 = load ptr, ptr @88, align 8
  call void @free_candy_value(ptr %2745)
  %2746 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then.205, align 8
  call void @free_candy_value(ptr %2746)
  %2747 = load ptr, ptr @89, align 8
  call void @free_candy_value(ptr %2747)
  %2748 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else, align 8
  call void @free_candy_value(ptr %2748)
  %2749 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else.207, align 8
  call void @free_candy_value(ptr %2749)
  %2750 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.209, align 8
  call void @free_candy_value(ptr %2750)
  %2751 = load ptr, ptr @90, align 8
  call void @free_candy_value(ptr %2751)
  %2752 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.211, align 8
  call void @free_candy_value(ptr %2752)
  %2753 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.213, align 8
  call void @free_candy_value(ptr %2753)
  %2754 = load ptr, ptr @91, align 8
  call void @free_candy_value(ptr %2754)
  %2755 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.215, align 8
  call void @free_candy_value(ptr %2755)
  %2756 = load ptr, ptr @92, align 8
  call void @free_candy_value(ptr %2756)
  %2757 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_matched, align 8
  call void @free_candy_value(ptr %2757)
  %2758 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2758)
  %2759 = load ptr, ptr @fun_Core_controlFlow_recursive_16.217, align 8
  call void @free_candy_value(ptr %2759)
  %2760 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.219, align 8
  call void @free_candy_value(ptr %2760)
  %2761 = load ptr, ptr @tag_Error.220, align 8
  call void @free_candy_value(ptr %2761)
  %2762 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_matched, align 8
  call void @free_candy_value(ptr %2762)
  %2763 = load ptr, ptr @fun_Core_iterator_reduceLeft, align 8
  call void @free_candy_value(ptr %2763)
  %2764 = load ptr, ptr @fun_Core_iterator_reduceLeft_12, align 8
  call void @free_candy_value(ptr %2764)
  %2765 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else, align 8
  call void @free_candy_value(ptr %2765)
  %2766 = load ptr, ptr @93, align 8
  call void @free_candy_value(ptr %2766)
  %2767 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2767)
  %2768 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then, align 8
  call void @free_candy_value(ptr %2768)
  %2769 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.222, align 8
  call void @free_candy_value(ptr %2769)
  %2770 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.224, align 8
  call void @free_candy_value(ptr %2770)
  %2771 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.226, align 8
  call void @free_candy_value(ptr %2771)
  %2772 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then, align 8
  call void @free_candy_value(ptr %2772)
  %2773 = load ptr, ptr @94, align 8
  call void @free_candy_value(ptr %2773)
  %2774 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else, align 8
  call void @free_candy_value(ptr %2774)
  %2775 = load ptr, ptr @95, align 8
  call void @free_candy_value(ptr %2775)
  %2776 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then, align 8
  call void @free_candy_value(ptr %2776)
  %2777 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then.228, align 8
  call void @free_candy_value(ptr %2777)
  %2778 = load ptr, ptr @96, align 8
  call void @free_candy_value(ptr %2778)
  %2779 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else.230, align 8
  call void @free_candy_value(ptr %2779)
  %2780 = load ptr, ptr @97, align 8
  call void @free_candy_value(ptr %2780)
  %2781 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then.232, align 8
  call void @free_candy_value(ptr %2781)
  %2782 = load ptr, ptr @98, align 8
  call void @free_candy_value(ptr %2782)
  %2783 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else, align 8
  call void @free_candy_value(ptr %2783)
  %2784 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else.234, align 8
  call void @free_candy_value(ptr %2784)
  %2785 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.236, align 8
  call void @free_candy_value(ptr %2785)
  %2786 = load ptr, ptr @99, align 8
  call void @free_candy_value(ptr %2786)
  %2787 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.238, align 8
  call void @free_candy_value(ptr %2787)
  %2788 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.240, align 8
  call void @free_candy_value(ptr %2788)
  %2789 = load ptr, ptr @100, align 8
  call void @free_candy_value(ptr %2789)
  %2790 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.242, align 8
  call void @free_candy_value(ptr %2790)
  %2791 = load ptr, ptr @101, align 8
  call void @free_candy_value(ptr %2791)
  %2792 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_matched, align 8
  call void @free_candy_value(ptr %2792)
  %2793 = load ptr, ptr @tag_Ok.243, align 8
  call void @free_candy_value(ptr %2793)
  %2794 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2794)
  %2795 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  call void @free_candy_value(ptr %2795)
  %2796 = load ptr, ptr @fun_Core_iterator_sum, align 8
  call void @free_candy_value(ptr %2796)
  %2797 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  call void @free_candy_value(ptr %2797)
  %2798 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  call void @free_candy_value(ptr %2798)
  %2799 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  call void @free_candy_value(ptr %2799)
  %2800 = load ptr, ptr @fun_Core_iterator_all, align 8
  call void @free_candy_value(ptr %2800)
  %2801 = load ptr, ptr @fun_Core_iterator_all_12, align 8
  call void @free_candy_value(ptr %2801)
  %2802 = load ptr, ptr @fun_Core_iterator_all_16, align 8
  call void @free_candy_value(ptr %2802)
  %2803 = load ptr, ptr @fun_Core_bool_and_12, align 8
  call void @free_candy_value(ptr %2803)
  %2804 = load ptr, ptr @fun_Core_iterator_any, align 8
  call void @free_candy_value(ptr %2804)
  %2805 = load ptr, ptr @fun_Core_iterator_any_12, align 8
  call void @free_candy_value(ptr %2805)
  %2806 = load ptr, ptr @fun_Core_iterator_any_16, align 8
  call void @free_candy_value(ptr %2806)
  %2807 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %2807)
  %2808 = load ptr, ptr @fun_Core_iterator_joinToText, align 8
  call void @free_candy_value(ptr %2808)
  %2809 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  call void @free_candy_value(ptr %2809)
  %2810 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  call void @free_candy_value(ptr %2810)
  %2811 = load ptr, ptr @fun_Core_iterator_where, align 8
  call void @free_candy_value(ptr %2811)
  %2812 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  call void @free_candy_value(ptr %2812)
  %2813 = load ptr, ptr @fun_Core_iterator_where_17, align 8
  call void @free_candy_value(ptr %2813)
  %2814 = load ptr, ptr @fun_Core_iterator_where_17_2, align 8
  call void @free_candy_value(ptr %2814)
  %2815 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else, align 8
  call void @free_candy_value(ptr %2815)
  %2816 = load ptr, ptr @102, align 8
  call void @free_candy_value(ptr %2816)
  %2817 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2817)
  %2818 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then, align 8
  call void @free_candy_value(ptr %2818)
  %2819 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.245, align 8
  call void @free_candy_value(ptr %2819)
  %2820 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.247, align 8
  call void @free_candy_value(ptr %2820)
  %2821 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.249, align 8
  call void @free_candy_value(ptr %2821)
  %2822 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then, align 8
  call void @free_candy_value(ptr %2822)
  %2823 = load ptr, ptr @103, align 8
  call void @free_candy_value(ptr %2823)
  %2824 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else, align 8
  call void @free_candy_value(ptr %2824)
  %2825 = load ptr, ptr @104, align 8
  call void @free_candy_value(ptr %2825)
  %2826 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then, align 8
  call void @free_candy_value(ptr %2826)
  %2827 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then.251, align 8
  call void @free_candy_value(ptr %2827)
  %2828 = load ptr, ptr @105, align 8
  call void @free_candy_value(ptr %2828)
  %2829 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else.253, align 8
  call void @free_candy_value(ptr %2829)
  %2830 = load ptr, ptr @106, align 8
  call void @free_candy_value(ptr %2830)
  %2831 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then.255, align 8
  call void @free_candy_value(ptr %2831)
  %2832 = load ptr, ptr @107, align 8
  call void @free_candy_value(ptr %2832)
  %2833 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else, align 8
  call void @free_candy_value(ptr %2833)
  %2834 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else.257, align 8
  call void @free_candy_value(ptr %2834)
  %2835 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.259, align 8
  call void @free_candy_value(ptr %2835)
  %2836 = load ptr, ptr @108, align 8
  call void @free_candy_value(ptr %2836)
  %2837 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.261, align 8
  call void @free_candy_value(ptr %2837)
  %2838 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.263, align 8
  call void @free_candy_value(ptr %2838)
  %2839 = load ptr, ptr @109, align 8
  call void @free_candy_value(ptr %2839)
  %2840 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.265, align 8
  call void @free_candy_value(ptr %2840)
  %2841 = load ptr, ptr @110, align 8
  call void @free_candy_value(ptr %2841)
  %2842 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_matched, align 8
  call void @free_candy_value(ptr %2842)
  %2843 = load ptr, ptr @fun_Core_iterator_where_17_2_3_5, align 8
  call void @free_candy_value(ptr %2843)
  %2844 = load ptr, ptr @tag_More.266, align 8
  call void @free_candy_value(ptr %2844)
  %2845 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6, align 8
  call void @free_candy_value(ptr %2845)
  %2846 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else, align 8
  call void @free_candy_value(ptr %2846)
  %2847 = load ptr, ptr @111, align 8
  call void @free_candy_value(ptr %2847)
  %2848 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2848)
  %2849 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then, align 8
  call void @free_candy_value(ptr %2849)
  %2850 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.268, align 8
  call void @free_candy_value(ptr %2850)
  %2851 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.270, align 8
  call void @free_candy_value(ptr %2851)
  %2852 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.272, align 8
  call void @free_candy_value(ptr %2852)
  %2853 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then, align 8
  call void @free_candy_value(ptr %2853)
  %2854 = load ptr, ptr @112, align 8
  call void @free_candy_value(ptr %2854)
  %2855 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else, align 8
  call void @free_candy_value(ptr %2855)
  %2856 = load ptr, ptr @113, align 8
  call void @free_candy_value(ptr %2856)
  %2857 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then, align 8
  call void @free_candy_value(ptr %2857)
  %2858 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then.274, align 8
  call void @free_candy_value(ptr %2858)
  %2859 = load ptr, ptr @114, align 8
  call void @free_candy_value(ptr %2859)
  %2860 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else.276, align 8
  call void @free_candy_value(ptr %2860)
  %2861 = load ptr, ptr @115, align 8
  call void @free_candy_value(ptr %2861)
  %2862 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then.278, align 8
  call void @free_candy_value(ptr %2862)
  %2863 = load ptr, ptr @116, align 8
  call void @free_candy_value(ptr %2863)
  %2864 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else, align 8
  call void @free_candy_value(ptr %2864)
  %2865 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else.280, align 8
  call void @free_candy_value(ptr %2865)
  %2866 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.282, align 8
  call void @free_candy_value(ptr %2866)
  %2867 = load ptr, ptr @117, align 8
  call void @free_candy_value(ptr %2867)
  %2868 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.284, align 8
  call void @free_candy_value(ptr %2868)
  %2869 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.286, align 8
  call void @free_candy_value(ptr %2869)
  %2870 = load ptr, ptr @118, align 8
  call void @free_candy_value(ptr %2870)
  %2871 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.288, align 8
  call void @free_candy_value(ptr %2871)
  %2872 = load ptr, ptr @119, align 8
  call void @free_candy_value(ptr %2872)
  %2873 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_matched, align 8
  call void @free_candy_value(ptr %2873)
  %2874 = load ptr, ptr @tag_More.289, align 8
  call void @free_candy_value(ptr %2874)
  %2875 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2875)
  %2876 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2876)
  %2877 = load ptr, ptr @fun_Core_controlFlow_recursive_16.291, align 8
  call void @free_candy_value(ptr %2877)
  %2878 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.293, align 8
  call void @free_candy_value(ptr %2878)
  %2879 = load ptr, ptr @fun_Core_iterator_takeWhile, align 8
  call void @free_candy_value(ptr %2879)
  %2880 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  call void @free_candy_value(ptr %2880)
  %2881 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  call void @free_candy_value(ptr %2881)
  %2882 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  call void @free_candy_value(ptr %2882)
  %2883 = load ptr, ptr @120, align 8
  call void @free_candy_value(ptr %2883)
  %2884 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2884)
  %2885 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  call void @free_candy_value(ptr %2885)
  %2886 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.295, align 8
  call void @free_candy_value(ptr %2886)
  %2887 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.297, align 8
  call void @free_candy_value(ptr %2887)
  %2888 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.299, align 8
  call void @free_candy_value(ptr %2888)
  %2889 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  call void @free_candy_value(ptr %2889)
  %2890 = load ptr, ptr @121, align 8
  call void @free_candy_value(ptr %2890)
  %2891 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  call void @free_candy_value(ptr %2891)
  %2892 = load ptr, ptr @122, align 8
  call void @free_candy_value(ptr %2892)
  %2893 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  call void @free_candy_value(ptr %2893)
  %2894 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.301, align 8
  call void @free_candy_value(ptr %2894)
  %2895 = load ptr, ptr @123, align 8
  call void @free_candy_value(ptr %2895)
  %2896 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.303, align 8
  call void @free_candy_value(ptr %2896)
  %2897 = load ptr, ptr @124, align 8
  call void @free_candy_value(ptr %2897)
  %2898 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.305, align 8
  call void @free_candy_value(ptr %2898)
  %2899 = load ptr, ptr @125, align 8
  call void @free_candy_value(ptr %2899)
  %2900 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  call void @free_candy_value(ptr %2900)
  %2901 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.307, align 8
  call void @free_candy_value(ptr %2901)
  %2902 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.309, align 8
  call void @free_candy_value(ptr %2902)
  %2903 = load ptr, ptr @126, align 8
  call void @free_candy_value(ptr %2903)
  %2904 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.311, align 8
  call void @free_candy_value(ptr %2904)
  %2905 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.313, align 8
  call void @free_candy_value(ptr %2905)
  %2906 = load ptr, ptr @127, align 8
  call void @free_candy_value(ptr %2906)
  %2907 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.315, align 8
  call void @free_candy_value(ptr %2907)
  %2908 = load ptr, ptr @128, align 8
  call void @free_candy_value(ptr %2908)
  %2909 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  call void @free_candy_value(ptr %2909)
  %2910 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  call void @free_candy_value(ptr %2910)
  %2911 = load ptr, ptr @tag_More.316, align 8
  call void @free_candy_value(ptr %2911)
  %2912 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2912)
  %2913 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  call void @free_candy_value(ptr %2913)
  %2914 = load ptr, ptr @fun_Core_iterator_take_30, align 8
  call void @free_candy_value(ptr %2914)
  %2915 = load ptr, ptr @fun_Core_iterator_take, align 8
  call void @free_candy_value(ptr %2915)
  %2916 = load ptr, ptr @fun_Core_iterator_take_22, align 8
  call void @free_candy_value(ptr %2916)
  %2917 = load ptr, ptr @fun_Core_iterator_take_27, align 8
  call void @free_candy_value(ptr %2917)
  %2918 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then, align 8
  call void @free_candy_value(ptr %2918)
  %2919 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then, align 8
  call void @free_candy_value(ptr %2919)
  %2920 = load ptr, ptr @129, align 8
  call void @free_candy_value(ptr %2920)
  %2921 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else, align 8
  call void @free_candy_value(ptr %2921)
  %2922 = load ptr, ptr @130, align 8
  call void @free_candy_value(ptr %2922)
  %2923 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2923)
  %2924 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.318, align 8
  call void @free_candy_value(ptr %2924)
  %2925 = load ptr, ptr @131, align 8
  call void @free_candy_value(ptr %2925)
  %2926 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.320, align 8
  call void @free_candy_value(ptr %2926)
  %2927 = load ptr, ptr @132, align 8
  call void @free_candy_value(ptr %2927)
  %2928 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.322, align 8
  call void @free_candy_value(ptr %2928)
  %2929 = load ptr, ptr @133, align 8
  call void @free_candy_value(ptr %2929)
  %2930 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2930)
  %2931 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.324, align 8
  call void @free_candy_value(ptr %2931)
  %2932 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else, align 8
  call void @free_candy_value(ptr %2932)
  %2933 = load ptr, ptr @134, align 8
  call void @free_candy_value(ptr %2933)
  %2934 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.326, align 8
  call void @free_candy_value(ptr %2934)
  %2935 = load ptr, ptr @fun_Core_iterator_skip_26_6, align 8
  call void @free_candy_value(ptr %2935)
  %2936 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_then, align 8
  call void @free_candy_value(ptr %2936)
  %2937 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then, align 8
  call void @free_candy_value(ptr %2937)
  %2938 = load ptr, ptr @135, align 8
  call void @free_candy_value(ptr %2938)
  %2939 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else, align 8
  call void @free_candy_value(ptr %2939)
  %2940 = load ptr, ptr @136, align 8
  call void @free_candy_value(ptr %2940)
  %2941 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2941)
  %2942 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then.328, align 8
  call void @free_candy_value(ptr %2942)
  %2943 = load ptr, ptr @137, align 8
  call void @free_candy_value(ptr %2943)
  %2944 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else.330, align 8
  call void @free_candy_value(ptr %2944)
  %2945 = load ptr, ptr @138, align 8
  call void @free_candy_value(ptr %2945)
  %2946 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then.332, align 8
  call void @free_candy_value(ptr %2946)
  %2947 = load ptr, ptr @139, align 8
  call void @free_candy_value(ptr %2947)
  %2948 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2948)
  %2949 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.334, align 8
  call void @free_candy_value(ptr %2949)
  %2950 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_else, align 8
  call void @free_candy_value(ptr %2950)
  %2951 = load ptr, ptr @140, align 8
  call void @free_candy_value(ptr %2951)
  %2952 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.336, align 8
  call void @free_candy_value(ptr %2952)
  %2953 = load ptr, ptr @fun_Core_iterator_skip_26_6_7, align 8
  call void @free_candy_value(ptr %2953)
  %2954 = load ptr, ptr @fun_Core_iterator_skip_26_6_8, align 8
  call void @free_candy_value(ptr %2954)
  %2955 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else, align 8
  call void @free_candy_value(ptr %2955)
  %2956 = load ptr, ptr @141, align 8
  call void @free_candy_value(ptr %2956)
  %2957 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2957)
  %2958 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then, align 8
  call void @free_candy_value(ptr %2958)
  %2959 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.338, align 8
  call void @free_candy_value(ptr %2959)
  %2960 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.340, align 8
  call void @free_candy_value(ptr %2960)
  %2961 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.342, align 8
  call void @free_candy_value(ptr %2961)
  %2962 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_then, align 8
  call void @free_candy_value(ptr %2962)
  %2963 = load ptr, ptr @142, align 8
  call void @free_candy_value(ptr %2963)
  %2964 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_else, align 8
  call void @free_candy_value(ptr %2964)
  %2965 = load ptr, ptr @143, align 8
  call void @free_candy_value(ptr %2965)
  %2966 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_then, align 8
  call void @free_candy_value(ptr %2966)
  %2967 = load ptr, ptr @144, align 8
  call void @free_candy_value(ptr %2967)
  %2968 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_else, align 8
  call void @free_candy_value(ptr %2968)
  %2969 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.344, align 8
  call void @free_candy_value(ptr %2969)
  %2970 = load ptr, ptr @145, align 8
  call void @free_candy_value(ptr %2970)
  %2971 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.346, align 8
  call void @free_candy_value(ptr %2971)
  %2972 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.348, align 8
  call void @free_candy_value(ptr %2972)
  %2973 = load ptr, ptr @146, align 8
  call void @free_candy_value(ptr %2973)
  %2974 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.350, align 8
  call void @free_candy_value(ptr %2974)
  %2975 = load ptr, ptr @147, align 8
  call void @free_candy_value(ptr %2975)
  %2976 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_matched, align 8
  call void @free_candy_value(ptr %2976)
  %2977 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2977)
  %2978 = load ptr, ptr @fun_Core_controlFlow_recursive_16.352, align 8
  call void @free_candy_value(ptr %2978)
  %2979 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.354, align 8
  call void @free_candy_value(ptr %2979)
  %2980 = load ptr, ptr @fun_Core_iterator_skip, align 8
  call void @free_candy_value(ptr %2980)
  %2981 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  call void @free_candy_value(ptr %2981)
  %2982 = load ptr, ptr @fun_Core_iterator_skip_26, align 8
  call void @free_candy_value(ptr %2982)
  %2983 = load ptr, ptr @tag_Iterator.355, align 8
  call void @free_candy_value(ptr %2983)
  %2984 = load ptr, ptr @fun_Core_iterator_fromList, align 8
  call void @free_candy_value(ptr %2984)
  %2985 = load ptr, ptr @fun_Core_iterator_fromList_19, align 8
  call void @free_candy_value(ptr %2985)
  %2986 = load ptr, ptr @148, align 8
  call void @free_candy_value(ptr %2986)
  %2987 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  call void @free_candy_value(ptr %2987)
  %2988 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  call void @free_candy_value(ptr %2988)
  %2989 = load ptr, ptr @fun_Core_iterator_windowed, align 8
  call void @free_candy_value(ptr %2989)
  %2990 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  call void @free_candy_value(ptr %2990)
  %2991 = load ptr, ptr @fun_Core_iterator_windowed_57, align 8
  call void @free_candy_value(ptr %2991)
  %2992 = load ptr, ptr @fun_Core_iterator_windowed_57_18, align 8
  call void @free_candy_value(ptr %2992)
  %2993 = load ptr, ptr @fun_Core_iterator_windowed_57_19, align 8
  call void @free_candy_value(ptr %2993)
  %2994 = load ptr, ptr @fun_Core_iterator_windowed_57_24, align 8
  call void @free_candy_value(ptr %2994)
  %2995 = load ptr, ptr @tag_More.356, align 8
  call void @free_candy_value(ptr %2995)
  %2996 = load ptr, ptr @fun_Core_iterator_chunked, align 8
  call void @free_candy_value(ptr %2996)
  %2997 = load ptr, ptr @fun_Core_iterator_chunked_22, align 8
  call void @free_candy_value(ptr %2997)
  %2998 = load ptr, ptr @149, align 8
  call void @free_candy_value(ptr %2998)
  %2999 = load ptr, ptr @num_6, align 8
  call void @free_candy_value(ptr %2999)
  %3000 = load ptr, ptr @num_7, align 8
  call void @free_candy_value(ptr %3000)
  %3001 = load ptr, ptr @num_8, align 8
  call void @free_candy_value(ptr %3001)
  %3002 = load ptr, ptr @num_9, align 8
  call void @free_candy_value(ptr %3002)
  %3003 = load ptr, ptr @150, align 8
  call void @free_candy_value(ptr %3003)
  %3004 = load ptr, ptr @"Core:iterator:125", align 8
  call void @free_candy_value(ptr %3004)
  %3005 = load ptr, ptr @"Core:iterator:129", align 8
  call void @free_candy_value(ptr %3005)
  %3006 = load ptr, ptr @"Core:iterator:130", align 8
  call void @free_candy_value(ptr %3006)
  %3007 = load ptr, ptr @fun_Core_iterator_130_equals_then, align 8
  call void @free_candy_value(ptr %3007)
  %3008 = load ptr, ptr @fun_Core_iterator_130_equals_then.358, align 8
  call void @free_candy_value(ptr %3008)
  %3009 = load ptr, ptr @fun_Core_iterator_130_equals_then.360, align 8
  call void @free_candy_value(ptr %3009)
  %3010 = load ptr, ptr @fun_Core_iterator_130_equals_then.362, align 8
  call void @free_candy_value(ptr %3010)
  %3011 = load ptr, ptr @fun_Core_iterator_130_hasKey_then, align 8
  call void @free_candy_value(ptr %3011)
  %3012 = load ptr, ptr @151, align 8
  call void @free_candy_value(ptr %3012)
  %3013 = load ptr, ptr @fun_Core_iterator_130_hasKey_else, align 8
  call void @free_candy_value(ptr %3013)
  %3014 = load ptr, ptr @152, align 8
  call void @free_candy_value(ptr %3014)
  %3015 = load ptr, ptr @fun_Core_iterator_130_isMatch_then, align 8
  call void @free_candy_value(ptr %3015)
  %3016 = load ptr, ptr @fun_Core_iterator_130_hasKey_then.364, align 8
  call void @free_candy_value(ptr %3016)
  %3017 = load ptr, ptr @153, align 8
  call void @free_candy_value(ptr %3017)
  %3018 = load ptr, ptr @fun_Core_iterator_130_hasKey_else.366, align 8
  call void @free_candy_value(ptr %3018)
  %3019 = load ptr, ptr @154, align 8
  call void @free_candy_value(ptr %3019)
  %3020 = load ptr, ptr @fun_Core_iterator_130_isMatch_then.368, align 8
  call void @free_candy_value(ptr %3020)
  %3021 = load ptr, ptr @155, align 8
  call void @free_candy_value(ptr %3021)
  %3022 = load ptr, ptr @fun_Core_iterator_130_isMatch_else, align 8
  call void @free_candy_value(ptr %3022)
  %3023 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.370, align 8
  call void @free_candy_value(ptr %3023)
  %3024 = load ptr, ptr @fun_Core_iterator_130_equals_else, align 8
  call void @free_candy_value(ptr %3024)
  %3025 = load ptr, ptr @156, align 8
  call void @free_candy_value(ptr %3025)
  %3026 = load ptr, ptr @fun_Core_iterator_130_equals_else.372, align 8
  call void @free_candy_value(ptr %3026)
  %3027 = load ptr, ptr @fun_Core_iterator_130_equals_else.374, align 8
  call void @free_candy_value(ptr %3027)
  %3028 = load ptr, ptr @157, align 8
  call void @free_candy_value(ptr %3028)
  %3029 = load ptr, ptr @fun_Core_iterator_130_equals_else.376, align 8
  call void @free_candy_value(ptr %3029)
  %3030 = load ptr, ptr @158, align 8
  call void @free_candy_value(ptr %3030)
  %3031 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.378, align 8
  call void @free_candy_value(ptr %3031)
  %3032 = load ptr, ptr @"Core:iterator:item", align 8
  call void @free_candy_value(ptr %3032)
  %3033 = load ptr, ptr @"Core:iterator:rest", align 8
  call void @free_candy_value(ptr %3033)
  %3034 = load ptr, ptr @"Core:iterator:135", align 8
  call void @free_candy_value(ptr %3034)
  %3035 = load ptr, ptr @"Core:iterator:138", align 8
  call void @free_candy_value(ptr %3035)
  %3036 = load ptr, ptr @"Core:iterator:139", align 8
  call void @free_candy_value(ptr %3036)
  %3037 = load ptr, ptr @fun_Core_iterator_139_equals_then, align 8
  call void @free_candy_value(ptr %3037)
  %3038 = load ptr, ptr @fun_Core_iterator_139_equals_then.380, align 8
  call void @free_candy_value(ptr %3038)
  %3039 = load ptr, ptr @fun_Core_iterator_139_equals_then.382, align 8
  call void @free_candy_value(ptr %3039)
  %3040 = load ptr, ptr @fun_Core_iterator_139_equals_then.384, align 8
  call void @free_candy_value(ptr %3040)
  %3041 = load ptr, ptr @fun_Core_iterator_139_hasKey_then, align 8
  call void @free_candy_value(ptr %3041)
  %3042 = load ptr, ptr @159, align 8
  call void @free_candy_value(ptr %3042)
  %3043 = load ptr, ptr @fun_Core_iterator_139_hasKey_else, align 8
  call void @free_candy_value(ptr %3043)
  %3044 = load ptr, ptr @160, align 8
  call void @free_candy_value(ptr %3044)
  %3045 = load ptr, ptr @fun_Core_iterator_139_isMatch_then, align 8
  call void @free_candy_value(ptr %3045)
  %3046 = load ptr, ptr @fun_Core_iterator_139_hasKey_then.386, align 8
  call void @free_candy_value(ptr %3046)
  %3047 = load ptr, ptr @161, align 8
  call void @free_candy_value(ptr %3047)
  %3048 = load ptr, ptr @fun_Core_iterator_139_hasKey_else.388, align 8
  call void @free_candy_value(ptr %3048)
  %3049 = load ptr, ptr @162, align 8
  call void @free_candy_value(ptr %3049)
  %3050 = load ptr, ptr @fun_Core_iterator_139_isMatch_then.390, align 8
  call void @free_candy_value(ptr %3050)
  %3051 = load ptr, ptr @163, align 8
  call void @free_candy_value(ptr %3051)
  %3052 = load ptr, ptr @fun_Core_iterator_139_isMatch_else, align 8
  call void @free_candy_value(ptr %3052)
  %3053 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.392, align 8
  call void @free_candy_value(ptr %3053)
  %3054 = load ptr, ptr @fun_Core_iterator_139_equals_else, align 8
  call void @free_candy_value(ptr %3054)
  %3055 = load ptr, ptr @164, align 8
  call void @free_candy_value(ptr %3055)
  %3056 = load ptr, ptr @fun_Core_iterator_139_equals_else.394, align 8
  call void @free_candy_value(ptr %3056)
  %3057 = load ptr, ptr @fun_Core_iterator_139_equals_else.396, align 8
  call void @free_candy_value(ptr %3057)
  %3058 = load ptr, ptr @165, align 8
  call void @free_candy_value(ptr %3058)
  %3059 = load ptr, ptr @fun_Core_iterator_139_equals_else.398, align 8
  call void @free_candy_value(ptr %3059)
  %3060 = load ptr, ptr @166, align 8
  call void @free_candy_value(ptr %3060)
  %3061 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.400, align 8
  call void @free_candy_value(ptr %3061)
  %3062 = load ptr, ptr @"Core:iterator:item#1", align 8
  call void @free_candy_value(ptr %3062)
  %3063 = load ptr, ptr @"Core:iterator:rest#1", align 8
  call void @free_candy_value(ptr %3063)
  %3064 = load ptr, ptr @"Core:iterator:144", align 8
  call void @free_candy_value(ptr %3064)
  %3065 = load ptr, ptr @"Core:iterator:149", align 8
  call void @free_candy_value(ptr %3065)
  %3066 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  call void @free_candy_value(ptr %3066)
  %3067 = load ptr, ptr @"Core:iterator:151", align 8
  call void @free_candy_value(ptr %3067)
  %3068 = load ptr, ptr @"Core:iterator:156", align 8
  call void @free_candy_value(ptr %3068)
  %3069 = load ptr, ptr @"Core:iterator:157", align 8
  call void @free_candy_value(ptr %3069)
  %3070 = load ptr, ptr @fun_Core_iterator_isEmpty_2.402, align 8
  call void @free_candy_value(ptr %3070)
  %3071 = load ptr, ptr @"Core:iterator:159", align 8
  call void @free_candy_value(ptr %3071)
  %3072 = load ptr, ptr @"Core:iterator:163:8", align 8
  call void @free_candy_value(ptr %3072)
  %3073 = load ptr, ptr @fun_Core_iterator_163, align 8
  call void @free_candy_value(ptr %3073)
  %3074 = load ptr, ptr @"Core:iterator:164", align 8
  call void @free_candy_value(ptr %3074)
  %3075 = load ptr, ptr @"Core:iterator:166", align 8
  call void @free_candy_value(ptr %3075)
  %3076 = load ptr, ptr @fun_Core_iterator_toList_2.404, align 8
  call void @free_candy_value(ptr %3076)
  %3077 = load ptr, ptr @167, align 8
  call void @free_candy_value(ptr %3077)
  %3078 = load ptr, ptr @"Core:iterator:171", align 8
  call void @free_candy_value(ptr %3078)
  %3079 = load ptr, ptr @"Core:iterator:175", align 8
  call void @free_candy_value(ptr %3079)
  %3080 = load ptr, ptr @"Core:iterator:177", align 8
  call void @free_candy_value(ptr %3080)
  %3081 = load ptr, ptr @"Core:iterator:181", align 8
  call void @free_candy_value(ptr %3081)
  %3082 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  call void @free_candy_value(ptr %3082)
  %3083 = load ptr, ptr @"Core:iterator:183", align 8
  call void @free_candy_value(ptr %3083)
  %3084 = load ptr, ptr @"Core:iterator:187:7", align 8
  call void @free_candy_value(ptr %3084)
  %3085 = load ptr, ptr @fun_Core_iterator_187, align 8
  call void @free_candy_value(ptr %3085)
  %3086 = load ptr, ptr @"Core:iterator:188", align 8
  call void @free_candy_value(ptr %3086)
  %3087 = load ptr, ptr @"Core:iterator:190", align 8
  call void @free_candy_value(ptr %3087)
  %3088 = load ptr, ptr @fun_Core_iterator_194, align 8
  call void @free_candy_value(ptr %3088)
  %3089 = load ptr, ptr @"Core:iterator:195", align 8
  call void @free_candy_value(ptr %3089)
  %3090 = load ptr, ptr @"Core:iterator:197", align 8
  call void @free_candy_value(ptr %3090)
  %3091 = load ptr, ptr @"Core:iterator:202", align 8
  call void @free_candy_value(ptr %3091)
  %3092 = load ptr, ptr @"Core:iterator:204", align 8
  call void @free_candy_value(ptr %3092)
  %3093 = load ptr, ptr @text_123, align 8
  call void @free_candy_value(ptr %3093)
  %3094 = load ptr, ptr @"Core:iterator:212", align 8
  call void @free_candy_value(ptr %3094)
  %3095 = load ptr, ptr @"Core:iterator:216:7", align 8
  call void @free_candy_value(ptr %3095)
  %3096 = load ptr, ptr @fun_Core_iterator_216, align 8
  call void @free_candy_value(ptr %3096)
  %3097 = load ptr, ptr @"Core:iterator:217", align 8
  call void @free_candy_value(ptr %3097)
  %3098 = load ptr, ptr @"Core:iterator:219", align 8
  call void @free_candy_value(ptr %3098)
  %3099 = load ptr, ptr @fun_Core_iterator_toList_2.406, align 8
  call void @free_candy_value(ptr %3099)
  %3100 = load ptr, ptr @168, align 8
  call void @free_candy_value(ptr %3100)
  %3101 = load ptr, ptr @"Core:iterator:226", align 8
  call void @free_candy_value(ptr %3101)
  %3102 = load ptr, ptr @"Core:iterator:230:8", align 8
  call void @free_candy_value(ptr %3102)
  %3103 = load ptr, ptr @fun_Core_iterator_230, align 8
  call void @free_candy_value(ptr %3103)
  %3104 = load ptr, ptr @"Core:iterator:231", align 8
  call void @free_candy_value(ptr %3104)
  %3105 = load ptr, ptr @"Core:iterator:233", align 8
  call void @free_candy_value(ptr %3105)
  %3106 = load ptr, ptr @fun_Core_iterator_toList_2.408, align 8
  call void @free_candy_value(ptr %3106)
  %3107 = load ptr, ptr @"Core:iterator:238", align 8
  call void @free_candy_value(ptr %3107)
  %3108 = load ptr, ptr @"Core:iterator:243", align 8
  call void @free_candy_value(ptr %3108)
  %3109 = load ptr, ptr @"Core:iterator:245", align 8
  call void @free_candy_value(ptr %3109)
  %3110 = load ptr, ptr @fun_Core_iterator_toList_2.410, align 8
  call void @free_candy_value(ptr %3110)
  %3111 = load ptr, ptr @169, align 8
  call void @free_candy_value(ptr %3111)
  %3112 = load ptr, ptr @"Core:iterator:251", align 8
  call void @free_candy_value(ptr %3112)
  %3113 = load ptr, ptr @num_12, align 8
  call void @free_candy_value(ptr %3113)
  %3114 = load ptr, ptr @"Core:iterator:256", align 8
  call void @free_candy_value(ptr %3114)
  %3115 = load ptr, ptr @"Core:iterator:258", align 8
  call void @free_candy_value(ptr %3115)
  %3116 = load ptr, ptr @fun_Core_iterator_toList_2.412, align 8
  call void @free_candy_value(ptr %3116)
  %3117 = load ptr, ptr @"Core:iterator:270", align 8
  call void @free_candy_value(ptr %3117)
  %3118 = load ptr, ptr @"Core:iterator:275", align 8
  call void @free_candy_value(ptr %3118)
  %3119 = load ptr, ptr @"Core:iterator:277", align 8
  call void @free_candy_value(ptr %3119)
  %3120 = load ptr, ptr @fun_Core_iterator_toList_2.414, align 8
  call void @free_candy_value(ptr %3120)
  %3121 = load ptr, ptr @170, align 8
  call void @free_candy_value(ptr %3121)
  %3122 = load ptr, ptr @"Core:iterator:285", align 8
  call void @free_candy_value(ptr %3122)
  %3123 = load ptr, ptr @num_40, align 8
  call void @free_candy_value(ptr %3123)
  %3124 = load ptr, ptr @"Core:iterator:290", align 8
  call void @free_candy_value(ptr %3124)
  %3125 = load ptr, ptr @"Core:iterator:292", align 8
  call void @free_candy_value(ptr %3125)
  %3126 = load ptr, ptr @fun_Core_iterator_toList_2.416, align 8
  call void @free_candy_value(ptr %3126)
  %3127 = load ptr, ptr @"Core:iterator:294", align 8
  call void @free_candy_value(ptr %3127)
  %3128 = load ptr, ptr @"Core:iterator:301", align 8
  call void @free_candy_value(ptr %3128)
  %3129 = load ptr, ptr @"Core:iterator:303", align 8
  call void @free_candy_value(ptr %3129)
  %3130 = load ptr, ptr @fun_Core_iterator_toList_2.418, align 8
  call void @free_candy_value(ptr %3130)
  %3131 = load ptr, ptr @171, align 8
  call void @free_candy_value(ptr %3131)
  %3132 = load ptr, ptr @172, align 8
  call void @free_candy_value(ptr %3132)
  %3133 = load ptr, ptr @173, align 8
  call void @free_candy_value(ptr %3133)
  %3134 = load ptr, ptr @"Core:iterator:320", align 8
  call void @free_candy_value(ptr %3134)
  %3135 = load ptr, ptr @"Core:iterator:325", align 8
  call void @free_candy_value(ptr %3135)
  %3136 = load ptr, ptr @"Core:iterator:327", align 8
  call void @free_candy_value(ptr %3136)
  %3137 = load ptr, ptr @fun_Core_iterator_toList_2.420, align 8
  call void @free_candy_value(ptr %3137)
  %3138 = load ptr, ptr @174, align 8
  call void @free_candy_value(ptr %3138)
  %3139 = load ptr, ptr @175, align 8
  call void @free_candy_value(ptr %3139)
  %3140 = load ptr, ptr @176, align 8
  call void @free_candy_value(ptr %3140)
  %3141 = load ptr, ptr @177, align 8
  call void @free_candy_value(ptr %3141)
  %3142 = load ptr, ptr @"Core:iterator:343", align 8
  call void @free_candy_value(ptr %3142)
  %3143 = load ptr, ptr @"Core:result:flatMap:12", align 8
  call void @free_candy_value(ptr %3143)
  %3144 = load ptr, ptr @"Core:result:flatMap:14", align 8
  call void @free_candy_value(ptr %3144)
  %3145 = load ptr, ptr @"Core:result:flatMap:17:2", align 8
  call void @free_candy_value(ptr %3145)
  %3146 = load ptr, ptr @"Core:result:flatMap:19", align 8
  call void @free_candy_value(ptr %3146)
  %3147 = load ptr, ptr @"Core:result:flatMap:2", align 8
  call void @free_candy_value(ptr %3147)
  %3148 = load ptr, ptr @"Core:result:flatMap:4", align 8
  call void @free_candy_value(ptr %3148)
  %3149 = load ptr, ptr @"Core:result:getValue:12", align 8
  call void @free_candy_value(ptr %3149)
  %3150 = load ptr, ptr @"Core:result:getValue:2", align 8
  call void @free_candy_value(ptr %3150)
  %3151 = load ptr, ptr @"Core:result:getValue:4", align 8
  call void @free_candy_value(ptr %3151)
  %3152 = load ptr, ptr @"Core:result:map:12", align 8
  call void @free_candy_value(ptr %3152)
  %3153 = load ptr, ptr @"Core:result:map:14", align 8
  call void @free_candy_value(ptr %3153)
  %3154 = load ptr, ptr @"Core:result:map:17:3", align 8
  call void @free_candy_value(ptr %3154)
  %3155 = load ptr, ptr @"Core:result:map:18", align 8
  call void @free_candy_value(ptr %3155)
  %3156 = load ptr, ptr @"Core:result:map:2", align 8
  call void @free_candy_value(ptr %3156)
  %3157 = load ptr, ptr @"Core:result:map:4", align 8
  call void @free_candy_value(ptr %3157)
  %3158 = load ptr, ptr @"Core:result:mapOr:12", align 8
  call void @free_candy_value(ptr %3158)
  %3159 = load ptr, ptr @"Core:result:mapOr:14", align 8
  call void @free_candy_value(ptr %3159)
  %3160 = load ptr, ptr @"Core:result:mapOr:19", align 8
  call void @free_candy_value(ptr %3160)
  %3161 = load ptr, ptr @"Core:result:mapOr:2", align 8
  call void @free_candy_value(ptr %3161)
  %3162 = load ptr, ptr @"Core:result:mapOr:4", align 8
  call void @free_candy_value(ptr %3162)
  %3163 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  call void @free_candy_value(ptr %3163)
  %3164 = load ptr, ptr @"text_Expected a List, got `", align 8
  call void @free_candy_value(ptr %3164)
  %3165 = load ptr, ptr @fun_Core_result_getValue, align 8
  call void @free_candy_value(ptr %3165)
  %3166 = load ptr, ptr @fun_Core_result_flatMap, align 8
  call void @free_candy_value(ptr %3166)
  %3167 = load ptr, ptr @fun_Core_result_flatMap_17, align 8
  call void @free_candy_value(ptr %3167)
  %3168 = load ptr, ptr @fun_Core_result_mapOr_18, align 8
  call void @free_candy_value(ptr %3168)
  %3169 = load ptr, ptr @fun_Core_result_map, align 8
  call void @free_candy_value(ptr %3169)
  %3170 = load ptr, ptr @fun_Core_result_map_17, align 8
  call void @free_candy_value(ptr %3170)
  %3171 = load ptr, ptr @tag_Ok.421, align 8
  call void @free_candy_value(ptr %3171)
  %3172 = load ptr, ptr @"Examples:fibonacci:recursive:0:0:3", align 8
  call void @free_candy_value(ptr %3172)
  %3173 = load ptr, ptr @"Examples:fibonacci:recursive:0:5", align 8
  call void @free_candy_value(ptr %3173)
  %3174 = load ptr, ptr @"Examples:fibonacci:recursive:5", align 8
  call void @free_candy_value(ptr %3174)
  %3175 = load ptr, ptr @"Examples:fibonacci:compareTo:8", align 8
  call void @free_candy_value(ptr %3175)
  %3176 = load ptr, ptr @fun_Examples_fibonacci_isLessThan, align 8
  call void @free_candy_value(ptr %3176)
  %3177 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:9", align 8
  call void @free_candy_value(ptr %3177)
  %3178 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:9", align 8
  call void @free_candy_value(ptr %3178)
  %3179 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:10", align 8
  call void @free_candy_value(ptr %3179)
  %3180 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:26", align 8
  call void @free_candy_value(ptr %3180)
  %3181 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:27", align 8
  call void @free_candy_value(ptr %3181)
  %3182 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:28", align 8
  call void @free_candy_value(ptr %3182)
  %3183 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:12", align 8
  call void @free_candy_value(ptr %3183)
  %3184 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2, align 8
  call void @free_candy_value(ptr %3184)
  %3185 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_10, align 8
  call void @free_candy_value(ptr %3185)
  %3186 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_11, align 8
  call void @free_candy_value(ptr %3186)
  %3187 = load ptr, ptr @fun_Examples_fibonacci_recursive_0, align 8
  call void @free_candy_value(ptr %3187)
  %3188 = load ptr, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  call void @free_candy_value(ptr %3188)
  %3189 = load ptr, ptr @tag_Arguments, align 8
  call void @free_candy_value(ptr %3189)
  %3190 = load ptr, ptr @"Examples:fibonacci:23:5", align 8
  call void @free_candy_value(ptr %3190)
  %3191 = load ptr, ptr @"Examples:fibonacci:23:6", align 8
  call void @free_candy_value(ptr %3191)
  %3192 = load ptr, ptr @"Examples:fibonacci:23:6:n", align 8
  call void @free_candy_value(ptr %3192)
  %3193 = load ptr, ptr @"Examples:fibonacci:23:6:7", align 8
  call void @free_candy_value(ptr %3193)
  %3194 = load ptr, ptr @fun_Examples_fibonacci_23_6_14, align 8
  call void @free_candy_value(ptr %3194)
  %3195 = load ptr, ptr @"Examples:fibonacci:23:6:15", align 8
  call void @free_candy_value(ptr %3195)
  %3196 = load ptr, ptr @"Examples:fibonacci:23:6:22", align 8
  call void @free_candy_value(ptr %3196)
  %3197 = load ptr, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  call void @free_candy_value(ptr %3197)
  %3198 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %3198)
  %3199 = load ptr, ptr @"Examples:fibonacci:23:12", align 8
  call void @free_candy_value(ptr %3199)
  %3200 = load ptr, ptr @"Examples:fibonacci:23:13", align 8
  call void @free_candy_value(ptr %3200)
  %3201 = load ptr, ptr @fun_Examples_fibonacci_23, align 8
  call void @free_candy_value(ptr %3201)
  %3202 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_then, align 8
  call void @free_candy_value(ptr %3202)
  %3203 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_then.423, align 8
  call void @free_candy_value(ptr %3203)
  %3204 = load ptr, ptr @178, align 8
  call void @free_candy_value(ptr %3204)
  %3205 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_else, align 8
  call void @free_candy_value(ptr %3205)
  %3206 = load ptr, ptr @179, align 8
  call void @free_candy_value(ptr %3206)
  %3207 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_else.425, align 8
  call void @free_candy_value(ptr %3207)
  %3208 = load ptr, ptr @180, align 8
  call void @free_candy_value(ptr %3208)
  %3209 = load ptr, ptr @fun_Examples_fibonacci_23_6_case-0_matched, align 8
  call void @free_candy_value(ptr %3209)
  %3210 = load ptr, ptr @fun_Examples_fibonacci_23_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3210)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_parse(ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_ite":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = load ptr, ptr @tag_Greater, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %7, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %13 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %9, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr }, ptr %23, i32 0, i32 0
  store ptr %7, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %26 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %27 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %19, ptr %26, ptr %27)
  %29 = load ptr, ptr @num_0, align 8
  %30 = call ptr @candy_builtin_list_get(ptr %28, ptr %29)
  %31 = load ptr, ptr @tag_Match, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %28, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %7, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %37 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %38 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %32, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.1, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_else.2, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.2, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isNonNegative_13_equals_else.1(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_Less, align 8
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @candy_builtin_equals(ptr %5, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.3, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.4, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.4, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %8, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Builtins__isNonNegative_13_equals_else.3(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %12, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %18 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %19 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %14, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %12, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %31 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  %34 = load ptr, ptr @num_0, align 8
  %35 = call ptr @candy_builtin_list_get(ptr %33, ptr %34)
  %36 = load ptr, ptr @tag_Match, align 8
  %37 = call ptr @candy_builtin_equals(ptr %35, ptr %36)
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr, ptr }, ptr %38, i32 0, i32 0
  store ptr %33, ptr %39, align 8
  %40 = getelementptr inbounds { ptr, ptr }, ptr %38, i32 0, i32 1
  store ptr %12, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %42 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %43 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %44 = call ptr @candy_builtin_if_else(ptr %37, ptr %42, ptr %43)
  ret ptr %44
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Less`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = load ptr, ptr @tag_Equal, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.5, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.6, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.6, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.5(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Equal`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_Greater, align 8
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @candy_builtin_equals(ptr %5, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.7, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.8, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.8, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %8, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.7(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Greater`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %0)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %9 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_list_get(ptr %10, ptr %11)
  %13 = load ptr, ptr @tag_Match, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %10, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %21 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_case-0_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %27, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Function, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  %41 = call ptr @candy_builtin_type_of(ptr %1)
  %42 = load ptr, ptr @tag_Function, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %45 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %48 = load ptr, ptr @num_0, align 8
  %49 = call ptr @candy_builtin_equals(ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %51 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %50, ptr null)
  %52 = call ptr @candy_builtin_type_of(ptr %2)
  %53 = load ptr, ptr @tag_Function, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr null)
  %57 = call ptr @candy_builtin_type_of(ptr %2)
  %58 = load ptr, ptr @tag_Function, align 8
  %59 = call ptr @candy_builtin_equals(ptr %57, ptr %58)
  %60 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %61 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %62 = call ptr @"anonymous_$generated__needs"(ptr %59, ptr %60, ptr %61)
  %63 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %64 = load ptr, ptr @num_0, align 8
  %65 = call ptr @candy_builtin_equals(ptr %63, ptr %64)
  %66 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %67 = call ptr @"anonymous_$generated__needs"(ptr %65, ptr %66, ptr null)
  %68 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %68
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.9, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__ifElse_1_equals_else.10, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.10, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Builtins__ifElse_1_equals_else.9(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__ifElse_1_case-0_didNotMatch(ptr %0) {
Builtins__ifElse_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_list_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %20
}

define ptr @"Builtins__toDebugText, Core_iterator_201, Core_toDebugText_toDebugText"(ptr %0) {
"Builtins__toDebugText, Core_iterator_201, Core_toDebugText_toDebugText":
  %1 = call ptr @candy_builtin_to_debug_text(ptr %0)
  ret ptr %1
}

define ptr @Core_function_is0(ptr %0) {
Core_function_is0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_9, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_9, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_9, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0_9(ptr %0) {
Core_function_is0_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @Core_function_is0(ptr %0)
  %2 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Function, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:function:run:12", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:function:run:12", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %0)
  %17 = call ptr @get_candy_function_environment(ptr %0)
  %18 = call ptr (...) %16(ptr %17)
  ret ptr %18
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = load ptr, ptr @tag_True, align 8
  %2 = call ptr @candy_builtin_equals(ptr %1, ptr %0)
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_bool_is_1_equals_else, align 8
  %6 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %7 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %8 = call ptr @candy_builtin_if_else(ptr %2, ptr %6, ptr %7)
  %9 = load ptr, ptr @num_0, align 8
  %10 = call ptr @candy_builtin_list_get(ptr %8, ptr %9)
  %11 = load ptr, ptr @tag_Match, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %8, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %0, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %19 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_bool_is_1_case-0_didNotMatch, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %30 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %25, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @9, align 8
  ret ptr @9
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = load ptr, ptr @tag_False, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %1, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.11, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.12, align 8
  %10 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.12, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %4, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_bool_is_1_equals_else.11(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Core_bool_is_1_case-0_didNotMatch(ptr %0) {
Core_bool_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %0)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_bool_not_6_equals_else, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %0, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %11, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %20 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %21 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %15, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @11, align 8
  ret ptr @11
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @candy_builtin_equals(ptr %5, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.13, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.14, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.14, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %8, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %25 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_bool_not_6_equals_else.13(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Core_bool_not_6_case-1_didNotMatch(ptr %0) {
Core_bool_not_6_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1) {
Core_bool_lazyAnd:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = load ptr, ptr @tag_True, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %0)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %0, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_lazyAnd_16_equals_else, align 8
  %13 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %9, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %1, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_case-0_matched, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_lazyAnd_16_case-0_matched, align 8
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 0
  store ptr %15, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %23, i32 0, i32 1
  store ptr %0, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_case-0_didNotMatch, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_bool_lazyAnd_16_case-0_didNotMatch, align 8
  %27 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_matched, align 8
  %28 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-0_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %19, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_bool_lazyAnd_16_equals_else(ptr %0) {
Core_bool_lazyAnd_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @13, align 8
  ret ptr @13
}

define ptr @Core_bool_lazyAnd_16_case-0_matched(ptr %0) {
Core_bool_lazyAnd_16_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyAnd_16_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_16_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @candy_builtin_equals(ptr %5, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_equals_else.15, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_16_equals_else.16, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_16_equals_else.16, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %8, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_16_case-1_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_16_case-1_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_16_case-1_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_bool_lazyAnd_16_equals_else.15(ptr %0) {
Core_bool_lazyAnd_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Core_bool_lazyAnd_16_case-1_didNotMatch(ptr %0) {
Core_bool_lazyAnd_16_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1) {
Core_bool_lazyOr:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = load ptr, ptr @tag_True, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %0)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %0, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_lazyOr_16_equals_else, align 8
  %13 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %9, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %0, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %1, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_bool_lazyOr_16_case-0_didNotMatch, align 8
  %25 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_16_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %26 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-0_didNotMatch, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %19, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_bool_lazyOr_16_equals_else(ptr %0) {
Core_bool_lazyOr_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `True`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @15, align 8
  ret ptr @15
}

define ptr @Core_bool_lazyOr_16_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_16_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @candy_builtin_equals(ptr %5, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_equals_else.17, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_16_equals_else.18, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_16_equals_else.18, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %8, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_bool_lazyOr_16_case-1_matched, align 8
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr }, ptr %26, i32 0, i32 0
  store ptr %16, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_16_case-1_didNotMatch, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_bool_lazyOr_16_case-1_didNotMatch, align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_matched, align 8
  %30 = load ptr, ptr @fun_Core_bool_lazyOr_16_case-1_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %20, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_bool_lazyOr_16_equals_else.17(ptr %0) {
Core_bool_lazyOr_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `False`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @16, align 8
  ret ptr @16
}

define ptr @Core_bool_lazyOr_16_case-1_matched(ptr %0) {
Core_bool_lazyOr_16_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyOr_16_case-1_didNotMatch(ptr %0) {
Core_bool_lazyOr_16_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_check_checkEquals(ptr %0, ptr %1) {
Core_check_checkEquals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_check_checkEquals_14, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_check_checkEquals_14, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %0, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_check_checkEquals_15, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_check_checkEquals_15, align 8
  %12 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  %13 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %1)
  %16 = load ptr, ptr @tag_Text, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_check_checkEquals_21, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_check_checkEquals_21, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %1, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_check_checkEquals_22, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_check_checkEquals_22, align 8
  %24 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  %25 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_A check failed: Expected ", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %27, ptr %14)
  %29 = load ptr, ptr @"text_ to be ", align 8
  %30 = call ptr @candy_builtin_text_concatenate(ptr %28, ptr %29)
  %31 = call ptr @candy_builtin_text_concatenate(ptr %30, ptr %26)
  %32 = load ptr, ptr @text_., align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %31, ptr %32)
  %34 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %33, ptr null)
  ret ptr %34
}

define ptr @Core_check_checkEquals_14(ptr %0) {
Core_check_checkEquals_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_15(ptr %0) {
Core_check_checkEquals_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_check_checkEquals_21(ptr %0) {
Core_check_checkEquals_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_22(ptr %0) {
Core_check_checkEquals_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is2(ptr %0) {
Core_function_is2:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is2_9, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is2_9, align 8
  %7 = load ptr, ptr @fun_Core_function_is2_9, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is2_9(ptr %0) {
Core_function_is2_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_compareTo(ptr %0, ptr %1) {
Core_int_compareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:18", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %24
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1) {
Core_int_isLessThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1) {
Core_int_isGreaterThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Greater, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative(ptr %0) {
Core_int_isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @Core_int_isLessThan(ptr %0, ptr %12)
  %14 = call ptr @Core_bool_not(ptr %13)
  ret ptr %14
}

define ptr @Core_fixedDecimal_fromIntScaled(ptr %0, ptr %1) {
Core_fixedDecimal_fromIntScaled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %1, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_14, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_isScale_14, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_isScale_14, align 8
  %14 = call ptr @Core_bool_lazyAnd(ptr %9, ptr %13)
  %15 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_MinorUnits, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %0, ptr %21, align 8
  %22 = load ptr, ptr @tag_Scale, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %1, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %28, align 1
  %29 = call ptr @make_candy_tag(ptr %28, ptr %27)
  store ptr %29, ptr @tag_FixedDecimal, align 8
  ret ptr @tag_FixedDecimal
}

define ptr @Core_fixedDecimal_isScale_14(ptr %0) {
Core_fixedDecimal_isScale_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is1(ptr %0) {
Core_function_is1:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is1_9, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is1_9, align 8
  %7 = load ptr, ptr @fun_Core_function_is1_9, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_16_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_10, Core_function_is1_10, Core_function_is2_10, Core_function_is3_10, Core_function_is4_10, Core_function_is5_10, Core_list_isValidIndex_19, Core_list_isValidInsertIndex_19, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is1_9(ptr %0) {
Core_function_is1_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:9:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_isOdd(ptr %0) {
Core_int_isOdd:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isOdd:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %12)
  %14 = load ptr, ptr @num_1, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_result_is(ptr %0) {
Core_result_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.25, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.26, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.26, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %37 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.19, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.20, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.23, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.24, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.20, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.24, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.19(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.21, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.22, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.22, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.21(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @18, align 8
  ret ptr @18
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.23(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @19, align 8
  ret ptr @19
}

define ptr @Core_result_is_1_equals_else.25(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.27, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.28, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.37, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.38, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.28, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.38, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.27(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.29, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.30, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.35, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.36, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.30, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.36, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.29(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.31, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.32, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.33, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.34, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.32, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.34, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.31(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @21, align 8
  ret ptr @21
}

define ptr @Core_result_is_1_equals_else.33(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.35(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @22, align 8
  ret ptr @22
}

define ptr @Core_result_is_1_equals_else.37(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Core_result_is_1_case-0_matched(ptr %0) {
Core_result_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_True, align 8
  ret ptr %5
}

define ptr @Core_result_is_1_case-0_didNotMatch(ptr %0) {
Core_result_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_function_is1(ptr %2)
  %10 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Tag, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_26_equals_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.45, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_mapOrElse_26_equals_else.46, align 8
  %21 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then, align 8
  %22 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.46, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-0_matched, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_result_mapOrElse_26_case-0_matched, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 0
  store ptr %0, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 1
  store ptr %2, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 2
  store ptr %23, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_result_mapOrElse_26_case-0_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_matched, align 8
  %38 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-0_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %27, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_result_mapOrElse_26_equals_then(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.39, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.40, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.43, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_26_equals_else.44, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.40, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.44, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_26_equals_then.39(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.41, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.42, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_26_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.42, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_26_equals_then.41(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @24, align 8
  ret ptr @24
}

define ptr @Core_result_mapOrElse_26_equals_else(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_26_equals_else.43(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_result_mapOrElse_26_equals_else.45(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_result_mapOrElse_26_case-0_matched(ptr %0) {
Core_result_mapOrElse_26_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_26_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_26_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.47, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_result_mapOrElse_26_equals_then.48, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.57, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_26_equals_else.58, align 8
  %18 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.48, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.58, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_26_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_26_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_26_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_result_mapOrElse_26_equals_then.47(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.49, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.50, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.55, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_26_equals_else.56, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.50, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.56, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_26_equals_then.49(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_then.51, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_26_equals_then.52, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_26_equals_else.53, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_26_equals_else.54, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_then.52, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_26_equals_else.54, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_26_equals_then.51(ptr %0) {
Core_result_mapOrElse_26_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_result_mapOrElse_26_equals_else.53(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_26_equals_else.55(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_result_mapOrElse_26_equals_else.57(ptr %0) {
Core_result_mapOrElse_26_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_result_mapOrElse_26_case-1_matched(ptr %0) {
Core_result_mapOrElse_26_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_26_case-1_didNotMatch(ptr %0) {
Core_result_mapOrElse_26_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @"Core_iterator_range_32, Core_result_unwrapOrElse_17"(ptr %0) {
"Core_iterator_range_32, Core_result_unwrapOrElse_17":
  ret ptr %0
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_unwrapOr_7, align 8
  %8 = call ptr @Core_result_is(ptr %0)
  %9 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %13 = call ptr @Core_function_is0(ptr %12)
  %14 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_18, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_result_unwrapOrElse_18, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_range_32, Core_result_unwrapOrElse_17", align 8
  %20 = load ptr, ptr @fun_Core_result_unwrapOrElse_18, align 8
  %21 = call ptr @Core_result_mapOrElse(ptr %0, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_unwrapOrElse_18(ptr %0) {
Core_result_unwrapOrElse_18:
  %1 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %2 = call ptr @Core_function_run(ptr %1)
  ret ptr %2
}

define ptr @Core_list_append(ptr %0, ptr %1) {
Core_list_append:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_List, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:list:append:9", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_list_length(ptr %0)
  %14 = call ptr @Builtins__listInsert(ptr %0, ptr %13, ptr %1)
  ret ptr %14
}

define ptr @"Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched"() {
"Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched":
  %0 = load ptr, ptr @tag_Empty, align 8
  ret ptr %0
}

define ptr @Core_iterator_wrapSafe(ptr %0, ptr %1) {
Core_iterator_wrapSafe:
  %2 = call ptr @Core_function_is0(ptr %1)
  %3 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_10, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14, ptr %8, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14, align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14, align 8
  %11 = call ptr @Core_function_is2(ptr %10)
  %12 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %13 = load ptr, ptr @"Core:iterator:wrapSafe:15", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %16 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16, ptr %15, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_controlFlow_recursive_16, align 8
  %17 = load ptr, ptr @fun_Core_controlFlow_recursive_16, align 8
  %18 = call ptr @Core_controlFlow_recursive_16(ptr %17, ptr %0)
  ret ptr %18
}

define ptr @Core_iterator_wrapSafe_10(ptr %0) {
Core_iterator_wrapSafe_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_wrapSafe_14(ptr %0, ptr %1) {
Core_iterator_wrapSafe_14:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.65, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.66, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.66, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_matched, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %13, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_case-0_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_matched, align 8
  %25 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = call ptr @Core_function_is0(ptr %26)
  %28 = call ptr @Core_bool_not(ptr %27)
  %29 = call ptr @Core_bool_is(ptr %28)
  %30 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:iterator:wrapSafe:14:20", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %34 = call ptr @Core_function_is0(ptr %33)
  %35 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:iterator:wrapSafe:14:20", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %39 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %40 = call ptr @Builtins__ifElse(ptr %28, ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %0, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %26, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_iterator_wrapSafe_14_22, align 8
  %45 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22, align 8
  %46 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %46, align 1
  %47 = call ptr @make_candy_tag(ptr %46, ptr %45)
  store ptr %47, ptr @tag_Iterator.90, align 8
  ret ptr @tag_Iterator.90
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.59, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.60, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else.63, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.64, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.60, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else.64, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.59(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_then.61, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.62, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_then.62, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_1_equals_then.61(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.63(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_iterator_wrapSafe_14_1_equals_else.65(ptr %0) {
Core_iterator_wrapSafe_14_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_matched(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_1_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_14_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %6 = call ptr @Core_function_run(ptr %5)
  ret ptr %6
}

define ptr @Core_iterator_wrapSafe_14_22(ptr %0) {
Core_iterator_wrapSafe_14_22:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %3, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %16, i32 0, i32 2
  store ptr %11, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %24 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %15, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.87, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.88, align 8
  %18 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.88, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.67, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.68, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.85, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.86, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.68, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.86, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.67(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.69, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.70, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.83, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.84, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.70, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.84, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.69(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_then.71, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.72, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_equals_else.81, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.82, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_then.72, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_equals_else.82, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_then.71(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.79, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.80, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else.80, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.73, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.74, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.75, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.76, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_then.74, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_hasKey_else.76, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.77, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.78, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_then.78, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_14_22_8_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_then.73(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_iterator_wrapSafe_14_22_8_hasKey_else.75(ptr %0) {
Core_iterator_wrapSafe_14_22_8_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @37, align 8
  ret ptr @37
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_then.77(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_isMatch_else.79(ptr %0) {
Core_iterator_wrapSafe_14_22_8_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.81(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.83(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.85(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_iterator_wrapSafe_14_22_8_equals_else.87(ptr %0) {
Core_iterator_wrapSafe_14_22_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_matched(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.89, align 8
  ret ptr @tag_More.89
}

define ptr @Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_14_22_8_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_wrapSafe_10, align 8
  %6 = call ptr @Core_function_run(ptr %5)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0, align 8
  %6 = call ptr @Core_iterator_wrapSafe_14(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_next(ptr %0) {
Core_iterator_next:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_next_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_next_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @candy_builtin_equals(ptr %6, ptr %5)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %4, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %5, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.97, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.98, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.98, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %7, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %24 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_1, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %16, ptr %27)
  %29 = call ptr @Core_function_run(ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_next_2() {
Core_iterator_next_2:
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_next_6_equals_then(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.91, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.92, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.95, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.96, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.92, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.96, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.91(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.93, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.94, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.94, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.93(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_iterator_next_6_equals_else(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_next_6_equals_else.95(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @43, align 8
  ret ptr @43
}

define ptr @Core_iterator_next_6_equals_else.97(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @44, align 8
  ret ptr @44
}

define ptr @Core_iterator_next_6_isMatch_else(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_generateWithState(ptr %0, ptr %1) {
Core_iterator_generateWithState:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_generateWithState_12, align 8
  %8 = load ptr, ptr @fun_Core_iterator_generateWithState_12, align 8
  %9 = call ptr @Core_function_is2(ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = load ptr, ptr @"Core:iterator:generateWithState:13", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.123, ptr %13, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_16.124, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_16.124, align 8
  %16 = call ptr @Core_controlFlow_recursive_16.123(ptr %15, ptr %0)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_12(ptr %0, ptr %1, ptr %2) {
Core_iterator_generateWithState_12:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1, align 8
  %10 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1, align 8
  %11 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %11, align 1
  %12 = call ptr @make_candy_tag(ptr %11, ptr %10)
  store ptr %12, ptr @tag_Iterator.122, align 8
  ret ptr @tag_Iterator.122
}

define ptr @Core_iterator_generateWithState_12_1(ptr %0) {
Core_iterator_generateWithState_12_1:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %7)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %7, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.117, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.118, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.118, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %19, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_matched, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %19, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %23, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.99, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.100, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.115, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.116, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.100, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.116, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.99(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.101, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.102, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.113, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.114, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.102, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.114, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.101(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_then.103, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.104, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_then.104, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_then.103(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.111, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.112, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else.112, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @45, align 8
  ret ptr @45
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @46, align 8
  ret ptr @46
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.105, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.106, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.107, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.108, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_then.106, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_hasKey_else.108, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.109, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.110, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_then.110, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_then.105(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @47, align 8
  ret ptr @47
}

define ptr @Core_iterator_generateWithState_12_1_3_hasKey_else.107(ptr %0) {
Core_iterator_generateWithState_12_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_then.109(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_isMatch_else.111(ptr %0) {
Core_iterator_generateWithState_12_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.113(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.115(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.117(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_matched(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Item, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %4, ptr %18, align 8
  %19 = load ptr, ptr @tag_Rest, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.119, align 8
  ret ptr @tag_More.119
}

define ptr @Core_iterator_generateWithState_12_1_3_case-0_didNotMatch(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_Empty, align 8
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @candy_builtin_equals(ptr %5, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_equals_else.120, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.121, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_equals_else.121, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %8, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, align 8
  %27 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %28 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_generateWithState_12_1_3_equals_else.120(ptr %0) {
Core_iterator_generateWithState_12_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_iterator_generateWithState_12_1_3_case-1_didNotMatch(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_case-2_matched, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_12_1_3_case-2_matched, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_12_1_3_case-2_matched)
  %11 = call ptr @Core_iterator_generateWithState_12_1_3_case-2_matched(ptr %10)
  ret ptr %11
}

define ptr @Core_iterator_generateWithState_12_1_3_case-2_matched(ptr %0) {
Core_iterator_generateWithState_12_1_3_case-2_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_21, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_12_1_3_21, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_12_1_3_22, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_12_1_3_22, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_21, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_12_1_3_22, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr null)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_12_1_3_21(ptr %0) {
Core_iterator_generateWithState_12_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_12_1_3_22(ptr %0) {
Core_iterator_generateWithState_12_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_controlFlow_recursive_16.123(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.125, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.126, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.126, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_12)
  %7 = call ptr @Core_iterator_generateWithState_12(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_16_0.125(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_generate(ptr %0, ptr %1) {
Core_iterator_generate:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %0)
  %8 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @candy_builtin_type_of(ptr %0)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:27", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @Core_int_isNonNegative(ptr %0)
  %17 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:iterator:generate:27", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_4294967295, align 8
  %21 = call ptr @Core_int_isLessThan(ptr %0, ptr %20)
  %22 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_function_is1(ptr %1)
  %25 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %0, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generate_42, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generate_42, align 8
  %31 = load ptr, ptr @num_0, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generate_42, align 8
  %33 = call ptr @Core_iterator_generateWithState(ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generate_42(ptr %0, ptr %1) {
Core_iterator_generate_42:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generate_42_6, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generate_42_6, align 8
  %11 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %12 = load ptr, ptr @fun_Core_iterator_generate_42_6, align 8
  %13 = call ptr @Builtins__ifElse(ptr %4, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generate_42_6(ptr %0) {
Core_iterator_generate_42_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:42:6:14", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @num_1, align 8
  %19 = call ptr @candy_builtin_int_add(ptr %17, ptr %18)
  %20 = alloca ptr, i64 3, align 8
  %21 = alloca ptr, i64 3, align 8
  %22 = load ptr, ptr @tag_Item, align 8
  %23 = getelementptr ptr, ptr %20, i64 0
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %21, i64 0
  store ptr %7, ptr %24, align 8
  %25 = load ptr, ptr @tag_State, align 8
  %26 = getelementptr ptr, ptr %20, i64 1
  store ptr %25, ptr %26, align 8
  %27 = getelementptr ptr, ptr %21, i64 1
  store ptr %19, ptr %27, align 8
  %28 = getelementptr ptr, ptr %20, i64 2
  store ptr null, ptr %28, align 8
  %29 = getelementptr ptr, ptr %21, i64 2
  store ptr null, ptr %29, align 8
  %30 = call ptr @make_candy_struct(ptr %20, ptr %21)
  %31 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %31, align 1
  %32 = call ptr @make_candy_tag(ptr %31, ptr %30)
  store ptr %32, ptr @tag_More.127, align 8
  ret ptr @tag_More.127
}

define ptr @Core_iterator_map(ptr %0, ptr %1) {
Core_iterator_map:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_map_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_map_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_17, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_17, align 8
  %12 = load ptr, ptr @fun_Core_iterator_map_17, align 8
  %13 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_2() {
Core_iterator_map_2:
  %0 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_map_17(ptr %0, ptr %1) {
Core_iterator_map_17:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = load ptr, ptr @tag_Empty, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %2, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_map_17_3_equals_else, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %9 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else, align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_list_get(ptr %10, ptr %11)
  %13 = load ptr, ptr @tag_Match, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %2, ptr %16, align 8
  %17 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %18, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 2
  store ptr %10, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-0_didNotMatch, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_map_17_3_case-0_didNotMatch, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %14, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_map_17_3_equals_else(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_iterator_map_17_3_case-0_didNotMatch(ptr %0) {
Core_iterator_map_17_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_17_3_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.148, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_map_17_3_equals_else.149, align 8
  %18 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.149, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_17_3_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_map_17_3_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_map_17_3_equals_then(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.128, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.129, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.146, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.147, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.129, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.147, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_17_3_equals_then.128(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.130, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_17_3_equals_then.131, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.144, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_equals_else.145, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.131, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.145, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_17_3_equals_then.130(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_then.132, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_equals_then.133, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_equals_else.142, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_map_17_3_equals_else.143, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_then.133, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_17_3_equals_else.143, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_map_17_3_equals_then.132(ptr %0) {
Core_iterator_map_17_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_17_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_17_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_map_17_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else.140, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_17_3_isMatch_else.141, align 8
  %31 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else.141, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_map_17_3_hasKey_then(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_iterator_map_17_3_hasKey_else(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_iterator_map_17_3_isMatch_then(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_then.134, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_17_3_hasKey_then.135, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_hasKey_else.136, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_map_17_3_hasKey_else.137, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_then.135, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_17_3_hasKey_else.137, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_then.138, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_map_17_3_isMatch_then.139, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_17_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_17_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_then.139, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_17_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_map_17_3_hasKey_then.134(ptr %0) {
Core_iterator_map_17_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_iterator_map_17_3_hasKey_else.136(ptr %0) {
Core_iterator_map_17_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_iterator_map_17_3_isMatch_then.138(ptr %0) {
Core_iterator_map_17_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_iterator_map_17_3_isMatch_else(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_isMatch_else.140(ptr %0) {
Core_iterator_map_17_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_17_3_equals_else.142(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_iterator_map_17_3_equals_else.144(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_map_17_3_equals_else.146(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_iterator_map_17_3_equals_else.148(ptr %0) {
Core_iterator_map_17_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @62, align 8
  ret ptr @62
}

define ptr @Core_iterator_map_17_3_case-1_matched(ptr %0) {
Core_iterator_map_17_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Item, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_State, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %8, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.150, align 8
  ret ptr @tag_More.150
}

define ptr @Core_iterator_map_17_3_case-1_didNotMatch(ptr %0) {
Core_iterator_map_17_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_withIndex_11(ptr %0) {
Core_iterator_withIndex_11:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_else, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %10 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.159, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.160, align 8
  %20 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.160, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_1, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_2, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %12, ptr %25)
  %27 = call ptr @Core_iterator_next(ptr %24)
  %28 = load ptr, ptr @tag_Empty, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %35, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %27, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %40, i32 0, i32 2
  store ptr %26, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %45 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %46 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %47 = call ptr @candy_builtin_if_else(ptr %39, ptr %45, ptr %46)
  ret ptr %47
}

define ptr @Core_iterator_withIndex_11_1_equals_then(ptr %0) {
Core_iterator_withIndex_11_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.157, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.158, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.158, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then.151, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.152, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else.153, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.154, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.152, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.154, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then.155, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.156, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.156, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then.151(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else.153(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then.155(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @67, align 8
  ret ptr @67
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.157(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_equals_else(ptr %0) {
Core_iterator_withIndex_11_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @68, align 8
  ret ptr @68
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.159(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_withIndex_11_5_equals_else(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @69, align 8
  ret ptr @69
}

define ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.181, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_withIndex_11_5_equals_else.182, align 8
  %18 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.182, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_withIndex_11_5_equals_then(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.161, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.162, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.179, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.180, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.162, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.180, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.161(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.163, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.164, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.177, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.178, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.164, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.178, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.163(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.165, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_equals_then.166, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.175, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_withIndex_11_5_equals_else.176, align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.166, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.176, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_withIndex_11_5_equals_then.165(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else.173, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.174, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.174, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @70, align 8
  ret ptr @70
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @71, align 8
  ret ptr @71
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then.167, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.168, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else.169, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.170, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.168, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.170, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then.171, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.172, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.172, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then.167(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @72, align 8
  ret ptr @72
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else.169(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @73, align 8
  ret ptr @73
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then.171(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @74, align 8
  ret ptr @74
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else.173(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_equals_else.175(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @75, align 8
  ret ptr @75
}

define ptr @Core_iterator_withIndex_11_5_equals_else.177(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_withIndex_11_5_equals_else.179(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @76, align 8
  ret ptr @76
}

define ptr @Core_iterator_withIndex_11_5_equals_else.181(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @77, align 8
  ret ptr @77
}

define ptr @Core_iterator_withIndex_11_5_case-1_matched(ptr %0) {
Core_iterator_withIndex_11_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_Index, align 8
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 1
  store ptr %16, ptr %18, align 8
  %19 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %19, align 8
  %20 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %20, align 8
  %21 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:iterator:withIndex:11:5:20", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_add(ptr %31, ptr %32)
  %34 = alloca ptr, i64 3, align 8
  %35 = alloca ptr, i64 3, align 8
  %36 = load ptr, ptr @tag_Index, align 8
  %37 = getelementptr ptr, ptr %34, i64 0
  store ptr %36, ptr %37, align 8
  %38 = getelementptr ptr, ptr %35, i64 0
  store ptr %33, ptr %38, align 8
  %39 = load ptr, ptr @tag_Iterator, align 8
  %40 = getelementptr ptr, ptr %34, i64 1
  store ptr %39, ptr %40, align 8
  %41 = getelementptr ptr, ptr %35, i64 1
  store ptr %8, ptr %41, align 8
  %42 = getelementptr ptr, ptr %34, i64 2
  store ptr null, ptr %42, align 8
  %43 = getelementptr ptr, ptr %35, i64 2
  store ptr null, ptr %43, align 8
  %44 = call ptr @make_candy_struct(ptr %34, ptr %35)
  %45 = alloca ptr, i64 3, align 8
  %46 = alloca ptr, i64 3, align 8
  %47 = load ptr, ptr @tag_Item, align 8
  %48 = getelementptr ptr, ptr %45, i64 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr ptr, ptr %46, i64 0
  store ptr %21, ptr %49, align 8
  %50 = load ptr, ptr @tag_State, align 8
  %51 = getelementptr ptr, ptr %45, i64 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr ptr, ptr %46, i64 1
  store ptr %44, ptr %52, align 8
  %53 = getelementptr ptr, ptr %45, i64 2
  store ptr null, ptr %53, align 8
  %54 = getelementptr ptr, ptr %46, i64 2
  store ptr null, ptr %54, align 8
  %55 = call ptr @make_candy_struct(ptr %45, ptr %46)
  %56 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %56, align 1
  %57 = call ptr @make_candy_tag(ptr %56, ptr %55)
  store ptr %57, ptr @tag_More.183, align 8
  ret ptr @tag_More.183
}

define ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_ensure(ptr %0, ptr %1) {
Core_iterator_ensure:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_ensure_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_ensure_12, align 8
  %7 = load ptr, ptr @fun_Core_iterator_ensure_12, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_ensure_17, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_ensure_17, align 8
  %12 = load ptr, ptr @fun_Core_iterator_ensure_17, align 8
  %13 = call ptr @Core_iterator_map(ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_ensure_12() {
Core_iterator_ensure_12:
  %0 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_ensure_17(ptr %0, ptr %1) {
Core_iterator_ensure_17:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %0
}

define ptr @Core_iterator_foldLeft(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_2, ptr %3, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_iterator_foldLeft_2, align 8
  %5 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %5)
  %7 = call ptr @Core_function_is2(ptr %2)
  %8 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = alloca ptr, i64 3, align 8
  %11 = alloca ptr, i64 3, align 8
  %12 = load ptr, ptr @tag_Iterator, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %11, i64 0
  store ptr %6, ptr %14, align 8
  %15 = load ptr, ptr @tag_Value, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %15, ptr %16, align 8
  %17 = getelementptr ptr, ptr %11, i64 1
  store ptr %1, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = getelementptr ptr, ptr %11, i64 2
  store ptr null, ptr %19, align 8
  %20 = call ptr @make_candy_struct(ptr %10, ptr %11)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %2, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_foldLeft_21, align 8
  %24 = load ptr, ptr @fun_Core_iterator_foldLeft_21, align 8
  %25 = call ptr @Core_function_is2(ptr %24)
  %26 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %27 = load ptr, ptr @"Core:iterator:foldLeft:22", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %30 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.216, ptr %29, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_controlFlow_recursive_16.217, align 8
  %31 = load ptr, ptr @fun_Core_controlFlow_recursive_16.217, align 8
  %32 = call ptr @Core_controlFlow_recursive_16.216(ptr %31, ptr %20)
  ret ptr %32
}

define ptr @Core_iterator_foldLeft_2() {
Core_iterator_foldLeft_2:
  %0 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_foldLeft_21(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft_21:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_foldLeft_21_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_21_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_else.192, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.193, align 8
  %22 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.193, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = call ptr @Core_iterator_next(ptr %26)
  %30 = load ptr, ptr @tag_Empty, align 8
  %31 = call ptr @candy_builtin_equals(ptr %30, ptr %29)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %29, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_iterator_foldLeft_21_5_equals_else, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %36 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @num_0, align 8
  %39 = call ptr @candy_builtin_list_get(ptr %37, ptr %38)
  %40 = load ptr, ptr @tag_Match, align 8
  %41 = call ptr @candy_builtin_equals(ptr %39, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr }, ptr %42, i32 0, i32 0
  store ptr %28, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-0_matched, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_iterator_foldLeft_21_5_case-0_matched, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %28, ptr %49, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %29, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 3
  store ptr %0, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 4
  store ptr %37, ptr %52, align 8
  %53 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-0_didNotMatch, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %53, ptr @fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch, align 8
  %54 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_matched, align 8
  %55 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-0_didNotMatch, align 8
  %56 = call ptr @candy_builtin_if_else(ptr %41, ptr %54, ptr %55)
  ret ptr %56
}

define ptr @Core_iterator_foldLeft_21_1_equals_then(ptr %0) {
Core_iterator_foldLeft_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_else.190, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.191, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else.191, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_then(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @78, align 8
  ret ptr @78
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_else(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @79, align 8
  ret ptr @79
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_then(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Value, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_then.184, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then.185, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_hasKey_else.186, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else.187, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_then.185, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_hasKey_else.187, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_then.188, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then.189, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_then.189, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_21_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_then.184(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Value, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @80, align 8
  ret ptr @80
}

define ptr @Core_iterator_foldLeft_21_1_hasKey_else.186(ptr %0) {
Core_iterator_foldLeft_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @81, align 8
  ret ptr @81
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_then.188(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @82, align 8
  ret ptr @82
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_else(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_else.190(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_1_equals_else(ptr %0) {
Core_iterator_foldLeft_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @83, align 8
  ret ptr @83
}

define ptr @Core_iterator_foldLeft_21_1_isMatch_else.192(ptr %0) {
Core_iterator_foldLeft_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_foldLeft_21_5_equals_else(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @84, align 8
  ret ptr @84
}

define ptr @Core_iterator_foldLeft_21_5_case-0_matched(ptr %0) {
Core_iterator_foldLeft_21_5_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_5_case-0_didNotMatch(ptr %0) {
Core_iterator_foldLeft_21_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_21_5_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else.214, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.215, align 8
  %18 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.215, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 3
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_foldLeft_21_5_case-1_matched, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr }, ptr %37, i32 0, i32 0
  store ptr %20, ptr %38, align 8
  %39 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_case-1_didNotMatch, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %39, ptr @fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch, align 8
  %40 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_matched, align 8
  %41 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_case-1_didNotMatch, align 8
  %42 = call ptr @candy_builtin_if_else(ptr %24, ptr %40, ptr %41)
  ret ptr %42
}

define ptr @Core_iterator_foldLeft_21_5_equals_then(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then.194, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.195, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else.212, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.213, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.195, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.213, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_21_5_equals_then.194(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then.196, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.197, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else.210, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.211, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.197, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.211, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_21_5_equals_then.196(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_then.198, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.199, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_equals_else.208, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.209, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_then.199, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_equals_else.209, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_foldLeft_21_5_equals_then.198(ptr %0) {
Core_iterator_foldLeft_21_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_else.206, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else.207, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else.207, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_then(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @85, align 8
  ret ptr @85
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_else(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @86, align 8
  ret ptr @86
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_then(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_then.200, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then.201, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_hasKey_else.202, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else.203, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_then.201, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_hasKey_else.203, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_then.204, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then.205, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_21_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_then.205, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_21_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_then.200(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @87, align 8
  ret ptr @87
}

define ptr @Core_iterator_foldLeft_21_5_hasKey_else.202(ptr %0) {
Core_iterator_foldLeft_21_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @88, align 8
  ret ptr @88
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_then.204(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @89, align 8
  ret ptr @89
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_else(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_5_isMatch_else.206(ptr %0) {
Core_iterator_foldLeft_21_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_21_5_equals_else.208(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @90, align 8
  ret ptr @90
}

define ptr @Core_iterator_foldLeft_21_5_equals_else.210(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_foldLeft_21_5_equals_else.212(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @91, align 8
  ret ptr @91
}

define ptr @Core_iterator_foldLeft_21_5_equals_else.214(ptr %0) {
Core_iterator_foldLeft_21_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @92, align 8
  ret ptr @92
}

define ptr @Core_iterator_foldLeft_21_5_case-1_matched(ptr %0) {
Core_iterator_foldLeft_21_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %10, ptr %4, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %8, ptr %20, align 8
  %21 = load ptr, ptr @tag_Value, align 8
  %22 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %22, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %15, ptr %23, align 8
  %24 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %26, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_foldLeft_21_5_case-1_didNotMatch(ptr %0) {
Core_iterator_foldLeft_21_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_16.216(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.218, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.219, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.219, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_foldLeft_21)
  %7 = call ptr @Core_iterator_foldLeft_21(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_16_0.218(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_reduceLeft_16_case-0_matched() {
Core_iterator_reduceLeft_16_case-0_matched:
  %0 = load ptr, ptr @tag_Error.220, align 8
  ret ptr %0
}

define ptr @Core_iterator_reduceLeft(ptr %0, ptr %1) {
Core_iterator_reduceLeft:
  %2 = call ptr @Core_function_is2(ptr %1)
  %3 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_reduceLeft_12, align 8
  %7 = load ptr, ptr @fun_Core_iterator_reduceLeft_12, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = call ptr @Core_iterator_next(ptr %8)
  %10 = load ptr, ptr @tag_Empty, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %9, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_16_equals_else, align 8
  %15 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %16 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %11, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %9, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %22, i32 0, i32 2
  store ptr %1, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-0_didNotMatch, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_reduceLeft_16_case-0_didNotMatch, align 8
  %27 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_matched, align 8
  %28 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-0_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %21, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_reduceLeft_12() {
Core_iterator_reduceLeft_12:
  %0 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_reduceLeft_16_equals_else(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @93, align 8
  ret ptr @93
}

define ptr @Core_iterator_reduceLeft_16_case-0_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_16_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_16_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else.241, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_reduceLeft_16_equals_else.242, align 8
  %18 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.242, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_16_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_reduceLeft_16_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_reduceLeft_16_equals_then(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then.221, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_16_equals_then.222, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else.239, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_16_equals_else.240, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.222, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.240, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_16_equals_then.221(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then.223, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_16_equals_then.224, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else.237, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_16_equals_else.238, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.224, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.238, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_16_equals_then.223(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_then.225, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_16_equals_then.226, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_equals_else.235, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_reduceLeft_16_equals_else.236, align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_then.226, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_equals_else.236, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_reduceLeft_16_equals_then.225(ptr %0) {
Core_iterator_reduceLeft_16_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_else.233, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else.234, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else.234, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_reduceLeft_16_hasKey_then(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @94, align 8
  ret ptr @94
}

define ptr @Core_iterator_reduceLeft_16_hasKey_else(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @95, align 8
  ret ptr @95
}

define ptr @Core_iterator_reduceLeft_16_isMatch_then(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_then.227, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then.228, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_hasKey_else.229, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else.230, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_then.228, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_hasKey_else.230, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_then.231, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then.232, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_16_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_then.232, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_16_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_reduceLeft_16_hasKey_then.227(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @96, align 8
  ret ptr @96
}

define ptr @Core_iterator_reduceLeft_16_hasKey_else.229(ptr %0) {
Core_iterator_reduceLeft_16_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @97, align 8
  ret ptr @97
}

define ptr @Core_iterator_reduceLeft_16_isMatch_then.231(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @98, align 8
  ret ptr @98
}

define ptr @Core_iterator_reduceLeft_16_isMatch_else(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_16_isMatch_else.233(ptr %0) {
Core_iterator_reduceLeft_16_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_16_equals_else.235(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @99, align 8
  ret ptr @99
}

define ptr @Core_iterator_reduceLeft_16_equals_else.237(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_reduceLeft_16_equals_else.239(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @100, align 8
  ret ptr @100
}

define ptr @Core_iterator_reduceLeft_16_equals_else.241(ptr %0) {
Core_iterator_reduceLeft_16_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @101, align 8
  ret ptr @101
}

define ptr @Core_iterator_reduceLeft_16_case-1_matched(ptr %0) {
Core_iterator_reduceLeft_16_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %4, ptr %10)
  %12 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %12, align 1
  %13 = call ptr @make_candy_tag(ptr %12, ptr %11)
  store ptr %13, ptr @tag_Ok.243, align 8
  ret ptr @tag_Ok.243
}

define ptr @Core_iterator_reduceLeft_16_case-1_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_16_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_sum_8(ptr %0, ptr %1) {
Core_iterator_sum_8:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:sum:8:8", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:iterator:sum:8:8", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %14
}

define ptr @Core_iterator_sum(ptr %0) {
Core_iterator_sum:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_sum_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_sum_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_sum_5, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_sum_5, align 8
  %7 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  %8 = call ptr @Core_iterator_ensure(ptr %4, ptr %7)
  %9 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  %10 = call ptr @Core_iterator_reduceLeft(ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @Core_result_unwrapOr(ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_iterator_sum_2() {
Core_iterator_sum_2:
  %0 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_sum_5(ptr %0) {
Core_iterator_sum_5:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  ret ptr %5
}

define ptr @Core_iterator_length_5(ptr %0) {
Core_iterator_length_5:
  %1 = load ptr, ptr @num_1, align 8
  ret ptr %1
}

define ptr @Core_iterator_all(ptr %0, ptr %1) {
Core_iterator_all:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_all_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_all_12, align 8
  %7 = load ptr, ptr @fun_Core_iterator_all_12, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_all_16, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_all_16, align 8
  %12 = load ptr, ptr @tag_True, align 8
  %13 = load ptr, ptr @fun_Core_iterator_all_16, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_all_12() {
Core_iterator_all_12:
  %0 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_all_16(ptr %0, ptr %1, ptr %2) {
Core_iterator_all_16:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:all:16:22", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:all:16:22", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_and_12, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_and_12, align 8
  %22 = load ptr, ptr @fun_Core_bool_and_12, align 8
  %23 = call ptr @Core_bool_lazyAnd(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_and_12(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_any(ptr %0, ptr %1) {
Core_iterator_any:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_any_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_any_12, align 8
  %7 = load ptr, ptr @fun_Core_iterator_any_12, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_any_16, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_any_16, align 8
  %12 = load ptr, ptr @tag_False, align 8
  %13 = load ptr, ptr @fun_Core_iterator_any_16, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_any_12() {
Core_iterator_any_12:
  %0 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_any_16(ptr %0, ptr %1, ptr %2) {
Core_iterator_any_16:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:any:16:22", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:any:16:22", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_or_12, align 8
  %22 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %23 = call ptr @Core_bool_lazyOr(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_joinToText(ptr %0) {
Core_iterator_joinToText:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_joinToText_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_joinToText_12, align 8
  %7 = load ptr, ptr @text_, align 8
  %8 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %4, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_iterator_joinToText_2() {
Core_iterator_joinToText_2:
  %0 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_joinToText_12(ptr %0, ptr %1) {
Core_iterator_joinToText_12:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:joinToText:12:18", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:joinToText:12:18", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %19
}

define ptr @Core_iterator_where(ptr %0, ptr %1) {
Core_iterator_where:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_where_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_where_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_17, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_17, align 8
  %12 = load ptr, ptr @fun_Core_iterator_where_17, align 8
  %13 = call ptr @Core_function_is2(ptr %12)
  %14 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %15 = load ptr, ptr @"Core:iterator:where:18", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16.290, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_controlFlow_recursive_16.291, align 8
  %19 = load ptr, ptr @fun_Core_controlFlow_recursive_16.291, align 8
  %20 = call ptr @Core_controlFlow_recursive_16.290(ptr %19, ptr %5)
  ret ptr %20
}

define ptr @Core_iterator_where_2() {
Core_iterator_where_2:
  %0 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_where_17(ptr %0, ptr %1, ptr %2) {
Core_iterator_where_17:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_where_17_2, align 8
  %9 = load ptr, ptr @fun_Core_iterator_where_17_2, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %1, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_where_17_2(ptr %0, ptr %1) {
Core_iterator_where_17_2:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = load ptr, ptr @tag_Empty, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %2, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_where_17_2_3_equals_else, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %9 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else, align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_list_get(ptr %10, ptr %11)
  %13 = load ptr, ptr @tag_Match, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %10, ptr %16, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %2, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %15, i32 0, i32 2
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %15, i32 0, i32 3
  store ptr %22, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_case-0_didNotMatch, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_where_17_2_3_case-0_didNotMatch, align 8
  %25 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %26 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-0_didNotMatch, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %14, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_iterator_where_17_2_3_equals_else(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @102, align 8
  ret ptr @102
}

define ptr @Core_iterator_where_17_2_3_case-0_didNotMatch(ptr %0) {
Core_iterator_where_17_2_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_17_2_3_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else.264, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_17_2_3_equals_else.265, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.265, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_where_17_2_3_case-1_matched, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_case-1_didNotMatch, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_where_17_2_3_case-1_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_matched, align 8
  %38 = load ptr, ptr @fun_Core_iterator_where_17_2_3_case-1_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %24, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_iterator_where_17_2_3_equals_then(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then.244, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_equals_then.245, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else.262, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_equals_else.263, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.245, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.263, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_17_2_3_equals_then.244(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then.246, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_equals_then.247, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else.260, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_equals_else.261, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.247, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.261, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_17_2_3_equals_then.246(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_then.248, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_equals_then.249, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_equals_else.258, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_17_2_3_equals_else.259, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_then.249, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_equals_else.259, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_17_2_3_equals_then.248(ptr %0) {
Core_iterator_where_17_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_17_2_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_17_2_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_else.256, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_17_2_3_isMatch_else.257, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else.257, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_17_2_3_hasKey_then(ptr %0) {
Core_iterator_where_17_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @103, align 8
  ret ptr @103
}

define ptr @Core_iterator_where_17_2_3_hasKey_else(ptr %0) {
Core_iterator_where_17_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @104, align 8
  ret ptr @104
}

define ptr @Core_iterator_where_17_2_3_isMatch_then(ptr %0) {
Core_iterator_where_17_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_then.250, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_hasKey_then.251, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_hasKey_else.252, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_17_2_3_hasKey_else.253, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_then.251, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_17_2_3_hasKey_else.253, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_then.254, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_17_2_3_isMatch_then.255, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_17_2_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_then.255, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_17_2_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_17_2_3_hasKey_then.250(ptr %0) {
Core_iterator_where_17_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @105, align 8
  ret ptr @105
}

define ptr @Core_iterator_where_17_2_3_hasKey_else.252(ptr %0) {
Core_iterator_where_17_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @106, align 8
  ret ptr @106
}

define ptr @Core_iterator_where_17_2_3_isMatch_then.254(ptr %0) {
Core_iterator_where_17_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @107, align 8
  ret ptr @107
}

define ptr @Core_iterator_where_17_2_3_isMatch_else(ptr %0) {
Core_iterator_where_17_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_isMatch_else.256(ptr %0) {
Core_iterator_where_17_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_equals_else.258(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @108, align 8
  ret ptr @108
}

define ptr @Core_iterator_where_17_2_3_equals_else.260(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_17_2_3_equals_else.262(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @109, align 8
  ret ptr @109
}

define ptr @Core_iterator_where_17_2_3_equals_else.264(ptr %0) {
Core_iterator_where_17_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @110, align 8
  ret ptr @110
}

define ptr @Core_iterator_where_17_2_3_case-1_matched(ptr %0) {
Core_iterator_where_17_2_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %4, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_17_2_3_5, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 0
  store ptr %8, ptr %19, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 1
  store ptr %21, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_where_17_2_3_6, align 8
  %24 = load ptr, ptr @fun_Core_iterator_where_17_2_3_5, align 8
  %25 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6, align 8
  %26 = call ptr @Builtins__ifElse(ptr %13, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_where_17_2_3_5(ptr %0) {
Core_iterator_where_17_2_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_Item, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.266, align 8
  ret ptr @tag_More.266
}

define ptr @Core_iterator_where_17_2_3_6(ptr %0) {
Core_iterator_where_17_2_3_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @Core_iterator_next(ptr %7)
  %9 = load ptr, ptr @tag_Empty, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %8, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %10, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %8, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, align 8
  %25 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %26 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-0_didNotMatch, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %20, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @111, align 8
  ret ptr @111
}

define ptr @Core_iterator_where_17_2_3_6_5_case-0_didNotMatch(ptr %0) {
Core_iterator_where_17_2_3_6_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else.287, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.288, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.288, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_matched, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_matched, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_case-1_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then.267, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.268, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else.285, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.286, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.268, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.286, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then.267(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then.269, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.270, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else.283, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.284, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.270, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.284, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then.269(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_then.271, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.272, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_equals_else.281, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.282, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_then.272, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_equals_else.282, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_then.271(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_else.279, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else.280, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else.280, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_then(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @112, align 8
  ret ptr @112
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_else(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @113, align 8
  ret ptr @113
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_then(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_then.273, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then.274, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_hasKey_else.275, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else.276, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_then.274, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_hasKey_else.276, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_then.277, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then.278, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_17_2_3_6_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_then.278, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_17_2_3_6_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_then.273(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @114, align 8
  ret ptr @114
}

define ptr @Core_iterator_where_17_2_3_6_5_hasKey_else.275(ptr %0) {
Core_iterator_where_17_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @115, align 8
  ret ptr @115
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_then.277(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @116, align 8
  ret ptr @116
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_else(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_6_5_isMatch_else.279(ptr %0) {
Core_iterator_where_17_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else.281(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @117, align 8
  ret ptr @117
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else.283(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else.285(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @118, align 8
  ret ptr @118
}

define ptr @Core_iterator_where_17_2_3_6_5_equals_else.287(ptr %0) {
Core_iterator_where_17_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @119, align 8
  ret ptr @119
}

define ptr @Core_iterator_where_17_2_3_6_5_case-1_matched(ptr %0) {
Core_iterator_where_17_2_3_6_5_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_State, align 8
  %15 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %15, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %8, ptr %16, align 8
  %17 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %20 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %20, align 1
  %21 = call ptr @make_candy_tag(ptr %20, ptr %19)
  store ptr %21, ptr @tag_More.289, align 8
  ret ptr @tag_More.289
}

define ptr @Core_iterator_where_17_2_3_6_5_case-1_didNotMatch(ptr %0) {
Core_iterator_where_17_2_3_6_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_where_17_2_3_case-1_didNotMatch(ptr %0) {
Core_iterator_where_17_2_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_16.290(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.292, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.293, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.293, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_where_17)
  %7 = call ptr @Core_iterator_where_17(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_16_0.292(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_takeWhile(ptr %0, ptr %1) {
Core_iterator_takeWhile:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_takeWhile_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7, align 8
  %9 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_takeWhile_2() {
Core_iterator_takeWhile_2:
  %0 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_takeWhile_7(ptr %0, ptr %1) {
Core_iterator_takeWhile_7:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = load ptr, ptr @tag_Empty, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %2, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %9 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_list_get(ptr %10, ptr %11)
  %13 = load ptr, ptr @tag_Match, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %2, ptr %16, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %10, ptr %17, align 8
  %18 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 2
  store ptr %19, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %22 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %23 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %14, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_iterator_takeWhile_7_3_equals_else(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @120, align 8
  ret ptr @120
}

define ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.314, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.315, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.315, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_takeWhile_7_3_equals_then(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.294, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.295, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.312, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.313, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.295, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.313, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.294(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.296, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.297, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.310, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.311, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.297, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.311, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.296(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.298, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.299, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.308, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.309, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.299, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.309, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.298(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else.306, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.307, align 8
  %31 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.307, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @121, align 8
  ret ptr @121
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @122, align 8
  ret ptr @122
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then.300, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.301, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else.302, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.303, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.301, align 8
  %20 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.303, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then.304, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.305, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.305, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then.300(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @123, align 8
  ret ptr @123
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else.302(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @124, align 8
  ret ptr @124
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then.304(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @125, align 8
  ret ptr @125
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else.306(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.308(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @126, align 8
  ret ptr @126
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.310(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.312(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @127, align 8
  ret ptr @127
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.314(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @128, align 8
  ret ptr @128
}

define ptr @Core_iterator_takeWhile_7_3_case-1_matched(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %4, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %8, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %20 = call ptr @Builtins__ifElse(ptr %13, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_iterator_takeWhile_7_3_5(ptr %0) {
Core_iterator_takeWhile_7_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.316, align 8
  ret ptr @tag_More.316
}

define ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_withIndex_2() {
Core_iterator_withIndex_2:
  %0 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_30(ptr %0) {
Core_iterator_take_30:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:take:30:5", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Item, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:take:30:5", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Item, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_take(ptr %0, ptr %1) {
Core_iterator_take:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %1)
  %8 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %11 = call ptr @make_candy_function(ptr @Core_iterator_take_22, ptr %10, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_take_22, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_22, align 8
  %13 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %12)
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %15 = call ptr @Core_iterator_wrapSafe(ptr %13, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %15, ptr %20, align 8
  %21 = load ptr, ptr @tag_Index, align 8
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %23, align 8
  %24 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %24, align 8
  %25 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %28 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %29 = call ptr @Core_iterator_generateWithState(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_27, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_27, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_27, align 8
  %34 = call ptr @Core_iterator_takeWhile(ptr %29, ptr %33)
  %35 = load ptr, ptr @fun_Core_iterator_take_30, align 8
  %36 = call ptr @Core_iterator_map(ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_take_22() {
Core_iterator_take_22:
  %0 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_27(ptr %0, ptr %1) {
Core_iterator_take_27:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_take_27_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_take_27_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_27_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.325, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_take_27_1_isMatch_else.326, align 8
  %21 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.326, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @Core_int_isLessThan(ptr %27, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_take_27_1_equals_then(ptr %0) {
Core_iterator_take_27_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_27_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_take_27_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_take_27_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else.323, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_take_27_1_isMatch_else.324, align 8
  %31 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else.324, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_take_27_1_hasKey_then(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @129, align 8
  ret ptr @129
}

define ptr @Core_iterator_take_27_1_hasKey_else(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @130, align 8
  ret ptr @130
}

define ptr @Core_iterator_take_27_1_isMatch_then(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_then.317, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_take_27_1_hasKey_then.318, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_hasKey_else.319, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_take_27_1_hasKey_else.320, align 8
  %19 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_then.318, align 8
  %20 = load ptr, ptr @fun_Core_iterator_take_27_1_hasKey_else.320, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_then.321, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_take_27_1_isMatch_then.322, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_27_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_27_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_then.322, align 8
  %34 = load ptr, ptr @fun_Core_iterator_take_27_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_take_27_1_hasKey_then.317(ptr %0) {
Core_iterator_take_27_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @131, align 8
  ret ptr @131
}

define ptr @Core_iterator_take_27_1_hasKey_else.319(ptr %0) {
Core_iterator_take_27_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @132, align 8
  ret ptr @132
}

define ptr @Core_iterator_take_27_1_isMatch_then.321(ptr %0) {
Core_iterator_take_27_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @133, align 8
  ret ptr @133
}

define ptr @Core_iterator_take_27_1_isMatch_else(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_isMatch_else.323(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_27_1_equals_else(ptr %0) {
Core_iterator_take_27_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @134, align 8
  ret ptr @134
}

define ptr @Core_iterator_take_27_1_isMatch_else.325(ptr %0) {
Core_iterator_take_27_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_26_6(ptr %0, ptr %1) {
Core_iterator_skip_26_6:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_skip_26_6_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_26_6_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_else.335, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.336, align 8
  %21 = load ptr, ptr @"fun_Core__21_isMatch_then, Core__32_isMatch_then, Core__43_isMatch_then, Core__104_isMatch_then, Core__155_isMatch_then, Core__166_isMatch_then, Core_bool_11_isMatch_then, Core_check_11_isMatch_then, Core_controlFlow_if_23, Core_controlFlow_31_isMatch_then, Core_controlFlow_52_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_35_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_40_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_21_isMatch_then, Core_fixedDecimal_32_isMatch_then, Core_fixedDecimal_43_isMatch_then, Core_fixedDecimal_54_isMatch_then, Core_fixedDecimal_105_isMatch_then, Core_function_21_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_31_isMatch_then, Core_int_42_isMatch_then, Core_iterator_foldLeft_21_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_26_6_1_isMatch_then, Core_iterator_take_27_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_21_isMatch_then, Core_iterator_32_isMatch_then, Core_iterator_93_isMatch_then, Core_iterator_104_isMatch_then, Core_iterator_130_isMatch_then, Core_iterator_139_isMatch_then, Core_list_firstIndexWhere_21_1_isMatch_then, Core_list_generate_51_1_isMatch_then, Core_list_lastIndexWhere_38_1_isMatch_then, Core_list_31_isMatch_then, Core_list_42_isMatch_then, Core_result_21_isMatch_then, Core_result_32_isMatch_then, Core_struct_21_isMatch_then, Core_tag_31_isMatch_then, Core_text_repeat_30_1_isMatch_then, Core_text_31_isMatch_then, Core_text_42_isMatch_then, Core_type_21_isMatch_then, Examples_fibonacci_then, Examples_fibonacci_21_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.336, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_7, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_26_6_7, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %27, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 2
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_skip_26_6_8, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_26_6_7, align 8
  %39 = load ptr, ptr @fun_Core_iterator_skip_26_6_8, align 8
  %40 = call ptr @Builtins__ifElse(ptr %29, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_skip_26_6_1_equals_then(ptr %0) {
Core_iterator_skip_26_6_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_else.333, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.334, align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else.334, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_skip_26_6_1_hasKey_then(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @135, align 8
  ret ptr @135
}

define ptr @Core_iterator_skip_26_6_1_hasKey_else(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @136, align 8
  ret ptr @136
}

define ptr @Core_iterator_skip_26_6_1_isMatch_then(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_N, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_then.327, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then.328, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_hasKey_else.329, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else.330, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_then.328, align 8
  %20 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_hasKey_else.330, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_then.331, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then.332, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_then.332, align 8
  %34 = load ptr, ptr @fun_Core_iterator_skip_26_6_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_skip_26_6_1_hasKey_then.327(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_N, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @137, align 8
  ret ptr @137
}

define ptr @Core_iterator_skip_26_6_1_hasKey_else.329(ptr %0) {
Core_iterator_skip_26_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @138, align 8
  ret ptr @138
}

define ptr @Core_iterator_skip_26_6_1_isMatch_then.331(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @139, align 8
  ret ptr @139
}

define ptr @Core_iterator_skip_26_6_1_isMatch_else(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_26_6_1_isMatch_else.333(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_26_6_1_equals_else(ptr %0) {
Core_iterator_skip_26_6_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @140, align 8
  ret ptr @140
}

define ptr @Core_iterator_skip_26_6_1_isMatch_else.335(ptr %0) {
Core_iterator_skip_26_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_26_6_7(ptr %0) {
Core_iterator_skip_26_6_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_skip_26_6_8(ptr %0) {
Core_iterator_skip_26_6_8:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_16_equals_then, Core_bool_lazyOr_16_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_21_5_equals_then, Core_iterator_generateWithState_12_1_3_equals_then, Core_iterator_map_17_3_equals_then, Core_iterator_reduceLeft_16_equals_then, Core_iterator_skip_26_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_17_2_3_equals_then, Core_iterator_where_17_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_14_22_8_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_19_equals_then, Core_list_lastWhere_19_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %10 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else, align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %16, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %16, i32 0, i32 2
  store ptr %3, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %16, i32 0, i32 3
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_case-0_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch, align 8
  %26 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %27 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-0_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %15, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `Empty`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @141, align 8
  ret ptr @141
}

define ptr @Core_iterator_skip_26_6_8_3_case-0_didNotMatch(ptr %0) {
Core_iterator_skip_26_6_8_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else.349, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.350, align 8
  %18 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.350, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_matched, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_case-1_didNotMatch, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_matched, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_case-1_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %24, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then.337, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.338, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else.347, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.348, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.338, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.348, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then.337(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then.339, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.340, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else.345, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.346, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.340, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.346, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then.339(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_then.341, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.342, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_equals_else.343, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.344, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_then.342, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_equals_else.344, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_skip_26_6_8_3_equals_then.341(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_26_6_8_3_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Core_iterator_skip_26_6_8_3_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_skip_26_6_8_3_hasKey_then(ptr %0) {
Core_iterator_skip_26_6_8_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @142, align 8
  ret ptr @142
}

define ptr @Core_iterator_skip_26_6_8_3_hasKey_else(ptr %0) {
Core_iterator_skip_26_6_8_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @143, align 8
  ret ptr @143
}

define ptr @Core_iterator_skip_26_6_8_3_isMatch_then(ptr %0) {
Core_iterator_skip_26_6_8_3_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @144, align 8
  ret ptr @144
}

define ptr @Core_iterator_skip_26_6_8_3_isMatch_else(ptr %0) {
Core_iterator_skip_26_6_8_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else.343(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @145, align 8
  ret ptr @145
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else.345(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else.347(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @146, align 8
  ret ptr @146
}

define ptr @Core_iterator_skip_26_6_8_3_equals_else.349(ptr %0) {
Core_iterator_skip_26_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @147, align 8
  ret ptr @147
}

define ptr @Core_iterator_skip_26_6_8_3_case-1_matched(ptr %0) {
Core_iterator_skip_26_6_8_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:skip:26:6:8:3:13", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @num_1, align 8
  %16 = call ptr @candy_builtin_int_subtract(ptr %14, ptr %15)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_Iterator, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %4, ptr %21, align 8
  %22 = load ptr, ptr @tag_N, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %16, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %27, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_skip_26_6_8_3_case-1_didNotMatch(ptr %0) {
Core_iterator_skip_26_6_8_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_16.351(ptr %0, ptr %1) {
Core_controlFlow_recursive_16:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_16_0.353, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_16_0.354, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_16_0.354, align 8
  %6 = call ptr @Core_iterator_skip_26_6(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_16_0.353(ptr %0, ptr %1) {
Core_controlFlow_recursive_16_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_skip(ptr %0, ptr %1) {
Core_iterator_skip:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_skip_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_skip_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @candy_builtin_type_of(ptr %1)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_int_isNonNegative(ptr %1)
  %12 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %5, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_skip_26, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_skip_26, align 8
  %18 = load ptr, ptr @fun_Core_iterator_skip_26, align 8
  %19 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_Iterator.355, align 8
  ret ptr @tag_Iterator.355
}

define ptr @Core_iterator_skip_2() {
Core_iterator_skip_2:
  %0 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_skip_26(ptr %0) {
Core_iterator_skip_26:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = load ptr, ptr @fun_Core_iterator_skip_26_6, align 8
  %17 = call ptr @Core_function_is2(ptr %16)
  %18 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %19 = load ptr, ptr @"Core:iterator:skip:26:7", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @fun_Core_controlFlow_recursive_16.352, align 8
  %22 = call ptr @Core_controlFlow_recursive_16.351(ptr %21, ptr %15)
  ret ptr %22
}

define ptr @Core_iterator_fromList(ptr %0) {
Core_iterator_fromList:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:fromList:18", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @candy_builtin_list_length(ptr %0)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_fromList_19, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_fromList_19, align 8
  %16 = load ptr, ptr @fun_Core_iterator_fromList_19, align 8
  %17 = call ptr @Core_iterator_generate(ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_iterator_fromList_19(ptr %0, ptr %1) {
Core_iterator_fromList_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Builtins__listGet(ptr %3, ptr %0)
  ret ptr %4
}

define ptr @Core_iterator_toList_6(ptr %0, ptr %1) {
Core_iterator_toList_6:
  %2 = call ptr @Core_list_append(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_iterator_windowed:
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Core_iterator_windowed_2, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_windowed_2, align 8
  %6 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  %7 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Int, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:windowed:22", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = load ptr, ptr @num_0, align 8
  %20 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %19)
  %21 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @candy_builtin_type_of(ptr %2)
  %24 = load ptr, ptr @tag_Int, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_type_of(ptr %2)
  %29 = load ptr, ptr @tag_Int, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:iterator:windowed:42", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @num_0, align 8
  %35 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = call ptr @Core_bool_is(ptr %3)
  %39 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %3, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %1, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %2, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_iterator_windowed_57, align 8
  %46 = load ptr, ptr @fun_Core_iterator_windowed_57, align 8
  %47 = call ptr @Core_iterator_generateWithState(ptr %7, ptr %46)
  ret ptr %47
}

define ptr @Core_iterator_windowed_2() {
Core_iterator_windowed_2:
  %0 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed_57(ptr %0, ptr %1) {
Core_iterator_windowed_57:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Core_iterator_take(ptr %0, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %4, ptr %5)
  %7 = load ptr, ptr @148, align 8
  %8 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_List, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:windowed:57:14", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_list_length(ptr %9)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %16, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_18, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_windowed_57_18, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %16, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_19, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_windowed_57_19, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @fun_Core_iterator_windowed_57_18, align 8
  %29 = load ptr, ptr @fun_Core_iterator_windowed_57_19, align 8
  %30 = call ptr @Builtins__ifElse(ptr %27, ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %9, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %34, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_windowed_57_24, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_windowed_57_24, align 8
  %38 = load ptr, ptr @fun_Core_iterator_windowed_57_24, align 8
  %39 = load ptr, ptr @"fun_Core_iterator_generate_42_5, Core_iterator_generateWithState_12_1_3_case-1_matched, Core_iterator_map_17_3_case-0_matched, Core_iterator_skip_26_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_17_2_3_case-0_matched, Core_iterator_where_17_2_3_6_5_case-0_matched, Core_iterator_windowed_57_25, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_14_22_8_case-0_matched", align 8
  %40 = call ptr @Builtins__ifElse(ptr %30, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_windowed_57_18(ptr %0) {
Core_iterator_windowed_57_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_windowed_57_19(ptr %0) {
Core_iterator_windowed_57_19:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @candy_builtin_equals(ptr %2, ptr %4)
  ret ptr %5
}

define ptr @Core_iterator_windowed_57_24(ptr %0) {
Core_iterator_windowed_57_24:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @Core_iterator_skip(ptr %2, ptr %4)
  %6 = alloca ptr, i64 3, align 8
  %7 = alloca ptr, i64 3, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr ptr, ptr %6, i64 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr ptr, ptr %7, i64 0
  store ptr %5, ptr %10, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr ptr, ptr %6, i64 1
  store ptr %11, ptr %14, align 8
  %15 = getelementptr ptr, ptr %7, i64 1
  store ptr %13, ptr %15, align 8
  %16 = getelementptr ptr, ptr %6, i64 2
  store ptr null, ptr %16, align 8
  %17 = getelementptr ptr, ptr %7, i64 2
  store ptr null, ptr %17, align 8
  %18 = call ptr @make_candy_struct(ptr %6, ptr %7)
  %19 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_More.356, align 8
  ret ptr @tag_More.356
}

define ptr @Core_iterator_chunked(ptr %0, ptr %1) {
Core_iterator_chunked:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:chunked:17", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %13)
  %15 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_iterator_chunked_22, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_chunked_22, align 8
  %19 = load ptr, ptr @fun_Core_iterator_chunked_22, align 8
  %20 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %19)
  %21 = load ptr, ptr @tag_True, align 8
  %22 = call ptr @Core_iterator_windowed(ptr %20, ptr %1, ptr %1, ptr %21)
  ret ptr %22
}

define ptr @Core_iterator_chunked_22() {
Core_iterator_chunked_22:
  %0 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_130_equals_then(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then.357, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_130_equals_then.358, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_else.373, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_130_equals_else.374, align 8
  %14 = load ptr, ptr @fun_Core_iterator_130_equals_then.358, align 8
  %15 = load ptr, ptr @fun_Core_iterator_130_equals_else.374, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_130_equals_then.357(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then.359, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_130_equals_then.360, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_else.371, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_130_equals_else.372, align 8
  %14 = load ptr, ptr @fun_Core_iterator_130_equals_then.360, align 8
  %15 = load ptr, ptr @fun_Core_iterator_130_equals_else.372, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_130_equals_then.359(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_then.361, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_130_equals_then.362, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_130_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_130_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_130_equals_then.362, align 8
  %14 = load ptr, ptr @fun_Core_iterator_130_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_130_equals_then.361(ptr %0) {
Core_iterator_130_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_130_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_130_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_130_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_130_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_130_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_else.369, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_130_isMatch_else.370, align 8
  %31 = load ptr, ptr @fun_Core_iterator_130_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_130_isMatch_else.370, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_130_hasKey_then(ptr %0) {
Core_iterator_130_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @151, align 8
  ret ptr @151
}

define ptr @Core_iterator_130_hasKey_else(ptr %0) {
Core_iterator_130_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @152, align 8
  ret ptr @152
}

define ptr @Core_iterator_130_isMatch_then(ptr %0) {
Core_iterator_130_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_then.363, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_130_hasKey_then.364, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_130_hasKey_else.365, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_130_hasKey_else.366, align 8
  %19 = load ptr, ptr @fun_Core_iterator_130_hasKey_then.364, align 8
  %20 = load ptr, ptr @fun_Core_iterator_130_hasKey_else.366, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_then.367, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_130_isMatch_then.368, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_130_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_130_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_130_isMatch_then.368, align 8
  %34 = load ptr, ptr @fun_Core_iterator_130_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_130_hasKey_then.363(ptr %0) {
Core_iterator_130_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @153, align 8
  ret ptr @153
}

define ptr @Core_iterator_130_hasKey_else.365(ptr %0) {
Core_iterator_130_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @154, align 8
  ret ptr @154
}

define ptr @Core_iterator_130_isMatch_then.367(ptr %0) {
Core_iterator_130_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @155, align 8
  ret ptr @155
}

define ptr @Core_iterator_130_isMatch_else(ptr %0) {
Core_iterator_130_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_130_isMatch_else.369(ptr %0) {
Core_iterator_130_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_130_equals_else(ptr %0) {
Core_iterator_130_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @156, align 8
  ret ptr @156
}

define ptr @Core_iterator_130_equals_else.371(ptr %0) {
Core_iterator_130_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_130_equals_else.373(ptr %0) {
Core_iterator_130_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @157, align 8
  ret ptr @157
}

define ptr @Core_iterator_130_equals_else.375(ptr %0) {
Core_iterator_130_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @158, align 8
  ret ptr @158
}

define ptr @Core_iterator_130_isMatch_else.377(ptr %0) {
Core_iterator_130_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_139_equals_then(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then.379, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_139_equals_then.380, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_else.395, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_139_equals_else.396, align 8
  %14 = load ptr, ptr @fun_Core_iterator_139_equals_then.380, align 8
  %15 = load ptr, ptr @fun_Core_iterator_139_equals_else.396, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_139_equals_then.379(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then.381, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_139_equals_then.382, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_else.393, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_139_equals_else.394, align 8
  %14 = load ptr, ptr @fun_Core_iterator_139_equals_then.382, align 8
  %15 = load ptr, ptr @fun_Core_iterator_139_equals_else.394, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_139_equals_then.381(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_then.383, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_139_equals_then.384, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_139_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_139_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_139_equals_then.384, align 8
  %14 = load ptr, ptr @fun_Core_iterator_139_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_139_equals_then.383(ptr %0) {
Core_iterator_139_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_139_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_139_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_139_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_139_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_139_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_else.391, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_139_isMatch_else.392, align 8
  %31 = load ptr, ptr @fun_Core_iterator_139_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_139_isMatch_else.392, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_139_hasKey_then(ptr %0) {
Core_iterator_139_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @159, align 8
  ret ptr @159
}

define ptr @Core_iterator_139_hasKey_else(ptr %0) {
Core_iterator_139_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @160, align 8
  ret ptr @160
}

define ptr @Core_iterator_139_isMatch_then(ptr %0) {
Core_iterator_139_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_then.385, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_139_hasKey_then.386, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_139_hasKey_else.387, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_139_hasKey_else.388, align 8
  %19 = load ptr, ptr @fun_Core_iterator_139_hasKey_then.386, align 8
  %20 = load ptr, ptr @fun_Core_iterator_139_hasKey_else.388, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_then.389, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_139_isMatch_then.390, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_139_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_139_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_139_isMatch_then.390, align 8
  %34 = load ptr, ptr @fun_Core_iterator_139_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_139_hasKey_then.385(ptr %0) {
Core_iterator_139_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @161, align 8
  ret ptr @161
}

define ptr @Core_iterator_139_hasKey_else.387(ptr %0) {
Core_iterator_139_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @162, align 8
  ret ptr @162
}

define ptr @Core_iterator_139_isMatch_then.389(ptr %0) {
Core_iterator_139_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @163, align 8
  ret ptr @163
}

define ptr @Core_iterator_139_isMatch_else(ptr %0) {
Core_iterator_139_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_139_isMatch_else.391(ptr %0) {
Core_iterator_139_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_139_equals_else(ptr %0) {
Core_iterator_139_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @164, align 8
  ret ptr @164
}

define ptr @Core_iterator_139_equals_else.393(ptr %0) {
Core_iterator_139_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @17, align 8
  ret ptr %4
}

define ptr @Core_iterator_139_equals_else.395(ptr %0) {
Core_iterator_139_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @165, align 8
  ret ptr @165
}

define ptr @Core_iterator_139_equals_else.397(ptr %0) {
Core_iterator_139_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @166, align 8
  ret ptr @166
}

define ptr @Core_iterator_139_isMatch_else.399(ptr %0) {
Core_iterator_139_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_isEmpty_2() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_isEmpty_2.401() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_163(ptr %0) {
Core_iterator_163:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:163:8", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_int_multiply(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_toList_2.403() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_length_2() {
Core_iterator_length_2:
  %0 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_187(ptr %0) {
Core_iterator_187:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:187:7", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_0, align 8
  %8 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_194(ptr %0) {
Core_iterator_194:
  %1 = load ptr, ptr @num_2, align 8
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_216(ptr %0) {
Core_iterator_216:
  %1 = call ptr @Core_int_isOdd(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_toList_2.405() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_230(ptr %0) {
Core_iterator_230:
  %1 = load ptr, ptr @num_4, align 8
  %2 = call ptr @Core_int_isLessThan(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2.407() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.409() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.411() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.413() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.415() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.417() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.419() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_result_getValue(ptr %0) {
Core_result_getValue:
  %1 = call ptr @Core_result_is(ptr %0)
  %2 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:result:getValue:12", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:result:getValue:12", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  ret ptr %14
}

define ptr @Core_result_flatMap(ptr %0, ptr %1) {
Core_result_flatMap:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is1(ptr %1)
  %6 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_flatMap_17, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_flatMap_17, align 8
  %11 = call ptr @Core_result_is(ptr %0)
  %12 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:result:flatMap:19", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = load ptr, ptr @fun_Core_result_flatMap_17, align 8
  %16 = call ptr @Core_function_is1(ptr %15)
  %17 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:result:flatMap:19", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_mapOr_18, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_mapOr_18, align 8
  %23 = load ptr, ptr @fun_Core_result_flatMap_17, align 8
  %24 = load ptr, ptr @fun_Core_result_mapOr_18, align 8
  %25 = call ptr @Core_result_mapOrElse(ptr %0, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Core_result_flatMap_17(ptr %0, ptr %1) {
Core_result_flatMap_17:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %6
}

define ptr @Core_result_mapOr_18(ptr %0, ptr %1) {
Core_result_mapOr_18:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_map(ptr %0, ptr %1) {
Core_result_map:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is1(ptr %1)
  %6 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_map_17, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_map_17, align 8
  %11 = load ptr, ptr @fun_Core_result_map_17, align 8
  %12 = call ptr @Core_result_flatMap(ptr %0, ptr %11)
  ret ptr %12
}

define ptr @Core_result_map_17(ptr %0, ptr %1) {
Core_result_map_17:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  %7 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Ok.421, align 8
  ret ptr @tag_Ok.421
}

define ptr @Examples_fibonacci_isLessThan(ptr %0, ptr %1) {
Examples_fibonacci_isLessThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = load ptr, ptr @"Examples:fibonacci:compareTo:8", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %12 = load ptr, ptr @"Examples:fibonacci:compareTo:8", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %15 = load ptr, ptr @tag_Less, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Examples_fibonacci_fibonacci_2(ptr %0, ptr %1) {
Examples_fibonacci_fibonacci_2:
  %2 = load ptr, ptr @num_2, align 8
  %3 = call ptr @Examples_fibonacci_isLessThan(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %1, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2_10, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Examples_fibonacci_fibonacci_2_10, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %7, i32 0, i32 1
  store ptr %0, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2_11, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Examples_fibonacci_fibonacci_2_11, align 8
  %11 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_10, align 8
  %12 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_11, align 8
  %13 = call ptr @Builtins__ifElse(ptr %3, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Examples_fibonacci_fibonacci_2_10(ptr %0) {
Examples_fibonacci_fibonacci_2_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_fibonacci_fibonacci_2_11(ptr %0) {
Examples_fibonacci_fibonacci_2_11:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:9", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @num_1, align 8
  %12 = call ptr @candy_builtin_int_subtract(ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %16)
  %18 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = call ptr @candy_builtin_type_of(ptr %19)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %24 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:26", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @num_2, align 8
  %29 = call ptr @candy_builtin_int_subtract(ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %29, ptr %33)
  %35 = call ptr @candy_builtin_type_of(ptr %17)
  %36 = load ptr, ptr @tag_Int, align 8
  %37 = call ptr @candy_builtin_equals(ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %39 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:28", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr %39)
  %41 = call ptr @candy_builtin_type_of(ptr %34)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %45 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:11:28", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_int_add(ptr %17, ptr %34)
  ret ptr %47
}

define ptr @Examples_fibonacci_recursive_0(ptr %0, ptr %1) {
Examples_fibonacci_recursive_0:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Examples_fibonacci_recursive_0_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  %5 = load ptr, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  %6 = call ptr @Examples_fibonacci_fibonacci_2(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Examples_fibonacci_recursive_0_0(ptr %0, ptr %1) {
Examples_fibonacci_recursive_0_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Examples_fibonacci_23_6_14(ptr %0) {
Examples_fibonacci_23_6_14:
  %1 = load ptr, ptr @fun_Examples_fibonacci_recursive_0, align 8
  %2 = call ptr @Examples_fibonacci_recursive_0(ptr %1, ptr %0)
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Examples_fibonacci_23(ptr %0) {
Examples_fibonacci_23:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Examples:fibonacci:23:5", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Arguments, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Examples:fibonacci:23:5", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Arguments, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  %14 = call ptr @candy_builtin_type_of(ptr %13)
  %15 = load ptr, ptr @tag_List, align 8
  %16 = call ptr @candy_builtin_equals(ptr %15, ptr %14)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %13, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Examples_fibonacci_23_6_equals_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Examples_fibonacci_23_6_equals_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %14, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Examples_fibonacci_23_6_equals_else.424, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Examples_fibonacci_23_6_equals_else.425, align 8
  %23 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_then, align 8
  %24 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_else.425, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Examples_fibonacci_23_6_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Examples_fibonacci_23_6_case-0_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Examples_fibonacci_23_6_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Examples_fibonacci_23_6_case-0_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Examples_fibonacci_23_6_case-0_matched, align 8
  %37 = load ptr, ptr @fun_Examples_fibonacci_23_6_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  %39 = call ptr @candy_builtin_type_of(ptr %0)
  %40 = load ptr, ptr @tag_Struct, align 8
  %41 = call ptr @candy_builtin_equals(ptr %39, ptr %40)
  %42 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %43 = load ptr, ptr @"Examples:fibonacci:23:12", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr %43)
  %45 = load ptr, ptr @tag_Stdout, align 8
  %46 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %45)
  %47 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %48 = load ptr, ptr @"Examples:fibonacci:23:12", align 8
  %49 = call ptr @"anonymous_$generated__needs"(ptr %46, ptr %47, ptr %48)
  %50 = load ptr, ptr @tag_Stdout, align 8
  %51 = call ptr @candy_builtin_struct_get(ptr %0, ptr %50)
  %52 = call ptr @get_candy_function_pointer(ptr %51)
  %53 = call ptr @get_candy_function_environment(ptr %51)
  %54 = call ptr (...) %52(ptr %38, ptr %53)
  ret ptr %54
}

define ptr @Examples_fibonacci_23_6_equals_then(ptr %0) {
Examples_fibonacci_23_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_list_length(ptr %2)
  %4 = load ptr, ptr @num_1, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Examples_fibonacci_23_6_equals_then.422, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Examples_fibonacci_23_6_equals_then.423, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Examples_fibonacci_23_6_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Examples_fibonacci_23_6_equals_else, align 8
  %14 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_then.423, align 8
  %15 = load ptr, ptr @fun_Examples_fibonacci_23_6_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Examples_fibonacci_23_6_equals_then.422(ptr %0) {
Examples_fibonacci_23_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @178, align 8
  ret ptr @178
}

define ptr @Examples_fibonacci_23_6_equals_else(ptr %0) {
Examples_fibonacci_23_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @179, align 8
  ret ptr @179
}

define ptr @Examples_fibonacci_23_6_equals_else.424(ptr %0) {
Examples_fibonacci_23_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a List, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @180, align 8
  ret ptr @180
}

define ptr @Examples_fibonacci_23_6_case-0_matched(ptr %0) {
Examples_fibonacci_23_6_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Text, align 8
  %7 = call ptr @candy_builtin_equals(ptr %5, ptr %6)
  %8 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %9 = load ptr, ptr @"Examples:fibonacci:23:6:7", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr %9)
  %11 = call ptr @candy_builtin_int_parse(ptr %4)
  %12 = load ptr, ptr @fun_Examples_fibonacci_23_6_14, align 8
  %13 = call ptr @Core_result_map(ptr %11, ptr %12)
  %14 = call ptr @Core_result_getValue(ptr %13)
  ret ptr %14
}

define ptr @Examples_fibonacci_23_6_case-0_didNotMatch(ptr %0) {
Examples_fibonacci_23_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  ret ptr %5
}
