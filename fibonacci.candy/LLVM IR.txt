; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::fitsInRustU128:10" = global ptr null
@"Builtins::fitsInRustU128:16" = global ptr null
@"Builtins::fitsInRustU128:5" = global ptr null
@"Builtins::fitsInRustU128:8" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitLength:11" = global ptr null
@"Builtins::intBitLength:5" = global ptr null
@"Builtins::intBitwiseAnd:11" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intBitwiseOr:11" = global ptr null
@"Builtins::intBitwiseOr:18" = global ptr null
@"Builtins::intBitwiseOr:5" = global ptr null
@"Builtins::intBitwiseXor:11" = global ptr null
@"Builtins::intBitwiseXor:18" = global ptr null
@"Builtins::intBitwiseXor:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intDivideTruncating:11" = global ptr null
@"Builtins::intDivideTruncating:17" = global ptr null
@"Builtins::intDivideTruncating:25" = global ptr null
@"Builtins::intDivideTruncating:32" = global ptr null
@"Builtins::intDivideTruncating:5" = global ptr null
@"Builtins::intModulo:11" = global ptr null
@"Builtins::intModulo:17" = global ptr null
@"Builtins::intModulo:25" = global ptr null
@"Builtins::intModulo:32" = global ptr null
@"Builtins::intModulo:5" = global ptr null
@"Builtins::intMultiply:11" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intParse:11" = global ptr null
@"Builtins::intParse:5" = global ptr null
@"Builtins::intRemainder:11" = global ptr null
@"Builtins::intRemainder:17" = global ptr null
@"Builtins::intRemainder:25" = global ptr null
@"Builtins::intRemainder:32" = global ptr null
@"Builtins::intRemainder:5" = global ptr null
@"Builtins::intShiftLeft:11" = global ptr null
@"Builtins::intShiftLeft:14" = global ptr null
@"Builtins::intShiftLeft:23" = global ptr null
@"Builtins::intShiftLeft:24" = global ptr null
@"Builtins::intShiftLeft:26:0" = global ptr null
@"Builtins::intShiftLeft:27" = global ptr null
@"Builtins::intShiftLeft:29" = global ptr null
@"Builtins::intShiftLeft:30" = global ptr null
@"Builtins::intShiftLeft:31" = global ptr null
@"Builtins::intShiftLeft:34" = global ptr null
@"Builtins::intShiftLeft:42" = global ptr null
@"Builtins::intShiftLeft:49" = global ptr null
@"Builtins::intShiftLeft:5" = global ptr null
@"Builtins::intShiftRight:11" = global ptr null
@"Builtins::intShiftRight:14" = global ptr null
@"Builtins::intShiftRight:23" = global ptr null
@"Builtins::intShiftRight:24" = global ptr null
@"Builtins::intShiftRight:26:0" = global ptr null
@"Builtins::intShiftRight:27" = global ptr null
@"Builtins::intShiftRight:29" = global ptr null
@"Builtins::intShiftRight:30" = global ptr null
@"Builtins::intShiftRight:31" = global ptr null
@"Builtins::intShiftRight:34" = global ptr null
@"Builtins::intShiftRight:42" = global ptr null
@"Builtins::intShiftRight:49" = global ptr null
@"Builtins::intShiftRight:5" = global ptr null
@"Builtins::intSubtract:11" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listFilled:10" = global ptr null
@"Builtins::listFilled:17" = global ptr null
@"Builtins::listFilled:5" = global ptr null
@"Builtins::listFilled:8" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::listRemoveAt:11" = global ptr null
@"Builtins::listRemoveAt:14" = global ptr null
@"Builtins::listRemoveAt:16" = global ptr null
@"Builtins::listRemoveAt:21" = global ptr null
@"Builtins::listRemoveAt:22" = global ptr null
@"Builtins::listRemoveAt:27" = global ptr null
@"Builtins::listRemoveAt:34" = global ptr null
@"Builtins::listRemoveAt:5" = global ptr null
@"Builtins::listReplace:11" = global ptr null
@"Builtins::listReplace:14" = global ptr null
@"Builtins::listReplace:16" = global ptr null
@"Builtins::listReplace:21" = global ptr null
@"Builtins::listReplace:22" = global ptr null
@"Builtins::listReplace:27" = global ptr null
@"Builtins::listReplace:35" = global ptr null
@"Builtins::listReplace:5" = global ptr null
@"Builtins::not:1" = global ptr null
@"Builtins::print:11" = global ptr null
@"Builtins::print:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:22" = global ptr null
@"Builtins::structGet:24:0" = global ptr null
@"Builtins::structGet:25" = global ptr null
@"Builtins::structGet:28" = global ptr null
@"Builtins::structGet:29" = global ptr null
@"Builtins::structGet:31:0" = global ptr null
@"Builtins::structGet:32" = global ptr null
@"Builtins::structGet:34" = global ptr null
@"Builtins::structGet:35" = global ptr null
@"Builtins::structGet:36" = global ptr null
@"Builtins::structGet:37" = global ptr null
@"Builtins::structGet:38" = global ptr null
@"Builtins::structGet:45" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::structGetKeys:11" = global ptr null
@"Builtins::structGetKeys:5" = global ptr null
@"Builtins::structHasKey:12" = global ptr null
@"Builtins::structHasKey:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::tagHasValue:11" = global ptr null
@"Builtins::tagHasValue:5" = global ptr null
@"Builtins::tagWithoutValue:11" = global ptr null
@"Builtins::tagWithoutValue:5" = global ptr null
@"Builtins::textCharacters:11" = global ptr null
@"Builtins::textCharacters:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Builtins::textContains:11" = global ptr null
@"Builtins::textContains:18" = global ptr null
@"Builtins::textContains:5" = global ptr null
@"Builtins::textEndsWith:11" = global ptr null
@"Builtins::textEndsWith:18" = global ptr null
@"Builtins::textEndsWith:5" = global ptr null
@"Builtins::textFromUtf8:11" = global ptr null
@"Builtins::textFromUtf8:5" = global ptr null
@"Builtins::textGetRange:11" = global ptr null
@"Builtins::textGetRange:14" = global ptr null
@"Builtins::textGetRange:16" = global ptr null
@"Builtins::textGetRange:24" = global ptr null
@"Builtins::textGetRange:25" = global ptr null
@"Builtins::textGetRange:27" = global ptr null
@"Builtins::textGetRange:33" = global ptr null
@"Builtins::textGetRange:36" = global ptr null
@"Builtins::textGetRange:38" = global ptr null
@"Builtins::textGetRange:46" = global ptr null
@"Builtins::textGetRange:47" = global ptr null
@"Builtins::textGetRange:49" = global ptr null
@"Builtins::textGetRange:5" = global ptr null
@"Builtins::textGetRange:53" = global ptr null
@"Builtins::textGetRange:55" = global ptr null
@"Builtins::textGetRange:63" = global ptr null
@"Builtins::textIsEmpty:11" = global ptr null
@"Builtins::textIsEmpty:5" = global ptr null
@"Builtins::textLength:11" = global ptr null
@"Builtins::textLength:5" = global ptr null
@"Builtins::textStartsWith:11" = global ptr null
@"Builtins::textStartsWith:18" = global ptr null
@"Builtins::textStartsWith:5" = global ptr null
@"Builtins::textTrimEnd:11" = global ptr null
@"Builtins::textTrimEnd:5" = global ptr null
@"Builtins::textTrimStart:11" = global ptr null
@"Builtins::textTrimStart:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:equality:17" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bit_length = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_bitwise_or = global ptr null
@fun_candy_builtin_int_bitwise_xor = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_divide_truncating = global ptr null
@fun_candy_builtin_int_modulo = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_parse = global ptr null
@fun_candy_builtin_int_remainder = global ptr null
@fun_candy_builtin_int_shift_left = global ptr null
@fun_candy_builtin_int_shift_right = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_filled = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_list_remove_at = global ptr null
@fun_candy_builtin_list_replace = global ptr null
@fun_candy_builtin_print = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_get_keys = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_characters = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_text_contains = global ptr null
@fun_candy_builtin_text_ends_with = global ptr null
@fun_candy_builtin_text_from_utf8 = global ptr null
@fun_candy_builtin_text_get_range = global ptr null
@fun_candy_builtin_text_is_empty = global ptr null
@fun_candy_builtin_text_length = global ptr null
@fun_candy_builtin_text_starts_with = global ptr null
@fun_candy_builtin_text_trim_end = global ptr null
@fun_candy_builtin_text_trim_start = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Equal = global ptr null
@tag_Equals = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_FunctionRun = global ptr null
@tag_GetArgumentCount = global ptr null
@tag_Greater = global ptr null
@tag_IfElse = global ptr null
@tag_Int = global ptr null
@tag_IntAdd = global ptr null
@tag_IntBitLength = global ptr null
@tag_IntBitwiseAnd = global ptr null
@tag_IntBitwiseOr = global ptr null
@tag_IntBitwiseXor = global ptr null
@tag_IntCompareTo = global ptr null
@tag_IntDivideTruncating = global ptr null
@tag_IntModulo = global ptr null
@tag_IntMultiply = global ptr null
@tag_IntParse = global ptr null
@tag_IntRemainder = global ptr null
@tag_IntShiftLeft = global ptr null
@tag_IntShiftRight = global ptr null
@tag_IntSubtract = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_ListFilled = global ptr null
@tag_ListGet = global ptr null
@tag_ListInsert = global ptr null
@tag_ListLength = global ptr null
@tag_ListRemoveAt = global ptr null
@tag_ListReplace = global ptr null
@tag_Match = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Print = global ptr null
@tag_Struct = global ptr null
@tag_StructGet = global ptr null
@tag_StructGetKeys = global ptr null
@tag_StructHasKey = global ptr null
@tag_Tag = global ptr null
@tag_TagGetValue = global ptr null
@tag_TagHasValue = global ptr null
@tag_TagWithoutValue = global ptr null
@tag_Text = global ptr null
@tag_TextCharacters = global ptr null
@tag_TextConcatenate = global ptr null
@tag_TextContains = global ptr null
@tag_TextEndsWith = global ptr null
@tag_TextFromUtf8 = global ptr null
@tag_TextGetRange = global ptr null
@tag_TextIsEmpty = global ptr null
@tag_TextLength = global ptr null
@tag_TextStartsWith = global ptr null
@tag_TextTrimEnd = global ptr null
@tag_TextTrimStart = global ptr null
@tag_ToDebugText = global ptr null
@tag_True = global ptr null
@tag_TypeOf = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_340282366920938463463374607431768211455 = global ptr null
@text_. = global ptr null
@"text_. You might want to call `shiftLeft` instead." = global ptr null
@"text_. You might want to call `shiftRight` instead." = global ptr null
@"text_Expected Equal, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected Greater, got " = global ptr null
@"text_Expected Less, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_Shifts by that much are not yet supported." = global ptr null
@"text_Struct `" = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_The shift `amount` is negative: " = global ptr null
@"text_You can't divide by zero." = global ptr null
@"text_` is missing the key `" = global ptr null
@"text_`." = global ptr null
@"text_`False` was not satisfied" = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`amount | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`bytes | typeIs List` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`dividend | typeIs Int` was not satisfied" = global ptr null
@"text_`divisor | typeIs Int` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`endExclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`endExclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`factorB | typeIs Int` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`length | isNonNegative` was not satisfied" = global ptr null
@"text_`length | typeIs Int` was not satisfied" = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`message | typeIs Text` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`pattern | typeIs Text` was not satisfied" = global ptr null
@"text_`prefix | typeIs Text` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied" = global ptr null
@"text_`startInclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`startInclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`subtrahend | typeIs Int` was not satisfied" = global ptr null
@"text_`suffix | typeIs Text` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"text_`value | isNonNegative` was not satisfied" = global ptr null
@"text_`value | typeIs Int` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then" = global ptr null
@"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__not = global ptr null
@fun_Builtins__not_1_equals_then = global ptr null
@fun_Builtins__not_1_equals_then.3 = global ptr null
@fun_Builtins__not_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__not_1_equals_else.5 = global ptr null
@2 = global ptr null
@fun_Builtins__not_1_equals_else.7 = global ptr null
@3 = global ptr null
@fun_Builtins__not_1_case-0_didNotMatch = global ptr null
@fun_Builtins__not_1_equals_then.9 = global ptr null
@fun_Builtins__not_1_equals_then.11 = global ptr null
@fun_Builtins__not_1_equals_else.13 = global ptr null
@4 = global ptr null
@fun_Builtins__not_1_equals_else.15 = global ptr null
@5 = global ptr null
@fun_Builtins__not_1_equals_else.17 = global ptr null
@6 = global ptr null
@fun_Builtins__not_1_case-1_didNotMatch = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_then = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.19 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@7 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.21 = global ptr null
@8 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.23 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.25 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.27 = global ptr null
@9 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.29 = global ptr null
@10 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.31 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.33 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.35 = global ptr null
@11 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.37 = global ptr null
@12 = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.39 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@13 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.41 = global ptr null
@14 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.43 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.45 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.47 = global ptr null
@15 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.49 = global ptr null
@16 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.51 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.53 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.55 = global ptr null
@17 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.57 = global ptr null
@18 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__equals = global ptr null
@fun_Builtins__functionRun = global ptr null
@fun_Builtins__getArgumentCount = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.59 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@19 = global ptr null
@fun_Builtins__ifElse_1_equals_else.61 = global ptr null
@20 = global ptr null
@fun_Builtins__ifElse_1_equals_else.63 = global ptr null
@21 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.65 = global ptr null
@fun_Builtins__ifElse_1_equals_then.67 = global ptr null
@fun_Builtins__ifElse_1_equals_else.69 = global ptr null
@22 = global ptr null
@fun_Builtins__ifElse_1_equals_else.71 = global ptr null
@23 = global ptr null
@fun_Builtins__ifElse_1_equals_else.73 = global ptr null
@24 = global ptr null
@fun_Builtins__ifElse_1_case-0_didNotMatch = global ptr null
@fun_Builtins__intAdd = global ptr null
@fun_Builtins__intBitLength = global ptr null
@fun_Builtins__intBitwiseAnd = global ptr null
@fun_Builtins__intBitwiseOr = global ptr null
@fun_Builtins__intBitwiseXor = global ptr null
@fun_Builtins__intCompareTo = global ptr null
@fun_Builtins__intDivideTruncating = global ptr null
@fun_Builtins__intModulo = global ptr null
@fun_Builtins__intMultiply = global ptr null
@fun_Builtins__intParse = global ptr null
@fun_Builtins__intRemainder = global ptr null
@fun_Builtins__intShiftLeft = global ptr null
@fun_Builtins__intShiftLeft_25 = global ptr null
@fun_Builtins__intShiftLeft_26 = global ptr null
@fun_Builtins__intShiftRight = global ptr null
@fun_Builtins__intShiftRight_25 = global ptr null
@fun_Builtins__intShiftRight_26 = global ptr null
@fun_Builtins__intSubtract = global ptr null
@fun_Builtins__listFilled = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Builtins__listInsert = global ptr null
@fun_Builtins__listLength = global ptr null
@fun_Builtins__listRemoveAt = global ptr null
@fun_Builtins__listReplace = global ptr null
@fun_Builtins__print = global ptr null
@fun_Builtins__structGet = global ptr null
@fun_Builtins__structGet_23 = global ptr null
@fun_Builtins__structGet_24 = global ptr null
@fun_Builtins__structGet_30 = global ptr null
@fun_Builtins__structGet_31 = global ptr null
@fun_Builtins__structGetKeys = global ptr null
@fun_Builtins__structHasKey = global ptr null
@fun_Builtins__tagGetValue = global ptr null
@fun_Builtins__tagHasValue = global ptr null
@fun_Builtins__tagWithoutValue = global ptr null
@fun_Builtins__textCharacters = global ptr null
@fun_Builtins__textConcatenate = global ptr null
@fun_Builtins__textContains = global ptr null
@fun_Builtins__textEndsWith = global ptr null
@fun_Builtins__textFromUtf8 = global ptr null
@fun_Builtins__textGetRange = global ptr null
@fun_Builtins__textIsEmpty = global ptr null
@fun_Builtins__textLength = global ptr null
@fun_Builtins__textStartsWith = global ptr null
@fun_Builtins__textTrimEnd = global ptr null
@fun_Builtins__textTrimStart = global ptr null
@fun_Builtins__toDebugText = global ptr null
@fun_Builtins__typeOf = global ptr null
@"Core:type:28" = global ptr null
@"Core:type:is:2" = global ptr null
@"Core:type:is:5" = global ptr null
@"text_`typeOf type | equals Tag` was not satisfied" = global ptr null
@"Core:type:is:7" = global ptr null
@"Core:type:is:11" = global ptr null
@"Core:type:is:13" = global ptr null
@tag_Is = global ptr null
@"Core:function:is:7" = global ptr null
@"Core:function:is:10" = global ptr null
@"Core:function:38" = global ptr null
@"Core:function:is0:7" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:11:5" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is1:7" = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:11:5" = global ptr null
@"Core:function:is1:13" = global ptr null
@"Core:function:is2:7" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@num_2 = global ptr null
@"Core:function:is2:11:5" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:is3:7" = global ptr null
@"Core:function:is3:11:3" = global ptr null
@num_3 = global ptr null
@"Core:function:is3:11:5" = global ptr null
@"Core:function:is3:13" = global ptr null
@"Core:function:is4:7" = global ptr null
@"Core:function:is4:11:3" = global ptr null
@num_4 = global ptr null
@"Core:function:is4:11:5" = global ptr null
@"Core:function:is4:13" = global ptr null
@"Core:function:is5:7" = global ptr null
@"Core:function:is5:11:3" = global ptr null
@num_5 = global ptr null
@"Core:function:is5:11:5" = global ptr null
@"Core:function:is5:13" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:function:run:12" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:doNotRun:4" = global ptr null
@tag_DoNotRun = global ptr null
@tag_Is4 = global ptr null
@tag_Is1 = global ptr null
@tag_Run = global ptr null
@tag_Is0 = global ptr null
@tag_Is3 = global ptr null
@tag_Is2 = global ptr null
@tag_Is5 = global ptr null
@"Core:bool:is:1" = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_then = global ptr null
@fun_Core_bool_is_1_equals_then.75 = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@25 = global ptr null
@fun_Core_bool_is_1_equals_else.77 = global ptr null
@26 = global ptr null
@fun_Core_bool_is_1_equals_else.79 = global ptr null
@27 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_then.81 = global ptr null
@fun_Core_bool_is_1_equals_then.83 = global ptr null
@fun_Core_bool_is_1_equals_else.85 = global ptr null
@28 = global ptr null
@fun_Core_bool_is_1_equals_else.87 = global ptr null
@29 = global ptr null
@fun_Core_bool_is_1_equals_else.89 = global ptr null
@30 = global ptr null
@fun_Core_bool_is_1_case-0_didNotMatch = global ptr null
@"Core:bool:not:2" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_not_6_equals_then = global ptr null
@fun_Core_bool_not_6_equals_then.91 = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@31 = global ptr null
@fun_Core_bool_not_6_equals_else.93 = global ptr null
@32 = global ptr null
@fun_Core_bool_not_6_equals_else.95 = global ptr null
@33 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_then.97 = global ptr null
@fun_Core_bool_not_6_equals_then.99 = global ptr null
@fun_Core_bool_not_6_equals_else.101 = global ptr null
@34 = global ptr null
@fun_Core_bool_not_6_equals_else.103 = global ptr null
@35 = global ptr null
@fun_Core_bool_not_6_equals_else.105 = global ptr null
@36 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@"Core:bool:lazyAnd:2" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyAnd:12" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:18" = global ptr null
@"Core:bool:lazyAnd:18:8" = global ptr null
@"Core:bool:lazyAnd:18:9" = global ptr null
@"Core:bool:lazyAnd:18:13" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"Core:bool:lazyAnd:18:21" = global ptr null
@"Core:bool:and:2" = global ptr null
@"Core:bool:and:4" = global ptr null
@"Core:bool:and:7" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"Core:bool:and:9" = global ptr null
@"Core:bool:and:13" = global ptr null
@"Core:bool:lazyOr:2" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:lazyOr:12" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:18" = global ptr null
@"Core:bool:lazyOr:18:9" = global ptr null
@"Core:bool:lazyOr:18:10" = global ptr null
@"Core:bool:lazyOr:18:14" = global ptr null
@"Core:bool:lazyOr:18:22" = global ptr null
@"Core:bool:or:2" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:7" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:xor:2" = global ptr null
@"Core:bool:xor:4" = global ptr null
@"Core:bool:xor:7" = global ptr null
@"Core:bool:xor:9" = global ptr null
@"Core:bool:xor:14" = global ptr null
@"Core:bool:xor:15" = global ptr null
@"Core:bool:implies:2" = global ptr null
@"Core:bool:implies:4" = global ptr null
@"Core:bool:implies:7" = global ptr null
@"Core:bool:implies:9" = global ptr null
@"Core:bool:implies:12" = global ptr null
@"Core:bool:implies:15" = global ptr null
@tag_LazyAnd = global ptr null
@tag_Not = global ptr null
@tag_Xor = global ptr null
@tag_Implies = global ptr null
@tag_LazyOr = global ptr null
@tag_And = global ptr null
@tag_Or = global ptr null
@"Core:controlFlow:59" = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"Core:check:check:7" = global ptr null
@"Core:check:check:9" = global ptr null
@"Core:check:check:11" = global ptr null
@"text_A check didn't succeed." = global ptr null
@"Core:check:check:20" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else.107" = global ptr null
@"Core:controlFlow:recursive:7" = global ptr null
@"Core:controlFlow:recursive:9" = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"Core:controlFlow:recursive:17" = global ptr null
@"Core:controlFlow:recursive:18:0:3" = global ptr null
@"Core:controlFlow:recursive:18:5" = global ptr null
@"Core:controlFlow:recursive:23" = global ptr null
@"Core:int:is:7" = global ptr null
@"Core:int:is:10" = global ptr null
@num_42 = global ptr null
@"Core:int:72" = global ptr null
@"Core:int:81" = global ptr null
@"Core:int:negate:4" = global ptr null
@"Core:int:negate:8" = global ptr null
@"Core:int:90" = global ptr null
@"Core:int:99" = global ptr null
@"Core:int:108" = global ptr null
@"Core:int:117" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:compareTo:18" = global ptr null
@"Core:int:compareTo:20" = global ptr null
@"Core:int:compareTo:26" = global ptr null
@"Core:int:compareTo:34" = global ptr null
@"Core:int:compareTo:38" = global ptr null
@"Core:int:compareTo:39" = global ptr null
@"Core:int:compareTo:40" = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:16" = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:16" = global ptr null
@"Core:int:isLessThanOrEqualTo:4" = global ptr null
@"Core:int:isLessThanOrEqualTo:9" = global ptr null
@"Core:int:isLessThanOrEqualTo:13" = global ptr null
@"Core:int:isLessThanOrEqualTo:21" = global ptr null
@"Core:int:isLessThanOrEqualTo:22" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:4" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:9" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:13" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:21" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:22" = global ptr null
@"Core:int:isPositive:4" = global ptr null
@"Core:int:isPositive:8" = global ptr null
@"Core:int:isNonPositive:4" = global ptr null
@"Core:int:isNonPositive:7" = global ptr null
@"Core:int:isNonPositive:15" = global ptr null
@"Core:int:isNonPositive:16" = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"Core:int:isNonNegative:15" = global ptr null
@"Core:int:isNonNegative:16" = global ptr null
@"Core:int:absolute:4" = global ptr null
@"Core:int:absolute:8" = global ptr null
@"Core:int:absolute:9:2" = global ptr null
@"Core:int:absolute:11" = global ptr null
@"Core:int:fitsInRustU32:4" = global ptr null
@"Core:int:fitsInRustU32:7" = global ptr null
@"text_`isNonNegative value` was not satisfied" = global ptr null
@"Core:int:fitsInRustU32:9" = global ptr null
@num_4294967295 = global ptr null
@"Core:int:fitsInRustU32:15" = global ptr null
@"Core:int:fitsInRustU128:4" = global ptr null
@"Core:int:fitsInRustU128:7" = global ptr null
@"Core:int:fitsInRustU128:9" = global ptr null
@"Core:int:fitsInRustU128:15" = global ptr null
@"Core:int:126" = global ptr null
@"Core:int:135" = global ptr null
@"Core:int:144" = global ptr null
@"Core:int:153" = global ptr null
@"Core:int:162" = global ptr null
@"Core:int:171" = global ptr null
@"Core:int:isEven:4" = global ptr null
@"Core:int:isEven:8" = global ptr null
@"Core:int:isEven:11" = global ptr null
@"Core:int:isOdd:4" = global ptr null
@"Core:int:isOdd:8" = global ptr null
@"Core:int:isOdd:11" = global ptr null
@"Core:int:isOdd:16" = global ptr null
@"Core:int:isOdd:26" = global ptr null
@"Core:int:isOdd:27" = global ptr null
@"Core:int:isOdd:28" = global ptr null
@"Core:int:isOdd:29" = global ptr null
@"Core:int:min:4" = global ptr null
@"Core:int:min:9" = global ptr null
@"Core:int:min:14" = global ptr null
@"Core:int:min:17" = global ptr null
@"Core:int:max:4" = global ptr null
@"Core:int:max:9" = global ptr null
@"Core:int:max:14" = global ptr null
@"Core:int:max:17" = global ptr null
@"Core:int:coerceAtLeast:4" = global ptr null
@"text_`is minimum` was not satisfied" = global ptr null
@"Core:int:coerceAtLeast:9" = global ptr null
@"Core:int:coerceAtLeast:13" = global ptr null
@"Core:int:coerceAtMost:4" = global ptr null
@"text_`is maximum` was not satisfied" = global ptr null
@"Core:int:coerceAtMost:9" = global ptr null
@"Core:int:coerceAtMost:13" = global ptr null
@"Core:int:coerceIn:4" = global ptr null
@"Core:int:coerceIn:9" = global ptr null
@"Core:int:coerceIn:14" = global ptr null
@"Core:int:coerceIn:18" = global ptr null
@"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied" = global ptr null
@"Core:int:coerceIn:20" = global ptr null
@"Core:int:coerceIn:24" = global ptr null
@"Core:int:coerceIn:27" = global ptr null
@"Core:int:180" = global ptr null
@"text_`is base` was not satisfied" = global ptr null
@"Core:int:pow:4" = global ptr null
@"text_`is exponent` was not satisfied" = global ptr null
@"Core:int:pow:9" = global ptr null
@"Core:int:pow:12" = global ptr null
@"text_`isNonNegative exponent` was not satisfied" = global ptr null
@"Core:int:pow:14" = global ptr null
@tag_Base = global ptr null
@tag_Exponent = global ptr null
@"Core:int:pow:21:1" = global ptr null
@"text_Struct doesn't contain key `Base`: `" = global ptr null
@"text_Struct doesn't contain key `Exponent`: `" = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"Core:int:pow:21:base" = global ptr null
@"Core:int:pow:21:exponent" = global ptr null
@"Core:int:pow:21:4" = global ptr null
@"text_Expected `0`, got `" = global ptr null
@fun_Core_int_pow_21_4_case-0_matched = global ptr null
@"Core:int:pow:21:4:4" = global ptr null
@"Core:int:pow:21:4:5:5" = global ptr null
@"Core:int:pow:21:4:5:10" = global ptr null
@"Core:int:pow:21:4:5:12" = global ptr null
@"Core:int:pow:21:4:6:7" = global ptr null
@"Core:int:pow:21:4:6:12" = global ptr null
@"Core:int:pow:21:4:6:15" = global ptr null
@"Core:int:pow:21:4:6:17" = global ptr null
@"Core:int:pow:21:4:6:18" = global ptr null
@"Core:int:pow:21:4:7" = global ptr null
@"Core:int:pow:22" = global ptr null
@tag_IsLessThanOrEqualTo = global ptr null
@tag_BitwiseAnd = global ptr null
@tag_BitwiseOr = global ptr null
@tag_CoerceAtMost = global ptr null
@tag_Remainder = global ptr null
@tag_FitsInRustU32 = global ptr null
@tag_ShiftLeft = global ptr null
@tag_IsPositive = global ptr null
@tag_CoerceIn = global ptr null
@tag_IsNegative = global ptr null
@tag_IsNonNegative = global ptr null
@tag_Modulo = global ptr null
@tag_Parse = global ptr null
@tag_IsGreaterThan = global ptr null
@tag_IsNonPositive = global ptr null
@tag_Multiply = global ptr null
@tag_DivideTruncating = global ptr null
@tag_Add = global ptr null
@tag_BitwiseXor = global ptr null
@tag_IsOdd = global ptr null
@tag_IsGreaterThanOrEqualTo = global ptr null
@tag_IsLessThan = global ptr null
@tag_Negate = global ptr null
@tag_Pow = global ptr null
@tag_ShiftRight = global ptr null
@tag_IsEven = global ptr null
@tag_Max = global ptr null
@tag_BitLength = global ptr null
@tag_Min = global ptr null
@tag_FitsInRustU128 = global ptr null
@tag_CoerceAtLeast = global ptr null
@tag_CompareTo = global ptr null
@tag_Absolute = global ptr null
@tag_Subtract = global ptr null
@tag_TheAnswer = global ptr null
@"Core:tag:is:7" = global ptr null
@"Core:tag:is:10" = global ptr null
@"Core:tag:48" = global ptr null
@"Core:tag:57" = global ptr null
@"Core:tag:66" = global ptr null
@"text_`is tag` was not satisfied" = global ptr null
@"Core:tag:withSymbol:4" = global ptr null
@"text_`is symbolTag` was not satisfied" = global ptr null
@"Core:tag:withSymbol:9" = global ptr null
@"Core:tag:withSymbol:12" = global ptr null
@"Core:tag:withSymbol:20" = global ptr null
@"Core:tag:withSymbol:21" = global ptr null
@"text_`symbolTag | hasValue | bool.not` was not satisfied" = global ptr null
@"Core:tag:withSymbol:23" = global ptr null
@"Core:tag:withSymbol:27" = global ptr null
@"Core:tag:withSymbol:28:3" = global ptr null
@"Core:tag:withSymbol:28:4" = global ptr null
@"Core:tag:withSymbol:29:2" = global ptr null
@"Core:tag:withSymbol:30" = global ptr null
@"Core:tag:withValue:4" = global ptr null
@"Core:tag:withValue:7" = global ptr null
@"Core:tag:withValue:9" = global ptr null
@tag_HasValue = global ptr null
@tag_WithValue = global ptr null
@tag_GetValue = global ptr null
@tag_WithoutValue = global ptr null
@tag_WithSymbol = global ptr null
@"Core:result:is:1" = global ptr null
@tag_Ok = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@37 = global ptr null
@"text_Expected Ok, got " = global ptr null
@tag_Error = global ptr null
@"text_Expected Error, got " = global ptr null
@"Core:result:is:1:_" = global ptr null
@fun_Core_result_is = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.109 = global ptr null
@fun_Core_result_is_1_equals_then.111 = global ptr null
@38 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@fun_Core_result_is_1_equals_else.113 = global ptr null
@39 = global ptr null
@fun_Core_result_is_1_equals_else.115 = global ptr null
@40 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.117 = global ptr null
@fun_Core_result_is_1_equals_then.119 = global ptr null
@fun_Core_result_is_1_equals_then.121 = global ptr null
@41 = global ptr null
@fun_Core_result_is_1_equals_else.123 = global ptr null
@fun_Core_result_is_1_equals_else.125 = global ptr null
@42 = global ptr null
@fun_Core_result_is_1_equals_else.127 = global ptr null
@43 = global ptr null
@fun_Core_result_is_1_case-0_matched = global ptr null
@fun_Core_result_is_1_case-0_didNotMatch = global ptr null
@"Core:result:getValue:2" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"Core:result:getValue:4" = global ptr null
@"Core:result:getValue:13" = global ptr null
@"Core:result:getValue:14" = global ptr null
@"Core:result:isOk:2" = global ptr null
@"Core:result:isOk:4" = global ptr null
@"Core:result:isOk:13" = global ptr null
@"Core:result:isOk:14" = global ptr null
@"Core:result:isOk:17" = global ptr null
@"Core:result:unwrap:2" = global ptr null
@"Core:result:unwrap:4" = global ptr null
@"Core:result:unwrap:7" = global ptr null
@"text_`isOk result` was not satisfied" = global ptr null
@"Core:result:unwrap:9" = global ptr null
@"Core:result:unwrap:12" = global ptr null
@"Core:result:expect:2" = global ptr null
@"Core:result:expect:4" = global ptr null
@"Core:result:expect:12" = global ptr null
@"Core:result:expect:15" = global ptr null
@"text_`type.is message Text` was not satisfied" = global ptr null
@"Core:result:expect:17" = global ptr null
@"Core:result:expect:20" = global ptr null
@"Core:result:expect:22" = global ptr null
@"Core:result:expect:25" = global ptr null
@"Core:result:isError:2" = global ptr null
@"Core:result:isError:4" = global ptr null
@"Core:result:isError:13" = global ptr null
@"Core:result:isError:14" = global ptr null
@"Core:result:isError:17" = global ptr null
@"Core:result:unwrapError:2" = global ptr null
@"Core:result:unwrapError:4" = global ptr null
@"Core:result:unwrapError:7" = global ptr null
@"text_`isError result` was not satisfied" = global ptr null
@"Core:result:unwrapError:9" = global ptr null
@"Core:result:unwrapError:12" = global ptr null
@"Core:result:expectError:2" = global ptr null
@"Core:result:expectError:4" = global ptr null
@"Core:result:expectError:12" = global ptr null
@"Core:result:expectError:15" = global ptr null
@"Core:result:expectError:17" = global ptr null
@"Core:result:expectError:20" = global ptr null
@"Core:result:expectError:22" = global ptr null
@"Core:result:expectError:25" = global ptr null
@"Core:result:mapOrElse:2" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:mapOrElse:12" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:24" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@"Core:result:mapOr:2" = global ptr null
@"Core:result:mapOr:4" = global ptr null
@"Core:result:mapOr:12" = global ptr null
@"Core:result:mapOr:14" = global ptr null
@"Core:result:mapOr:16" = global ptr null
@"Core:result:mapOr:21" = global ptr null
@"Core:result:flatMap:2" = global ptr null
@"Core:result:flatMap:4" = global ptr null
@"Core:result:flatMap:12" = global ptr null
@"Core:result:flatMap:14" = global ptr null
@"Core:result:flatMap:16" = global ptr null
@"Core:result:flatMap:19:2" = global ptr null
@"Core:result:flatMap:21" = global ptr null
@"Core:result:map:2" = global ptr null
@"Core:result:map:4" = global ptr null
@"Core:result:map:12" = global ptr null
@"Core:result:map:14" = global ptr null
@"Core:result:map:16" = global ptr null
@"Core:result:map:19:3" = global ptr null
@"Core:result:map:20" = global ptr null
@"Core:result:and:2" = global ptr null
@"text_`is resultA` was not satisfied" = global ptr null
@"Core:result:and:4" = global ptr null
@"Core:result:and:7" = global ptr null
@"text_`is resultB` was not satisfied" = global ptr null
@"Core:result:and:9" = global ptr null
@"Core:result:and:13" = global ptr null
@"Core:result:flatMapError:2" = global ptr null
@"Core:result:flatMapError:4" = global ptr null
@"Core:result:flatMapError:12" = global ptr null
@"Core:result:flatMapError:14" = global ptr null
@"Core:result:flatMapError:16" = global ptr null
@"Core:result:flatMapError:20:2" = global ptr null
@"Core:result:flatMapError:21" = global ptr null
@"Core:result:mapError:2" = global ptr null
@"Core:result:mapError:4" = global ptr null
@"Core:result:mapError:12" = global ptr null
@"Core:result:mapError:14" = global ptr null
@"Core:result:mapError:16" = global ptr null
@"Core:result:mapError:19:3" = global ptr null
@"Core:result:mapError:20" = global ptr null
@"Core:result:or:2" = global ptr null
@"Core:result:or:4" = global ptr null
@"Core:result:or:7" = global ptr null
@"Core:result:or:9" = global ptr null
@"Core:result:or:13" = global ptr null
@"Core:result:unwrapOrElse:2" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@"Core:result:unwrapOrElse:12" = global ptr null
@"Core:result:unwrapOrElse:14" = global ptr null
@"text_`function.is0 defaultGetter` was not satisfied" = global ptr null
@"Core:result:unwrapOrElse:16" = global ptr null
@"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19" = global ptr null
@"Core:result:unwrapOrElse:20:7" = global ptr null
@"Core:result:unwrapOrElse:20:9" = global ptr null
@"Core:result:unwrapOrElse:21" = global ptr null
@"Core:result:unwrapOr:2" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@"Core:result:flatten:2" = global ptr null
@"text_`is resultOfResult` was not satisfied" = global ptr null
@"Core:result:flatten:4" = global ptr null
@"Core:result:flatten:7:2" = global ptr null
@"text_`is innerResult` was not satisfied" = global ptr null
@"Core:result:flatten:7:4" = global ptr null
@"Core:result:flatten:8" = global ptr null
@tag_UnwrapOr = global ptr null
@tag_Expect = global ptr null
@tag_Flatten = global ptr null
@tag_MapOrElse = global ptr null
@tag_Map = global ptr null
@tag_IsError = global ptr null
@tag_FlatMap = global ptr null
@tag_ExpectError = global ptr null
@tag_UnwrapError = global ptr null
@tag_UnwrapOrElse = global ptr null
@tag_Unwrap = global ptr null
@tag_MapOr = global ptr null
@tag_FlatMapError = global ptr null
@tag_MapError = global ptr null
@tag_IsOk = global ptr null
@"Core:list:89" = global ptr null
@"Core:list:98" = global ptr null
@"text_Expected a List, got `" = global ptr null
@"text_Expected 1 item, got " = global ptr null
@"Core:list:107" = global ptr null
@"Core:list:116" = global ptr null
@"Core:list:125" = global ptr null
@"Core:list:134" = global ptr null
@"Core:text:341" = global ptr null
@"Core:text:350" = global ptr null
@"Core:text:359" = global ptr null
@"Core:text:368" = global ptr null
@"Core:text:377" = global ptr null
@"Core:text:386" = global ptr null
@"Core:text:395" = global ptr null
@"Core:text:404" = global ptr null
@"Core:text:413" = global ptr null
@"Core:text:422" = global ptr null
@"Core:text:431" = global ptr null
@"Core:toDebugText:toDebugText:7" = global ptr null
@"Core:toDebugText:toDebugText:9" = global ptr null
@fun_Core_type_is = global ptr null
@fun_Core_function_is = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Core_function_is3 = global ptr null
@fun_Core_function_is3_11 = global ptr null
@fun_Core_function_is4 = global ptr null
@fun_Core_function_is4_11 = global ptr null
@fun_Core_function_is5 = global ptr null
@fun_Core_function_is5_11 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_function_is0_11.129 = global ptr null
@fun_Core_function_doNotRun = global ptr null
@fun_Core_function_is0_11.131 = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.133 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else = global ptr null
@44 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.135 = global ptr null
@45 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.137 = global ptr null
@46 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.139 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.141 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.143 = global ptr null
@47 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.145 = global ptr null
@48 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.147 = global ptr null
@49 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_and = global ptr null
@fun_Core_bool_and_12 = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_lazyOr_18_equals_then = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.149 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else = global ptr null
@50 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.151 = global ptr null
@51 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.153 = global ptr null
@52 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.155 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.157 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.159 = global ptr null
@53 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.161 = global ptr null
@54 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.163 = global ptr null
@55 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_or = global ptr null
@fun_Core_bool_or_12 = global ptr null
@fun_Core_bool_xor = global ptr null
@fun_Core_bool_implies = global ptr null
@fun_Core_bool_or_12.165 = global ptr null
@fun_Core_type_is.167 = global ptr null
@fun_Core_function_is.169 = global ptr null
@fun_Core_function_is0.171 = global ptr null
@fun_Core_function_is0_11.173 = global ptr null
@fun_Core_function_is1.175 = global ptr null
@fun_Core_function_is1_11.177 = global ptr null
@fun_Core_function_is2.179 = global ptr null
@fun_Core_function_is2_11.181 = global ptr null
@fun_Core_function_is3.183 = global ptr null
@fun_Core_function_is3_11.185 = global ptr null
@fun_Core_function_is4.187 = global ptr null
@fun_Core_function_is4_11.189 = global ptr null
@fun_Core_function_is5.191 = global ptr null
@fun_Core_function_is5_11.193 = global ptr null
@fun_Core_function_run.195 = global ptr null
@fun_Core_function_is0_11.197 = global ptr null
@fun_Core_function_doNotRun.199 = global ptr null
@fun_Core_function_is0_11.201 = global ptr null
@fun_Core_bool_lazyAnd.203 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.205 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.207 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.209 = global ptr null
@56 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.211 = global ptr null
@57 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.213 = global ptr null
@58 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.215 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.217 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.219 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.221 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.223 = global ptr null
@59 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.225 = global ptr null
@60 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.227 = global ptr null
@61 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.229 = global ptr null
@fun_Core_bool_and.231 = global ptr null
@fun_Core_bool_and_12.233 = global ptr null
@fun_Core_bool_lazyOr.235 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.237 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.239 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.241 = global ptr null
@62 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.243 = global ptr null
@63 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.245 = global ptr null
@64 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.247 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.249 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.251 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.253 = global ptr null
@65 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.255 = global ptr null
@66 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.257 = global ptr null
@67 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.259 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.261 = global ptr null
@fun_Core_bool_or.263 = global ptr null
@fun_Core_bool_or_12.265 = global ptr null
@fun_Core_bool_xor.267 = global ptr null
@fun_Core_bool_implies.269 = global ptr null
@fun_Core_bool_or_12.271 = global ptr null
@fun_Core_check_check = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.273" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.275" = global ptr null
@fun_Core_type_is.277 = global ptr null
@fun_Core_function_is.279 = global ptr null
@fun_Core_function_is0.281 = global ptr null
@fun_Core_function_is0_11.283 = global ptr null
@fun_Core_function_is1.285 = global ptr null
@fun_Core_function_is1_11.287 = global ptr null
@fun_Core_function_is2.289 = global ptr null
@fun_Core_function_is2_11.291 = global ptr null
@fun_Core_function_is3.293 = global ptr null
@fun_Core_function_is3_11.295 = global ptr null
@fun_Core_function_is4.297 = global ptr null
@fun_Core_function_is4_11.299 = global ptr null
@fun_Core_function_is5.301 = global ptr null
@fun_Core_function_is5_11.303 = global ptr null
@fun_Core_function_run.305 = global ptr null
@fun_Core_function_is0_11.307 = global ptr null
@fun_Core_function_doNotRun.309 = global ptr null
@fun_Core_function_is0_11.311 = global ptr null
@fun_Core_controlFlow_recursive = global ptr null
@fun_Core_controlFlow_recursive_18 = global ptr null
@fun_Core_controlFlow_recursive_18_0 = global ptr null
@fun_Core_type_is.313 = global ptr null
@fun_Core_int_is = global ptr null
@fun_Core_int_negate = global ptr null
@fun_Core_int_compareTo = global ptr null
@fun_Core_int_isLessThan = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@fun_Core_int_isLessThanOrEqualTo = global ptr null
@fun_Core_int_isGreaterThanOrEqualTo = global ptr null
@fun_Core_int_isPositive = global ptr null
@fun_Core_int_isNonPositive = global ptr null
@fun_Core_int_isNegative = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@fun_Core_int_absolute = global ptr null
@fun_Core_int_absolute_9 = global ptr null
@fun_Core_int_absolute_10 = global ptr null
@fun_Core_int_fitsInRustU32 = global ptr null
@fun_Core_int_fitsInRustU128 = global ptr null
@fun_Core_int_isEven = global ptr null
@fun_Core_int_isOdd = global ptr null
@fun_Core_int_min = global ptr null
@fun_Core_int_min_15 = global ptr null
@fun_Core_int_min_16 = global ptr null
@fun_Core_int_max = global ptr null
@fun_Core_int_max_15 = global ptr null
@fun_Core_int_max_16 = global ptr null
@fun_Core_int_coerceAtLeast = global ptr null
@fun_Core_int_coerceAtMost = global ptr null
@fun_Core_int_coerceIn = global ptr null
@fun_Core_int_pow = global ptr null
@fun_Core_int_pow_21 = global ptr null
@fun_Core_int_pow_21_1_equals_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then = global ptr null
@68 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else = global ptr null
@69 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.315 = global ptr null
@70 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.317 = global ptr null
@71 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.319 = global ptr null
@72 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.321 = global ptr null
@fun_Core_int_pow_21_1_equals_else = global ptr null
@73 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.323 = global ptr null
@fun_Core_int_pow_21_4_equals_else = global ptr null
@74 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch = global ptr null
@fun_Core_int_pow_21_4_case-1_matched = global ptr null
@fun_Core_int_pow_21_4_5 = global ptr null
@fun_Core_int_pow_21_4_6 = global ptr null
@fun_Core_type_is.325 = global ptr null
@fun_Core_function_is.327 = global ptr null
@fun_Core_function_is0.329 = global ptr null
@fun_Core_function_is0_11.331 = global ptr null
@fun_Core_function_is1.333 = global ptr null
@fun_Core_function_is1_11.335 = global ptr null
@fun_Core_function_is2.337 = global ptr null
@fun_Core_function_is2_11.339 = global ptr null
@fun_Core_function_is3.341 = global ptr null
@fun_Core_function_is3_11.343 = global ptr null
@fun_Core_function_is4.345 = global ptr null
@fun_Core_function_is4_11.347 = global ptr null
@fun_Core_function_is5.349 = global ptr null
@fun_Core_function_is5_11.351 = global ptr null
@fun_Core_function_run.353 = global ptr null
@fun_Core_function_is0_11.355 = global ptr null
@fun_Core_function_doNotRun.357 = global ptr null
@fun_Core_function_is0_11.359 = global ptr null
@fun_Core_type_is.361 = global ptr null
@fun_Core_function_is.363 = global ptr null
@fun_Core_function_is0.365 = global ptr null
@fun_Core_function_is0_11.367 = global ptr null
@fun_Core_function_is1.369 = global ptr null
@fun_Core_function_is1_11.371 = global ptr null
@fun_Core_function_is2.373 = global ptr null
@fun_Core_function_is2_11.375 = global ptr null
@fun_Core_function_is3.377 = global ptr null
@fun_Core_function_is3_11.379 = global ptr null
@fun_Core_function_is4.381 = global ptr null
@fun_Core_function_is4_11.383 = global ptr null
@fun_Core_function_is5.385 = global ptr null
@fun_Core_function_is5_11.387 = global ptr null
@fun_Core_function_run.389 = global ptr null
@fun_Core_function_is0_11.391 = global ptr null
@fun_Core_function_doNotRun.393 = global ptr null
@fun_Core_function_is0_11.395 = global ptr null
@fun_Core_bool_lazyAnd.397 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.399 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.401 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.403 = global ptr null
@75 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.405 = global ptr null
@76 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.407 = global ptr null
@77 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched.409 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch.411 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.413 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.415 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.417 = global ptr null
@78 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.419 = global ptr null
@79 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.421 = global ptr null
@80 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch.423 = global ptr null
@fun_Core_bool_and.425 = global ptr null
@fun_Core_bool_and_12.427 = global ptr null
@fun_Core_bool_lazyOr.429 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.431 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.433 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.435 = global ptr null
@81 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.437 = global ptr null
@82 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.439 = global ptr null
@83 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch.441 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.443 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.445 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.447 = global ptr null
@84 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.449 = global ptr null
@85 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.451 = global ptr null
@86 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched.453 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch.455 = global ptr null
@fun_Core_bool_or.457 = global ptr null
@fun_Core_bool_or_12.459 = global ptr null
@fun_Core_bool_xor.461 = global ptr null
@fun_Core_bool_implies.463 = global ptr null
@fun_Core_bool_or_12.465 = global ptr null
@fun_Core_type_is.467 = global ptr null
@fun_Core_tag_is = global ptr null
@fun_Core_tag_withSymbol = global ptr null
@fun_Core_tag_withSymbol_28 = global ptr null
@fun_Core_tag_withSymbol_29 = global ptr null
@fun_Core_tag_withValue = global ptr null
@fun_Core_type_is.469 = global ptr null
@fun_Core_result_getValue = global ptr null
@fun_Core_result_isOk = global ptr null
@fun_Core_result_unwrap = global ptr null
@fun_Core_result_expect = global ptr null
@fun_Core_result_isError = global ptr null
@fun_Core_result_unwrapError = global ptr null
@fun_Core_result_expectError = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.471 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.473 = global ptr null
@87 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.475 = global ptr null
@88 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.477 = global ptr null
@89 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.479 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.481 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.483 = global ptr null
@90 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.485 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.487 = global ptr null
@91 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.489 = global ptr null
@92 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@fun_Core_result_mapOr = global ptr null
@fun_Core_result_mapOr_20 = global ptr null
@fun_Core_result_flatMap = global ptr null
@fun_Core_result_flatMap_19 = global ptr null
@fun_Core_result_map = global ptr null
@fun_Core_result_map_19 = global ptr null
@tag_Ok.490 = global ptr null
@fun_Core_result_and = global ptr null
@fun_Core_result_and_12 = global ptr null
@fun_Core_result_flatMapError = global ptr null
@fun_Core_result_flatMapError_19 = global ptr null
@fun_Core_result_flatMapError_20 = global ptr null
@fun_Core_result_mapError = global ptr null
@fun_Core_result_mapError_19 = global ptr null
@tag_Error.491 = global ptr null
@fun_Core_result_or = global ptr null
@fun_Core_result_or_12 = global ptr null
@fun_Core_result_unwrapOrElse = global ptr null
@fun_Core_result_unwrapOrElse_20 = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@fun_Core_result_flatten = global ptr null
@fun_Core_result_flatten_7 = global ptr null
@"Examples:fibonacci:recursive:0:0:3" = global ptr null
@"Examples:fibonacci:recursive:0:5" = global ptr null
@"Examples:fibonacci:recursive:5" = global ptr null
@"Examples:fibonacci:compareTo:8" = global ptr null
@"Examples:fibonacci:compareTo:10" = global ptr null
@"Examples:fibonacci:isLessThan:7" = global ptr null
@"Examples:fibonacci:isLessThan:13" = global ptr null
@"Examples:fibonacci:fibonacci:2:7" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:9" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:11" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:12" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:20" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:30" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:32" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:33" = global ptr null
@"Examples:fibonacci:fibonacci:2:13:34" = global ptr null
@"Examples:fibonacci:fibonacci:2:14" = global ptr null
@fun_Examples_fibonacci_fibonacci_2 = global ptr null
@fun_Examples_fibonacci_fibonacci_2_12 = global ptr null
@fun_Examples_fibonacci_fibonacci_2_13 = global ptr null
@fun_Examples_fibonacci_recursive_0 = global ptr null
@fun_Examples_fibonacci_recursive_0_0 = global ptr null
@tag_Arguments = global ptr null
@"Examples:fibonacci:21:7" = global ptr null
@"Examples:fibonacci:21:8" = global ptr null
@"Examples:fibonacci:21:8:n" = global ptr null
@"Examples:fibonacci:21:8:8" = global ptr null
@"Examples:fibonacci:21:8:9" = global ptr null
@"Examples:fibonacci:21:8:17" = global ptr null
@fun_Examples_fibonacci_21_8_18 = global ptr null
@"Examples:fibonacci:21:8:19" = global ptr null
@"Examples:fibonacci:21:8:27" = global ptr null
@"Examples:fibonacci:21:8:28" = global ptr null
@"text_Usage: `cargo run -- run fibonacci.candy -- <number>`" = global ptr null
@tag_Stdout = global ptr null
@"Examples:fibonacci:21:16" = global ptr null
@"Examples:fibonacci:21:17" = global ptr null
@fun_Examples_fibonacci_21 = global ptr null
@fun_Examples_fibonacci_21_8_equals_then = global ptr null
@fun_Examples_fibonacci_21_8_equals_then.493 = global ptr null
@93 = global ptr null
@fun_Examples_fibonacci_21_8_equals_else = global ptr null
@94 = global ptr null
@fun_Examples_fibonacci_21_8_equals_else.495 = global ptr null
@95 = global ptr null
@fun_Examples_fibonacci_21_8_case-0_matched = global ptr null
@fun_Examples_fibonacci_21_8_case-0_didNotMatch = global ptr null
@tag_Main = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:10\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::fitsInRustU128:10", align 8
  %4 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::fitsInRustU128:16", align 8
  %6 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:5\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::fitsInRustU128:5", align 8
  %8 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:8\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::fitsInRustU128:8", align 8
  %10 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::functionRun:11", align 8
  %12 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::functionRun:16", align 8
  %14 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::functionRun:22", align 8
  %16 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::functionRun:5", align 8
  %18 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::getArgumentCount:11", align 8
  %20 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::getArgumentCount:5", align 8
  %22 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:1", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:11", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:14", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:19", align 8
  %30 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:25", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::ifElse:28", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::ifElse:33", align 8
  %36 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::ifElse:41", align 8
  %38 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::ifElse:5", align 8
  %40 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intAdd:11", align 8
  %42 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intAdd:18", align 8
  %44 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intAdd:5", align 8
  %46 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitLength:11\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intBitLength:11", align 8
  %48 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intBitLength:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intBitLength:5", align 8
  %50 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intBitwiseAnd:11", align 8
  %52 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intBitwiseAnd:18", align 8
  %54 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intBitwiseAnd:5", align 8
  %56 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseOr:11\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::intBitwiseOr:11", align 8
  %58 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseOr:18\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::intBitwiseOr:18", align 8
  %60 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intBitwiseOr:5\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::intBitwiseOr:5", align 8
  %62 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseXor:11\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::intBitwiseXor:11", align 8
  %64 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseXor:18\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::intBitwiseXor:18", align 8
  %66 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseXor:5\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::intBitwiseXor:5", align 8
  %68 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::intCompareTo:11", align 8
  %70 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::intCompareTo:18", align 8
  %72 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::intCompareTo:5", align 8
  %74 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:11\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::intDivideTruncating:11", align 8
  %76 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:17\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::intDivideTruncating:17", align 8
  %78 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:25\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::intDivideTruncating:25", align 8
  %80 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:32\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::intDivideTruncating:32", align 8
  %82 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::intDivideTruncating:5\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::intDivideTruncating:5", align 8
  %84 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:11\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::intModulo:11", align 8
  %86 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:17\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::intModulo:17", align 8
  %88 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:25\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::intModulo:25", align 8
  %90 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:32\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::intModulo:32", align 8
  %92 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intModulo:5\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::intModulo:5", align 8
  %94 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:11\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::intMultiply:11", align 8
  %96 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::intMultiply:18", align 8
  %98 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::intMultiply:5", align 8
  %100 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intParse:11\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::intParse:11", align 8
  %102 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::intParse:5\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::intParse:5", align 8
  %104 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:11\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::intRemainder:11", align 8
  %106 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:17\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::intRemainder:17", align 8
  %108 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:25\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::intRemainder:25", align 8
  %110 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:32\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::intRemainder:32", align 8
  %112 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intRemainder:5\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::intRemainder:5", align 8
  %114 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:11\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::intShiftLeft:11", align 8
  %116 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:14\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::intShiftLeft:14", align 8
  %118 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:23\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::intShiftLeft:23", align 8
  %120 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:24\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::intShiftLeft:24", align 8
  %122 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::intShiftLeft:26:0\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::intShiftLeft:26:0", align 8
  %124 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:27\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::intShiftLeft:27", align 8
  %126 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:29\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::intShiftLeft:29", align 8
  %128 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:30\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Builtins::intShiftLeft:30", align 8
  %130 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:31\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Builtins::intShiftLeft:31", align 8
  %132 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:34\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Builtins::intShiftLeft:34", align 8
  %134 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:42\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Builtins::intShiftLeft:42", align 8
  %136 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:49\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Builtins::intShiftLeft:49", align 8
  %138 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intShiftLeft:5\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Builtins::intShiftLeft:5", align 8
  %140 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:11\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Builtins::intShiftRight:11", align 8
  %142 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:14\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Builtins::intShiftRight:14", align 8
  %144 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:23\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Builtins::intShiftRight:23", align 8
  %146 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:24\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Builtins::intShiftRight:24", align 8
  %148 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::intShiftRight:26:0\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Builtins::intShiftRight:26:0", align 8
  %150 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:27\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Builtins::intShiftRight:27", align 8
  %152 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:29\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Builtins::intShiftRight:29", align 8
  %154 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:30\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Builtins::intShiftRight:30", align 8
  %156 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:31\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Builtins::intShiftRight:31", align 8
  %158 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:34\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Builtins::intShiftRight:34", align 8
  %160 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:42\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Builtins::intShiftRight:42", align 8
  %162 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:49\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Builtins::intShiftRight:49", align 8
  %164 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftRight:5\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Builtins::intShiftRight:5", align 8
  %166 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:11\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Builtins::intSubtract:11", align 8
  %168 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Builtins::intSubtract:18", align 8
  %170 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Builtins::intSubtract:5", align 8
  %172 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %174 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %176 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %178 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %180 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Builtins::isNonNegative:12", align 8
  %182 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Builtins::isNonNegative:13", align 8
  %184 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Builtins::isNonNegative:5", align 8
  %186 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listFilled:10\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Builtins::listFilled:10", align 8
  %188 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listFilled:17\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Builtins::listFilled:17", align 8
  %190 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listFilled:5\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Builtins::listFilled:5", align 8
  %192 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listFilled:8\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Builtins::listFilled:8", align 8
  %194 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Builtins::listGet:11", align 8
  %196 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Builtins::listGet:14", align 8
  %198 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Builtins::listGet:16", align 8
  %200 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Builtins::listGet:24", align 8
  %202 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Builtins::listGet:25", align 8
  %204 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Builtins::listGet:30", align 8
  %206 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Builtins::listGet:37", align 8
  %208 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Builtins::listGet:5", align 8
  %210 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Builtins::listInsert:11", align 8
  %212 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Builtins::listInsert:14", align 8
  %214 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Builtins::listInsert:16", align 8
  %216 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Builtins::listInsert:24", align 8
  %218 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Builtins::listInsert:25", align 8
  %220 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Builtins::listInsert:27", align 8
  %222 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Builtins::listInsert:35", align 8
  %224 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Builtins::listInsert:5", align 8
  %226 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Builtins::listLength:11", align 8
  %228 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Builtins::listLength:5", align 8
  %230 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:11\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Builtins::listRemoveAt:11", align 8
  %232 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:14\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Builtins::listRemoveAt:14", align 8
  %234 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:16\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Builtins::listRemoveAt:16", align 8
  %236 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:21\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Builtins::listRemoveAt:21", align 8
  %238 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:22\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Builtins::listRemoveAt:22", align 8
  %240 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:27\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Builtins::listRemoveAt:27", align 8
  %242 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:34\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Builtins::listRemoveAt:34", align 8
  %244 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listRemoveAt:5\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Builtins::listRemoveAt:5", align 8
  %246 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:11\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Builtins::listReplace:11", align 8
  %248 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:14\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Builtins::listReplace:14", align 8
  %250 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:16\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Builtins::listReplace:16", align 8
  %252 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:21\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Builtins::listReplace:21", align 8
  %254 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:22\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Builtins::listReplace:22", align 8
  %256 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:27\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Builtins::listReplace:27", align 8
  %258 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:35\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Builtins::listReplace:35", align 8
  %260 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listReplace:5\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Builtins::listReplace:5", align 8
  %262 = alloca i8, i64 16, align 1
  store [16 x i8] c"Builtins::not:1\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Builtins::not:1", align 8
  %264 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::print:11\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Builtins::print:11", align 8
  %266 = alloca i8, i64 18, align 1
  store [18 x i8] c"Builtins::print:5\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Builtins::print:5", align 8
  %268 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Builtins::structGet:12", align 8
  %270 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Builtins::structGet:21", align 8
  %272 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:22\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Builtins::structGet:22", align 8
  %274 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structGet:24:0\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Builtins::structGet:24:0", align 8
  %276 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:25\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Builtins::structGet:25", align 8
  %278 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:28\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Builtins::structGet:28", align 8
  %280 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:29\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Builtins::structGet:29", align 8
  %282 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structGet:31:0\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Builtins::structGet:31:0", align 8
  %284 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:32\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Builtins::structGet:32", align 8
  %286 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:34\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Builtins::structGet:34", align 8
  %288 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:35\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Builtins::structGet:35", align 8
  %290 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:36\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Builtins::structGet:36", align 8
  %292 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:37\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Builtins::structGet:37", align 8
  %294 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:38\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Builtins::structGet:38", align 8
  %296 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:45\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Builtins::structGet:45", align 8
  %298 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"Builtins::structGet:5", align 8
  %300 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::structGetKeys:11\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"Builtins::structGetKeys:11", align 8
  %302 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::structGetKeys:5\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"Builtins::structGetKeys:5", align 8
  %304 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::structHasKey:12\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"Builtins::structHasKey:12", align 8
  %306 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structHasKey:5\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"Builtins::structHasKey:5", align 8
  %308 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"Builtins::tagGetValue:11", align 8
  %310 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"Builtins::tagGetValue:13", align 8
  %312 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"Builtins::tagGetValue:19", align 8
  %314 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"Builtins::tagGetValue:5", align 8
  %316 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagHasValue:11\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"Builtins::tagHasValue:11", align 8
  %318 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagHasValue:5\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"Builtins::tagHasValue:5", align 8
  %320 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::tagWithoutValue:11\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"Builtins::tagWithoutValue:11", align 8
  %322 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::tagWithoutValue:5\00", ptr %322, align 1
  %323 = call ptr @make_candy_text(ptr %322)
  store ptr %323, ptr @"Builtins::tagWithoutValue:5", align 8
  %324 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textCharacters:11\00", ptr %324, align 1
  %325 = call ptr @make_candy_text(ptr %324)
  store ptr %325, ptr @"Builtins::textCharacters:11", align 8
  %326 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textCharacters:5\00", ptr %326, align 1
  %327 = call ptr @make_candy_text(ptr %326)
  store ptr %327, ptr @"Builtins::textCharacters:5", align 8
  %328 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %328, align 1
  %329 = call ptr @make_candy_text(ptr %328)
  store ptr %329, ptr @"Builtins::textConcatenate:11", align 8
  %330 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %330, align 1
  %331 = call ptr @make_candy_text(ptr %330)
  store ptr %331, ptr @"Builtins::textConcatenate:18", align 8
  %332 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %332, align 1
  %333 = call ptr @make_candy_text(ptr %332)
  store ptr %333, ptr @"Builtins::textConcatenate:5", align 8
  %334 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textContains:11\00", ptr %334, align 1
  %335 = call ptr @make_candy_text(ptr %334)
  store ptr %335, ptr @"Builtins::textContains:11", align 8
  %336 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textContains:18\00", ptr %336, align 1
  %337 = call ptr @make_candy_text(ptr %336)
  store ptr %337, ptr @"Builtins::textContains:18", align 8
  %338 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textContains:5\00", ptr %338, align 1
  %339 = call ptr @make_candy_text(ptr %338)
  store ptr %339, ptr @"Builtins::textContains:5", align 8
  %340 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textEndsWith:11\00", ptr %340, align 1
  %341 = call ptr @make_candy_text(ptr %340)
  store ptr %341, ptr @"Builtins::textEndsWith:11", align 8
  %342 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textEndsWith:18\00", ptr %342, align 1
  %343 = call ptr @make_candy_text(ptr %342)
  store ptr %343, ptr @"Builtins::textEndsWith:18", align 8
  %344 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textEndsWith:5\00", ptr %344, align 1
  %345 = call ptr @make_candy_text(ptr %344)
  store ptr %345, ptr @"Builtins::textEndsWith:5", align 8
  %346 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textFromUtf8:11\00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"Builtins::textFromUtf8:11", align 8
  %348 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textFromUtf8:5\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @"Builtins::textFromUtf8:5", align 8
  %350 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:11\00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"Builtins::textGetRange:11", align 8
  %352 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:14\00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"Builtins::textGetRange:14", align 8
  %354 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:16\00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"Builtins::textGetRange:16", align 8
  %356 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:24\00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"Builtins::textGetRange:24", align 8
  %358 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:25\00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"Builtins::textGetRange:25", align 8
  %360 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:27\00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"Builtins::textGetRange:27", align 8
  %362 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:33\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"Builtins::textGetRange:33", align 8
  %364 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:36\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"Builtins::textGetRange:36", align 8
  %366 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:38\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"Builtins::textGetRange:38", align 8
  %368 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:46\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"Builtins::textGetRange:46", align 8
  %370 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:47\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"Builtins::textGetRange:47", align 8
  %372 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:49\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"Builtins::textGetRange:49", align 8
  %374 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textGetRange:5\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"Builtins::textGetRange:5", align 8
  %376 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:53\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"Builtins::textGetRange:53", align 8
  %378 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:55\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"Builtins::textGetRange:55", align 8
  %380 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:63\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"Builtins::textGetRange:63", align 8
  %382 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textIsEmpty:11\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"Builtins::textIsEmpty:11", align 8
  %384 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textIsEmpty:5\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"Builtins::textIsEmpty:5", align 8
  %386 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textLength:11\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"Builtins::textLength:11", align 8
  %388 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::textLength:5\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"Builtins::textLength:5", align 8
  %390 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:11\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"Builtins::textStartsWith:11", align 8
  %392 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:18\00", ptr %392, align 1
  %393 = call ptr @make_candy_text(ptr %392)
  store ptr %393, ptr @"Builtins::textStartsWith:18", align 8
  %394 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textStartsWith:5\00", ptr %394, align 1
  %395 = call ptr @make_candy_text(ptr %394)
  store ptr %395, ptr @"Builtins::textStartsWith:5", align 8
  %396 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textTrimEnd:11\00", ptr %396, align 1
  %397 = call ptr @make_candy_text(ptr %396)
  store ptr %397, ptr @"Builtins::textTrimEnd:11", align 8
  %398 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textTrimEnd:5\00", ptr %398, align 1
  %399 = call ptr @make_candy_text(ptr %398)
  store ptr %399, ptr @"Builtins::textTrimEnd:5", align 8
  %400 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textTrimStart:11\00", ptr %400, align 1
  %401 = call ptr @make_candy_text(ptr %400)
  store ptr %401, ptr @"Builtins::textTrimStart:11", align 8
  %402 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textTrimStart:5\00", ptr %402, align 1
  %403 = call ptr @make_candy_text(ptr %402)
  store ptr %403, ptr @"Builtins::textTrimStart:5", align 8
  %404 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %404, align 1
  %405 = call ptr @make_candy_text(ptr %404)
  store ptr %405, ptr @"Builtins::toDebugText:5", align 8
  %406 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %406, align 1
  %407 = call ptr @make_candy_text(ptr %406)
  store ptr %407, ptr @"Builtins::typeIs:19", align 8
  %408 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %408, align 1
  %409 = call ptr @make_candy_text(ptr %408)
  store ptr %409, ptr @"Builtins::typeIs:25", align 8
  %410 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %410, align 1
  %411 = call ptr @make_candy_text(ptr %410)
  store ptr %411, ptr @"Builtins::typeOf:5", align 8
  %412 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:equality:17\00", ptr %412, align 1
  %413 = call ptr @make_candy_text(ptr %412)
  store ptr %413, ptr @"Core:equality:17", align 8
  %414 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %414, align 1
  %415 = call ptr @make_candy_text(ptr %414)
  store ptr %415, ptr @"anonymous:$generated::needs", align 8
  %416 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %416, ptr @fun_candy_builtin_equals, align 8
  %417 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %417, ptr @fun_candy_builtin_get_argument_count, align 8
  %418 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %418, ptr @fun_candy_builtin_if_else, align 8
  %419 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %419, ptr @fun_candy_builtin_int_add, align 8
  %420 = call ptr @make_candy_function(ptr @candy_builtin_int_bit_length, ptr null, i64 0)
  store ptr %420, ptr @fun_candy_builtin_int_bit_length, align 8
  %421 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %421, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %422 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_or, ptr null, i64 0)
  store ptr %422, ptr @fun_candy_builtin_int_bitwise_or, align 8
  %423 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_xor, ptr null, i64 0)
  store ptr %423, ptr @fun_candy_builtin_int_bitwise_xor, align 8
  %424 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %424, ptr @fun_candy_builtin_int_compare_to, align 8
  %425 = call ptr @make_candy_function(ptr @candy_builtin_int_divide_truncating, ptr null, i64 0)
  store ptr %425, ptr @fun_candy_builtin_int_divide_truncating, align 8
  %426 = call ptr @make_candy_function(ptr @candy_builtin_int_modulo, ptr null, i64 0)
  store ptr %426, ptr @fun_candy_builtin_int_modulo, align 8
  %427 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %427, ptr @fun_candy_builtin_int_multiply, align 8
  %428 = call ptr @make_candy_function(ptr @candy_builtin_int_parse, ptr null, i64 0)
  store ptr %428, ptr @fun_candy_builtin_int_parse, align 8
  %429 = call ptr @make_candy_function(ptr @candy_builtin_int_remainder, ptr null, i64 0)
  store ptr %429, ptr @fun_candy_builtin_int_remainder, align 8
  %430 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_left, ptr null, i64 0)
  store ptr %430, ptr @fun_candy_builtin_int_shift_left, align 8
  %431 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_right, ptr null, i64 0)
  store ptr %431, ptr @fun_candy_builtin_int_shift_right, align 8
  %432 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %432, ptr @fun_candy_builtin_int_subtract, align 8
  %433 = call ptr @make_candy_function(ptr @candy_builtin_list_filled, ptr null, i64 0)
  store ptr %433, ptr @fun_candy_builtin_list_filled, align 8
  %434 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %434, ptr @fun_candy_builtin_list_get, align 8
  %435 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %435, ptr @fun_candy_builtin_list_insert, align 8
  %436 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %436, ptr @fun_candy_builtin_list_length, align 8
  %437 = call ptr @make_candy_function(ptr @candy_builtin_list_remove_at, ptr null, i64 0)
  store ptr %437, ptr @fun_candy_builtin_list_remove_at, align 8
  %438 = call ptr @make_candy_function(ptr @candy_builtin_list_replace, ptr null, i64 0)
  store ptr %438, ptr @fun_candy_builtin_list_replace, align 8
  %439 = call ptr @make_candy_function(ptr @candy_builtin_print, ptr null, i64 0)
  store ptr %439, ptr @fun_candy_builtin_print, align 8
  %440 = call ptr @make_candy_function(ptr @candy_builtin_struct_get.1, ptr null, i64 0)
  store ptr %440, ptr @fun_candy_builtin_struct_get, align 8
  %441 = call ptr @make_candy_function(ptr @candy_builtin_struct_get_keys, ptr null, i64 0)
  store ptr %441, ptr @fun_candy_builtin_struct_get_keys, align 8
  %442 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %442, ptr @fun_candy_builtin_struct_has_key, align 8
  %443 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %443, ptr @fun_candy_builtin_tag_get_value, align 8
  %444 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %444, ptr @fun_candy_builtin_tag_has_value, align 8
  %445 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %445, ptr @fun_candy_builtin_tag_without_value, align 8
  %446 = call ptr @make_candy_function(ptr @candy_builtin_text_characters, ptr null, i64 0)
  store ptr %446, ptr @fun_candy_builtin_text_characters, align 8
  %447 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %447, ptr @fun_candy_builtin_text_concatenate, align 8
  %448 = call ptr @make_candy_function(ptr @candy_builtin_text_contains, ptr null, i64 0)
  store ptr %448, ptr @fun_candy_builtin_text_contains, align 8
  %449 = call ptr @make_candy_function(ptr @candy_builtin_text_ends_with, ptr null, i64 0)
  store ptr %449, ptr @fun_candy_builtin_text_ends_with, align 8
  %450 = call ptr @make_candy_function(ptr @candy_builtin_text_from_utf8, ptr null, i64 0)
  store ptr %450, ptr @fun_candy_builtin_text_from_utf8, align 8
  %451 = call ptr @make_candy_function(ptr @candy_builtin_text_get_range, ptr null, i64 0)
  store ptr %451, ptr @fun_candy_builtin_text_get_range, align 8
  %452 = call ptr @make_candy_function(ptr @candy_builtin_text_is_empty, ptr null, i64 0)
  store ptr %452, ptr @fun_candy_builtin_text_is_empty, align 8
  %453 = call ptr @make_candy_function(ptr @candy_builtin_text_length, ptr null, i64 0)
  store ptr %453, ptr @fun_candy_builtin_text_length, align 8
  %454 = call ptr @make_candy_function(ptr @candy_builtin_text_starts_with, ptr null, i64 0)
  store ptr %454, ptr @fun_candy_builtin_text_starts_with, align 8
  %455 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_end, ptr null, i64 0)
  store ptr %455, ptr @fun_candy_builtin_text_trim_end, align 8
  %456 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_start, ptr null, i64 0)
  store ptr %456, ptr @fun_candy_builtin_text_trim_start, align 8
  %457 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %457, ptr @fun_candy_builtin_to_debug_text, align 8
  %458 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %458, ptr @fun_candy_builtin_type_of, align 8
  %459 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %459, align 1
  %460 = call ptr @make_candy_tag(ptr %459, ptr null)
  store ptr %460, ptr @tag_Equal, align 8
  %461 = alloca i8, i64 7, align 1
  store [7 x i8] c"Equals\00", ptr %461, align 1
  %462 = call ptr @make_candy_tag(ptr %461, ptr null)
  store ptr %462, ptr @tag_Equals, align 8
  %463 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %463, align 1
  %464 = call ptr @make_candy_tag(ptr %463, ptr null)
  store ptr %464, ptr @tag_False, align 8
  %465 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %465, align 1
  %466 = call ptr @make_candy_tag(ptr %465, ptr null)
  store ptr %466, ptr @tag_Function, align 8
  %467 = alloca i8, i64 12, align 1
  store [12 x i8] c"FunctionRun\00", ptr %467, align 1
  %468 = call ptr @make_candy_tag(ptr %467, ptr null)
  store ptr %468, ptr @tag_FunctionRun, align 8
  %469 = alloca i8, i64 17, align 1
  store [17 x i8] c"GetArgumentCount\00", ptr %469, align 1
  %470 = call ptr @make_candy_tag(ptr %469, ptr null)
  store ptr %470, ptr @tag_GetArgumentCount, align 8
  %471 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %471, align 1
  %472 = call ptr @make_candy_tag(ptr %471, ptr null)
  store ptr %472, ptr @tag_Greater, align 8
  %473 = alloca i8, i64 7, align 1
  store [7 x i8] c"IfElse\00", ptr %473, align 1
  %474 = call ptr @make_candy_tag(ptr %473, ptr null)
  store ptr %474, ptr @tag_IfElse, align 8
  %475 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %475, align 1
  %476 = call ptr @make_candy_tag(ptr %475, ptr null)
  store ptr %476, ptr @tag_Int, align 8
  %477 = alloca i8, i64 7, align 1
  store [7 x i8] c"IntAdd\00", ptr %477, align 1
  %478 = call ptr @make_candy_tag(ptr %477, ptr null)
  store ptr %478, ptr @tag_IntAdd, align 8
  %479 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntBitLength\00", ptr %479, align 1
  %480 = call ptr @make_candy_tag(ptr %479, ptr null)
  store ptr %480, ptr @tag_IntBitLength, align 8
  %481 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntBitwiseAnd\00", ptr %481, align 1
  %482 = call ptr @make_candy_tag(ptr %481, ptr null)
  store ptr %482, ptr @tag_IntBitwiseAnd, align 8
  %483 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntBitwiseOr\00", ptr %483, align 1
  %484 = call ptr @make_candy_tag(ptr %483, ptr null)
  store ptr %484, ptr @tag_IntBitwiseOr, align 8
  %485 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntBitwiseXor\00", ptr %485, align 1
  %486 = call ptr @make_candy_tag(ptr %485, ptr null)
  store ptr %486, ptr @tag_IntBitwiseXor, align 8
  %487 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntCompareTo\00", ptr %487, align 1
  %488 = call ptr @make_candy_tag(ptr %487, ptr null)
  store ptr %488, ptr @tag_IntCompareTo, align 8
  %489 = alloca i8, i64 20, align 1
  store [20 x i8] c"IntDivideTruncating\00", ptr %489, align 1
  %490 = call ptr @make_candy_tag(ptr %489, ptr null)
  store ptr %490, ptr @tag_IntDivideTruncating, align 8
  %491 = alloca i8, i64 10, align 1
  store [10 x i8] c"IntModulo\00", ptr %491, align 1
  %492 = call ptr @make_candy_tag(ptr %491, ptr null)
  store ptr %492, ptr @tag_IntModulo, align 8
  %493 = alloca i8, i64 12, align 1
  store [12 x i8] c"IntMultiply\00", ptr %493, align 1
  %494 = call ptr @make_candy_tag(ptr %493, ptr null)
  store ptr %494, ptr @tag_IntMultiply, align 8
  %495 = alloca i8, i64 9, align 1
  store [9 x i8] c"IntParse\00", ptr %495, align 1
  %496 = call ptr @make_candy_tag(ptr %495, ptr null)
  store ptr %496, ptr @tag_IntParse, align 8
  %497 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntRemainder\00", ptr %497, align 1
  %498 = call ptr @make_candy_tag(ptr %497, ptr null)
  store ptr %498, ptr @tag_IntRemainder, align 8
  %499 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntShiftLeft\00", ptr %499, align 1
  %500 = call ptr @make_candy_tag(ptr %499, ptr null)
  store ptr %500, ptr @tag_IntShiftLeft, align 8
  %501 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntShiftRight\00", ptr %501, align 1
  %502 = call ptr @make_candy_tag(ptr %501, ptr null)
  store ptr %502, ptr @tag_IntShiftRight, align 8
  %503 = alloca i8, i64 12, align 1
  store [12 x i8] c"IntSubtract\00", ptr %503, align 1
  %504 = call ptr @make_candy_tag(ptr %503, ptr null)
  store ptr %504, ptr @tag_IntSubtract, align 8
  %505 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %505, align 1
  %506 = call ptr @make_candy_tag(ptr %505, ptr null)
  store ptr %506, ptr @tag_Less, align 8
  %507 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %507, align 1
  %508 = call ptr @make_candy_tag(ptr %507, ptr null)
  store ptr %508, ptr @tag_List, align 8
  %509 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListFilled\00", ptr %509, align 1
  %510 = call ptr @make_candy_tag(ptr %509, ptr null)
  store ptr %510, ptr @tag_ListFilled, align 8
  %511 = alloca i8, i64 8, align 1
  store [8 x i8] c"ListGet\00", ptr %511, align 1
  %512 = call ptr @make_candy_tag(ptr %511, ptr null)
  store ptr %512, ptr @tag_ListGet, align 8
  %513 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListInsert\00", ptr %513, align 1
  %514 = call ptr @make_candy_tag(ptr %513, ptr null)
  store ptr %514, ptr @tag_ListInsert, align 8
  %515 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListLength\00", ptr %515, align 1
  %516 = call ptr @make_candy_tag(ptr %515, ptr null)
  store ptr %516, ptr @tag_ListLength, align 8
  %517 = alloca i8, i64 13, align 1
  store [13 x i8] c"ListRemoveAt\00", ptr %517, align 1
  %518 = call ptr @make_candy_tag(ptr %517, ptr null)
  store ptr %518, ptr @tag_ListRemoveAt, align 8
  %519 = alloca i8, i64 12, align 1
  store [12 x i8] c"ListReplace\00", ptr %519, align 1
  %520 = call ptr @make_candy_tag(ptr %519, ptr null)
  store ptr %520, ptr @tag_ListReplace, align 8
  %521 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %521, align 1
  %522 = call ptr @make_candy_tag(ptr %521, ptr null)
  store ptr %522, ptr @tag_Match, align 8
  %523 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %523, align 1
  %524 = call ptr @make_candy_tag(ptr %523, ptr null)
  store ptr %524, ptr @tag_NoMatch, align 8
  %525 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %525, align 1
  %526 = call ptr @make_candy_tag(ptr %525, ptr null)
  store ptr %526, ptr @tag_Nothing, align 8
  %527 = alloca i8, i64 6, align 1
  store [6 x i8] c"Print\00", ptr %527, align 1
  %528 = call ptr @make_candy_tag(ptr %527, ptr null)
  store ptr %528, ptr @tag_Print, align 8
  %529 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %529, align 1
  %530 = call ptr @make_candy_tag(ptr %529, ptr null)
  store ptr %530, ptr @tag_Struct, align 8
  %531 = alloca i8, i64 10, align 1
  store [10 x i8] c"StructGet\00", ptr %531, align 1
  %532 = call ptr @make_candy_tag(ptr %531, ptr null)
  store ptr %532, ptr @tag_StructGet, align 8
  %533 = alloca i8, i64 14, align 1
  store [14 x i8] c"StructGetKeys\00", ptr %533, align 1
  %534 = call ptr @make_candy_tag(ptr %533, ptr null)
  store ptr %534, ptr @tag_StructGetKeys, align 8
  %535 = alloca i8, i64 13, align 1
  store [13 x i8] c"StructHasKey\00", ptr %535, align 1
  %536 = call ptr @make_candy_tag(ptr %535, ptr null)
  store ptr %536, ptr @tag_StructHasKey, align 8
  %537 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %537, align 1
  %538 = call ptr @make_candy_tag(ptr %537, ptr null)
  store ptr %538, ptr @tag_Tag, align 8
  %539 = alloca i8, i64 12, align 1
  store [12 x i8] c"TagGetValue\00", ptr %539, align 1
  %540 = call ptr @make_candy_tag(ptr %539, ptr null)
  store ptr %540, ptr @tag_TagGetValue, align 8
  %541 = alloca i8, i64 12, align 1
  store [12 x i8] c"TagHasValue\00", ptr %541, align 1
  %542 = call ptr @make_candy_tag(ptr %541, ptr null)
  store ptr %542, ptr @tag_TagHasValue, align 8
  %543 = alloca i8, i64 16, align 1
  store [16 x i8] c"TagWithoutValue\00", ptr %543, align 1
  %544 = call ptr @make_candy_tag(ptr %543, ptr null)
  store ptr %544, ptr @tag_TagWithoutValue, align 8
  %545 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %545, align 1
  %546 = call ptr @make_candy_tag(ptr %545, ptr null)
  store ptr %546, ptr @tag_Text, align 8
  %547 = alloca i8, i64 15, align 1
  store [15 x i8] c"TextCharacters\00", ptr %547, align 1
  %548 = call ptr @make_candy_tag(ptr %547, ptr null)
  store ptr %548, ptr @tag_TextCharacters, align 8
  %549 = alloca i8, i64 16, align 1
  store [16 x i8] c"TextConcatenate\00", ptr %549, align 1
  %550 = call ptr @make_candy_tag(ptr %549, ptr null)
  store ptr %550, ptr @tag_TextConcatenate, align 8
  %551 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextContains\00", ptr %551, align 1
  %552 = call ptr @make_candy_tag(ptr %551, ptr null)
  store ptr %552, ptr @tag_TextContains, align 8
  %553 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextEndsWith\00", ptr %553, align 1
  %554 = call ptr @make_candy_tag(ptr %553, ptr null)
  store ptr %554, ptr @tag_TextEndsWith, align 8
  %555 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextFromUtf8\00", ptr %555, align 1
  %556 = call ptr @make_candy_tag(ptr %555, ptr null)
  store ptr %556, ptr @tag_TextFromUtf8, align 8
  %557 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextGetRange\00", ptr %557, align 1
  %558 = call ptr @make_candy_tag(ptr %557, ptr null)
  store ptr %558, ptr @tag_TextGetRange, align 8
  %559 = alloca i8, i64 12, align 1
  store [12 x i8] c"TextIsEmpty\00", ptr %559, align 1
  %560 = call ptr @make_candy_tag(ptr %559, ptr null)
  store ptr %560, ptr @tag_TextIsEmpty, align 8
  %561 = alloca i8, i64 11, align 1
  store [11 x i8] c"TextLength\00", ptr %561, align 1
  %562 = call ptr @make_candy_tag(ptr %561, ptr null)
  store ptr %562, ptr @tag_TextLength, align 8
  %563 = alloca i8, i64 15, align 1
  store [15 x i8] c"TextStartsWith\00", ptr %563, align 1
  %564 = call ptr @make_candy_tag(ptr %563, ptr null)
  store ptr %564, ptr @tag_TextStartsWith, align 8
  %565 = alloca i8, i64 12, align 1
  store [12 x i8] c"TextTrimEnd\00", ptr %565, align 1
  %566 = call ptr @make_candy_tag(ptr %565, ptr null)
  store ptr %566, ptr @tag_TextTrimEnd, align 8
  %567 = alloca i8, i64 14, align 1
  store [14 x i8] c"TextTrimStart\00", ptr %567, align 1
  %568 = call ptr @make_candy_tag(ptr %567, ptr null)
  store ptr %568, ptr @tag_TextTrimStart, align 8
  %569 = alloca i8, i64 12, align 1
  store [12 x i8] c"ToDebugText\00", ptr %569, align 1
  %570 = call ptr @make_candy_tag(ptr %569, ptr null)
  store ptr %570, ptr @tag_ToDebugText, align 8
  %571 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %571, align 1
  %572 = call ptr @make_candy_tag(ptr %571, ptr null)
  store ptr %572, ptr @tag_True, align 8
  %573 = alloca i8, i64 7, align 1
  store [7 x i8] c"TypeOf\00", ptr %573, align 1
  %574 = call ptr @make_candy_tag(ptr %573, ptr null)
  store ptr %574, ptr @tag_TypeOf, align 8
  %575 = call ptr @make_candy_int(i64 0)
  store ptr %575, ptr @num_0, align 8
  %576 = call ptr @make_candy_int(i64 1)
  store ptr %576, ptr @num_1, align 8
  %577 = call ptr @make_candy_int(i64 9223372036854775807)
  store ptr %577, ptr @num_340282366920938463463374607431768211455, align 8
  %578 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %578, align 1
  %579 = call ptr @make_candy_text(ptr %578)
  store ptr %579, ptr @text_., align 8
  %580 = alloca i8, i64 46, align 1
  store [46 x i8] c". You might want to call `shiftLeft` instead.\00", ptr %580, align 1
  %581 = call ptr @make_candy_text(ptr %580)
  store ptr %581, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %582 = alloca i8, i64 47, align 1
  store [47 x i8] c". You might want to call `shiftRight` instead.\00", ptr %582, align 1
  %583 = call ptr @make_candy_text(ptr %582)
  store ptr %583, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  %584 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Equal, got \00", ptr %584, align 1
  %585 = call ptr @make_candy_text(ptr %584)
  store ptr %585, ptr @"text_Expected Equal, got ", align 8
  %586 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %586, align 1
  %587 = call ptr @make_candy_text(ptr %586)
  store ptr %587, ptr @"text_Expected False, got ", align 8
  %588 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Greater, got \00", ptr %588, align 1
  %589 = call ptr @make_candy_text(ptr %588)
  store ptr %589, ptr @"text_Expected Greater, got ", align 8
  %590 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected Less, got \00", ptr %590, align 1
  %591 = call ptr @make_candy_text(ptr %590)
  store ptr %591, ptr @"text_Expected Less, got ", align 8
  %592 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %592, align 1
  %593 = call ptr @make_candy_text(ptr %592)
  store ptr %593, ptr @"text_Expected True, got ", align 8
  %594 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %594, align 1
  %595 = call ptr @make_candy_text(ptr %594)
  store ptr %595, ptr @"text_Expected a Tag, got `", align 8
  %596 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %596, align 1
  %597 = call ptr @make_candy_text(ptr %596)
  store ptr %597, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %598 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %598, align 1
  %599 = call ptr @make_candy_text(ptr %598)
  store ptr %599, ptr @"text_No case matched the given expression.", align 8
  %600 = alloca i8, i64 43, align 1
  store [43 x i8] c"Shifts by that much are not yet supported.\00", ptr %600, align 1
  %601 = call ptr @make_candy_text(ptr %600)
  store ptr %601, ptr @"text_Shifts by that much are not yet supported.", align 8
  %602 = alloca i8, i64 9, align 1
  store [9 x i8] c"Struct `\00", ptr %602, align 1
  %603 = call ptr @make_candy_text(ptr %602)
  store ptr %603, ptr @"text_Struct `", align 8
  %604 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %604, align 1
  %605 = call ptr @make_candy_text(ptr %604)
  store ptr %605, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %606 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %606, align 1
  %607 = call ptr @make_candy_text(ptr %606)
  store ptr %607, ptr @"text_The `reason` must be a text.", align 8
  %608 = alloca i8, i64 33, align 1
  store [33 x i8] c"The shift `amount` is negative: \00", ptr %608, align 1
  %609 = call ptr @make_candy_text(ptr %608)
  store ptr %609, ptr @"text_The shift `amount` is negative: ", align 8
  %610 = alloca i8, i64 26, align 1
  store [26 x i8] c"You can't divide by zero.\00", ptr %610, align 1
  %611 = call ptr @make_candy_text(ptr %610)
  store ptr %611, ptr @"text_You can't divide by zero.", align 8
  %612 = alloca i8, i64 23, align 1
  store [23 x i8] c"` is missing the key `\00", ptr %612, align 1
  %613 = call ptr @make_candy_text(ptr %612)
  store ptr %613, ptr @"text_` is missing the key `", align 8
  %614 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %614, align 1
  %615 = call ptr @make_candy_text(ptr %614)
  store ptr %615, ptr @"text_`.", align 8
  %616 = alloca i8, i64 26, align 1
  store [26 x i8] c"`False` was not satisfied\00", ptr %616, align 1
  %617 = call ptr @make_candy_text(ptr %616)
  store ptr %617, ptr @"text_`False` was not satisfied", align 8
  %618 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %618, align 1
  %619 = call ptr @make_candy_text(ptr %618)
  store ptr %619, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %620 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %620, align 1
  %621 = call ptr @make_candy_text(ptr %620)
  store ptr %621, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %622 = alloca i8, i64 40, align 1
  store [40 x i8] c"`amount | typeIs Int` was not satisfied\00", ptr %622, align 1
  %623 = call ptr @make_candy_text(ptr %622)
  store ptr %623, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %624 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %624, align 1
  %625 = call ptr @make_candy_text(ptr %624)
  store ptr %625, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %626 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %626, align 1
  %627 = call ptr @make_candy_text(ptr %626)
  store ptr %627, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %628 = alloca i8, i64 40, align 1
  store [40 x i8] c"`bytes | typeIs List` was not satisfied\00", ptr %628, align 1
  %629 = call ptr @make_candy_text(ptr %628)
  store ptr %629, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  %630 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %630, align 1
  %631 = call ptr @make_candy_text(ptr %630)
  store ptr %631, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %632 = alloca i8, i64 42, align 1
  store [42 x i8] c"`dividend | typeIs Int` was not satisfied\00", ptr %632, align 1
  %633 = call ptr @make_candy_text(ptr %632)
  store ptr %633, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %634 = alloca i8, i64 41, align 1
  store [41 x i8] c"`divisor | typeIs Int` was not satisfied\00", ptr %634, align 1
  %635 = call ptr @make_candy_text(ptr %634)
  store ptr %635, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %636 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %636, align 1
  %637 = call ptr @make_candy_text(ptr %636)
  store ptr %637, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %638 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %638, align 1
  %639 = call ptr @make_candy_text(ptr %638)
  store ptr %639, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %640 = alloca i8, i64 79, align 1
  store [77 x i8] c"`endExclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %640, align 1
  %641 = call ptr @make_candy_text(ptr %640)
  store ptr %641, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %642 = alloca i8, i64 49, align 1
  store [49 x i8] c"`endExclusive | isNonNegative` was not satisfied\00", ptr %642, align 1
  %643 = call ptr @make_candy_text(ptr %642)
  store ptr %643, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %644 = alloca i8, i64 46, align 1
  store [46 x i8] c"`endExclusive | typeIs Int` was not satisfied\00", ptr %644, align 1
  %645 = call ptr @make_candy_text(ptr %644)
  store ptr %645, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %646 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %646, align 1
  %647 = call ptr @make_candy_text(ptr %646)
  store ptr %647, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %648 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorB | typeIs Int` was not satisfied\00", ptr %648, align 1
  %649 = call ptr @make_candy_text(ptr %648)
  store ptr %649, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %650 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %650, align 1
  %651 = call ptr @make_candy_text(ptr %650)
  store ptr %651, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %652 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %652, align 1
  %653 = call ptr @make_candy_text(ptr %652)
  store ptr %653, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %654 = alloca i8, i64 75, align 1
  store [75 x i8] c"`index | intCompareTo (list | listLength) | equals Less` was not satisfied\00", ptr %654, align 1
  %655 = call ptr @make_candy_text(ptr %654)
  store ptr %655, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %656 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %656, align 1
  %657 = call ptr @make_candy_text(ptr %656)
  store ptr %657, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %658 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %658, align 1
  %659 = call ptr @make_candy_text(ptr %658)
  store ptr %659, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %660 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %660, align 1
  %661 = call ptr @make_candy_text(ptr %660)
  store ptr %661, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %662 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %662, align 1
  %663 = call ptr @make_candy_text(ptr %662)
  store ptr %663, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %664 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %664, align 1
  %665 = call ptr @make_candy_text(ptr %664)
  store ptr %665, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %666 = alloca i8, i64 43, align 1
  store [43 x i8] c"`length | isNonNegative` was not satisfied\00", ptr %666, align 1
  %667 = call ptr @make_candy_text(ptr %666)
  store ptr %667, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  %668 = alloca i8, i64 40, align 1
  store [40 x i8] c"`length | typeIs Int` was not satisfied\00", ptr %668, align 1
  %669 = call ptr @make_candy_text(ptr %668)
  store ptr %669, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  %670 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %670, align 1
  %671 = call ptr @make_candy_text(ptr %670)
  store ptr %671, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %672 = alloca i8, i64 42, align 1
  store [42 x i8] c"`message | typeIs Text` was not satisfied\00", ptr %672, align 1
  %673 = call ptr @make_candy_text(ptr %672)
  store ptr %673, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  %674 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %674, align 1
  %675 = call ptr @make_candy_text(ptr %674)
  store ptr %675, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %676 = alloca i8, i64 42, align 1
  store [42 x i8] c"`pattern | typeIs Text` was not satisfied\00", ptr %676, align 1
  %677 = call ptr @make_candy_text(ptr %676)
  store ptr %677, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  %678 = alloca i8, i64 41, align 1
  store [41 x i8] c"`prefix | typeIs Text` was not satisfied\00", ptr %678, align 1
  %679 = call ptr @make_candy_text(ptr %678)
  store ptr %679, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %680 = alloca i8, i64 81, align 1
  store [79 x i8] c"`startInclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %680, align 1
  %681 = call ptr @make_candy_text(ptr %680)
  store ptr %681, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %682 = alloca i8, i64 70, align 1
  store [70 x i8] c"`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied\00", ptr %682, align 1
  %683 = call ptr @make_candy_text(ptr %682)
  store ptr %683, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %684 = alloca i8, i64 51, align 1
  store [51 x i8] c"`startInclusive | isNonNegative` was not satisfied\00", ptr %684, align 1
  %685 = call ptr @make_candy_text(ptr %684)
  store ptr %685, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %686 = alloca i8, i64 48, align 1
  store [48 x i8] c"`startInclusive | typeIs Int` was not satisfied\00", ptr %686, align 1
  %687 = call ptr @make_candy_text(ptr %686)
  store ptr %687, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %688 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %688, align 1
  %689 = call ptr @make_candy_text(ptr %688)
  store ptr %689, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %690 = alloca i8, i64 44, align 1
  store [44 x i8] c"`subtrahend | typeIs Int` was not satisfied\00", ptr %690, align 1
  %691 = call ptr @make_candy_text(ptr %690)
  store ptr %691, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %692 = alloca i8, i64 41, align 1
  store [41 x i8] c"`suffix | typeIs Text` was not satisfied\00", ptr %692, align 1
  %693 = call ptr @make_candy_text(ptr %692)
  store ptr %693, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  %694 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %694, align 1
  %695 = call ptr @make_candy_text(ptr %694)
  store ptr %695, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %696 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %696, align 1
  %697 = call ptr @make_candy_text(ptr %696)
  store ptr %697, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %698 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %698, align 1
  %699 = call ptr @make_candy_text(ptr %698)
  store ptr %699, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %700 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %700, align 1
  %701 = call ptr @make_candy_text(ptr %700)
  store ptr %701, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %702 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %702, align 1
  %703 = call ptr @make_candy_text(ptr %702)
  store ptr %703, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %704 = alloca i8, i64 42, align 1
  store [42 x i8] c"`value | isNonNegative` was not satisfied\00", ptr %704, align 1
  %705 = call ptr @make_candy_text(ptr %704)
  store ptr %705, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %706 = alloca i8, i64 39, align 1
  store [39 x i8] c"`value | typeIs Int` was not satisfied\00", ptr %706, align 1
  %707 = call ptr @make_candy_text(ptr %706)
  store ptr %707, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %708 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %709 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", ptr %708, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %709, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %710 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %711 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %710, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %711, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %712 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %713 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %712, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %713, ptr @"fun_anonymous_$generated__needs", align 8
  %714 = alloca ptr, i64 2, align 8
  %715 = load ptr, ptr @tag_Match, align 8
  %716 = getelementptr ptr, ptr %714, i64 0
  store ptr %715, ptr %716, align 8
  %717 = getelementptr ptr, ptr %714, i64 1
  store ptr null, ptr %717, align 8
  %718 = call ptr @make_candy_list(ptr %714)
  store ptr %718, ptr @0, align 8
  %719 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %720 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", ptr %719, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %720, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %721 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %722 = call ptr @make_candy_function(ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", ptr %721, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %722, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %723 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %724 = call ptr @make_candy_function(ptr @Builtins__not, ptr %723, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %724, ptr @fun_Builtins__not, align 8
  %725 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %726 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %725, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %726, ptr @fun_Builtins__isNonNegative, align 8
  %727 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %728 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %727, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %728, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %729 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %730 = call ptr @make_candy_function(ptr @Builtins__equals, ptr %729, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %730, ptr @fun_Builtins__equals, align 8
  %731 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %732 = call ptr @make_candy_function(ptr @Builtins__functionRun, ptr %731, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %732, ptr @fun_Builtins__functionRun, align 8
  %733 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %734 = call ptr @make_candy_function(ptr @Builtins__getArgumentCount, ptr %733, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %734, ptr @fun_Builtins__getArgumentCount, align 8
  %735 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %736 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %735, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %736, ptr @fun_Builtins__ifElse, align 8
  %737 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %738 = call ptr @make_candy_function(ptr @Builtins__intAdd, ptr %737, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %738, ptr @fun_Builtins__intAdd, align 8
  %739 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %740 = call ptr @make_candy_function(ptr @Builtins__intBitLength, ptr %739, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %740, ptr @fun_Builtins__intBitLength, align 8
  %741 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %742 = call ptr @make_candy_function(ptr @Builtins__intBitwiseAnd, ptr %741, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %742, ptr @fun_Builtins__intBitwiseAnd, align 8
  %743 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %744 = call ptr @make_candy_function(ptr @Builtins__intBitwiseOr, ptr %743, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %744, ptr @fun_Builtins__intBitwiseOr, align 8
  %745 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %746 = call ptr @make_candy_function(ptr @Builtins__intBitwiseXor, ptr %745, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %746, ptr @fun_Builtins__intBitwiseXor, align 8
  %747 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %748 = call ptr @make_candy_function(ptr @Builtins__intCompareTo, ptr %747, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %748, ptr @fun_Builtins__intCompareTo, align 8
  %749 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %750 = call ptr @make_candy_function(ptr @Builtins__intDivideTruncating, ptr %749, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %750, ptr @fun_Builtins__intDivideTruncating, align 8
  %751 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %752 = call ptr @make_candy_function(ptr @Builtins__intModulo, ptr %751, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %752, ptr @fun_Builtins__intModulo, align 8
  %753 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %754 = call ptr @make_candy_function(ptr @Builtins__intMultiply, ptr %753, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %754, ptr @fun_Builtins__intMultiply, align 8
  %755 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %756 = call ptr @make_candy_function(ptr @Builtins__intParse, ptr %755, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %756, ptr @fun_Builtins__intParse, align 8
  %757 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %758 = call ptr @make_candy_function(ptr @Builtins__intRemainder, ptr %757, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %758, ptr @fun_Builtins__intRemainder, align 8
  %759 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %760 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft, ptr %759, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %760, ptr @fun_Builtins__intShiftLeft, align 8
  %761 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %762 = call ptr @make_candy_function(ptr @Builtins__intShiftRight, ptr %761, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %762, ptr @fun_Builtins__intShiftRight, align 8
  %763 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %764 = call ptr @make_candy_function(ptr @Builtins__intSubtract, ptr %763, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %764, ptr @fun_Builtins__intSubtract, align 8
  %765 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %766 = call ptr @make_candy_function(ptr @Builtins__listFilled, ptr %765, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %766, ptr @fun_Builtins__listFilled, align 8
  %767 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %768 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %767, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %768, ptr @fun_Builtins__listGet, align 8
  %769 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %770 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %769, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %770, ptr @fun_Builtins__listInsert, align 8
  %771 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %772 = call ptr @make_candy_function(ptr @Builtins__listLength, ptr %771, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %772, ptr @fun_Builtins__listLength, align 8
  %773 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %774 = call ptr @make_candy_function(ptr @Builtins__listRemoveAt, ptr %773, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %774, ptr @fun_Builtins__listRemoveAt, align 8
  %775 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %776 = call ptr @make_candy_function(ptr @Builtins__listReplace, ptr %775, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %776, ptr @fun_Builtins__listReplace, align 8
  %777 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %778 = call ptr @make_candy_function(ptr @Builtins__print, ptr %777, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %778, ptr @fun_Builtins__print, align 8
  %779 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %780 = call ptr @make_candy_function(ptr @Builtins__structGet, ptr %779, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %780, ptr @fun_Builtins__structGet, align 8
  %781 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %782 = call ptr @make_candy_function(ptr @Builtins__structGetKeys, ptr %781, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %782, ptr @fun_Builtins__structGetKeys, align 8
  %783 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %784 = call ptr @make_candy_function(ptr @Builtins__structHasKey, ptr %783, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %784, ptr @fun_Builtins__structHasKey, align 8
  %785 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %786 = call ptr @make_candy_function(ptr @Builtins__tagGetValue, ptr %785, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %786, ptr @fun_Builtins__tagGetValue, align 8
  %787 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %788 = call ptr @make_candy_function(ptr @Builtins__tagHasValue, ptr %787, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %788, ptr @fun_Builtins__tagHasValue, align 8
  %789 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %790 = call ptr @make_candy_function(ptr @Builtins__tagWithoutValue, ptr %789, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %790, ptr @fun_Builtins__tagWithoutValue, align 8
  %791 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %792 = call ptr @make_candy_function(ptr @Builtins__textCharacters, ptr %791, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %792, ptr @fun_Builtins__textCharacters, align 8
  %793 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %794 = call ptr @make_candy_function(ptr @Builtins__textConcatenate, ptr %793, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %794, ptr @fun_Builtins__textConcatenate, align 8
  %795 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %796 = call ptr @make_candy_function(ptr @Builtins__textContains, ptr %795, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %796, ptr @fun_Builtins__textContains, align 8
  %797 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %798 = call ptr @make_candy_function(ptr @Builtins__textEndsWith, ptr %797, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %798, ptr @fun_Builtins__textEndsWith, align 8
  %799 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %800 = call ptr @make_candy_function(ptr @Builtins__textFromUtf8, ptr %799, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %800, ptr @fun_Builtins__textFromUtf8, align 8
  %801 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %802 = call ptr @make_candy_function(ptr @Builtins__textGetRange, ptr %801, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %802, ptr @fun_Builtins__textGetRange, align 8
  %803 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %804 = call ptr @make_candy_function(ptr @Builtins__textIsEmpty, ptr %803, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %804, ptr @fun_Builtins__textIsEmpty, align 8
  %805 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %806 = call ptr @make_candy_function(ptr @Builtins__textLength, ptr %805, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %806, ptr @fun_Builtins__textLength, align 8
  %807 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %808 = call ptr @make_candy_function(ptr @Builtins__textStartsWith, ptr %807, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %808, ptr @fun_Builtins__textStartsWith, align 8
  %809 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %810 = call ptr @make_candy_function(ptr @Builtins__textTrimEnd, ptr %809, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %810, ptr @fun_Builtins__textTrimEnd, align 8
  %811 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %812 = call ptr @make_candy_function(ptr @Builtins__textTrimStart, ptr %811, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %812, ptr @fun_Builtins__textTrimStart, align 8
  %813 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %814 = call ptr @make_candy_function(ptr @Builtins__toDebugText, ptr %813, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %814, ptr @fun_Builtins__toDebugText, align 8
  %815 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %816 = call ptr @make_candy_function(ptr @Builtins__typeOf, ptr %815, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %816, ptr @fun_Builtins__typeOf, align 8
  %817 = alloca ptr, i64 45, align 8
  %818 = alloca ptr, i64 45, align 8
  %819 = load ptr, ptr @tag_ListRemoveAt, align 8
  %820 = load ptr, ptr @fun_Builtins__listRemoveAt, align 8
  %821 = getelementptr ptr, ptr %817, i64 0
  store ptr %819, ptr %821, align 8
  %822 = getelementptr ptr, ptr %818, i64 0
  store ptr %820, ptr %822, align 8
  %823 = load ptr, ptr @tag_IfElse, align 8
  %824 = load ptr, ptr @fun_Builtins__ifElse, align 8
  %825 = getelementptr ptr, ptr %817, i64 1
  store ptr %823, ptr %825, align 8
  %826 = getelementptr ptr, ptr %818, i64 1
  store ptr %824, ptr %826, align 8
  %827 = load ptr, ptr @tag_StructHasKey, align 8
  %828 = load ptr, ptr @fun_Builtins__structHasKey, align 8
  %829 = getelementptr ptr, ptr %817, i64 2
  store ptr %827, ptr %829, align 8
  %830 = getelementptr ptr, ptr %818, i64 2
  store ptr %828, ptr %830, align 8
  %831 = load ptr, ptr @tag_IntBitLength, align 8
  %832 = load ptr, ptr @fun_Builtins__intBitLength, align 8
  %833 = getelementptr ptr, ptr %817, i64 3
  store ptr %831, ptr %833, align 8
  %834 = getelementptr ptr, ptr %818, i64 3
  store ptr %832, ptr %834, align 8
  %835 = load ptr, ptr @tag_Print, align 8
  %836 = load ptr, ptr @fun_Builtins__print, align 8
  %837 = getelementptr ptr, ptr %817, i64 4
  store ptr %835, ptr %837, align 8
  %838 = getelementptr ptr, ptr %818, i64 4
  store ptr %836, ptr %838, align 8
  %839 = load ptr, ptr @tag_TextStartsWith, align 8
  %840 = load ptr, ptr @fun_Builtins__textStartsWith, align 8
  %841 = getelementptr ptr, ptr %817, i64 5
  store ptr %839, ptr %841, align 8
  %842 = getelementptr ptr, ptr %818, i64 5
  store ptr %840, ptr %842, align 8
  %843 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %844 = load ptr, ptr @fun_Builtins__intBitwiseXor, align 8
  %845 = getelementptr ptr, ptr %817, i64 6
  store ptr %843, ptr %845, align 8
  %846 = getelementptr ptr, ptr %818, i64 6
  store ptr %844, ptr %846, align 8
  %847 = load ptr, ptr @tag_TextIsEmpty, align 8
  %848 = load ptr, ptr @fun_Builtins__textIsEmpty, align 8
  %849 = getelementptr ptr, ptr %817, i64 7
  store ptr %847, ptr %849, align 8
  %850 = getelementptr ptr, ptr %818, i64 7
  store ptr %848, ptr %850, align 8
  %851 = load ptr, ptr @tag_IntAdd, align 8
  %852 = load ptr, ptr @fun_Builtins__intAdd, align 8
  %853 = getelementptr ptr, ptr %817, i64 8
  store ptr %851, ptr %853, align 8
  %854 = getelementptr ptr, ptr %818, i64 8
  store ptr %852, ptr %854, align 8
  %855 = load ptr, ptr @tag_TextLength, align 8
  %856 = load ptr, ptr @fun_Builtins__textLength, align 8
  %857 = getelementptr ptr, ptr %817, i64 9
  store ptr %855, ptr %857, align 8
  %858 = getelementptr ptr, ptr %818, i64 9
  store ptr %856, ptr %858, align 8
  %859 = load ptr, ptr @tag_TagWithoutValue, align 8
  %860 = load ptr, ptr @fun_Builtins__tagWithoutValue, align 8
  %861 = getelementptr ptr, ptr %817, i64 10
  store ptr %859, ptr %861, align 8
  %862 = getelementptr ptr, ptr %818, i64 10
  store ptr %860, ptr %862, align 8
  %863 = load ptr, ptr @tag_TextCharacters, align 8
  %864 = load ptr, ptr @fun_Builtins__textCharacters, align 8
  %865 = getelementptr ptr, ptr %817, i64 11
  store ptr %863, ptr %865, align 8
  %866 = getelementptr ptr, ptr %818, i64 11
  store ptr %864, ptr %866, align 8
  %867 = load ptr, ptr @tag_TextEndsWith, align 8
  %868 = load ptr, ptr @fun_Builtins__textEndsWith, align 8
  %869 = getelementptr ptr, ptr %817, i64 12
  store ptr %867, ptr %869, align 8
  %870 = getelementptr ptr, ptr %818, i64 12
  store ptr %868, ptr %870, align 8
  %871 = load ptr, ptr @tag_IntModulo, align 8
  %872 = load ptr, ptr @fun_Builtins__intModulo, align 8
  %873 = getelementptr ptr, ptr %817, i64 13
  store ptr %871, ptr %873, align 8
  %874 = getelementptr ptr, ptr %818, i64 13
  store ptr %872, ptr %874, align 8
  %875 = load ptr, ptr @tag_ListInsert, align 8
  %876 = load ptr, ptr @fun_Builtins__listInsert, align 8
  %877 = getelementptr ptr, ptr %817, i64 14
  store ptr %875, ptr %877, align 8
  %878 = getelementptr ptr, ptr %818, i64 14
  store ptr %876, ptr %878, align 8
  %879 = load ptr, ptr @tag_StructGet, align 8
  %880 = load ptr, ptr @fun_Builtins__structGet, align 8
  %881 = getelementptr ptr, ptr %817, i64 15
  store ptr %879, ptr %881, align 8
  %882 = getelementptr ptr, ptr %818, i64 15
  store ptr %880, ptr %882, align 8
  %883 = load ptr, ptr @tag_ListGet, align 8
  %884 = load ptr, ptr @fun_Builtins__listGet, align 8
  %885 = getelementptr ptr, ptr %817, i64 16
  store ptr %883, ptr %885, align 8
  %886 = getelementptr ptr, ptr %818, i64 16
  store ptr %884, ptr %886, align 8
  %887 = load ptr, ptr @tag_TextConcatenate, align 8
  %888 = load ptr, ptr @fun_Builtins__textConcatenate, align 8
  %889 = getelementptr ptr, ptr %817, i64 17
  store ptr %887, ptr %889, align 8
  %890 = getelementptr ptr, ptr %818, i64 17
  store ptr %888, ptr %890, align 8
  %891 = load ptr, ptr @tag_IntShiftRight, align 8
  %892 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  %893 = getelementptr ptr, ptr %817, i64 18
  store ptr %891, ptr %893, align 8
  %894 = getelementptr ptr, ptr %818, i64 18
  store ptr %892, ptr %894, align 8
  %895 = load ptr, ptr @tag_TextTrimStart, align 8
  %896 = load ptr, ptr @fun_Builtins__textTrimStart, align 8
  %897 = getelementptr ptr, ptr %817, i64 19
  store ptr %895, ptr %897, align 8
  %898 = getelementptr ptr, ptr %818, i64 19
  store ptr %896, ptr %898, align 8
  %899 = load ptr, ptr @tag_TextTrimEnd, align 8
  %900 = load ptr, ptr @fun_Builtins__textTrimEnd, align 8
  %901 = getelementptr ptr, ptr %817, i64 20
  store ptr %899, ptr %901, align 8
  %902 = getelementptr ptr, ptr %818, i64 20
  store ptr %900, ptr %902, align 8
  %903 = load ptr, ptr @tag_IntShiftLeft, align 8
  %904 = load ptr, ptr @fun_Builtins__intShiftLeft, align 8
  %905 = getelementptr ptr, ptr %817, i64 21
  store ptr %903, ptr %905, align 8
  %906 = getelementptr ptr, ptr %818, i64 21
  store ptr %904, ptr %906, align 8
  %907 = load ptr, ptr @tag_ListLength, align 8
  %908 = load ptr, ptr @fun_Builtins__listLength, align 8
  %909 = getelementptr ptr, ptr %817, i64 22
  store ptr %907, ptr %909, align 8
  %910 = getelementptr ptr, ptr %818, i64 22
  store ptr %908, ptr %910, align 8
  %911 = load ptr, ptr @tag_StructGetKeys, align 8
  %912 = load ptr, ptr @fun_Builtins__structGetKeys, align 8
  %913 = getelementptr ptr, ptr %817, i64 23
  store ptr %911, ptr %913, align 8
  %914 = getelementptr ptr, ptr %818, i64 23
  store ptr %912, ptr %914, align 8
  %915 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %916 = load ptr, ptr @fun_Builtins__intBitwiseAnd, align 8
  %917 = getelementptr ptr, ptr %817, i64 24
  store ptr %915, ptr %917, align 8
  %918 = getelementptr ptr, ptr %818, i64 24
  store ptr %916, ptr %918, align 8
  %919 = load ptr, ptr @tag_IntSubtract, align 8
  %920 = load ptr, ptr @fun_Builtins__intSubtract, align 8
  %921 = getelementptr ptr, ptr %817, i64 25
  store ptr %919, ptr %921, align 8
  %922 = getelementptr ptr, ptr %818, i64 25
  store ptr %920, ptr %922, align 8
  %923 = load ptr, ptr @tag_TextFromUtf8, align 8
  %924 = load ptr, ptr @fun_Builtins__textFromUtf8, align 8
  %925 = getelementptr ptr, ptr %817, i64 26
  store ptr %923, ptr %925, align 8
  %926 = getelementptr ptr, ptr %818, i64 26
  store ptr %924, ptr %926, align 8
  %927 = load ptr, ptr @tag_ListReplace, align 8
  %928 = load ptr, ptr @fun_Builtins__listReplace, align 8
  %929 = getelementptr ptr, ptr %817, i64 27
  store ptr %927, ptr %929, align 8
  %930 = getelementptr ptr, ptr %818, i64 27
  store ptr %928, ptr %930, align 8
  %931 = load ptr, ptr @tag_GetArgumentCount, align 8
  %932 = load ptr, ptr @fun_Builtins__getArgumentCount, align 8
  %933 = getelementptr ptr, ptr %817, i64 28
  store ptr %931, ptr %933, align 8
  %934 = getelementptr ptr, ptr %818, i64 28
  store ptr %932, ptr %934, align 8
  %935 = load ptr, ptr @tag_IntRemainder, align 8
  %936 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  %937 = getelementptr ptr, ptr %817, i64 29
  store ptr %935, ptr %937, align 8
  %938 = getelementptr ptr, ptr %818, i64 29
  store ptr %936, ptr %938, align 8
  %939 = load ptr, ptr @tag_ToDebugText, align 8
  %940 = load ptr, ptr @fun_Builtins__toDebugText, align 8
  %941 = getelementptr ptr, ptr %817, i64 30
  store ptr %939, ptr %941, align 8
  %942 = getelementptr ptr, ptr %818, i64 30
  store ptr %940, ptr %942, align 8
  %943 = load ptr, ptr @tag_ListFilled, align 8
  %944 = load ptr, ptr @fun_Builtins__listFilled, align 8
  %945 = getelementptr ptr, ptr %817, i64 31
  store ptr %943, ptr %945, align 8
  %946 = getelementptr ptr, ptr %818, i64 31
  store ptr %944, ptr %946, align 8
  %947 = load ptr, ptr @tag_FunctionRun, align 8
  %948 = load ptr, ptr @fun_Builtins__functionRun, align 8
  %949 = getelementptr ptr, ptr %817, i64 32
  store ptr %947, ptr %949, align 8
  %950 = getelementptr ptr, ptr %818, i64 32
  store ptr %948, ptr %950, align 8
  %951 = load ptr, ptr @tag_IntParse, align 8
  %952 = load ptr, ptr @fun_Builtins__intParse, align 8
  %953 = getelementptr ptr, ptr %817, i64 33
  store ptr %951, ptr %953, align 8
  %954 = getelementptr ptr, ptr %818, i64 33
  store ptr %952, ptr %954, align 8
  %955 = load ptr, ptr @tag_TypeOf, align 8
  %956 = load ptr, ptr @fun_Builtins__typeOf, align 8
  %957 = getelementptr ptr, ptr %817, i64 34
  store ptr %955, ptr %957, align 8
  %958 = getelementptr ptr, ptr %818, i64 34
  store ptr %956, ptr %958, align 8
  %959 = load ptr, ptr @tag_TextContains, align 8
  %960 = load ptr, ptr @fun_Builtins__textContains, align 8
  %961 = getelementptr ptr, ptr %817, i64 35
  store ptr %959, ptr %961, align 8
  %962 = getelementptr ptr, ptr %818, i64 35
  store ptr %960, ptr %962, align 8
  %963 = load ptr, ptr @tag_TagHasValue, align 8
  %964 = load ptr, ptr @fun_Builtins__tagHasValue, align 8
  %965 = getelementptr ptr, ptr %817, i64 36
  store ptr %963, ptr %965, align 8
  %966 = getelementptr ptr, ptr %818, i64 36
  store ptr %964, ptr %966, align 8
  %967 = load ptr, ptr @tag_Equals, align 8
  %968 = load ptr, ptr @fun_Builtins__equals, align 8
  %969 = getelementptr ptr, ptr %817, i64 37
  store ptr %967, ptr %969, align 8
  %970 = getelementptr ptr, ptr %818, i64 37
  store ptr %968, ptr %970, align 8
  %971 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %972 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  %973 = getelementptr ptr, ptr %817, i64 38
  store ptr %971, ptr %973, align 8
  %974 = getelementptr ptr, ptr %818, i64 38
  store ptr %972, ptr %974, align 8
  %975 = load ptr, ptr @tag_TextGetRange, align 8
  %976 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  %977 = getelementptr ptr, ptr %817, i64 39
  store ptr %975, ptr %977, align 8
  %978 = getelementptr ptr, ptr %818, i64 39
  store ptr %976, ptr %978, align 8
  %979 = load ptr, ptr @tag_IntMultiply, align 8
  %980 = load ptr, ptr @fun_Builtins__intMultiply, align 8
  %981 = getelementptr ptr, ptr %817, i64 40
  store ptr %979, ptr %981, align 8
  %982 = getelementptr ptr, ptr %818, i64 40
  store ptr %980, ptr %982, align 8
  %983 = load ptr, ptr @tag_IntCompareTo, align 8
  %984 = load ptr, ptr @fun_Builtins__intCompareTo, align 8
  %985 = getelementptr ptr, ptr %817, i64 41
  store ptr %983, ptr %985, align 8
  %986 = getelementptr ptr, ptr %818, i64 41
  store ptr %984, ptr %986, align 8
  %987 = load ptr, ptr @tag_TagGetValue, align 8
  %988 = load ptr, ptr @fun_Builtins__tagGetValue, align 8
  %989 = getelementptr ptr, ptr %817, i64 42
  store ptr %987, ptr %989, align 8
  %990 = getelementptr ptr, ptr %818, i64 42
  store ptr %988, ptr %990, align 8
  %991 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %992 = load ptr, ptr @fun_Builtins__intBitwiseOr, align 8
  %993 = getelementptr ptr, ptr %817, i64 43
  store ptr %991, ptr %993, align 8
  %994 = getelementptr ptr, ptr %818, i64 43
  store ptr %992, ptr %994, align 8
  %995 = getelementptr ptr, ptr %817, i64 44
  store ptr null, ptr %995, align 8
  %996 = getelementptr ptr, ptr %818, i64 44
  store ptr null, ptr %996, align 8
  %997 = call ptr @make_candy_struct(ptr %817, ptr %818)
  %998 = load ptr, ptr @tag_Equals, align 8
  %999 = call ptr @Builtins__structGet(ptr %997, ptr %998)
  %1000 = load ptr, ptr @tag_Equals, align 8
  %1001 = call ptr @Builtins__structGet(ptr %997, ptr %1000)
  %1002 = load ptr, ptr @tag_Equals, align 8
  %1003 = call ptr @Builtins__structGet(ptr %997, ptr %1002)
  %1004 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:type:28\00", ptr %1004, align 1
  %1005 = call ptr @make_candy_text(ptr %1004)
  store ptr %1005, ptr @"Core:type:28", align 8
  %1006 = load ptr, ptr @tag_TypeOf, align 8
  %1007 = call ptr @Builtins__structGet(ptr %997, ptr %1006)
  %1008 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:2\00", ptr %1008, align 1
  %1009 = call ptr @make_candy_text(ptr %1008)
  store ptr %1009, ptr @"Core:type:is:2", align 8
  %1010 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:5\00", ptr %1010, align 1
  %1011 = call ptr @make_candy_text(ptr %1010)
  store ptr %1011, ptr @"Core:type:is:5", align 8
  %1012 = alloca i8, i64 45, align 1
  store [45 x i8] c"`typeOf type | equals Tag` was not satisfied\00", ptr %1012, align 1
  %1013 = call ptr @make_candy_text(ptr %1012)
  store ptr %1013, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %1014 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:7\00", ptr %1014, align 1
  %1015 = call ptr @make_candy_text(ptr %1014)
  store ptr %1015, ptr @"Core:type:is:7", align 8
  %1016 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:type:is:11\00", ptr %1016, align 1
  %1017 = call ptr @make_candy_text(ptr %1016)
  store ptr %1017, ptr @"Core:type:is:11", align 8
  %1018 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:type:is:13\00", ptr %1018, align 1
  %1019 = call ptr @make_candy_text(ptr %1018)
  store ptr %1019, ptr @"Core:type:is:13", align 8
  %1020 = alloca i8, i64 3, align 1
  store [3 x i8] c"Is\00", ptr %1020, align 1
  %1021 = call ptr @make_candy_tag(ptr %1020, ptr null)
  store ptr %1021, ptr @tag_Is, align 8
  %1022 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:function:is:7\00", ptr %1022, align 1
  %1023 = call ptr @make_candy_text(ptr %1022)
  store ptr %1023, ptr @"Core:function:is:7", align 8
  %1024 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is:10\00", ptr %1024, align 1
  %1025 = call ptr @make_candy_text(ptr %1024)
  store ptr %1025, ptr @"Core:function:is:10", align 8
  %1026 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:function:38\00", ptr %1026, align 1
  %1027 = call ptr @make_candy_text(ptr %1026)
  store ptr %1027, ptr @"Core:function:38", align 8
  %1028 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1029 = call ptr @Builtins__structGet(ptr %997, ptr %1028)
  %1030 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is0:7\00", ptr %1030, align 1
  %1031 = call ptr @make_candy_text(ptr %1030)
  store ptr %1031, ptr @"Core:function:is0:7", align 8
  %1032 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %1032, align 1
  %1033 = call ptr @make_candy_text(ptr %1032)
  store ptr %1033, ptr @"Core:function:is0:11:3", align 8
  %1034 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:5\00", ptr %1034, align 1
  %1035 = call ptr @make_candy_text(ptr %1034)
  store ptr %1035, ptr @"Core:function:is0:11:5", align 8
  %1036 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %1036, align 1
  %1037 = call ptr @make_candy_text(ptr %1036)
  store ptr %1037, ptr @"Core:function:is0:13", align 8
  %1038 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is1:7\00", ptr %1038, align 1
  %1039 = call ptr @make_candy_text(ptr %1038)
  store ptr %1039, ptr @"Core:function:is1:7", align 8
  %1040 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %1040, align 1
  %1041 = call ptr @make_candy_text(ptr %1040)
  store ptr %1041, ptr @"Core:function:is1:11:3", align 8
  %1042 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:5\00", ptr %1042, align 1
  %1043 = call ptr @make_candy_text(ptr %1042)
  store ptr %1043, ptr @"Core:function:is1:11:5", align 8
  %1044 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %1044, align 1
  %1045 = call ptr @make_candy_text(ptr %1044)
  store ptr %1045, ptr @"Core:function:is1:13", align 8
  %1046 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is2:7\00", ptr %1046, align 1
  %1047 = call ptr @make_candy_text(ptr %1046)
  store ptr %1047, ptr @"Core:function:is2:7", align 8
  %1048 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %1048, align 1
  %1049 = call ptr @make_candy_text(ptr %1048)
  store ptr %1049, ptr @"Core:function:is2:11:3", align 8
  %1050 = call ptr @make_candy_int(i64 2)
  store ptr %1050, ptr @num_2, align 8
  %1051 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:5\00", ptr %1051, align 1
  %1052 = call ptr @make_candy_text(ptr %1051)
  store ptr %1052, ptr @"Core:function:is2:11:5", align 8
  %1053 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %1053, align 1
  %1054 = call ptr @make_candy_text(ptr %1053)
  store ptr %1054, ptr @"Core:function:is2:13", align 8
  %1055 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is3:7\00", ptr %1055, align 1
  %1056 = call ptr @make_candy_text(ptr %1055)
  store ptr %1056, ptr @"Core:function:is3:7", align 8
  %1057 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is3:11:3\00", ptr %1057, align 1
  %1058 = call ptr @make_candy_text(ptr %1057)
  store ptr %1058, ptr @"Core:function:is3:11:3", align 8
  %1059 = call ptr @make_candy_int(i64 3)
  store ptr %1059, ptr @num_3, align 8
  %1060 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is3:11:5\00", ptr %1060, align 1
  %1061 = call ptr @make_candy_text(ptr %1060)
  store ptr %1061, ptr @"Core:function:is3:11:5", align 8
  %1062 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is3:13\00", ptr %1062, align 1
  %1063 = call ptr @make_candy_text(ptr %1062)
  store ptr %1063, ptr @"Core:function:is3:13", align 8
  %1064 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is4:7\00", ptr %1064, align 1
  %1065 = call ptr @make_candy_text(ptr %1064)
  store ptr %1065, ptr @"Core:function:is4:7", align 8
  %1066 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is4:11:3\00", ptr %1066, align 1
  %1067 = call ptr @make_candy_text(ptr %1066)
  store ptr %1067, ptr @"Core:function:is4:11:3", align 8
  %1068 = call ptr @make_candy_int(i64 4)
  store ptr %1068, ptr @num_4, align 8
  %1069 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is4:11:5\00", ptr %1069, align 1
  %1070 = call ptr @make_candy_text(ptr %1069)
  store ptr %1070, ptr @"Core:function:is4:11:5", align 8
  %1071 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is4:13\00", ptr %1071, align 1
  %1072 = call ptr @make_candy_text(ptr %1071)
  store ptr %1072, ptr @"Core:function:is4:13", align 8
  %1073 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is5:7\00", ptr %1073, align 1
  %1074 = call ptr @make_candy_text(ptr %1073)
  store ptr %1074, ptr @"Core:function:is5:7", align 8
  %1075 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is5:11:3\00", ptr %1075, align 1
  %1076 = call ptr @make_candy_text(ptr %1075)
  store ptr %1076, ptr @"Core:function:is5:11:3", align 8
  %1077 = call ptr @make_candy_int(i64 5)
  store ptr %1077, ptr @num_5, align 8
  %1078 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is5:11:5\00", ptr %1078, align 1
  %1079 = call ptr @make_candy_text(ptr %1078)
  store ptr %1079, ptr @"Core:function:is5:11:5", align 8
  %1080 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is5:13\00", ptr %1080, align 1
  %1081 = call ptr @make_candy_text(ptr %1080)
  store ptr %1081, ptr @"Core:function:is5:13", align 8
  %1082 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %1082, align 1
  %1083 = call ptr @make_candy_text(ptr %1082)
  store ptr %1083, ptr @"text_`is0 body` was not satisfied", align 8
  %1084 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %1084, align 1
  %1085 = call ptr @make_candy_text(ptr %1084)
  store ptr %1085, ptr @"Core:function:run:4", align 8
  %1086 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:12\00", ptr %1086, align 1
  %1087 = call ptr @make_candy_text(ptr %1086)
  store ptr %1087, ptr @"Core:function:run:12", align 8
  %1088 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %1088, align 1
  %1089 = call ptr @make_candy_text(ptr %1088)
  store ptr %1089, ptr @"Core:function:run:14", align 8
  %1090 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:function:doNotRun:4\00", ptr %1090, align 1
  %1091 = call ptr @make_candy_text(ptr %1090)
  store ptr %1091, ptr @"Core:function:doNotRun:4", align 8
  %1092 = alloca i8, i64 9, align 1
  store [9 x i8] c"DoNotRun\00", ptr %1092, align 1
  %1093 = call ptr @make_candy_tag(ptr %1092, ptr null)
  store ptr %1093, ptr @tag_DoNotRun, align 8
  %1094 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is4\00", ptr %1094, align 1
  %1095 = call ptr @make_candy_tag(ptr %1094, ptr null)
  store ptr %1095, ptr @tag_Is4, align 8
  %1096 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is1\00", ptr %1096, align 1
  %1097 = call ptr @make_candy_tag(ptr %1096, ptr null)
  store ptr %1097, ptr @tag_Is1, align 8
  %1098 = alloca i8, i64 4, align 1
  store [4 x i8] c"Run\00", ptr %1098, align 1
  %1099 = call ptr @make_candy_tag(ptr %1098, ptr null)
  store ptr %1099, ptr @tag_Run, align 8
  %1100 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is0\00", ptr %1100, align 1
  %1101 = call ptr @make_candy_tag(ptr %1100, ptr null)
  store ptr %1101, ptr @tag_Is0, align 8
  %1102 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is3\00", ptr %1102, align 1
  %1103 = call ptr @make_candy_tag(ptr %1102, ptr null)
  store ptr %1103, ptr @tag_Is3, align 8
  %1104 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is2\00", ptr %1104, align 1
  %1105 = call ptr @make_candy_tag(ptr %1104, ptr null)
  store ptr %1105, ptr @tag_Is2, align 8
  %1106 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is5\00", ptr %1106, align 1
  %1107 = call ptr @make_candy_tag(ptr %1106, ptr null)
  store ptr %1107, ptr @tag_Is5, align 8
  %1108 = load ptr, ptr @tag_Equals, align 8
  %1109 = call ptr @Builtins__structGet(ptr %997, ptr %1108)
  %1110 = load ptr, ptr @tag_TypeOf, align 8
  %1111 = call ptr @Builtins__structGet(ptr %997, ptr %1110)
  %1112 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %1112, align 1
  %1113 = call ptr @make_candy_text(ptr %1112)
  store ptr %1113, ptr @"Core:bool:is:1", align 8
  %1114 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1115 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %1114, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1115, ptr @fun_Core_bool_is, align 8
  %1116 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:2\00", ptr %1116, align 1
  %1117 = call ptr @make_candy_text(ptr %1116)
  store ptr %1117, ptr @"Core:bool:not:2", align 8
  %1118 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %1118, align 1
  %1119 = call ptr @make_candy_text(ptr %1118)
  store ptr %1119, ptr @"text_`is value` was not satisfied", align 8
  %1120 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %1120, align 1
  %1121 = call ptr @make_candy_text(ptr %1120)
  store ptr %1121, ptr @"Core:bool:not:4", align 8
  %1122 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %1122, align 1
  %1123 = call ptr @make_candy_text(ptr %1122)
  store ptr %1123, ptr @"Core:bool:not:6", align 8
  %1124 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1125 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %1124, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1125, ptr @fun_Core_bool_not, align 8
  %1126 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:2\00", ptr %1126, align 1
  %1127 = call ptr @make_candy_text(ptr %1126)
  store ptr %1127, ptr @"Core:bool:lazyAnd:2", align 8
  %1128 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %1128, align 1
  %1129 = call ptr @make_candy_text(ptr %1128)
  store ptr %1129, ptr @"text_`is a` was not satisfied", align 8
  %1130 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %1130, align 1
  %1131 = call ptr @make_candy_text(ptr %1130)
  store ptr %1131, ptr @"Core:bool:lazyAnd:4", align 8
  %1132 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:12\00", ptr %1132, align 1
  %1133 = call ptr @make_candy_text(ptr %1132)
  store ptr %1133, ptr @"Core:bool:lazyAnd:12", align 8
  %1134 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %1134, align 1
  %1135 = call ptr @make_candy_text(ptr %1134)
  store ptr %1135, ptr @"Core:bool:lazyAnd:14", align 8
  %1136 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %1136, align 1
  %1137 = call ptr @make_candy_text(ptr %1136)
  store ptr %1137, ptr @"text_`function.is0 b` was not satisfied", align 8
  %1138 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %1138, align 1
  %1139 = call ptr @make_candy_text(ptr %1138)
  store ptr %1139, ptr @"Core:bool:lazyAnd:16", align 8
  %1140 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:18\00", ptr %1140, align 1
  %1141 = call ptr @make_candy_text(ptr %1140)
  store ptr %1141, ptr @"Core:bool:lazyAnd:18", align 8
  %1142 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:8\00", ptr %1142, align 1
  %1143 = call ptr @make_candy_text(ptr %1142)
  store ptr %1143, ptr @"Core:bool:lazyAnd:18:8", align 8
  %1144 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:9\00", ptr %1144, align 1
  %1145 = call ptr @make_candy_text(ptr %1144)
  store ptr %1145, ptr @"Core:bool:lazyAnd:18:9", align 8
  %1146 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:13\00", ptr %1146, align 1
  %1147 = call ptr @make_candy_text(ptr %1146)
  store ptr %1147, ptr @"Core:bool:lazyAnd:18:13", align 8
  %1148 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %1148, align 1
  %1149 = call ptr @make_candy_text(ptr %1148)
  store ptr %1149, ptr @"text_`b` didn't return a bool.", align 8
  %1150 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:21\00", ptr %1150, align 1
  %1151 = call ptr @make_candy_text(ptr %1150)
  store ptr %1151, ptr @"Core:bool:lazyAnd:18:21", align 8
  %1152 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:2\00", ptr %1152, align 1
  %1153 = call ptr @make_candy_text(ptr %1152)
  store ptr %1153, ptr @"Core:bool:and:2", align 8
  %1154 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:4\00", ptr %1154, align 1
  %1155 = call ptr @make_candy_text(ptr %1154)
  store ptr %1155, ptr @"Core:bool:and:4", align 8
  %1156 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:7\00", ptr %1156, align 1
  %1157 = call ptr @make_candy_text(ptr %1156)
  store ptr %1157, ptr @"Core:bool:and:7", align 8
  %1158 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %1158, align 1
  %1159 = call ptr @make_candy_text(ptr %1158)
  store ptr %1159, ptr @"text_`is b` was not satisfied", align 8
  %1160 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:9\00", ptr %1160, align 1
  %1161 = call ptr @make_candy_text(ptr %1160)
  store ptr %1161, ptr @"Core:bool:and:9", align 8
  %1162 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:and:13\00", ptr %1162, align 1
  %1163 = call ptr @make_candy_text(ptr %1162)
  store ptr %1163, ptr @"Core:bool:and:13", align 8
  %1164 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:2\00", ptr %1164, align 1
  %1165 = call ptr @make_candy_text(ptr %1164)
  store ptr %1165, ptr @"Core:bool:lazyOr:2", align 8
  %1166 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %1166, align 1
  %1167 = call ptr @make_candy_text(ptr %1166)
  store ptr %1167, ptr @"Core:bool:lazyOr:4", align 8
  %1168 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:12\00", ptr %1168, align 1
  %1169 = call ptr @make_candy_text(ptr %1168)
  store ptr %1169, ptr @"Core:bool:lazyOr:12", align 8
  %1170 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %1170, align 1
  %1171 = call ptr @make_candy_text(ptr %1170)
  store ptr %1171, ptr @"Core:bool:lazyOr:14", align 8
  %1172 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %1172, align 1
  %1173 = call ptr @make_candy_text(ptr %1172)
  store ptr %1173, ptr @"Core:bool:lazyOr:16", align 8
  %1174 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:18\00", ptr %1174, align 1
  %1175 = call ptr @make_candy_text(ptr %1174)
  store ptr %1175, ptr @"Core:bool:lazyOr:18", align 8
  %1176 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:bool:lazyOr:18:9\00", ptr %1176, align 1
  %1177 = call ptr @make_candy_text(ptr %1176)
  store ptr %1177, ptr @"Core:bool:lazyOr:18:9", align 8
  %1178 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:10\00", ptr %1178, align 1
  %1179 = call ptr @make_candy_text(ptr %1178)
  store ptr %1179, ptr @"Core:bool:lazyOr:18:10", align 8
  %1180 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:14\00", ptr %1180, align 1
  %1181 = call ptr @make_candy_text(ptr %1180)
  store ptr %1181, ptr @"Core:bool:lazyOr:18:14", align 8
  %1182 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:22\00", ptr %1182, align 1
  %1183 = call ptr @make_candy_text(ptr %1182)
  store ptr %1183, ptr @"Core:bool:lazyOr:18:22", align 8
  %1184 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:2\00", ptr %1184, align 1
  %1185 = call ptr @make_candy_text(ptr %1184)
  store ptr %1185, ptr @"Core:bool:or:2", align 8
  %1186 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %1186, align 1
  %1187 = call ptr @make_candy_text(ptr %1186)
  store ptr %1187, ptr @"Core:bool:or:4", align 8
  %1188 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:7\00", ptr %1188, align 1
  %1189 = call ptr @make_candy_text(ptr %1188)
  store ptr %1189, ptr @"Core:bool:or:7", align 8
  %1190 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %1190, align 1
  %1191 = call ptr @make_candy_text(ptr %1190)
  store ptr %1191, ptr @"Core:bool:or:9", align 8
  %1192 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %1192, align 1
  %1193 = call ptr @make_candy_text(ptr %1192)
  store ptr %1193, ptr @"Core:bool:or:13", align 8
  %1194 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:2\00", ptr %1194, align 1
  %1195 = call ptr @make_candy_text(ptr %1194)
  store ptr %1195, ptr @"Core:bool:xor:2", align 8
  %1196 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:4\00", ptr %1196, align 1
  %1197 = call ptr @make_candy_text(ptr %1196)
  store ptr %1197, ptr @"Core:bool:xor:4", align 8
  %1198 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:7\00", ptr %1198, align 1
  %1199 = call ptr @make_candy_text(ptr %1198)
  store ptr %1199, ptr @"Core:bool:xor:7", align 8
  %1200 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:xor:9\00", ptr %1200, align 1
  %1201 = call ptr @make_candy_text(ptr %1200)
  store ptr %1201, ptr @"Core:bool:xor:9", align 8
  %1202 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:xor:14\00", ptr %1202, align 1
  %1203 = call ptr @make_candy_text(ptr %1202)
  store ptr %1203, ptr @"Core:bool:xor:14", align 8
  %1204 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:xor:15\00", ptr %1204, align 1
  %1205 = call ptr @make_candy_text(ptr %1204)
  store ptr %1205, ptr @"Core:bool:xor:15", align 8
  %1206 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:2\00", ptr %1206, align 1
  %1207 = call ptr @make_candy_text(ptr %1206)
  store ptr %1207, ptr @"Core:bool:implies:2", align 8
  %1208 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:4\00", ptr %1208, align 1
  %1209 = call ptr @make_candy_text(ptr %1208)
  store ptr %1209, ptr @"Core:bool:implies:4", align 8
  %1210 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:7\00", ptr %1210, align 1
  %1211 = call ptr @make_candy_text(ptr %1210)
  store ptr %1211, ptr @"Core:bool:implies:7", align 8
  %1212 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:9\00", ptr %1212, align 1
  %1213 = call ptr @make_candy_text(ptr %1212)
  store ptr %1213, ptr @"Core:bool:implies:9", align 8
  %1214 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:12\00", ptr %1214, align 1
  %1215 = call ptr @make_candy_text(ptr %1214)
  store ptr %1215, ptr @"Core:bool:implies:12", align 8
  %1216 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:15\00", ptr %1216, align 1
  %1217 = call ptr @make_candy_text(ptr %1216)
  store ptr %1217, ptr @"Core:bool:implies:15", align 8
  %1218 = alloca i8, i64 8, align 1
  store [8 x i8] c"LazyAnd\00", ptr %1218, align 1
  %1219 = call ptr @make_candy_tag(ptr %1218, ptr null)
  store ptr %1219, ptr @tag_LazyAnd, align 8
  %1220 = alloca i8, i64 4, align 1
  store [4 x i8] c"Not\00", ptr %1220, align 1
  %1221 = call ptr @make_candy_tag(ptr %1220, ptr null)
  store ptr %1221, ptr @tag_Not, align 8
  %1222 = alloca i8, i64 4, align 1
  store [4 x i8] c"Xor\00", ptr %1222, align 1
  %1223 = call ptr @make_candy_tag(ptr %1222, ptr null)
  store ptr %1223, ptr @tag_Xor, align 8
  %1224 = alloca i8, i64 8, align 1
  store [8 x i8] c"Implies\00", ptr %1224, align 1
  %1225 = call ptr @make_candy_tag(ptr %1224, ptr null)
  store ptr %1225, ptr @tag_Implies, align 8
  %1226 = alloca i8, i64 7, align 1
  store [7 x i8] c"LazyOr\00", ptr %1226, align 1
  %1227 = call ptr @make_candy_tag(ptr %1226, ptr null)
  store ptr %1227, ptr @tag_LazyOr, align 8
  %1228 = alloca i8, i64 4, align 1
  store [4 x i8] c"And\00", ptr %1228, align 1
  %1229 = call ptr @make_candy_tag(ptr %1228, ptr null)
  store ptr %1229, ptr @tag_And, align 8
  %1230 = alloca i8, i64 3, align 1
  store [3 x i8] c"Or\00", ptr %1230, align 1
  %1231 = call ptr @make_candy_tag(ptr %1230, ptr null)
  store ptr %1231, ptr @tag_Or, align 8
  %1232 = load ptr, ptr @tag_Equals, align 8
  %1233 = call ptr @Builtins__structGet(ptr %997, ptr %1232)
  %1234 = load ptr, ptr @tag_Equals, align 8
  %1235 = call ptr @Builtins__structGet(ptr %997, ptr %1234)
  %1236 = load ptr, ptr @tag_Equals, align 8
  %1237 = call ptr @Builtins__structGet(ptr %997, ptr %1236)
  %1238 = load ptr, ptr @tag_TypeOf, align 8
  %1239 = call ptr @Builtins__structGet(ptr %997, ptr %1238)
  %1240 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1241 = call ptr @Builtins__structGet(ptr %997, ptr %1240)
  %1242 = load ptr, ptr @tag_Equals, align 8
  %1243 = call ptr @Builtins__structGet(ptr %997, ptr %1242)
  %1244 = load ptr, ptr @tag_TypeOf, align 8
  %1245 = call ptr @Builtins__structGet(ptr %997, ptr %1244)
  %1246 = load ptr, ptr @tag_Equals, align 8
  %1247 = call ptr @Builtins__structGet(ptr %997, ptr %1246)
  %1248 = load ptr, ptr @tag_Equals, align 8
  %1249 = call ptr @Builtins__structGet(ptr %997, ptr %1248)
  %1250 = load ptr, ptr @tag_Equals, align 8
  %1251 = call ptr @Builtins__structGet(ptr %997, ptr %1250)
  %1252 = load ptr, ptr @tag_TypeOf, align 8
  %1253 = call ptr @Builtins__structGet(ptr %997, ptr %1252)
  %1254 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1255 = call ptr @Builtins__structGet(ptr %997, ptr %1254)
  %1256 = load ptr, ptr @tag_Equals, align 8
  %1257 = call ptr @Builtins__structGet(ptr %997, ptr %1256)
  %1258 = load ptr, ptr @tag_TypeOf, align 8
  %1259 = call ptr @Builtins__structGet(ptr %997, ptr %1258)
  %1260 = load ptr, ptr @tag_Equals, align 8
  %1261 = call ptr @Builtins__structGet(ptr %997, ptr %1260)
  %1262 = load ptr, ptr @tag_Equals, align 8
  %1263 = call ptr @Builtins__structGet(ptr %997, ptr %1262)
  %1264 = load ptr, ptr @tag_Equals, align 8
  %1265 = call ptr @Builtins__structGet(ptr %997, ptr %1264)
  %1266 = load ptr, ptr @tag_TypeOf, align 8
  %1267 = call ptr @Builtins__structGet(ptr %997, ptr %1266)
  %1268 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1269 = call ptr @Builtins__structGet(ptr %997, ptr %1268)
  %1270 = load ptr, ptr @tag_Equals, align 8
  %1271 = call ptr @Builtins__structGet(ptr %997, ptr %1270)
  %1272 = load ptr, ptr @tag_TypeOf, align 8
  %1273 = call ptr @Builtins__structGet(ptr %997, ptr %1272)
  %1274 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:controlFlow:59\00", ptr %1274, align 1
  %1275 = call ptr @make_candy_text(ptr %1274)
  store ptr %1275, ptr @"Core:controlFlow:59", align 8
  %1276 = load ptr, ptr @tag_IfElse, align 8
  %1277 = call ptr @Builtins__structGet(ptr %997, ptr %1276)
  %1278 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %1278, align 1
  %1279 = call ptr @make_candy_text(ptr %1278)
  store ptr %1279, ptr @"text_`bool.is condition` was not satisfied", align 8
  %1280 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:7\00", ptr %1280, align 1
  %1281 = call ptr @make_candy_text(ptr %1280)
  store ptr %1281, ptr @"Core:check:check:7", align 8
  %1282 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:9\00", ptr %1282, align 1
  %1283 = call ptr @make_candy_text(ptr %1282)
  store ptr %1283, ptr @"Core:check:check:9", align 8
  %1284 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:11\00", ptr %1284, align 1
  %1285 = call ptr @make_candy_text(ptr %1284)
  store ptr %1285, ptr @"Core:check:check:11", align 8
  %1286 = alloca i8, i64 24, align 1
  store [24 x i8] c"A check didn't succeed.\00", ptr %1286, align 1
  %1287 = call ptr @make_candy_text(ptr %1286)
  store ptr %1287, ptr @"text_A check didn't succeed.", align 8
  %1288 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:20\00", ptr %1288, align 1
  %1289 = call ptr @make_candy_text(ptr %1288)
  store ptr %1289, ptr @"Core:check:check:20", align 8
  %1290 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1291 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else.106", ptr %1290, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1291, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %1292 = load ptr, ptr @tag_Equals, align 8
  %1293 = call ptr @Builtins__structGet(ptr %997, ptr %1292)
  %1294 = load ptr, ptr @tag_Equals, align 8
  %1295 = call ptr @Builtins__structGet(ptr %997, ptr %1294)
  %1296 = load ptr, ptr @tag_Equals, align 8
  %1297 = call ptr @Builtins__structGet(ptr %997, ptr %1296)
  %1298 = load ptr, ptr @tag_TypeOf, align 8
  %1299 = call ptr @Builtins__structGet(ptr %997, ptr %1298)
  %1300 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1301 = call ptr @Builtins__structGet(ptr %997, ptr %1300)
  %1302 = load ptr, ptr @tag_Equals, align 8
  %1303 = call ptr @Builtins__structGet(ptr %997, ptr %1302)
  %1304 = load ptr, ptr @tag_TypeOf, align 8
  %1305 = call ptr @Builtins__structGet(ptr %997, ptr %1304)
  %1306 = load ptr, ptr @tag_Equals, align 8
  %1307 = call ptr @Builtins__structGet(ptr %997, ptr %1306)
  %1308 = load ptr, ptr @tag_Equals, align 8
  %1309 = call ptr @Builtins__structGet(ptr %997, ptr %1308)
  %1310 = load ptr, ptr @tag_Equals, align 8
  %1311 = call ptr @Builtins__structGet(ptr %997, ptr %1310)
  %1312 = load ptr, ptr @tag_TypeOf, align 8
  %1313 = call ptr @Builtins__structGet(ptr %997, ptr %1312)
  %1314 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1315 = call ptr @Builtins__structGet(ptr %997, ptr %1314)
  %1316 = load ptr, ptr @tag_Equals, align 8
  %1317 = call ptr @Builtins__structGet(ptr %997, ptr %1316)
  %1318 = load ptr, ptr @tag_TypeOf, align 8
  %1319 = call ptr @Builtins__structGet(ptr %997, ptr %1318)
  %1320 = load ptr, ptr @tag_IfElse, align 8
  %1321 = call ptr @Builtins__structGet(ptr %997, ptr %1320)
  %1322 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:7\00", ptr %1322, align 1
  %1323 = call ptr @make_candy_text(ptr %1322)
  store ptr %1323, ptr @"Core:controlFlow:recursive:7", align 8
  %1324 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:9\00", ptr %1324, align 1
  %1325 = call ptr @make_candy_text(ptr %1324)
  store ptr %1325, ptr @"Core:controlFlow:recursive:9", align 8
  %1326 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %1326, align 1
  %1327 = call ptr @make_candy_text(ptr %1326)
  store ptr %1327, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %1328 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:17\00", ptr %1328, align 1
  %1329 = call ptr @make_candy_text(ptr %1328)
  store ptr %1329, ptr @"Core:controlFlow:recursive:17", align 8
  %1330 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:18:0:3\00", ptr %1330, align 1
  %1331 = call ptr @make_candy_text(ptr %1330)
  store ptr %1331, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  %1332 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:18:5\00", ptr %1332, align 1
  %1333 = call ptr @make_candy_text(ptr %1332)
  store ptr %1333, ptr @"Core:controlFlow:recursive:18:5", align 8
  %1334 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:23\00", ptr %1334, align 1
  %1335 = call ptr @make_candy_text(ptr %1334)
  store ptr %1335, ptr @"Core:controlFlow:recursive:23", align 8
  %1336 = load ptr, ptr @tag_Equals, align 8
  %1337 = call ptr @Builtins__structGet(ptr %997, ptr %1336)
  %1338 = load ptr, ptr @tag_Equals, align 8
  %1339 = call ptr @Builtins__structGet(ptr %997, ptr %1338)
  %1340 = load ptr, ptr @tag_Equals, align 8
  %1341 = call ptr @Builtins__structGet(ptr %997, ptr %1340)
  %1342 = load ptr, ptr @tag_Equals, align 8
  %1343 = call ptr @Builtins__structGet(ptr %997, ptr %1342)
  %1344 = load ptr, ptr @tag_TypeOf, align 8
  %1345 = call ptr @Builtins__structGet(ptr %997, ptr %1344)
  %1346 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1347 = call ptr @Builtins__structGet(ptr %997, ptr %1346)
  %1348 = load ptr, ptr @tag_Equals, align 8
  %1349 = call ptr @Builtins__structGet(ptr %997, ptr %1348)
  %1350 = load ptr, ptr @tag_TypeOf, align 8
  %1351 = call ptr @Builtins__structGet(ptr %997, ptr %1350)
  %1352 = load ptr, ptr @tag_Equals, align 8
  %1353 = call ptr @Builtins__structGet(ptr %997, ptr %1352)
  %1354 = load ptr, ptr @tag_Equals, align 8
  %1355 = call ptr @Builtins__structGet(ptr %997, ptr %1354)
  %1356 = load ptr, ptr @tag_Equals, align 8
  %1357 = call ptr @Builtins__structGet(ptr %997, ptr %1356)
  %1358 = load ptr, ptr @tag_TypeOf, align 8
  %1359 = call ptr @Builtins__structGet(ptr %997, ptr %1358)
  %1360 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1361 = call ptr @Builtins__structGet(ptr %997, ptr %1360)
  %1362 = load ptr, ptr @tag_Equals, align 8
  %1363 = call ptr @Builtins__structGet(ptr %997, ptr %1362)
  %1364 = load ptr, ptr @tag_TypeOf, align 8
  %1365 = call ptr @Builtins__structGet(ptr %997, ptr %1364)
  %1366 = load ptr, ptr @tag_Equals, align 8
  %1367 = call ptr @Builtins__structGet(ptr %997, ptr %1366)
  %1368 = load ptr, ptr @tag_Equals, align 8
  %1369 = call ptr @Builtins__structGet(ptr %997, ptr %1368)
  %1370 = load ptr, ptr @tag_Equals, align 8
  %1371 = call ptr @Builtins__structGet(ptr %997, ptr %1370)
  %1372 = load ptr, ptr @tag_TypeOf, align 8
  %1373 = call ptr @Builtins__structGet(ptr %997, ptr %1372)
  %1374 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1375 = call ptr @Builtins__structGet(ptr %997, ptr %1374)
  %1376 = load ptr, ptr @tag_Equals, align 8
  %1377 = call ptr @Builtins__structGet(ptr %997, ptr %1376)
  %1378 = load ptr, ptr @tag_TypeOf, align 8
  %1379 = call ptr @Builtins__structGet(ptr %997, ptr %1378)
  %1380 = load ptr, ptr @tag_Equals, align 8
  %1381 = call ptr @Builtins__structGet(ptr %997, ptr %1380)
  %1382 = load ptr, ptr @tag_Equals, align 8
  %1383 = call ptr @Builtins__structGet(ptr %997, ptr %1382)
  %1384 = load ptr, ptr @tag_Equals, align 8
  %1385 = call ptr @Builtins__structGet(ptr %997, ptr %1384)
  %1386 = load ptr, ptr @tag_TypeOf, align 8
  %1387 = call ptr @Builtins__structGet(ptr %997, ptr %1386)
  %1388 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1389 = call ptr @Builtins__structGet(ptr %997, ptr %1388)
  %1390 = load ptr, ptr @tag_Equals, align 8
  %1391 = call ptr @Builtins__structGet(ptr %997, ptr %1390)
  %1392 = load ptr, ptr @tag_TypeOf, align 8
  %1393 = call ptr @Builtins__structGet(ptr %997, ptr %1392)
  %1394 = load ptr, ptr @tag_IfElse, align 8
  %1395 = call ptr @Builtins__structGet(ptr %997, ptr %1394)
  %1396 = load ptr, ptr @tag_Equals, align 8
  %1397 = call ptr @Builtins__structGet(ptr %997, ptr %1396)
  %1398 = load ptr, ptr @tag_Equals, align 8
  %1399 = call ptr @Builtins__structGet(ptr %997, ptr %1398)
  %1400 = load ptr, ptr @tag_Equals, align 8
  %1401 = call ptr @Builtins__structGet(ptr %997, ptr %1400)
  %1402 = load ptr, ptr @tag_TypeOf, align 8
  %1403 = call ptr @Builtins__structGet(ptr %997, ptr %1402)
  %1404 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1405 = call ptr @Builtins__structGet(ptr %997, ptr %1404)
  %1406 = load ptr, ptr @tag_Equals, align 8
  %1407 = call ptr @Builtins__structGet(ptr %997, ptr %1406)
  %1408 = load ptr, ptr @tag_TypeOf, align 8
  %1409 = call ptr @Builtins__structGet(ptr %997, ptr %1408)
  %1410 = load ptr, ptr @tag_Equals, align 8
  %1411 = call ptr @Builtins__structGet(ptr %997, ptr %1410)
  %1412 = load ptr, ptr @tag_Equals, align 8
  %1413 = call ptr @Builtins__structGet(ptr %997, ptr %1412)
  %1414 = load ptr, ptr @tag_Equals, align 8
  %1415 = call ptr @Builtins__structGet(ptr %997, ptr %1414)
  %1416 = load ptr, ptr @tag_TypeOf, align 8
  %1417 = call ptr @Builtins__structGet(ptr %997, ptr %1416)
  %1418 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1419 = call ptr @Builtins__structGet(ptr %997, ptr %1418)
  %1420 = load ptr, ptr @tag_Equals, align 8
  %1421 = call ptr @Builtins__structGet(ptr %997, ptr %1420)
  %1422 = load ptr, ptr @tag_TypeOf, align 8
  %1423 = call ptr @Builtins__structGet(ptr %997, ptr %1422)
  %1424 = load ptr, ptr @tag_IfElse, align 8
  %1425 = call ptr @Builtins__structGet(ptr %997, ptr %1424)
  %1426 = load ptr, ptr @tag_Equals, align 8
  %1427 = call ptr @Builtins__structGet(ptr %997, ptr %1426)
  %1428 = load ptr, ptr @tag_Equals, align 8
  %1429 = call ptr @Builtins__structGet(ptr %997, ptr %1428)
  %1430 = load ptr, ptr @tag_Equals, align 8
  %1431 = call ptr @Builtins__structGet(ptr %997, ptr %1430)
  %1432 = load ptr, ptr @tag_TypeOf, align 8
  %1433 = call ptr @Builtins__structGet(ptr %997, ptr %1432)
  %1434 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1435 = call ptr @Builtins__structGet(ptr %997, ptr %1434)
  %1436 = load ptr, ptr @tag_Equals, align 8
  %1437 = call ptr @Builtins__structGet(ptr %997, ptr %1436)
  %1438 = load ptr, ptr @tag_Equals, align 8
  %1439 = call ptr @Builtins__structGet(ptr %997, ptr %1438)
  %1440 = load ptr, ptr @tag_Equals, align 8
  %1441 = call ptr @Builtins__structGet(ptr %997, ptr %1440)
  %1442 = load ptr, ptr @tag_TypeOf, align 8
  %1443 = call ptr @Builtins__structGet(ptr %997, ptr %1442)
  %1444 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1445 = call ptr @Builtins__structGet(ptr %997, ptr %1444)
  %1446 = load ptr, ptr @tag_Equals, align 8
  %1447 = call ptr @Builtins__structGet(ptr %997, ptr %1446)
  %1448 = load ptr, ptr @tag_TypeOf, align 8
  %1449 = call ptr @Builtins__structGet(ptr %997, ptr %1448)
  %1450 = load ptr, ptr @tag_Equals, align 8
  %1451 = call ptr @Builtins__structGet(ptr %997, ptr %1450)
  %1452 = load ptr, ptr @tag_Equals, align 8
  %1453 = call ptr @Builtins__structGet(ptr %997, ptr %1452)
  %1454 = load ptr, ptr @tag_Equals, align 8
  %1455 = call ptr @Builtins__structGet(ptr %997, ptr %1454)
  %1456 = load ptr, ptr @tag_TypeOf, align 8
  %1457 = call ptr @Builtins__structGet(ptr %997, ptr %1456)
  %1458 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1459 = call ptr @Builtins__structGet(ptr %997, ptr %1458)
  %1460 = load ptr, ptr @tag_Equals, align 8
  %1461 = call ptr @Builtins__structGet(ptr %997, ptr %1460)
  %1462 = load ptr, ptr @tag_TypeOf, align 8
  %1463 = call ptr @Builtins__structGet(ptr %997, ptr %1462)
  %1464 = load ptr, ptr @tag_Equals, align 8
  %1465 = call ptr @Builtins__structGet(ptr %997, ptr %1464)
  %1466 = load ptr, ptr @tag_Equals, align 8
  %1467 = call ptr @Builtins__structGet(ptr %997, ptr %1466)
  %1468 = load ptr, ptr @tag_Equals, align 8
  %1469 = call ptr @Builtins__structGet(ptr %997, ptr %1468)
  %1470 = load ptr, ptr @tag_TypeOf, align 8
  %1471 = call ptr @Builtins__structGet(ptr %997, ptr %1470)
  %1472 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1473 = call ptr @Builtins__structGet(ptr %997, ptr %1472)
  %1474 = load ptr, ptr @tag_Equals, align 8
  %1475 = call ptr @Builtins__structGet(ptr %997, ptr %1474)
  %1476 = load ptr, ptr @tag_TypeOf, align 8
  %1477 = call ptr @Builtins__structGet(ptr %997, ptr %1476)
  %1478 = load ptr, ptr @tag_Equals, align 8
  %1479 = call ptr @Builtins__structGet(ptr %997, ptr %1478)
  %1480 = load ptr, ptr @tag_Equals, align 8
  %1481 = call ptr @Builtins__structGet(ptr %997, ptr %1480)
  %1482 = load ptr, ptr @tag_Equals, align 8
  %1483 = call ptr @Builtins__structGet(ptr %997, ptr %1482)
  %1484 = load ptr, ptr @tag_TypeOf, align 8
  %1485 = call ptr @Builtins__structGet(ptr %997, ptr %1484)
  %1486 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1487 = call ptr @Builtins__structGet(ptr %997, ptr %1486)
  %1488 = load ptr, ptr @tag_Equals, align 8
  %1489 = call ptr @Builtins__structGet(ptr %997, ptr %1488)
  %1490 = load ptr, ptr @tag_TypeOf, align 8
  %1491 = call ptr @Builtins__structGet(ptr %997, ptr %1490)
  %1492 = load ptr, ptr @tag_IfElse, align 8
  %1493 = call ptr @Builtins__structGet(ptr %997, ptr %1492)
  %1494 = load ptr, ptr @tag_Equals, align 8
  %1495 = call ptr @Builtins__structGet(ptr %997, ptr %1494)
  %1496 = load ptr, ptr @tag_Equals, align 8
  %1497 = call ptr @Builtins__structGet(ptr %997, ptr %1496)
  %1498 = load ptr, ptr @tag_Equals, align 8
  %1499 = call ptr @Builtins__structGet(ptr %997, ptr %1498)
  %1500 = load ptr, ptr @tag_TypeOf, align 8
  %1501 = call ptr @Builtins__structGet(ptr %997, ptr %1500)
  %1502 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1503 = call ptr @Builtins__structGet(ptr %997, ptr %1502)
  %1504 = load ptr, ptr @tag_Equals, align 8
  %1505 = call ptr @Builtins__structGet(ptr %997, ptr %1504)
  %1506 = load ptr, ptr @tag_TypeOf, align 8
  %1507 = call ptr @Builtins__structGet(ptr %997, ptr %1506)
  %1508 = load ptr, ptr @tag_Equals, align 8
  %1509 = call ptr @Builtins__structGet(ptr %997, ptr %1508)
  %1510 = load ptr, ptr @tag_Equals, align 8
  %1511 = call ptr @Builtins__structGet(ptr %997, ptr %1510)
  %1512 = load ptr, ptr @tag_Equals, align 8
  %1513 = call ptr @Builtins__structGet(ptr %997, ptr %1512)
  %1514 = load ptr, ptr @tag_TypeOf, align 8
  %1515 = call ptr @Builtins__structGet(ptr %997, ptr %1514)
  %1516 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1517 = call ptr @Builtins__structGet(ptr %997, ptr %1516)
  %1518 = load ptr, ptr @tag_Equals, align 8
  %1519 = call ptr @Builtins__structGet(ptr %997, ptr %1518)
  %1520 = load ptr, ptr @tag_TypeOf, align 8
  %1521 = call ptr @Builtins__structGet(ptr %997, ptr %1520)
  %1522 = load ptr, ptr @tag_IfElse, align 8
  %1523 = call ptr @Builtins__structGet(ptr %997, ptr %1522)
  %1524 = load ptr, ptr @tag_Equals, align 8
  %1525 = call ptr @Builtins__structGet(ptr %997, ptr %1524)
  %1526 = load ptr, ptr @tag_Equals, align 8
  %1527 = call ptr @Builtins__structGet(ptr %997, ptr %1526)
  %1528 = load ptr, ptr @tag_TypeOf, align 8
  %1529 = call ptr @Builtins__structGet(ptr %997, ptr %1528)
  %1530 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:int:is:7\00", ptr %1530, align 1
  %1531 = call ptr @make_candy_text(ptr %1530)
  store ptr %1531, ptr @"Core:int:is:7", align 8
  %1532 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:is:10\00", ptr %1532, align 1
  %1533 = call ptr @make_candy_text(ptr %1532)
  store ptr %1533, ptr @"Core:int:is:10", align 8
  %1534 = call ptr @make_candy_int(i64 42)
  store ptr %1534, ptr @num_42, align 8
  %1535 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:72\00", ptr %1535, align 1
  %1536 = call ptr @make_candy_text(ptr %1535)
  store ptr %1536, ptr @"Core:int:72", align 8
  %1537 = load ptr, ptr @tag_IntAdd, align 8
  %1538 = call ptr @Builtins__structGet(ptr %997, ptr %1537)
  %1539 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:81\00", ptr %1539, align 1
  %1540 = call ptr @make_candy_text(ptr %1539)
  store ptr %1540, ptr @"Core:int:81", align 8
  %1541 = load ptr, ptr @tag_IntSubtract, align 8
  %1542 = call ptr @Builtins__structGet(ptr %997, ptr %1541)
  %1543 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:4\00", ptr %1543, align 1
  %1544 = call ptr @make_candy_text(ptr %1543)
  store ptr %1544, ptr @"Core:int:negate:4", align 8
  %1545 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:8\00", ptr %1545, align 1
  %1546 = call ptr @make_candy_text(ptr %1545)
  store ptr %1546, ptr @"Core:int:negate:8", align 8
  %1547 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:90\00", ptr %1547, align 1
  %1548 = call ptr @make_candy_text(ptr %1547)
  store ptr %1548, ptr @"Core:int:90", align 8
  %1549 = load ptr, ptr @tag_IntMultiply, align 8
  %1550 = call ptr @Builtins__structGet(ptr %997, ptr %1549)
  %1551 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:99\00", ptr %1551, align 1
  %1552 = call ptr @make_candy_text(ptr %1551)
  store ptr %1552, ptr @"Core:int:99", align 8
  %1553 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %1554 = call ptr @Builtins__structGet(ptr %997, ptr %1553)
  %1555 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:108\00", ptr %1555, align 1
  %1556 = call ptr @make_candy_text(ptr %1555)
  store ptr %1556, ptr @"Core:int:108", align 8
  %1557 = load ptr, ptr @tag_IntRemainder, align 8
  %1558 = call ptr @Builtins__structGet(ptr %997, ptr %1557)
  %1559 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:117\00", ptr %1559, align 1
  %1560 = call ptr @make_candy_text(ptr %1559)
  store ptr %1560, ptr @"Core:int:117", align 8
  %1561 = load ptr, ptr @tag_IntModulo, align 8
  %1562 = call ptr @Builtins__structGet(ptr %997, ptr %1561)
  %1563 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %1563, align 1
  %1564 = call ptr @make_candy_text(ptr %1563)
  store ptr %1564, ptr @"text_`is valueA` was not satisfied", align 8
  %1565 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %1565, align 1
  %1566 = call ptr @make_candy_text(ptr %1565)
  store ptr %1566, ptr @"Core:int:compareTo:4", align 8
  %1567 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %1567, align 1
  %1568 = call ptr @make_candy_text(ptr %1567)
  store ptr %1568, ptr @"text_`is valueB` was not satisfied", align 8
  %1569 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %1569, align 1
  %1570 = call ptr @make_candy_text(ptr %1569)
  store ptr %1570, ptr @"Core:int:compareTo:9", align 8
  %1571 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:18\00", ptr %1571, align 1
  %1572 = call ptr @make_candy_text(ptr %1571)
  store ptr %1572, ptr @"Core:int:compareTo:18", align 8
  %1573 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:20\00", ptr %1573, align 1
  %1574 = call ptr @make_candy_text(ptr %1573)
  store ptr %1574, ptr @"Core:int:compareTo:20", align 8
  %1575 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:26\00", ptr %1575, align 1
  %1576 = call ptr @make_candy_text(ptr %1575)
  store ptr %1576, ptr @"Core:int:compareTo:26", align 8
  %1577 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:34\00", ptr %1577, align 1
  %1578 = call ptr @make_candy_text(ptr %1577)
  store ptr %1578, ptr @"Core:int:compareTo:34", align 8
  %1579 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:38\00", ptr %1579, align 1
  %1580 = call ptr @make_candy_text(ptr %1579)
  store ptr %1580, ptr @"Core:int:compareTo:38", align 8
  %1581 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:39\00", ptr %1581, align 1
  %1582 = call ptr @make_candy_text(ptr %1581)
  store ptr %1582, ptr @"Core:int:compareTo:39", align 8
  %1583 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:40\00", ptr %1583, align 1
  %1584 = call ptr @make_candy_text(ptr %1583)
  store ptr %1584, ptr @"Core:int:compareTo:40", align 8
  %1585 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %1585, align 1
  %1586 = call ptr @make_candy_text(ptr %1585)
  store ptr %1586, ptr @"Core:int:isLessThan:4", align 8
  %1587 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %1587, align 1
  %1588 = call ptr @make_candy_text(ptr %1587)
  store ptr %1588, ptr @"Core:int:isLessThan:9", align 8
  %1589 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %1589, align 1
  %1590 = call ptr @make_candy_text(ptr %1589)
  store ptr %1590, ptr @"Core:int:isLessThan:13", align 8
  %1591 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:16\00", ptr %1591, align 1
  %1592 = call ptr @make_candy_text(ptr %1591)
  store ptr %1592, ptr @"Core:int:isLessThan:16", align 8
  %1593 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %1593, align 1
  %1594 = call ptr @make_candy_text(ptr %1593)
  store ptr %1594, ptr @"Core:int:isGreaterThan:4", align 8
  %1595 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %1595, align 1
  %1596 = call ptr @make_candy_text(ptr %1595)
  store ptr %1596, ptr @"Core:int:isGreaterThan:9", align 8
  %1597 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %1597, align 1
  %1598 = call ptr @make_candy_text(ptr %1597)
  store ptr %1598, ptr @"Core:int:isGreaterThan:13", align 8
  %1599 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:16\00", ptr %1599, align 1
  %1600 = call ptr @make_candy_text(ptr %1599)
  store ptr %1600, ptr @"Core:int:isGreaterThan:16", align 8
  %1601 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:int:isLessThanOrEqualTo:4\00", ptr %1601, align 1
  %1602 = call ptr @make_candy_text(ptr %1601)
  store ptr %1602, ptr @"Core:int:isLessThanOrEqualTo:4", align 8
  %1603 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:int:isLessThanOrEqualTo:9\00", ptr %1603, align 1
  %1604 = call ptr @make_candy_text(ptr %1603)
  store ptr %1604, ptr @"Core:int:isLessThanOrEqualTo:9", align 8
  %1605 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:13\00", ptr %1605, align 1
  %1606 = call ptr @make_candy_text(ptr %1605)
  store ptr %1606, ptr @"Core:int:isLessThanOrEqualTo:13", align 8
  %1607 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:21\00", ptr %1607, align 1
  %1608 = call ptr @make_candy_text(ptr %1607)
  store ptr %1608, ptr @"Core:int:isLessThanOrEqualTo:21", align 8
  %1609 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:22\00", ptr %1609, align 1
  %1610 = call ptr @make_candy_text(ptr %1609)
  store ptr %1610, ptr @"Core:int:isLessThanOrEqualTo:22", align 8
  %1611 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:4\00", ptr %1611, align 1
  %1612 = call ptr @make_candy_text(ptr %1611)
  store ptr %1612, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  %1613 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:9\00", ptr %1613, align 1
  %1614 = call ptr @make_candy_text(ptr %1613)
  store ptr %1614, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  %1615 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:13\00", ptr %1615, align 1
  %1616 = call ptr @make_candy_text(ptr %1615)
  store ptr %1616, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  %1617 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:21\00", ptr %1617, align 1
  %1618 = call ptr @make_candy_text(ptr %1617)
  store ptr %1618, ptr @"Core:int:isGreaterThanOrEqualTo:21", align 8
  %1619 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:22\00", ptr %1619, align 1
  %1620 = call ptr @make_candy_text(ptr %1619)
  store ptr %1620, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  %1621 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:4\00", ptr %1621, align 1
  %1622 = call ptr @make_candy_text(ptr %1621)
  store ptr %1622, ptr @"Core:int:isPositive:4", align 8
  %1623 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:8\00", ptr %1623, align 1
  %1624 = call ptr @make_candy_text(ptr %1623)
  store ptr %1624, ptr @"Core:int:isPositive:8", align 8
  %1625 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonPositive:4\00", ptr %1625, align 1
  %1626 = call ptr @make_candy_text(ptr %1625)
  store ptr %1626, ptr @"Core:int:isNonPositive:4", align 8
  %1627 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonPositive:7\00", ptr %1627, align 1
  %1628 = call ptr @make_candy_text(ptr %1627)
  store ptr %1628, ptr @"Core:int:isNonPositive:7", align 8
  %1629 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonPositive:15\00", ptr %1629, align 1
  %1630 = call ptr @make_candy_text(ptr %1629)
  store ptr %1630, ptr @"Core:int:isNonPositive:15", align 8
  %1631 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonPositive:16\00", ptr %1631, align 1
  %1632 = call ptr @make_candy_text(ptr %1631)
  store ptr %1632, ptr @"Core:int:isNonPositive:16", align 8
  %1633 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %1633, align 1
  %1634 = call ptr @make_candy_text(ptr %1633)
  store ptr %1634, ptr @"Core:int:isNegative:4", align 8
  %1635 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %1635, align 1
  %1636 = call ptr @make_candy_text(ptr %1635)
  store ptr %1636, ptr @"Core:int:isNegative:8", align 8
  %1637 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %1637, align 1
  %1638 = call ptr @make_candy_text(ptr %1637)
  store ptr %1638, ptr @"Core:int:isNonNegative:4", align 8
  %1639 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %1639, align 1
  %1640 = call ptr @make_candy_text(ptr %1639)
  store ptr %1640, ptr @"Core:int:isNonNegative:7", align 8
  %1641 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:15\00", ptr %1641, align 1
  %1642 = call ptr @make_candy_text(ptr %1641)
  store ptr %1642, ptr @"Core:int:isNonNegative:15", align 8
  %1643 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:16\00", ptr %1643, align 1
  %1644 = call ptr @make_candy_text(ptr %1643)
  store ptr %1644, ptr @"Core:int:isNonNegative:16", align 8
  %1645 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:absolute:4\00", ptr %1645, align 1
  %1646 = call ptr @make_candy_text(ptr %1645)
  store ptr %1646, ptr @"Core:int:absolute:4", align 8
  %1647 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:absolute:8\00", ptr %1647, align 1
  %1648 = call ptr @make_candy_text(ptr %1647)
  store ptr %1648, ptr @"Core:int:absolute:8", align 8
  %1649 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:absolute:9:2\00", ptr %1649, align 1
  %1650 = call ptr @make_candy_text(ptr %1649)
  store ptr %1650, ptr @"Core:int:absolute:9:2", align 8
  %1651 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:absolute:11\00", ptr %1651, align 1
  %1652 = call ptr @make_candy_text(ptr %1651)
  store ptr %1652, ptr @"Core:int:absolute:11", align 8
  %1653 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:4\00", ptr %1653, align 1
  %1654 = call ptr @make_candy_text(ptr %1653)
  store ptr %1654, ptr @"Core:int:fitsInRustU32:4", align 8
  %1655 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:7\00", ptr %1655, align 1
  %1656 = call ptr @make_candy_text(ptr %1655)
  store ptr %1656, ptr @"Core:int:fitsInRustU32:7", align 8
  %1657 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative value` was not satisfied\00", ptr %1657, align 1
  %1658 = call ptr @make_candy_text(ptr %1657)
  store ptr %1658, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %1659 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:9\00", ptr %1659, align 1
  %1660 = call ptr @make_candy_text(ptr %1659)
  store ptr %1660, ptr @"Core:int:fitsInRustU32:9", align 8
  %1661 = call ptr @make_candy_int(i64 4294967295)
  store ptr %1661, ptr @num_4294967295, align 8
  %1662 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU32:15\00", ptr %1662, align 1
  %1663 = call ptr @make_candy_text(ptr %1662)
  store ptr %1663, ptr @"Core:int:fitsInRustU32:15", align 8
  %1664 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU128:4\00", ptr %1664, align 1
  %1665 = call ptr @make_candy_text(ptr %1664)
  store ptr %1665, ptr @"Core:int:fitsInRustU128:4", align 8
  %1666 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU128:7\00", ptr %1666, align 1
  %1667 = call ptr @make_candy_text(ptr %1666)
  store ptr %1667, ptr @"Core:int:fitsInRustU128:7", align 8
  %1668 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU128:9\00", ptr %1668, align 1
  %1669 = call ptr @make_candy_text(ptr %1668)
  store ptr %1669, ptr @"Core:int:fitsInRustU128:9", align 8
  %1670 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:int:fitsInRustU128:15\00", ptr %1670, align 1
  %1671 = call ptr @make_candy_text(ptr %1670)
  store ptr %1671, ptr @"Core:int:fitsInRustU128:15", align 8
  %1672 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:126\00", ptr %1672, align 1
  %1673 = call ptr @make_candy_text(ptr %1672)
  store ptr %1673, ptr @"Core:int:126", align 8
  %1674 = load ptr, ptr @tag_IntShiftLeft, align 8
  %1675 = call ptr @Builtins__structGet(ptr %997, ptr %1674)
  %1676 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:135\00", ptr %1676, align 1
  %1677 = call ptr @make_candy_text(ptr %1676)
  store ptr %1677, ptr @"Core:int:135", align 8
  %1678 = load ptr, ptr @tag_IntShiftRight, align 8
  %1679 = call ptr @Builtins__structGet(ptr %997, ptr %1678)
  %1680 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:144\00", ptr %1680, align 1
  %1681 = call ptr @make_candy_text(ptr %1680)
  store ptr %1681, ptr @"Core:int:144", align 8
  %1682 = load ptr, ptr @tag_IntBitLength, align 8
  %1683 = call ptr @Builtins__structGet(ptr %997, ptr %1682)
  %1684 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:153\00", ptr %1684, align 1
  %1685 = call ptr @make_candy_text(ptr %1684)
  store ptr %1685, ptr @"Core:int:153", align 8
  %1686 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %1687 = call ptr @Builtins__structGet(ptr %997, ptr %1686)
  %1688 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:162\00", ptr %1688, align 1
  %1689 = call ptr @make_candy_text(ptr %1688)
  store ptr %1689, ptr @"Core:int:162", align 8
  %1690 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %1691 = call ptr @Builtins__structGet(ptr %997, ptr %1690)
  %1692 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:171\00", ptr %1692, align 1
  %1693 = call ptr @make_candy_text(ptr %1692)
  store ptr %1693, ptr @"Core:int:171", align 8
  %1694 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %1695 = call ptr @Builtins__structGet(ptr %997, ptr %1694)
  %1696 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:4\00", ptr %1696, align 1
  %1697 = call ptr @make_candy_text(ptr %1696)
  store ptr %1697, ptr @"Core:int:isEven:4", align 8
  %1698 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:8\00", ptr %1698, align 1
  %1699 = call ptr @make_candy_text(ptr %1698)
  store ptr %1699, ptr @"Core:int:isEven:8", align 8
  %1700 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:int:isEven:11\00", ptr %1700, align 1
  %1701 = call ptr @make_candy_text(ptr %1700)
  store ptr %1701, ptr @"Core:int:isEven:11", align 8
  %1702 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:4\00", ptr %1702, align 1
  %1703 = call ptr @make_candy_text(ptr %1702)
  store ptr %1703, ptr @"Core:int:isOdd:4", align 8
  %1704 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:8\00", ptr %1704, align 1
  %1705 = call ptr @make_candy_text(ptr %1704)
  store ptr %1705, ptr @"Core:int:isOdd:8", align 8
  %1706 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:11\00", ptr %1706, align 1
  %1707 = call ptr @make_candy_text(ptr %1706)
  store ptr %1707, ptr @"Core:int:isOdd:11", align 8
  %1708 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:16\00", ptr %1708, align 1
  %1709 = call ptr @make_candy_text(ptr %1708)
  store ptr %1709, ptr @"Core:int:isOdd:16", align 8
  %1710 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:26\00", ptr %1710, align 1
  %1711 = call ptr @make_candy_text(ptr %1710)
  store ptr %1711, ptr @"Core:int:isOdd:26", align 8
  %1712 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:27\00", ptr %1712, align 1
  %1713 = call ptr @make_candy_text(ptr %1712)
  store ptr %1713, ptr @"Core:int:isOdd:27", align 8
  %1714 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:28\00", ptr %1714, align 1
  %1715 = call ptr @make_candy_text(ptr %1714)
  store ptr %1715, ptr @"Core:int:isOdd:28", align 8
  %1716 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isOdd:29\00", ptr %1716, align 1
  %1717 = call ptr @make_candy_text(ptr %1716)
  store ptr %1717, ptr @"Core:int:isOdd:29", align 8
  %1718 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:min:4\00", ptr %1718, align 1
  %1719 = call ptr @make_candy_text(ptr %1718)
  store ptr %1719, ptr @"Core:int:min:4", align 8
  %1720 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:min:9\00", ptr %1720, align 1
  %1721 = call ptr @make_candy_text(ptr %1720)
  store ptr %1721, ptr @"Core:int:min:9", align 8
  %1722 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:min:14\00", ptr %1722, align 1
  %1723 = call ptr @make_candy_text(ptr %1722)
  store ptr %1723, ptr @"Core:int:min:14", align 8
  %1724 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:min:17\00", ptr %1724, align 1
  %1725 = call ptr @make_candy_text(ptr %1724)
  store ptr %1725, ptr @"Core:int:min:17", align 8
  %1726 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:4\00", ptr %1726, align 1
  %1727 = call ptr @make_candy_text(ptr %1726)
  store ptr %1727, ptr @"Core:int:max:4", align 8
  %1728 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:9\00", ptr %1728, align 1
  %1729 = call ptr @make_candy_text(ptr %1728)
  store ptr %1729, ptr @"Core:int:max:9", align 8
  %1730 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:14\00", ptr %1730, align 1
  %1731 = call ptr @make_candy_text(ptr %1730)
  store ptr %1731, ptr @"Core:int:max:14", align 8
  %1732 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:17\00", ptr %1732, align 1
  %1733 = call ptr @make_candy_text(ptr %1732)
  store ptr %1733, ptr @"Core:int:max:17", align 8
  %1734 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:coerceAtLeast:4\00", ptr %1734, align 1
  %1735 = call ptr @make_candy_text(ptr %1734)
  store ptr %1735, ptr @"Core:int:coerceAtLeast:4", align 8
  %1736 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is minimum` was not satisfied\00", ptr %1736, align 1
  %1737 = call ptr @make_candy_text(ptr %1736)
  store ptr %1737, ptr @"text_`is minimum` was not satisfied", align 8
  %1738 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:coerceAtLeast:9\00", ptr %1738, align 1
  %1739 = call ptr @make_candy_text(ptr %1738)
  store ptr %1739, ptr @"Core:int:coerceAtLeast:9", align 8
  %1740 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:coerceAtLeast:13\00", ptr %1740, align 1
  %1741 = call ptr @make_candy_text(ptr %1740)
  store ptr %1741, ptr @"Core:int:coerceAtLeast:13", align 8
  %1742 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:int:coerceAtMost:4\00", ptr %1742, align 1
  %1743 = call ptr @make_candy_text(ptr %1742)
  store ptr %1743, ptr @"Core:int:coerceAtMost:4", align 8
  %1744 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is maximum` was not satisfied\00", ptr %1744, align 1
  %1745 = call ptr @make_candy_text(ptr %1744)
  store ptr %1745, ptr @"text_`is maximum` was not satisfied", align 8
  %1746 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:int:coerceAtMost:9\00", ptr %1746, align 1
  %1747 = call ptr @make_candy_text(ptr %1746)
  store ptr %1747, ptr @"Core:int:coerceAtMost:9", align 8
  %1748 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:coerceAtMost:13\00", ptr %1748, align 1
  %1749 = call ptr @make_candy_text(ptr %1748)
  store ptr %1749, ptr @"Core:int:coerceAtMost:13", align 8
  %1750 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:coerceIn:4\00", ptr %1750, align 1
  %1751 = call ptr @make_candy_text(ptr %1750)
  store ptr %1751, ptr @"Core:int:coerceIn:4", align 8
  %1752 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:coerceIn:9\00", ptr %1752, align 1
  %1753 = call ptr @make_candy_text(ptr %1752)
  store ptr %1753, ptr @"Core:int:coerceIn:9", align 8
  %1754 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:14\00", ptr %1754, align 1
  %1755 = call ptr @make_candy_text(ptr %1754)
  store ptr %1755, ptr @"Core:int:coerceIn:14", align 8
  %1756 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:18\00", ptr %1756, align 1
  %1757 = call ptr @make_candy_text(ptr %1756)
  store ptr %1757, ptr @"Core:int:coerceIn:18", align 8
  %1758 = alloca i8, i64 58, align 1
  store [58 x i8] c"`minimum | isLessThanOrEqualTo maximum` was not satisfied\00", ptr %1758, align 1
  %1759 = call ptr @make_candy_text(ptr %1758)
  store ptr %1759, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %1760 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:20\00", ptr %1760, align 1
  %1761 = call ptr @make_candy_text(ptr %1760)
  store ptr %1761, ptr @"Core:int:coerceIn:20", align 8
  %1762 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:24\00", ptr %1762, align 1
  %1763 = call ptr @make_candy_text(ptr %1762)
  store ptr %1763, ptr @"Core:int:coerceIn:24", align 8
  %1764 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:coerceIn:27\00", ptr %1764, align 1
  %1765 = call ptr @make_candy_text(ptr %1764)
  store ptr %1765, ptr @"Core:int:coerceIn:27", align 8
  %1766 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:180\00", ptr %1766, align 1
  %1767 = call ptr @make_candy_text(ptr %1766)
  store ptr %1767, ptr @"Core:int:180", align 8
  %1768 = load ptr, ptr @tag_IntParse, align 8
  %1769 = call ptr @Builtins__structGet(ptr %997, ptr %1768)
  %1770 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is base` was not satisfied\00", ptr %1770, align 1
  %1771 = call ptr @make_candy_text(ptr %1770)
  store ptr %1771, ptr @"text_`is base` was not satisfied", align 8
  %1772 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:4\00", ptr %1772, align 1
  %1773 = call ptr @make_candy_text(ptr %1772)
  store ptr %1773, ptr @"Core:int:pow:4", align 8
  %1774 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is exponent` was not satisfied\00", ptr %1774, align 1
  %1775 = call ptr @make_candy_text(ptr %1774)
  store ptr %1775, ptr @"text_`is exponent` was not satisfied", align 8
  %1776 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:9\00", ptr %1776, align 1
  %1777 = call ptr @make_candy_text(ptr %1776)
  store ptr %1777, ptr @"Core:int:pow:9", align 8
  %1778 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:12\00", ptr %1778, align 1
  %1779 = call ptr @make_candy_text(ptr %1778)
  store ptr %1779, ptr @"Core:int:pow:12", align 8
  %1780 = alloca i8, i64 43, align 1
  store [43 x i8] c"`isNonNegative exponent` was not satisfied\00", ptr %1780, align 1
  %1781 = call ptr @make_candy_text(ptr %1780)
  store ptr %1781, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %1782 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:14\00", ptr %1782, align 1
  %1783 = call ptr @make_candy_text(ptr %1782)
  store ptr %1783, ptr @"Core:int:pow:14", align 8
  %1784 = alloca i8, i64 5, align 1
  store [5 x i8] c"Base\00", ptr %1784, align 1
  %1785 = call ptr @make_candy_tag(ptr %1784, ptr null)
  store ptr %1785, ptr @tag_Base, align 8
  %1786 = alloca i8, i64 9, align 1
  store [9 x i8] c"Exponent\00", ptr %1786, align 1
  %1787 = call ptr @make_candy_tag(ptr %1786, ptr null)
  store ptr %1787, ptr @tag_Exponent, align 8
  %1788 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:1\00", ptr %1788, align 1
  %1789 = call ptr @make_candy_text(ptr %1788)
  store ptr %1789, ptr @"Core:int:pow:21:1", align 8
  %1790 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Base`: `\00", ptr %1790, align 1
  %1791 = call ptr @make_candy_text(ptr %1790)
  store ptr %1791, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %1792 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Exponent`: `\00", ptr %1792, align 1
  %1793 = call ptr @make_candy_text(ptr %1792)
  store ptr %1793, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %1794 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %1794, align 1
  %1795 = call ptr @make_candy_text(ptr %1794)
  store ptr %1795, ptr @"text_Expected a Struct, got `", align 8
  %1796 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:pow:21:base\00", ptr %1796, align 1
  %1797 = call ptr @make_candy_text(ptr %1796)
  store ptr %1797, ptr @"Core:int:pow:21:base", align 8
  %1798 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:pow:21:exponent\00", ptr %1798, align 1
  %1799 = call ptr @make_candy_text(ptr %1798)
  store ptr %1799, ptr @"Core:int:pow:21:exponent", align 8
  %1800 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:4\00", ptr %1800, align 1
  %1801 = call ptr @make_candy_text(ptr %1800)
  store ptr %1801, ptr @"Core:int:pow:21:4", align 8
  %1802 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected `0`, got `\00", ptr %1802, align 1
  %1803 = call ptr @make_candy_text(ptr %1802)
  store ptr %1803, ptr @"text_Expected `0`, got `", align 8
  %1804 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1805 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_matched, ptr %1804, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1805, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %1806 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:4\00", ptr %1806, align 1
  %1807 = call ptr @make_candy_text(ptr %1806)
  store ptr %1807, ptr @"Core:int:pow:21:4:4", align 8
  %1808 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:5:5\00", ptr %1808, align 1
  %1809 = call ptr @make_candy_text(ptr %1808)
  store ptr %1809, ptr @"Core:int:pow:21:4:5:5", align 8
  %1810 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:10\00", ptr %1810, align 1
  %1811 = call ptr @make_candy_text(ptr %1810)
  store ptr %1811, ptr @"Core:int:pow:21:4:5:10", align 8
  %1812 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:12\00", ptr %1812, align 1
  %1813 = call ptr @make_candy_text(ptr %1812)
  store ptr %1813, ptr @"Core:int:pow:21:4:5:12", align 8
  %1814 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:6:7\00", ptr %1814, align 1
  %1815 = call ptr @make_candy_text(ptr %1814)
  store ptr %1815, ptr @"Core:int:pow:21:4:6:7", align 8
  %1816 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:12\00", ptr %1816, align 1
  %1817 = call ptr @make_candy_text(ptr %1816)
  store ptr %1817, ptr @"Core:int:pow:21:4:6:12", align 8
  %1818 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:15\00", ptr %1818, align 1
  %1819 = call ptr @make_candy_text(ptr %1818)
  store ptr %1819, ptr @"Core:int:pow:21:4:6:15", align 8
  %1820 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:17\00", ptr %1820, align 1
  %1821 = call ptr @make_candy_text(ptr %1820)
  store ptr %1821, ptr @"Core:int:pow:21:4:6:17", align 8
  %1822 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:18\00", ptr %1822, align 1
  %1823 = call ptr @make_candy_text(ptr %1822)
  store ptr %1823, ptr @"Core:int:pow:21:4:6:18", align 8
  %1824 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:7\00", ptr %1824, align 1
  %1825 = call ptr @make_candy_text(ptr %1824)
  store ptr %1825, ptr @"Core:int:pow:21:4:7", align 8
  %1826 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:22\00", ptr %1826, align 1
  %1827 = call ptr @make_candy_text(ptr %1826)
  store ptr %1827, ptr @"Core:int:pow:22", align 8
  %1828 = alloca i8, i64 20, align 1
  store [20 x i8] c"IsLessThanOrEqualTo\00", ptr %1828, align 1
  %1829 = call ptr @make_candy_tag(ptr %1828, ptr null)
  store ptr %1829, ptr @tag_IsLessThanOrEqualTo, align 8
  %1830 = alloca i8, i64 11, align 1
  store [11 x i8] c"BitwiseAnd\00", ptr %1830, align 1
  %1831 = call ptr @make_candy_tag(ptr %1830, ptr null)
  store ptr %1831, ptr @tag_BitwiseAnd, align 8
  %1832 = alloca i8, i64 10, align 1
  store [10 x i8] c"BitwiseOr\00", ptr %1832, align 1
  %1833 = call ptr @make_candy_tag(ptr %1832, ptr null)
  store ptr %1833, ptr @tag_BitwiseOr, align 8
  %1834 = alloca i8, i64 13, align 1
  store [13 x i8] c"CoerceAtMost\00", ptr %1834, align 1
  %1835 = call ptr @make_candy_tag(ptr %1834, ptr null)
  store ptr %1835, ptr @tag_CoerceAtMost, align 8
  %1836 = alloca i8, i64 10, align 1
  store [10 x i8] c"Remainder\00", ptr %1836, align 1
  %1837 = call ptr @make_candy_tag(ptr %1836, ptr null)
  store ptr %1837, ptr @tag_Remainder, align 8
  %1838 = alloca i8, i64 14, align 1
  store [14 x i8] c"FitsInRustU32\00", ptr %1838, align 1
  %1839 = call ptr @make_candy_tag(ptr %1838, ptr null)
  store ptr %1839, ptr @tag_FitsInRustU32, align 8
  %1840 = alloca i8, i64 10, align 1
  store [10 x i8] c"ShiftLeft\00", ptr %1840, align 1
  %1841 = call ptr @make_candy_tag(ptr %1840, ptr null)
  store ptr %1841, ptr @tag_ShiftLeft, align 8
  %1842 = alloca i8, i64 11, align 1
  store [11 x i8] c"IsPositive\00", ptr %1842, align 1
  %1843 = call ptr @make_candy_tag(ptr %1842, ptr null)
  store ptr %1843, ptr @tag_IsPositive, align 8
  %1844 = alloca i8, i64 9, align 1
  store [9 x i8] c"CoerceIn\00", ptr %1844, align 1
  %1845 = call ptr @make_candy_tag(ptr %1844, ptr null)
  store ptr %1845, ptr @tag_CoerceIn, align 8
  %1846 = alloca i8, i64 11, align 1
  store [11 x i8] c"IsNegative\00", ptr %1846, align 1
  %1847 = call ptr @make_candy_tag(ptr %1846, ptr null)
  store ptr %1847, ptr @tag_IsNegative, align 8
  %1848 = alloca i8, i64 14, align 1
  store [14 x i8] c"IsNonNegative\00", ptr %1848, align 1
  %1849 = call ptr @make_candy_tag(ptr %1848, ptr null)
  store ptr %1849, ptr @tag_IsNonNegative, align 8
  %1850 = alloca i8, i64 7, align 1
  store [7 x i8] c"Modulo\00", ptr %1850, align 1
  %1851 = call ptr @make_candy_tag(ptr %1850, ptr null)
  store ptr %1851, ptr @tag_Modulo, align 8
  %1852 = alloca i8, i64 6, align 1
  store [6 x i8] c"Parse\00", ptr %1852, align 1
  %1853 = call ptr @make_candy_tag(ptr %1852, ptr null)
  store ptr %1853, ptr @tag_Parse, align 8
  %1854 = alloca i8, i64 14, align 1
  store [14 x i8] c"IsGreaterThan\00", ptr %1854, align 1
  %1855 = call ptr @make_candy_tag(ptr %1854, ptr null)
  store ptr %1855, ptr @tag_IsGreaterThan, align 8
  %1856 = alloca i8, i64 14, align 1
  store [14 x i8] c"IsNonPositive\00", ptr %1856, align 1
  %1857 = call ptr @make_candy_tag(ptr %1856, ptr null)
  store ptr %1857, ptr @tag_IsNonPositive, align 8
  %1858 = alloca i8, i64 9, align 1
  store [9 x i8] c"Multiply\00", ptr %1858, align 1
  %1859 = call ptr @make_candy_tag(ptr %1858, ptr null)
  store ptr %1859, ptr @tag_Multiply, align 8
  %1860 = alloca i8, i64 17, align 1
  store [17 x i8] c"DivideTruncating\00", ptr %1860, align 1
  %1861 = call ptr @make_candy_tag(ptr %1860, ptr null)
  store ptr %1861, ptr @tag_DivideTruncating, align 8
  %1862 = alloca i8, i64 4, align 1
  store [4 x i8] c"Add\00", ptr %1862, align 1
  %1863 = call ptr @make_candy_tag(ptr %1862, ptr null)
  store ptr %1863, ptr @tag_Add, align 8
  %1864 = alloca i8, i64 11, align 1
  store [11 x i8] c"BitwiseXor\00", ptr %1864, align 1
  %1865 = call ptr @make_candy_tag(ptr %1864, ptr null)
  store ptr %1865, ptr @tag_BitwiseXor, align 8
  %1866 = alloca i8, i64 6, align 1
  store [6 x i8] c"IsOdd\00", ptr %1866, align 1
  %1867 = call ptr @make_candy_tag(ptr %1866, ptr null)
  store ptr %1867, ptr @tag_IsOdd, align 8
  %1868 = alloca i8, i64 23, align 1
  store [23 x i8] c"IsGreaterThanOrEqualTo\00", ptr %1868, align 1
  %1869 = call ptr @make_candy_tag(ptr %1868, ptr null)
  store ptr %1869, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %1870 = alloca i8, i64 11, align 1
  store [11 x i8] c"IsLessThan\00", ptr %1870, align 1
  %1871 = call ptr @make_candy_tag(ptr %1870, ptr null)
  store ptr %1871, ptr @tag_IsLessThan, align 8
  %1872 = alloca i8, i64 7, align 1
  store [7 x i8] c"Negate\00", ptr %1872, align 1
  %1873 = call ptr @make_candy_tag(ptr %1872, ptr null)
  store ptr %1873, ptr @tag_Negate, align 8
  %1874 = alloca i8, i64 4, align 1
  store [4 x i8] c"Pow\00", ptr %1874, align 1
  %1875 = call ptr @make_candy_tag(ptr %1874, ptr null)
  store ptr %1875, ptr @tag_Pow, align 8
  %1876 = alloca i8, i64 11, align 1
  store [11 x i8] c"ShiftRight\00", ptr %1876, align 1
  %1877 = call ptr @make_candy_tag(ptr %1876, ptr null)
  store ptr %1877, ptr @tag_ShiftRight, align 8
  %1878 = alloca i8, i64 7, align 1
  store [7 x i8] c"IsEven\00", ptr %1878, align 1
  %1879 = call ptr @make_candy_tag(ptr %1878, ptr null)
  store ptr %1879, ptr @tag_IsEven, align 8
  %1880 = alloca i8, i64 4, align 1
  store [4 x i8] c"Max\00", ptr %1880, align 1
  %1881 = call ptr @make_candy_tag(ptr %1880, ptr null)
  store ptr %1881, ptr @tag_Max, align 8
  %1882 = alloca i8, i64 10, align 1
  store [10 x i8] c"BitLength\00", ptr %1882, align 1
  %1883 = call ptr @make_candy_tag(ptr %1882, ptr null)
  store ptr %1883, ptr @tag_BitLength, align 8
  %1884 = alloca i8, i64 4, align 1
  store [4 x i8] c"Min\00", ptr %1884, align 1
  %1885 = call ptr @make_candy_tag(ptr %1884, ptr null)
  store ptr %1885, ptr @tag_Min, align 8
  %1886 = alloca i8, i64 15, align 1
  store [15 x i8] c"FitsInRustU128\00", ptr %1886, align 1
  %1887 = call ptr @make_candy_tag(ptr %1886, ptr null)
  store ptr %1887, ptr @tag_FitsInRustU128, align 8
  %1888 = alloca i8, i64 14, align 1
  store [14 x i8] c"CoerceAtLeast\00", ptr %1888, align 1
  %1889 = call ptr @make_candy_tag(ptr %1888, ptr null)
  store ptr %1889, ptr @tag_CoerceAtLeast, align 8
  %1890 = alloca i8, i64 10, align 1
  store [10 x i8] c"CompareTo\00", ptr %1890, align 1
  %1891 = call ptr @make_candy_tag(ptr %1890, ptr null)
  store ptr %1891, ptr @tag_CompareTo, align 8
  %1892 = alloca i8, i64 9, align 1
  store [9 x i8] c"Absolute\00", ptr %1892, align 1
  %1893 = call ptr @make_candy_tag(ptr %1892, ptr null)
  store ptr %1893, ptr @tag_Absolute, align 8
  %1894 = alloca i8, i64 9, align 1
  store [9 x i8] c"Subtract\00", ptr %1894, align 1
  %1895 = call ptr @make_candy_tag(ptr %1894, ptr null)
  store ptr %1895, ptr @tag_Subtract, align 8
  %1896 = alloca i8, i64 10, align 1
  store [10 x i8] c"TheAnswer\00", ptr %1896, align 1
  %1897 = call ptr @make_candy_tag(ptr %1896, ptr null)
  store ptr %1897, ptr @tag_TheAnswer, align 8
  %1898 = load ptr, ptr @tag_Equals, align 8
  %1899 = call ptr @Builtins__structGet(ptr %997, ptr %1898)
  %1900 = load ptr, ptr @tag_Equals, align 8
  %1901 = call ptr @Builtins__structGet(ptr %997, ptr %1900)
  %1902 = load ptr, ptr @tag_Equals, align 8
  %1903 = call ptr @Builtins__structGet(ptr %997, ptr %1902)
  %1904 = load ptr, ptr @tag_TypeOf, align 8
  %1905 = call ptr @Builtins__structGet(ptr %997, ptr %1904)
  %1906 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1907 = call ptr @Builtins__structGet(ptr %997, ptr %1906)
  %1908 = load ptr, ptr @tag_Equals, align 8
  %1909 = call ptr @Builtins__structGet(ptr %997, ptr %1908)
  %1910 = load ptr, ptr @tag_TypeOf, align 8
  %1911 = call ptr @Builtins__structGet(ptr %997, ptr %1910)
  %1912 = load ptr, ptr @tag_Equals, align 8
  %1913 = call ptr @Builtins__structGet(ptr %997, ptr %1912)
  %1914 = load ptr, ptr @tag_Equals, align 8
  %1915 = call ptr @Builtins__structGet(ptr %997, ptr %1914)
  %1916 = load ptr, ptr @tag_Equals, align 8
  %1917 = call ptr @Builtins__structGet(ptr %997, ptr %1916)
  %1918 = load ptr, ptr @tag_TypeOf, align 8
  %1919 = call ptr @Builtins__structGet(ptr %997, ptr %1918)
  %1920 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1921 = call ptr @Builtins__structGet(ptr %997, ptr %1920)
  %1922 = load ptr, ptr @tag_Equals, align 8
  %1923 = call ptr @Builtins__structGet(ptr %997, ptr %1922)
  %1924 = load ptr, ptr @tag_TypeOf, align 8
  %1925 = call ptr @Builtins__structGet(ptr %997, ptr %1924)
  %1926 = load ptr, ptr @tag_IfElse, align 8
  %1927 = call ptr @Builtins__structGet(ptr %997, ptr %1926)
  %1928 = load ptr, ptr @tag_Equals, align 8
  %1929 = call ptr @Builtins__structGet(ptr %997, ptr %1928)
  %1930 = load ptr, ptr @tag_TypeOf, align 8
  %1931 = call ptr @Builtins__structGet(ptr %997, ptr %1930)
  %1932 = load ptr, ptr @tag_Equals, align 8
  %1933 = call ptr @Builtins__structGet(ptr %997, ptr %1932)
  %1934 = load ptr, ptr @tag_Equals, align 8
  %1935 = call ptr @Builtins__structGet(ptr %997, ptr %1934)
  %1936 = load ptr, ptr @tag_Equals, align 8
  %1937 = call ptr @Builtins__structGet(ptr %997, ptr %1936)
  %1938 = load ptr, ptr @tag_TypeOf, align 8
  %1939 = call ptr @Builtins__structGet(ptr %997, ptr %1938)
  %1940 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1941 = call ptr @Builtins__structGet(ptr %997, ptr %1940)
  %1942 = load ptr, ptr @tag_Equals, align 8
  %1943 = call ptr @Builtins__structGet(ptr %997, ptr %1942)
  %1944 = load ptr, ptr @tag_TypeOf, align 8
  %1945 = call ptr @Builtins__structGet(ptr %997, ptr %1944)
  %1946 = load ptr, ptr @tag_Equals, align 8
  %1947 = call ptr @Builtins__structGet(ptr %997, ptr %1946)
  %1948 = load ptr, ptr @tag_Equals, align 8
  %1949 = call ptr @Builtins__structGet(ptr %997, ptr %1948)
  %1950 = load ptr, ptr @tag_Equals, align 8
  %1951 = call ptr @Builtins__structGet(ptr %997, ptr %1950)
  %1952 = load ptr, ptr @tag_TypeOf, align 8
  %1953 = call ptr @Builtins__structGet(ptr %997, ptr %1952)
  %1954 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1955 = call ptr @Builtins__structGet(ptr %997, ptr %1954)
  %1956 = load ptr, ptr @tag_Equals, align 8
  %1957 = call ptr @Builtins__structGet(ptr %997, ptr %1956)
  %1958 = load ptr, ptr @tag_TypeOf, align 8
  %1959 = call ptr @Builtins__structGet(ptr %997, ptr %1958)
  %1960 = load ptr, ptr @tag_Equals, align 8
  %1961 = call ptr @Builtins__structGet(ptr %997, ptr %1960)
  %1962 = load ptr, ptr @tag_Equals, align 8
  %1963 = call ptr @Builtins__structGet(ptr %997, ptr %1962)
  %1964 = load ptr, ptr @tag_Equals, align 8
  %1965 = call ptr @Builtins__structGet(ptr %997, ptr %1964)
  %1966 = load ptr, ptr @tag_TypeOf, align 8
  %1967 = call ptr @Builtins__structGet(ptr %997, ptr %1966)
  %1968 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1969 = call ptr @Builtins__structGet(ptr %997, ptr %1968)
  %1970 = load ptr, ptr @tag_Equals, align 8
  %1971 = call ptr @Builtins__structGet(ptr %997, ptr %1970)
  %1972 = load ptr, ptr @tag_TypeOf, align 8
  %1973 = call ptr @Builtins__structGet(ptr %997, ptr %1972)
  %1974 = load ptr, ptr @tag_IfElse, align 8
  %1975 = call ptr @Builtins__structGet(ptr %997, ptr %1974)
  %1976 = load ptr, ptr @tag_Equals, align 8
  %1977 = call ptr @Builtins__structGet(ptr %997, ptr %1976)
  %1978 = load ptr, ptr @tag_TypeOf, align 8
  %1979 = call ptr @Builtins__structGet(ptr %997, ptr %1978)
  %1980 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:tag:is:7\00", ptr %1980, align 1
  %1981 = call ptr @make_candy_text(ptr %1980)
  store ptr %1981, ptr @"Core:tag:is:7", align 8
  %1982 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:tag:is:10\00", ptr %1982, align 1
  %1983 = call ptr @make_candy_text(ptr %1982)
  store ptr %1983, ptr @"Core:tag:is:10", align 8
  %1984 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:48\00", ptr %1984, align 1
  %1985 = call ptr @make_candy_text(ptr %1984)
  store ptr %1985, ptr @"Core:tag:48", align 8
  %1986 = load ptr, ptr @tag_TagHasValue, align 8
  %1987 = call ptr @Builtins__structGet(ptr %997, ptr %1986)
  %1988 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:57\00", ptr %1988, align 1
  %1989 = call ptr @make_candy_text(ptr %1988)
  store ptr %1989, ptr @"Core:tag:57", align 8
  %1990 = load ptr, ptr @tag_TagWithoutValue, align 8
  %1991 = call ptr @Builtins__structGet(ptr %997, ptr %1990)
  %1992 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:66\00", ptr %1992, align 1
  %1993 = call ptr @make_candy_text(ptr %1992)
  store ptr %1993, ptr @"Core:tag:66", align 8
  %1994 = load ptr, ptr @tag_TagGetValue, align 8
  %1995 = call ptr @Builtins__structGet(ptr %997, ptr %1994)
  %1996 = alloca i8, i64 27, align 1
  store [27 x i8] c"`is tag` was not satisfied\00", ptr %1996, align 1
  %1997 = call ptr @make_candy_text(ptr %1996)
  store ptr %1997, ptr @"text_`is tag` was not satisfied", align 8
  %1998 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:tag:withSymbol:4\00", ptr %1998, align 1
  %1999 = call ptr @make_candy_text(ptr %1998)
  store ptr %1999, ptr @"Core:tag:withSymbol:4", align 8
  %2000 = alloca i8, i64 33, align 1
  store [33 x i8] c"`is symbolTag` was not satisfied\00", ptr %2000, align 1
  %2001 = call ptr @make_candy_text(ptr %2000)
  store ptr %2001, ptr @"text_`is symbolTag` was not satisfied", align 8
  %2002 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:tag:withSymbol:9\00", ptr %2002, align 1
  %2003 = call ptr @make_candy_text(ptr %2002)
  store ptr %2003, ptr @"Core:tag:withSymbol:9", align 8
  %2004 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:12\00", ptr %2004, align 1
  %2005 = call ptr @make_candy_text(ptr %2004)
  store ptr %2005, ptr @"Core:tag:withSymbol:12", align 8
  %2006 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:20\00", ptr %2006, align 1
  %2007 = call ptr @make_candy_text(ptr %2006)
  store ptr %2007, ptr @"Core:tag:withSymbol:20", align 8
  %2008 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:21\00", ptr %2008, align 1
  %2009 = call ptr @make_candy_text(ptr %2008)
  store ptr %2009, ptr @"Core:tag:withSymbol:21", align 8
  %2010 = alloca i8, i64 52, align 1
  store [52 x i8] c"`symbolTag | hasValue | bool.not` was not satisfied\00", ptr %2010, align 1
  %2011 = call ptr @make_candy_text(ptr %2010)
  store ptr %2011, ptr @"text_`symbolTag | hasValue | bool.not` was not satisfied", align 8
  %2012 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:23\00", ptr %2012, align 1
  %2013 = call ptr @make_candy_text(ptr %2012)
  store ptr %2013, ptr @"Core:tag:withSymbol:23", align 8
  %2014 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:27\00", ptr %2014, align 1
  %2015 = call ptr @make_candy_text(ptr %2014)
  store ptr %2015, ptr @"Core:tag:withSymbol:27", align 8
  %2016 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:tag:withSymbol:28:3\00", ptr %2016, align 1
  %2017 = call ptr @make_candy_text(ptr %2016)
  store ptr %2017, ptr @"Core:tag:withSymbol:28:3", align 8
  %2018 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:tag:withSymbol:28:4\00", ptr %2018, align 1
  %2019 = call ptr @make_candy_text(ptr %2018)
  store ptr %2019, ptr @"Core:tag:withSymbol:28:4", align 8
  %2020 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:tag:withSymbol:29:2\00", ptr %2020, align 1
  %2021 = call ptr @make_candy_text(ptr %2020)
  store ptr %2021, ptr @"Core:tag:withSymbol:29:2", align 8
  %2022 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:tag:withSymbol:30\00", ptr %2022, align 1
  %2023 = call ptr @make_candy_text(ptr %2022)
  store ptr %2023, ptr @"Core:tag:withSymbol:30", align 8
  %2024 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:tag:withValue:4\00", ptr %2024, align 1
  %2025 = call ptr @make_candy_text(ptr %2024)
  store ptr %2025, ptr @"Core:tag:withValue:4", align 8
  %2026 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:tag:withValue:7\00", ptr %2026, align 1
  %2027 = call ptr @make_candy_text(ptr %2026)
  store ptr %2027, ptr @"Core:tag:withValue:7", align 8
  %2028 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:tag:withValue:9\00", ptr %2028, align 1
  %2029 = call ptr @make_candy_text(ptr %2028)
  store ptr %2029, ptr @"Core:tag:withValue:9", align 8
  %2030 = alloca i8, i64 9, align 1
  store [9 x i8] c"HasValue\00", ptr %2030, align 1
  %2031 = call ptr @make_candy_tag(ptr %2030, ptr null)
  store ptr %2031, ptr @tag_HasValue, align 8
  %2032 = alloca i8, i64 10, align 1
  store [10 x i8] c"WithValue\00", ptr %2032, align 1
  %2033 = call ptr @make_candy_tag(ptr %2032, ptr null)
  store ptr %2033, ptr @tag_WithValue, align 8
  %2034 = alloca i8, i64 9, align 1
  store [9 x i8] c"GetValue\00", ptr %2034, align 1
  %2035 = call ptr @make_candy_tag(ptr %2034, ptr null)
  store ptr %2035, ptr @tag_GetValue, align 8
  %2036 = alloca i8, i64 13, align 1
  store [13 x i8] c"WithoutValue\00", ptr %2036, align 1
  %2037 = call ptr @make_candy_tag(ptr %2036, ptr null)
  store ptr %2037, ptr @tag_WithoutValue, align 8
  %2038 = alloca i8, i64 11, align 1
  store [11 x i8] c"WithSymbol\00", ptr %2038, align 1
  %2039 = call ptr @make_candy_tag(ptr %2038, ptr null)
  store ptr %2039, ptr @tag_WithSymbol, align 8
  %2040 = load ptr, ptr @tag_Equals, align 8
  %2041 = call ptr @Builtins__structGet(ptr %997, ptr %2040)
  %2042 = load ptr, ptr @tag_Equals, align 8
  %2043 = call ptr @Builtins__structGet(ptr %997, ptr %2042)
  %2044 = load ptr, ptr @tag_Equals, align 8
  %2045 = call ptr @Builtins__structGet(ptr %997, ptr %2044)
  %2046 = load ptr, ptr @tag_TypeOf, align 8
  %2047 = call ptr @Builtins__structGet(ptr %997, ptr %2046)
  %2048 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2049 = call ptr @Builtins__structGet(ptr %997, ptr %2048)
  %2050 = load ptr, ptr @tag_Equals, align 8
  %2051 = call ptr @Builtins__structGet(ptr %997, ptr %2050)
  %2052 = load ptr, ptr @tag_TypeOf, align 8
  %2053 = call ptr @Builtins__structGet(ptr %997, ptr %2052)
  %2054 = load ptr, ptr @tag_Equals, align 8
  %2055 = call ptr @Builtins__structGet(ptr %997, ptr %2054)
  %2056 = load ptr, ptr @tag_Equals, align 8
  %2057 = call ptr @Builtins__structGet(ptr %997, ptr %2056)
  %2058 = load ptr, ptr @tag_Equals, align 8
  %2059 = call ptr @Builtins__structGet(ptr %997, ptr %2058)
  %2060 = load ptr, ptr @tag_TypeOf, align 8
  %2061 = call ptr @Builtins__structGet(ptr %997, ptr %2060)
  %2062 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2063 = call ptr @Builtins__structGet(ptr %997, ptr %2062)
  %2064 = load ptr, ptr @tag_Equals, align 8
  %2065 = call ptr @Builtins__structGet(ptr %997, ptr %2064)
  %2066 = load ptr, ptr @tag_TypeOf, align 8
  %2067 = call ptr @Builtins__structGet(ptr %997, ptr %2066)
  %2068 = load ptr, ptr @tag_Equals, align 8
  %2069 = call ptr @Builtins__structGet(ptr %997, ptr %2068)
  %2070 = load ptr, ptr @tag_Equals, align 8
  %2071 = call ptr @Builtins__structGet(ptr %997, ptr %2070)
  %2072 = load ptr, ptr @tag_Equals, align 8
  %2073 = call ptr @Builtins__structGet(ptr %997, ptr %2072)
  %2074 = load ptr, ptr @tag_TypeOf, align 8
  %2075 = call ptr @Builtins__structGet(ptr %997, ptr %2074)
  %2076 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2077 = call ptr @Builtins__structGet(ptr %997, ptr %2076)
  %2078 = load ptr, ptr @tag_Equals, align 8
  %2079 = call ptr @Builtins__structGet(ptr %997, ptr %2078)
  %2080 = load ptr, ptr @tag_TypeOf, align 8
  %2081 = call ptr @Builtins__structGet(ptr %997, ptr %2080)
  %2082 = load ptr, ptr @tag_IfElse, align 8
  %2083 = call ptr @Builtins__structGet(ptr %997, ptr %2082)
  %2084 = load ptr, ptr @tag_Equals, align 8
  %2085 = call ptr @Builtins__structGet(ptr %997, ptr %2084)
  %2086 = load ptr, ptr @tag_Equals, align 8
  %2087 = call ptr @Builtins__structGet(ptr %997, ptr %2086)
  %2088 = load ptr, ptr @tag_Equals, align 8
  %2089 = call ptr @Builtins__structGet(ptr %997, ptr %2088)
  %2090 = load ptr, ptr @tag_Equals, align 8
  %2091 = call ptr @Builtins__structGet(ptr %997, ptr %2090)
  %2092 = load ptr, ptr @tag_TypeOf, align 8
  %2093 = call ptr @Builtins__structGet(ptr %997, ptr %2092)
  %2094 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2095 = call ptr @Builtins__structGet(ptr %997, ptr %2094)
  %2096 = load ptr, ptr @tag_Equals, align 8
  %2097 = call ptr @Builtins__structGet(ptr %997, ptr %2096)
  %2098 = load ptr, ptr @tag_TypeOf, align 8
  %2099 = call ptr @Builtins__structGet(ptr %997, ptr %2098)
  %2100 = load ptr, ptr @tag_Equals, align 8
  %2101 = call ptr @Builtins__structGet(ptr %997, ptr %2100)
  %2102 = load ptr, ptr @tag_Equals, align 8
  %2103 = call ptr @Builtins__structGet(ptr %997, ptr %2102)
  %2104 = load ptr, ptr @tag_Equals, align 8
  %2105 = call ptr @Builtins__structGet(ptr %997, ptr %2104)
  %2106 = load ptr, ptr @tag_TypeOf, align 8
  %2107 = call ptr @Builtins__structGet(ptr %997, ptr %2106)
  %2108 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2109 = call ptr @Builtins__structGet(ptr %997, ptr %2108)
  %2110 = load ptr, ptr @tag_Equals, align 8
  %2111 = call ptr @Builtins__structGet(ptr %997, ptr %2110)
  %2112 = load ptr, ptr @tag_TypeOf, align 8
  %2113 = call ptr @Builtins__structGet(ptr %997, ptr %2112)
  %2114 = load ptr, ptr @tag_Equals, align 8
  %2115 = call ptr @Builtins__structGet(ptr %997, ptr %2114)
  %2116 = load ptr, ptr @tag_Equals, align 8
  %2117 = call ptr @Builtins__structGet(ptr %997, ptr %2116)
  %2118 = load ptr, ptr @tag_Equals, align 8
  %2119 = call ptr @Builtins__structGet(ptr %997, ptr %2118)
  %2120 = load ptr, ptr @tag_TypeOf, align 8
  %2121 = call ptr @Builtins__structGet(ptr %997, ptr %2120)
  %2122 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2123 = call ptr @Builtins__structGet(ptr %997, ptr %2122)
  %2124 = load ptr, ptr @tag_Equals, align 8
  %2125 = call ptr @Builtins__structGet(ptr %997, ptr %2124)
  %2126 = load ptr, ptr @tag_TypeOf, align 8
  %2127 = call ptr @Builtins__structGet(ptr %997, ptr %2126)
  %2128 = load ptr, ptr @tag_Equals, align 8
  %2129 = call ptr @Builtins__structGet(ptr %997, ptr %2128)
  %2130 = load ptr, ptr @tag_Equals, align 8
  %2131 = call ptr @Builtins__structGet(ptr %997, ptr %2130)
  %2132 = load ptr, ptr @tag_Equals, align 8
  %2133 = call ptr @Builtins__structGet(ptr %997, ptr %2132)
  %2134 = load ptr, ptr @tag_TypeOf, align 8
  %2135 = call ptr @Builtins__structGet(ptr %997, ptr %2134)
  %2136 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2137 = call ptr @Builtins__structGet(ptr %997, ptr %2136)
  %2138 = load ptr, ptr @tag_Equals, align 8
  %2139 = call ptr @Builtins__structGet(ptr %997, ptr %2138)
  %2140 = load ptr, ptr @tag_TypeOf, align 8
  %2141 = call ptr @Builtins__structGet(ptr %997, ptr %2140)
  %2142 = load ptr, ptr @tag_IfElse, align 8
  %2143 = call ptr @Builtins__structGet(ptr %997, ptr %2142)
  %2144 = load ptr, ptr @tag_Equals, align 8
  %2145 = call ptr @Builtins__structGet(ptr %997, ptr %2144)
  %2146 = load ptr, ptr @tag_Equals, align 8
  %2147 = call ptr @Builtins__structGet(ptr %997, ptr %2146)
  %2148 = load ptr, ptr @tag_Equals, align 8
  %2149 = call ptr @Builtins__structGet(ptr %997, ptr %2148)
  %2150 = load ptr, ptr @tag_TypeOf, align 8
  %2151 = call ptr @Builtins__structGet(ptr %997, ptr %2150)
  %2152 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2153 = call ptr @Builtins__structGet(ptr %997, ptr %2152)
  %2154 = load ptr, ptr @tag_Equals, align 8
  %2155 = call ptr @Builtins__structGet(ptr %997, ptr %2154)
  %2156 = load ptr, ptr @tag_TypeOf, align 8
  %2157 = call ptr @Builtins__structGet(ptr %997, ptr %2156)
  %2158 = load ptr, ptr @tag_Equals, align 8
  %2159 = call ptr @Builtins__structGet(ptr %997, ptr %2158)
  %2160 = load ptr, ptr @tag_Equals, align 8
  %2161 = call ptr @Builtins__structGet(ptr %997, ptr %2160)
  %2162 = load ptr, ptr @tag_Equals, align 8
  %2163 = call ptr @Builtins__structGet(ptr %997, ptr %2162)
  %2164 = load ptr, ptr @tag_TypeOf, align 8
  %2165 = call ptr @Builtins__structGet(ptr %997, ptr %2164)
  %2166 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2167 = call ptr @Builtins__structGet(ptr %997, ptr %2166)
  %2168 = load ptr, ptr @tag_Equals, align 8
  %2169 = call ptr @Builtins__structGet(ptr %997, ptr %2168)
  %2170 = load ptr, ptr @tag_TypeOf, align 8
  %2171 = call ptr @Builtins__structGet(ptr %997, ptr %2170)
  %2172 = load ptr, ptr @tag_IfElse, align 8
  %2173 = call ptr @Builtins__structGet(ptr %997, ptr %2172)
  %2174 = load ptr, ptr @tag_Equals, align 8
  %2175 = call ptr @Builtins__structGet(ptr %997, ptr %2174)
  %2176 = load ptr, ptr @tag_Equals, align 8
  %2177 = call ptr @Builtins__structGet(ptr %997, ptr %2176)
  %2178 = load ptr, ptr @tag_TypeOf, align 8
  %2179 = call ptr @Builtins__structGet(ptr %997, ptr %2178)
  %2180 = load ptr, ptr @tag_IntAdd, align 8
  %2181 = call ptr @Builtins__structGet(ptr %997, ptr %2180)
  %2182 = load ptr, ptr @tag_IntSubtract, align 8
  %2183 = call ptr @Builtins__structGet(ptr %997, ptr %2182)
  %2184 = load ptr, ptr @tag_IntMultiply, align 8
  %2185 = call ptr @Builtins__structGet(ptr %997, ptr %2184)
  %2186 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %2187 = call ptr @Builtins__structGet(ptr %997, ptr %2186)
  %2188 = load ptr, ptr @tag_IntRemainder, align 8
  %2189 = call ptr @Builtins__structGet(ptr %997, ptr %2188)
  %2190 = load ptr, ptr @tag_IntModulo, align 8
  %2191 = call ptr @Builtins__structGet(ptr %997, ptr %2190)
  %2192 = load ptr, ptr @tag_IntShiftLeft, align 8
  %2193 = call ptr @Builtins__structGet(ptr %997, ptr %2192)
  %2194 = load ptr, ptr @tag_IntShiftRight, align 8
  %2195 = call ptr @Builtins__structGet(ptr %997, ptr %2194)
  %2196 = load ptr, ptr @tag_IntBitLength, align 8
  %2197 = call ptr @Builtins__structGet(ptr %997, ptr %2196)
  %2198 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %2199 = call ptr @Builtins__structGet(ptr %997, ptr %2198)
  %2200 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %2201 = call ptr @Builtins__structGet(ptr %997, ptr %2200)
  %2202 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %2203 = call ptr @Builtins__structGet(ptr %997, ptr %2202)
  %2204 = load ptr, ptr @tag_IntParse, align 8
  %2205 = call ptr @Builtins__structGet(ptr %997, ptr %2204)
  %2206 = load ptr, ptr @tag_Equals, align 8
  %2207 = call ptr @Builtins__structGet(ptr %997, ptr %2206)
  %2208 = load ptr, ptr @tag_Equals, align 8
  %2209 = call ptr @Builtins__structGet(ptr %997, ptr %2208)
  %2210 = load ptr, ptr @tag_Equals, align 8
  %2211 = call ptr @Builtins__structGet(ptr %997, ptr %2210)
  %2212 = load ptr, ptr @tag_TypeOf, align 8
  %2213 = call ptr @Builtins__structGet(ptr %997, ptr %2212)
  %2214 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2215 = call ptr @Builtins__structGet(ptr %997, ptr %2214)
  %2216 = load ptr, ptr @tag_Equals, align 8
  %2217 = call ptr @Builtins__structGet(ptr %997, ptr %2216)
  %2218 = load ptr, ptr @tag_TypeOf, align 8
  %2219 = call ptr @Builtins__structGet(ptr %997, ptr %2218)
  %2220 = load ptr, ptr @tag_Equals, align 8
  %2221 = call ptr @Builtins__structGet(ptr %997, ptr %2220)
  %2222 = load ptr, ptr @tag_Equals, align 8
  %2223 = call ptr @Builtins__structGet(ptr %997, ptr %2222)
  %2224 = load ptr, ptr @tag_Equals, align 8
  %2225 = call ptr @Builtins__structGet(ptr %997, ptr %2224)
  %2226 = load ptr, ptr @tag_TypeOf, align 8
  %2227 = call ptr @Builtins__structGet(ptr %997, ptr %2226)
  %2228 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2229 = call ptr @Builtins__structGet(ptr %997, ptr %2228)
  %2230 = load ptr, ptr @tag_Equals, align 8
  %2231 = call ptr @Builtins__structGet(ptr %997, ptr %2230)
  %2232 = load ptr, ptr @tag_TypeOf, align 8
  %2233 = call ptr @Builtins__structGet(ptr %997, ptr %2232)
  %2234 = load ptr, ptr @tag_Equals, align 8
  %2235 = call ptr @Builtins__structGet(ptr %997, ptr %2234)
  %2236 = load ptr, ptr @tag_Equals, align 8
  %2237 = call ptr @Builtins__structGet(ptr %997, ptr %2236)
  %2238 = load ptr, ptr @tag_Equals, align 8
  %2239 = call ptr @Builtins__structGet(ptr %997, ptr %2238)
  %2240 = load ptr, ptr @tag_TypeOf, align 8
  %2241 = call ptr @Builtins__structGet(ptr %997, ptr %2240)
  %2242 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2243 = call ptr @Builtins__structGet(ptr %997, ptr %2242)
  %2244 = load ptr, ptr @tag_Equals, align 8
  %2245 = call ptr @Builtins__structGet(ptr %997, ptr %2244)
  %2246 = load ptr, ptr @tag_TypeOf, align 8
  %2247 = call ptr @Builtins__structGet(ptr %997, ptr %2246)
  %2248 = load ptr, ptr @tag_IfElse, align 8
  %2249 = call ptr @Builtins__structGet(ptr %997, ptr %2248)
  %2250 = load ptr, ptr @tag_Equals, align 8
  %2251 = call ptr @Builtins__structGet(ptr %997, ptr %2250)
  %2252 = load ptr, ptr @tag_Equals, align 8
  %2253 = call ptr @Builtins__structGet(ptr %997, ptr %2252)
  %2254 = load ptr, ptr @tag_Equals, align 8
  %2255 = call ptr @Builtins__structGet(ptr %997, ptr %2254)
  %2256 = load ptr, ptr @tag_TypeOf, align 8
  %2257 = call ptr @Builtins__structGet(ptr %997, ptr %2256)
  %2258 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2259 = call ptr @Builtins__structGet(ptr %997, ptr %2258)
  %2260 = load ptr, ptr @tag_Equals, align 8
  %2261 = call ptr @Builtins__structGet(ptr %997, ptr %2260)
  %2262 = load ptr, ptr @tag_Equals, align 8
  %2263 = call ptr @Builtins__structGet(ptr %997, ptr %2262)
  %2264 = load ptr, ptr @tag_Equals, align 8
  %2265 = call ptr @Builtins__structGet(ptr %997, ptr %2264)
  %2266 = load ptr, ptr @tag_TypeOf, align 8
  %2267 = call ptr @Builtins__structGet(ptr %997, ptr %2266)
  %2268 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2269 = call ptr @Builtins__structGet(ptr %997, ptr %2268)
  %2270 = load ptr, ptr @tag_Equals, align 8
  %2271 = call ptr @Builtins__structGet(ptr %997, ptr %2270)
  %2272 = load ptr, ptr @tag_TypeOf, align 8
  %2273 = call ptr @Builtins__structGet(ptr %997, ptr %2272)
  %2274 = load ptr, ptr @tag_Equals, align 8
  %2275 = call ptr @Builtins__structGet(ptr %997, ptr %2274)
  %2276 = load ptr, ptr @tag_Equals, align 8
  %2277 = call ptr @Builtins__structGet(ptr %997, ptr %2276)
  %2278 = load ptr, ptr @tag_Equals, align 8
  %2279 = call ptr @Builtins__structGet(ptr %997, ptr %2278)
  %2280 = load ptr, ptr @tag_TypeOf, align 8
  %2281 = call ptr @Builtins__structGet(ptr %997, ptr %2280)
  %2282 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2283 = call ptr @Builtins__structGet(ptr %997, ptr %2282)
  %2284 = load ptr, ptr @tag_Equals, align 8
  %2285 = call ptr @Builtins__structGet(ptr %997, ptr %2284)
  %2286 = load ptr, ptr @tag_TypeOf, align 8
  %2287 = call ptr @Builtins__structGet(ptr %997, ptr %2286)
  %2288 = load ptr, ptr @tag_Equals, align 8
  %2289 = call ptr @Builtins__structGet(ptr %997, ptr %2288)
  %2290 = load ptr, ptr @tag_Equals, align 8
  %2291 = call ptr @Builtins__structGet(ptr %997, ptr %2290)
  %2292 = load ptr, ptr @tag_Equals, align 8
  %2293 = call ptr @Builtins__structGet(ptr %997, ptr %2292)
  %2294 = load ptr, ptr @tag_TypeOf, align 8
  %2295 = call ptr @Builtins__structGet(ptr %997, ptr %2294)
  %2296 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2297 = call ptr @Builtins__structGet(ptr %997, ptr %2296)
  %2298 = load ptr, ptr @tag_Equals, align 8
  %2299 = call ptr @Builtins__structGet(ptr %997, ptr %2298)
  %2300 = load ptr, ptr @tag_TypeOf, align 8
  %2301 = call ptr @Builtins__structGet(ptr %997, ptr %2300)
  %2302 = load ptr, ptr @tag_Equals, align 8
  %2303 = call ptr @Builtins__structGet(ptr %997, ptr %2302)
  %2304 = load ptr, ptr @tag_Equals, align 8
  %2305 = call ptr @Builtins__structGet(ptr %997, ptr %2304)
  %2306 = load ptr, ptr @tag_Equals, align 8
  %2307 = call ptr @Builtins__structGet(ptr %997, ptr %2306)
  %2308 = load ptr, ptr @tag_TypeOf, align 8
  %2309 = call ptr @Builtins__structGet(ptr %997, ptr %2308)
  %2310 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2311 = call ptr @Builtins__structGet(ptr %997, ptr %2310)
  %2312 = load ptr, ptr @tag_Equals, align 8
  %2313 = call ptr @Builtins__structGet(ptr %997, ptr %2312)
  %2314 = load ptr, ptr @tag_TypeOf, align 8
  %2315 = call ptr @Builtins__structGet(ptr %997, ptr %2314)
  %2316 = load ptr, ptr @tag_IfElse, align 8
  %2317 = call ptr @Builtins__structGet(ptr %997, ptr %2316)
  %2318 = load ptr, ptr @tag_Equals, align 8
  %2319 = call ptr @Builtins__structGet(ptr %997, ptr %2318)
  %2320 = load ptr, ptr @tag_Equals, align 8
  %2321 = call ptr @Builtins__structGet(ptr %997, ptr %2320)
  %2322 = load ptr, ptr @tag_Equals, align 8
  %2323 = call ptr @Builtins__structGet(ptr %997, ptr %2322)
  %2324 = load ptr, ptr @tag_TypeOf, align 8
  %2325 = call ptr @Builtins__structGet(ptr %997, ptr %2324)
  %2326 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2327 = call ptr @Builtins__structGet(ptr %997, ptr %2326)
  %2328 = load ptr, ptr @tag_Equals, align 8
  %2329 = call ptr @Builtins__structGet(ptr %997, ptr %2328)
  %2330 = load ptr, ptr @tag_TypeOf, align 8
  %2331 = call ptr @Builtins__structGet(ptr %997, ptr %2330)
  %2332 = load ptr, ptr @tag_Equals, align 8
  %2333 = call ptr @Builtins__structGet(ptr %997, ptr %2332)
  %2334 = load ptr, ptr @tag_Equals, align 8
  %2335 = call ptr @Builtins__structGet(ptr %997, ptr %2334)
  %2336 = load ptr, ptr @tag_Equals, align 8
  %2337 = call ptr @Builtins__structGet(ptr %997, ptr %2336)
  %2338 = load ptr, ptr @tag_TypeOf, align 8
  %2339 = call ptr @Builtins__structGet(ptr %997, ptr %2338)
  %2340 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2341 = call ptr @Builtins__structGet(ptr %997, ptr %2340)
  %2342 = load ptr, ptr @tag_Equals, align 8
  %2343 = call ptr @Builtins__structGet(ptr %997, ptr %2342)
  %2344 = load ptr, ptr @tag_TypeOf, align 8
  %2345 = call ptr @Builtins__structGet(ptr %997, ptr %2344)
  %2346 = load ptr, ptr @tag_IfElse, align 8
  %2347 = call ptr @Builtins__structGet(ptr %997, ptr %2346)
  %2348 = load ptr, ptr @tag_Equals, align 8
  %2349 = call ptr @Builtins__structGet(ptr %997, ptr %2348)
  %2350 = load ptr, ptr @tag_Equals, align 8
  %2351 = call ptr @Builtins__structGet(ptr %997, ptr %2350)
  %2352 = load ptr, ptr @tag_TypeOf, align 8
  %2353 = call ptr @Builtins__structGet(ptr %997, ptr %2352)
  %2354 = load ptr, ptr @tag_IntAdd, align 8
  %2355 = call ptr @Builtins__structGet(ptr %997, ptr %2354)
  %2356 = load ptr, ptr @tag_IntSubtract, align 8
  %2357 = call ptr @Builtins__structGet(ptr %997, ptr %2356)
  %2358 = load ptr, ptr @tag_IntMultiply, align 8
  %2359 = call ptr @Builtins__structGet(ptr %997, ptr %2358)
  %2360 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %2361 = call ptr @Builtins__structGet(ptr %997, ptr %2360)
  %2362 = load ptr, ptr @tag_IntRemainder, align 8
  %2363 = call ptr @Builtins__structGet(ptr %997, ptr %2362)
  %2364 = load ptr, ptr @tag_IntModulo, align 8
  %2365 = call ptr @Builtins__structGet(ptr %997, ptr %2364)
  %2366 = load ptr, ptr @tag_IntShiftLeft, align 8
  %2367 = call ptr @Builtins__structGet(ptr %997, ptr %2366)
  %2368 = load ptr, ptr @tag_IntShiftRight, align 8
  %2369 = call ptr @Builtins__structGet(ptr %997, ptr %2368)
  %2370 = load ptr, ptr @tag_IntBitLength, align 8
  %2371 = call ptr @Builtins__structGet(ptr %997, ptr %2370)
  %2372 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %2373 = call ptr @Builtins__structGet(ptr %997, ptr %2372)
  %2374 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %2375 = call ptr @Builtins__structGet(ptr %997, ptr %2374)
  %2376 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %2377 = call ptr @Builtins__structGet(ptr %997, ptr %2376)
  %2378 = load ptr, ptr @tag_IntParse, align 8
  %2379 = call ptr @Builtins__structGet(ptr %997, ptr %2378)
  %2380 = load ptr, ptr @tag_Equals, align 8
  %2381 = call ptr @Builtins__structGet(ptr %997, ptr %2380)
  %2382 = load ptr, ptr @tag_Equals, align 8
  %2383 = call ptr @Builtins__structGet(ptr %997, ptr %2382)
  %2384 = load ptr, ptr @tag_Equals, align 8
  %2385 = call ptr @Builtins__structGet(ptr %997, ptr %2384)
  %2386 = load ptr, ptr @tag_TypeOf, align 8
  %2387 = call ptr @Builtins__structGet(ptr %997, ptr %2386)
  %2388 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2389 = call ptr @Builtins__structGet(ptr %997, ptr %2388)
  %2390 = load ptr, ptr @tag_Equals, align 8
  %2391 = call ptr @Builtins__structGet(ptr %997, ptr %2390)
  %2392 = load ptr, ptr @tag_TypeOf, align 8
  %2393 = call ptr @Builtins__structGet(ptr %997, ptr %2392)
  %2394 = load ptr, ptr @tag_Equals, align 8
  %2395 = call ptr @Builtins__structGet(ptr %997, ptr %2394)
  %2396 = load ptr, ptr @tag_Equals, align 8
  %2397 = call ptr @Builtins__structGet(ptr %997, ptr %2396)
  %2398 = load ptr, ptr @tag_Equals, align 8
  %2399 = call ptr @Builtins__structGet(ptr %997, ptr %2398)
  %2400 = load ptr, ptr @tag_TypeOf, align 8
  %2401 = call ptr @Builtins__structGet(ptr %997, ptr %2400)
  %2402 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2403 = call ptr @Builtins__structGet(ptr %997, ptr %2402)
  %2404 = load ptr, ptr @tag_Equals, align 8
  %2405 = call ptr @Builtins__structGet(ptr %997, ptr %2404)
  %2406 = load ptr, ptr @tag_TypeOf, align 8
  %2407 = call ptr @Builtins__structGet(ptr %997, ptr %2406)
  %2408 = load ptr, ptr @tag_Equals, align 8
  %2409 = call ptr @Builtins__structGet(ptr %997, ptr %2408)
  %2410 = load ptr, ptr @tag_Equals, align 8
  %2411 = call ptr @Builtins__structGet(ptr %997, ptr %2410)
  %2412 = load ptr, ptr @tag_Equals, align 8
  %2413 = call ptr @Builtins__structGet(ptr %997, ptr %2412)
  %2414 = load ptr, ptr @tag_TypeOf, align 8
  %2415 = call ptr @Builtins__structGet(ptr %997, ptr %2414)
  %2416 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2417 = call ptr @Builtins__structGet(ptr %997, ptr %2416)
  %2418 = load ptr, ptr @tag_Equals, align 8
  %2419 = call ptr @Builtins__structGet(ptr %997, ptr %2418)
  %2420 = load ptr, ptr @tag_TypeOf, align 8
  %2421 = call ptr @Builtins__structGet(ptr %997, ptr %2420)
  %2422 = load ptr, ptr @tag_IfElse, align 8
  %2423 = call ptr @Builtins__structGet(ptr %997, ptr %2422)
  %2424 = load ptr, ptr @tag_Equals, align 8
  %2425 = call ptr @Builtins__structGet(ptr %997, ptr %2424)
  %2426 = load ptr, ptr @tag_Equals, align 8
  %2427 = call ptr @Builtins__structGet(ptr %997, ptr %2426)
  %2428 = load ptr, ptr @tag_Equals, align 8
  %2429 = call ptr @Builtins__structGet(ptr %997, ptr %2428)
  %2430 = load ptr, ptr @tag_TypeOf, align 8
  %2431 = call ptr @Builtins__structGet(ptr %997, ptr %2430)
  %2432 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2433 = call ptr @Builtins__structGet(ptr %997, ptr %2432)
  %2434 = load ptr, ptr @tag_Equals, align 8
  %2435 = call ptr @Builtins__structGet(ptr %997, ptr %2434)
  %2436 = load ptr, ptr @tag_Equals, align 8
  %2437 = call ptr @Builtins__structGet(ptr %997, ptr %2436)
  %2438 = load ptr, ptr @tag_Equals, align 8
  %2439 = call ptr @Builtins__structGet(ptr %997, ptr %2438)
  %2440 = load ptr, ptr @tag_TypeOf, align 8
  %2441 = call ptr @Builtins__structGet(ptr %997, ptr %2440)
  %2442 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2443 = call ptr @Builtins__structGet(ptr %997, ptr %2442)
  %2444 = load ptr, ptr @tag_Equals, align 8
  %2445 = call ptr @Builtins__structGet(ptr %997, ptr %2444)
  %2446 = load ptr, ptr @tag_TypeOf, align 8
  %2447 = call ptr @Builtins__structGet(ptr %997, ptr %2446)
  %2448 = load ptr, ptr @tag_Equals, align 8
  %2449 = call ptr @Builtins__structGet(ptr %997, ptr %2448)
  %2450 = load ptr, ptr @tag_Equals, align 8
  %2451 = call ptr @Builtins__structGet(ptr %997, ptr %2450)
  %2452 = load ptr, ptr @tag_Equals, align 8
  %2453 = call ptr @Builtins__structGet(ptr %997, ptr %2452)
  %2454 = load ptr, ptr @tag_TypeOf, align 8
  %2455 = call ptr @Builtins__structGet(ptr %997, ptr %2454)
  %2456 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2457 = call ptr @Builtins__structGet(ptr %997, ptr %2456)
  %2458 = load ptr, ptr @tag_Equals, align 8
  %2459 = call ptr @Builtins__structGet(ptr %997, ptr %2458)
  %2460 = load ptr, ptr @tag_TypeOf, align 8
  %2461 = call ptr @Builtins__structGet(ptr %997, ptr %2460)
  %2462 = load ptr, ptr @tag_IfElse, align 8
  %2463 = call ptr @Builtins__structGet(ptr %997, ptr %2462)
  %2464 = load ptr, ptr @tag_Equals, align 8
  %2465 = call ptr @Builtins__structGet(ptr %997, ptr %2464)
  %2466 = load ptr, ptr @tag_TypeOf, align 8
  %2467 = call ptr @Builtins__structGet(ptr %997, ptr %2466)
  %2468 = load ptr, ptr @tag_Equals, align 8
  %2469 = call ptr @Builtins__structGet(ptr %997, ptr %2468)
  %2470 = load ptr, ptr @tag_Equals, align 8
  %2471 = call ptr @Builtins__structGet(ptr %997, ptr %2470)
  %2472 = load ptr, ptr @tag_Equals, align 8
  %2473 = call ptr @Builtins__structGet(ptr %997, ptr %2472)
  %2474 = load ptr, ptr @tag_TypeOf, align 8
  %2475 = call ptr @Builtins__structGet(ptr %997, ptr %2474)
  %2476 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2477 = call ptr @Builtins__structGet(ptr %997, ptr %2476)
  %2478 = load ptr, ptr @tag_Equals, align 8
  %2479 = call ptr @Builtins__structGet(ptr %997, ptr %2478)
  %2480 = load ptr, ptr @tag_TypeOf, align 8
  %2481 = call ptr @Builtins__structGet(ptr %997, ptr %2480)
  %2482 = load ptr, ptr @tag_Equals, align 8
  %2483 = call ptr @Builtins__structGet(ptr %997, ptr %2482)
  %2484 = load ptr, ptr @tag_Equals, align 8
  %2485 = call ptr @Builtins__structGet(ptr %997, ptr %2484)
  %2486 = load ptr, ptr @tag_Equals, align 8
  %2487 = call ptr @Builtins__structGet(ptr %997, ptr %2486)
  %2488 = load ptr, ptr @tag_TypeOf, align 8
  %2489 = call ptr @Builtins__structGet(ptr %997, ptr %2488)
  %2490 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2491 = call ptr @Builtins__structGet(ptr %997, ptr %2490)
  %2492 = load ptr, ptr @tag_Equals, align 8
  %2493 = call ptr @Builtins__structGet(ptr %997, ptr %2492)
  %2494 = load ptr, ptr @tag_TypeOf, align 8
  %2495 = call ptr @Builtins__structGet(ptr %997, ptr %2494)
  %2496 = load ptr, ptr @tag_Equals, align 8
  %2497 = call ptr @Builtins__structGet(ptr %997, ptr %2496)
  %2498 = load ptr, ptr @tag_Equals, align 8
  %2499 = call ptr @Builtins__structGet(ptr %997, ptr %2498)
  %2500 = load ptr, ptr @tag_Equals, align 8
  %2501 = call ptr @Builtins__structGet(ptr %997, ptr %2500)
  %2502 = load ptr, ptr @tag_TypeOf, align 8
  %2503 = call ptr @Builtins__structGet(ptr %997, ptr %2502)
  %2504 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2505 = call ptr @Builtins__structGet(ptr %997, ptr %2504)
  %2506 = load ptr, ptr @tag_Equals, align 8
  %2507 = call ptr @Builtins__structGet(ptr %997, ptr %2506)
  %2508 = load ptr, ptr @tag_TypeOf, align 8
  %2509 = call ptr @Builtins__structGet(ptr %997, ptr %2508)
  %2510 = load ptr, ptr @tag_IfElse, align 8
  %2511 = call ptr @Builtins__structGet(ptr %997, ptr %2510)
  %2512 = load ptr, ptr @tag_Equals, align 8
  %2513 = call ptr @Builtins__structGet(ptr %997, ptr %2512)
  %2514 = load ptr, ptr @tag_TypeOf, align 8
  %2515 = call ptr @Builtins__structGet(ptr %997, ptr %2514)
  %2516 = load ptr, ptr @tag_TagHasValue, align 8
  %2517 = call ptr @Builtins__structGet(ptr %997, ptr %2516)
  %2518 = load ptr, ptr @tag_TagWithoutValue, align 8
  %2519 = call ptr @Builtins__structGet(ptr %997, ptr %2518)
  %2520 = load ptr, ptr @tag_TagGetValue, align 8
  %2521 = call ptr @Builtins__structGet(ptr %997, ptr %2520)
  %2522 = load ptr, ptr @tag_Equals, align 8
  %2523 = call ptr @Builtins__structGet(ptr %997, ptr %2522)
  %2524 = load ptr, ptr @tag_TypeOf, align 8
  %2525 = call ptr @Builtins__structGet(ptr %997, ptr %2524)
  %2526 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %2526, align 1
  %2527 = call ptr @make_candy_text(ptr %2526)
  store ptr %2527, ptr @"Core:result:is:1", align 8
  %2528 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %2528, align 1
  %2529 = call ptr @make_candy_tag(ptr %2528, ptr null)
  store ptr %2529, ptr @tag_Ok, align 8
  %2530 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %2530, align 1
  %2531 = call ptr @make_candy_text(ptr %2530)
  store ptr %2531, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %2532 = alloca ptr, i64 3, align 8
  %2533 = load ptr, ptr @tag_NoMatch, align 8
  %2534 = getelementptr ptr, ptr %2532, i64 0
  store ptr %2533, ptr %2534, align 8
  %2535 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %2536 = getelementptr ptr, ptr %2532, i64 1
  store ptr %2535, ptr %2536, align 8
  %2537 = getelementptr ptr, ptr %2532, i64 2
  store ptr null, ptr %2537, align 8
  %2538 = call ptr @make_candy_list(ptr %2532)
  store ptr %2538, ptr @37, align 8
  %2539 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %2539, align 1
  %2540 = call ptr @make_candy_text(ptr %2539)
  store ptr %2540, ptr @"text_Expected Ok, got ", align 8
  %2541 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %2541, align 1
  %2542 = call ptr @make_candy_tag(ptr %2541, ptr null)
  store ptr %2542, ptr @tag_Error, align 8
  %2543 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %2543, align 1
  %2544 = call ptr @make_candy_text(ptr %2543)
  store ptr %2544, ptr @"text_Expected Error, got ", align 8
  %2545 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:is:1:_\00", ptr %2545, align 1
  %2546 = call ptr @make_candy_text(ptr %2545)
  store ptr %2546, ptr @"Core:result:is:1:_", align 8
  %2547 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2548 = call ptr @make_candy_function(ptr @Core_result_is, ptr %2547, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2548, ptr @fun_Core_result_is, align 8
  %2549 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:getValue:2\00", ptr %2549, align 1
  %2550 = call ptr @make_candy_text(ptr %2549)
  store ptr %2550, ptr @"Core:result:getValue:2", align 8
  %2551 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %2551, align 1
  %2552 = call ptr @make_candy_text(ptr %2551)
  store ptr %2552, ptr @"text_`is result` was not satisfied", align 8
  %2553 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:getValue:4\00", ptr %2553, align 1
  %2554 = call ptr @make_candy_text(ptr %2553)
  store ptr %2554, ptr @"Core:result:getValue:4", align 8
  %2555 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:getValue:13\00", ptr %2555, align 1
  %2556 = call ptr @make_candy_text(ptr %2555)
  store ptr %2556, ptr @"Core:result:getValue:13", align 8
  %2557 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:getValue:14\00", ptr %2557, align 1
  %2558 = call ptr @make_candy_text(ptr %2557)
  store ptr %2558, ptr @"Core:result:getValue:14", align 8
  %2559 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:isOk:2\00", ptr %2559, align 1
  %2560 = call ptr @make_candy_text(ptr %2559)
  store ptr %2560, ptr @"Core:result:isOk:2", align 8
  %2561 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:isOk:4\00", ptr %2561, align 1
  %2562 = call ptr @make_candy_text(ptr %2561)
  store ptr %2562, ptr @"Core:result:isOk:4", align 8
  %2563 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:isOk:13\00", ptr %2563, align 1
  %2564 = call ptr @make_candy_text(ptr %2563)
  store ptr %2564, ptr @"Core:result:isOk:13", align 8
  %2565 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:isOk:14\00", ptr %2565, align 1
  %2566 = call ptr @make_candy_text(ptr %2565)
  store ptr %2566, ptr @"Core:result:isOk:14", align 8
  %2567 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:isOk:17\00", ptr %2567, align 1
  %2568 = call ptr @make_candy_text(ptr %2567)
  store ptr %2568, ptr @"Core:result:isOk:17", align 8
  %2569 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:2\00", ptr %2569, align 1
  %2570 = call ptr @make_candy_text(ptr %2569)
  store ptr %2570, ptr @"Core:result:unwrap:2", align 8
  %2571 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:4\00", ptr %2571, align 1
  %2572 = call ptr @make_candy_text(ptr %2571)
  store ptr %2572, ptr @"Core:result:unwrap:4", align 8
  %2573 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:7\00", ptr %2573, align 1
  %2574 = call ptr @make_candy_text(ptr %2573)
  store ptr %2574, ptr @"Core:result:unwrap:7", align 8
  %2575 = alloca i8, i64 32, align 1
  store [32 x i8] c"`isOk result` was not satisfied\00", ptr %2575, align 1
  %2576 = call ptr @make_candy_text(ptr %2575)
  store ptr %2576, ptr @"text_`isOk result` was not satisfied", align 8
  %2577 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:9\00", ptr %2577, align 1
  %2578 = call ptr @make_candy_text(ptr %2577)
  store ptr %2578, ptr @"Core:result:unwrap:9", align 8
  %2579 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:unwrap:12\00", ptr %2579, align 1
  %2580 = call ptr @make_candy_text(ptr %2579)
  store ptr %2580, ptr @"Core:result:unwrap:12", align 8
  %2581 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:expect:2\00", ptr %2581, align 1
  %2582 = call ptr @make_candy_text(ptr %2581)
  store ptr %2582, ptr @"Core:result:expect:2", align 8
  %2583 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:expect:4\00", ptr %2583, align 1
  %2584 = call ptr @make_candy_text(ptr %2583)
  store ptr %2584, ptr @"Core:result:expect:4", align 8
  %2585 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:12\00", ptr %2585, align 1
  %2586 = call ptr @make_candy_text(ptr %2585)
  store ptr %2586, ptr @"Core:result:expect:12", align 8
  %2587 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:15\00", ptr %2587, align 1
  %2588 = call ptr @make_candy_text(ptr %2587)
  store ptr %2588, ptr @"Core:result:expect:15", align 8
  %2589 = alloca i8, i64 41, align 1
  store [41 x i8] c"`type.is message Text` was not satisfied\00", ptr %2589, align 1
  %2590 = call ptr @make_candy_text(ptr %2589)
  store ptr %2590, ptr @"text_`type.is message Text` was not satisfied", align 8
  %2591 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:17\00", ptr %2591, align 1
  %2592 = call ptr @make_candy_text(ptr %2591)
  store ptr %2592, ptr @"Core:result:expect:17", align 8
  %2593 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:20\00", ptr %2593, align 1
  %2594 = call ptr @make_candy_text(ptr %2593)
  store ptr %2594, ptr @"Core:result:expect:20", align 8
  %2595 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:22\00", ptr %2595, align 1
  %2596 = call ptr @make_candy_text(ptr %2595)
  store ptr %2596, ptr @"Core:result:expect:22", align 8
  %2597 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:expect:25\00", ptr %2597, align 1
  %2598 = call ptr @make_candy_text(ptr %2597)
  store ptr %2598, ptr @"Core:result:expect:25", align 8
  %2599 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:isError:2\00", ptr %2599, align 1
  %2600 = call ptr @make_candy_text(ptr %2599)
  store ptr %2600, ptr @"Core:result:isError:2", align 8
  %2601 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:isError:4\00", ptr %2601, align 1
  %2602 = call ptr @make_candy_text(ptr %2601)
  store ptr %2602, ptr @"Core:result:isError:4", align 8
  %2603 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:isError:13\00", ptr %2603, align 1
  %2604 = call ptr @make_candy_text(ptr %2603)
  store ptr %2604, ptr @"Core:result:isError:13", align 8
  %2605 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:isError:14\00", ptr %2605, align 1
  %2606 = call ptr @make_candy_text(ptr %2605)
  store ptr %2606, ptr @"Core:result:isError:14", align 8
  %2607 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:isError:17\00", ptr %2607, align 1
  %2608 = call ptr @make_candy_text(ptr %2607)
  store ptr %2608, ptr @"Core:result:isError:17", align 8
  %2609 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:2\00", ptr %2609, align 1
  %2610 = call ptr @make_candy_text(ptr %2609)
  store ptr %2610, ptr @"Core:result:unwrapError:2", align 8
  %2611 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:4\00", ptr %2611, align 1
  %2612 = call ptr @make_candy_text(ptr %2611)
  store ptr %2612, ptr @"Core:result:unwrapError:4", align 8
  %2613 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:7\00", ptr %2613, align 1
  %2614 = call ptr @make_candy_text(ptr %2613)
  store ptr %2614, ptr @"Core:result:unwrapError:7", align 8
  %2615 = alloca i8, i64 35, align 1
  store [35 x i8] c"`isError result` was not satisfied\00", ptr %2615, align 1
  %2616 = call ptr @make_candy_text(ptr %2615)
  store ptr %2616, ptr @"text_`isError result` was not satisfied", align 8
  %2617 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:unwrapError:9\00", ptr %2617, align 1
  %2618 = call ptr @make_candy_text(ptr %2617)
  store ptr %2618, ptr @"Core:result:unwrapError:9", align 8
  %2619 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapError:12\00", ptr %2619, align 1
  %2620 = call ptr @make_candy_text(ptr %2619)
  store ptr %2620, ptr @"Core:result:unwrapError:12", align 8
  %2621 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:expectError:2\00", ptr %2621, align 1
  %2622 = call ptr @make_candy_text(ptr %2621)
  store ptr %2622, ptr @"Core:result:expectError:2", align 8
  %2623 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:expectError:4\00", ptr %2623, align 1
  %2624 = call ptr @make_candy_text(ptr %2623)
  store ptr %2624, ptr @"Core:result:expectError:4", align 8
  %2625 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:12\00", ptr %2625, align 1
  %2626 = call ptr @make_candy_text(ptr %2625)
  store ptr %2626, ptr @"Core:result:expectError:12", align 8
  %2627 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:15\00", ptr %2627, align 1
  %2628 = call ptr @make_candy_text(ptr %2627)
  store ptr %2628, ptr @"Core:result:expectError:15", align 8
  %2629 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:17\00", ptr %2629, align 1
  %2630 = call ptr @make_candy_text(ptr %2629)
  store ptr %2630, ptr @"Core:result:expectError:17", align 8
  %2631 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:20\00", ptr %2631, align 1
  %2632 = call ptr @make_candy_text(ptr %2631)
  store ptr %2632, ptr @"Core:result:expectError:20", align 8
  %2633 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:22\00", ptr %2633, align 1
  %2634 = call ptr @make_candy_text(ptr %2633)
  store ptr %2634, ptr @"Core:result:expectError:22", align 8
  %2635 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:expectError:25\00", ptr %2635, align 1
  %2636 = call ptr @make_candy_text(ptr %2635)
  store ptr %2636, ptr @"Core:result:expectError:25", align 8
  %2637 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:2\00", ptr %2637, align 1
  %2638 = call ptr @make_candy_text(ptr %2637)
  store ptr %2638, ptr @"Core:result:mapOrElse:2", align 8
  %2639 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %2639, align 1
  %2640 = call ptr @make_candy_text(ptr %2639)
  store ptr %2640, ptr @"Core:result:mapOrElse:4", align 8
  %2641 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:12\00", ptr %2641, align 1
  %2642 = call ptr @make_candy_text(ptr %2641)
  store ptr %2642, ptr @"Core:result:mapOrElse:12", align 8
  %2643 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %2643, align 1
  %2644 = call ptr @make_candy_text(ptr %2643)
  store ptr %2644, ptr @"Core:result:mapOrElse:14", align 8
  %2645 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %2645, align 1
  %2646 = call ptr @make_candy_text(ptr %2645)
  store ptr %2646, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %2647 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %2647, align 1
  %2648 = call ptr @make_candy_text(ptr %2647)
  store ptr %2648, ptr @"Core:result:mapOrElse:16", align 8
  %2649 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:24\00", ptr %2649, align 1
  %2650 = call ptr @make_candy_text(ptr %2649)
  store ptr %2650, ptr @"Core:result:mapOrElse:24", align 8
  %2651 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %2651, align 1
  %2652 = call ptr @make_candy_text(ptr %2651)
  store ptr %2652, ptr @"Core:result:mapOrElse:26", align 8
  %2653 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %2653, align 1
  %2654 = call ptr @make_candy_text(ptr %2653)
  store ptr %2654, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %2655 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %2655, align 1
  %2656 = call ptr @make_candy_text(ptr %2655)
  store ptr %2656, ptr @"Core:result:mapOrElse:28", align 8
  %2657 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %2657, align 1
  %2658 = call ptr @make_candy_text(ptr %2657)
  store ptr %2658, ptr @"Core:result:mapOrElse:30", align 8
  %2659 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %2659, align 1
  %2660 = call ptr @make_candy_text(ptr %2659)
  store ptr %2660, ptr @"Core:result:mapOrElse:30:value", align 8
  %2661 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %2661, align 1
  %2662 = call ptr @make_candy_text(ptr %2661)
  store ptr %2662, ptr @"Core:result:mapOrElse:30:2", align 8
  %2663 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %2663, align 1
  %2664 = call ptr @make_candy_text(ptr %2663)
  store ptr %2664, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %2665 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %2665, align 1
  %2666 = call ptr @make_candy_text(ptr %2665)
  store ptr %2666, ptr @"Core:result:mapOrElse:30:5", align 8
  %2667 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:2\00", ptr %2667, align 1
  %2668 = call ptr @make_candy_text(ptr %2667)
  store ptr %2668, ptr @"Core:result:mapOr:2", align 8
  %2669 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:4\00", ptr %2669, align 1
  %2670 = call ptr @make_candy_text(ptr %2669)
  store ptr %2670, ptr @"Core:result:mapOr:4", align 8
  %2671 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:12\00", ptr %2671, align 1
  %2672 = call ptr @make_candy_text(ptr %2671)
  store ptr %2672, ptr @"Core:result:mapOr:12", align 8
  %2673 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:14\00", ptr %2673, align 1
  %2674 = call ptr @make_candy_text(ptr %2673)
  store ptr %2674, ptr @"Core:result:mapOr:14", align 8
  %2675 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:16\00", ptr %2675, align 1
  %2676 = call ptr @make_candy_text(ptr %2675)
  store ptr %2676, ptr @"Core:result:mapOr:16", align 8
  %2677 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:21\00", ptr %2677, align 1
  %2678 = call ptr @make_candy_text(ptr %2677)
  store ptr %2678, ptr @"Core:result:mapOr:21", align 8
  %2679 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:2\00", ptr %2679, align 1
  %2680 = call ptr @make_candy_text(ptr %2679)
  store ptr %2680, ptr @"Core:result:flatMap:2", align 8
  %2681 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:4\00", ptr %2681, align 1
  %2682 = call ptr @make_candy_text(ptr %2681)
  store ptr %2682, ptr @"Core:result:flatMap:4", align 8
  %2683 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:12\00", ptr %2683, align 1
  %2684 = call ptr @make_candy_text(ptr %2683)
  store ptr %2684, ptr @"Core:result:flatMap:12", align 8
  %2685 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:14\00", ptr %2685, align 1
  %2686 = call ptr @make_candy_text(ptr %2685)
  store ptr %2686, ptr @"Core:result:flatMap:14", align 8
  %2687 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:16\00", ptr %2687, align 1
  %2688 = call ptr @make_candy_text(ptr %2687)
  store ptr %2688, ptr @"Core:result:flatMap:16", align 8
  %2689 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:flatMap:19:2\00", ptr %2689, align 1
  %2690 = call ptr @make_candy_text(ptr %2689)
  store ptr %2690, ptr @"Core:result:flatMap:19:2", align 8
  %2691 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:21\00", ptr %2691, align 1
  %2692 = call ptr @make_candy_text(ptr %2691)
  store ptr %2692, ptr @"Core:result:flatMap:21", align 8
  %2693 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:2\00", ptr %2693, align 1
  %2694 = call ptr @make_candy_text(ptr %2693)
  store ptr %2694, ptr @"Core:result:map:2", align 8
  %2695 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:4\00", ptr %2695, align 1
  %2696 = call ptr @make_candy_text(ptr %2695)
  store ptr %2696, ptr @"Core:result:map:4", align 8
  %2697 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:12\00", ptr %2697, align 1
  %2698 = call ptr @make_candy_text(ptr %2697)
  store ptr %2698, ptr @"Core:result:map:12", align 8
  %2699 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:14\00", ptr %2699, align 1
  %2700 = call ptr @make_candy_text(ptr %2699)
  store ptr %2700, ptr @"Core:result:map:14", align 8
  %2701 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:16\00", ptr %2701, align 1
  %2702 = call ptr @make_candy_text(ptr %2701)
  store ptr %2702, ptr @"Core:result:map:16", align 8
  %2703 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:map:19:3\00", ptr %2703, align 1
  %2704 = call ptr @make_candy_text(ptr %2703)
  store ptr %2704, ptr @"Core:result:map:19:3", align 8
  %2705 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:20\00", ptr %2705, align 1
  %2706 = call ptr @make_candy_text(ptr %2705)
  store ptr %2706, ptr @"Core:result:map:20", align 8
  %2707 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:2\00", ptr %2707, align 1
  %2708 = call ptr @make_candy_text(ptr %2707)
  store ptr %2708, ptr @"Core:result:and:2", align 8
  %2709 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is resultA` was not satisfied\00", ptr %2709, align 1
  %2710 = call ptr @make_candy_text(ptr %2709)
  store ptr %2710, ptr @"text_`is resultA` was not satisfied", align 8
  %2711 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:4\00", ptr %2711, align 1
  %2712 = call ptr @make_candy_text(ptr %2711)
  store ptr %2712, ptr @"Core:result:and:4", align 8
  %2713 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:7\00", ptr %2713, align 1
  %2714 = call ptr @make_candy_text(ptr %2713)
  store ptr %2714, ptr @"Core:result:and:7", align 8
  %2715 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is resultB` was not satisfied\00", ptr %2715, align 1
  %2716 = call ptr @make_candy_text(ptr %2715)
  store ptr %2716, ptr @"text_`is resultB` was not satisfied", align 8
  %2717 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:and:9\00", ptr %2717, align 1
  %2718 = call ptr @make_candy_text(ptr %2717)
  store ptr %2718, ptr @"Core:result:and:9", align 8
  %2719 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:and:13\00", ptr %2719, align 1
  %2720 = call ptr @make_candy_text(ptr %2719)
  store ptr %2720, ptr @"Core:result:and:13", align 8
  %2721 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:flatMapError:2\00", ptr %2721, align 1
  %2722 = call ptr @make_candy_text(ptr %2721)
  store ptr %2722, ptr @"Core:result:flatMapError:2", align 8
  %2723 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:flatMapError:4\00", ptr %2723, align 1
  %2724 = call ptr @make_candy_text(ptr %2723)
  store ptr %2724, ptr @"Core:result:flatMapError:4", align 8
  %2725 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:12\00", ptr %2725, align 1
  %2726 = call ptr @make_candy_text(ptr %2725)
  store ptr %2726, ptr @"Core:result:flatMapError:12", align 8
  %2727 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:14\00", ptr %2727, align 1
  %2728 = call ptr @make_candy_text(ptr %2727)
  store ptr %2728, ptr @"Core:result:flatMapError:14", align 8
  %2729 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:16\00", ptr %2729, align 1
  %2730 = call ptr @make_candy_text(ptr %2729)
  store ptr %2730, ptr @"Core:result:flatMapError:16", align 8
  %2731 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:flatMapError:20:2\00", ptr %2731, align 1
  %2732 = call ptr @make_candy_text(ptr %2731)
  store ptr %2732, ptr @"Core:result:flatMapError:20:2", align 8
  %2733 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:flatMapError:21\00", ptr %2733, align 1
  %2734 = call ptr @make_candy_text(ptr %2733)
  store ptr %2734, ptr @"Core:result:flatMapError:21", align 8
  %2735 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:mapError:2\00", ptr %2735, align 1
  %2736 = call ptr @make_candy_text(ptr %2735)
  store ptr %2736, ptr @"Core:result:mapError:2", align 8
  %2737 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:mapError:4\00", ptr %2737, align 1
  %2738 = call ptr @make_candy_text(ptr %2737)
  store ptr %2738, ptr @"Core:result:mapError:4", align 8
  %2739 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:12\00", ptr %2739, align 1
  %2740 = call ptr @make_candy_text(ptr %2739)
  store ptr %2740, ptr @"Core:result:mapError:12", align 8
  %2741 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:14\00", ptr %2741, align 1
  %2742 = call ptr @make_candy_text(ptr %2741)
  store ptr %2742, ptr @"Core:result:mapError:14", align 8
  %2743 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:16\00", ptr %2743, align 1
  %2744 = call ptr @make_candy_text(ptr %2743)
  store ptr %2744, ptr @"Core:result:mapError:16", align 8
  %2745 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:result:mapError:19:3\00", ptr %2745, align 1
  %2746 = call ptr @make_candy_text(ptr %2745)
  store ptr %2746, ptr @"Core:result:mapError:19:3", align 8
  %2747 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapError:20\00", ptr %2747, align 1
  %2748 = call ptr @make_candy_text(ptr %2747)
  store ptr %2748, ptr @"Core:result:mapError:20", align 8
  %2749 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:2\00", ptr %2749, align 1
  %2750 = call ptr @make_candy_text(ptr %2749)
  store ptr %2750, ptr @"Core:result:or:2", align 8
  %2751 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:4\00", ptr %2751, align 1
  %2752 = call ptr @make_candy_text(ptr %2751)
  store ptr %2752, ptr @"Core:result:or:4", align 8
  %2753 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:7\00", ptr %2753, align 1
  %2754 = call ptr @make_candy_text(ptr %2753)
  store ptr %2754, ptr @"Core:result:or:7", align 8
  %2755 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:or:9\00", ptr %2755, align 1
  %2756 = call ptr @make_candy_text(ptr %2755)
  store ptr %2756, ptr @"Core:result:or:9", align 8
  %2757 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:or:13\00", ptr %2757, align 1
  %2758 = call ptr @make_candy_text(ptr %2757)
  store ptr %2758, ptr @"Core:result:or:13", align 8
  %2759 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:2\00", ptr %2759, align 1
  %2760 = call ptr @make_candy_text(ptr %2759)
  store ptr %2760, ptr @"Core:result:unwrapOrElse:2", align 8
  %2761 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %2761, align 1
  %2762 = call ptr @make_candy_text(ptr %2761)
  store ptr %2762, ptr @"Core:result:unwrapOrElse:4", align 8
  %2763 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:12\00", ptr %2763, align 1
  %2764 = call ptr @make_candy_text(ptr %2763)
  store ptr %2764, ptr @"Core:result:unwrapOrElse:12", align 8
  %2765 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:14\00", ptr %2765, align 1
  %2766 = call ptr @make_candy_text(ptr %2765)
  store ptr %2766, ptr @"Core:result:unwrapOrElse:14", align 8
  %2767 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function.is0 defaultGetter` was not satisfied\00", ptr %2767, align 1
  %2768 = call ptr @make_candy_text(ptr %2767)
  store ptr %2768, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %2769 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:16\00", ptr %2769, align 1
  %2770 = call ptr @make_candy_text(ptr %2769)
  store ptr %2770, ptr @"Core:result:unwrapOrElse:16", align 8
  %2771 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2772 = call ptr @make_candy_function(ptr @"Core_iterable_range_38, Core_result_unwrapOrElse_19", ptr %2771, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2772, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19", align 8
  %2773 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:20:7\00", ptr %2773, align 1
  %2774 = call ptr @make_candy_text(ptr %2773)
  store ptr %2774, ptr @"Core:result:unwrapOrElse:20:7", align 8
  %2775 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:20:9\00", ptr %2775, align 1
  %2776 = call ptr @make_candy_text(ptr %2775)
  store ptr %2776, ptr @"Core:result:unwrapOrElse:20:9", align 8
  %2777 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:21\00", ptr %2777, align 1
  %2778 = call ptr @make_candy_text(ptr %2777)
  store ptr %2778, ptr @"Core:result:unwrapOrElse:21", align 8
  %2779 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:2\00", ptr %2779, align 1
  %2780 = call ptr @make_candy_text(ptr %2779)
  store ptr %2780, ptr @"Core:result:unwrapOr:2", align 8
  %2781 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %2781, align 1
  %2782 = call ptr @make_candy_text(ptr %2781)
  store ptr %2782, ptr @"Core:result:unwrapOr:4", align 8
  %2783 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %2783, align 1
  %2784 = call ptr @make_candy_text(ptr %2783)
  store ptr %2784, ptr @"Core:result:unwrapOr:8", align 8
  %2785 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatten:2\00", ptr %2785, align 1
  %2786 = call ptr @make_candy_text(ptr %2785)
  store ptr %2786, ptr @"Core:result:flatten:2", align 8
  %2787 = alloca i8, i64 38, align 1
  store [38 x i8] c"`is resultOfResult` was not satisfied\00", ptr %2787, align 1
  %2788 = call ptr @make_candy_text(ptr %2787)
  store ptr %2788, ptr @"text_`is resultOfResult` was not satisfied", align 8
  %2789 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatten:4\00", ptr %2789, align 1
  %2790 = call ptr @make_candy_text(ptr %2789)
  store ptr %2790, ptr @"Core:result:flatten:4", align 8
  %2791 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:flatten:7:2\00", ptr %2791, align 1
  %2792 = call ptr @make_candy_text(ptr %2791)
  store ptr %2792, ptr @"Core:result:flatten:7:2", align 8
  %2793 = alloca i8, i64 35, align 1
  store [35 x i8] c"`is innerResult` was not satisfied\00", ptr %2793, align 1
  %2794 = call ptr @make_candy_text(ptr %2793)
  store ptr %2794, ptr @"text_`is innerResult` was not satisfied", align 8
  %2795 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:flatten:7:4\00", ptr %2795, align 1
  %2796 = call ptr @make_candy_text(ptr %2795)
  store ptr %2796, ptr @"Core:result:flatten:7:4", align 8
  %2797 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatten:8\00", ptr %2797, align 1
  %2798 = call ptr @make_candy_text(ptr %2797)
  store ptr %2798, ptr @"Core:result:flatten:8", align 8
  %2799 = alloca i8, i64 9, align 1
  store [9 x i8] c"UnwrapOr\00", ptr %2799, align 1
  %2800 = call ptr @make_candy_tag(ptr %2799, ptr null)
  store ptr %2800, ptr @tag_UnwrapOr, align 8
  %2801 = alloca i8, i64 7, align 1
  store [7 x i8] c"Expect\00", ptr %2801, align 1
  %2802 = call ptr @make_candy_tag(ptr %2801, ptr null)
  store ptr %2802, ptr @tag_Expect, align 8
  %2803 = alloca i8, i64 8, align 1
  store [8 x i8] c"Flatten\00", ptr %2803, align 1
  %2804 = call ptr @make_candy_tag(ptr %2803, ptr null)
  store ptr %2804, ptr @tag_Flatten, align 8
  %2805 = alloca i8, i64 10, align 1
  store [10 x i8] c"MapOrElse\00", ptr %2805, align 1
  %2806 = call ptr @make_candy_tag(ptr %2805, ptr null)
  store ptr %2806, ptr @tag_MapOrElse, align 8
  %2807 = alloca i8, i64 4, align 1
  store [4 x i8] c"Map\00", ptr %2807, align 1
  %2808 = call ptr @make_candy_tag(ptr %2807, ptr null)
  store ptr %2808, ptr @tag_Map, align 8
  %2809 = alloca i8, i64 8, align 1
  store [8 x i8] c"IsError\00", ptr %2809, align 1
  %2810 = call ptr @make_candy_tag(ptr %2809, ptr null)
  store ptr %2810, ptr @tag_IsError, align 8
  %2811 = alloca i8, i64 8, align 1
  store [8 x i8] c"FlatMap\00", ptr %2811, align 1
  %2812 = call ptr @make_candy_tag(ptr %2811, ptr null)
  store ptr %2812, ptr @tag_FlatMap, align 8
  %2813 = alloca i8, i64 12, align 1
  store [12 x i8] c"ExpectError\00", ptr %2813, align 1
  %2814 = call ptr @make_candy_tag(ptr %2813, ptr null)
  store ptr %2814, ptr @tag_ExpectError, align 8
  %2815 = alloca i8, i64 12, align 1
  store [12 x i8] c"UnwrapError\00", ptr %2815, align 1
  %2816 = call ptr @make_candy_tag(ptr %2815, ptr null)
  store ptr %2816, ptr @tag_UnwrapError, align 8
  %2817 = alloca i8, i64 13, align 1
  store [13 x i8] c"UnwrapOrElse\00", ptr %2817, align 1
  %2818 = call ptr @make_candy_tag(ptr %2817, ptr null)
  store ptr %2818, ptr @tag_UnwrapOrElse, align 8
  %2819 = alloca i8, i64 7, align 1
  store [7 x i8] c"Unwrap\00", ptr %2819, align 1
  %2820 = call ptr @make_candy_tag(ptr %2819, ptr null)
  store ptr %2820, ptr @tag_Unwrap, align 8
  %2821 = alloca i8, i64 6, align 1
  store [6 x i8] c"MapOr\00", ptr %2821, align 1
  %2822 = call ptr @make_candy_tag(ptr %2821, ptr null)
  store ptr %2822, ptr @tag_MapOr, align 8
  %2823 = alloca i8, i64 13, align 1
  store [13 x i8] c"FlatMapError\00", ptr %2823, align 1
  %2824 = call ptr @make_candy_tag(ptr %2823, ptr null)
  store ptr %2824, ptr @tag_FlatMapError, align 8
  %2825 = alloca i8, i64 9, align 1
  store [9 x i8] c"MapError\00", ptr %2825, align 1
  %2826 = call ptr @make_candy_tag(ptr %2825, ptr null)
  store ptr %2826, ptr @tag_MapError, align 8
  %2827 = alloca i8, i64 5, align 1
  store [5 x i8] c"IsOk\00", ptr %2827, align 1
  %2828 = call ptr @make_candy_tag(ptr %2827, ptr null)
  store ptr %2828, ptr @tag_IsOk, align 8
  %2829 = load ptr, ptr @tag_Equals, align 8
  %2830 = call ptr @Builtins__structGet(ptr %997, ptr %2829)
  %2831 = load ptr, ptr @tag_TypeOf, align 8
  %2832 = call ptr @Builtins__structGet(ptr %997, ptr %2831)
  %2833 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:list:89\00", ptr %2833, align 1
  %2834 = call ptr @make_candy_text(ptr %2833)
  store ptr %2834, ptr @"Core:list:89", align 8
  %2835 = load ptr, ptr @tag_ListLength, align 8
  %2836 = call ptr @Builtins__structGet(ptr %997, ptr %2835)
  %2837 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:list:98\00", ptr %2837, align 1
  %2838 = call ptr @make_candy_text(ptr %2837)
  store ptr %2838, ptr @"Core:list:98", align 8
  %2839 = load ptr, ptr @tag_ListGet, align 8
  %2840 = call ptr @Builtins__structGet(ptr %997, ptr %2839)
  %2841 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected a List, got `\00", ptr %2841, align 1
  %2842 = call ptr @make_candy_text(ptr %2841)
  store ptr %2842, ptr @"text_Expected a List, got `", align 8
  %2843 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected 1 item, got \00", ptr %2843, align 1
  %2844 = call ptr @make_candy_text(ptr %2843)
  store ptr %2844, ptr @"text_Expected 1 item, got ", align 8
  %2845 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:107\00", ptr %2845, align 1
  %2846 = call ptr @make_candy_text(ptr %2845)
  store ptr %2846, ptr @"Core:list:107", align 8
  %2847 = load ptr, ptr @tag_ListInsert, align 8
  %2848 = call ptr @Builtins__structGet(ptr %997, ptr %2847)
  %2849 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:116\00", ptr %2849, align 1
  %2850 = call ptr @make_candy_text(ptr %2849)
  store ptr %2850, ptr @"Core:list:116", align 8
  %2851 = load ptr, ptr @tag_ListReplace, align 8
  %2852 = call ptr @Builtins__structGet(ptr %997, ptr %2851)
  %2853 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:125\00", ptr %2853, align 1
  %2854 = call ptr @make_candy_text(ptr %2853)
  store ptr %2854, ptr @"Core:list:125", align 8
  %2855 = load ptr, ptr @tag_ListRemoveAt, align 8
  %2856 = call ptr @Builtins__structGet(ptr %997, ptr %2855)
  %2857 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:134\00", ptr %2857, align 1
  %2858 = call ptr @make_candy_text(ptr %2857)
  store ptr %2858, ptr @"Core:list:134", align 8
  %2859 = load ptr, ptr @tag_ListFilled, align 8
  %2860 = call ptr @Builtins__structGet(ptr %997, ptr %2859)
  %2861 = load ptr, ptr @tag_Equals, align 8
  %2862 = call ptr @Builtins__structGet(ptr %997, ptr %2861)
  %2863 = load ptr, ptr @tag_Equals, align 8
  %2864 = call ptr @Builtins__structGet(ptr %997, ptr %2863)
  %2865 = load ptr, ptr @tag_Equals, align 8
  %2866 = call ptr @Builtins__structGet(ptr %997, ptr %2865)
  %2867 = load ptr, ptr @tag_TypeOf, align 8
  %2868 = call ptr @Builtins__structGet(ptr %997, ptr %2867)
  %2869 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2870 = call ptr @Builtins__structGet(ptr %997, ptr %2869)
  %2871 = load ptr, ptr @tag_Equals, align 8
  %2872 = call ptr @Builtins__structGet(ptr %997, ptr %2871)
  %2873 = load ptr, ptr @tag_TypeOf, align 8
  %2874 = call ptr @Builtins__structGet(ptr %997, ptr %2873)
  %2875 = load ptr, ptr @tag_Equals, align 8
  %2876 = call ptr @Builtins__structGet(ptr %997, ptr %2875)
  %2877 = load ptr, ptr @tag_Equals, align 8
  %2878 = call ptr @Builtins__structGet(ptr %997, ptr %2877)
  %2879 = load ptr, ptr @tag_Equals, align 8
  %2880 = call ptr @Builtins__structGet(ptr %997, ptr %2879)
  %2881 = load ptr, ptr @tag_TypeOf, align 8
  %2882 = call ptr @Builtins__structGet(ptr %997, ptr %2881)
  %2883 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2884 = call ptr @Builtins__structGet(ptr %997, ptr %2883)
  %2885 = load ptr, ptr @tag_Equals, align 8
  %2886 = call ptr @Builtins__structGet(ptr %997, ptr %2885)
  %2887 = load ptr, ptr @tag_TypeOf, align 8
  %2888 = call ptr @Builtins__structGet(ptr %997, ptr %2887)
  %2889 = load ptr, ptr @tag_IfElse, align 8
  %2890 = call ptr @Builtins__structGet(ptr %997, ptr %2889)
  %2891 = load ptr, ptr @tag_Equals, align 8
  %2892 = call ptr @Builtins__structGet(ptr %997, ptr %2891)
  %2893 = load ptr, ptr @tag_TypeOf, align 8
  %2894 = call ptr @Builtins__structGet(ptr %997, ptr %2893)
  %2895 = load ptr, ptr @tag_Equals, align 8
  %2896 = call ptr @Builtins__structGet(ptr %997, ptr %2895)
  %2897 = load ptr, ptr @tag_TypeOf, align 8
  %2898 = call ptr @Builtins__structGet(ptr %997, ptr %2897)
  %2899 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:341\00", ptr %2899, align 1
  %2900 = call ptr @make_candy_text(ptr %2899)
  store ptr %2900, ptr @"Core:text:341", align 8
  %2901 = load ptr, ptr @tag_TextFromUtf8, align 8
  %2902 = call ptr @Builtins__structGet(ptr %997, ptr %2901)
  %2903 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:350\00", ptr %2903, align 1
  %2904 = call ptr @make_candy_text(ptr %2903)
  store ptr %2904, ptr @"Core:text:350", align 8
  %2905 = load ptr, ptr @tag_TextIsEmpty, align 8
  %2906 = call ptr @Builtins__structGet(ptr %997, ptr %2905)
  %2907 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:359\00", ptr %2907, align 1
  %2908 = call ptr @make_candy_text(ptr %2907)
  store ptr %2908, ptr @"Core:text:359", align 8
  %2909 = load ptr, ptr @tag_TextLength, align 8
  %2910 = call ptr @Builtins__structGet(ptr %997, ptr %2909)
  %2911 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:368\00", ptr %2911, align 1
  %2912 = call ptr @make_candy_text(ptr %2911)
  store ptr %2912, ptr @"Core:text:368", align 8
  %2913 = load ptr, ptr @tag_TextCharacters, align 8
  %2914 = call ptr @Builtins__structGet(ptr %997, ptr %2913)
  %2915 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:377\00", ptr %2915, align 1
  %2916 = call ptr @make_candy_text(ptr %2915)
  store ptr %2916, ptr @"Core:text:377", align 8
  %2917 = load ptr, ptr @tag_TextGetRange, align 8
  %2918 = call ptr @Builtins__structGet(ptr %997, ptr %2917)
  %2919 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:386\00", ptr %2919, align 1
  %2920 = call ptr @make_candy_text(ptr %2919)
  store ptr %2920, ptr @"Core:text:386", align 8
  %2921 = load ptr, ptr @tag_TextConcatenate, align 8
  %2922 = call ptr @Builtins__structGet(ptr %997, ptr %2921)
  %2923 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:395\00", ptr %2923, align 1
  %2924 = call ptr @make_candy_text(ptr %2923)
  store ptr %2924, ptr @"Core:text:395", align 8
  %2925 = load ptr, ptr @tag_TextStartsWith, align 8
  %2926 = call ptr @Builtins__structGet(ptr %997, ptr %2925)
  %2927 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:404\00", ptr %2927, align 1
  %2928 = call ptr @make_candy_text(ptr %2927)
  store ptr %2928, ptr @"Core:text:404", align 8
  %2929 = load ptr, ptr @tag_TextEndsWith, align 8
  %2930 = call ptr @Builtins__structGet(ptr %997, ptr %2929)
  %2931 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:413\00", ptr %2931, align 1
  %2932 = call ptr @make_candy_text(ptr %2931)
  store ptr %2932, ptr @"Core:text:413", align 8
  %2933 = load ptr, ptr @tag_TextContains, align 8
  %2934 = call ptr @Builtins__structGet(ptr %997, ptr %2933)
  %2935 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:422\00", ptr %2935, align 1
  %2936 = call ptr @make_candy_text(ptr %2935)
  store ptr %2936, ptr @"Core:text:422", align 8
  %2937 = load ptr, ptr @tag_TextTrimStart, align 8
  %2938 = call ptr @Builtins__structGet(ptr %997, ptr %2937)
  %2939 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:431\00", ptr %2939, align 1
  %2940 = call ptr @make_candy_text(ptr %2939)
  store ptr %2940, ptr @"Core:text:431", align 8
  %2941 = load ptr, ptr @tag_TextTrimEnd, align 8
  %2942 = call ptr @Builtins__structGet(ptr %997, ptr %2941)
  %2943 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:toDebugText:toDebugText:7\00", ptr %2943, align 1
  %2944 = call ptr @make_candy_text(ptr %2943)
  store ptr %2944, ptr @"Core:toDebugText:toDebugText:7", align 8
  %2945 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:toDebugText:toDebugText:9\00", ptr %2945, align 1
  %2946 = call ptr @make_candy_text(ptr %2945)
  store ptr %2946, ptr @"Core:toDebugText:toDebugText:9", align 8
  %2947 = load ptr, ptr @tag_Equals, align 8
  %2948 = call ptr @Builtins__structGet(ptr %997, ptr %2947)
  %2949 = load ptr, ptr @tag_Equals, align 8
  %2950 = call ptr @Builtins__structGet(ptr %997, ptr %2949)
  %2951 = load ptr, ptr @tag_TypeOf, align 8
  %2952 = call ptr @Builtins__structGet(ptr %997, ptr %2951)
  %2953 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2954 = call ptr @Builtins__structGet(ptr %997, ptr %2953)
  %2955 = load ptr, ptr @tag_Equals, align 8
  %2956 = call ptr @Builtins__structGet(ptr %997, ptr %2955)
  %2957 = load ptr, ptr @tag_Equals, align 8
  %2958 = call ptr @Builtins__structGet(ptr %997, ptr %2957)
  %2959 = load ptr, ptr @tag_Equals, align 8
  %2960 = call ptr @Builtins__structGet(ptr %997, ptr %2959)
  %2961 = load ptr, ptr @tag_TypeOf, align 8
  %2962 = call ptr @Builtins__structGet(ptr %997, ptr %2961)
  %2963 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2964 = getelementptr inbounds { ptr, ptr }, ptr %2963, i32 0, i32 0
  store ptr %2960, ptr %2964, align 8
  %2965 = getelementptr inbounds { ptr, ptr }, ptr %2963, i32 0, i32 1
  store ptr %2962, ptr %2965, align 8
  %2966 = call ptr @make_candy_function(ptr @Core_type_is, ptr %2963, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2966, ptr @fun_Core_type_is, align 8
  %2967 = alloca ptr, i64 3, align 8
  %2968 = alloca ptr, i64 3, align 8
  %2969 = load ptr, ptr @tag_TypeOf, align 8
  %2970 = getelementptr ptr, ptr %2967, i64 0
  store ptr %2969, ptr %2970, align 8
  %2971 = getelementptr ptr, ptr %2968, i64 0
  store ptr %2962, ptr %2971, align 8
  %2972 = load ptr, ptr @tag_Is, align 8
  %2973 = load ptr, ptr @fun_Core_type_is, align 8
  %2974 = getelementptr ptr, ptr %2967, i64 1
  store ptr %2972, ptr %2974, align 8
  %2975 = getelementptr ptr, ptr %2968, i64 1
  store ptr %2973, ptr %2975, align 8
  %2976 = getelementptr ptr, ptr %2967, i64 2
  store ptr null, ptr %2976, align 8
  %2977 = getelementptr ptr, ptr %2968, i64 2
  store ptr null, ptr %2977, align 8
  %2978 = call ptr @make_candy_struct(ptr %2967, ptr %2968)
  %2979 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2980 = getelementptr inbounds { ptr }, ptr %2979, i32 0, i32 0
  store ptr %2978, ptr %2980, align 8
  %2981 = call ptr @make_candy_function(ptr @Core_function_is, ptr %2979, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2981, ptr @fun_Core_function_is, align 8
  %2982 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2983 = call ptr @Builtins__structGet(ptr %997, ptr %2982)
  %2984 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2985 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2984, i32 0, i32 0
  store ptr %997, ptr %2985, align 8
  %2986 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2984, i32 0, i32 1
  store ptr %2983, ptr %2986, align 8
  %2987 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2984, i32 0, i32 2
  store ptr %2978, ptr %2987, align 8
  %2988 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2984, i32 0, i32 3
  store ptr %2958, ptr %2988, align 8
  %2989 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %2984, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2989, ptr @fun_Core_function_is0, align 8
  %2990 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2991 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2990, i32 0, i32 0
  store ptr %997, ptr %2991, align 8
  %2992 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2990, i32 0, i32 1
  store ptr %2983, ptr %2992, align 8
  %2993 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2990, i32 0, i32 2
  store ptr %2978, ptr %2993, align 8
  %2994 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2990, i32 0, i32 3
  store ptr %2958, ptr %2994, align 8
  %2995 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %2990, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2995, ptr @fun_Core_function_is1, align 8
  %2996 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2997 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2996, i32 0, i32 0
  store ptr %997, ptr %2997, align 8
  %2998 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2996, i32 0, i32 1
  store ptr %2983, ptr %2998, align 8
  %2999 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2996, i32 0, i32 2
  store ptr %2978, ptr %2999, align 8
  %3000 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2996, i32 0, i32 3
  store ptr %2958, ptr %3000, align 8
  %3001 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %2996, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3001, ptr @fun_Core_function_is2, align 8
  %3002 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3003 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3002, i32 0, i32 0
  store ptr %997, ptr %3003, align 8
  %3004 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3002, i32 0, i32 1
  store ptr %2983, ptr %3004, align 8
  %3005 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3002, i32 0, i32 2
  store ptr %2978, ptr %3005, align 8
  %3006 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3002, i32 0, i32 3
  store ptr %2958, ptr %3006, align 8
  %3007 = call ptr @make_candy_function(ptr @Core_function_is3, ptr %3002, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3007, ptr @fun_Core_function_is3, align 8
  %3008 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3009 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3008, i32 0, i32 0
  store ptr %997, ptr %3009, align 8
  %3010 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3008, i32 0, i32 1
  store ptr %2983, ptr %3010, align 8
  %3011 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3008, i32 0, i32 2
  store ptr %2978, ptr %3011, align 8
  %3012 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3008, i32 0, i32 3
  store ptr %2958, ptr %3012, align 8
  %3013 = call ptr @make_candy_function(ptr @Core_function_is4, ptr %3008, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3013, ptr @fun_Core_function_is4, align 8
  %3014 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3015 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3014, i32 0, i32 0
  store ptr %997, ptr %3015, align 8
  %3016 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3014, i32 0, i32 1
  store ptr %2983, ptr %3016, align 8
  %3017 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3014, i32 0, i32 2
  store ptr %2978, ptr %3017, align 8
  %3018 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3014, i32 0, i32 3
  store ptr %2958, ptr %3018, align 8
  %3019 = call ptr @make_candy_function(ptr @Core_function_is5, ptr %3014, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3019, ptr @fun_Core_function_is5, align 8
  %3020 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3021 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3020, i32 0, i32 0
  store ptr %997, ptr %3021, align 8
  %3022 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3020, i32 0, i32 1
  store ptr %2983, ptr %3022, align 8
  %3023 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3020, i32 0, i32 2
  store ptr %2978, ptr %3023, align 8
  %3024 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3020, i32 0, i32 3
  store ptr %2958, ptr %3024, align 8
  %3025 = call ptr @make_candy_function(ptr @Core_function_run, ptr %3020, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3025, ptr @fun_Core_function_run, align 8
  %3026 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3027 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3026, i32 0, i32 0
  store ptr %997, ptr %3027, align 8
  %3028 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3026, i32 0, i32 1
  store ptr %2983, ptr %3028, align 8
  %3029 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3026, i32 0, i32 2
  store ptr %2978, ptr %3029, align 8
  %3030 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3026, i32 0, i32 3
  store ptr %2958, ptr %3030, align 8
  %3031 = call ptr @make_candy_function(ptr @Core_function_doNotRun, ptr %3026, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3031, ptr @fun_Core_function_doNotRun, align 8
  %3032 = alloca ptr, i64 11, align 8
  %3033 = alloca ptr, i64 11, align 8
  %3034 = load ptr, ptr @tag_Is0, align 8
  %3035 = load ptr, ptr @fun_Core_function_is0, align 8
  %3036 = getelementptr ptr, ptr %3032, i64 0
  store ptr %3034, ptr %3036, align 8
  %3037 = getelementptr ptr, ptr %3033, i64 0
  store ptr %3035, ptr %3037, align 8
  %3038 = load ptr, ptr @tag_DoNotRun, align 8
  %3039 = load ptr, ptr @fun_Core_function_doNotRun, align 8
  %3040 = getelementptr ptr, ptr %3032, i64 1
  store ptr %3038, ptr %3040, align 8
  %3041 = getelementptr ptr, ptr %3033, i64 1
  store ptr %3039, ptr %3041, align 8
  %3042 = load ptr, ptr @tag_Is, align 8
  %3043 = load ptr, ptr @fun_Core_function_is, align 8
  %3044 = getelementptr ptr, ptr %3032, i64 2
  store ptr %3042, ptr %3044, align 8
  %3045 = getelementptr ptr, ptr %3033, i64 2
  store ptr %3043, ptr %3045, align 8
  %3046 = load ptr, ptr @tag_Is3, align 8
  %3047 = load ptr, ptr @fun_Core_function_is3, align 8
  %3048 = getelementptr ptr, ptr %3032, i64 3
  store ptr %3046, ptr %3048, align 8
  %3049 = getelementptr ptr, ptr %3033, i64 3
  store ptr %3047, ptr %3049, align 8
  %3050 = load ptr, ptr @tag_Is2, align 8
  %3051 = load ptr, ptr @fun_Core_function_is2, align 8
  %3052 = getelementptr ptr, ptr %3032, i64 4
  store ptr %3050, ptr %3052, align 8
  %3053 = getelementptr ptr, ptr %3033, i64 4
  store ptr %3051, ptr %3053, align 8
  %3054 = load ptr, ptr @tag_Is4, align 8
  %3055 = load ptr, ptr @fun_Core_function_is4, align 8
  %3056 = getelementptr ptr, ptr %3032, i64 5
  store ptr %3054, ptr %3056, align 8
  %3057 = getelementptr ptr, ptr %3033, i64 5
  store ptr %3055, ptr %3057, align 8
  %3058 = load ptr, ptr @tag_Is1, align 8
  %3059 = load ptr, ptr @fun_Core_function_is1, align 8
  %3060 = getelementptr ptr, ptr %3032, i64 6
  store ptr %3058, ptr %3060, align 8
  %3061 = getelementptr ptr, ptr %3033, i64 6
  store ptr %3059, ptr %3061, align 8
  %3062 = load ptr, ptr @tag_Is5, align 8
  %3063 = load ptr, ptr @fun_Core_function_is5, align 8
  %3064 = getelementptr ptr, ptr %3032, i64 7
  store ptr %3062, ptr %3064, align 8
  %3065 = getelementptr ptr, ptr %3033, i64 7
  store ptr %3063, ptr %3065, align 8
  %3066 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3067 = getelementptr ptr, ptr %3032, i64 8
  store ptr %3066, ptr %3067, align 8
  %3068 = getelementptr ptr, ptr %3033, i64 8
  store ptr %2983, ptr %3068, align 8
  %3069 = load ptr, ptr @tag_Run, align 8
  %3070 = load ptr, ptr @fun_Core_function_run, align 8
  %3071 = getelementptr ptr, ptr %3032, i64 9
  store ptr %3069, ptr %3071, align 8
  %3072 = getelementptr ptr, ptr %3033, i64 9
  store ptr %3070, ptr %3072, align 8
  %3073 = getelementptr ptr, ptr %3032, i64 10
  store ptr null, ptr %3073, align 8
  %3074 = getelementptr ptr, ptr %3033, i64 10
  store ptr null, ptr %3074, align 8
  %3075 = call ptr @make_candy_struct(ptr %3032, ptr %3033)
  %3076 = load ptr, ptr @tag_Equals, align 8
  %3077 = call ptr @Builtins__structGet(ptr %997, ptr %3076)
  %3078 = load ptr, ptr @tag_TypeOf, align 8
  %3079 = call ptr @Builtins__structGet(ptr %997, ptr %3078)
  %3080 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3081 = getelementptr inbounds { ptr }, ptr %3080, i32 0, i32 0
  store ptr %3075, ptr %3081, align 8
  %3082 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %3080, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3082, ptr @fun_Core_bool_lazyAnd, align 8
  %3083 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3084 = call ptr @make_candy_function(ptr @Core_bool_and, ptr %3083, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3084, ptr @fun_Core_bool_and, align 8
  %3085 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3086 = getelementptr inbounds { ptr }, ptr %3085, i32 0, i32 0
  store ptr %3075, ptr %3086, align 8
  %3087 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %3085, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3087, ptr @fun_Core_bool_lazyOr, align 8
  %3088 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3089 = call ptr @make_candy_function(ptr @Core_bool_or, ptr %3088, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3089, ptr @fun_Core_bool_or, align 8
  %3090 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3091 = getelementptr inbounds { ptr }, ptr %3090, i32 0, i32 0
  store ptr %2956, ptr %3091, align 8
  %3092 = call ptr @make_candy_function(ptr @Core_bool_xor, ptr %3090, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3092, ptr @fun_Core_bool_xor, align 8
  %3093 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3094 = call ptr @make_candy_function(ptr @Core_bool_implies, ptr %3093, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3094, ptr @fun_Core_bool_implies, align 8
  %3095 = alloca ptr, i64 9, align 8
  %3096 = alloca ptr, i64 9, align 8
  %3097 = load ptr, ptr @tag_LazyOr, align 8
  %3098 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  %3099 = getelementptr ptr, ptr %3095, i64 0
  store ptr %3097, ptr %3099, align 8
  %3100 = getelementptr ptr, ptr %3096, i64 0
  store ptr %3098, ptr %3100, align 8
  %3101 = load ptr, ptr @tag_Implies, align 8
  %3102 = load ptr, ptr @fun_Core_bool_implies, align 8
  %3103 = getelementptr ptr, ptr %3095, i64 1
  store ptr %3101, ptr %3103, align 8
  %3104 = getelementptr ptr, ptr %3096, i64 1
  store ptr %3102, ptr %3104, align 8
  %3105 = load ptr, ptr @tag_Not, align 8
  %3106 = load ptr, ptr @fun_Core_bool_not, align 8
  %3107 = getelementptr ptr, ptr %3095, i64 2
  store ptr %3105, ptr %3107, align 8
  %3108 = getelementptr ptr, ptr %3096, i64 2
  store ptr %3106, ptr %3108, align 8
  %3109 = load ptr, ptr @tag_And, align 8
  %3110 = load ptr, ptr @fun_Core_bool_and, align 8
  %3111 = getelementptr ptr, ptr %3095, i64 3
  store ptr %3109, ptr %3111, align 8
  %3112 = getelementptr ptr, ptr %3096, i64 3
  store ptr %3110, ptr %3112, align 8
  %3113 = load ptr, ptr @tag_LazyAnd, align 8
  %3114 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  %3115 = getelementptr ptr, ptr %3095, i64 4
  store ptr %3113, ptr %3115, align 8
  %3116 = getelementptr ptr, ptr %3096, i64 4
  store ptr %3114, ptr %3116, align 8
  %3117 = load ptr, ptr @tag_Is, align 8
  %3118 = load ptr, ptr @fun_Core_bool_is, align 8
  %3119 = getelementptr ptr, ptr %3095, i64 5
  store ptr %3117, ptr %3119, align 8
  %3120 = getelementptr ptr, ptr %3096, i64 5
  store ptr %3118, ptr %3120, align 8
  %3121 = load ptr, ptr @tag_Or, align 8
  %3122 = load ptr, ptr @fun_Core_bool_or, align 8
  %3123 = getelementptr ptr, ptr %3095, i64 6
  store ptr %3121, ptr %3123, align 8
  %3124 = getelementptr ptr, ptr %3096, i64 6
  store ptr %3122, ptr %3124, align 8
  %3125 = load ptr, ptr @tag_Xor, align 8
  %3126 = load ptr, ptr @fun_Core_bool_xor, align 8
  %3127 = getelementptr ptr, ptr %3095, i64 7
  store ptr %3125, ptr %3127, align 8
  %3128 = getelementptr ptr, ptr %3096, i64 7
  store ptr %3126, ptr %3128, align 8
  %3129 = getelementptr ptr, ptr %3095, i64 8
  store ptr null, ptr %3129, align 8
  %3130 = getelementptr ptr, ptr %3096, i64 8
  store ptr null, ptr %3130, align 8
  %3131 = call ptr @make_candy_struct(ptr %3095, ptr %3096)
  %3132 = load ptr, ptr @tag_Equals, align 8
  %3133 = call ptr @Builtins__structGet(ptr %997, ptr %3132)
  %3134 = load ptr, ptr @tag_Equals, align 8
  %3135 = call ptr @Builtins__structGet(ptr %997, ptr %3134)
  %3136 = load ptr, ptr @tag_Equals, align 8
  %3137 = call ptr @Builtins__structGet(ptr %997, ptr %3136)
  %3138 = load ptr, ptr @tag_TypeOf, align 8
  %3139 = call ptr @Builtins__structGet(ptr %997, ptr %3138)
  %3140 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3141 = getelementptr inbounds { ptr, ptr }, ptr %3140, i32 0, i32 0
  store ptr %3139, ptr %3141, align 8
  %3142 = getelementptr inbounds { ptr, ptr }, ptr %3140, i32 0, i32 1
  store ptr %3137, ptr %3142, align 8
  %3143 = call ptr @make_candy_function(ptr @Core_type_is.166, ptr %3140, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3143, ptr @fun_Core_type_is.167, align 8
  %3144 = alloca ptr, i64 3, align 8
  %3145 = alloca ptr, i64 3, align 8
  %3146 = load ptr, ptr @tag_TypeOf, align 8
  %3147 = getelementptr ptr, ptr %3144, i64 0
  store ptr %3146, ptr %3147, align 8
  %3148 = getelementptr ptr, ptr %3145, i64 0
  store ptr %3139, ptr %3148, align 8
  %3149 = load ptr, ptr @tag_Is, align 8
  %3150 = load ptr, ptr @fun_Core_type_is.167, align 8
  %3151 = getelementptr ptr, ptr %3144, i64 1
  store ptr %3149, ptr %3151, align 8
  %3152 = getelementptr ptr, ptr %3145, i64 1
  store ptr %3150, ptr %3152, align 8
  %3153 = getelementptr ptr, ptr %3144, i64 2
  store ptr null, ptr %3153, align 8
  %3154 = getelementptr ptr, ptr %3145, i64 2
  store ptr null, ptr %3154, align 8
  %3155 = call ptr @make_candy_struct(ptr %3144, ptr %3145)
  %3156 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3157 = getelementptr inbounds { ptr }, ptr %3156, i32 0, i32 0
  store ptr %3155, ptr %3157, align 8
  %3158 = call ptr @make_candy_function(ptr @Core_function_is.168, ptr %3156, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3158, ptr @fun_Core_function_is.169, align 8
  %3159 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3160 = call ptr @Builtins__structGet(ptr %997, ptr %3159)
  %3161 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3162 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3161, i32 0, i32 0
  store ptr %3155, ptr %3162, align 8
  %3163 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3161, i32 0, i32 1
  store ptr %997, ptr %3163, align 8
  %3164 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3161, i32 0, i32 2
  store ptr %3135, ptr %3164, align 8
  %3165 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3161, i32 0, i32 3
  store ptr %3160, ptr %3165, align 8
  %3166 = call ptr @make_candy_function(ptr @Core_function_is0.170, ptr %3161, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3166, ptr @fun_Core_function_is0.171, align 8
  %3167 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3168 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3167, i32 0, i32 0
  store ptr %3155, ptr %3168, align 8
  %3169 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3167, i32 0, i32 1
  store ptr %997, ptr %3169, align 8
  %3170 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3167, i32 0, i32 2
  store ptr %3135, ptr %3170, align 8
  %3171 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3167, i32 0, i32 3
  store ptr %3160, ptr %3171, align 8
  %3172 = call ptr @make_candy_function(ptr @Core_function_is1.174, ptr %3167, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3172, ptr @fun_Core_function_is1.175, align 8
  %3173 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3174 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3173, i32 0, i32 0
  store ptr %3155, ptr %3174, align 8
  %3175 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3173, i32 0, i32 1
  store ptr %997, ptr %3175, align 8
  %3176 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3173, i32 0, i32 2
  store ptr %3135, ptr %3176, align 8
  %3177 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3173, i32 0, i32 3
  store ptr %3160, ptr %3177, align 8
  %3178 = call ptr @make_candy_function(ptr @Core_function_is2.178, ptr %3173, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3178, ptr @fun_Core_function_is2.179, align 8
  %3179 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3180 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3179, i32 0, i32 0
  store ptr %3155, ptr %3180, align 8
  %3181 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3179, i32 0, i32 1
  store ptr %997, ptr %3181, align 8
  %3182 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3179, i32 0, i32 2
  store ptr %3135, ptr %3182, align 8
  %3183 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3179, i32 0, i32 3
  store ptr %3160, ptr %3183, align 8
  %3184 = call ptr @make_candy_function(ptr @Core_function_is3.182, ptr %3179, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3184, ptr @fun_Core_function_is3.183, align 8
  %3185 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3186 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3185, i32 0, i32 0
  store ptr %3155, ptr %3186, align 8
  %3187 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3185, i32 0, i32 1
  store ptr %997, ptr %3187, align 8
  %3188 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3185, i32 0, i32 2
  store ptr %3135, ptr %3188, align 8
  %3189 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3185, i32 0, i32 3
  store ptr %3160, ptr %3189, align 8
  %3190 = call ptr @make_candy_function(ptr @Core_function_is4.186, ptr %3185, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3190, ptr @fun_Core_function_is4.187, align 8
  %3191 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3192 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3191, i32 0, i32 0
  store ptr %3155, ptr %3192, align 8
  %3193 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3191, i32 0, i32 1
  store ptr %997, ptr %3193, align 8
  %3194 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3191, i32 0, i32 2
  store ptr %3135, ptr %3194, align 8
  %3195 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3191, i32 0, i32 3
  store ptr %3160, ptr %3195, align 8
  %3196 = call ptr @make_candy_function(ptr @Core_function_is5.190, ptr %3191, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3196, ptr @fun_Core_function_is5.191, align 8
  %3197 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3198 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3197, i32 0, i32 0
  store ptr %3155, ptr %3198, align 8
  %3199 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3197, i32 0, i32 1
  store ptr %997, ptr %3199, align 8
  %3200 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3197, i32 0, i32 2
  store ptr %3135, ptr %3200, align 8
  %3201 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3197, i32 0, i32 3
  store ptr %3160, ptr %3201, align 8
  %3202 = call ptr @make_candy_function(ptr @Core_function_run.194, ptr %3197, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3202, ptr @fun_Core_function_run.195, align 8
  %3203 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3204 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3203, i32 0, i32 0
  store ptr %3155, ptr %3204, align 8
  %3205 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3203, i32 0, i32 1
  store ptr %997, ptr %3205, align 8
  %3206 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3203, i32 0, i32 2
  store ptr %3135, ptr %3206, align 8
  %3207 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3203, i32 0, i32 3
  store ptr %3160, ptr %3207, align 8
  %3208 = call ptr @make_candy_function(ptr @Core_function_doNotRun.198, ptr %3203, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3208, ptr @fun_Core_function_doNotRun.199, align 8
  %3209 = alloca ptr, i64 11, align 8
  %3210 = alloca ptr, i64 11, align 8
  %3211 = load ptr, ptr @tag_Is0, align 8
  %3212 = load ptr, ptr @fun_Core_function_is0.171, align 8
  %3213 = getelementptr ptr, ptr %3209, i64 0
  store ptr %3211, ptr %3213, align 8
  %3214 = getelementptr ptr, ptr %3210, i64 0
  store ptr %3212, ptr %3214, align 8
  %3215 = load ptr, ptr @tag_DoNotRun, align 8
  %3216 = load ptr, ptr @fun_Core_function_doNotRun.199, align 8
  %3217 = getelementptr ptr, ptr %3209, i64 1
  store ptr %3215, ptr %3217, align 8
  %3218 = getelementptr ptr, ptr %3210, i64 1
  store ptr %3216, ptr %3218, align 8
  %3219 = load ptr, ptr @tag_Is, align 8
  %3220 = load ptr, ptr @fun_Core_function_is.169, align 8
  %3221 = getelementptr ptr, ptr %3209, i64 2
  store ptr %3219, ptr %3221, align 8
  %3222 = getelementptr ptr, ptr %3210, i64 2
  store ptr %3220, ptr %3222, align 8
  %3223 = load ptr, ptr @tag_Is3, align 8
  %3224 = load ptr, ptr @fun_Core_function_is3.183, align 8
  %3225 = getelementptr ptr, ptr %3209, i64 3
  store ptr %3223, ptr %3225, align 8
  %3226 = getelementptr ptr, ptr %3210, i64 3
  store ptr %3224, ptr %3226, align 8
  %3227 = load ptr, ptr @tag_Is2, align 8
  %3228 = load ptr, ptr @fun_Core_function_is2.179, align 8
  %3229 = getelementptr ptr, ptr %3209, i64 4
  store ptr %3227, ptr %3229, align 8
  %3230 = getelementptr ptr, ptr %3210, i64 4
  store ptr %3228, ptr %3230, align 8
  %3231 = load ptr, ptr @tag_Is4, align 8
  %3232 = load ptr, ptr @fun_Core_function_is4.187, align 8
  %3233 = getelementptr ptr, ptr %3209, i64 5
  store ptr %3231, ptr %3233, align 8
  %3234 = getelementptr ptr, ptr %3210, i64 5
  store ptr %3232, ptr %3234, align 8
  %3235 = load ptr, ptr @tag_Is1, align 8
  %3236 = load ptr, ptr @fun_Core_function_is1.175, align 8
  %3237 = getelementptr ptr, ptr %3209, i64 6
  store ptr %3235, ptr %3237, align 8
  %3238 = getelementptr ptr, ptr %3210, i64 6
  store ptr %3236, ptr %3238, align 8
  %3239 = load ptr, ptr @tag_Is5, align 8
  %3240 = load ptr, ptr @fun_Core_function_is5.191, align 8
  %3241 = getelementptr ptr, ptr %3209, i64 7
  store ptr %3239, ptr %3241, align 8
  %3242 = getelementptr ptr, ptr %3210, i64 7
  store ptr %3240, ptr %3242, align 8
  %3243 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3244 = getelementptr ptr, ptr %3209, i64 8
  store ptr %3243, ptr %3244, align 8
  %3245 = getelementptr ptr, ptr %3210, i64 8
  store ptr %3160, ptr %3245, align 8
  %3246 = load ptr, ptr @tag_Run, align 8
  %3247 = load ptr, ptr @fun_Core_function_run.195, align 8
  %3248 = getelementptr ptr, ptr %3209, i64 9
  store ptr %3246, ptr %3248, align 8
  %3249 = getelementptr ptr, ptr %3210, i64 9
  store ptr %3247, ptr %3249, align 8
  %3250 = getelementptr ptr, ptr %3209, i64 10
  store ptr null, ptr %3250, align 8
  %3251 = getelementptr ptr, ptr %3210, i64 10
  store ptr null, ptr %3251, align 8
  %3252 = call ptr @make_candy_struct(ptr %3209, ptr %3210)
  %3253 = load ptr, ptr @tag_Equals, align 8
  %3254 = call ptr @Builtins__structGet(ptr %997, ptr %3253)
  %3255 = load ptr, ptr @tag_TypeOf, align 8
  %3256 = call ptr @Builtins__structGet(ptr %997, ptr %3255)
  %3257 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3258 = getelementptr inbounds { ptr }, ptr %3257, i32 0, i32 0
  store ptr %3252, ptr %3258, align 8
  %3259 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.202, ptr %3257, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3259, ptr @fun_Core_bool_lazyAnd.203, align 8
  %3260 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3261 = call ptr @make_candy_function(ptr @Core_bool_and.230, ptr %3260, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3261, ptr @fun_Core_bool_and.231, align 8
  %3262 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3263 = getelementptr inbounds { ptr }, ptr %3262, i32 0, i32 0
  store ptr %3252, ptr %3263, align 8
  %3264 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.234, ptr %3262, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3264, ptr @fun_Core_bool_lazyOr.235, align 8
  %3265 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3266 = call ptr @make_candy_function(ptr @Core_bool_or.262, ptr %3265, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3266, ptr @fun_Core_bool_or.263, align 8
  %3267 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3268 = getelementptr inbounds { ptr }, ptr %3267, i32 0, i32 0
  store ptr %3133, ptr %3268, align 8
  %3269 = call ptr @make_candy_function(ptr @Core_bool_xor.266, ptr %3267, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3269, ptr @fun_Core_bool_xor.267, align 8
  %3270 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3271 = call ptr @make_candy_function(ptr @Core_bool_implies.268, ptr %3270, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3271, ptr @fun_Core_bool_implies.269, align 8
  %3272 = alloca ptr, i64 9, align 8
  %3273 = alloca ptr, i64 9, align 8
  %3274 = load ptr, ptr @tag_LazyOr, align 8
  %3275 = load ptr, ptr @fun_Core_bool_lazyOr.235, align 8
  %3276 = getelementptr ptr, ptr %3272, i64 0
  store ptr %3274, ptr %3276, align 8
  %3277 = getelementptr ptr, ptr %3273, i64 0
  store ptr %3275, ptr %3277, align 8
  %3278 = load ptr, ptr @tag_Implies, align 8
  %3279 = load ptr, ptr @fun_Core_bool_implies.269, align 8
  %3280 = getelementptr ptr, ptr %3272, i64 1
  store ptr %3278, ptr %3280, align 8
  %3281 = getelementptr ptr, ptr %3273, i64 1
  store ptr %3279, ptr %3281, align 8
  %3282 = load ptr, ptr @tag_Not, align 8
  %3283 = load ptr, ptr @fun_Core_bool_not, align 8
  %3284 = getelementptr ptr, ptr %3272, i64 2
  store ptr %3282, ptr %3284, align 8
  %3285 = getelementptr ptr, ptr %3273, i64 2
  store ptr %3283, ptr %3285, align 8
  %3286 = load ptr, ptr @tag_And, align 8
  %3287 = load ptr, ptr @fun_Core_bool_and.231, align 8
  %3288 = getelementptr ptr, ptr %3272, i64 3
  store ptr %3286, ptr %3288, align 8
  %3289 = getelementptr ptr, ptr %3273, i64 3
  store ptr %3287, ptr %3289, align 8
  %3290 = load ptr, ptr @tag_LazyAnd, align 8
  %3291 = load ptr, ptr @fun_Core_bool_lazyAnd.203, align 8
  %3292 = getelementptr ptr, ptr %3272, i64 4
  store ptr %3290, ptr %3292, align 8
  %3293 = getelementptr ptr, ptr %3273, i64 4
  store ptr %3291, ptr %3293, align 8
  %3294 = load ptr, ptr @tag_Is, align 8
  %3295 = load ptr, ptr @fun_Core_bool_is, align 8
  %3296 = getelementptr ptr, ptr %3272, i64 5
  store ptr %3294, ptr %3296, align 8
  %3297 = getelementptr ptr, ptr %3273, i64 5
  store ptr %3295, ptr %3297, align 8
  %3298 = load ptr, ptr @tag_Or, align 8
  %3299 = load ptr, ptr @fun_Core_bool_or.263, align 8
  %3300 = getelementptr ptr, ptr %3272, i64 6
  store ptr %3298, ptr %3300, align 8
  %3301 = getelementptr ptr, ptr %3273, i64 6
  store ptr %3299, ptr %3301, align 8
  %3302 = load ptr, ptr @tag_Xor, align 8
  %3303 = load ptr, ptr @fun_Core_bool_xor.267, align 8
  %3304 = getelementptr ptr, ptr %3272, i64 7
  store ptr %3302, ptr %3304, align 8
  %3305 = getelementptr ptr, ptr %3273, i64 7
  store ptr %3303, ptr %3305, align 8
  %3306 = getelementptr ptr, ptr %3272, i64 8
  store ptr null, ptr %3306, align 8
  %3307 = getelementptr ptr, ptr %3273, i64 8
  store ptr null, ptr %3307, align 8
  %3308 = call ptr @make_candy_struct(ptr %3272, ptr %3273)
  %3309 = load ptr, ptr @tag_Equals, align 8
  %3310 = call ptr @Builtins__structGet(ptr %997, ptr %3309)
  %3311 = load ptr, ptr @tag_Equals, align 8
  %3312 = call ptr @Builtins__structGet(ptr %997, ptr %3311)
  %3313 = load ptr, ptr @tag_Equals, align 8
  %3314 = call ptr @Builtins__structGet(ptr %997, ptr %3313)
  %3315 = load ptr, ptr @tag_TypeOf, align 8
  %3316 = call ptr @Builtins__structGet(ptr %997, ptr %3315)
  %3317 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3318 = call ptr @Builtins__structGet(ptr %997, ptr %3317)
  %3319 = load ptr, ptr @tag_Equals, align 8
  %3320 = call ptr @Builtins__structGet(ptr %997, ptr %3319)
  %3321 = load ptr, ptr @tag_TypeOf, align 8
  %3322 = call ptr @Builtins__structGet(ptr %997, ptr %3321)
  %3323 = load ptr, ptr @tag_Equals, align 8
  %3324 = call ptr @Builtins__structGet(ptr %997, ptr %3323)
  %3325 = load ptr, ptr @tag_Equals, align 8
  %3326 = call ptr @Builtins__structGet(ptr %997, ptr %3325)
  %3327 = load ptr, ptr @tag_Equals, align 8
  %3328 = call ptr @Builtins__structGet(ptr %997, ptr %3327)
  %3329 = load ptr, ptr @tag_TypeOf, align 8
  %3330 = call ptr @Builtins__structGet(ptr %997, ptr %3329)
  %3331 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3332 = call ptr @Builtins__structGet(ptr %997, ptr %3331)
  %3333 = load ptr, ptr @tag_Equals, align 8
  %3334 = call ptr @Builtins__structGet(ptr %997, ptr %3333)
  %3335 = load ptr, ptr @tag_TypeOf, align 8
  %3336 = call ptr @Builtins__structGet(ptr %997, ptr %3335)
  %3337 = load ptr, ptr @tag_IfElse, align 8
  %3338 = call ptr @Builtins__structGet(ptr %997, ptr %3337)
  %3339 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3340 = getelementptr inbounds { ptr }, ptr %3339, i32 0, i32 0
  store ptr %3308, ptr %3340, align 8
  %3341 = call ptr @make_candy_function(ptr @Core_check_check, ptr %3339, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3341, ptr @fun_Core_check_check, align 8
  %3342 = load ptr, ptr @tag_Equals, align 8
  %3343 = call ptr @Builtins__structGet(ptr %997, ptr %3342)
  %3344 = load ptr, ptr @tag_Equals, align 8
  %3345 = call ptr @Builtins__structGet(ptr %997, ptr %3344)
  %3346 = load ptr, ptr @tag_Equals, align 8
  %3347 = call ptr @Builtins__structGet(ptr %997, ptr %3346)
  %3348 = load ptr, ptr @tag_TypeOf, align 8
  %3349 = call ptr @Builtins__structGet(ptr %997, ptr %3348)
  %3350 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3351 = call ptr @Builtins__structGet(ptr %997, ptr %3350)
  %3352 = load ptr, ptr @tag_Equals, align 8
  %3353 = call ptr @Builtins__structGet(ptr %997, ptr %3352)
  %3354 = load ptr, ptr @tag_TypeOf, align 8
  %3355 = call ptr @Builtins__structGet(ptr %997, ptr %3354)
  %3356 = load ptr, ptr @tag_Equals, align 8
  %3357 = call ptr @Builtins__structGet(ptr %997, ptr %3356)
  %3358 = load ptr, ptr @tag_Equals, align 8
  %3359 = call ptr @Builtins__structGet(ptr %997, ptr %3358)
  %3360 = load ptr, ptr @tag_Equals, align 8
  %3361 = call ptr @Builtins__structGet(ptr %997, ptr %3360)
  %3362 = load ptr, ptr @tag_TypeOf, align 8
  %3363 = call ptr @Builtins__structGet(ptr %997, ptr %3362)
  %3364 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3365 = getelementptr inbounds { ptr, ptr }, ptr %3364, i32 0, i32 0
  store ptr %3363, ptr %3365, align 8
  %3366 = getelementptr inbounds { ptr, ptr }, ptr %3364, i32 0, i32 1
  store ptr %3361, ptr %3366, align 8
  %3367 = call ptr @make_candy_function(ptr @Core_type_is.276, ptr %3364, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3367, ptr @fun_Core_type_is.277, align 8
  %3368 = alloca ptr, i64 3, align 8
  %3369 = alloca ptr, i64 3, align 8
  %3370 = load ptr, ptr @tag_TypeOf, align 8
  %3371 = getelementptr ptr, ptr %3368, i64 0
  store ptr %3370, ptr %3371, align 8
  %3372 = getelementptr ptr, ptr %3369, i64 0
  store ptr %3363, ptr %3372, align 8
  %3373 = load ptr, ptr @tag_Is, align 8
  %3374 = load ptr, ptr @fun_Core_type_is.277, align 8
  %3375 = getelementptr ptr, ptr %3368, i64 1
  store ptr %3373, ptr %3375, align 8
  %3376 = getelementptr ptr, ptr %3369, i64 1
  store ptr %3374, ptr %3376, align 8
  %3377 = getelementptr ptr, ptr %3368, i64 2
  store ptr null, ptr %3377, align 8
  %3378 = getelementptr ptr, ptr %3369, i64 2
  store ptr null, ptr %3378, align 8
  %3379 = call ptr @make_candy_struct(ptr %3368, ptr %3369)
  %3380 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3381 = getelementptr inbounds { ptr }, ptr %3380, i32 0, i32 0
  store ptr %3379, ptr %3381, align 8
  %3382 = call ptr @make_candy_function(ptr @Core_function_is.278, ptr %3380, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3382, ptr @fun_Core_function_is.279, align 8
  %3383 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3384 = call ptr @Builtins__structGet(ptr %997, ptr %3383)
  %3385 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3386 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3385, i32 0, i32 0
  store ptr %997, ptr %3386, align 8
  %3387 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3385, i32 0, i32 1
  store ptr %3384, ptr %3387, align 8
  %3388 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3385, i32 0, i32 2
  store ptr %3379, ptr %3388, align 8
  %3389 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3385, i32 0, i32 3
  store ptr %3359, ptr %3389, align 8
  %3390 = call ptr @make_candy_function(ptr @Core_function_is0.280, ptr %3385, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3390, ptr @fun_Core_function_is0.281, align 8
  %3391 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3392 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3391, i32 0, i32 0
  store ptr %997, ptr %3392, align 8
  %3393 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3391, i32 0, i32 1
  store ptr %3384, ptr %3393, align 8
  %3394 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3391, i32 0, i32 2
  store ptr %3379, ptr %3394, align 8
  %3395 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3391, i32 0, i32 3
  store ptr %3359, ptr %3395, align 8
  %3396 = call ptr @make_candy_function(ptr @Core_function_is1.284, ptr %3391, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3396, ptr @fun_Core_function_is1.285, align 8
  %3397 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3398 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3397, i32 0, i32 0
  store ptr %997, ptr %3398, align 8
  %3399 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3397, i32 0, i32 1
  store ptr %3384, ptr %3399, align 8
  %3400 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3397, i32 0, i32 2
  store ptr %3379, ptr %3400, align 8
  %3401 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3397, i32 0, i32 3
  store ptr %3359, ptr %3401, align 8
  %3402 = call ptr @make_candy_function(ptr @Core_function_is2.288, ptr %3397, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3402, ptr @fun_Core_function_is2.289, align 8
  %3403 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3404 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3403, i32 0, i32 0
  store ptr %997, ptr %3404, align 8
  %3405 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3403, i32 0, i32 1
  store ptr %3384, ptr %3405, align 8
  %3406 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3403, i32 0, i32 2
  store ptr %3379, ptr %3406, align 8
  %3407 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3403, i32 0, i32 3
  store ptr %3359, ptr %3407, align 8
  %3408 = call ptr @make_candy_function(ptr @Core_function_is3.292, ptr %3403, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3408, ptr @fun_Core_function_is3.293, align 8
  %3409 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3410 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3409, i32 0, i32 0
  store ptr %997, ptr %3410, align 8
  %3411 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3409, i32 0, i32 1
  store ptr %3384, ptr %3411, align 8
  %3412 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3409, i32 0, i32 2
  store ptr %3379, ptr %3412, align 8
  %3413 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3409, i32 0, i32 3
  store ptr %3359, ptr %3413, align 8
  %3414 = call ptr @make_candy_function(ptr @Core_function_is4.296, ptr %3409, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3414, ptr @fun_Core_function_is4.297, align 8
  %3415 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3416 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3415, i32 0, i32 0
  store ptr %997, ptr %3416, align 8
  %3417 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3415, i32 0, i32 1
  store ptr %3384, ptr %3417, align 8
  %3418 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3415, i32 0, i32 2
  store ptr %3379, ptr %3418, align 8
  %3419 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3415, i32 0, i32 3
  store ptr %3359, ptr %3419, align 8
  %3420 = call ptr @make_candy_function(ptr @Core_function_is5.300, ptr %3415, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3420, ptr @fun_Core_function_is5.301, align 8
  %3421 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3422 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3421, i32 0, i32 0
  store ptr %997, ptr %3422, align 8
  %3423 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3421, i32 0, i32 1
  store ptr %3384, ptr %3423, align 8
  %3424 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3421, i32 0, i32 2
  store ptr %3379, ptr %3424, align 8
  %3425 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3421, i32 0, i32 3
  store ptr %3359, ptr %3425, align 8
  %3426 = call ptr @make_candy_function(ptr @Core_function_run.304, ptr %3421, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3426, ptr @fun_Core_function_run.305, align 8
  %3427 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3428 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3427, i32 0, i32 0
  store ptr %997, ptr %3428, align 8
  %3429 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3427, i32 0, i32 1
  store ptr %3384, ptr %3429, align 8
  %3430 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3427, i32 0, i32 2
  store ptr %3379, ptr %3430, align 8
  %3431 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3427, i32 0, i32 3
  store ptr %3359, ptr %3431, align 8
  %3432 = call ptr @make_candy_function(ptr @Core_function_doNotRun.308, ptr %3427, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3432, ptr @fun_Core_function_doNotRun.309, align 8
  %3433 = alloca ptr, i64 11, align 8
  %3434 = alloca ptr, i64 11, align 8
  %3435 = load ptr, ptr @tag_Is0, align 8
  %3436 = load ptr, ptr @fun_Core_function_is0.281, align 8
  %3437 = getelementptr ptr, ptr %3433, i64 0
  store ptr %3435, ptr %3437, align 8
  %3438 = getelementptr ptr, ptr %3434, i64 0
  store ptr %3436, ptr %3438, align 8
  %3439 = load ptr, ptr @tag_DoNotRun, align 8
  %3440 = load ptr, ptr @fun_Core_function_doNotRun.309, align 8
  %3441 = getelementptr ptr, ptr %3433, i64 1
  store ptr %3439, ptr %3441, align 8
  %3442 = getelementptr ptr, ptr %3434, i64 1
  store ptr %3440, ptr %3442, align 8
  %3443 = load ptr, ptr @tag_Is, align 8
  %3444 = load ptr, ptr @fun_Core_function_is.279, align 8
  %3445 = getelementptr ptr, ptr %3433, i64 2
  store ptr %3443, ptr %3445, align 8
  %3446 = getelementptr ptr, ptr %3434, i64 2
  store ptr %3444, ptr %3446, align 8
  %3447 = load ptr, ptr @tag_Is3, align 8
  %3448 = load ptr, ptr @fun_Core_function_is3.293, align 8
  %3449 = getelementptr ptr, ptr %3433, i64 3
  store ptr %3447, ptr %3449, align 8
  %3450 = getelementptr ptr, ptr %3434, i64 3
  store ptr %3448, ptr %3450, align 8
  %3451 = load ptr, ptr @tag_Is2, align 8
  %3452 = load ptr, ptr @fun_Core_function_is2.289, align 8
  %3453 = getelementptr ptr, ptr %3433, i64 4
  store ptr %3451, ptr %3453, align 8
  %3454 = getelementptr ptr, ptr %3434, i64 4
  store ptr %3452, ptr %3454, align 8
  %3455 = load ptr, ptr @tag_Is4, align 8
  %3456 = load ptr, ptr @fun_Core_function_is4.297, align 8
  %3457 = getelementptr ptr, ptr %3433, i64 5
  store ptr %3455, ptr %3457, align 8
  %3458 = getelementptr ptr, ptr %3434, i64 5
  store ptr %3456, ptr %3458, align 8
  %3459 = load ptr, ptr @tag_Is1, align 8
  %3460 = load ptr, ptr @fun_Core_function_is1.285, align 8
  %3461 = getelementptr ptr, ptr %3433, i64 6
  store ptr %3459, ptr %3461, align 8
  %3462 = getelementptr ptr, ptr %3434, i64 6
  store ptr %3460, ptr %3462, align 8
  %3463 = load ptr, ptr @tag_Is5, align 8
  %3464 = load ptr, ptr @fun_Core_function_is5.301, align 8
  %3465 = getelementptr ptr, ptr %3433, i64 7
  store ptr %3463, ptr %3465, align 8
  %3466 = getelementptr ptr, ptr %3434, i64 7
  store ptr %3464, ptr %3466, align 8
  %3467 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3468 = getelementptr ptr, ptr %3433, i64 8
  store ptr %3467, ptr %3468, align 8
  %3469 = getelementptr ptr, ptr %3434, i64 8
  store ptr %3384, ptr %3469, align 8
  %3470 = load ptr, ptr @tag_Run, align 8
  %3471 = load ptr, ptr @fun_Core_function_run.305, align 8
  %3472 = getelementptr ptr, ptr %3433, i64 9
  store ptr %3470, ptr %3472, align 8
  %3473 = getelementptr ptr, ptr %3434, i64 9
  store ptr %3471, ptr %3473, align 8
  %3474 = getelementptr ptr, ptr %3433, i64 10
  store ptr null, ptr %3474, align 8
  %3475 = getelementptr ptr, ptr %3434, i64 10
  store ptr null, ptr %3475, align 8
  %3476 = call ptr @make_candy_struct(ptr %3433, ptr %3434)
  %3477 = load ptr, ptr @tag_Equals, align 8
  %3478 = call ptr @Builtins__structGet(ptr %997, ptr %3477)
  %3479 = load ptr, ptr @tag_TypeOf, align 8
  %3480 = call ptr @Builtins__structGet(ptr %997, ptr %3479)
  %3481 = load ptr, ptr @tag_IfElse, align 8
  %3482 = call ptr @Builtins__structGet(ptr %997, ptr %3481)
  %3483 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3484 = getelementptr inbounds { ptr }, ptr %3483, i32 0, i32 0
  store ptr %3476, ptr %3484, align 8
  %3485 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive, ptr %3483, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3485, ptr @fun_Core_controlFlow_recursive, align 8
  %3486 = load ptr, ptr @tag_Equals, align 8
  %3487 = call ptr @Builtins__structGet(ptr %997, ptr %3486)
  %3488 = load ptr, ptr @tag_Equals, align 8
  %3489 = call ptr @Builtins__structGet(ptr %997, ptr %3488)
  %3490 = load ptr, ptr @tag_TypeOf, align 8
  %3491 = call ptr @Builtins__structGet(ptr %997, ptr %3490)
  %3492 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3493 = getelementptr inbounds { ptr, ptr }, ptr %3492, i32 0, i32 0
  store ptr %3491, ptr %3493, align 8
  %3494 = getelementptr inbounds { ptr, ptr }, ptr %3492, i32 0, i32 1
  store ptr %3489, ptr %3494, align 8
  %3495 = call ptr @make_candy_function(ptr @Core_type_is.312, ptr %3492, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3495, ptr @fun_Core_type_is.313, align 8
  %3496 = alloca ptr, i64 3, align 8
  %3497 = alloca ptr, i64 3, align 8
  %3498 = load ptr, ptr @tag_TypeOf, align 8
  %3499 = getelementptr ptr, ptr %3496, i64 0
  store ptr %3498, ptr %3499, align 8
  %3500 = getelementptr ptr, ptr %3497, i64 0
  store ptr %3491, ptr %3500, align 8
  %3501 = load ptr, ptr @tag_Is, align 8
  %3502 = load ptr, ptr @fun_Core_type_is.313, align 8
  %3503 = getelementptr ptr, ptr %3496, i64 1
  store ptr %3501, ptr %3503, align 8
  %3504 = getelementptr ptr, ptr %3497, i64 1
  store ptr %3502, ptr %3504, align 8
  %3505 = getelementptr ptr, ptr %3496, i64 2
  store ptr null, ptr %3505, align 8
  %3506 = getelementptr ptr, ptr %3497, i64 2
  store ptr null, ptr %3506, align 8
  %3507 = call ptr @make_candy_struct(ptr %3496, ptr %3497)
  %3508 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3509 = getelementptr inbounds { ptr }, ptr %3508, i32 0, i32 0
  store ptr %3507, ptr %3509, align 8
  %3510 = call ptr @make_candy_function(ptr @Core_int_is, ptr %3508, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3510, ptr @fun_Core_int_is, align 8
  %3511 = load ptr, ptr @tag_IntAdd, align 8
  %3512 = call ptr @Builtins__structGet(ptr %997, ptr %3511)
  %3513 = load ptr, ptr @tag_IntSubtract, align 8
  %3514 = call ptr @Builtins__structGet(ptr %997, ptr %3513)
  %3515 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3516 = getelementptr inbounds { ptr, ptr }, ptr %3515, i32 0, i32 0
  store ptr %3507, ptr %3516, align 8
  %3517 = getelementptr inbounds { ptr, ptr }, ptr %3515, i32 0, i32 1
  store ptr %3514, ptr %3517, align 8
  %3518 = call ptr @make_candy_function(ptr @Core_int_negate, ptr %3515, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3518, ptr @fun_Core_int_negate, align 8
  %3519 = load ptr, ptr @tag_IntMultiply, align 8
  %3520 = call ptr @Builtins__structGet(ptr %997, ptr %3519)
  %3521 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %3522 = call ptr @Builtins__structGet(ptr %997, ptr %3521)
  %3523 = load ptr, ptr @tag_IntRemainder, align 8
  %3524 = call ptr @Builtins__structGet(ptr %997, ptr %3523)
  %3525 = load ptr, ptr @tag_IntModulo, align 8
  %3526 = call ptr @Builtins__structGet(ptr %997, ptr %3525)
  %3527 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3528 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3527, i32 0, i32 0
  store ptr %997, ptr %3528, align 8
  %3529 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3527, i32 0, i32 1
  store ptr %3131, ptr %3529, align 8
  %3530 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3527, i32 0, i32 2
  store ptr %3507, ptr %3530, align 8
  %3531 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3527, i32 0, i32 3
  store ptr %3487, ptr %3531, align 8
  %3532 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %3527, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3532, ptr @fun_Core_int_compareTo, align 8
  %3533 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3534 = getelementptr inbounds { ptr, ptr }, ptr %3533, i32 0, i32 0
  store ptr %3507, ptr %3534, align 8
  %3535 = getelementptr inbounds { ptr, ptr }, ptr %3533, i32 0, i32 1
  store ptr %3487, ptr %3535, align 8
  %3536 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %3533, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3536, ptr @fun_Core_int_isLessThan, align 8
  %3537 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3538 = getelementptr inbounds { ptr, ptr }, ptr %3537, i32 0, i32 0
  store ptr %3507, ptr %3538, align 8
  %3539 = getelementptr inbounds { ptr, ptr }, ptr %3537, i32 0, i32 1
  store ptr %3487, ptr %3539, align 8
  %3540 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %3537, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3540, ptr @fun_Core_int_isGreaterThan, align 8
  %3541 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3542 = getelementptr inbounds { ptr, ptr }, ptr %3541, i32 0, i32 0
  store ptr %3507, ptr %3542, align 8
  %3543 = getelementptr inbounds { ptr, ptr }, ptr %3541, i32 0, i32 1
  store ptr %3131, ptr %3543, align 8
  %3544 = call ptr @make_candy_function(ptr @Core_int_isLessThanOrEqualTo, ptr %3541, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3544, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  %3545 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3546 = getelementptr inbounds { ptr, ptr }, ptr %3545, i32 0, i32 0
  store ptr %3507, ptr %3546, align 8
  %3547 = getelementptr inbounds { ptr, ptr }, ptr %3545, i32 0, i32 1
  store ptr %3131, ptr %3547, align 8
  %3548 = call ptr @make_candy_function(ptr @Core_int_isGreaterThanOrEqualTo, ptr %3545, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3548, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  %3549 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3550 = getelementptr inbounds { ptr }, ptr %3549, i32 0, i32 0
  store ptr %3507, ptr %3550, align 8
  %3551 = call ptr @make_candy_function(ptr @Core_int_isPositive, ptr %3549, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3551, ptr @fun_Core_int_isPositive, align 8
  %3552 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3553 = getelementptr inbounds { ptr, ptr }, ptr %3552, i32 0, i32 0
  store ptr %3507, ptr %3553, align 8
  %3554 = getelementptr inbounds { ptr, ptr }, ptr %3552, i32 0, i32 1
  store ptr %3131, ptr %3554, align 8
  %3555 = call ptr @make_candy_function(ptr @Core_int_isNonPositive, ptr %3552, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3555, ptr @fun_Core_int_isNonPositive, align 8
  %3556 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3557 = getelementptr inbounds { ptr }, ptr %3556, i32 0, i32 0
  store ptr %3507, ptr %3557, align 8
  %3558 = call ptr @make_candy_function(ptr @Core_int_isNegative, ptr %3556, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3558, ptr @fun_Core_int_isNegative, align 8
  %3559 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3560 = getelementptr inbounds { ptr, ptr }, ptr %3559, i32 0, i32 0
  store ptr %3507, ptr %3560, align 8
  %3561 = getelementptr inbounds { ptr, ptr }, ptr %3559, i32 0, i32 1
  store ptr %3131, ptr %3561, align 8
  %3562 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %3559, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3562, ptr @fun_Core_int_isNonNegative, align 8
  %3563 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3564 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3563, i32 0, i32 0
  store ptr %3507, ptr %3564, align 8
  %3565 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3563, i32 0, i32 1
  store ptr %3482, ptr %3565, align 8
  %3566 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3563, i32 0, i32 2
  store ptr %3514, ptr %3566, align 8
  %3567 = call ptr @make_candy_function(ptr @Core_int_absolute, ptr %3563, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3567, ptr @fun_Core_int_absolute, align 8
  %3568 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3569 = getelementptr inbounds { ptr }, ptr %3568, i32 0, i32 0
  store ptr %3507, ptr %3569, align 8
  %3570 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU32, ptr %3568, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3570, ptr @fun_Core_int_fitsInRustU32, align 8
  %3571 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3572 = getelementptr inbounds { ptr }, ptr %3571, i32 0, i32 0
  store ptr %3507, ptr %3572, align 8
  %3573 = call ptr @make_candy_function(ptr @Core_int_fitsInRustU128, ptr %3571, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3573, ptr @fun_Core_int_fitsInRustU128, align 8
  %3574 = load ptr, ptr @tag_IntShiftLeft, align 8
  %3575 = call ptr @Builtins__structGet(ptr %997, ptr %3574)
  %3576 = load ptr, ptr @tag_IntShiftRight, align 8
  %3577 = call ptr @Builtins__structGet(ptr %997, ptr %3576)
  %3578 = load ptr, ptr @tag_IntBitLength, align 8
  %3579 = call ptr @Builtins__structGet(ptr %997, ptr %3578)
  %3580 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %3581 = call ptr @Builtins__structGet(ptr %997, ptr %3580)
  %3582 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %3583 = call ptr @Builtins__structGet(ptr %997, ptr %3582)
  %3584 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %3585 = call ptr @Builtins__structGet(ptr %997, ptr %3584)
  %3586 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3587 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3586, i32 0, i32 0
  store ptr %3507, ptr %3587, align 8
  %3588 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3586, i32 0, i32 1
  store ptr %3487, ptr %3588, align 8
  %3589 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3586, i32 0, i32 2
  store ptr %3581, ptr %3589, align 8
  %3590 = call ptr @make_candy_function(ptr @Core_int_isEven, ptr %3586, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3590, ptr @fun_Core_int_isEven, align 8
  %3591 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3592 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3591, i32 0, i32 0
  store ptr %3581, ptr %3592, align 8
  %3593 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3591, i32 0, i32 1
  store ptr %3131, ptr %3593, align 8
  %3594 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3591, i32 0, i32 2
  store ptr %3507, ptr %3594, align 8
  %3595 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %3591, i32 0, i32 3
  store ptr %3487, ptr %3595, align 8
  %3596 = call ptr @make_candy_function(ptr @Core_int_isOdd, ptr %3591, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3596, ptr @fun_Core_int_isOdd, align 8
  %3597 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3598 = getelementptr inbounds { ptr, ptr }, ptr %3597, i32 0, i32 0
  store ptr %3507, ptr %3598, align 8
  %3599 = getelementptr inbounds { ptr, ptr }, ptr %3597, i32 0, i32 1
  store ptr %3482, ptr %3599, align 8
  %3600 = call ptr @make_candy_function(ptr @Core_int_min, ptr %3597, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3600, ptr @fun_Core_int_min, align 8
  %3601 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %3602 = getelementptr inbounds { ptr, ptr }, ptr %3601, i32 0, i32 0
  store ptr %3507, ptr %3602, align 8
  %3603 = getelementptr inbounds { ptr, ptr }, ptr %3601, i32 0, i32 1
  store ptr %3482, ptr %3603, align 8
  %3604 = call ptr @make_candy_function(ptr @Core_int_max, ptr %3601, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3604, ptr @fun_Core_int_max, align 8
  %3605 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3606 = getelementptr inbounds { ptr }, ptr %3605, i32 0, i32 0
  store ptr %3507, ptr %3606, align 8
  %3607 = call ptr @make_candy_function(ptr @Core_int_coerceAtLeast, ptr %3605, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3607, ptr @fun_Core_int_coerceAtLeast, align 8
  %3608 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3609 = getelementptr inbounds { ptr }, ptr %3608, i32 0, i32 0
  store ptr %3507, ptr %3609, align 8
  %3610 = call ptr @make_candy_function(ptr @Core_int_coerceAtMost, ptr %3608, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3610, ptr @fun_Core_int_coerceAtMost, align 8
  %3611 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3612 = getelementptr inbounds { ptr }, ptr %3611, i32 0, i32 0
  store ptr %3507, ptr %3612, align 8
  %3613 = call ptr @make_candy_function(ptr @Core_int_coerceIn, ptr %3611, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3613, ptr @fun_Core_int_coerceIn, align 8
  %3614 = load ptr, ptr @tag_IntParse, align 8
  %3615 = call ptr @Builtins__structGet(ptr %997, ptr %3614)
  %3616 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %3617 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3616, i32 0, i32 0
  store ptr %3482, ptr %3617, align 8
  %3618 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3616, i32 0, i32 1
  store ptr %3520, ptr %3618, align 8
  %3619 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3616, i32 0, i32 2
  store ptr %3507, ptr %3619, align 8
  %3620 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3616, i32 0, i32 3
  store ptr %3487, ptr %3620, align 8
  %3621 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3616, i32 0, i32 4
  store ptr %3577, ptr %3621, align 8
  %3622 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3616, i32 0, i32 5
  store ptr %3514, ptr %3622, align 8
  %3623 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3616, i32 0, i32 6
  store ptr %3581, ptr %3623, align 8
  %3624 = call ptr @make_candy_function(ptr @Core_int_pow, ptr %3616, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %3624, ptr @fun_Core_int_pow, align 8
  %3625 = alloca ptr, i64 37, align 8
  %3626 = alloca ptr, i64 37, align 8
  %3627 = load ptr, ptr @tag_CoerceAtLeast, align 8
  %3628 = load ptr, ptr @fun_Core_int_coerceAtLeast, align 8
  %3629 = getelementptr ptr, ptr %3625, i64 0
  store ptr %3627, ptr %3629, align 8
  %3630 = getelementptr ptr, ptr %3626, i64 0
  store ptr %3628, ptr %3630, align 8
  %3631 = load ptr, ptr @tag_FitsInRustU32, align 8
  %3632 = load ptr, ptr @fun_Core_int_fitsInRustU32, align 8
  %3633 = getelementptr ptr, ptr %3625, i64 1
  store ptr %3631, ptr %3633, align 8
  %3634 = getelementptr ptr, ptr %3626, i64 1
  store ptr %3632, ptr %3634, align 8
  %3635 = load ptr, ptr @tag_CoerceIn, align 8
  %3636 = load ptr, ptr @fun_Core_int_coerceIn, align 8
  %3637 = getelementptr ptr, ptr %3625, i64 2
  store ptr %3635, ptr %3637, align 8
  %3638 = getelementptr ptr, ptr %3626, i64 2
  store ptr %3636, ptr %3638, align 8
  %3639 = load ptr, ptr @tag_IsPositive, align 8
  %3640 = load ptr, ptr @fun_Core_int_isPositive, align 8
  %3641 = getelementptr ptr, ptr %3625, i64 3
  store ptr %3639, ptr %3641, align 8
  %3642 = getelementptr ptr, ptr %3626, i64 3
  store ptr %3640, ptr %3642, align 8
  %3643 = load ptr, ptr @tag_BitwiseAnd, align 8
  %3644 = getelementptr ptr, ptr %3625, i64 4
  store ptr %3643, ptr %3644, align 8
  %3645 = getelementptr ptr, ptr %3626, i64 4
  store ptr %3581, ptr %3645, align 8
  %3646 = load ptr, ptr @tag_IsOdd, align 8
  %3647 = load ptr, ptr @fun_Core_int_isOdd, align 8
  %3648 = getelementptr ptr, ptr %3625, i64 5
  store ptr %3646, ptr %3648, align 8
  %3649 = getelementptr ptr, ptr %3626, i64 5
  store ptr %3647, ptr %3649, align 8
  %3650 = load ptr, ptr @tag_BitwiseXor, align 8
  %3651 = getelementptr ptr, ptr %3625, i64 6
  store ptr %3650, ptr %3651, align 8
  %3652 = getelementptr ptr, ptr %3626, i64 6
  store ptr %3585, ptr %3652, align 8
  %3653 = load ptr, ptr @tag_IsLessThan, align 8
  %3654 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  %3655 = getelementptr ptr, ptr %3625, i64 7
  store ptr %3653, ptr %3655, align 8
  %3656 = getelementptr ptr, ptr %3626, i64 7
  store ptr %3654, ptr %3656, align 8
  %3657 = load ptr, ptr @tag_IsGreaterThan, align 8
  %3658 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  %3659 = getelementptr ptr, ptr %3625, i64 8
  store ptr %3657, ptr %3659, align 8
  %3660 = getelementptr ptr, ptr %3626, i64 8
  store ptr %3658, ptr %3660, align 8
  %3661 = load ptr, ptr @tag_DivideTruncating, align 8
  %3662 = getelementptr ptr, ptr %3625, i64 9
  store ptr %3661, ptr %3662, align 8
  %3663 = getelementptr ptr, ptr %3626, i64 9
  store ptr %3522, ptr %3663, align 8
  %3664 = load ptr, ptr @tag_Multiply, align 8
  %3665 = getelementptr ptr, ptr %3625, i64 10
  store ptr %3664, ptr %3665, align 8
  %3666 = getelementptr ptr, ptr %3626, i64 10
  store ptr %3520, ptr %3666, align 8
  %3667 = load ptr, ptr @tag_Subtract, align 8
  %3668 = getelementptr ptr, ptr %3625, i64 11
  store ptr %3667, ptr %3668, align 8
  %3669 = getelementptr ptr, ptr %3626, i64 11
  store ptr %3514, ptr %3669, align 8
  %3670 = load ptr, ptr @tag_BitLength, align 8
  %3671 = getelementptr ptr, ptr %3625, i64 12
  store ptr %3670, ptr %3671, align 8
  %3672 = getelementptr ptr, ptr %3626, i64 12
  store ptr %3579, ptr %3672, align 8
  %3673 = load ptr, ptr @tag_Max, align 8
  %3674 = load ptr, ptr @fun_Core_int_max, align 8
  %3675 = getelementptr ptr, ptr %3625, i64 13
  store ptr %3673, ptr %3675, align 8
  %3676 = getelementptr ptr, ptr %3626, i64 13
  store ptr %3674, ptr %3676, align 8
  %3677 = load ptr, ptr @tag_FitsInRustU128, align 8
  %3678 = load ptr, ptr @fun_Core_int_fitsInRustU128, align 8
  %3679 = getelementptr ptr, ptr %3625, i64 14
  store ptr %3677, ptr %3679, align 8
  %3680 = getelementptr ptr, ptr %3626, i64 14
  store ptr %3678, ptr %3680, align 8
  %3681 = load ptr, ptr @tag_Remainder, align 8
  %3682 = getelementptr ptr, ptr %3625, i64 15
  store ptr %3681, ptr %3682, align 8
  %3683 = getelementptr ptr, ptr %3626, i64 15
  store ptr %3524, ptr %3683, align 8
  %3684 = load ptr, ptr @tag_CoerceAtMost, align 8
  %3685 = load ptr, ptr @fun_Core_int_coerceAtMost, align 8
  %3686 = getelementptr ptr, ptr %3625, i64 16
  store ptr %3684, ptr %3686, align 8
  %3687 = getelementptr ptr, ptr %3626, i64 16
  store ptr %3685, ptr %3687, align 8
  %3688 = load ptr, ptr @tag_ShiftLeft, align 8
  %3689 = getelementptr ptr, ptr %3625, i64 17
  store ptr %3688, ptr %3689, align 8
  %3690 = getelementptr ptr, ptr %3626, i64 17
  store ptr %3575, ptr %3690, align 8
  %3691 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  %3692 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  %3693 = getelementptr ptr, ptr %3625, i64 18
  store ptr %3691, ptr %3693, align 8
  %3694 = getelementptr ptr, ptr %3626, i64 18
  store ptr %3692, ptr %3694, align 8
  %3695 = load ptr, ptr @tag_Add, align 8
  %3696 = getelementptr ptr, ptr %3625, i64 19
  store ptr %3695, ptr %3696, align 8
  %3697 = getelementptr ptr, ptr %3626, i64 19
  store ptr %3512, ptr %3697, align 8
  %3698 = load ptr, ptr @tag_ShiftRight, align 8
  %3699 = getelementptr ptr, ptr %3625, i64 20
  store ptr %3698, ptr %3699, align 8
  %3700 = getelementptr ptr, ptr %3626, i64 20
  store ptr %3577, ptr %3700, align 8
  %3701 = load ptr, ptr @tag_Parse, align 8
  %3702 = getelementptr ptr, ptr %3625, i64 21
  store ptr %3701, ptr %3702, align 8
  %3703 = getelementptr ptr, ptr %3626, i64 21
  store ptr %3615, ptr %3703, align 8
  %3704 = load ptr, ptr @tag_Modulo, align 8
  %3705 = getelementptr ptr, ptr %3625, i64 22
  store ptr %3704, ptr %3705, align 8
  %3706 = getelementptr ptr, ptr %3626, i64 22
  store ptr %3526, ptr %3706, align 8
  %3707 = load ptr, ptr @tag_IsNonPositive, align 8
  %3708 = load ptr, ptr @fun_Core_int_isNonPositive, align 8
  %3709 = getelementptr ptr, ptr %3625, i64 23
  store ptr %3707, ptr %3709, align 8
  %3710 = getelementptr ptr, ptr %3626, i64 23
  store ptr %3708, ptr %3710, align 8
  %3711 = load ptr, ptr @tag_IsEven, align 8
  %3712 = load ptr, ptr @fun_Core_int_isEven, align 8
  %3713 = getelementptr ptr, ptr %3625, i64 24
  store ptr %3711, ptr %3713, align 8
  %3714 = getelementptr ptr, ptr %3626, i64 24
  store ptr %3712, ptr %3714, align 8
  %3715 = load ptr, ptr @tag_Absolute, align 8
  %3716 = load ptr, ptr @fun_Core_int_absolute, align 8
  %3717 = getelementptr ptr, ptr %3625, i64 25
  store ptr %3715, ptr %3717, align 8
  %3718 = getelementptr ptr, ptr %3626, i64 25
  store ptr %3716, ptr %3718, align 8
  %3719 = load ptr, ptr @tag_BitwiseOr, align 8
  %3720 = getelementptr ptr, ptr %3625, i64 26
  store ptr %3719, ptr %3720, align 8
  %3721 = getelementptr ptr, ptr %3626, i64 26
  store ptr %3583, ptr %3721, align 8
  %3722 = load ptr, ptr @tag_IsNegative, align 8
  %3723 = load ptr, ptr @fun_Core_int_isNegative, align 8
  %3724 = getelementptr ptr, ptr %3625, i64 27
  store ptr %3722, ptr %3724, align 8
  %3725 = getelementptr ptr, ptr %3626, i64 27
  store ptr %3723, ptr %3725, align 8
  %3726 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  %3727 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  %3728 = getelementptr ptr, ptr %3625, i64 28
  store ptr %3726, ptr %3728, align 8
  %3729 = getelementptr ptr, ptr %3626, i64 28
  store ptr %3727, ptr %3729, align 8
  %3730 = load ptr, ptr @tag_Pow, align 8
  %3731 = load ptr, ptr @fun_Core_int_pow, align 8
  %3732 = getelementptr ptr, ptr %3625, i64 29
  store ptr %3730, ptr %3732, align 8
  %3733 = getelementptr ptr, ptr %3626, i64 29
  store ptr %3731, ptr %3733, align 8
  %3734 = load ptr, ptr @tag_Negate, align 8
  %3735 = load ptr, ptr @fun_Core_int_negate, align 8
  %3736 = getelementptr ptr, ptr %3625, i64 30
  store ptr %3734, ptr %3736, align 8
  %3737 = getelementptr ptr, ptr %3626, i64 30
  store ptr %3735, ptr %3737, align 8
  %3738 = load ptr, ptr @tag_IsNonNegative, align 8
  %3739 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  %3740 = getelementptr ptr, ptr %3625, i64 31
  store ptr %3738, ptr %3740, align 8
  %3741 = getelementptr ptr, ptr %3626, i64 31
  store ptr %3739, ptr %3741, align 8
  %3742 = load ptr, ptr @tag_Is, align 8
  %3743 = load ptr, ptr @fun_Core_int_is, align 8
  %3744 = getelementptr ptr, ptr %3625, i64 32
  store ptr %3742, ptr %3744, align 8
  %3745 = getelementptr ptr, ptr %3626, i64 32
  store ptr %3743, ptr %3745, align 8
  %3746 = load ptr, ptr @tag_TheAnswer, align 8
  %3747 = load ptr, ptr @num_42, align 8
  %3748 = getelementptr ptr, ptr %3625, i64 33
  store ptr %3746, ptr %3748, align 8
  %3749 = getelementptr ptr, ptr %3626, i64 33
  store ptr %3747, ptr %3749, align 8
  %3750 = load ptr, ptr @tag_Min, align 8
  %3751 = load ptr, ptr @fun_Core_int_min, align 8
  %3752 = getelementptr ptr, ptr %3625, i64 34
  store ptr %3750, ptr %3752, align 8
  %3753 = getelementptr ptr, ptr %3626, i64 34
  store ptr %3751, ptr %3753, align 8
  %3754 = load ptr, ptr @tag_CompareTo, align 8
  %3755 = load ptr, ptr @fun_Core_int_compareTo, align 8
  %3756 = getelementptr ptr, ptr %3625, i64 35
  store ptr %3754, ptr %3756, align 8
  %3757 = getelementptr ptr, ptr %3626, i64 35
  store ptr %3755, ptr %3757, align 8
  %3758 = getelementptr ptr, ptr %3625, i64 36
  store ptr null, ptr %3758, align 8
  %3759 = getelementptr ptr, ptr %3626, i64 36
  store ptr null, ptr %3759, align 8
  %3760 = call ptr @make_candy_struct(ptr %3625, ptr %3626)
  %3761 = load ptr, ptr @tag_Equals, align 8
  %3762 = call ptr @Builtins__structGet(ptr %997, ptr %3761)
  %3763 = load ptr, ptr @tag_Equals, align 8
  %3764 = call ptr @Builtins__structGet(ptr %997, ptr %3763)
  %3765 = load ptr, ptr @tag_Equals, align 8
  %3766 = call ptr @Builtins__structGet(ptr %997, ptr %3765)
  %3767 = load ptr, ptr @tag_TypeOf, align 8
  %3768 = call ptr @Builtins__structGet(ptr %997, ptr %3767)
  %3769 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3770 = call ptr @Builtins__structGet(ptr %997, ptr %3769)
  %3771 = load ptr, ptr @tag_Equals, align 8
  %3772 = call ptr @Builtins__structGet(ptr %997, ptr %3771)
  %3773 = load ptr, ptr @tag_TypeOf, align 8
  %3774 = call ptr @Builtins__structGet(ptr %997, ptr %3773)
  %3775 = load ptr, ptr @tag_Equals, align 8
  %3776 = call ptr @Builtins__structGet(ptr %997, ptr %3775)
  %3777 = load ptr, ptr @tag_Equals, align 8
  %3778 = call ptr @Builtins__structGet(ptr %997, ptr %3777)
  %3779 = load ptr, ptr @tag_Equals, align 8
  %3780 = call ptr @Builtins__structGet(ptr %997, ptr %3779)
  %3781 = load ptr, ptr @tag_TypeOf, align 8
  %3782 = call ptr @Builtins__structGet(ptr %997, ptr %3781)
  %3783 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3784 = call ptr @Builtins__structGet(ptr %997, ptr %3783)
  %3785 = load ptr, ptr @tag_Equals, align 8
  %3786 = call ptr @Builtins__structGet(ptr %997, ptr %3785)
  %3787 = load ptr, ptr @tag_TypeOf, align 8
  %3788 = call ptr @Builtins__structGet(ptr %997, ptr %3787)
  %3789 = load ptr, ptr @tag_Equals, align 8
  %3790 = call ptr @Builtins__structGet(ptr %997, ptr %3789)
  %3791 = load ptr, ptr @tag_Equals, align 8
  %3792 = call ptr @Builtins__structGet(ptr %997, ptr %3791)
  %3793 = load ptr, ptr @tag_Equals, align 8
  %3794 = call ptr @Builtins__structGet(ptr %997, ptr %3793)
  %3795 = load ptr, ptr @tag_TypeOf, align 8
  %3796 = call ptr @Builtins__structGet(ptr %997, ptr %3795)
  %3797 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3798 = call ptr @Builtins__structGet(ptr %997, ptr %3797)
  %3799 = load ptr, ptr @tag_Equals, align 8
  %3800 = call ptr @Builtins__structGet(ptr %997, ptr %3799)
  %3801 = load ptr, ptr @tag_TypeOf, align 8
  %3802 = call ptr @Builtins__structGet(ptr %997, ptr %3801)
  %3803 = load ptr, ptr @tag_IfElse, align 8
  %3804 = call ptr @Builtins__structGet(ptr %997, ptr %3803)
  %3805 = load ptr, ptr @tag_Equals, align 8
  %3806 = call ptr @Builtins__structGet(ptr %997, ptr %3805)
  %3807 = load ptr, ptr @tag_Equals, align 8
  %3808 = call ptr @Builtins__structGet(ptr %997, ptr %3807)
  %3809 = load ptr, ptr @tag_Equals, align 8
  %3810 = call ptr @Builtins__structGet(ptr %997, ptr %3809)
  %3811 = load ptr, ptr @tag_TypeOf, align 8
  %3812 = call ptr @Builtins__structGet(ptr %997, ptr %3811)
  %3813 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3814 = call ptr @Builtins__structGet(ptr %997, ptr %3813)
  %3815 = load ptr, ptr @tag_Equals, align 8
  %3816 = call ptr @Builtins__structGet(ptr %997, ptr %3815)
  %3817 = load ptr, ptr @tag_Equals, align 8
  %3818 = call ptr @Builtins__structGet(ptr %997, ptr %3817)
  %3819 = load ptr, ptr @tag_Equals, align 8
  %3820 = call ptr @Builtins__structGet(ptr %997, ptr %3819)
  %3821 = load ptr, ptr @tag_TypeOf, align 8
  %3822 = call ptr @Builtins__structGet(ptr %997, ptr %3821)
  %3823 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3824 = call ptr @Builtins__structGet(ptr %997, ptr %3823)
  %3825 = load ptr, ptr @tag_Equals, align 8
  %3826 = call ptr @Builtins__structGet(ptr %997, ptr %3825)
  %3827 = load ptr, ptr @tag_TypeOf, align 8
  %3828 = call ptr @Builtins__structGet(ptr %997, ptr %3827)
  %3829 = load ptr, ptr @tag_Equals, align 8
  %3830 = call ptr @Builtins__structGet(ptr %997, ptr %3829)
  %3831 = load ptr, ptr @tag_Equals, align 8
  %3832 = call ptr @Builtins__structGet(ptr %997, ptr %3831)
  %3833 = load ptr, ptr @tag_Equals, align 8
  %3834 = call ptr @Builtins__structGet(ptr %997, ptr %3833)
  %3835 = load ptr, ptr @tag_TypeOf, align 8
  %3836 = call ptr @Builtins__structGet(ptr %997, ptr %3835)
  %3837 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3838 = call ptr @Builtins__structGet(ptr %997, ptr %3837)
  %3839 = load ptr, ptr @tag_Equals, align 8
  %3840 = call ptr @Builtins__structGet(ptr %997, ptr %3839)
  %3841 = load ptr, ptr @tag_TypeOf, align 8
  %3842 = call ptr @Builtins__structGet(ptr %997, ptr %3841)
  %3843 = load ptr, ptr @tag_Equals, align 8
  %3844 = call ptr @Builtins__structGet(ptr %997, ptr %3843)
  %3845 = load ptr, ptr @tag_Equals, align 8
  %3846 = call ptr @Builtins__structGet(ptr %997, ptr %3845)
  %3847 = load ptr, ptr @tag_Equals, align 8
  %3848 = call ptr @Builtins__structGet(ptr %997, ptr %3847)
  %3849 = load ptr, ptr @tag_TypeOf, align 8
  %3850 = call ptr @Builtins__structGet(ptr %997, ptr %3849)
  %3851 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3852 = call ptr @Builtins__structGet(ptr %997, ptr %3851)
  %3853 = load ptr, ptr @tag_Equals, align 8
  %3854 = call ptr @Builtins__structGet(ptr %997, ptr %3853)
  %3855 = load ptr, ptr @tag_TypeOf, align 8
  %3856 = call ptr @Builtins__structGet(ptr %997, ptr %3855)
  %3857 = load ptr, ptr @tag_Equals, align 8
  %3858 = call ptr @Builtins__structGet(ptr %997, ptr %3857)
  %3859 = load ptr, ptr @tag_Equals, align 8
  %3860 = call ptr @Builtins__structGet(ptr %997, ptr %3859)
  %3861 = load ptr, ptr @tag_Equals, align 8
  %3862 = call ptr @Builtins__structGet(ptr %997, ptr %3861)
  %3863 = load ptr, ptr @tag_TypeOf, align 8
  %3864 = call ptr @Builtins__structGet(ptr %997, ptr %3863)
  %3865 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3866 = call ptr @Builtins__structGet(ptr %997, ptr %3865)
  %3867 = load ptr, ptr @tag_Equals, align 8
  %3868 = call ptr @Builtins__structGet(ptr %997, ptr %3867)
  %3869 = load ptr, ptr @tag_TypeOf, align 8
  %3870 = call ptr @Builtins__structGet(ptr %997, ptr %3869)
  %3871 = load ptr, ptr @tag_IfElse, align 8
  %3872 = call ptr @Builtins__structGet(ptr %997, ptr %3871)
  %3873 = load ptr, ptr @tag_Equals, align 8
  %3874 = call ptr @Builtins__structGet(ptr %997, ptr %3873)
  %3875 = load ptr, ptr @tag_Equals, align 8
  %3876 = call ptr @Builtins__structGet(ptr %997, ptr %3875)
  %3877 = load ptr, ptr @tag_Equals, align 8
  %3878 = call ptr @Builtins__structGet(ptr %997, ptr %3877)
  %3879 = load ptr, ptr @tag_TypeOf, align 8
  %3880 = call ptr @Builtins__structGet(ptr %997, ptr %3879)
  %3881 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3882 = call ptr @Builtins__structGet(ptr %997, ptr %3881)
  %3883 = load ptr, ptr @tag_Equals, align 8
  %3884 = call ptr @Builtins__structGet(ptr %997, ptr %3883)
  %3885 = load ptr, ptr @tag_TypeOf, align 8
  %3886 = call ptr @Builtins__structGet(ptr %997, ptr %3885)
  %3887 = load ptr, ptr @tag_Equals, align 8
  %3888 = call ptr @Builtins__structGet(ptr %997, ptr %3887)
  %3889 = load ptr, ptr @tag_Equals, align 8
  %3890 = call ptr @Builtins__structGet(ptr %997, ptr %3889)
  %3891 = load ptr, ptr @tag_Equals, align 8
  %3892 = call ptr @Builtins__structGet(ptr %997, ptr %3891)
  %3893 = load ptr, ptr @tag_TypeOf, align 8
  %3894 = call ptr @Builtins__structGet(ptr %997, ptr %3893)
  %3895 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3896 = call ptr @Builtins__structGet(ptr %997, ptr %3895)
  %3897 = load ptr, ptr @tag_Equals, align 8
  %3898 = call ptr @Builtins__structGet(ptr %997, ptr %3897)
  %3899 = load ptr, ptr @tag_TypeOf, align 8
  %3900 = call ptr @Builtins__structGet(ptr %997, ptr %3899)
  %3901 = load ptr, ptr @tag_IfElse, align 8
  %3902 = call ptr @Builtins__structGet(ptr %997, ptr %3901)
  %3903 = load ptr, ptr @tag_Equals, align 8
  %3904 = call ptr @Builtins__structGet(ptr %997, ptr %3903)
  %3905 = load ptr, ptr @tag_Equals, align 8
  %3906 = call ptr @Builtins__structGet(ptr %997, ptr %3905)
  %3907 = load ptr, ptr @tag_TypeOf, align 8
  %3908 = call ptr @Builtins__structGet(ptr %997, ptr %3907)
  %3909 = load ptr, ptr @tag_IntAdd, align 8
  %3910 = call ptr @Builtins__structGet(ptr %997, ptr %3909)
  %3911 = load ptr, ptr @tag_IntSubtract, align 8
  %3912 = call ptr @Builtins__structGet(ptr %997, ptr %3911)
  %3913 = load ptr, ptr @tag_IntMultiply, align 8
  %3914 = call ptr @Builtins__structGet(ptr %997, ptr %3913)
  %3915 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %3916 = call ptr @Builtins__structGet(ptr %997, ptr %3915)
  %3917 = load ptr, ptr @tag_IntRemainder, align 8
  %3918 = call ptr @Builtins__structGet(ptr %997, ptr %3917)
  %3919 = load ptr, ptr @tag_IntModulo, align 8
  %3920 = call ptr @Builtins__structGet(ptr %997, ptr %3919)
  %3921 = load ptr, ptr @tag_IntShiftLeft, align 8
  %3922 = call ptr @Builtins__structGet(ptr %997, ptr %3921)
  %3923 = load ptr, ptr @tag_IntShiftRight, align 8
  %3924 = call ptr @Builtins__structGet(ptr %997, ptr %3923)
  %3925 = load ptr, ptr @tag_IntBitLength, align 8
  %3926 = call ptr @Builtins__structGet(ptr %997, ptr %3925)
  %3927 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %3928 = call ptr @Builtins__structGet(ptr %997, ptr %3927)
  %3929 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %3930 = call ptr @Builtins__structGet(ptr %997, ptr %3929)
  %3931 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %3932 = call ptr @Builtins__structGet(ptr %997, ptr %3931)
  %3933 = load ptr, ptr @tag_IntParse, align 8
  %3934 = call ptr @Builtins__structGet(ptr %997, ptr %3933)
  %3935 = load ptr, ptr @tag_Equals, align 8
  %3936 = call ptr @Builtins__structGet(ptr %997, ptr %3935)
  %3937 = load ptr, ptr @tag_Equals, align 8
  %3938 = call ptr @Builtins__structGet(ptr %997, ptr %3937)
  %3939 = load ptr, ptr @tag_Equals, align 8
  %3940 = call ptr @Builtins__structGet(ptr %997, ptr %3939)
  %3941 = load ptr, ptr @tag_TypeOf, align 8
  %3942 = call ptr @Builtins__structGet(ptr %997, ptr %3941)
  %3943 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3944 = call ptr @Builtins__structGet(ptr %997, ptr %3943)
  %3945 = load ptr, ptr @tag_Equals, align 8
  %3946 = call ptr @Builtins__structGet(ptr %997, ptr %3945)
  %3947 = load ptr, ptr @tag_TypeOf, align 8
  %3948 = call ptr @Builtins__structGet(ptr %997, ptr %3947)
  %3949 = load ptr, ptr @tag_Equals, align 8
  %3950 = call ptr @Builtins__structGet(ptr %997, ptr %3949)
  %3951 = load ptr, ptr @tag_Equals, align 8
  %3952 = call ptr @Builtins__structGet(ptr %997, ptr %3951)
  %3953 = load ptr, ptr @tag_Equals, align 8
  %3954 = call ptr @Builtins__structGet(ptr %997, ptr %3953)
  %3955 = load ptr, ptr @tag_TypeOf, align 8
  %3956 = call ptr @Builtins__structGet(ptr %997, ptr %3955)
  %3957 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3958 = call ptr @Builtins__structGet(ptr %997, ptr %3957)
  %3959 = load ptr, ptr @tag_Equals, align 8
  %3960 = call ptr @Builtins__structGet(ptr %997, ptr %3959)
  %3961 = load ptr, ptr @tag_TypeOf, align 8
  %3962 = call ptr @Builtins__structGet(ptr %997, ptr %3961)
  %3963 = load ptr, ptr @tag_Equals, align 8
  %3964 = call ptr @Builtins__structGet(ptr %997, ptr %3963)
  %3965 = load ptr, ptr @tag_Equals, align 8
  %3966 = call ptr @Builtins__structGet(ptr %997, ptr %3965)
  %3967 = load ptr, ptr @tag_Equals, align 8
  %3968 = call ptr @Builtins__structGet(ptr %997, ptr %3967)
  %3969 = load ptr, ptr @tag_TypeOf, align 8
  %3970 = call ptr @Builtins__structGet(ptr %997, ptr %3969)
  %3971 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3972 = call ptr @Builtins__structGet(ptr %997, ptr %3971)
  %3973 = load ptr, ptr @tag_Equals, align 8
  %3974 = call ptr @Builtins__structGet(ptr %997, ptr %3973)
  %3975 = load ptr, ptr @tag_TypeOf, align 8
  %3976 = call ptr @Builtins__structGet(ptr %997, ptr %3975)
  %3977 = load ptr, ptr @tag_IfElse, align 8
  %3978 = call ptr @Builtins__structGet(ptr %997, ptr %3977)
  %3979 = load ptr, ptr @tag_Equals, align 8
  %3980 = call ptr @Builtins__structGet(ptr %997, ptr %3979)
  %3981 = load ptr, ptr @tag_Equals, align 8
  %3982 = call ptr @Builtins__structGet(ptr %997, ptr %3981)
  %3983 = load ptr, ptr @tag_Equals, align 8
  %3984 = call ptr @Builtins__structGet(ptr %997, ptr %3983)
  %3985 = load ptr, ptr @tag_TypeOf, align 8
  %3986 = call ptr @Builtins__structGet(ptr %997, ptr %3985)
  %3987 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3988 = call ptr @Builtins__structGet(ptr %997, ptr %3987)
  %3989 = load ptr, ptr @tag_Equals, align 8
  %3990 = call ptr @Builtins__structGet(ptr %997, ptr %3989)
  %3991 = load ptr, ptr @tag_Equals, align 8
  %3992 = call ptr @Builtins__structGet(ptr %997, ptr %3991)
  %3993 = load ptr, ptr @tag_Equals, align 8
  %3994 = call ptr @Builtins__structGet(ptr %997, ptr %3993)
  %3995 = load ptr, ptr @tag_TypeOf, align 8
  %3996 = call ptr @Builtins__structGet(ptr %997, ptr %3995)
  %3997 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3998 = call ptr @Builtins__structGet(ptr %997, ptr %3997)
  %3999 = load ptr, ptr @tag_Equals, align 8
  %4000 = call ptr @Builtins__structGet(ptr %997, ptr %3999)
  %4001 = load ptr, ptr @tag_TypeOf, align 8
  %4002 = call ptr @Builtins__structGet(ptr %997, ptr %4001)
  %4003 = load ptr, ptr @tag_Equals, align 8
  %4004 = call ptr @Builtins__structGet(ptr %997, ptr %4003)
  %4005 = load ptr, ptr @tag_Equals, align 8
  %4006 = call ptr @Builtins__structGet(ptr %997, ptr %4005)
  %4007 = load ptr, ptr @tag_Equals, align 8
  %4008 = call ptr @Builtins__structGet(ptr %997, ptr %4007)
  %4009 = load ptr, ptr @tag_TypeOf, align 8
  %4010 = call ptr @Builtins__structGet(ptr %997, ptr %4009)
  %4011 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4012 = call ptr @Builtins__structGet(ptr %997, ptr %4011)
  %4013 = load ptr, ptr @tag_Equals, align 8
  %4014 = call ptr @Builtins__structGet(ptr %997, ptr %4013)
  %4015 = load ptr, ptr @tag_TypeOf, align 8
  %4016 = call ptr @Builtins__structGet(ptr %997, ptr %4015)
  %4017 = load ptr, ptr @tag_IfElse, align 8
  %4018 = call ptr @Builtins__structGet(ptr %997, ptr %4017)
  %4019 = load ptr, ptr @tag_Equals, align 8
  %4020 = call ptr @Builtins__structGet(ptr %997, ptr %4019)
  %4021 = load ptr, ptr @tag_TypeOf, align 8
  %4022 = call ptr @Builtins__structGet(ptr %997, ptr %4021)
  %4023 = load ptr, ptr @tag_Equals, align 8
  %4024 = call ptr @Builtins__structGet(ptr %997, ptr %4023)
  %4025 = load ptr, ptr @tag_Equals, align 8
  %4026 = call ptr @Builtins__structGet(ptr %997, ptr %4025)
  %4027 = load ptr, ptr @tag_Equals, align 8
  %4028 = call ptr @Builtins__structGet(ptr %997, ptr %4027)
  %4029 = load ptr, ptr @tag_TypeOf, align 8
  %4030 = call ptr @Builtins__structGet(ptr %997, ptr %4029)
  %4031 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4032 = call ptr @Builtins__structGet(ptr %997, ptr %4031)
  %4033 = load ptr, ptr @tag_Equals, align 8
  %4034 = call ptr @Builtins__structGet(ptr %997, ptr %4033)
  %4035 = load ptr, ptr @tag_TypeOf, align 8
  %4036 = call ptr @Builtins__structGet(ptr %997, ptr %4035)
  %4037 = load ptr, ptr @tag_Equals, align 8
  %4038 = call ptr @Builtins__structGet(ptr %997, ptr %4037)
  %4039 = load ptr, ptr @tag_Equals, align 8
  %4040 = call ptr @Builtins__structGet(ptr %997, ptr %4039)
  %4041 = load ptr, ptr @tag_Equals, align 8
  %4042 = call ptr @Builtins__structGet(ptr %997, ptr %4041)
  %4043 = load ptr, ptr @tag_TypeOf, align 8
  %4044 = call ptr @Builtins__structGet(ptr %997, ptr %4043)
  %4045 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4046 = call ptr @Builtins__structGet(ptr %997, ptr %4045)
  %4047 = load ptr, ptr @tag_Equals, align 8
  %4048 = call ptr @Builtins__structGet(ptr %997, ptr %4047)
  %4049 = load ptr, ptr @tag_TypeOf, align 8
  %4050 = call ptr @Builtins__structGet(ptr %997, ptr %4049)
  %4051 = load ptr, ptr @tag_Equals, align 8
  %4052 = call ptr @Builtins__structGet(ptr %997, ptr %4051)
  %4053 = load ptr, ptr @tag_Equals, align 8
  %4054 = call ptr @Builtins__structGet(ptr %997, ptr %4053)
  %4055 = load ptr, ptr @tag_Equals, align 8
  %4056 = call ptr @Builtins__structGet(ptr %997, ptr %4055)
  %4057 = load ptr, ptr @tag_TypeOf, align 8
  %4058 = call ptr @Builtins__structGet(ptr %997, ptr %4057)
  %4059 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4060 = call ptr @Builtins__structGet(ptr %997, ptr %4059)
  %4061 = load ptr, ptr @tag_Equals, align 8
  %4062 = call ptr @Builtins__structGet(ptr %997, ptr %4061)
  %4063 = load ptr, ptr @tag_TypeOf, align 8
  %4064 = call ptr @Builtins__structGet(ptr %997, ptr %4063)
  %4065 = load ptr, ptr @tag_IfElse, align 8
  %4066 = call ptr @Builtins__structGet(ptr %997, ptr %4065)
  %4067 = load ptr, ptr @tag_Equals, align 8
  %4068 = call ptr @Builtins__structGet(ptr %997, ptr %4067)
  %4069 = load ptr, ptr @tag_TypeOf, align 8
  %4070 = call ptr @Builtins__structGet(ptr %997, ptr %4069)
  %4071 = load ptr, ptr @tag_TagHasValue, align 8
  %4072 = call ptr @Builtins__structGet(ptr %997, ptr %4071)
  %4073 = load ptr, ptr @tag_TagWithoutValue, align 8
  %4074 = call ptr @Builtins__structGet(ptr %997, ptr %4073)
  %4075 = load ptr, ptr @tag_TagGetValue, align 8
  %4076 = call ptr @Builtins__structGet(ptr %997, ptr %4075)
  %4077 = load ptr, ptr @tag_Equals, align 8
  %4078 = call ptr @Builtins__structGet(ptr %997, ptr %4077)
  %4079 = load ptr, ptr @tag_TypeOf, align 8
  %4080 = call ptr @Builtins__structGet(ptr %997, ptr %4079)
  %4081 = load ptr, ptr @tag_Equals, align 8
  %4082 = call ptr @Builtins__structGet(ptr %997, ptr %4081)
  %4083 = load ptr, ptr @tag_Equals, align 8
  %4084 = call ptr @Builtins__structGet(ptr %997, ptr %4083)
  %4085 = load ptr, ptr @tag_Equals, align 8
  %4086 = call ptr @Builtins__structGet(ptr %997, ptr %4085)
  %4087 = load ptr, ptr @tag_TypeOf, align 8
  %4088 = call ptr @Builtins__structGet(ptr %997, ptr %4087)
  %4089 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4090 = call ptr @Builtins__structGet(ptr %997, ptr %4089)
  %4091 = load ptr, ptr @tag_Equals, align 8
  %4092 = call ptr @Builtins__structGet(ptr %997, ptr %4091)
  %4093 = load ptr, ptr @tag_TypeOf, align 8
  %4094 = call ptr @Builtins__structGet(ptr %997, ptr %4093)
  %4095 = load ptr, ptr @tag_Equals, align 8
  %4096 = call ptr @Builtins__structGet(ptr %997, ptr %4095)
  %4097 = load ptr, ptr @tag_Equals, align 8
  %4098 = call ptr @Builtins__structGet(ptr %997, ptr %4097)
  %4099 = load ptr, ptr @tag_Equals, align 8
  %4100 = call ptr @Builtins__structGet(ptr %997, ptr %4099)
  %4101 = load ptr, ptr @tag_TypeOf, align 8
  %4102 = call ptr @Builtins__structGet(ptr %997, ptr %4101)
  %4103 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4104 = call ptr @Builtins__structGet(ptr %997, ptr %4103)
  %4105 = load ptr, ptr @tag_Equals, align 8
  %4106 = call ptr @Builtins__structGet(ptr %997, ptr %4105)
  %4107 = load ptr, ptr @tag_TypeOf, align 8
  %4108 = call ptr @Builtins__structGet(ptr %997, ptr %4107)
  %4109 = load ptr, ptr @tag_Equals, align 8
  %4110 = call ptr @Builtins__structGet(ptr %997, ptr %4109)
  %4111 = load ptr, ptr @tag_Equals, align 8
  %4112 = call ptr @Builtins__structGet(ptr %997, ptr %4111)
  %4113 = load ptr, ptr @tag_Equals, align 8
  %4114 = call ptr @Builtins__structGet(ptr %997, ptr %4113)
  %4115 = load ptr, ptr @tag_TypeOf, align 8
  %4116 = call ptr @Builtins__structGet(ptr %997, ptr %4115)
  %4117 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4118 = call ptr @Builtins__structGet(ptr %997, ptr %4117)
  %4119 = load ptr, ptr @tag_Equals, align 8
  %4120 = call ptr @Builtins__structGet(ptr %997, ptr %4119)
  %4121 = load ptr, ptr @tag_TypeOf, align 8
  %4122 = call ptr @Builtins__structGet(ptr %997, ptr %4121)
  %4123 = load ptr, ptr @tag_IfElse, align 8
  %4124 = call ptr @Builtins__structGet(ptr %997, ptr %4123)
  %4125 = load ptr, ptr @tag_Equals, align 8
  %4126 = call ptr @Builtins__structGet(ptr %997, ptr %4125)
  %4127 = load ptr, ptr @tag_Equals, align 8
  %4128 = call ptr @Builtins__structGet(ptr %997, ptr %4127)
  %4129 = load ptr, ptr @tag_Equals, align 8
  %4130 = call ptr @Builtins__structGet(ptr %997, ptr %4129)
  %4131 = load ptr, ptr @tag_TypeOf, align 8
  %4132 = call ptr @Builtins__structGet(ptr %997, ptr %4131)
  %4133 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4134 = call ptr @Builtins__structGet(ptr %997, ptr %4133)
  %4135 = load ptr, ptr @tag_Equals, align 8
  %4136 = call ptr @Builtins__structGet(ptr %997, ptr %4135)
  %4137 = load ptr, ptr @tag_Equals, align 8
  %4138 = call ptr @Builtins__structGet(ptr %997, ptr %4137)
  %4139 = load ptr, ptr @tag_Equals, align 8
  %4140 = call ptr @Builtins__structGet(ptr %997, ptr %4139)
  %4141 = load ptr, ptr @tag_TypeOf, align 8
  %4142 = call ptr @Builtins__structGet(ptr %997, ptr %4141)
  %4143 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4144 = call ptr @Builtins__structGet(ptr %997, ptr %4143)
  %4145 = load ptr, ptr @tag_Equals, align 8
  %4146 = call ptr @Builtins__structGet(ptr %997, ptr %4145)
  %4147 = load ptr, ptr @tag_TypeOf, align 8
  %4148 = call ptr @Builtins__structGet(ptr %997, ptr %4147)
  %4149 = load ptr, ptr @tag_Equals, align 8
  %4150 = call ptr @Builtins__structGet(ptr %997, ptr %4149)
  %4151 = load ptr, ptr @tag_Equals, align 8
  %4152 = call ptr @Builtins__structGet(ptr %997, ptr %4151)
  %4153 = load ptr, ptr @tag_Equals, align 8
  %4154 = call ptr @Builtins__structGet(ptr %997, ptr %4153)
  %4155 = load ptr, ptr @tag_TypeOf, align 8
  %4156 = call ptr @Builtins__structGet(ptr %997, ptr %4155)
  %4157 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4158 = call ptr @Builtins__structGet(ptr %997, ptr %4157)
  %4159 = load ptr, ptr @tag_Equals, align 8
  %4160 = call ptr @Builtins__structGet(ptr %997, ptr %4159)
  %4161 = load ptr, ptr @tag_TypeOf, align 8
  %4162 = call ptr @Builtins__structGet(ptr %997, ptr %4161)
  %4163 = load ptr, ptr @tag_Equals, align 8
  %4164 = call ptr @Builtins__structGet(ptr %997, ptr %4163)
  %4165 = load ptr, ptr @tag_Equals, align 8
  %4166 = call ptr @Builtins__structGet(ptr %997, ptr %4165)
  %4167 = load ptr, ptr @tag_Equals, align 8
  %4168 = call ptr @Builtins__structGet(ptr %997, ptr %4167)
  %4169 = load ptr, ptr @tag_TypeOf, align 8
  %4170 = call ptr @Builtins__structGet(ptr %997, ptr %4169)
  %4171 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4172 = call ptr @Builtins__structGet(ptr %997, ptr %4171)
  %4173 = load ptr, ptr @tag_Equals, align 8
  %4174 = call ptr @Builtins__structGet(ptr %997, ptr %4173)
  %4175 = load ptr, ptr @tag_TypeOf, align 8
  %4176 = call ptr @Builtins__structGet(ptr %997, ptr %4175)
  %4177 = load ptr, ptr @tag_Equals, align 8
  %4178 = call ptr @Builtins__structGet(ptr %997, ptr %4177)
  %4179 = load ptr, ptr @tag_Equals, align 8
  %4180 = call ptr @Builtins__structGet(ptr %997, ptr %4179)
  %4181 = load ptr, ptr @tag_Equals, align 8
  %4182 = call ptr @Builtins__structGet(ptr %997, ptr %4181)
  %4183 = load ptr, ptr @tag_TypeOf, align 8
  %4184 = call ptr @Builtins__structGet(ptr %997, ptr %4183)
  %4185 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4186 = call ptr @Builtins__structGet(ptr %997, ptr %4185)
  %4187 = load ptr, ptr @tag_Equals, align 8
  %4188 = call ptr @Builtins__structGet(ptr %997, ptr %4187)
  %4189 = load ptr, ptr @tag_TypeOf, align 8
  %4190 = call ptr @Builtins__structGet(ptr %997, ptr %4189)
  %4191 = load ptr, ptr @tag_IfElse, align 8
  %4192 = call ptr @Builtins__structGet(ptr %997, ptr %4191)
  %4193 = load ptr, ptr @tag_Equals, align 8
  %4194 = call ptr @Builtins__structGet(ptr %997, ptr %4193)
  %4195 = load ptr, ptr @tag_Equals, align 8
  %4196 = call ptr @Builtins__structGet(ptr %997, ptr %4195)
  %4197 = load ptr, ptr @tag_Equals, align 8
  %4198 = call ptr @Builtins__structGet(ptr %997, ptr %4197)
  %4199 = load ptr, ptr @tag_TypeOf, align 8
  %4200 = call ptr @Builtins__structGet(ptr %997, ptr %4199)
  %4201 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4202 = call ptr @Builtins__structGet(ptr %997, ptr %4201)
  %4203 = load ptr, ptr @tag_Equals, align 8
  %4204 = call ptr @Builtins__structGet(ptr %997, ptr %4203)
  %4205 = load ptr, ptr @tag_TypeOf, align 8
  %4206 = call ptr @Builtins__structGet(ptr %997, ptr %4205)
  %4207 = load ptr, ptr @tag_Equals, align 8
  %4208 = call ptr @Builtins__structGet(ptr %997, ptr %4207)
  %4209 = load ptr, ptr @tag_Equals, align 8
  %4210 = call ptr @Builtins__structGet(ptr %997, ptr %4209)
  %4211 = load ptr, ptr @tag_Equals, align 8
  %4212 = call ptr @Builtins__structGet(ptr %997, ptr %4211)
  %4213 = load ptr, ptr @tag_TypeOf, align 8
  %4214 = call ptr @Builtins__structGet(ptr %997, ptr %4213)
  %4215 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4216 = call ptr @Builtins__structGet(ptr %997, ptr %4215)
  %4217 = load ptr, ptr @tag_Equals, align 8
  %4218 = call ptr @Builtins__structGet(ptr %997, ptr %4217)
  %4219 = load ptr, ptr @tag_TypeOf, align 8
  %4220 = call ptr @Builtins__structGet(ptr %997, ptr %4219)
  %4221 = load ptr, ptr @tag_IfElse, align 8
  %4222 = call ptr @Builtins__structGet(ptr %997, ptr %4221)
  %4223 = load ptr, ptr @tag_Equals, align 8
  %4224 = call ptr @Builtins__structGet(ptr %997, ptr %4223)
  %4225 = load ptr, ptr @tag_Equals, align 8
  %4226 = call ptr @Builtins__structGet(ptr %997, ptr %4225)
  %4227 = load ptr, ptr @tag_TypeOf, align 8
  %4228 = call ptr @Builtins__structGet(ptr %997, ptr %4227)
  %4229 = load ptr, ptr @tag_IntAdd, align 8
  %4230 = call ptr @Builtins__structGet(ptr %997, ptr %4229)
  %4231 = load ptr, ptr @tag_IntSubtract, align 8
  %4232 = call ptr @Builtins__structGet(ptr %997, ptr %4231)
  %4233 = load ptr, ptr @tag_IntMultiply, align 8
  %4234 = call ptr @Builtins__structGet(ptr %997, ptr %4233)
  %4235 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %4236 = call ptr @Builtins__structGet(ptr %997, ptr %4235)
  %4237 = load ptr, ptr @tag_IntRemainder, align 8
  %4238 = call ptr @Builtins__structGet(ptr %997, ptr %4237)
  %4239 = load ptr, ptr @tag_IntModulo, align 8
  %4240 = call ptr @Builtins__structGet(ptr %997, ptr %4239)
  %4241 = load ptr, ptr @tag_IntShiftLeft, align 8
  %4242 = call ptr @Builtins__structGet(ptr %997, ptr %4241)
  %4243 = load ptr, ptr @tag_IntShiftRight, align 8
  %4244 = call ptr @Builtins__structGet(ptr %997, ptr %4243)
  %4245 = load ptr, ptr @tag_IntBitLength, align 8
  %4246 = call ptr @Builtins__structGet(ptr %997, ptr %4245)
  %4247 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %4248 = call ptr @Builtins__structGet(ptr %997, ptr %4247)
  %4249 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %4250 = call ptr @Builtins__structGet(ptr %997, ptr %4249)
  %4251 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %4252 = call ptr @Builtins__structGet(ptr %997, ptr %4251)
  %4253 = load ptr, ptr @tag_IntParse, align 8
  %4254 = call ptr @Builtins__structGet(ptr %997, ptr %4253)
  %4255 = load ptr, ptr @tag_Equals, align 8
  %4256 = call ptr @Builtins__structGet(ptr %997, ptr %4255)
  %4257 = load ptr, ptr @tag_Equals, align 8
  %4258 = call ptr @Builtins__structGet(ptr %997, ptr %4257)
  %4259 = load ptr, ptr @tag_Equals, align 8
  %4260 = call ptr @Builtins__structGet(ptr %997, ptr %4259)
  %4261 = load ptr, ptr @tag_TypeOf, align 8
  %4262 = call ptr @Builtins__structGet(ptr %997, ptr %4261)
  %4263 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4264 = call ptr @Builtins__structGet(ptr %997, ptr %4263)
  %4265 = load ptr, ptr @tag_Equals, align 8
  %4266 = call ptr @Builtins__structGet(ptr %997, ptr %4265)
  %4267 = load ptr, ptr @tag_TypeOf, align 8
  %4268 = call ptr @Builtins__structGet(ptr %997, ptr %4267)
  %4269 = load ptr, ptr @tag_Equals, align 8
  %4270 = call ptr @Builtins__structGet(ptr %997, ptr %4269)
  %4271 = load ptr, ptr @tag_Equals, align 8
  %4272 = call ptr @Builtins__structGet(ptr %997, ptr %4271)
  %4273 = load ptr, ptr @tag_Equals, align 8
  %4274 = call ptr @Builtins__structGet(ptr %997, ptr %4273)
  %4275 = load ptr, ptr @tag_TypeOf, align 8
  %4276 = call ptr @Builtins__structGet(ptr %997, ptr %4275)
  %4277 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4278 = call ptr @Builtins__structGet(ptr %997, ptr %4277)
  %4279 = load ptr, ptr @tag_Equals, align 8
  %4280 = call ptr @Builtins__structGet(ptr %997, ptr %4279)
  %4281 = load ptr, ptr @tag_TypeOf, align 8
  %4282 = call ptr @Builtins__structGet(ptr %997, ptr %4281)
  %4283 = load ptr, ptr @tag_Equals, align 8
  %4284 = call ptr @Builtins__structGet(ptr %997, ptr %4283)
  %4285 = load ptr, ptr @tag_Equals, align 8
  %4286 = call ptr @Builtins__structGet(ptr %997, ptr %4285)
  %4287 = load ptr, ptr @tag_Equals, align 8
  %4288 = call ptr @Builtins__structGet(ptr %997, ptr %4287)
  %4289 = load ptr, ptr @tag_TypeOf, align 8
  %4290 = call ptr @Builtins__structGet(ptr %997, ptr %4289)
  %4291 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4292 = call ptr @Builtins__structGet(ptr %997, ptr %4291)
  %4293 = load ptr, ptr @tag_Equals, align 8
  %4294 = call ptr @Builtins__structGet(ptr %997, ptr %4293)
  %4295 = load ptr, ptr @tag_TypeOf, align 8
  %4296 = call ptr @Builtins__structGet(ptr %997, ptr %4295)
  %4297 = load ptr, ptr @tag_IfElse, align 8
  %4298 = call ptr @Builtins__structGet(ptr %997, ptr %4297)
  %4299 = load ptr, ptr @tag_Equals, align 8
  %4300 = call ptr @Builtins__structGet(ptr %997, ptr %4299)
  %4301 = load ptr, ptr @tag_Equals, align 8
  %4302 = call ptr @Builtins__structGet(ptr %997, ptr %4301)
  %4303 = load ptr, ptr @tag_Equals, align 8
  %4304 = call ptr @Builtins__structGet(ptr %997, ptr %4303)
  %4305 = load ptr, ptr @tag_TypeOf, align 8
  %4306 = call ptr @Builtins__structGet(ptr %997, ptr %4305)
  %4307 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4308 = call ptr @Builtins__structGet(ptr %997, ptr %4307)
  %4309 = load ptr, ptr @tag_Equals, align 8
  %4310 = call ptr @Builtins__structGet(ptr %997, ptr %4309)
  %4311 = load ptr, ptr @tag_Equals, align 8
  %4312 = call ptr @Builtins__structGet(ptr %997, ptr %4311)
  %4313 = load ptr, ptr @tag_Equals, align 8
  %4314 = call ptr @Builtins__structGet(ptr %997, ptr %4313)
  %4315 = load ptr, ptr @tag_TypeOf, align 8
  %4316 = call ptr @Builtins__structGet(ptr %997, ptr %4315)
  %4317 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4318 = call ptr @Builtins__structGet(ptr %997, ptr %4317)
  %4319 = load ptr, ptr @tag_Equals, align 8
  %4320 = call ptr @Builtins__structGet(ptr %997, ptr %4319)
  %4321 = load ptr, ptr @tag_TypeOf, align 8
  %4322 = call ptr @Builtins__structGet(ptr %997, ptr %4321)
  %4323 = load ptr, ptr @tag_Equals, align 8
  %4324 = call ptr @Builtins__structGet(ptr %997, ptr %4323)
  %4325 = load ptr, ptr @tag_Equals, align 8
  %4326 = call ptr @Builtins__structGet(ptr %997, ptr %4325)
  %4327 = load ptr, ptr @tag_Equals, align 8
  %4328 = call ptr @Builtins__structGet(ptr %997, ptr %4327)
  %4329 = load ptr, ptr @tag_TypeOf, align 8
  %4330 = call ptr @Builtins__structGet(ptr %997, ptr %4329)
  %4331 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4332 = call ptr @Builtins__structGet(ptr %997, ptr %4331)
  %4333 = load ptr, ptr @tag_Equals, align 8
  %4334 = call ptr @Builtins__structGet(ptr %997, ptr %4333)
  %4335 = load ptr, ptr @tag_TypeOf, align 8
  %4336 = call ptr @Builtins__structGet(ptr %997, ptr %4335)
  %4337 = load ptr, ptr @tag_IfElse, align 8
  %4338 = call ptr @Builtins__structGet(ptr %997, ptr %4337)
  %4339 = load ptr, ptr @tag_Equals, align 8
  %4340 = call ptr @Builtins__structGet(ptr %997, ptr %4339)
  %4341 = load ptr, ptr @tag_TypeOf, align 8
  %4342 = call ptr @Builtins__structGet(ptr %997, ptr %4341)
  %4343 = load ptr, ptr @tag_Equals, align 8
  %4344 = call ptr @Builtins__structGet(ptr %997, ptr %4343)
  %4345 = load ptr, ptr @tag_Equals, align 8
  %4346 = call ptr @Builtins__structGet(ptr %997, ptr %4345)
  %4347 = load ptr, ptr @tag_Equals, align 8
  %4348 = call ptr @Builtins__structGet(ptr %997, ptr %4347)
  %4349 = load ptr, ptr @tag_TypeOf, align 8
  %4350 = call ptr @Builtins__structGet(ptr %997, ptr %4349)
  %4351 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4352 = call ptr @Builtins__structGet(ptr %997, ptr %4351)
  %4353 = load ptr, ptr @tag_Equals, align 8
  %4354 = call ptr @Builtins__structGet(ptr %997, ptr %4353)
  %4355 = load ptr, ptr @tag_TypeOf, align 8
  %4356 = call ptr @Builtins__structGet(ptr %997, ptr %4355)
  %4357 = load ptr, ptr @tag_Equals, align 8
  %4358 = call ptr @Builtins__structGet(ptr %997, ptr %4357)
  %4359 = load ptr, ptr @tag_Equals, align 8
  %4360 = call ptr @Builtins__structGet(ptr %997, ptr %4359)
  %4361 = load ptr, ptr @tag_Equals, align 8
  %4362 = call ptr @Builtins__structGet(ptr %997, ptr %4361)
  %4363 = load ptr, ptr @tag_TypeOf, align 8
  %4364 = call ptr @Builtins__structGet(ptr %997, ptr %4363)
  %4365 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4366 = call ptr @Builtins__structGet(ptr %997, ptr %4365)
  %4367 = load ptr, ptr @tag_Equals, align 8
  %4368 = call ptr @Builtins__structGet(ptr %997, ptr %4367)
  %4369 = load ptr, ptr @tag_TypeOf, align 8
  %4370 = call ptr @Builtins__structGet(ptr %997, ptr %4369)
  %4371 = load ptr, ptr @tag_Equals, align 8
  %4372 = call ptr @Builtins__structGet(ptr %997, ptr %4371)
  %4373 = load ptr, ptr @tag_Equals, align 8
  %4374 = call ptr @Builtins__structGet(ptr %997, ptr %4373)
  %4375 = load ptr, ptr @tag_Equals, align 8
  %4376 = call ptr @Builtins__structGet(ptr %997, ptr %4375)
  %4377 = load ptr, ptr @tag_TypeOf, align 8
  %4378 = call ptr @Builtins__structGet(ptr %997, ptr %4377)
  %4379 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4380 = call ptr @Builtins__structGet(ptr %997, ptr %4379)
  %4381 = load ptr, ptr @tag_Equals, align 8
  %4382 = call ptr @Builtins__structGet(ptr %997, ptr %4381)
  %4383 = load ptr, ptr @tag_TypeOf, align 8
  %4384 = call ptr @Builtins__structGet(ptr %997, ptr %4383)
  %4385 = load ptr, ptr @tag_IfElse, align 8
  %4386 = call ptr @Builtins__structGet(ptr %997, ptr %4385)
  %4387 = load ptr, ptr @tag_Equals, align 8
  %4388 = call ptr @Builtins__structGet(ptr %997, ptr %4387)
  %4389 = load ptr, ptr @tag_TypeOf, align 8
  %4390 = call ptr @Builtins__structGet(ptr %997, ptr %4389)
  %4391 = load ptr, ptr @tag_TagHasValue, align 8
  %4392 = call ptr @Builtins__structGet(ptr %997, ptr %4391)
  %4393 = load ptr, ptr @tag_TagWithoutValue, align 8
  %4394 = call ptr @Builtins__structGet(ptr %997, ptr %4393)
  %4395 = load ptr, ptr @tag_TagGetValue, align 8
  %4396 = call ptr @Builtins__structGet(ptr %997, ptr %4395)
  %4397 = load ptr, ptr @tag_Equals, align 8
  %4398 = call ptr @Builtins__structGet(ptr %997, ptr %4397)
  %4399 = load ptr, ptr @tag_TypeOf, align 8
  %4400 = call ptr @Builtins__structGet(ptr %997, ptr %4399)
  %4401 = load ptr, ptr @tag_Equals, align 8
  %4402 = call ptr @Builtins__structGet(ptr %997, ptr %4401)
  %4403 = load ptr, ptr @tag_TypeOf, align 8
  %4404 = call ptr @Builtins__structGet(ptr %997, ptr %4403)
  %4405 = load ptr, ptr @tag_ListLength, align 8
  %4406 = call ptr @Builtins__structGet(ptr %997, ptr %4405)
  %4407 = load ptr, ptr @tag_ListGet, align 8
  %4408 = call ptr @Builtins__structGet(ptr %997, ptr %4407)
  %4409 = load ptr, ptr @tag_ListInsert, align 8
  %4410 = call ptr @Builtins__structGet(ptr %997, ptr %4409)
  %4411 = load ptr, ptr @tag_ListReplace, align 8
  %4412 = call ptr @Builtins__structGet(ptr %997, ptr %4411)
  %4413 = load ptr, ptr @tag_ListRemoveAt, align 8
  %4414 = call ptr @Builtins__structGet(ptr %997, ptr %4413)
  %4415 = load ptr, ptr @tag_ListFilled, align 8
  %4416 = call ptr @Builtins__structGet(ptr %997, ptr %4415)
  %4417 = load ptr, ptr @tag_Equals, align 8
  %4418 = call ptr @Builtins__structGet(ptr %997, ptr %4417)
  %4419 = load ptr, ptr @tag_Equals, align 8
  %4420 = call ptr @Builtins__structGet(ptr %997, ptr %4419)
  %4421 = load ptr, ptr @tag_Equals, align 8
  %4422 = call ptr @Builtins__structGet(ptr %997, ptr %4421)
  %4423 = load ptr, ptr @tag_TypeOf, align 8
  %4424 = call ptr @Builtins__structGet(ptr %997, ptr %4423)
  %4425 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4426 = call ptr @Builtins__structGet(ptr %997, ptr %4425)
  %4427 = load ptr, ptr @tag_Equals, align 8
  %4428 = call ptr @Builtins__structGet(ptr %997, ptr %4427)
  %4429 = load ptr, ptr @tag_TypeOf, align 8
  %4430 = call ptr @Builtins__structGet(ptr %997, ptr %4429)
  %4431 = load ptr, ptr @tag_Equals, align 8
  %4432 = call ptr @Builtins__structGet(ptr %997, ptr %4431)
  %4433 = load ptr, ptr @tag_Equals, align 8
  %4434 = call ptr @Builtins__structGet(ptr %997, ptr %4433)
  %4435 = load ptr, ptr @tag_Equals, align 8
  %4436 = call ptr @Builtins__structGet(ptr %997, ptr %4435)
  %4437 = load ptr, ptr @tag_TypeOf, align 8
  %4438 = call ptr @Builtins__structGet(ptr %997, ptr %4437)
  %4439 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4440 = call ptr @Builtins__structGet(ptr %997, ptr %4439)
  %4441 = load ptr, ptr @tag_Equals, align 8
  %4442 = call ptr @Builtins__structGet(ptr %997, ptr %4441)
  %4443 = load ptr, ptr @tag_TypeOf, align 8
  %4444 = call ptr @Builtins__structGet(ptr %997, ptr %4443)
  %4445 = load ptr, ptr @tag_Equals, align 8
  %4446 = call ptr @Builtins__structGet(ptr %997, ptr %4445)
  %4447 = load ptr, ptr @tag_Equals, align 8
  %4448 = call ptr @Builtins__structGet(ptr %997, ptr %4447)
  %4449 = load ptr, ptr @tag_Equals, align 8
  %4450 = call ptr @Builtins__structGet(ptr %997, ptr %4449)
  %4451 = load ptr, ptr @tag_TypeOf, align 8
  %4452 = call ptr @Builtins__structGet(ptr %997, ptr %4451)
  %4453 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4454 = call ptr @Builtins__structGet(ptr %997, ptr %4453)
  %4455 = load ptr, ptr @tag_Equals, align 8
  %4456 = call ptr @Builtins__structGet(ptr %997, ptr %4455)
  %4457 = load ptr, ptr @tag_TypeOf, align 8
  %4458 = call ptr @Builtins__structGet(ptr %997, ptr %4457)
  %4459 = load ptr, ptr @tag_IfElse, align 8
  %4460 = call ptr @Builtins__structGet(ptr %997, ptr %4459)
  %4461 = load ptr, ptr @tag_Equals, align 8
  %4462 = call ptr @Builtins__structGet(ptr %997, ptr %4461)
  %4463 = load ptr, ptr @tag_Equals, align 8
  %4464 = call ptr @Builtins__structGet(ptr %997, ptr %4463)
  %4465 = load ptr, ptr @tag_Equals, align 8
  %4466 = call ptr @Builtins__structGet(ptr %997, ptr %4465)
  %4467 = load ptr, ptr @tag_Equals, align 8
  %4468 = call ptr @Builtins__structGet(ptr %997, ptr %4467)
  %4469 = load ptr, ptr @tag_TypeOf, align 8
  %4470 = call ptr @Builtins__structGet(ptr %997, ptr %4469)
  %4471 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4472 = call ptr @Builtins__structGet(ptr %997, ptr %4471)
  %4473 = load ptr, ptr @tag_Equals, align 8
  %4474 = call ptr @Builtins__structGet(ptr %997, ptr %4473)
  %4475 = load ptr, ptr @tag_TypeOf, align 8
  %4476 = call ptr @Builtins__structGet(ptr %997, ptr %4475)
  %4477 = load ptr, ptr @tag_Equals, align 8
  %4478 = call ptr @Builtins__structGet(ptr %997, ptr %4477)
  %4479 = load ptr, ptr @tag_Equals, align 8
  %4480 = call ptr @Builtins__structGet(ptr %997, ptr %4479)
  %4481 = load ptr, ptr @tag_Equals, align 8
  %4482 = call ptr @Builtins__structGet(ptr %997, ptr %4481)
  %4483 = load ptr, ptr @tag_TypeOf, align 8
  %4484 = call ptr @Builtins__structGet(ptr %997, ptr %4483)
  %4485 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4486 = call ptr @Builtins__structGet(ptr %997, ptr %4485)
  %4487 = load ptr, ptr @tag_Equals, align 8
  %4488 = call ptr @Builtins__structGet(ptr %997, ptr %4487)
  %4489 = load ptr, ptr @tag_TypeOf, align 8
  %4490 = call ptr @Builtins__structGet(ptr %997, ptr %4489)
  %4491 = load ptr, ptr @tag_Equals, align 8
  %4492 = call ptr @Builtins__structGet(ptr %997, ptr %4491)
  %4493 = load ptr, ptr @tag_Equals, align 8
  %4494 = call ptr @Builtins__structGet(ptr %997, ptr %4493)
  %4495 = load ptr, ptr @tag_Equals, align 8
  %4496 = call ptr @Builtins__structGet(ptr %997, ptr %4495)
  %4497 = load ptr, ptr @tag_TypeOf, align 8
  %4498 = call ptr @Builtins__structGet(ptr %997, ptr %4497)
  %4499 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4500 = call ptr @Builtins__structGet(ptr %997, ptr %4499)
  %4501 = load ptr, ptr @tag_Equals, align 8
  %4502 = call ptr @Builtins__structGet(ptr %997, ptr %4501)
  %4503 = load ptr, ptr @tag_TypeOf, align 8
  %4504 = call ptr @Builtins__structGet(ptr %997, ptr %4503)
  %4505 = load ptr, ptr @tag_Equals, align 8
  %4506 = call ptr @Builtins__structGet(ptr %997, ptr %4505)
  %4507 = load ptr, ptr @tag_Equals, align 8
  %4508 = call ptr @Builtins__structGet(ptr %997, ptr %4507)
  %4509 = load ptr, ptr @tag_Equals, align 8
  %4510 = call ptr @Builtins__structGet(ptr %997, ptr %4509)
  %4511 = load ptr, ptr @tag_TypeOf, align 8
  %4512 = call ptr @Builtins__structGet(ptr %997, ptr %4511)
  %4513 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4514 = call ptr @Builtins__structGet(ptr %997, ptr %4513)
  %4515 = load ptr, ptr @tag_Equals, align 8
  %4516 = call ptr @Builtins__structGet(ptr %997, ptr %4515)
  %4517 = load ptr, ptr @tag_TypeOf, align 8
  %4518 = call ptr @Builtins__structGet(ptr %997, ptr %4517)
  %4519 = load ptr, ptr @tag_IfElse, align 8
  %4520 = call ptr @Builtins__structGet(ptr %997, ptr %4519)
  %4521 = load ptr, ptr @tag_Equals, align 8
  %4522 = call ptr @Builtins__structGet(ptr %997, ptr %4521)
  %4523 = load ptr, ptr @tag_Equals, align 8
  %4524 = call ptr @Builtins__structGet(ptr %997, ptr %4523)
  %4525 = load ptr, ptr @tag_Equals, align 8
  %4526 = call ptr @Builtins__structGet(ptr %997, ptr %4525)
  %4527 = load ptr, ptr @tag_TypeOf, align 8
  %4528 = call ptr @Builtins__structGet(ptr %997, ptr %4527)
  %4529 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4530 = call ptr @Builtins__structGet(ptr %997, ptr %4529)
  %4531 = load ptr, ptr @tag_Equals, align 8
  %4532 = call ptr @Builtins__structGet(ptr %997, ptr %4531)
  %4533 = load ptr, ptr @tag_TypeOf, align 8
  %4534 = call ptr @Builtins__structGet(ptr %997, ptr %4533)
  %4535 = load ptr, ptr @tag_Equals, align 8
  %4536 = call ptr @Builtins__structGet(ptr %997, ptr %4535)
  %4537 = load ptr, ptr @tag_Equals, align 8
  %4538 = call ptr @Builtins__structGet(ptr %997, ptr %4537)
  %4539 = load ptr, ptr @tag_Equals, align 8
  %4540 = call ptr @Builtins__structGet(ptr %997, ptr %4539)
  %4541 = load ptr, ptr @tag_TypeOf, align 8
  %4542 = call ptr @Builtins__structGet(ptr %997, ptr %4541)
  %4543 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4544 = call ptr @Builtins__structGet(ptr %997, ptr %4543)
  %4545 = load ptr, ptr @tag_Equals, align 8
  %4546 = call ptr @Builtins__structGet(ptr %997, ptr %4545)
  %4547 = load ptr, ptr @tag_TypeOf, align 8
  %4548 = call ptr @Builtins__structGet(ptr %997, ptr %4547)
  %4549 = load ptr, ptr @tag_IfElse, align 8
  %4550 = call ptr @Builtins__structGet(ptr %997, ptr %4549)
  %4551 = load ptr, ptr @tag_Equals, align 8
  %4552 = call ptr @Builtins__structGet(ptr %997, ptr %4551)
  %4553 = load ptr, ptr @tag_Equals, align 8
  %4554 = call ptr @Builtins__structGet(ptr %997, ptr %4553)
  %4555 = load ptr, ptr @tag_TypeOf, align 8
  %4556 = call ptr @Builtins__structGet(ptr %997, ptr %4555)
  %4557 = load ptr, ptr @tag_IntAdd, align 8
  %4558 = call ptr @Builtins__structGet(ptr %997, ptr %4557)
  %4559 = load ptr, ptr @tag_IntSubtract, align 8
  %4560 = call ptr @Builtins__structGet(ptr %997, ptr %4559)
  %4561 = load ptr, ptr @tag_IntMultiply, align 8
  %4562 = call ptr @Builtins__structGet(ptr %997, ptr %4561)
  %4563 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %4564 = call ptr @Builtins__structGet(ptr %997, ptr %4563)
  %4565 = load ptr, ptr @tag_IntRemainder, align 8
  %4566 = call ptr @Builtins__structGet(ptr %997, ptr %4565)
  %4567 = load ptr, ptr @tag_IntModulo, align 8
  %4568 = call ptr @Builtins__structGet(ptr %997, ptr %4567)
  %4569 = load ptr, ptr @tag_IntShiftLeft, align 8
  %4570 = call ptr @Builtins__structGet(ptr %997, ptr %4569)
  %4571 = load ptr, ptr @tag_IntShiftRight, align 8
  %4572 = call ptr @Builtins__structGet(ptr %997, ptr %4571)
  %4573 = load ptr, ptr @tag_IntBitLength, align 8
  %4574 = call ptr @Builtins__structGet(ptr %997, ptr %4573)
  %4575 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %4576 = call ptr @Builtins__structGet(ptr %997, ptr %4575)
  %4577 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %4578 = call ptr @Builtins__structGet(ptr %997, ptr %4577)
  %4579 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %4580 = call ptr @Builtins__structGet(ptr %997, ptr %4579)
  %4581 = load ptr, ptr @tag_IntParse, align 8
  %4582 = call ptr @Builtins__structGet(ptr %997, ptr %4581)
  %4583 = load ptr, ptr @tag_Equals, align 8
  %4584 = call ptr @Builtins__structGet(ptr %997, ptr %4583)
  %4585 = load ptr, ptr @tag_Equals, align 8
  %4586 = call ptr @Builtins__structGet(ptr %997, ptr %4585)
  %4587 = load ptr, ptr @tag_Equals, align 8
  %4588 = call ptr @Builtins__structGet(ptr %997, ptr %4587)
  %4589 = load ptr, ptr @tag_TypeOf, align 8
  %4590 = call ptr @Builtins__structGet(ptr %997, ptr %4589)
  %4591 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4592 = call ptr @Builtins__structGet(ptr %997, ptr %4591)
  %4593 = load ptr, ptr @tag_Equals, align 8
  %4594 = call ptr @Builtins__structGet(ptr %997, ptr %4593)
  %4595 = load ptr, ptr @tag_TypeOf, align 8
  %4596 = call ptr @Builtins__structGet(ptr %997, ptr %4595)
  %4597 = load ptr, ptr @tag_Equals, align 8
  %4598 = call ptr @Builtins__structGet(ptr %997, ptr %4597)
  %4599 = load ptr, ptr @tag_Equals, align 8
  %4600 = call ptr @Builtins__structGet(ptr %997, ptr %4599)
  %4601 = load ptr, ptr @tag_Equals, align 8
  %4602 = call ptr @Builtins__structGet(ptr %997, ptr %4601)
  %4603 = load ptr, ptr @tag_TypeOf, align 8
  %4604 = call ptr @Builtins__structGet(ptr %997, ptr %4603)
  %4605 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4606 = call ptr @Builtins__structGet(ptr %997, ptr %4605)
  %4607 = load ptr, ptr @tag_Equals, align 8
  %4608 = call ptr @Builtins__structGet(ptr %997, ptr %4607)
  %4609 = load ptr, ptr @tag_TypeOf, align 8
  %4610 = call ptr @Builtins__structGet(ptr %997, ptr %4609)
  %4611 = load ptr, ptr @tag_Equals, align 8
  %4612 = call ptr @Builtins__structGet(ptr %997, ptr %4611)
  %4613 = load ptr, ptr @tag_Equals, align 8
  %4614 = call ptr @Builtins__structGet(ptr %997, ptr %4613)
  %4615 = load ptr, ptr @tag_Equals, align 8
  %4616 = call ptr @Builtins__structGet(ptr %997, ptr %4615)
  %4617 = load ptr, ptr @tag_TypeOf, align 8
  %4618 = call ptr @Builtins__structGet(ptr %997, ptr %4617)
  %4619 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4620 = call ptr @Builtins__structGet(ptr %997, ptr %4619)
  %4621 = load ptr, ptr @tag_Equals, align 8
  %4622 = call ptr @Builtins__structGet(ptr %997, ptr %4621)
  %4623 = load ptr, ptr @tag_TypeOf, align 8
  %4624 = call ptr @Builtins__structGet(ptr %997, ptr %4623)
  %4625 = load ptr, ptr @tag_IfElse, align 8
  %4626 = call ptr @Builtins__structGet(ptr %997, ptr %4625)
  %4627 = load ptr, ptr @tag_Equals, align 8
  %4628 = call ptr @Builtins__structGet(ptr %997, ptr %4627)
  %4629 = load ptr, ptr @tag_Equals, align 8
  %4630 = call ptr @Builtins__structGet(ptr %997, ptr %4629)
  %4631 = load ptr, ptr @tag_Equals, align 8
  %4632 = call ptr @Builtins__structGet(ptr %997, ptr %4631)
  %4633 = load ptr, ptr @tag_TypeOf, align 8
  %4634 = call ptr @Builtins__structGet(ptr %997, ptr %4633)
  %4635 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4636 = call ptr @Builtins__structGet(ptr %997, ptr %4635)
  %4637 = load ptr, ptr @tag_Equals, align 8
  %4638 = call ptr @Builtins__structGet(ptr %997, ptr %4637)
  %4639 = load ptr, ptr @tag_Equals, align 8
  %4640 = call ptr @Builtins__structGet(ptr %997, ptr %4639)
  %4641 = load ptr, ptr @tag_Equals, align 8
  %4642 = call ptr @Builtins__structGet(ptr %997, ptr %4641)
  %4643 = load ptr, ptr @tag_TypeOf, align 8
  %4644 = call ptr @Builtins__structGet(ptr %997, ptr %4643)
  %4645 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4646 = call ptr @Builtins__structGet(ptr %997, ptr %4645)
  %4647 = load ptr, ptr @tag_Equals, align 8
  %4648 = call ptr @Builtins__structGet(ptr %997, ptr %4647)
  %4649 = load ptr, ptr @tag_TypeOf, align 8
  %4650 = call ptr @Builtins__structGet(ptr %997, ptr %4649)
  %4651 = load ptr, ptr @tag_Equals, align 8
  %4652 = call ptr @Builtins__structGet(ptr %997, ptr %4651)
  %4653 = load ptr, ptr @tag_Equals, align 8
  %4654 = call ptr @Builtins__structGet(ptr %997, ptr %4653)
  %4655 = load ptr, ptr @tag_Equals, align 8
  %4656 = call ptr @Builtins__structGet(ptr %997, ptr %4655)
  %4657 = load ptr, ptr @tag_TypeOf, align 8
  %4658 = call ptr @Builtins__structGet(ptr %997, ptr %4657)
  %4659 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4660 = call ptr @Builtins__structGet(ptr %997, ptr %4659)
  %4661 = load ptr, ptr @tag_Equals, align 8
  %4662 = call ptr @Builtins__structGet(ptr %997, ptr %4661)
  %4663 = load ptr, ptr @tag_TypeOf, align 8
  %4664 = call ptr @Builtins__structGet(ptr %997, ptr %4663)
  %4665 = load ptr, ptr @tag_Equals, align 8
  %4666 = call ptr @Builtins__structGet(ptr %997, ptr %4665)
  %4667 = load ptr, ptr @tag_Equals, align 8
  %4668 = call ptr @Builtins__structGet(ptr %997, ptr %4667)
  %4669 = load ptr, ptr @tag_Equals, align 8
  %4670 = call ptr @Builtins__structGet(ptr %997, ptr %4669)
  %4671 = load ptr, ptr @tag_TypeOf, align 8
  %4672 = call ptr @Builtins__structGet(ptr %997, ptr %4671)
  %4673 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4674 = call ptr @Builtins__structGet(ptr %997, ptr %4673)
  %4675 = load ptr, ptr @tag_Equals, align 8
  %4676 = call ptr @Builtins__structGet(ptr %997, ptr %4675)
  %4677 = load ptr, ptr @tag_TypeOf, align 8
  %4678 = call ptr @Builtins__structGet(ptr %997, ptr %4677)
  %4679 = load ptr, ptr @tag_Equals, align 8
  %4680 = call ptr @Builtins__structGet(ptr %997, ptr %4679)
  %4681 = load ptr, ptr @tag_Equals, align 8
  %4682 = call ptr @Builtins__structGet(ptr %997, ptr %4681)
  %4683 = load ptr, ptr @tag_Equals, align 8
  %4684 = call ptr @Builtins__structGet(ptr %997, ptr %4683)
  %4685 = load ptr, ptr @tag_TypeOf, align 8
  %4686 = call ptr @Builtins__structGet(ptr %997, ptr %4685)
  %4687 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4688 = call ptr @Builtins__structGet(ptr %997, ptr %4687)
  %4689 = load ptr, ptr @tag_Equals, align 8
  %4690 = call ptr @Builtins__structGet(ptr %997, ptr %4689)
  %4691 = load ptr, ptr @tag_TypeOf, align 8
  %4692 = call ptr @Builtins__structGet(ptr %997, ptr %4691)
  %4693 = load ptr, ptr @tag_IfElse, align 8
  %4694 = call ptr @Builtins__structGet(ptr %997, ptr %4693)
  %4695 = load ptr, ptr @tag_Equals, align 8
  %4696 = call ptr @Builtins__structGet(ptr %997, ptr %4695)
  %4697 = load ptr, ptr @tag_Equals, align 8
  %4698 = call ptr @Builtins__structGet(ptr %997, ptr %4697)
  %4699 = load ptr, ptr @tag_Equals, align 8
  %4700 = call ptr @Builtins__structGet(ptr %997, ptr %4699)
  %4701 = load ptr, ptr @tag_TypeOf, align 8
  %4702 = call ptr @Builtins__structGet(ptr %997, ptr %4701)
  %4703 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4704 = call ptr @Builtins__structGet(ptr %997, ptr %4703)
  %4705 = load ptr, ptr @tag_Equals, align 8
  %4706 = call ptr @Builtins__structGet(ptr %997, ptr %4705)
  %4707 = load ptr, ptr @tag_TypeOf, align 8
  %4708 = call ptr @Builtins__structGet(ptr %997, ptr %4707)
  %4709 = load ptr, ptr @tag_Equals, align 8
  %4710 = call ptr @Builtins__structGet(ptr %997, ptr %4709)
  %4711 = load ptr, ptr @tag_Equals, align 8
  %4712 = call ptr @Builtins__structGet(ptr %997, ptr %4711)
  %4713 = load ptr, ptr @tag_Equals, align 8
  %4714 = call ptr @Builtins__structGet(ptr %997, ptr %4713)
  %4715 = load ptr, ptr @tag_TypeOf, align 8
  %4716 = call ptr @Builtins__structGet(ptr %997, ptr %4715)
  %4717 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4718 = call ptr @Builtins__structGet(ptr %997, ptr %4717)
  %4719 = load ptr, ptr @tag_Equals, align 8
  %4720 = call ptr @Builtins__structGet(ptr %997, ptr %4719)
  %4721 = load ptr, ptr @tag_TypeOf, align 8
  %4722 = call ptr @Builtins__structGet(ptr %997, ptr %4721)
  %4723 = load ptr, ptr @tag_IfElse, align 8
  %4724 = call ptr @Builtins__structGet(ptr %997, ptr %4723)
  %4725 = load ptr, ptr @tag_Equals, align 8
  %4726 = call ptr @Builtins__structGet(ptr %997, ptr %4725)
  %4727 = load ptr, ptr @tag_Equals, align 8
  %4728 = call ptr @Builtins__structGet(ptr %997, ptr %4727)
  %4729 = load ptr, ptr @tag_TypeOf, align 8
  %4730 = call ptr @Builtins__structGet(ptr %997, ptr %4729)
  %4731 = load ptr, ptr @tag_IntAdd, align 8
  %4732 = call ptr @Builtins__structGet(ptr %997, ptr %4731)
  %4733 = load ptr, ptr @tag_IntSubtract, align 8
  %4734 = call ptr @Builtins__structGet(ptr %997, ptr %4733)
  %4735 = load ptr, ptr @tag_IntMultiply, align 8
  %4736 = call ptr @Builtins__structGet(ptr %997, ptr %4735)
  %4737 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %4738 = call ptr @Builtins__structGet(ptr %997, ptr %4737)
  %4739 = load ptr, ptr @tag_IntRemainder, align 8
  %4740 = call ptr @Builtins__structGet(ptr %997, ptr %4739)
  %4741 = load ptr, ptr @tag_IntModulo, align 8
  %4742 = call ptr @Builtins__structGet(ptr %997, ptr %4741)
  %4743 = load ptr, ptr @tag_IntShiftLeft, align 8
  %4744 = call ptr @Builtins__structGet(ptr %997, ptr %4743)
  %4745 = load ptr, ptr @tag_IntShiftRight, align 8
  %4746 = call ptr @Builtins__structGet(ptr %997, ptr %4745)
  %4747 = load ptr, ptr @tag_IntBitLength, align 8
  %4748 = call ptr @Builtins__structGet(ptr %997, ptr %4747)
  %4749 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %4750 = call ptr @Builtins__structGet(ptr %997, ptr %4749)
  %4751 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %4752 = call ptr @Builtins__structGet(ptr %997, ptr %4751)
  %4753 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %4754 = call ptr @Builtins__structGet(ptr %997, ptr %4753)
  %4755 = load ptr, ptr @tag_IntParse, align 8
  %4756 = call ptr @Builtins__structGet(ptr %997, ptr %4755)
  %4757 = load ptr, ptr @tag_Equals, align 8
  %4758 = call ptr @Builtins__structGet(ptr %997, ptr %4757)
  %4759 = load ptr, ptr @tag_Equals, align 8
  %4760 = call ptr @Builtins__structGet(ptr %997, ptr %4759)
  %4761 = load ptr, ptr @tag_Equals, align 8
  %4762 = call ptr @Builtins__structGet(ptr %997, ptr %4761)
  %4763 = load ptr, ptr @tag_TypeOf, align 8
  %4764 = call ptr @Builtins__structGet(ptr %997, ptr %4763)
  %4765 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4766 = call ptr @Builtins__structGet(ptr %997, ptr %4765)
  %4767 = load ptr, ptr @tag_Equals, align 8
  %4768 = call ptr @Builtins__structGet(ptr %997, ptr %4767)
  %4769 = load ptr, ptr @tag_TypeOf, align 8
  %4770 = call ptr @Builtins__structGet(ptr %997, ptr %4769)
  %4771 = load ptr, ptr @tag_Equals, align 8
  %4772 = call ptr @Builtins__structGet(ptr %997, ptr %4771)
  %4773 = load ptr, ptr @tag_Equals, align 8
  %4774 = call ptr @Builtins__structGet(ptr %997, ptr %4773)
  %4775 = load ptr, ptr @tag_Equals, align 8
  %4776 = call ptr @Builtins__structGet(ptr %997, ptr %4775)
  %4777 = load ptr, ptr @tag_TypeOf, align 8
  %4778 = call ptr @Builtins__structGet(ptr %997, ptr %4777)
  %4779 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4780 = call ptr @Builtins__structGet(ptr %997, ptr %4779)
  %4781 = load ptr, ptr @tag_Equals, align 8
  %4782 = call ptr @Builtins__structGet(ptr %997, ptr %4781)
  %4783 = load ptr, ptr @tag_TypeOf, align 8
  %4784 = call ptr @Builtins__structGet(ptr %997, ptr %4783)
  %4785 = load ptr, ptr @tag_Equals, align 8
  %4786 = call ptr @Builtins__structGet(ptr %997, ptr %4785)
  %4787 = load ptr, ptr @tag_Equals, align 8
  %4788 = call ptr @Builtins__structGet(ptr %997, ptr %4787)
  %4789 = load ptr, ptr @tag_Equals, align 8
  %4790 = call ptr @Builtins__structGet(ptr %997, ptr %4789)
  %4791 = load ptr, ptr @tag_TypeOf, align 8
  %4792 = call ptr @Builtins__structGet(ptr %997, ptr %4791)
  %4793 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4794 = call ptr @Builtins__structGet(ptr %997, ptr %4793)
  %4795 = load ptr, ptr @tag_Equals, align 8
  %4796 = call ptr @Builtins__structGet(ptr %997, ptr %4795)
  %4797 = load ptr, ptr @tag_TypeOf, align 8
  %4798 = call ptr @Builtins__structGet(ptr %997, ptr %4797)
  %4799 = load ptr, ptr @tag_IfElse, align 8
  %4800 = call ptr @Builtins__structGet(ptr %997, ptr %4799)
  %4801 = load ptr, ptr @tag_Equals, align 8
  %4802 = call ptr @Builtins__structGet(ptr %997, ptr %4801)
  %4803 = load ptr, ptr @tag_Equals, align 8
  %4804 = call ptr @Builtins__structGet(ptr %997, ptr %4803)
  %4805 = load ptr, ptr @tag_Equals, align 8
  %4806 = call ptr @Builtins__structGet(ptr %997, ptr %4805)
  %4807 = load ptr, ptr @tag_TypeOf, align 8
  %4808 = call ptr @Builtins__structGet(ptr %997, ptr %4807)
  %4809 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4810 = call ptr @Builtins__structGet(ptr %997, ptr %4809)
  %4811 = load ptr, ptr @tag_Equals, align 8
  %4812 = call ptr @Builtins__structGet(ptr %997, ptr %4811)
  %4813 = load ptr, ptr @tag_Equals, align 8
  %4814 = call ptr @Builtins__structGet(ptr %997, ptr %4813)
  %4815 = load ptr, ptr @tag_Equals, align 8
  %4816 = call ptr @Builtins__structGet(ptr %997, ptr %4815)
  %4817 = load ptr, ptr @tag_TypeOf, align 8
  %4818 = call ptr @Builtins__structGet(ptr %997, ptr %4817)
  %4819 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4820 = call ptr @Builtins__structGet(ptr %997, ptr %4819)
  %4821 = load ptr, ptr @tag_Equals, align 8
  %4822 = call ptr @Builtins__structGet(ptr %997, ptr %4821)
  %4823 = load ptr, ptr @tag_TypeOf, align 8
  %4824 = call ptr @Builtins__structGet(ptr %997, ptr %4823)
  %4825 = load ptr, ptr @tag_Equals, align 8
  %4826 = call ptr @Builtins__structGet(ptr %997, ptr %4825)
  %4827 = load ptr, ptr @tag_Equals, align 8
  %4828 = call ptr @Builtins__structGet(ptr %997, ptr %4827)
  %4829 = load ptr, ptr @tag_Equals, align 8
  %4830 = call ptr @Builtins__structGet(ptr %997, ptr %4829)
  %4831 = load ptr, ptr @tag_TypeOf, align 8
  %4832 = call ptr @Builtins__structGet(ptr %997, ptr %4831)
  %4833 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4834 = call ptr @Builtins__structGet(ptr %997, ptr %4833)
  %4835 = load ptr, ptr @tag_Equals, align 8
  %4836 = call ptr @Builtins__structGet(ptr %997, ptr %4835)
  %4837 = load ptr, ptr @tag_TypeOf, align 8
  %4838 = call ptr @Builtins__structGet(ptr %997, ptr %4837)
  %4839 = load ptr, ptr @tag_IfElse, align 8
  %4840 = call ptr @Builtins__structGet(ptr %997, ptr %4839)
  %4841 = load ptr, ptr @tag_Equals, align 8
  %4842 = call ptr @Builtins__structGet(ptr %997, ptr %4841)
  %4843 = load ptr, ptr @tag_TypeOf, align 8
  %4844 = call ptr @Builtins__structGet(ptr %997, ptr %4843)
  %4845 = load ptr, ptr @tag_Equals, align 8
  %4846 = call ptr @Builtins__structGet(ptr %997, ptr %4845)
  %4847 = load ptr, ptr @tag_Equals, align 8
  %4848 = call ptr @Builtins__structGet(ptr %997, ptr %4847)
  %4849 = load ptr, ptr @tag_Equals, align 8
  %4850 = call ptr @Builtins__structGet(ptr %997, ptr %4849)
  %4851 = load ptr, ptr @tag_TypeOf, align 8
  %4852 = call ptr @Builtins__structGet(ptr %997, ptr %4851)
  %4853 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4854 = call ptr @Builtins__structGet(ptr %997, ptr %4853)
  %4855 = load ptr, ptr @tag_Equals, align 8
  %4856 = call ptr @Builtins__structGet(ptr %997, ptr %4855)
  %4857 = load ptr, ptr @tag_TypeOf, align 8
  %4858 = call ptr @Builtins__structGet(ptr %997, ptr %4857)
  %4859 = load ptr, ptr @tag_Equals, align 8
  %4860 = call ptr @Builtins__structGet(ptr %997, ptr %4859)
  %4861 = load ptr, ptr @tag_Equals, align 8
  %4862 = call ptr @Builtins__structGet(ptr %997, ptr %4861)
  %4863 = load ptr, ptr @tag_Equals, align 8
  %4864 = call ptr @Builtins__structGet(ptr %997, ptr %4863)
  %4865 = load ptr, ptr @tag_TypeOf, align 8
  %4866 = call ptr @Builtins__structGet(ptr %997, ptr %4865)
  %4867 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4868 = call ptr @Builtins__structGet(ptr %997, ptr %4867)
  %4869 = load ptr, ptr @tag_Equals, align 8
  %4870 = call ptr @Builtins__structGet(ptr %997, ptr %4869)
  %4871 = load ptr, ptr @tag_TypeOf, align 8
  %4872 = call ptr @Builtins__structGet(ptr %997, ptr %4871)
  %4873 = load ptr, ptr @tag_Equals, align 8
  %4874 = call ptr @Builtins__structGet(ptr %997, ptr %4873)
  %4875 = load ptr, ptr @tag_Equals, align 8
  %4876 = call ptr @Builtins__structGet(ptr %997, ptr %4875)
  %4877 = load ptr, ptr @tag_Equals, align 8
  %4878 = call ptr @Builtins__structGet(ptr %997, ptr %4877)
  %4879 = load ptr, ptr @tag_TypeOf, align 8
  %4880 = call ptr @Builtins__structGet(ptr %997, ptr %4879)
  %4881 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4882 = call ptr @Builtins__structGet(ptr %997, ptr %4881)
  %4883 = load ptr, ptr @tag_Equals, align 8
  %4884 = call ptr @Builtins__structGet(ptr %997, ptr %4883)
  %4885 = load ptr, ptr @tag_TypeOf, align 8
  %4886 = call ptr @Builtins__structGet(ptr %997, ptr %4885)
  %4887 = load ptr, ptr @tag_IfElse, align 8
  %4888 = call ptr @Builtins__structGet(ptr %997, ptr %4887)
  %4889 = load ptr, ptr @tag_Equals, align 8
  %4890 = call ptr @Builtins__structGet(ptr %997, ptr %4889)
  %4891 = load ptr, ptr @tag_TypeOf, align 8
  %4892 = call ptr @Builtins__structGet(ptr %997, ptr %4891)
  %4893 = load ptr, ptr @tag_TagHasValue, align 8
  %4894 = call ptr @Builtins__structGet(ptr %997, ptr %4893)
  %4895 = load ptr, ptr @tag_TagWithoutValue, align 8
  %4896 = call ptr @Builtins__structGet(ptr %997, ptr %4895)
  %4897 = load ptr, ptr @tag_TagGetValue, align 8
  %4898 = call ptr @Builtins__structGet(ptr %997, ptr %4897)
  %4899 = load ptr, ptr @tag_Equals, align 8
  %4900 = call ptr @Builtins__structGet(ptr %997, ptr %4899)
  %4901 = load ptr, ptr @tag_TypeOf, align 8
  %4902 = call ptr @Builtins__structGet(ptr %997, ptr %4901)
  %4903 = load ptr, ptr @tag_Equals, align 8
  %4904 = call ptr @Builtins__structGet(ptr %997, ptr %4903)
  %4905 = load ptr, ptr @tag_TypeOf, align 8
  %4906 = call ptr @Builtins__structGet(ptr %997, ptr %4905)
  %4907 = load ptr, ptr @tag_ListLength, align 8
  %4908 = call ptr @Builtins__structGet(ptr %997, ptr %4907)
  %4909 = load ptr, ptr @tag_ListGet, align 8
  %4910 = call ptr @Builtins__structGet(ptr %997, ptr %4909)
  %4911 = load ptr, ptr @tag_ListInsert, align 8
  %4912 = call ptr @Builtins__structGet(ptr %997, ptr %4911)
  %4913 = load ptr, ptr @tag_ListReplace, align 8
  %4914 = call ptr @Builtins__structGet(ptr %997, ptr %4913)
  %4915 = load ptr, ptr @tag_ListRemoveAt, align 8
  %4916 = call ptr @Builtins__structGet(ptr %997, ptr %4915)
  %4917 = load ptr, ptr @tag_ListFilled, align 8
  %4918 = call ptr @Builtins__structGet(ptr %997, ptr %4917)
  %4919 = load ptr, ptr @tag_Equals, align 8
  %4920 = call ptr @Builtins__structGet(ptr %997, ptr %4919)
  %4921 = load ptr, ptr @tag_Equals, align 8
  %4922 = call ptr @Builtins__structGet(ptr %997, ptr %4921)
  %4923 = load ptr, ptr @tag_Equals, align 8
  %4924 = call ptr @Builtins__structGet(ptr %997, ptr %4923)
  %4925 = load ptr, ptr @tag_TypeOf, align 8
  %4926 = call ptr @Builtins__structGet(ptr %997, ptr %4925)
  %4927 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4928 = call ptr @Builtins__structGet(ptr %997, ptr %4927)
  %4929 = load ptr, ptr @tag_Equals, align 8
  %4930 = call ptr @Builtins__structGet(ptr %997, ptr %4929)
  %4931 = load ptr, ptr @tag_TypeOf, align 8
  %4932 = call ptr @Builtins__structGet(ptr %997, ptr %4931)
  %4933 = load ptr, ptr @tag_Equals, align 8
  %4934 = call ptr @Builtins__structGet(ptr %997, ptr %4933)
  %4935 = load ptr, ptr @tag_Equals, align 8
  %4936 = call ptr @Builtins__structGet(ptr %997, ptr %4935)
  %4937 = load ptr, ptr @tag_Equals, align 8
  %4938 = call ptr @Builtins__structGet(ptr %997, ptr %4937)
  %4939 = load ptr, ptr @tag_TypeOf, align 8
  %4940 = call ptr @Builtins__structGet(ptr %997, ptr %4939)
  %4941 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4942 = call ptr @Builtins__structGet(ptr %997, ptr %4941)
  %4943 = load ptr, ptr @tag_Equals, align 8
  %4944 = call ptr @Builtins__structGet(ptr %997, ptr %4943)
  %4945 = load ptr, ptr @tag_TypeOf, align 8
  %4946 = call ptr @Builtins__structGet(ptr %997, ptr %4945)
  %4947 = load ptr, ptr @tag_IfElse, align 8
  %4948 = call ptr @Builtins__structGet(ptr %997, ptr %4947)
  %4949 = load ptr, ptr @tag_Equals, align 8
  %4950 = call ptr @Builtins__structGet(ptr %997, ptr %4949)
  %4951 = load ptr, ptr @tag_TypeOf, align 8
  %4952 = call ptr @Builtins__structGet(ptr %997, ptr %4951)
  %4953 = load ptr, ptr @tag_Equals, align 8
  %4954 = call ptr @Builtins__structGet(ptr %997, ptr %4953)
  %4955 = load ptr, ptr @tag_TypeOf, align 8
  %4956 = call ptr @Builtins__structGet(ptr %997, ptr %4955)
  %4957 = load ptr, ptr @tag_TextFromUtf8, align 8
  %4958 = call ptr @Builtins__structGet(ptr %997, ptr %4957)
  %4959 = load ptr, ptr @tag_TextIsEmpty, align 8
  %4960 = call ptr @Builtins__structGet(ptr %997, ptr %4959)
  %4961 = load ptr, ptr @tag_TextLength, align 8
  %4962 = call ptr @Builtins__structGet(ptr %997, ptr %4961)
  %4963 = load ptr, ptr @tag_TextCharacters, align 8
  %4964 = call ptr @Builtins__structGet(ptr %997, ptr %4963)
  %4965 = load ptr, ptr @tag_TextGetRange, align 8
  %4966 = call ptr @Builtins__structGet(ptr %997, ptr %4965)
  %4967 = load ptr, ptr @tag_TextConcatenate, align 8
  %4968 = call ptr @Builtins__structGet(ptr %997, ptr %4967)
  %4969 = load ptr, ptr @tag_TextStartsWith, align 8
  %4970 = call ptr @Builtins__structGet(ptr %997, ptr %4969)
  %4971 = load ptr, ptr @tag_TextEndsWith, align 8
  %4972 = call ptr @Builtins__structGet(ptr %997, ptr %4971)
  %4973 = load ptr, ptr @tag_TextContains, align 8
  %4974 = call ptr @Builtins__structGet(ptr %997, ptr %4973)
  %4975 = load ptr, ptr @tag_TextTrimStart, align 8
  %4976 = call ptr @Builtins__structGet(ptr %997, ptr %4975)
  %4977 = load ptr, ptr @tag_TextTrimEnd, align 8
  %4978 = call ptr @Builtins__structGet(ptr %997, ptr %4977)
  %4979 = load ptr, ptr @tag_Equals, align 8
  %4980 = call ptr @Builtins__structGet(ptr %997, ptr %4979)
  %4981 = load ptr, ptr @tag_Equals, align 8
  %4982 = call ptr @Builtins__structGet(ptr %997, ptr %4981)
  %4983 = load ptr, ptr @tag_Equals, align 8
  %4984 = call ptr @Builtins__structGet(ptr %997, ptr %4983)
  %4985 = load ptr, ptr @tag_TypeOf, align 8
  %4986 = call ptr @Builtins__structGet(ptr %997, ptr %4985)
  %4987 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4988 = call ptr @Builtins__structGet(ptr %997, ptr %4987)
  %4989 = load ptr, ptr @tag_Equals, align 8
  %4990 = call ptr @Builtins__structGet(ptr %997, ptr %4989)
  %4991 = load ptr, ptr @tag_TypeOf, align 8
  %4992 = call ptr @Builtins__structGet(ptr %997, ptr %4991)
  %4993 = load ptr, ptr @tag_Equals, align 8
  %4994 = call ptr @Builtins__structGet(ptr %997, ptr %4993)
  %4995 = load ptr, ptr @tag_Equals, align 8
  %4996 = call ptr @Builtins__structGet(ptr %997, ptr %4995)
  %4997 = load ptr, ptr @tag_Equals, align 8
  %4998 = call ptr @Builtins__structGet(ptr %997, ptr %4997)
  %4999 = load ptr, ptr @tag_TypeOf, align 8
  %5000 = call ptr @Builtins__structGet(ptr %997, ptr %4999)
  %5001 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5002 = call ptr @Builtins__structGet(ptr %997, ptr %5001)
  %5003 = load ptr, ptr @tag_Equals, align 8
  %5004 = call ptr @Builtins__structGet(ptr %997, ptr %5003)
  %5005 = load ptr, ptr @tag_TypeOf, align 8
  %5006 = call ptr @Builtins__structGet(ptr %997, ptr %5005)
  %5007 = load ptr, ptr @tag_Equals, align 8
  %5008 = call ptr @Builtins__structGet(ptr %997, ptr %5007)
  %5009 = load ptr, ptr @tag_Equals, align 8
  %5010 = call ptr @Builtins__structGet(ptr %997, ptr %5009)
  %5011 = load ptr, ptr @tag_Equals, align 8
  %5012 = call ptr @Builtins__structGet(ptr %997, ptr %5011)
  %5013 = load ptr, ptr @tag_TypeOf, align 8
  %5014 = call ptr @Builtins__structGet(ptr %997, ptr %5013)
  %5015 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5016 = call ptr @Builtins__structGet(ptr %997, ptr %5015)
  %5017 = load ptr, ptr @tag_Equals, align 8
  %5018 = call ptr @Builtins__structGet(ptr %997, ptr %5017)
  %5019 = load ptr, ptr @tag_TypeOf, align 8
  %5020 = call ptr @Builtins__structGet(ptr %997, ptr %5019)
  %5021 = load ptr, ptr @tag_IfElse, align 8
  %5022 = call ptr @Builtins__structGet(ptr %997, ptr %5021)
  %5023 = load ptr, ptr @tag_Equals, align 8
  %5024 = call ptr @Builtins__structGet(ptr %997, ptr %5023)
  %5025 = load ptr, ptr @tag_Equals, align 8
  %5026 = call ptr @Builtins__structGet(ptr %997, ptr %5025)
  %5027 = load ptr, ptr @tag_Equals, align 8
  %5028 = call ptr @Builtins__structGet(ptr %997, ptr %5027)
  %5029 = load ptr, ptr @tag_TypeOf, align 8
  %5030 = call ptr @Builtins__structGet(ptr %997, ptr %5029)
  %5031 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5032 = call ptr @Builtins__structGet(ptr %997, ptr %5031)
  %5033 = load ptr, ptr @tag_Equals, align 8
  %5034 = call ptr @Builtins__structGet(ptr %997, ptr %5033)
  %5035 = load ptr, ptr @tag_Equals, align 8
  %5036 = call ptr @Builtins__structGet(ptr %997, ptr %5035)
  %5037 = load ptr, ptr @tag_Equals, align 8
  %5038 = call ptr @Builtins__structGet(ptr %997, ptr %5037)
  %5039 = load ptr, ptr @tag_TypeOf, align 8
  %5040 = call ptr @Builtins__structGet(ptr %997, ptr %5039)
  %5041 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5042 = call ptr @Builtins__structGet(ptr %997, ptr %5041)
  %5043 = load ptr, ptr @tag_Equals, align 8
  %5044 = call ptr @Builtins__structGet(ptr %997, ptr %5043)
  %5045 = load ptr, ptr @tag_TypeOf, align 8
  %5046 = call ptr @Builtins__structGet(ptr %997, ptr %5045)
  %5047 = load ptr, ptr @tag_Equals, align 8
  %5048 = call ptr @Builtins__structGet(ptr %997, ptr %5047)
  %5049 = load ptr, ptr @tag_Equals, align 8
  %5050 = call ptr @Builtins__structGet(ptr %997, ptr %5049)
  %5051 = load ptr, ptr @tag_Equals, align 8
  %5052 = call ptr @Builtins__structGet(ptr %997, ptr %5051)
  %5053 = load ptr, ptr @tag_TypeOf, align 8
  %5054 = call ptr @Builtins__structGet(ptr %997, ptr %5053)
  %5055 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5056 = call ptr @Builtins__structGet(ptr %997, ptr %5055)
  %5057 = load ptr, ptr @tag_Equals, align 8
  %5058 = call ptr @Builtins__structGet(ptr %997, ptr %5057)
  %5059 = load ptr, ptr @tag_TypeOf, align 8
  %5060 = call ptr @Builtins__structGet(ptr %997, ptr %5059)
  %5061 = load ptr, ptr @tag_Equals, align 8
  %5062 = call ptr @Builtins__structGet(ptr %997, ptr %5061)
  %5063 = load ptr, ptr @tag_Equals, align 8
  %5064 = call ptr @Builtins__structGet(ptr %997, ptr %5063)
  %5065 = load ptr, ptr @tag_Equals, align 8
  %5066 = call ptr @Builtins__structGet(ptr %997, ptr %5065)
  %5067 = load ptr, ptr @tag_TypeOf, align 8
  %5068 = call ptr @Builtins__structGet(ptr %997, ptr %5067)
  %5069 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5070 = call ptr @Builtins__structGet(ptr %997, ptr %5069)
  %5071 = load ptr, ptr @tag_Equals, align 8
  %5072 = call ptr @Builtins__structGet(ptr %997, ptr %5071)
  %5073 = load ptr, ptr @tag_TypeOf, align 8
  %5074 = call ptr @Builtins__structGet(ptr %997, ptr %5073)
  %5075 = load ptr, ptr @tag_Equals, align 8
  %5076 = call ptr @Builtins__structGet(ptr %997, ptr %5075)
  %5077 = load ptr, ptr @tag_Equals, align 8
  %5078 = call ptr @Builtins__structGet(ptr %997, ptr %5077)
  %5079 = load ptr, ptr @tag_Equals, align 8
  %5080 = call ptr @Builtins__structGet(ptr %997, ptr %5079)
  %5081 = load ptr, ptr @tag_TypeOf, align 8
  %5082 = call ptr @Builtins__structGet(ptr %997, ptr %5081)
  %5083 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5084 = call ptr @Builtins__structGet(ptr %997, ptr %5083)
  %5085 = load ptr, ptr @tag_Equals, align 8
  %5086 = call ptr @Builtins__structGet(ptr %997, ptr %5085)
  %5087 = load ptr, ptr @tag_TypeOf, align 8
  %5088 = call ptr @Builtins__structGet(ptr %997, ptr %5087)
  %5089 = load ptr, ptr @tag_IfElse, align 8
  %5090 = call ptr @Builtins__structGet(ptr %997, ptr %5089)
  %5091 = load ptr, ptr @tag_Equals, align 8
  %5092 = call ptr @Builtins__structGet(ptr %997, ptr %5091)
  %5093 = load ptr, ptr @tag_Equals, align 8
  %5094 = call ptr @Builtins__structGet(ptr %997, ptr %5093)
  %5095 = load ptr, ptr @tag_Equals, align 8
  %5096 = call ptr @Builtins__structGet(ptr %997, ptr %5095)
  %5097 = load ptr, ptr @tag_TypeOf, align 8
  %5098 = call ptr @Builtins__structGet(ptr %997, ptr %5097)
  %5099 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5100 = call ptr @Builtins__structGet(ptr %997, ptr %5099)
  %5101 = load ptr, ptr @tag_Equals, align 8
  %5102 = call ptr @Builtins__structGet(ptr %997, ptr %5101)
  %5103 = load ptr, ptr @tag_TypeOf, align 8
  %5104 = call ptr @Builtins__structGet(ptr %997, ptr %5103)
  %5105 = load ptr, ptr @tag_Equals, align 8
  %5106 = call ptr @Builtins__structGet(ptr %997, ptr %5105)
  %5107 = load ptr, ptr @tag_Equals, align 8
  %5108 = call ptr @Builtins__structGet(ptr %997, ptr %5107)
  %5109 = load ptr, ptr @tag_Equals, align 8
  %5110 = call ptr @Builtins__structGet(ptr %997, ptr %5109)
  %5111 = load ptr, ptr @tag_TypeOf, align 8
  %5112 = call ptr @Builtins__structGet(ptr %997, ptr %5111)
  %5113 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5114 = call ptr @Builtins__structGet(ptr %997, ptr %5113)
  %5115 = load ptr, ptr @tag_Equals, align 8
  %5116 = call ptr @Builtins__structGet(ptr %997, ptr %5115)
  %5117 = load ptr, ptr @tag_TypeOf, align 8
  %5118 = call ptr @Builtins__structGet(ptr %997, ptr %5117)
  %5119 = load ptr, ptr @tag_IfElse, align 8
  %5120 = call ptr @Builtins__structGet(ptr %997, ptr %5119)
  %5121 = load ptr, ptr @tag_Equals, align 8
  %5122 = call ptr @Builtins__structGet(ptr %997, ptr %5121)
  %5123 = load ptr, ptr @tag_Equals, align 8
  %5124 = call ptr @Builtins__structGet(ptr %997, ptr %5123)
  %5125 = load ptr, ptr @tag_TypeOf, align 8
  %5126 = call ptr @Builtins__structGet(ptr %997, ptr %5125)
  %5127 = load ptr, ptr @tag_IntAdd, align 8
  %5128 = call ptr @Builtins__structGet(ptr %997, ptr %5127)
  %5129 = load ptr, ptr @tag_IntSubtract, align 8
  %5130 = call ptr @Builtins__structGet(ptr %997, ptr %5129)
  %5131 = load ptr, ptr @tag_IntMultiply, align 8
  %5132 = call ptr @Builtins__structGet(ptr %997, ptr %5131)
  %5133 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %5134 = call ptr @Builtins__structGet(ptr %997, ptr %5133)
  %5135 = load ptr, ptr @tag_IntRemainder, align 8
  %5136 = call ptr @Builtins__structGet(ptr %997, ptr %5135)
  %5137 = load ptr, ptr @tag_IntModulo, align 8
  %5138 = call ptr @Builtins__structGet(ptr %997, ptr %5137)
  %5139 = load ptr, ptr @tag_IntShiftLeft, align 8
  %5140 = call ptr @Builtins__structGet(ptr %997, ptr %5139)
  %5141 = load ptr, ptr @tag_IntShiftRight, align 8
  %5142 = call ptr @Builtins__structGet(ptr %997, ptr %5141)
  %5143 = load ptr, ptr @tag_IntBitLength, align 8
  %5144 = call ptr @Builtins__structGet(ptr %997, ptr %5143)
  %5145 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %5146 = call ptr @Builtins__structGet(ptr %997, ptr %5145)
  %5147 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %5148 = call ptr @Builtins__structGet(ptr %997, ptr %5147)
  %5149 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %5150 = call ptr @Builtins__structGet(ptr %997, ptr %5149)
  %5151 = load ptr, ptr @tag_IntParse, align 8
  %5152 = call ptr @Builtins__structGet(ptr %997, ptr %5151)
  %5153 = load ptr, ptr @tag_Equals, align 8
  %5154 = call ptr @Builtins__structGet(ptr %997, ptr %5153)
  %5155 = load ptr, ptr @tag_Equals, align 8
  %5156 = call ptr @Builtins__structGet(ptr %997, ptr %5155)
  %5157 = load ptr, ptr @tag_Equals, align 8
  %5158 = call ptr @Builtins__structGet(ptr %997, ptr %5157)
  %5159 = load ptr, ptr @tag_TypeOf, align 8
  %5160 = call ptr @Builtins__structGet(ptr %997, ptr %5159)
  %5161 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5162 = call ptr @Builtins__structGet(ptr %997, ptr %5161)
  %5163 = load ptr, ptr @tag_Equals, align 8
  %5164 = call ptr @Builtins__structGet(ptr %997, ptr %5163)
  %5165 = load ptr, ptr @tag_TypeOf, align 8
  %5166 = call ptr @Builtins__structGet(ptr %997, ptr %5165)
  %5167 = load ptr, ptr @tag_Equals, align 8
  %5168 = call ptr @Builtins__structGet(ptr %997, ptr %5167)
  %5169 = load ptr, ptr @tag_Equals, align 8
  %5170 = call ptr @Builtins__structGet(ptr %997, ptr %5169)
  %5171 = load ptr, ptr @tag_Equals, align 8
  %5172 = call ptr @Builtins__structGet(ptr %997, ptr %5171)
  %5173 = load ptr, ptr @tag_TypeOf, align 8
  %5174 = call ptr @Builtins__structGet(ptr %997, ptr %5173)
  %5175 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5176 = call ptr @Builtins__structGet(ptr %997, ptr %5175)
  %5177 = load ptr, ptr @tag_Equals, align 8
  %5178 = call ptr @Builtins__structGet(ptr %997, ptr %5177)
  %5179 = load ptr, ptr @tag_TypeOf, align 8
  %5180 = call ptr @Builtins__structGet(ptr %997, ptr %5179)
  %5181 = load ptr, ptr @tag_Equals, align 8
  %5182 = call ptr @Builtins__structGet(ptr %997, ptr %5181)
  %5183 = load ptr, ptr @tag_Equals, align 8
  %5184 = call ptr @Builtins__structGet(ptr %997, ptr %5183)
  %5185 = load ptr, ptr @tag_Equals, align 8
  %5186 = call ptr @Builtins__structGet(ptr %997, ptr %5185)
  %5187 = load ptr, ptr @tag_TypeOf, align 8
  %5188 = call ptr @Builtins__structGet(ptr %997, ptr %5187)
  %5189 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5190 = call ptr @Builtins__structGet(ptr %997, ptr %5189)
  %5191 = load ptr, ptr @tag_Equals, align 8
  %5192 = call ptr @Builtins__structGet(ptr %997, ptr %5191)
  %5193 = load ptr, ptr @tag_TypeOf, align 8
  %5194 = call ptr @Builtins__structGet(ptr %997, ptr %5193)
  %5195 = load ptr, ptr @tag_IfElse, align 8
  %5196 = call ptr @Builtins__structGet(ptr %997, ptr %5195)
  %5197 = load ptr, ptr @tag_Equals, align 8
  %5198 = call ptr @Builtins__structGet(ptr %997, ptr %5197)
  %5199 = load ptr, ptr @tag_Equals, align 8
  %5200 = call ptr @Builtins__structGet(ptr %997, ptr %5199)
  %5201 = load ptr, ptr @tag_Equals, align 8
  %5202 = call ptr @Builtins__structGet(ptr %997, ptr %5201)
  %5203 = load ptr, ptr @tag_TypeOf, align 8
  %5204 = call ptr @Builtins__structGet(ptr %997, ptr %5203)
  %5205 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5206 = call ptr @Builtins__structGet(ptr %997, ptr %5205)
  %5207 = load ptr, ptr @tag_Equals, align 8
  %5208 = call ptr @Builtins__structGet(ptr %997, ptr %5207)
  %5209 = load ptr, ptr @tag_Equals, align 8
  %5210 = call ptr @Builtins__structGet(ptr %997, ptr %5209)
  %5211 = load ptr, ptr @tag_Equals, align 8
  %5212 = call ptr @Builtins__structGet(ptr %997, ptr %5211)
  %5213 = load ptr, ptr @tag_TypeOf, align 8
  %5214 = call ptr @Builtins__structGet(ptr %997, ptr %5213)
  %5215 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5216 = call ptr @Builtins__structGet(ptr %997, ptr %5215)
  %5217 = load ptr, ptr @tag_Equals, align 8
  %5218 = call ptr @Builtins__structGet(ptr %997, ptr %5217)
  %5219 = load ptr, ptr @tag_TypeOf, align 8
  %5220 = call ptr @Builtins__structGet(ptr %997, ptr %5219)
  %5221 = load ptr, ptr @tag_Equals, align 8
  %5222 = call ptr @Builtins__structGet(ptr %997, ptr %5221)
  %5223 = load ptr, ptr @tag_Equals, align 8
  %5224 = call ptr @Builtins__structGet(ptr %997, ptr %5223)
  %5225 = load ptr, ptr @tag_Equals, align 8
  %5226 = call ptr @Builtins__structGet(ptr %997, ptr %5225)
  %5227 = load ptr, ptr @tag_TypeOf, align 8
  %5228 = call ptr @Builtins__structGet(ptr %997, ptr %5227)
  %5229 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5230 = call ptr @Builtins__structGet(ptr %997, ptr %5229)
  %5231 = load ptr, ptr @tag_Equals, align 8
  %5232 = call ptr @Builtins__structGet(ptr %997, ptr %5231)
  %5233 = load ptr, ptr @tag_TypeOf, align 8
  %5234 = call ptr @Builtins__structGet(ptr %997, ptr %5233)
  %5235 = load ptr, ptr @tag_IfElse, align 8
  %5236 = call ptr @Builtins__structGet(ptr %997, ptr %5235)
  %5237 = load ptr, ptr @tag_Equals, align 8
  %5238 = call ptr @Builtins__structGet(ptr %997, ptr %5237)
  %5239 = load ptr, ptr @tag_TypeOf, align 8
  %5240 = call ptr @Builtins__structGet(ptr %997, ptr %5239)
  %5241 = load ptr, ptr @tag_Equals, align 8
  %5242 = call ptr @Builtins__structGet(ptr %997, ptr %5241)
  %5243 = load ptr, ptr @tag_Equals, align 8
  %5244 = call ptr @Builtins__structGet(ptr %997, ptr %5243)
  %5245 = load ptr, ptr @tag_Equals, align 8
  %5246 = call ptr @Builtins__structGet(ptr %997, ptr %5245)
  %5247 = load ptr, ptr @tag_TypeOf, align 8
  %5248 = call ptr @Builtins__structGet(ptr %997, ptr %5247)
  %5249 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5250 = call ptr @Builtins__structGet(ptr %997, ptr %5249)
  %5251 = load ptr, ptr @tag_Equals, align 8
  %5252 = call ptr @Builtins__structGet(ptr %997, ptr %5251)
  %5253 = load ptr, ptr @tag_TypeOf, align 8
  %5254 = call ptr @Builtins__structGet(ptr %997, ptr %5253)
  %5255 = load ptr, ptr @tag_Equals, align 8
  %5256 = call ptr @Builtins__structGet(ptr %997, ptr %5255)
  %5257 = load ptr, ptr @tag_Equals, align 8
  %5258 = call ptr @Builtins__structGet(ptr %997, ptr %5257)
  %5259 = load ptr, ptr @tag_Equals, align 8
  %5260 = call ptr @Builtins__structGet(ptr %997, ptr %5259)
  %5261 = load ptr, ptr @tag_TypeOf, align 8
  %5262 = call ptr @Builtins__structGet(ptr %997, ptr %5261)
  %5263 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5264 = call ptr @Builtins__structGet(ptr %997, ptr %5263)
  %5265 = load ptr, ptr @tag_Equals, align 8
  %5266 = call ptr @Builtins__structGet(ptr %997, ptr %5265)
  %5267 = load ptr, ptr @tag_TypeOf, align 8
  %5268 = call ptr @Builtins__structGet(ptr %997, ptr %5267)
  %5269 = load ptr, ptr @tag_Equals, align 8
  %5270 = call ptr @Builtins__structGet(ptr %997, ptr %5269)
  %5271 = load ptr, ptr @tag_Equals, align 8
  %5272 = call ptr @Builtins__structGet(ptr %997, ptr %5271)
  %5273 = load ptr, ptr @tag_Equals, align 8
  %5274 = call ptr @Builtins__structGet(ptr %997, ptr %5273)
  %5275 = load ptr, ptr @tag_TypeOf, align 8
  %5276 = call ptr @Builtins__structGet(ptr %997, ptr %5275)
  %5277 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5278 = call ptr @Builtins__structGet(ptr %997, ptr %5277)
  %5279 = load ptr, ptr @tag_Equals, align 8
  %5280 = call ptr @Builtins__structGet(ptr %997, ptr %5279)
  %5281 = load ptr, ptr @tag_TypeOf, align 8
  %5282 = call ptr @Builtins__structGet(ptr %997, ptr %5281)
  %5283 = load ptr, ptr @tag_IfElse, align 8
  %5284 = call ptr @Builtins__structGet(ptr %997, ptr %5283)
  %5285 = load ptr, ptr @tag_Equals, align 8
  %5286 = call ptr @Builtins__structGet(ptr %997, ptr %5285)
  %5287 = load ptr, ptr @tag_TypeOf, align 8
  %5288 = call ptr @Builtins__structGet(ptr %997, ptr %5287)
  %5289 = load ptr, ptr @tag_TagHasValue, align 8
  %5290 = call ptr @Builtins__structGet(ptr %997, ptr %5289)
  %5291 = load ptr, ptr @tag_TagWithoutValue, align 8
  %5292 = call ptr @Builtins__structGet(ptr %997, ptr %5291)
  %5293 = load ptr, ptr @tag_TagGetValue, align 8
  %5294 = call ptr @Builtins__structGet(ptr %997, ptr %5293)
  %5295 = load ptr, ptr @tag_Equals, align 8
  %5296 = call ptr @Builtins__structGet(ptr %997, ptr %5295)
  %5297 = load ptr, ptr @tag_TypeOf, align 8
  %5298 = call ptr @Builtins__structGet(ptr %997, ptr %5297)
  %5299 = load ptr, ptr @tag_Equals, align 8
  %5300 = call ptr @Builtins__structGet(ptr %997, ptr %5299)
  %5301 = load ptr, ptr @tag_TypeOf, align 8
  %5302 = call ptr @Builtins__structGet(ptr %997, ptr %5301)
  %5303 = load ptr, ptr @tag_ListLength, align 8
  %5304 = call ptr @Builtins__structGet(ptr %997, ptr %5303)
  %5305 = load ptr, ptr @tag_ListGet, align 8
  %5306 = call ptr @Builtins__structGet(ptr %997, ptr %5305)
  %5307 = load ptr, ptr @tag_ListInsert, align 8
  %5308 = call ptr @Builtins__structGet(ptr %997, ptr %5307)
  %5309 = load ptr, ptr @tag_ListReplace, align 8
  %5310 = call ptr @Builtins__structGet(ptr %997, ptr %5309)
  %5311 = load ptr, ptr @tag_ListRemoveAt, align 8
  %5312 = call ptr @Builtins__structGet(ptr %997, ptr %5311)
  %5313 = load ptr, ptr @tag_ListFilled, align 8
  %5314 = call ptr @Builtins__structGet(ptr %997, ptr %5313)
  %5315 = load ptr, ptr @tag_Equals, align 8
  %5316 = call ptr @Builtins__structGet(ptr %997, ptr %5315)
  %5317 = load ptr, ptr @tag_TypeOf, align 8
  %5318 = call ptr @Builtins__structGet(ptr %997, ptr %5317)
  %5319 = load ptr, ptr @tag_Equals, align 8
  %5320 = call ptr @Builtins__structGet(ptr %997, ptr %5319)
  %5321 = load ptr, ptr @tag_Equals, align 8
  %5322 = call ptr @Builtins__structGet(ptr %997, ptr %5321)
  %5323 = load ptr, ptr @tag_Equals, align 8
  %5324 = call ptr @Builtins__structGet(ptr %997, ptr %5323)
  %5325 = load ptr, ptr @tag_TypeOf, align 8
  %5326 = call ptr @Builtins__structGet(ptr %997, ptr %5325)
  %5327 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5328 = call ptr @Builtins__structGet(ptr %997, ptr %5327)
  %5329 = load ptr, ptr @tag_Equals, align 8
  %5330 = call ptr @Builtins__structGet(ptr %997, ptr %5329)
  %5331 = load ptr, ptr @tag_TypeOf, align 8
  %5332 = call ptr @Builtins__structGet(ptr %997, ptr %5331)
  %5333 = load ptr, ptr @tag_Equals, align 8
  %5334 = call ptr @Builtins__structGet(ptr %997, ptr %5333)
  %5335 = load ptr, ptr @tag_Equals, align 8
  %5336 = call ptr @Builtins__structGet(ptr %997, ptr %5335)
  %5337 = load ptr, ptr @tag_Equals, align 8
  %5338 = call ptr @Builtins__structGet(ptr %997, ptr %5337)
  %5339 = load ptr, ptr @tag_TypeOf, align 8
  %5340 = call ptr @Builtins__structGet(ptr %997, ptr %5339)
  %5341 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5342 = call ptr @Builtins__structGet(ptr %997, ptr %5341)
  %5343 = load ptr, ptr @tag_Equals, align 8
  %5344 = call ptr @Builtins__structGet(ptr %997, ptr %5343)
  %5345 = load ptr, ptr @tag_TypeOf, align 8
  %5346 = call ptr @Builtins__structGet(ptr %997, ptr %5345)
  %5347 = load ptr, ptr @tag_Equals, align 8
  %5348 = call ptr @Builtins__structGet(ptr %997, ptr %5347)
  %5349 = load ptr, ptr @tag_Equals, align 8
  %5350 = call ptr @Builtins__structGet(ptr %997, ptr %5349)
  %5351 = load ptr, ptr @tag_Equals, align 8
  %5352 = call ptr @Builtins__structGet(ptr %997, ptr %5351)
  %5353 = load ptr, ptr @tag_TypeOf, align 8
  %5354 = call ptr @Builtins__structGet(ptr %997, ptr %5353)
  %5355 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5356 = call ptr @Builtins__structGet(ptr %997, ptr %5355)
  %5357 = load ptr, ptr @tag_Equals, align 8
  %5358 = call ptr @Builtins__structGet(ptr %997, ptr %5357)
  %5359 = load ptr, ptr @tag_TypeOf, align 8
  %5360 = call ptr @Builtins__structGet(ptr %997, ptr %5359)
  %5361 = load ptr, ptr @tag_IfElse, align 8
  %5362 = call ptr @Builtins__structGet(ptr %997, ptr %5361)
  %5363 = load ptr, ptr @tag_Equals, align 8
  %5364 = call ptr @Builtins__structGet(ptr %997, ptr %5363)
  %5365 = load ptr, ptr @tag_Equals, align 8
  %5366 = call ptr @Builtins__structGet(ptr %997, ptr %5365)
  %5367 = load ptr, ptr @tag_Equals, align 8
  %5368 = call ptr @Builtins__structGet(ptr %997, ptr %5367)
  %5369 = load ptr, ptr @tag_TypeOf, align 8
  %5370 = call ptr @Builtins__structGet(ptr %997, ptr %5369)
  %5371 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5372 = getelementptr inbounds { ptr, ptr }, ptr %5371, i32 0, i32 0
  store ptr %5370, ptr %5372, align 8
  %5373 = getelementptr inbounds { ptr, ptr }, ptr %5371, i32 0, i32 1
  store ptr %5368, ptr %5373, align 8
  %5374 = call ptr @make_candy_function(ptr @Core_type_is.324, ptr %5371, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5374, ptr @fun_Core_type_is.325, align 8
  %5375 = alloca ptr, i64 3, align 8
  %5376 = alloca ptr, i64 3, align 8
  %5377 = load ptr, ptr @tag_TypeOf, align 8
  %5378 = getelementptr ptr, ptr %5375, i64 0
  store ptr %5377, ptr %5378, align 8
  %5379 = getelementptr ptr, ptr %5376, i64 0
  store ptr %5370, ptr %5379, align 8
  %5380 = load ptr, ptr @tag_Is, align 8
  %5381 = load ptr, ptr @fun_Core_type_is.325, align 8
  %5382 = getelementptr ptr, ptr %5375, i64 1
  store ptr %5380, ptr %5382, align 8
  %5383 = getelementptr ptr, ptr %5376, i64 1
  store ptr %5381, ptr %5383, align 8
  %5384 = getelementptr ptr, ptr %5375, i64 2
  store ptr null, ptr %5384, align 8
  %5385 = getelementptr ptr, ptr %5376, i64 2
  store ptr null, ptr %5385, align 8
  %5386 = call ptr @make_candy_struct(ptr %5375, ptr %5376)
  %5387 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5388 = getelementptr inbounds { ptr }, ptr %5387, i32 0, i32 0
  store ptr %5386, ptr %5388, align 8
  %5389 = call ptr @make_candy_function(ptr @Core_function_is.326, ptr %5387, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5389, ptr @fun_Core_function_is.327, align 8
  %5390 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5391 = call ptr @Builtins__structGet(ptr %997, ptr %5390)
  %5392 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5393 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5392, i32 0, i32 0
  store ptr %5391, ptr %5393, align 8
  %5394 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5392, i32 0, i32 1
  store ptr %997, ptr %5394, align 8
  %5395 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5392, i32 0, i32 2
  store ptr %5386, ptr %5395, align 8
  %5396 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5392, i32 0, i32 3
  store ptr %5366, ptr %5396, align 8
  %5397 = call ptr @make_candy_function(ptr @Core_function_is0.328, ptr %5392, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5397, ptr @fun_Core_function_is0.329, align 8
  %5398 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5399 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5398, i32 0, i32 0
  store ptr %5391, ptr %5399, align 8
  %5400 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5398, i32 0, i32 1
  store ptr %5386, ptr %5400, align 8
  %5401 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5398, i32 0, i32 2
  store ptr %997, ptr %5401, align 8
  %5402 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5398, i32 0, i32 3
  store ptr %5366, ptr %5402, align 8
  %5403 = call ptr @make_candy_function(ptr @Core_function_is1.332, ptr %5398, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5403, ptr @fun_Core_function_is1.333, align 8
  %5404 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5405 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5404, i32 0, i32 0
  store ptr %5391, ptr %5405, align 8
  %5406 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5404, i32 0, i32 1
  store ptr %997, ptr %5406, align 8
  %5407 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5404, i32 0, i32 2
  store ptr %5386, ptr %5407, align 8
  %5408 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5404, i32 0, i32 3
  store ptr %5366, ptr %5408, align 8
  %5409 = call ptr @make_candy_function(ptr @Core_function_is2.336, ptr %5404, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5409, ptr @fun_Core_function_is2.337, align 8
  %5410 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5411 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5410, i32 0, i32 0
  store ptr %5391, ptr %5411, align 8
  %5412 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5410, i32 0, i32 1
  store ptr %997, ptr %5412, align 8
  %5413 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5410, i32 0, i32 2
  store ptr %5386, ptr %5413, align 8
  %5414 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5410, i32 0, i32 3
  store ptr %5366, ptr %5414, align 8
  %5415 = call ptr @make_candy_function(ptr @Core_function_is3.340, ptr %5410, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5415, ptr @fun_Core_function_is3.341, align 8
  %5416 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5417 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5416, i32 0, i32 0
  store ptr %5391, ptr %5417, align 8
  %5418 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5416, i32 0, i32 1
  store ptr %997, ptr %5418, align 8
  %5419 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5416, i32 0, i32 2
  store ptr %5386, ptr %5419, align 8
  %5420 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5416, i32 0, i32 3
  store ptr %5366, ptr %5420, align 8
  %5421 = call ptr @make_candy_function(ptr @Core_function_is4.344, ptr %5416, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5421, ptr @fun_Core_function_is4.345, align 8
  %5422 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5423 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5422, i32 0, i32 0
  store ptr %5391, ptr %5423, align 8
  %5424 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5422, i32 0, i32 1
  store ptr %5386, ptr %5424, align 8
  %5425 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5422, i32 0, i32 2
  store ptr %997, ptr %5425, align 8
  %5426 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5422, i32 0, i32 3
  store ptr %5366, ptr %5426, align 8
  %5427 = call ptr @make_candy_function(ptr @Core_function_is5.348, ptr %5422, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5427, ptr @fun_Core_function_is5.349, align 8
  %5428 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5429 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5428, i32 0, i32 0
  store ptr %997, ptr %5429, align 8
  %5430 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5428, i32 0, i32 1
  store ptr %5391, ptr %5430, align 8
  %5431 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5428, i32 0, i32 2
  store ptr %5386, ptr %5431, align 8
  %5432 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5428, i32 0, i32 3
  store ptr %5366, ptr %5432, align 8
  %5433 = call ptr @make_candy_function(ptr @Core_function_run.352, ptr %5428, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5433, ptr @fun_Core_function_run.353, align 8
  %5434 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5435 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5434, i32 0, i32 0
  store ptr %5391, ptr %5435, align 8
  %5436 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5434, i32 0, i32 1
  store ptr %997, ptr %5436, align 8
  %5437 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5434, i32 0, i32 2
  store ptr %5386, ptr %5437, align 8
  %5438 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5434, i32 0, i32 3
  store ptr %5366, ptr %5438, align 8
  %5439 = call ptr @make_candy_function(ptr @Core_function_doNotRun.356, ptr %5434, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5439, ptr @fun_Core_function_doNotRun.357, align 8
  %5440 = alloca ptr, i64 11, align 8
  %5441 = alloca ptr, i64 11, align 8
  %5442 = load ptr, ptr @tag_Is0, align 8
  %5443 = load ptr, ptr @fun_Core_function_is0.329, align 8
  %5444 = getelementptr ptr, ptr %5440, i64 0
  store ptr %5442, ptr %5444, align 8
  %5445 = getelementptr ptr, ptr %5441, i64 0
  store ptr %5443, ptr %5445, align 8
  %5446 = load ptr, ptr @tag_DoNotRun, align 8
  %5447 = load ptr, ptr @fun_Core_function_doNotRun.357, align 8
  %5448 = getelementptr ptr, ptr %5440, i64 1
  store ptr %5446, ptr %5448, align 8
  %5449 = getelementptr ptr, ptr %5441, i64 1
  store ptr %5447, ptr %5449, align 8
  %5450 = load ptr, ptr @tag_Is, align 8
  %5451 = load ptr, ptr @fun_Core_function_is.327, align 8
  %5452 = getelementptr ptr, ptr %5440, i64 2
  store ptr %5450, ptr %5452, align 8
  %5453 = getelementptr ptr, ptr %5441, i64 2
  store ptr %5451, ptr %5453, align 8
  %5454 = load ptr, ptr @tag_Is3, align 8
  %5455 = load ptr, ptr @fun_Core_function_is3.341, align 8
  %5456 = getelementptr ptr, ptr %5440, i64 3
  store ptr %5454, ptr %5456, align 8
  %5457 = getelementptr ptr, ptr %5441, i64 3
  store ptr %5455, ptr %5457, align 8
  %5458 = load ptr, ptr @tag_Is2, align 8
  %5459 = load ptr, ptr @fun_Core_function_is2.337, align 8
  %5460 = getelementptr ptr, ptr %5440, i64 4
  store ptr %5458, ptr %5460, align 8
  %5461 = getelementptr ptr, ptr %5441, i64 4
  store ptr %5459, ptr %5461, align 8
  %5462 = load ptr, ptr @tag_Is4, align 8
  %5463 = load ptr, ptr @fun_Core_function_is4.345, align 8
  %5464 = getelementptr ptr, ptr %5440, i64 5
  store ptr %5462, ptr %5464, align 8
  %5465 = getelementptr ptr, ptr %5441, i64 5
  store ptr %5463, ptr %5465, align 8
  %5466 = load ptr, ptr @tag_Is1, align 8
  %5467 = load ptr, ptr @fun_Core_function_is1.333, align 8
  %5468 = getelementptr ptr, ptr %5440, i64 6
  store ptr %5466, ptr %5468, align 8
  %5469 = getelementptr ptr, ptr %5441, i64 6
  store ptr %5467, ptr %5469, align 8
  %5470 = load ptr, ptr @tag_Is5, align 8
  %5471 = load ptr, ptr @fun_Core_function_is5.349, align 8
  %5472 = getelementptr ptr, ptr %5440, i64 7
  store ptr %5470, ptr %5472, align 8
  %5473 = getelementptr ptr, ptr %5441, i64 7
  store ptr %5471, ptr %5473, align 8
  %5474 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5475 = getelementptr ptr, ptr %5440, i64 8
  store ptr %5474, ptr %5475, align 8
  %5476 = getelementptr ptr, ptr %5441, i64 8
  store ptr %5391, ptr %5476, align 8
  %5477 = load ptr, ptr @tag_Run, align 8
  %5478 = load ptr, ptr @fun_Core_function_run.353, align 8
  %5479 = getelementptr ptr, ptr %5440, i64 9
  store ptr %5477, ptr %5479, align 8
  %5480 = getelementptr ptr, ptr %5441, i64 9
  store ptr %5478, ptr %5480, align 8
  %5481 = getelementptr ptr, ptr %5440, i64 10
  store ptr null, ptr %5481, align 8
  %5482 = getelementptr ptr, ptr %5441, i64 10
  store ptr null, ptr %5482, align 8
  %5483 = call ptr @make_candy_struct(ptr %5440, ptr %5441)
  %5484 = load ptr, ptr @tag_Equals, align 8
  %5485 = call ptr @Builtins__structGet(ptr %997, ptr %5484)
  %5486 = load ptr, ptr @tag_Equals, align 8
  %5487 = call ptr @Builtins__structGet(ptr %997, ptr %5486)
  %5488 = load ptr, ptr @tag_Equals, align 8
  %5489 = call ptr @Builtins__structGet(ptr %997, ptr %5488)
  %5490 = load ptr, ptr @tag_TypeOf, align 8
  %5491 = call ptr @Builtins__structGet(ptr %997, ptr %5490)
  %5492 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5493 = call ptr @Builtins__structGet(ptr %997, ptr %5492)
  %5494 = load ptr, ptr @tag_Equals, align 8
  %5495 = call ptr @Builtins__structGet(ptr %997, ptr %5494)
  %5496 = load ptr, ptr @tag_TypeOf, align 8
  %5497 = call ptr @Builtins__structGet(ptr %997, ptr %5496)
  %5498 = load ptr, ptr @tag_Equals, align 8
  %5499 = call ptr @Builtins__structGet(ptr %997, ptr %5498)
  %5500 = load ptr, ptr @tag_Equals, align 8
  %5501 = call ptr @Builtins__structGet(ptr %997, ptr %5500)
  %5502 = load ptr, ptr @tag_Equals, align 8
  %5503 = call ptr @Builtins__structGet(ptr %997, ptr %5502)
  %5504 = load ptr, ptr @tag_TypeOf, align 8
  %5505 = call ptr @Builtins__structGet(ptr %997, ptr %5504)
  %5506 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5507 = call ptr @Builtins__structGet(ptr %997, ptr %5506)
  %5508 = load ptr, ptr @tag_Equals, align 8
  %5509 = call ptr @Builtins__structGet(ptr %997, ptr %5508)
  %5510 = load ptr, ptr @tag_TypeOf, align 8
  %5511 = call ptr @Builtins__structGet(ptr %997, ptr %5510)
  %5512 = load ptr, ptr @tag_IfElse, align 8
  %5513 = call ptr @Builtins__structGet(ptr %997, ptr %5512)
  %5514 = load ptr, ptr @tag_Equals, align 8
  %5515 = call ptr @Builtins__structGet(ptr %997, ptr %5514)
  %5516 = load ptr, ptr @tag_TypeOf, align 8
  %5517 = call ptr @Builtins__structGet(ptr %997, ptr %5516)
  %5518 = load ptr, ptr @tag_Equals, align 8
  %5519 = call ptr @Builtins__structGet(ptr %997, ptr %5518)
  %5520 = load ptr, ptr @tag_Equals, align 8
  %5521 = call ptr @Builtins__structGet(ptr %997, ptr %5520)
  %5522 = load ptr, ptr @tag_Equals, align 8
  %5523 = call ptr @Builtins__structGet(ptr %997, ptr %5522)
  %5524 = load ptr, ptr @tag_TypeOf, align 8
  %5525 = call ptr @Builtins__structGet(ptr %997, ptr %5524)
  %5526 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5527 = getelementptr inbounds { ptr, ptr }, ptr %5526, i32 0, i32 0
  store ptr %5523, ptr %5527, align 8
  %5528 = getelementptr inbounds { ptr, ptr }, ptr %5526, i32 0, i32 1
  store ptr %5525, ptr %5528, align 8
  %5529 = call ptr @make_candy_function(ptr @Core_type_is.360, ptr %5526, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5529, ptr @fun_Core_type_is.361, align 8
  %5530 = alloca ptr, i64 3, align 8
  %5531 = alloca ptr, i64 3, align 8
  %5532 = load ptr, ptr @tag_TypeOf, align 8
  %5533 = getelementptr ptr, ptr %5530, i64 0
  store ptr %5532, ptr %5533, align 8
  %5534 = getelementptr ptr, ptr %5531, i64 0
  store ptr %5525, ptr %5534, align 8
  %5535 = load ptr, ptr @tag_Is, align 8
  %5536 = load ptr, ptr @fun_Core_type_is.361, align 8
  %5537 = getelementptr ptr, ptr %5530, i64 1
  store ptr %5535, ptr %5537, align 8
  %5538 = getelementptr ptr, ptr %5531, i64 1
  store ptr %5536, ptr %5538, align 8
  %5539 = getelementptr ptr, ptr %5530, i64 2
  store ptr null, ptr %5539, align 8
  %5540 = getelementptr ptr, ptr %5531, i64 2
  store ptr null, ptr %5540, align 8
  %5541 = call ptr @make_candy_struct(ptr %5530, ptr %5531)
  %5542 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5543 = getelementptr inbounds { ptr }, ptr %5542, i32 0, i32 0
  store ptr %5541, ptr %5543, align 8
  %5544 = call ptr @make_candy_function(ptr @Core_function_is.362, ptr %5542, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5544, ptr @fun_Core_function_is.363, align 8
  %5545 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5546 = call ptr @Builtins__structGet(ptr %997, ptr %5545)
  %5547 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5548 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5547, i32 0, i32 0
  store ptr %997, ptr %5548, align 8
  %5549 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5547, i32 0, i32 1
  store ptr %5546, ptr %5549, align 8
  %5550 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5547, i32 0, i32 2
  store ptr %5541, ptr %5550, align 8
  %5551 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5547, i32 0, i32 3
  store ptr %5521, ptr %5551, align 8
  %5552 = call ptr @make_candy_function(ptr @Core_function_is0.364, ptr %5547, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5552, ptr @fun_Core_function_is0.365, align 8
  %5553 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5554 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5553, i32 0, i32 0
  store ptr %997, ptr %5554, align 8
  %5555 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5553, i32 0, i32 1
  store ptr %5546, ptr %5555, align 8
  %5556 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5553, i32 0, i32 2
  store ptr %5541, ptr %5556, align 8
  %5557 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5553, i32 0, i32 3
  store ptr %5521, ptr %5557, align 8
  %5558 = call ptr @make_candy_function(ptr @Core_function_is1.368, ptr %5553, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5558, ptr @fun_Core_function_is1.369, align 8
  %5559 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5560 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5559, i32 0, i32 0
  store ptr %997, ptr %5560, align 8
  %5561 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5559, i32 0, i32 1
  store ptr %5546, ptr %5561, align 8
  %5562 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5559, i32 0, i32 2
  store ptr %5541, ptr %5562, align 8
  %5563 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5559, i32 0, i32 3
  store ptr %5521, ptr %5563, align 8
  %5564 = call ptr @make_candy_function(ptr @Core_function_is2.372, ptr %5559, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5564, ptr @fun_Core_function_is2.373, align 8
  %5565 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5566 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5565, i32 0, i32 0
  store ptr %997, ptr %5566, align 8
  %5567 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5565, i32 0, i32 1
  store ptr %5546, ptr %5567, align 8
  %5568 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5565, i32 0, i32 2
  store ptr %5541, ptr %5568, align 8
  %5569 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5565, i32 0, i32 3
  store ptr %5521, ptr %5569, align 8
  %5570 = call ptr @make_candy_function(ptr @Core_function_is3.376, ptr %5565, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5570, ptr @fun_Core_function_is3.377, align 8
  %5571 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5572 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5571, i32 0, i32 0
  store ptr %997, ptr %5572, align 8
  %5573 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5571, i32 0, i32 1
  store ptr %5546, ptr %5573, align 8
  %5574 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5571, i32 0, i32 2
  store ptr %5541, ptr %5574, align 8
  %5575 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5571, i32 0, i32 3
  store ptr %5521, ptr %5575, align 8
  %5576 = call ptr @make_candy_function(ptr @Core_function_is4.380, ptr %5571, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5576, ptr @fun_Core_function_is4.381, align 8
  %5577 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5578 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5577, i32 0, i32 0
  store ptr %997, ptr %5578, align 8
  %5579 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5577, i32 0, i32 1
  store ptr %5546, ptr %5579, align 8
  %5580 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5577, i32 0, i32 2
  store ptr %5541, ptr %5580, align 8
  %5581 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5577, i32 0, i32 3
  store ptr %5521, ptr %5581, align 8
  %5582 = call ptr @make_candy_function(ptr @Core_function_is5.384, ptr %5577, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5582, ptr @fun_Core_function_is5.385, align 8
  %5583 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5584 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5583, i32 0, i32 0
  store ptr %997, ptr %5584, align 8
  %5585 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5583, i32 0, i32 1
  store ptr %5546, ptr %5585, align 8
  %5586 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5583, i32 0, i32 2
  store ptr %5541, ptr %5586, align 8
  %5587 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5583, i32 0, i32 3
  store ptr %5521, ptr %5587, align 8
  %5588 = call ptr @make_candy_function(ptr @Core_function_run.388, ptr %5583, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5588, ptr @fun_Core_function_run.389, align 8
  %5589 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5590 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5589, i32 0, i32 0
  store ptr %997, ptr %5590, align 8
  %5591 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5589, i32 0, i32 1
  store ptr %5546, ptr %5591, align 8
  %5592 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5589, i32 0, i32 2
  store ptr %5541, ptr %5592, align 8
  %5593 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %5589, i32 0, i32 3
  store ptr %5521, ptr %5593, align 8
  %5594 = call ptr @make_candy_function(ptr @Core_function_doNotRun.392, ptr %5589, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5594, ptr @fun_Core_function_doNotRun.393, align 8
  %5595 = alloca ptr, i64 11, align 8
  %5596 = alloca ptr, i64 11, align 8
  %5597 = load ptr, ptr @tag_Is0, align 8
  %5598 = load ptr, ptr @fun_Core_function_is0.365, align 8
  %5599 = getelementptr ptr, ptr %5595, i64 0
  store ptr %5597, ptr %5599, align 8
  %5600 = getelementptr ptr, ptr %5596, i64 0
  store ptr %5598, ptr %5600, align 8
  %5601 = load ptr, ptr @tag_DoNotRun, align 8
  %5602 = load ptr, ptr @fun_Core_function_doNotRun.393, align 8
  %5603 = getelementptr ptr, ptr %5595, i64 1
  store ptr %5601, ptr %5603, align 8
  %5604 = getelementptr ptr, ptr %5596, i64 1
  store ptr %5602, ptr %5604, align 8
  %5605 = load ptr, ptr @tag_Is, align 8
  %5606 = load ptr, ptr @fun_Core_function_is.363, align 8
  %5607 = getelementptr ptr, ptr %5595, i64 2
  store ptr %5605, ptr %5607, align 8
  %5608 = getelementptr ptr, ptr %5596, i64 2
  store ptr %5606, ptr %5608, align 8
  %5609 = load ptr, ptr @tag_Is3, align 8
  %5610 = load ptr, ptr @fun_Core_function_is3.377, align 8
  %5611 = getelementptr ptr, ptr %5595, i64 3
  store ptr %5609, ptr %5611, align 8
  %5612 = getelementptr ptr, ptr %5596, i64 3
  store ptr %5610, ptr %5612, align 8
  %5613 = load ptr, ptr @tag_Is2, align 8
  %5614 = load ptr, ptr @fun_Core_function_is2.373, align 8
  %5615 = getelementptr ptr, ptr %5595, i64 4
  store ptr %5613, ptr %5615, align 8
  %5616 = getelementptr ptr, ptr %5596, i64 4
  store ptr %5614, ptr %5616, align 8
  %5617 = load ptr, ptr @tag_Is4, align 8
  %5618 = load ptr, ptr @fun_Core_function_is4.381, align 8
  %5619 = getelementptr ptr, ptr %5595, i64 5
  store ptr %5617, ptr %5619, align 8
  %5620 = getelementptr ptr, ptr %5596, i64 5
  store ptr %5618, ptr %5620, align 8
  %5621 = load ptr, ptr @tag_Is1, align 8
  %5622 = load ptr, ptr @fun_Core_function_is1.369, align 8
  %5623 = getelementptr ptr, ptr %5595, i64 6
  store ptr %5621, ptr %5623, align 8
  %5624 = getelementptr ptr, ptr %5596, i64 6
  store ptr %5622, ptr %5624, align 8
  %5625 = load ptr, ptr @tag_Is5, align 8
  %5626 = load ptr, ptr @fun_Core_function_is5.385, align 8
  %5627 = getelementptr ptr, ptr %5595, i64 7
  store ptr %5625, ptr %5627, align 8
  %5628 = getelementptr ptr, ptr %5596, i64 7
  store ptr %5626, ptr %5628, align 8
  %5629 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5630 = getelementptr ptr, ptr %5595, i64 8
  store ptr %5629, ptr %5630, align 8
  %5631 = getelementptr ptr, ptr %5596, i64 8
  store ptr %5546, ptr %5631, align 8
  %5632 = load ptr, ptr @tag_Run, align 8
  %5633 = load ptr, ptr @fun_Core_function_run.389, align 8
  %5634 = getelementptr ptr, ptr %5595, i64 9
  store ptr %5632, ptr %5634, align 8
  %5635 = getelementptr ptr, ptr %5596, i64 9
  store ptr %5633, ptr %5635, align 8
  %5636 = getelementptr ptr, ptr %5595, i64 10
  store ptr null, ptr %5636, align 8
  %5637 = getelementptr ptr, ptr %5596, i64 10
  store ptr null, ptr %5637, align 8
  %5638 = call ptr @make_candy_struct(ptr %5595, ptr %5596)
  %5639 = load ptr, ptr @tag_Equals, align 8
  %5640 = call ptr @Builtins__structGet(ptr %997, ptr %5639)
  %5641 = load ptr, ptr @tag_TypeOf, align 8
  %5642 = call ptr @Builtins__structGet(ptr %997, ptr %5641)
  %5643 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5644 = getelementptr inbounds { ptr }, ptr %5643, i32 0, i32 0
  store ptr %5638, ptr %5644, align 8
  %5645 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd.396, ptr %5643, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5645, ptr @fun_Core_bool_lazyAnd.397, align 8
  %5646 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5647 = call ptr @make_candy_function(ptr @Core_bool_and.424, ptr %5646, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5647, ptr @fun_Core_bool_and.425, align 8
  %5648 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5649 = getelementptr inbounds { ptr }, ptr %5648, i32 0, i32 0
  store ptr %5638, ptr %5649, align 8
  %5650 = call ptr @make_candy_function(ptr @Core_bool_lazyOr.428, ptr %5648, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5650, ptr @fun_Core_bool_lazyOr.429, align 8
  %5651 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5652 = call ptr @make_candy_function(ptr @Core_bool_or.456, ptr %5651, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5652, ptr @fun_Core_bool_or.457, align 8
  %5653 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5654 = getelementptr inbounds { ptr }, ptr %5653, i32 0, i32 0
  store ptr %5519, ptr %5654, align 8
  %5655 = call ptr @make_candy_function(ptr @Core_bool_xor.460, ptr %5653, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5655, ptr @fun_Core_bool_xor.461, align 8
  %5656 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5657 = call ptr @make_candy_function(ptr @Core_bool_implies.462, ptr %5656, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5657, ptr @fun_Core_bool_implies.463, align 8
  %5658 = alloca ptr, i64 9, align 8
  %5659 = alloca ptr, i64 9, align 8
  %5660 = load ptr, ptr @tag_LazyOr, align 8
  %5661 = load ptr, ptr @fun_Core_bool_lazyOr.429, align 8
  %5662 = getelementptr ptr, ptr %5658, i64 0
  store ptr %5660, ptr %5662, align 8
  %5663 = getelementptr ptr, ptr %5659, i64 0
  store ptr %5661, ptr %5663, align 8
  %5664 = load ptr, ptr @tag_Implies, align 8
  %5665 = load ptr, ptr @fun_Core_bool_implies.463, align 8
  %5666 = getelementptr ptr, ptr %5658, i64 1
  store ptr %5664, ptr %5666, align 8
  %5667 = getelementptr ptr, ptr %5659, i64 1
  store ptr %5665, ptr %5667, align 8
  %5668 = load ptr, ptr @tag_Not, align 8
  %5669 = load ptr, ptr @fun_Core_bool_not, align 8
  %5670 = getelementptr ptr, ptr %5658, i64 2
  store ptr %5668, ptr %5670, align 8
  %5671 = getelementptr ptr, ptr %5659, i64 2
  store ptr %5669, ptr %5671, align 8
  %5672 = load ptr, ptr @tag_And, align 8
  %5673 = load ptr, ptr @fun_Core_bool_and.425, align 8
  %5674 = getelementptr ptr, ptr %5658, i64 3
  store ptr %5672, ptr %5674, align 8
  %5675 = getelementptr ptr, ptr %5659, i64 3
  store ptr %5673, ptr %5675, align 8
  %5676 = load ptr, ptr @tag_LazyAnd, align 8
  %5677 = load ptr, ptr @fun_Core_bool_lazyAnd.397, align 8
  %5678 = getelementptr ptr, ptr %5658, i64 4
  store ptr %5676, ptr %5678, align 8
  %5679 = getelementptr ptr, ptr %5659, i64 4
  store ptr %5677, ptr %5679, align 8
  %5680 = load ptr, ptr @tag_Is, align 8
  %5681 = load ptr, ptr @fun_Core_bool_is, align 8
  %5682 = getelementptr ptr, ptr %5658, i64 5
  store ptr %5680, ptr %5682, align 8
  %5683 = getelementptr ptr, ptr %5659, i64 5
  store ptr %5681, ptr %5683, align 8
  %5684 = load ptr, ptr @tag_Or, align 8
  %5685 = load ptr, ptr @fun_Core_bool_or.457, align 8
  %5686 = getelementptr ptr, ptr %5658, i64 6
  store ptr %5684, ptr %5686, align 8
  %5687 = getelementptr ptr, ptr %5659, i64 6
  store ptr %5685, ptr %5687, align 8
  %5688 = load ptr, ptr @tag_Xor, align 8
  %5689 = load ptr, ptr @fun_Core_bool_xor.461, align 8
  %5690 = getelementptr ptr, ptr %5658, i64 7
  store ptr %5688, ptr %5690, align 8
  %5691 = getelementptr ptr, ptr %5659, i64 7
  store ptr %5689, ptr %5691, align 8
  %5692 = getelementptr ptr, ptr %5658, i64 8
  store ptr null, ptr %5692, align 8
  %5693 = getelementptr ptr, ptr %5659, i64 8
  store ptr null, ptr %5693, align 8
  %5694 = call ptr @make_candy_struct(ptr %5658, ptr %5659)
  %5695 = load ptr, ptr @tag_Equals, align 8
  %5696 = call ptr @Builtins__structGet(ptr %997, ptr %5695)
  %5697 = load ptr, ptr @tag_Equals, align 8
  %5698 = call ptr @Builtins__structGet(ptr %997, ptr %5697)
  %5699 = load ptr, ptr @tag_Equals, align 8
  %5700 = call ptr @Builtins__structGet(ptr %997, ptr %5699)
  %5701 = load ptr, ptr @tag_TypeOf, align 8
  %5702 = call ptr @Builtins__structGet(ptr %997, ptr %5701)
  %5703 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5704 = call ptr @Builtins__structGet(ptr %997, ptr %5703)
  %5705 = load ptr, ptr @tag_Equals, align 8
  %5706 = call ptr @Builtins__structGet(ptr %997, ptr %5705)
  %5707 = load ptr, ptr @tag_TypeOf, align 8
  %5708 = call ptr @Builtins__structGet(ptr %997, ptr %5707)
  %5709 = load ptr, ptr @tag_Equals, align 8
  %5710 = call ptr @Builtins__structGet(ptr %997, ptr %5709)
  %5711 = load ptr, ptr @tag_Equals, align 8
  %5712 = call ptr @Builtins__structGet(ptr %997, ptr %5711)
  %5713 = load ptr, ptr @tag_Equals, align 8
  %5714 = call ptr @Builtins__structGet(ptr %997, ptr %5713)
  %5715 = load ptr, ptr @tag_TypeOf, align 8
  %5716 = call ptr @Builtins__structGet(ptr %997, ptr %5715)
  %5717 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5718 = call ptr @Builtins__structGet(ptr %997, ptr %5717)
  %5719 = load ptr, ptr @tag_Equals, align 8
  %5720 = call ptr @Builtins__structGet(ptr %997, ptr %5719)
  %5721 = load ptr, ptr @tag_TypeOf, align 8
  %5722 = call ptr @Builtins__structGet(ptr %997, ptr %5721)
  %5723 = load ptr, ptr @tag_IfElse, align 8
  %5724 = call ptr @Builtins__structGet(ptr %997, ptr %5723)
  %5725 = load ptr, ptr @tag_Equals, align 8
  %5726 = call ptr @Builtins__structGet(ptr %997, ptr %5725)
  %5727 = load ptr, ptr @tag_TypeOf, align 8
  %5728 = call ptr @Builtins__structGet(ptr %997, ptr %5727)
  %5729 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5730 = getelementptr inbounds { ptr, ptr }, ptr %5729, i32 0, i32 0
  store ptr %5728, ptr %5730, align 8
  %5731 = getelementptr inbounds { ptr, ptr }, ptr %5729, i32 0, i32 1
  store ptr %5726, ptr %5731, align 8
  %5732 = call ptr @make_candy_function(ptr @Core_type_is.466, ptr %5729, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5732, ptr @fun_Core_type_is.467, align 8
  %5733 = alloca ptr, i64 3, align 8
  %5734 = alloca ptr, i64 3, align 8
  %5735 = load ptr, ptr @tag_TypeOf, align 8
  %5736 = getelementptr ptr, ptr %5733, i64 0
  store ptr %5735, ptr %5736, align 8
  %5737 = getelementptr ptr, ptr %5734, i64 0
  store ptr %5728, ptr %5737, align 8
  %5738 = load ptr, ptr @tag_Is, align 8
  %5739 = load ptr, ptr @fun_Core_type_is.467, align 8
  %5740 = getelementptr ptr, ptr %5733, i64 1
  store ptr %5738, ptr %5740, align 8
  %5741 = getelementptr ptr, ptr %5734, i64 1
  store ptr %5739, ptr %5741, align 8
  %5742 = getelementptr ptr, ptr %5733, i64 2
  store ptr null, ptr %5742, align 8
  %5743 = getelementptr ptr, ptr %5734, i64 2
  store ptr null, ptr %5743, align 8
  %5744 = call ptr @make_candy_struct(ptr %5733, ptr %5734)
  %5745 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5746 = getelementptr inbounds { ptr }, ptr %5745, i32 0, i32 0
  store ptr %5744, ptr %5746, align 8
  %5747 = call ptr @make_candy_function(ptr @Core_tag_is, ptr %5745, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5747, ptr @fun_Core_tag_is, align 8
  %5748 = load ptr, ptr @tag_TagHasValue, align 8
  %5749 = call ptr @Builtins__structGet(ptr %997, ptr %5748)
  %5750 = load ptr, ptr @tag_TagWithoutValue, align 8
  %5751 = call ptr @Builtins__structGet(ptr %997, ptr %5750)
  %5752 = load ptr, ptr @tag_TagGetValue, align 8
  %5753 = call ptr @Builtins__structGet(ptr %997, ptr %5752)
  %5754 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5755 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5754, i32 0, i32 0
  store ptr %5753, ptr %5755, align 8
  %5756 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5754, i32 0, i32 1
  store ptr %5749, ptr %5756, align 8
  %5757 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5754, i32 0, i32 2
  store ptr %5744, ptr %5757, align 8
  %5758 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5754, i32 0, i32 3
  store ptr %5724, ptr %5758, align 8
  %5759 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5754, i32 0, i32 4
  store ptr %5694, ptr %5759, align 8
  %5760 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5754, i32 0, i32 5
  store ptr %5751, ptr %5760, align 8
  %5761 = call ptr @make_candy_function(ptr @Core_tag_withSymbol, ptr %5754, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5761, ptr @fun_Core_tag_withSymbol, align 8
  %5762 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5763 = getelementptr inbounds { ptr, ptr }, ptr %5762, i32 0, i32 0
  store ptr %5751, ptr %5763, align 8
  %5764 = getelementptr inbounds { ptr, ptr }, ptr %5762, i32 0, i32 1
  store ptr %5744, ptr %5764, align 8
  %5765 = call ptr @make_candy_function(ptr @Core_tag_withValue, ptr %5762, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5765, ptr @fun_Core_tag_withValue, align 8
  %5766 = alloca ptr, i64 7, align 8
  %5767 = alloca ptr, i64 7, align 8
  %5768 = load ptr, ptr @tag_Is, align 8
  %5769 = load ptr, ptr @fun_Core_tag_is, align 8
  %5770 = getelementptr ptr, ptr %5766, i64 0
  store ptr %5768, ptr %5770, align 8
  %5771 = getelementptr ptr, ptr %5767, i64 0
  store ptr %5769, ptr %5771, align 8
  %5772 = load ptr, ptr @tag_WithoutValue, align 8
  %5773 = getelementptr ptr, ptr %5766, i64 1
  store ptr %5772, ptr %5773, align 8
  %5774 = getelementptr ptr, ptr %5767, i64 1
  store ptr %5751, ptr %5774, align 8
  %5775 = load ptr, ptr @tag_WithValue, align 8
  %5776 = load ptr, ptr @fun_Core_tag_withValue, align 8
  %5777 = getelementptr ptr, ptr %5766, i64 2
  store ptr %5775, ptr %5777, align 8
  %5778 = getelementptr ptr, ptr %5767, i64 2
  store ptr %5776, ptr %5778, align 8
  %5779 = load ptr, ptr @tag_GetValue, align 8
  %5780 = getelementptr ptr, ptr %5766, i64 3
  store ptr %5779, ptr %5780, align 8
  %5781 = getelementptr ptr, ptr %5767, i64 3
  store ptr %5753, ptr %5781, align 8
  %5782 = load ptr, ptr @tag_HasValue, align 8
  %5783 = getelementptr ptr, ptr %5766, i64 4
  store ptr %5782, ptr %5783, align 8
  %5784 = getelementptr ptr, ptr %5767, i64 4
  store ptr %5749, ptr %5784, align 8
  %5785 = load ptr, ptr @tag_WithSymbol, align 8
  %5786 = load ptr, ptr @fun_Core_tag_withSymbol, align 8
  %5787 = getelementptr ptr, ptr %5766, i64 5
  store ptr %5785, ptr %5787, align 8
  %5788 = getelementptr ptr, ptr %5767, i64 5
  store ptr %5786, ptr %5788, align 8
  %5789 = getelementptr ptr, ptr %5766, i64 6
  store ptr null, ptr %5789, align 8
  %5790 = getelementptr ptr, ptr %5767, i64 6
  store ptr null, ptr %5790, align 8
  %5791 = call ptr @make_candy_struct(ptr %5766, ptr %5767)
  %5792 = load ptr, ptr @tag_Equals, align 8
  %5793 = call ptr @Builtins__structGet(ptr %997, ptr %5792)
  %5794 = load ptr, ptr @tag_TypeOf, align 8
  %5795 = call ptr @Builtins__structGet(ptr %997, ptr %5794)
  %5796 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5797 = getelementptr inbounds { ptr, ptr }, ptr %5796, i32 0, i32 0
  store ptr %5793, ptr %5797, align 8
  %5798 = getelementptr inbounds { ptr, ptr }, ptr %5796, i32 0, i32 1
  store ptr %5795, ptr %5798, align 8
  %5799 = call ptr @make_candy_function(ptr @Core_type_is.468, ptr %5796, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5799, ptr @fun_Core_type_is.469, align 8
  %5800 = alloca ptr, i64 3, align 8
  %5801 = alloca ptr, i64 3, align 8
  %5802 = load ptr, ptr @tag_TypeOf, align 8
  %5803 = getelementptr ptr, ptr %5800, i64 0
  store ptr %5802, ptr %5803, align 8
  %5804 = getelementptr ptr, ptr %5801, i64 0
  store ptr %5795, ptr %5804, align 8
  %5805 = load ptr, ptr @tag_Is, align 8
  %5806 = load ptr, ptr @fun_Core_type_is.469, align 8
  %5807 = getelementptr ptr, ptr %5800, i64 1
  store ptr %5805, ptr %5807, align 8
  %5808 = getelementptr ptr, ptr %5801, i64 1
  store ptr %5806, ptr %5808, align 8
  %5809 = getelementptr ptr, ptr %5800, i64 2
  store ptr null, ptr %5809, align 8
  %5810 = getelementptr ptr, ptr %5801, i64 2
  store ptr null, ptr %5810, align 8
  %5811 = call ptr @make_candy_struct(ptr %5800, ptr %5801)
  %5812 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5813 = getelementptr inbounds { ptr }, ptr %5812, i32 0, i32 0
  store ptr %5791, ptr %5813, align 8
  %5814 = call ptr @make_candy_function(ptr @Core_result_getValue, ptr %5812, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5814, ptr @fun_Core_result_getValue, align 8
  %5815 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5816 = getelementptr inbounds { ptr, ptr }, ptr %5815, i32 0, i32 0
  store ptr %5791, ptr %5816, align 8
  %5817 = getelementptr inbounds { ptr, ptr }, ptr %5815, i32 0, i32 1
  store ptr %5364, ptr %5817, align 8
  %5818 = call ptr @make_candy_function(ptr @Core_result_isOk, ptr %5815, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5818, ptr @fun_Core_result_isOk, align 8
  %5819 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5820 = getelementptr inbounds { ptr, ptr }, ptr %5819, i32 0, i32 0
  store ptr %5364, ptr %5820, align 8
  %5821 = getelementptr inbounds { ptr, ptr }, ptr %5819, i32 0, i32 1
  store ptr %5791, ptr %5821, align 8
  %5822 = call ptr @make_candy_function(ptr @Core_result_unwrap, ptr %5819, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5822, ptr @fun_Core_result_unwrap, align 8
  %5823 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5824 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5823, i32 0, i32 0
  store ptr %5364, ptr %5824, align 8
  %5825 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5823, i32 0, i32 1
  store ptr %5811, ptr %5825, align 8
  %5826 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5823, i32 0, i32 2
  store ptr %5791, ptr %5826, align 8
  %5827 = call ptr @make_candy_function(ptr @Core_result_expect, ptr %5823, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5827, ptr @fun_Core_result_expect, align 8
  %5828 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5829 = getelementptr inbounds { ptr, ptr }, ptr %5828, i32 0, i32 0
  store ptr %5791, ptr %5829, align 8
  %5830 = getelementptr inbounds { ptr, ptr }, ptr %5828, i32 0, i32 1
  store ptr %5364, ptr %5830, align 8
  %5831 = call ptr @make_candy_function(ptr @Core_result_isError, ptr %5828, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5831, ptr @fun_Core_result_isError, align 8
  %5832 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %5833 = getelementptr inbounds { ptr, ptr }, ptr %5832, i32 0, i32 0
  store ptr %5364, ptr %5833, align 8
  %5834 = getelementptr inbounds { ptr, ptr }, ptr %5832, i32 0, i32 1
  store ptr %5791, ptr %5834, align 8
  %5835 = call ptr @make_candy_function(ptr @Core_result_unwrapError, ptr %5832, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5835, ptr @fun_Core_result_unwrapError, align 8
  %5836 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5837 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5836, i32 0, i32 0
  store ptr %5364, ptr %5837, align 8
  %5838 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5836, i32 0, i32 1
  store ptr %5811, ptr %5838, align 8
  %5839 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5836, i32 0, i32 2
  store ptr %5791, ptr %5839, align 8
  %5840 = call ptr @make_candy_function(ptr @Core_result_expectError, ptr %5836, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %5840, ptr @fun_Core_result_expectError, align 8
  %5841 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5842 = getelementptr inbounds { ptr }, ptr %5841, i32 0, i32 0
  store ptr %5483, ptr %5842, align 8
  %5843 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %5841, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5843, ptr @fun_Core_result_mapOrElse, align 8
  %5844 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5845 = getelementptr inbounds { ptr }, ptr %5844, i32 0, i32 0
  store ptr %5483, ptr %5845, align 8
  %5846 = call ptr @make_candy_function(ptr @Core_result_mapOr, ptr %5844, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5846, ptr @fun_Core_result_mapOr, align 8
  %5847 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5848 = getelementptr inbounds { ptr }, ptr %5847, i32 0, i32 0
  store ptr %5483, ptr %5848, align 8
  %5849 = call ptr @make_candy_function(ptr @Core_result_flatMap, ptr %5847, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5849, ptr @fun_Core_result_flatMap, align 8
  %5850 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5851 = getelementptr inbounds { ptr }, ptr %5850, i32 0, i32 0
  store ptr %5483, ptr %5851, align 8
  %5852 = call ptr @make_candy_function(ptr @Core_result_map, ptr %5850, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5852, ptr @fun_Core_result_map, align 8
  %5853 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5854 = call ptr @make_candy_function(ptr @Core_result_and, ptr %5853, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5854, ptr @fun_Core_result_and, align 8
  %5855 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5856 = getelementptr inbounds { ptr }, ptr %5855, i32 0, i32 0
  store ptr %5483, ptr %5856, align 8
  %5857 = call ptr @make_candy_function(ptr @Core_result_flatMapError, ptr %5855, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5857, ptr @fun_Core_result_flatMapError, align 8
  %5858 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5859 = getelementptr inbounds { ptr }, ptr %5858, i32 0, i32 0
  store ptr %5483, ptr %5859, align 8
  %5860 = call ptr @make_candy_function(ptr @Core_result_mapError, ptr %5858, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5860, ptr @fun_Core_result_mapError, align 8
  %5861 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5862 = call ptr @make_candy_function(ptr @Core_result_or, ptr %5861, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5862, ptr @fun_Core_result_or, align 8
  %5863 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5864 = getelementptr inbounds { ptr }, ptr %5863, i32 0, i32 0
  store ptr %5483, ptr %5864, align 8
  %5865 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse, ptr %5863, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5865, ptr @fun_Core_result_unwrapOrElse, align 8
  %5866 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5867 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %5866, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5867, ptr @fun_Core_result_unwrapOr, align 8
  %5868 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5869 = call ptr @make_candy_function(ptr @Core_result_flatten, ptr %5868, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5869, ptr @fun_Core_result_flatten, align 8
  %5870 = alloca ptr, i64 20, align 8
  %5871 = alloca ptr, i64 20, align 8
  %5872 = load ptr, ptr @tag_UnwrapOrElse, align 8
  %5873 = load ptr, ptr @fun_Core_result_unwrapOrElse, align 8
  %5874 = getelementptr ptr, ptr %5870, i64 0
  store ptr %5872, ptr %5874, align 8
  %5875 = getelementptr ptr, ptr %5871, i64 0
  store ptr %5873, ptr %5875, align 8
  %5876 = load ptr, ptr @tag_GetValue, align 8
  %5877 = load ptr, ptr @fun_Core_result_getValue, align 8
  %5878 = getelementptr ptr, ptr %5870, i64 1
  store ptr %5876, ptr %5878, align 8
  %5879 = getelementptr ptr, ptr %5871, i64 1
  store ptr %5877, ptr %5879, align 8
  %5880 = load ptr, ptr @tag_Expect, align 8
  %5881 = load ptr, ptr @fun_Core_result_expect, align 8
  %5882 = getelementptr ptr, ptr %5870, i64 2
  store ptr %5880, ptr %5882, align 8
  %5883 = getelementptr ptr, ptr %5871, i64 2
  store ptr %5881, ptr %5883, align 8
  %5884 = load ptr, ptr @tag_And, align 8
  %5885 = load ptr, ptr @fun_Core_result_and, align 8
  %5886 = getelementptr ptr, ptr %5870, i64 3
  store ptr %5884, ptr %5886, align 8
  %5887 = getelementptr ptr, ptr %5871, i64 3
  store ptr %5885, ptr %5887, align 8
  %5888 = load ptr, ptr @tag_FlatMapError, align 8
  %5889 = load ptr, ptr @fun_Core_result_flatMapError, align 8
  %5890 = getelementptr ptr, ptr %5870, i64 4
  store ptr %5888, ptr %5890, align 8
  %5891 = getelementptr ptr, ptr %5871, i64 4
  store ptr %5889, ptr %5891, align 8
  %5892 = load ptr, ptr @tag_ExpectError, align 8
  %5893 = load ptr, ptr @fun_Core_result_expectError, align 8
  %5894 = getelementptr ptr, ptr %5870, i64 5
  store ptr %5892, ptr %5894, align 8
  %5895 = getelementptr ptr, ptr %5871, i64 5
  store ptr %5893, ptr %5895, align 8
  %5896 = load ptr, ptr @tag_MapOrElse, align 8
  %5897 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  %5898 = getelementptr ptr, ptr %5870, i64 6
  store ptr %5896, ptr %5898, align 8
  %5899 = getelementptr ptr, ptr %5871, i64 6
  store ptr %5897, ptr %5899, align 8
  %5900 = load ptr, ptr @tag_IsError, align 8
  %5901 = load ptr, ptr @fun_Core_result_isError, align 8
  %5902 = getelementptr ptr, ptr %5870, i64 7
  store ptr %5900, ptr %5902, align 8
  %5903 = getelementptr ptr, ptr %5871, i64 7
  store ptr %5901, ptr %5903, align 8
  %5904 = load ptr, ptr @tag_Flatten, align 8
  %5905 = load ptr, ptr @fun_Core_result_flatten, align 8
  %5906 = getelementptr ptr, ptr %5870, i64 8
  store ptr %5904, ptr %5906, align 8
  %5907 = getelementptr ptr, ptr %5871, i64 8
  store ptr %5905, ptr %5907, align 8
  %5908 = load ptr, ptr @tag_IsOk, align 8
  %5909 = load ptr, ptr @fun_Core_result_isOk, align 8
  %5910 = getelementptr ptr, ptr %5870, i64 9
  store ptr %5908, ptr %5910, align 8
  %5911 = getelementptr ptr, ptr %5871, i64 9
  store ptr %5909, ptr %5911, align 8
  %5912 = load ptr, ptr @tag_Unwrap, align 8
  %5913 = load ptr, ptr @fun_Core_result_unwrap, align 8
  %5914 = getelementptr ptr, ptr %5870, i64 10
  store ptr %5912, ptr %5914, align 8
  %5915 = getelementptr ptr, ptr %5871, i64 10
  store ptr %5913, ptr %5915, align 8
  %5916 = load ptr, ptr @tag_MapError, align 8
  %5917 = load ptr, ptr @fun_Core_result_mapError, align 8
  %5918 = getelementptr ptr, ptr %5870, i64 11
  store ptr %5916, ptr %5918, align 8
  %5919 = getelementptr ptr, ptr %5871, i64 11
  store ptr %5917, ptr %5919, align 8
  %5920 = load ptr, ptr @tag_UnwrapError, align 8
  %5921 = load ptr, ptr @fun_Core_result_unwrapError, align 8
  %5922 = getelementptr ptr, ptr %5870, i64 12
  store ptr %5920, ptr %5922, align 8
  %5923 = getelementptr ptr, ptr %5871, i64 12
  store ptr %5921, ptr %5923, align 8
  %5924 = load ptr, ptr @tag_Map, align 8
  %5925 = load ptr, ptr @fun_Core_result_map, align 8
  %5926 = getelementptr ptr, ptr %5870, i64 13
  store ptr %5924, ptr %5926, align 8
  %5927 = getelementptr ptr, ptr %5871, i64 13
  store ptr %5925, ptr %5927, align 8
  %5928 = load ptr, ptr @tag_UnwrapOr, align 8
  %5929 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  %5930 = getelementptr ptr, ptr %5870, i64 14
  store ptr %5928, ptr %5930, align 8
  %5931 = getelementptr ptr, ptr %5871, i64 14
  store ptr %5929, ptr %5931, align 8
  %5932 = load ptr, ptr @tag_Is, align 8
  %5933 = load ptr, ptr @fun_Core_result_is, align 8
  %5934 = getelementptr ptr, ptr %5870, i64 15
  store ptr %5932, ptr %5934, align 8
  %5935 = getelementptr ptr, ptr %5871, i64 15
  store ptr %5933, ptr %5935, align 8
  %5936 = load ptr, ptr @tag_Or, align 8
  %5937 = load ptr, ptr @fun_Core_result_or, align 8
  %5938 = getelementptr ptr, ptr %5870, i64 16
  store ptr %5936, ptr %5938, align 8
  %5939 = getelementptr ptr, ptr %5871, i64 16
  store ptr %5937, ptr %5939, align 8
  %5940 = load ptr, ptr @tag_MapOr, align 8
  %5941 = load ptr, ptr @fun_Core_result_mapOr, align 8
  %5942 = getelementptr ptr, ptr %5870, i64 17
  store ptr %5940, ptr %5942, align 8
  %5943 = getelementptr ptr, ptr %5871, i64 17
  store ptr %5941, ptr %5943, align 8
  %5944 = load ptr, ptr @tag_FlatMap, align 8
  %5945 = load ptr, ptr @fun_Core_result_flatMap, align 8
  %5946 = getelementptr ptr, ptr %5870, i64 18
  store ptr %5944, ptr %5946, align 8
  %5947 = getelementptr ptr, ptr %5871, i64 18
  store ptr %5945, ptr %5947, align 8
  %5948 = getelementptr ptr, ptr %5870, i64 19
  store ptr null, ptr %5948, align 8
  %5949 = getelementptr ptr, ptr %5871, i64 19
  store ptr null, ptr %5949, align 8
  %5950 = call ptr @make_candy_struct(ptr %5870, ptr %5871)
  %5951 = load ptr, ptr @tag_Equals, align 8
  %5952 = call ptr @Builtins__structGet(ptr %997, ptr %5951)
  %5953 = load ptr, ptr @tag_Equals, align 8
  %5954 = call ptr @Builtins__structGet(ptr %997, ptr %5953)
  %5955 = load ptr, ptr @tag_Equals, align 8
  %5956 = call ptr @Builtins__structGet(ptr %997, ptr %5955)
  %5957 = load ptr, ptr @tag_TypeOf, align 8
  %5958 = call ptr @Builtins__structGet(ptr %997, ptr %5957)
  %5959 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5960 = call ptr @Builtins__structGet(ptr %997, ptr %5959)
  %5961 = load ptr, ptr @tag_Equals, align 8
  %5962 = call ptr @Builtins__structGet(ptr %997, ptr %5961)
  %5963 = load ptr, ptr @tag_TypeOf, align 8
  %5964 = call ptr @Builtins__structGet(ptr %997, ptr %5963)
  %5965 = load ptr, ptr @tag_Equals, align 8
  %5966 = call ptr @Builtins__structGet(ptr %997, ptr %5965)
  %5967 = load ptr, ptr @tag_Equals, align 8
  %5968 = call ptr @Builtins__structGet(ptr %997, ptr %5967)
  %5969 = load ptr, ptr @tag_Equals, align 8
  %5970 = call ptr @Builtins__structGet(ptr %997, ptr %5969)
  %5971 = load ptr, ptr @tag_TypeOf, align 8
  %5972 = call ptr @Builtins__structGet(ptr %997, ptr %5971)
  %5973 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5974 = call ptr @Builtins__structGet(ptr %997, ptr %5973)
  %5975 = load ptr, ptr @tag_Equals, align 8
  %5976 = call ptr @Builtins__structGet(ptr %997, ptr %5975)
  %5977 = load ptr, ptr @tag_TypeOf, align 8
  %5978 = call ptr @Builtins__structGet(ptr %997, ptr %5977)
  %5979 = load ptr, ptr @tag_IfElse, align 8
  %5980 = call ptr @Builtins__structGet(ptr %997, ptr %5979)
  %5981 = load ptr, ptr @tag_Equals, align 8
  %5982 = call ptr @Builtins__structGet(ptr %997, ptr %5981)
  %5983 = load ptr, ptr @tag_TypeOf, align 8
  %5984 = call ptr @Builtins__structGet(ptr %997, ptr %5983)
  %5985 = load ptr, ptr @tag_Equals, align 8
  %5986 = call ptr @Builtins__structGet(ptr %997, ptr %5985)
  %5987 = load ptr, ptr @tag_Equals, align 8
  %5988 = call ptr @Builtins__structGet(ptr %997, ptr %5987)
  %5989 = load ptr, ptr @tag_Equals, align 8
  %5990 = call ptr @Builtins__structGet(ptr %997, ptr %5989)
  %5991 = load ptr, ptr @tag_TypeOf, align 8
  %5992 = call ptr @Builtins__structGet(ptr %997, ptr %5991)
  %5993 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5994 = call ptr @Builtins__structGet(ptr %997, ptr %5993)
  %5995 = load ptr, ptr @tag_Equals, align 8
  %5996 = call ptr @Builtins__structGet(ptr %997, ptr %5995)
  %5997 = load ptr, ptr @tag_TypeOf, align 8
  %5998 = call ptr @Builtins__structGet(ptr %997, ptr %5997)
  %5999 = load ptr, ptr @tag_Equals, align 8
  %6000 = call ptr @Builtins__structGet(ptr %997, ptr %5999)
  %6001 = load ptr, ptr @tag_Equals, align 8
  %6002 = call ptr @Builtins__structGet(ptr %997, ptr %6001)
  %6003 = load ptr, ptr @tag_Equals, align 8
  %6004 = call ptr @Builtins__structGet(ptr %997, ptr %6003)
  %6005 = load ptr, ptr @tag_TypeOf, align 8
  %6006 = call ptr @Builtins__structGet(ptr %997, ptr %6005)
  %6007 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6008 = call ptr @Builtins__structGet(ptr %997, ptr %6007)
  %6009 = load ptr, ptr @tag_Equals, align 8
  %6010 = call ptr @Builtins__structGet(ptr %997, ptr %6009)
  %6011 = load ptr, ptr @tag_TypeOf, align 8
  %6012 = call ptr @Builtins__structGet(ptr %997, ptr %6011)
  %6013 = load ptr, ptr @tag_Equals, align 8
  %6014 = call ptr @Builtins__structGet(ptr %997, ptr %6013)
  %6015 = load ptr, ptr @tag_Equals, align 8
  %6016 = call ptr @Builtins__structGet(ptr %997, ptr %6015)
  %6017 = load ptr, ptr @tag_Equals, align 8
  %6018 = call ptr @Builtins__structGet(ptr %997, ptr %6017)
  %6019 = load ptr, ptr @tag_TypeOf, align 8
  %6020 = call ptr @Builtins__structGet(ptr %997, ptr %6019)
  %6021 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6022 = call ptr @Builtins__structGet(ptr %997, ptr %6021)
  %6023 = load ptr, ptr @tag_Equals, align 8
  %6024 = call ptr @Builtins__structGet(ptr %997, ptr %6023)
  %6025 = load ptr, ptr @tag_TypeOf, align 8
  %6026 = call ptr @Builtins__structGet(ptr %997, ptr %6025)
  %6027 = load ptr, ptr @tag_IfElse, align 8
  %6028 = call ptr @Builtins__structGet(ptr %997, ptr %6027)
  %6029 = load ptr, ptr @tag_Equals, align 8
  %6030 = call ptr @Builtins__structGet(ptr %997, ptr %6029)
  %6031 = load ptr, ptr @tag_TypeOf, align 8
  %6032 = call ptr @Builtins__structGet(ptr %997, ptr %6031)
  %6033 = load ptr, ptr @tag_TagHasValue, align 8
  %6034 = call ptr @Builtins__structGet(ptr %997, ptr %6033)
  %6035 = load ptr, ptr @tag_TagWithoutValue, align 8
  %6036 = call ptr @Builtins__structGet(ptr %997, ptr %6035)
  %6037 = load ptr, ptr @tag_TagGetValue, align 8
  %6038 = call ptr @Builtins__structGet(ptr %997, ptr %6037)
  %6039 = load ptr, ptr @tag_Equals, align 8
  %6040 = call ptr @Builtins__structGet(ptr %997, ptr %6039)
  %6041 = load ptr, ptr @tag_Equals, align 8
  %6042 = call ptr @Builtins__structGet(ptr %997, ptr %6041)
  %6043 = load ptr, ptr @tag_Equals, align 8
  %6044 = call ptr @Builtins__structGet(ptr %997, ptr %6043)
  %6045 = load ptr, ptr @tag_TypeOf, align 8
  %6046 = call ptr @Builtins__structGet(ptr %997, ptr %6045)
  %6047 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6048 = call ptr @Builtins__structGet(ptr %997, ptr %6047)
  %6049 = load ptr, ptr @tag_Equals, align 8
  %6050 = call ptr @Builtins__structGet(ptr %997, ptr %6049)
  %6051 = load ptr, ptr @tag_TypeOf, align 8
  %6052 = call ptr @Builtins__structGet(ptr %997, ptr %6051)
  %6053 = load ptr, ptr @tag_Equals, align 8
  %6054 = call ptr @Builtins__structGet(ptr %997, ptr %6053)
  %6055 = load ptr, ptr @tag_Equals, align 8
  %6056 = call ptr @Builtins__structGet(ptr %997, ptr %6055)
  %6057 = load ptr, ptr @tag_Equals, align 8
  %6058 = call ptr @Builtins__structGet(ptr %997, ptr %6057)
  %6059 = load ptr, ptr @tag_TypeOf, align 8
  %6060 = call ptr @Builtins__structGet(ptr %997, ptr %6059)
  %6061 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6062 = call ptr @Builtins__structGet(ptr %997, ptr %6061)
  %6063 = load ptr, ptr @tag_Equals, align 8
  %6064 = call ptr @Builtins__structGet(ptr %997, ptr %6063)
  %6065 = load ptr, ptr @tag_TypeOf, align 8
  %6066 = call ptr @Builtins__structGet(ptr %997, ptr %6065)
  %6067 = load ptr, ptr @tag_Equals, align 8
  %6068 = call ptr @Builtins__structGet(ptr %997, ptr %6067)
  %6069 = load ptr, ptr @tag_Equals, align 8
  %6070 = call ptr @Builtins__structGet(ptr %997, ptr %6069)
  %6071 = load ptr, ptr @tag_Equals, align 8
  %6072 = call ptr @Builtins__structGet(ptr %997, ptr %6071)
  %6073 = load ptr, ptr @tag_TypeOf, align 8
  %6074 = call ptr @Builtins__structGet(ptr %997, ptr %6073)
  %6075 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6076 = call ptr @Builtins__structGet(ptr %997, ptr %6075)
  %6077 = load ptr, ptr @tag_Equals, align 8
  %6078 = call ptr @Builtins__structGet(ptr %997, ptr %6077)
  %6079 = load ptr, ptr @tag_TypeOf, align 8
  %6080 = call ptr @Builtins__structGet(ptr %997, ptr %6079)
  %6081 = load ptr, ptr @tag_IfElse, align 8
  %6082 = call ptr @Builtins__structGet(ptr %997, ptr %6081)
  %6083 = load ptr, ptr @tag_Equals, align 8
  %6084 = call ptr @Builtins__structGet(ptr %997, ptr %6083)
  %6085 = load ptr, ptr @tag_Equals, align 8
  %6086 = call ptr @Builtins__structGet(ptr %997, ptr %6085)
  %6087 = load ptr, ptr @tag_Equals, align 8
  %6088 = call ptr @Builtins__structGet(ptr %997, ptr %6087)
  %6089 = load ptr, ptr @tag_Equals, align 8
  %6090 = call ptr @Builtins__structGet(ptr %997, ptr %6089)
  %6091 = load ptr, ptr @tag_TypeOf, align 8
  %6092 = call ptr @Builtins__structGet(ptr %997, ptr %6091)
  %6093 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6094 = call ptr @Builtins__structGet(ptr %997, ptr %6093)
  %6095 = load ptr, ptr @tag_Equals, align 8
  %6096 = call ptr @Builtins__structGet(ptr %997, ptr %6095)
  %6097 = load ptr, ptr @tag_TypeOf, align 8
  %6098 = call ptr @Builtins__structGet(ptr %997, ptr %6097)
  %6099 = load ptr, ptr @tag_Equals, align 8
  %6100 = call ptr @Builtins__structGet(ptr %997, ptr %6099)
  %6101 = load ptr, ptr @tag_Equals, align 8
  %6102 = call ptr @Builtins__structGet(ptr %997, ptr %6101)
  %6103 = load ptr, ptr @tag_Equals, align 8
  %6104 = call ptr @Builtins__structGet(ptr %997, ptr %6103)
  %6105 = load ptr, ptr @tag_TypeOf, align 8
  %6106 = call ptr @Builtins__structGet(ptr %997, ptr %6105)
  %6107 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6108 = call ptr @Builtins__structGet(ptr %997, ptr %6107)
  %6109 = load ptr, ptr @tag_Equals, align 8
  %6110 = call ptr @Builtins__structGet(ptr %997, ptr %6109)
  %6111 = load ptr, ptr @tag_TypeOf, align 8
  %6112 = call ptr @Builtins__structGet(ptr %997, ptr %6111)
  %6113 = load ptr, ptr @tag_Equals, align 8
  %6114 = call ptr @Builtins__structGet(ptr %997, ptr %6113)
  %6115 = load ptr, ptr @tag_Equals, align 8
  %6116 = call ptr @Builtins__structGet(ptr %997, ptr %6115)
  %6117 = load ptr, ptr @tag_Equals, align 8
  %6118 = call ptr @Builtins__structGet(ptr %997, ptr %6117)
  %6119 = load ptr, ptr @tag_TypeOf, align 8
  %6120 = call ptr @Builtins__structGet(ptr %997, ptr %6119)
  %6121 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6122 = call ptr @Builtins__structGet(ptr %997, ptr %6121)
  %6123 = load ptr, ptr @tag_Equals, align 8
  %6124 = call ptr @Builtins__structGet(ptr %997, ptr %6123)
  %6125 = load ptr, ptr @tag_TypeOf, align 8
  %6126 = call ptr @Builtins__structGet(ptr %997, ptr %6125)
  %6127 = load ptr, ptr @tag_Equals, align 8
  %6128 = call ptr @Builtins__structGet(ptr %997, ptr %6127)
  %6129 = load ptr, ptr @tag_Equals, align 8
  %6130 = call ptr @Builtins__structGet(ptr %997, ptr %6129)
  %6131 = load ptr, ptr @tag_Equals, align 8
  %6132 = call ptr @Builtins__structGet(ptr %997, ptr %6131)
  %6133 = load ptr, ptr @tag_TypeOf, align 8
  %6134 = call ptr @Builtins__structGet(ptr %997, ptr %6133)
  %6135 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6136 = call ptr @Builtins__structGet(ptr %997, ptr %6135)
  %6137 = load ptr, ptr @tag_Equals, align 8
  %6138 = call ptr @Builtins__structGet(ptr %997, ptr %6137)
  %6139 = load ptr, ptr @tag_TypeOf, align 8
  %6140 = call ptr @Builtins__structGet(ptr %997, ptr %6139)
  %6141 = load ptr, ptr @tag_IfElse, align 8
  %6142 = call ptr @Builtins__structGet(ptr %997, ptr %6141)
  %6143 = load ptr, ptr @tag_Equals, align 8
  %6144 = call ptr @Builtins__structGet(ptr %997, ptr %6143)
  %6145 = load ptr, ptr @tag_Equals, align 8
  %6146 = call ptr @Builtins__structGet(ptr %997, ptr %6145)
  %6147 = load ptr, ptr @tag_Equals, align 8
  %6148 = call ptr @Builtins__structGet(ptr %997, ptr %6147)
  %6149 = load ptr, ptr @tag_TypeOf, align 8
  %6150 = call ptr @Builtins__structGet(ptr %997, ptr %6149)
  %6151 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6152 = call ptr @Builtins__structGet(ptr %997, ptr %6151)
  %6153 = load ptr, ptr @tag_Equals, align 8
  %6154 = call ptr @Builtins__structGet(ptr %997, ptr %6153)
  %6155 = load ptr, ptr @tag_TypeOf, align 8
  %6156 = call ptr @Builtins__structGet(ptr %997, ptr %6155)
  %6157 = load ptr, ptr @tag_Equals, align 8
  %6158 = call ptr @Builtins__structGet(ptr %997, ptr %6157)
  %6159 = load ptr, ptr @tag_Equals, align 8
  %6160 = call ptr @Builtins__structGet(ptr %997, ptr %6159)
  %6161 = load ptr, ptr @tag_Equals, align 8
  %6162 = call ptr @Builtins__structGet(ptr %997, ptr %6161)
  %6163 = load ptr, ptr @tag_TypeOf, align 8
  %6164 = call ptr @Builtins__structGet(ptr %997, ptr %6163)
  %6165 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6166 = call ptr @Builtins__structGet(ptr %997, ptr %6165)
  %6167 = load ptr, ptr @tag_Equals, align 8
  %6168 = call ptr @Builtins__structGet(ptr %997, ptr %6167)
  %6169 = load ptr, ptr @tag_TypeOf, align 8
  %6170 = call ptr @Builtins__structGet(ptr %997, ptr %6169)
  %6171 = load ptr, ptr @tag_IfElse, align 8
  %6172 = call ptr @Builtins__structGet(ptr %997, ptr %6171)
  %6173 = load ptr, ptr @tag_Equals, align 8
  %6174 = call ptr @Builtins__structGet(ptr %997, ptr %6173)
  %6175 = load ptr, ptr @tag_Equals, align 8
  %6176 = call ptr @Builtins__structGet(ptr %997, ptr %6175)
  %6177 = load ptr, ptr @tag_TypeOf, align 8
  %6178 = call ptr @Builtins__structGet(ptr %997, ptr %6177)
  %6179 = load ptr, ptr @tag_IntAdd, align 8
  %6180 = call ptr @Builtins__structGet(ptr %997, ptr %6179)
  %6181 = load ptr, ptr @tag_IntSubtract, align 8
  %6182 = call ptr @Builtins__structGet(ptr %997, ptr %6181)
  %6183 = load ptr, ptr @tag_IntMultiply, align 8
  %6184 = call ptr @Builtins__structGet(ptr %997, ptr %6183)
  %6185 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %6186 = call ptr @Builtins__structGet(ptr %997, ptr %6185)
  %6187 = load ptr, ptr @tag_IntRemainder, align 8
  %6188 = call ptr @Builtins__structGet(ptr %997, ptr %6187)
  %6189 = load ptr, ptr @tag_IntModulo, align 8
  %6190 = call ptr @Builtins__structGet(ptr %997, ptr %6189)
  %6191 = load ptr, ptr @tag_IntShiftLeft, align 8
  %6192 = call ptr @Builtins__structGet(ptr %997, ptr %6191)
  %6193 = load ptr, ptr @tag_IntShiftRight, align 8
  %6194 = call ptr @Builtins__structGet(ptr %997, ptr %6193)
  %6195 = load ptr, ptr @tag_IntBitLength, align 8
  %6196 = call ptr @Builtins__structGet(ptr %997, ptr %6195)
  %6197 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %6198 = call ptr @Builtins__structGet(ptr %997, ptr %6197)
  %6199 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %6200 = call ptr @Builtins__structGet(ptr %997, ptr %6199)
  %6201 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %6202 = call ptr @Builtins__structGet(ptr %997, ptr %6201)
  %6203 = load ptr, ptr @tag_IntParse, align 8
  %6204 = call ptr @Builtins__structGet(ptr %997, ptr %6203)
  %6205 = load ptr, ptr @tag_Equals, align 8
  %6206 = call ptr @Builtins__structGet(ptr %997, ptr %6205)
  %6207 = load ptr, ptr @tag_Equals, align 8
  %6208 = call ptr @Builtins__structGet(ptr %997, ptr %6207)
  %6209 = load ptr, ptr @tag_Equals, align 8
  %6210 = call ptr @Builtins__structGet(ptr %997, ptr %6209)
  %6211 = load ptr, ptr @tag_TypeOf, align 8
  %6212 = call ptr @Builtins__structGet(ptr %997, ptr %6211)
  %6213 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6214 = call ptr @Builtins__structGet(ptr %997, ptr %6213)
  %6215 = load ptr, ptr @tag_Equals, align 8
  %6216 = call ptr @Builtins__structGet(ptr %997, ptr %6215)
  %6217 = load ptr, ptr @tag_TypeOf, align 8
  %6218 = call ptr @Builtins__structGet(ptr %997, ptr %6217)
  %6219 = load ptr, ptr @tag_Equals, align 8
  %6220 = call ptr @Builtins__structGet(ptr %997, ptr %6219)
  %6221 = load ptr, ptr @tag_Equals, align 8
  %6222 = call ptr @Builtins__structGet(ptr %997, ptr %6221)
  %6223 = load ptr, ptr @tag_Equals, align 8
  %6224 = call ptr @Builtins__structGet(ptr %997, ptr %6223)
  %6225 = load ptr, ptr @tag_TypeOf, align 8
  %6226 = call ptr @Builtins__structGet(ptr %997, ptr %6225)
  %6227 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6228 = call ptr @Builtins__structGet(ptr %997, ptr %6227)
  %6229 = load ptr, ptr @tag_Equals, align 8
  %6230 = call ptr @Builtins__structGet(ptr %997, ptr %6229)
  %6231 = load ptr, ptr @tag_TypeOf, align 8
  %6232 = call ptr @Builtins__structGet(ptr %997, ptr %6231)
  %6233 = load ptr, ptr @tag_Equals, align 8
  %6234 = call ptr @Builtins__structGet(ptr %997, ptr %6233)
  %6235 = load ptr, ptr @tag_Equals, align 8
  %6236 = call ptr @Builtins__structGet(ptr %997, ptr %6235)
  %6237 = load ptr, ptr @tag_Equals, align 8
  %6238 = call ptr @Builtins__structGet(ptr %997, ptr %6237)
  %6239 = load ptr, ptr @tag_TypeOf, align 8
  %6240 = call ptr @Builtins__structGet(ptr %997, ptr %6239)
  %6241 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6242 = call ptr @Builtins__structGet(ptr %997, ptr %6241)
  %6243 = load ptr, ptr @tag_Equals, align 8
  %6244 = call ptr @Builtins__structGet(ptr %997, ptr %6243)
  %6245 = load ptr, ptr @tag_TypeOf, align 8
  %6246 = call ptr @Builtins__structGet(ptr %997, ptr %6245)
  %6247 = load ptr, ptr @tag_IfElse, align 8
  %6248 = call ptr @Builtins__structGet(ptr %997, ptr %6247)
  %6249 = load ptr, ptr @tag_Equals, align 8
  %6250 = call ptr @Builtins__structGet(ptr %997, ptr %6249)
  %6251 = load ptr, ptr @tag_Equals, align 8
  %6252 = call ptr @Builtins__structGet(ptr %997, ptr %6251)
  %6253 = load ptr, ptr @tag_Equals, align 8
  %6254 = call ptr @Builtins__structGet(ptr %997, ptr %6253)
  %6255 = load ptr, ptr @tag_TypeOf, align 8
  %6256 = call ptr @Builtins__structGet(ptr %997, ptr %6255)
  %6257 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6258 = call ptr @Builtins__structGet(ptr %997, ptr %6257)
  %6259 = load ptr, ptr @tag_Equals, align 8
  %6260 = call ptr @Builtins__structGet(ptr %997, ptr %6259)
  %6261 = load ptr, ptr @tag_Equals, align 8
  %6262 = call ptr @Builtins__structGet(ptr %997, ptr %6261)
  %6263 = load ptr, ptr @tag_Equals, align 8
  %6264 = call ptr @Builtins__structGet(ptr %997, ptr %6263)
  %6265 = load ptr, ptr @tag_TypeOf, align 8
  %6266 = call ptr @Builtins__structGet(ptr %997, ptr %6265)
  %6267 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6268 = call ptr @Builtins__structGet(ptr %997, ptr %6267)
  %6269 = load ptr, ptr @tag_Equals, align 8
  %6270 = call ptr @Builtins__structGet(ptr %997, ptr %6269)
  %6271 = load ptr, ptr @tag_TypeOf, align 8
  %6272 = call ptr @Builtins__structGet(ptr %997, ptr %6271)
  %6273 = load ptr, ptr @tag_Equals, align 8
  %6274 = call ptr @Builtins__structGet(ptr %997, ptr %6273)
  %6275 = load ptr, ptr @tag_Equals, align 8
  %6276 = call ptr @Builtins__structGet(ptr %997, ptr %6275)
  %6277 = load ptr, ptr @tag_Equals, align 8
  %6278 = call ptr @Builtins__structGet(ptr %997, ptr %6277)
  %6279 = load ptr, ptr @tag_TypeOf, align 8
  %6280 = call ptr @Builtins__structGet(ptr %997, ptr %6279)
  %6281 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6282 = call ptr @Builtins__structGet(ptr %997, ptr %6281)
  %6283 = load ptr, ptr @tag_Equals, align 8
  %6284 = call ptr @Builtins__structGet(ptr %997, ptr %6283)
  %6285 = load ptr, ptr @tag_TypeOf, align 8
  %6286 = call ptr @Builtins__structGet(ptr %997, ptr %6285)
  %6287 = load ptr, ptr @tag_Equals, align 8
  %6288 = call ptr @Builtins__structGet(ptr %997, ptr %6287)
  %6289 = load ptr, ptr @tag_Equals, align 8
  %6290 = call ptr @Builtins__structGet(ptr %997, ptr %6289)
  %6291 = load ptr, ptr @tag_Equals, align 8
  %6292 = call ptr @Builtins__structGet(ptr %997, ptr %6291)
  %6293 = load ptr, ptr @tag_TypeOf, align 8
  %6294 = call ptr @Builtins__structGet(ptr %997, ptr %6293)
  %6295 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6296 = call ptr @Builtins__structGet(ptr %997, ptr %6295)
  %6297 = load ptr, ptr @tag_Equals, align 8
  %6298 = call ptr @Builtins__structGet(ptr %997, ptr %6297)
  %6299 = load ptr, ptr @tag_TypeOf, align 8
  %6300 = call ptr @Builtins__structGet(ptr %997, ptr %6299)
  %6301 = load ptr, ptr @tag_Equals, align 8
  %6302 = call ptr @Builtins__structGet(ptr %997, ptr %6301)
  %6303 = load ptr, ptr @tag_Equals, align 8
  %6304 = call ptr @Builtins__structGet(ptr %997, ptr %6303)
  %6305 = load ptr, ptr @tag_Equals, align 8
  %6306 = call ptr @Builtins__structGet(ptr %997, ptr %6305)
  %6307 = load ptr, ptr @tag_TypeOf, align 8
  %6308 = call ptr @Builtins__structGet(ptr %997, ptr %6307)
  %6309 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6310 = call ptr @Builtins__structGet(ptr %997, ptr %6309)
  %6311 = load ptr, ptr @tag_Equals, align 8
  %6312 = call ptr @Builtins__structGet(ptr %997, ptr %6311)
  %6313 = load ptr, ptr @tag_TypeOf, align 8
  %6314 = call ptr @Builtins__structGet(ptr %997, ptr %6313)
  %6315 = load ptr, ptr @tag_IfElse, align 8
  %6316 = call ptr @Builtins__structGet(ptr %997, ptr %6315)
  %6317 = load ptr, ptr @tag_Equals, align 8
  %6318 = call ptr @Builtins__structGet(ptr %997, ptr %6317)
  %6319 = load ptr, ptr @tag_Equals, align 8
  %6320 = call ptr @Builtins__structGet(ptr %997, ptr %6319)
  %6321 = load ptr, ptr @tag_Equals, align 8
  %6322 = call ptr @Builtins__structGet(ptr %997, ptr %6321)
  %6323 = load ptr, ptr @tag_TypeOf, align 8
  %6324 = call ptr @Builtins__structGet(ptr %997, ptr %6323)
  %6325 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6326 = call ptr @Builtins__structGet(ptr %997, ptr %6325)
  %6327 = load ptr, ptr @tag_Equals, align 8
  %6328 = call ptr @Builtins__structGet(ptr %997, ptr %6327)
  %6329 = load ptr, ptr @tag_TypeOf, align 8
  %6330 = call ptr @Builtins__structGet(ptr %997, ptr %6329)
  %6331 = load ptr, ptr @tag_Equals, align 8
  %6332 = call ptr @Builtins__structGet(ptr %997, ptr %6331)
  %6333 = load ptr, ptr @tag_Equals, align 8
  %6334 = call ptr @Builtins__structGet(ptr %997, ptr %6333)
  %6335 = load ptr, ptr @tag_Equals, align 8
  %6336 = call ptr @Builtins__structGet(ptr %997, ptr %6335)
  %6337 = load ptr, ptr @tag_TypeOf, align 8
  %6338 = call ptr @Builtins__structGet(ptr %997, ptr %6337)
  %6339 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6340 = call ptr @Builtins__structGet(ptr %997, ptr %6339)
  %6341 = load ptr, ptr @tag_Equals, align 8
  %6342 = call ptr @Builtins__structGet(ptr %997, ptr %6341)
  %6343 = load ptr, ptr @tag_TypeOf, align 8
  %6344 = call ptr @Builtins__structGet(ptr %997, ptr %6343)
  %6345 = load ptr, ptr @tag_IfElse, align 8
  %6346 = call ptr @Builtins__structGet(ptr %997, ptr %6345)
  %6347 = load ptr, ptr @tag_Equals, align 8
  %6348 = call ptr @Builtins__structGet(ptr %997, ptr %6347)
  %6349 = load ptr, ptr @tag_Equals, align 8
  %6350 = call ptr @Builtins__structGet(ptr %997, ptr %6349)
  %6351 = load ptr, ptr @tag_TypeOf, align 8
  %6352 = call ptr @Builtins__structGet(ptr %997, ptr %6351)
  %6353 = load ptr, ptr @tag_IntAdd, align 8
  %6354 = call ptr @Builtins__structGet(ptr %997, ptr %6353)
  %6355 = load ptr, ptr @tag_IntSubtract, align 8
  %6356 = call ptr @Builtins__structGet(ptr %997, ptr %6355)
  %6357 = load ptr, ptr @tag_IntMultiply, align 8
  %6358 = call ptr @Builtins__structGet(ptr %997, ptr %6357)
  %6359 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %6360 = call ptr @Builtins__structGet(ptr %997, ptr %6359)
  %6361 = load ptr, ptr @tag_IntRemainder, align 8
  %6362 = call ptr @Builtins__structGet(ptr %997, ptr %6361)
  %6363 = load ptr, ptr @tag_IntModulo, align 8
  %6364 = call ptr @Builtins__structGet(ptr %997, ptr %6363)
  %6365 = load ptr, ptr @tag_IntShiftLeft, align 8
  %6366 = call ptr @Builtins__structGet(ptr %997, ptr %6365)
  %6367 = load ptr, ptr @tag_IntShiftRight, align 8
  %6368 = call ptr @Builtins__structGet(ptr %997, ptr %6367)
  %6369 = load ptr, ptr @tag_IntBitLength, align 8
  %6370 = call ptr @Builtins__structGet(ptr %997, ptr %6369)
  %6371 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %6372 = call ptr @Builtins__structGet(ptr %997, ptr %6371)
  %6373 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %6374 = call ptr @Builtins__structGet(ptr %997, ptr %6373)
  %6375 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %6376 = call ptr @Builtins__structGet(ptr %997, ptr %6375)
  %6377 = load ptr, ptr @tag_IntParse, align 8
  %6378 = call ptr @Builtins__structGet(ptr %997, ptr %6377)
  %6379 = load ptr, ptr @tag_Equals, align 8
  %6380 = call ptr @Builtins__structGet(ptr %997, ptr %6379)
  %6381 = load ptr, ptr @tag_Equals, align 8
  %6382 = call ptr @Builtins__structGet(ptr %997, ptr %6381)
  %6383 = load ptr, ptr @tag_Equals, align 8
  %6384 = call ptr @Builtins__structGet(ptr %997, ptr %6383)
  %6385 = load ptr, ptr @tag_TypeOf, align 8
  %6386 = call ptr @Builtins__structGet(ptr %997, ptr %6385)
  %6387 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6388 = call ptr @Builtins__structGet(ptr %997, ptr %6387)
  %6389 = load ptr, ptr @tag_Equals, align 8
  %6390 = call ptr @Builtins__structGet(ptr %997, ptr %6389)
  %6391 = load ptr, ptr @tag_TypeOf, align 8
  %6392 = call ptr @Builtins__structGet(ptr %997, ptr %6391)
  %6393 = load ptr, ptr @tag_Equals, align 8
  %6394 = call ptr @Builtins__structGet(ptr %997, ptr %6393)
  %6395 = load ptr, ptr @tag_Equals, align 8
  %6396 = call ptr @Builtins__structGet(ptr %997, ptr %6395)
  %6397 = load ptr, ptr @tag_Equals, align 8
  %6398 = call ptr @Builtins__structGet(ptr %997, ptr %6397)
  %6399 = load ptr, ptr @tag_TypeOf, align 8
  %6400 = call ptr @Builtins__structGet(ptr %997, ptr %6399)
  %6401 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6402 = call ptr @Builtins__structGet(ptr %997, ptr %6401)
  %6403 = load ptr, ptr @tag_Equals, align 8
  %6404 = call ptr @Builtins__structGet(ptr %997, ptr %6403)
  %6405 = load ptr, ptr @tag_TypeOf, align 8
  %6406 = call ptr @Builtins__structGet(ptr %997, ptr %6405)
  %6407 = load ptr, ptr @tag_Equals, align 8
  %6408 = call ptr @Builtins__structGet(ptr %997, ptr %6407)
  %6409 = load ptr, ptr @tag_Equals, align 8
  %6410 = call ptr @Builtins__structGet(ptr %997, ptr %6409)
  %6411 = load ptr, ptr @tag_Equals, align 8
  %6412 = call ptr @Builtins__structGet(ptr %997, ptr %6411)
  %6413 = load ptr, ptr @tag_TypeOf, align 8
  %6414 = call ptr @Builtins__structGet(ptr %997, ptr %6413)
  %6415 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6416 = call ptr @Builtins__structGet(ptr %997, ptr %6415)
  %6417 = load ptr, ptr @tag_Equals, align 8
  %6418 = call ptr @Builtins__structGet(ptr %997, ptr %6417)
  %6419 = load ptr, ptr @tag_TypeOf, align 8
  %6420 = call ptr @Builtins__structGet(ptr %997, ptr %6419)
  %6421 = load ptr, ptr @tag_IfElse, align 8
  %6422 = call ptr @Builtins__structGet(ptr %997, ptr %6421)
  %6423 = load ptr, ptr @tag_Equals, align 8
  %6424 = call ptr @Builtins__structGet(ptr %997, ptr %6423)
  %6425 = load ptr, ptr @tag_Equals, align 8
  %6426 = call ptr @Builtins__structGet(ptr %997, ptr %6425)
  %6427 = load ptr, ptr @tag_Equals, align 8
  %6428 = call ptr @Builtins__structGet(ptr %997, ptr %6427)
  %6429 = load ptr, ptr @tag_TypeOf, align 8
  %6430 = call ptr @Builtins__structGet(ptr %997, ptr %6429)
  %6431 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6432 = call ptr @Builtins__structGet(ptr %997, ptr %6431)
  %6433 = load ptr, ptr @tag_Equals, align 8
  %6434 = call ptr @Builtins__structGet(ptr %997, ptr %6433)
  %6435 = load ptr, ptr @tag_Equals, align 8
  %6436 = call ptr @Builtins__structGet(ptr %997, ptr %6435)
  %6437 = load ptr, ptr @tag_Equals, align 8
  %6438 = call ptr @Builtins__structGet(ptr %997, ptr %6437)
  %6439 = load ptr, ptr @tag_TypeOf, align 8
  %6440 = call ptr @Builtins__structGet(ptr %997, ptr %6439)
  %6441 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6442 = call ptr @Builtins__structGet(ptr %997, ptr %6441)
  %6443 = load ptr, ptr @tag_Equals, align 8
  %6444 = call ptr @Builtins__structGet(ptr %997, ptr %6443)
  %6445 = load ptr, ptr @tag_TypeOf, align 8
  %6446 = call ptr @Builtins__structGet(ptr %997, ptr %6445)
  %6447 = load ptr, ptr @tag_Equals, align 8
  %6448 = call ptr @Builtins__structGet(ptr %997, ptr %6447)
  %6449 = load ptr, ptr @tag_Equals, align 8
  %6450 = call ptr @Builtins__structGet(ptr %997, ptr %6449)
  %6451 = load ptr, ptr @tag_Equals, align 8
  %6452 = call ptr @Builtins__structGet(ptr %997, ptr %6451)
  %6453 = load ptr, ptr @tag_TypeOf, align 8
  %6454 = call ptr @Builtins__structGet(ptr %997, ptr %6453)
  %6455 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6456 = call ptr @Builtins__structGet(ptr %997, ptr %6455)
  %6457 = load ptr, ptr @tag_Equals, align 8
  %6458 = call ptr @Builtins__structGet(ptr %997, ptr %6457)
  %6459 = load ptr, ptr @tag_TypeOf, align 8
  %6460 = call ptr @Builtins__structGet(ptr %997, ptr %6459)
  %6461 = load ptr, ptr @tag_IfElse, align 8
  %6462 = call ptr @Builtins__structGet(ptr %997, ptr %6461)
  %6463 = load ptr, ptr @tag_Equals, align 8
  %6464 = call ptr @Builtins__structGet(ptr %997, ptr %6463)
  %6465 = load ptr, ptr @tag_TypeOf, align 8
  %6466 = call ptr @Builtins__structGet(ptr %997, ptr %6465)
  %6467 = load ptr, ptr @tag_Equals, align 8
  %6468 = call ptr @Builtins__structGet(ptr %997, ptr %6467)
  %6469 = load ptr, ptr @tag_Equals, align 8
  %6470 = call ptr @Builtins__structGet(ptr %997, ptr %6469)
  %6471 = load ptr, ptr @tag_Equals, align 8
  %6472 = call ptr @Builtins__structGet(ptr %997, ptr %6471)
  %6473 = load ptr, ptr @tag_TypeOf, align 8
  %6474 = call ptr @Builtins__structGet(ptr %997, ptr %6473)
  %6475 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6476 = call ptr @Builtins__structGet(ptr %997, ptr %6475)
  %6477 = load ptr, ptr @tag_Equals, align 8
  %6478 = call ptr @Builtins__structGet(ptr %997, ptr %6477)
  %6479 = load ptr, ptr @tag_TypeOf, align 8
  %6480 = call ptr @Builtins__structGet(ptr %997, ptr %6479)
  %6481 = load ptr, ptr @tag_Equals, align 8
  %6482 = call ptr @Builtins__structGet(ptr %997, ptr %6481)
  %6483 = load ptr, ptr @tag_Equals, align 8
  %6484 = call ptr @Builtins__structGet(ptr %997, ptr %6483)
  %6485 = load ptr, ptr @tag_Equals, align 8
  %6486 = call ptr @Builtins__structGet(ptr %997, ptr %6485)
  %6487 = load ptr, ptr @tag_TypeOf, align 8
  %6488 = call ptr @Builtins__structGet(ptr %997, ptr %6487)
  %6489 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6490 = call ptr @Builtins__structGet(ptr %997, ptr %6489)
  %6491 = load ptr, ptr @tag_Equals, align 8
  %6492 = call ptr @Builtins__structGet(ptr %997, ptr %6491)
  %6493 = load ptr, ptr @tag_TypeOf, align 8
  %6494 = call ptr @Builtins__structGet(ptr %997, ptr %6493)
  %6495 = load ptr, ptr @tag_Equals, align 8
  %6496 = call ptr @Builtins__structGet(ptr %997, ptr %6495)
  %6497 = load ptr, ptr @tag_Equals, align 8
  %6498 = call ptr @Builtins__structGet(ptr %997, ptr %6497)
  %6499 = load ptr, ptr @tag_Equals, align 8
  %6500 = call ptr @Builtins__structGet(ptr %997, ptr %6499)
  %6501 = load ptr, ptr @tag_TypeOf, align 8
  %6502 = call ptr @Builtins__structGet(ptr %997, ptr %6501)
  %6503 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6504 = call ptr @Builtins__structGet(ptr %997, ptr %6503)
  %6505 = load ptr, ptr @tag_Equals, align 8
  %6506 = call ptr @Builtins__structGet(ptr %997, ptr %6505)
  %6507 = load ptr, ptr @tag_TypeOf, align 8
  %6508 = call ptr @Builtins__structGet(ptr %997, ptr %6507)
  %6509 = load ptr, ptr @tag_IfElse, align 8
  %6510 = call ptr @Builtins__structGet(ptr %997, ptr %6509)
  %6511 = load ptr, ptr @tag_Equals, align 8
  %6512 = call ptr @Builtins__structGet(ptr %997, ptr %6511)
  %6513 = load ptr, ptr @tag_TypeOf, align 8
  %6514 = call ptr @Builtins__structGet(ptr %997, ptr %6513)
  %6515 = load ptr, ptr @tag_TagHasValue, align 8
  %6516 = call ptr @Builtins__structGet(ptr %997, ptr %6515)
  %6517 = load ptr, ptr @tag_TagWithoutValue, align 8
  %6518 = call ptr @Builtins__structGet(ptr %997, ptr %6517)
  %6519 = load ptr, ptr @tag_TagGetValue, align 8
  %6520 = call ptr @Builtins__structGet(ptr %997, ptr %6519)
  %6521 = load ptr, ptr @tag_Equals, align 8
  %6522 = call ptr @Builtins__structGet(ptr %997, ptr %6521)
  %6523 = load ptr, ptr @tag_TypeOf, align 8
  %6524 = call ptr @Builtins__structGet(ptr %997, ptr %6523)
  %6525 = load ptr, ptr @tag_Equals, align 8
  %6526 = call ptr @Builtins__structGet(ptr %997, ptr %6525)
  %6527 = load ptr, ptr @tag_TypeOf, align 8
  %6528 = call ptr @Builtins__structGet(ptr %997, ptr %6527)
  %6529 = load ptr, ptr @tag_ListLength, align 8
  %6530 = call ptr @Builtins__structGet(ptr %997, ptr %6529)
  %6531 = load ptr, ptr @tag_ListGet, align 8
  %6532 = call ptr @Builtins__structGet(ptr %997, ptr %6531)
  %6533 = load ptr, ptr @tag_ListInsert, align 8
  %6534 = call ptr @Builtins__structGet(ptr %997, ptr %6533)
  %6535 = load ptr, ptr @tag_ListReplace, align 8
  %6536 = call ptr @Builtins__structGet(ptr %997, ptr %6535)
  %6537 = load ptr, ptr @tag_ListRemoveAt, align 8
  %6538 = call ptr @Builtins__structGet(ptr %997, ptr %6537)
  %6539 = load ptr, ptr @tag_ListFilled, align 8
  %6540 = call ptr @Builtins__structGet(ptr %997, ptr %6539)
  %6541 = load ptr, ptr @tag_Equals, align 8
  %6542 = call ptr @Builtins__structGet(ptr %997, ptr %6541)
  %6543 = load ptr, ptr @tag_Equals, align 8
  %6544 = call ptr @Builtins__structGet(ptr %997, ptr %6543)
  %6545 = load ptr, ptr @tag_Equals, align 8
  %6546 = call ptr @Builtins__structGet(ptr %997, ptr %6545)
  %6547 = load ptr, ptr @tag_TypeOf, align 8
  %6548 = call ptr @Builtins__structGet(ptr %997, ptr %6547)
  %6549 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6550 = call ptr @Builtins__structGet(ptr %997, ptr %6549)
  %6551 = load ptr, ptr @tag_Equals, align 8
  %6552 = call ptr @Builtins__structGet(ptr %997, ptr %6551)
  %6553 = load ptr, ptr @tag_TypeOf, align 8
  %6554 = call ptr @Builtins__structGet(ptr %997, ptr %6553)
  %6555 = load ptr, ptr @tag_Equals, align 8
  %6556 = call ptr @Builtins__structGet(ptr %997, ptr %6555)
  %6557 = load ptr, ptr @tag_Equals, align 8
  %6558 = call ptr @Builtins__structGet(ptr %997, ptr %6557)
  %6559 = load ptr, ptr @tag_Equals, align 8
  %6560 = call ptr @Builtins__structGet(ptr %997, ptr %6559)
  %6561 = load ptr, ptr @tag_TypeOf, align 8
  %6562 = call ptr @Builtins__structGet(ptr %997, ptr %6561)
  %6563 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6564 = call ptr @Builtins__structGet(ptr %997, ptr %6563)
  %6565 = load ptr, ptr @tag_Equals, align 8
  %6566 = call ptr @Builtins__structGet(ptr %997, ptr %6565)
  %6567 = load ptr, ptr @tag_TypeOf, align 8
  %6568 = call ptr @Builtins__structGet(ptr %997, ptr %6567)
  %6569 = load ptr, ptr @tag_IfElse, align 8
  %6570 = call ptr @Builtins__structGet(ptr %997, ptr %6569)
  %6571 = load ptr, ptr @tag_Equals, align 8
  %6572 = call ptr @Builtins__structGet(ptr %997, ptr %6571)
  %6573 = load ptr, ptr @tag_TypeOf, align 8
  %6574 = call ptr @Builtins__structGet(ptr %997, ptr %6573)
  %6575 = load ptr, ptr @tag_Equals, align 8
  %6576 = call ptr @Builtins__structGet(ptr %997, ptr %6575)
  %6577 = load ptr, ptr @tag_TypeOf, align 8
  %6578 = call ptr @Builtins__structGet(ptr %997, ptr %6577)
  %6579 = load ptr, ptr @tag_TextFromUtf8, align 8
  %6580 = call ptr @Builtins__structGet(ptr %997, ptr %6579)
  %6581 = load ptr, ptr @tag_TextIsEmpty, align 8
  %6582 = call ptr @Builtins__structGet(ptr %997, ptr %6581)
  %6583 = load ptr, ptr @tag_TextLength, align 8
  %6584 = call ptr @Builtins__structGet(ptr %997, ptr %6583)
  %6585 = load ptr, ptr @tag_TextCharacters, align 8
  %6586 = call ptr @Builtins__structGet(ptr %997, ptr %6585)
  %6587 = load ptr, ptr @tag_TextGetRange, align 8
  %6588 = call ptr @Builtins__structGet(ptr %997, ptr %6587)
  %6589 = load ptr, ptr @tag_TextConcatenate, align 8
  %6590 = call ptr @Builtins__structGet(ptr %997, ptr %6589)
  %6591 = load ptr, ptr @tag_TextStartsWith, align 8
  %6592 = call ptr @Builtins__structGet(ptr %997, ptr %6591)
  %6593 = load ptr, ptr @tag_TextEndsWith, align 8
  %6594 = call ptr @Builtins__structGet(ptr %997, ptr %6593)
  %6595 = load ptr, ptr @tag_TextContains, align 8
  %6596 = call ptr @Builtins__structGet(ptr %997, ptr %6595)
  %6597 = load ptr, ptr @tag_TextTrimStart, align 8
  %6598 = call ptr @Builtins__structGet(ptr %997, ptr %6597)
  %6599 = load ptr, ptr @tag_TextTrimEnd, align 8
  %6600 = call ptr @Builtins__structGet(ptr %997, ptr %6599)
  %6601 = load ptr, ptr @tag_Equals, align 8
  %6602 = call ptr @Builtins__structGet(ptr %997, ptr %6601)
  %6603 = load ptr, ptr @tag_Equals, align 8
  %6604 = call ptr @Builtins__structGet(ptr %997, ptr %6603)
  %6605 = load ptr, ptr @tag_Equals, align 8
  %6606 = call ptr @Builtins__structGet(ptr %997, ptr %6605)
  %6607 = load ptr, ptr @tag_TypeOf, align 8
  %6608 = call ptr @Builtins__structGet(ptr %997, ptr %6607)
  %6609 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6610 = call ptr @Builtins__structGet(ptr %997, ptr %6609)
  %6611 = load ptr, ptr @tag_Equals, align 8
  %6612 = call ptr @Builtins__structGet(ptr %997, ptr %6611)
  %6613 = load ptr, ptr @tag_TypeOf, align 8
  %6614 = call ptr @Builtins__structGet(ptr %997, ptr %6613)
  %6615 = load ptr, ptr @tag_Equals, align 8
  %6616 = call ptr @Builtins__structGet(ptr %997, ptr %6615)
  %6617 = load ptr, ptr @tag_Equals, align 8
  %6618 = call ptr @Builtins__structGet(ptr %997, ptr %6617)
  %6619 = load ptr, ptr @tag_Equals, align 8
  %6620 = call ptr @Builtins__structGet(ptr %997, ptr %6619)
  %6621 = load ptr, ptr @tag_TypeOf, align 8
  %6622 = call ptr @Builtins__structGet(ptr %997, ptr %6621)
  %6623 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6624 = call ptr @Builtins__structGet(ptr %997, ptr %6623)
  %6625 = load ptr, ptr @tag_Equals, align 8
  %6626 = call ptr @Builtins__structGet(ptr %997, ptr %6625)
  %6627 = load ptr, ptr @tag_TypeOf, align 8
  %6628 = call ptr @Builtins__structGet(ptr %997, ptr %6627)
  %6629 = load ptr, ptr @tag_Equals, align 8
  %6630 = call ptr @Builtins__structGet(ptr %997, ptr %6629)
  %6631 = load ptr, ptr @tag_Equals, align 8
  %6632 = call ptr @Builtins__structGet(ptr %997, ptr %6631)
  %6633 = load ptr, ptr @tag_Equals, align 8
  %6634 = call ptr @Builtins__structGet(ptr %997, ptr %6633)
  %6635 = load ptr, ptr @tag_TypeOf, align 8
  %6636 = call ptr @Builtins__structGet(ptr %997, ptr %6635)
  %6637 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6638 = call ptr @Builtins__structGet(ptr %997, ptr %6637)
  %6639 = load ptr, ptr @tag_Equals, align 8
  %6640 = call ptr @Builtins__structGet(ptr %997, ptr %6639)
  %6641 = load ptr, ptr @tag_TypeOf, align 8
  %6642 = call ptr @Builtins__structGet(ptr %997, ptr %6641)
  %6643 = load ptr, ptr @tag_IfElse, align 8
  %6644 = call ptr @Builtins__structGet(ptr %997, ptr %6643)
  %6645 = load ptr, ptr @tag_Equals, align 8
  %6646 = call ptr @Builtins__structGet(ptr %997, ptr %6645)
  %6647 = load ptr, ptr @tag_Equals, align 8
  %6648 = call ptr @Builtins__structGet(ptr %997, ptr %6647)
  %6649 = load ptr, ptr @tag_Equals, align 8
  %6650 = call ptr @Builtins__structGet(ptr %997, ptr %6649)
  %6651 = load ptr, ptr @tag_Equals, align 8
  %6652 = call ptr @Builtins__structGet(ptr %997, ptr %6651)
  %6653 = load ptr, ptr @tag_TypeOf, align 8
  %6654 = call ptr @Builtins__structGet(ptr %997, ptr %6653)
  %6655 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6656 = call ptr @Builtins__structGet(ptr %997, ptr %6655)
  %6657 = load ptr, ptr @tag_Equals, align 8
  %6658 = call ptr @Builtins__structGet(ptr %997, ptr %6657)
  %6659 = load ptr, ptr @tag_TypeOf, align 8
  %6660 = call ptr @Builtins__structGet(ptr %997, ptr %6659)
  %6661 = load ptr, ptr @tag_Equals, align 8
  %6662 = call ptr @Builtins__structGet(ptr %997, ptr %6661)
  %6663 = load ptr, ptr @tag_Equals, align 8
  %6664 = call ptr @Builtins__structGet(ptr %997, ptr %6663)
  %6665 = load ptr, ptr @tag_Equals, align 8
  %6666 = call ptr @Builtins__structGet(ptr %997, ptr %6665)
  %6667 = load ptr, ptr @tag_TypeOf, align 8
  %6668 = call ptr @Builtins__structGet(ptr %997, ptr %6667)
  %6669 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6670 = call ptr @Builtins__structGet(ptr %997, ptr %6669)
  %6671 = load ptr, ptr @tag_Equals, align 8
  %6672 = call ptr @Builtins__structGet(ptr %997, ptr %6671)
  %6673 = load ptr, ptr @tag_TypeOf, align 8
  %6674 = call ptr @Builtins__structGet(ptr %997, ptr %6673)
  %6675 = load ptr, ptr @tag_Equals, align 8
  %6676 = call ptr @Builtins__structGet(ptr %997, ptr %6675)
  %6677 = load ptr, ptr @tag_Equals, align 8
  %6678 = call ptr @Builtins__structGet(ptr %997, ptr %6677)
  %6679 = load ptr, ptr @tag_Equals, align 8
  %6680 = call ptr @Builtins__structGet(ptr %997, ptr %6679)
  %6681 = load ptr, ptr @tag_TypeOf, align 8
  %6682 = call ptr @Builtins__structGet(ptr %997, ptr %6681)
  %6683 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6684 = call ptr @Builtins__structGet(ptr %997, ptr %6683)
  %6685 = load ptr, ptr @tag_Equals, align 8
  %6686 = call ptr @Builtins__structGet(ptr %997, ptr %6685)
  %6687 = load ptr, ptr @tag_TypeOf, align 8
  %6688 = call ptr @Builtins__structGet(ptr %997, ptr %6687)
  %6689 = load ptr, ptr @tag_Equals, align 8
  %6690 = call ptr @Builtins__structGet(ptr %997, ptr %6689)
  %6691 = load ptr, ptr @tag_Equals, align 8
  %6692 = call ptr @Builtins__structGet(ptr %997, ptr %6691)
  %6693 = load ptr, ptr @tag_Equals, align 8
  %6694 = call ptr @Builtins__structGet(ptr %997, ptr %6693)
  %6695 = load ptr, ptr @tag_TypeOf, align 8
  %6696 = call ptr @Builtins__structGet(ptr %997, ptr %6695)
  %6697 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6698 = call ptr @Builtins__structGet(ptr %997, ptr %6697)
  %6699 = load ptr, ptr @tag_Equals, align 8
  %6700 = call ptr @Builtins__structGet(ptr %997, ptr %6699)
  %6701 = load ptr, ptr @tag_TypeOf, align 8
  %6702 = call ptr @Builtins__structGet(ptr %997, ptr %6701)
  %6703 = load ptr, ptr @tag_IfElse, align 8
  %6704 = call ptr @Builtins__structGet(ptr %997, ptr %6703)
  %6705 = load ptr, ptr @tag_Equals, align 8
  %6706 = call ptr @Builtins__structGet(ptr %997, ptr %6705)
  %6707 = load ptr, ptr @tag_Equals, align 8
  %6708 = call ptr @Builtins__structGet(ptr %997, ptr %6707)
  %6709 = load ptr, ptr @tag_Equals, align 8
  %6710 = call ptr @Builtins__structGet(ptr %997, ptr %6709)
  %6711 = load ptr, ptr @tag_TypeOf, align 8
  %6712 = call ptr @Builtins__structGet(ptr %997, ptr %6711)
  %6713 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6714 = call ptr @Builtins__structGet(ptr %997, ptr %6713)
  %6715 = load ptr, ptr @tag_Equals, align 8
  %6716 = call ptr @Builtins__structGet(ptr %997, ptr %6715)
  %6717 = load ptr, ptr @tag_TypeOf, align 8
  %6718 = call ptr @Builtins__structGet(ptr %997, ptr %6717)
  %6719 = load ptr, ptr @tag_Equals, align 8
  %6720 = call ptr @Builtins__structGet(ptr %997, ptr %6719)
  %6721 = load ptr, ptr @tag_Equals, align 8
  %6722 = call ptr @Builtins__structGet(ptr %997, ptr %6721)
  %6723 = load ptr, ptr @tag_Equals, align 8
  %6724 = call ptr @Builtins__structGet(ptr %997, ptr %6723)
  %6725 = load ptr, ptr @tag_TypeOf, align 8
  %6726 = call ptr @Builtins__structGet(ptr %997, ptr %6725)
  %6727 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6728 = call ptr @Builtins__structGet(ptr %997, ptr %6727)
  %6729 = load ptr, ptr @tag_Equals, align 8
  %6730 = call ptr @Builtins__structGet(ptr %997, ptr %6729)
  %6731 = load ptr, ptr @tag_TypeOf, align 8
  %6732 = call ptr @Builtins__structGet(ptr %997, ptr %6731)
  %6733 = load ptr, ptr @tag_IfElse, align 8
  %6734 = call ptr @Builtins__structGet(ptr %997, ptr %6733)
  %6735 = load ptr, ptr @tag_Equals, align 8
  %6736 = call ptr @Builtins__structGet(ptr %997, ptr %6735)
  %6737 = load ptr, ptr @tag_Equals, align 8
  %6738 = call ptr @Builtins__structGet(ptr %997, ptr %6737)
  %6739 = load ptr, ptr @tag_TypeOf, align 8
  %6740 = call ptr @Builtins__structGet(ptr %997, ptr %6739)
  %6741 = load ptr, ptr @tag_IntAdd, align 8
  %6742 = call ptr @Builtins__structGet(ptr %997, ptr %6741)
  %6743 = load ptr, ptr @tag_IntSubtract, align 8
  %6744 = call ptr @Builtins__structGet(ptr %997, ptr %6743)
  %6745 = load ptr, ptr @tag_IntMultiply, align 8
  %6746 = call ptr @Builtins__structGet(ptr %997, ptr %6745)
  %6747 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %6748 = call ptr @Builtins__structGet(ptr %997, ptr %6747)
  %6749 = load ptr, ptr @tag_IntRemainder, align 8
  %6750 = call ptr @Builtins__structGet(ptr %997, ptr %6749)
  %6751 = load ptr, ptr @tag_IntModulo, align 8
  %6752 = call ptr @Builtins__structGet(ptr %997, ptr %6751)
  %6753 = load ptr, ptr @tag_IntShiftLeft, align 8
  %6754 = call ptr @Builtins__structGet(ptr %997, ptr %6753)
  %6755 = load ptr, ptr @tag_IntShiftRight, align 8
  %6756 = call ptr @Builtins__structGet(ptr %997, ptr %6755)
  %6757 = load ptr, ptr @tag_IntBitLength, align 8
  %6758 = call ptr @Builtins__structGet(ptr %997, ptr %6757)
  %6759 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %6760 = call ptr @Builtins__structGet(ptr %997, ptr %6759)
  %6761 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %6762 = call ptr @Builtins__structGet(ptr %997, ptr %6761)
  %6763 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %6764 = call ptr @Builtins__structGet(ptr %997, ptr %6763)
  %6765 = load ptr, ptr @tag_IntParse, align 8
  %6766 = call ptr @Builtins__structGet(ptr %997, ptr %6765)
  %6767 = load ptr, ptr @tag_Equals, align 8
  %6768 = call ptr @Builtins__structGet(ptr %997, ptr %6767)
  %6769 = load ptr, ptr @tag_Equals, align 8
  %6770 = call ptr @Builtins__structGet(ptr %997, ptr %6769)
  %6771 = load ptr, ptr @tag_Equals, align 8
  %6772 = call ptr @Builtins__structGet(ptr %997, ptr %6771)
  %6773 = load ptr, ptr @tag_TypeOf, align 8
  %6774 = call ptr @Builtins__structGet(ptr %997, ptr %6773)
  %6775 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6776 = call ptr @Builtins__structGet(ptr %997, ptr %6775)
  %6777 = load ptr, ptr @tag_Equals, align 8
  %6778 = call ptr @Builtins__structGet(ptr %997, ptr %6777)
  %6779 = load ptr, ptr @tag_TypeOf, align 8
  %6780 = call ptr @Builtins__structGet(ptr %997, ptr %6779)
  %6781 = load ptr, ptr @tag_Equals, align 8
  %6782 = call ptr @Builtins__structGet(ptr %997, ptr %6781)
  %6783 = load ptr, ptr @tag_Equals, align 8
  %6784 = call ptr @Builtins__structGet(ptr %997, ptr %6783)
  %6785 = load ptr, ptr @tag_Equals, align 8
  %6786 = call ptr @Builtins__structGet(ptr %997, ptr %6785)
  %6787 = load ptr, ptr @tag_TypeOf, align 8
  %6788 = call ptr @Builtins__structGet(ptr %997, ptr %6787)
  %6789 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6790 = call ptr @Builtins__structGet(ptr %997, ptr %6789)
  %6791 = load ptr, ptr @tag_Equals, align 8
  %6792 = call ptr @Builtins__structGet(ptr %997, ptr %6791)
  %6793 = load ptr, ptr @tag_TypeOf, align 8
  %6794 = call ptr @Builtins__structGet(ptr %997, ptr %6793)
  %6795 = load ptr, ptr @tag_Equals, align 8
  %6796 = call ptr @Builtins__structGet(ptr %997, ptr %6795)
  %6797 = load ptr, ptr @tag_Equals, align 8
  %6798 = call ptr @Builtins__structGet(ptr %997, ptr %6797)
  %6799 = load ptr, ptr @tag_Equals, align 8
  %6800 = call ptr @Builtins__structGet(ptr %997, ptr %6799)
  %6801 = load ptr, ptr @tag_TypeOf, align 8
  %6802 = call ptr @Builtins__structGet(ptr %997, ptr %6801)
  %6803 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6804 = call ptr @Builtins__structGet(ptr %997, ptr %6803)
  %6805 = load ptr, ptr @tag_Equals, align 8
  %6806 = call ptr @Builtins__structGet(ptr %997, ptr %6805)
  %6807 = load ptr, ptr @tag_TypeOf, align 8
  %6808 = call ptr @Builtins__structGet(ptr %997, ptr %6807)
  %6809 = load ptr, ptr @tag_IfElse, align 8
  %6810 = call ptr @Builtins__structGet(ptr %997, ptr %6809)
  %6811 = load ptr, ptr @tag_Equals, align 8
  %6812 = call ptr @Builtins__structGet(ptr %997, ptr %6811)
  %6813 = load ptr, ptr @tag_Equals, align 8
  %6814 = call ptr @Builtins__structGet(ptr %997, ptr %6813)
  %6815 = load ptr, ptr @tag_Equals, align 8
  %6816 = call ptr @Builtins__structGet(ptr %997, ptr %6815)
  %6817 = load ptr, ptr @tag_TypeOf, align 8
  %6818 = call ptr @Builtins__structGet(ptr %997, ptr %6817)
  %6819 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6820 = call ptr @Builtins__structGet(ptr %997, ptr %6819)
  %6821 = load ptr, ptr @tag_Equals, align 8
  %6822 = call ptr @Builtins__structGet(ptr %997, ptr %6821)
  %6823 = load ptr, ptr @tag_Equals, align 8
  %6824 = call ptr @Builtins__structGet(ptr %997, ptr %6823)
  %6825 = load ptr, ptr @tag_Equals, align 8
  %6826 = call ptr @Builtins__structGet(ptr %997, ptr %6825)
  %6827 = load ptr, ptr @tag_TypeOf, align 8
  %6828 = call ptr @Builtins__structGet(ptr %997, ptr %6827)
  %6829 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6830 = call ptr @Builtins__structGet(ptr %997, ptr %6829)
  %6831 = load ptr, ptr @tag_Equals, align 8
  %6832 = call ptr @Builtins__structGet(ptr %997, ptr %6831)
  %6833 = load ptr, ptr @tag_TypeOf, align 8
  %6834 = call ptr @Builtins__structGet(ptr %997, ptr %6833)
  %6835 = load ptr, ptr @tag_Equals, align 8
  %6836 = call ptr @Builtins__structGet(ptr %997, ptr %6835)
  %6837 = load ptr, ptr @tag_Equals, align 8
  %6838 = call ptr @Builtins__structGet(ptr %997, ptr %6837)
  %6839 = load ptr, ptr @tag_Equals, align 8
  %6840 = call ptr @Builtins__structGet(ptr %997, ptr %6839)
  %6841 = load ptr, ptr @tag_TypeOf, align 8
  %6842 = call ptr @Builtins__structGet(ptr %997, ptr %6841)
  %6843 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6844 = call ptr @Builtins__structGet(ptr %997, ptr %6843)
  %6845 = load ptr, ptr @tag_Equals, align 8
  %6846 = call ptr @Builtins__structGet(ptr %997, ptr %6845)
  %6847 = load ptr, ptr @tag_TypeOf, align 8
  %6848 = call ptr @Builtins__structGet(ptr %997, ptr %6847)
  %6849 = load ptr, ptr @tag_Equals, align 8
  %6850 = call ptr @Builtins__structGet(ptr %997, ptr %6849)
  %6851 = load ptr, ptr @tag_Equals, align 8
  %6852 = call ptr @Builtins__structGet(ptr %997, ptr %6851)
  %6853 = load ptr, ptr @tag_Equals, align 8
  %6854 = call ptr @Builtins__structGet(ptr %997, ptr %6853)
  %6855 = load ptr, ptr @tag_TypeOf, align 8
  %6856 = call ptr @Builtins__structGet(ptr %997, ptr %6855)
  %6857 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6858 = call ptr @Builtins__structGet(ptr %997, ptr %6857)
  %6859 = load ptr, ptr @tag_Equals, align 8
  %6860 = call ptr @Builtins__structGet(ptr %997, ptr %6859)
  %6861 = load ptr, ptr @tag_TypeOf, align 8
  %6862 = call ptr @Builtins__structGet(ptr %997, ptr %6861)
  %6863 = load ptr, ptr @tag_Equals, align 8
  %6864 = call ptr @Builtins__structGet(ptr %997, ptr %6863)
  %6865 = load ptr, ptr @tag_Equals, align 8
  %6866 = call ptr @Builtins__structGet(ptr %997, ptr %6865)
  %6867 = load ptr, ptr @tag_Equals, align 8
  %6868 = call ptr @Builtins__structGet(ptr %997, ptr %6867)
  %6869 = load ptr, ptr @tag_TypeOf, align 8
  %6870 = call ptr @Builtins__structGet(ptr %997, ptr %6869)
  %6871 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6872 = call ptr @Builtins__structGet(ptr %997, ptr %6871)
  %6873 = load ptr, ptr @tag_Equals, align 8
  %6874 = call ptr @Builtins__structGet(ptr %997, ptr %6873)
  %6875 = load ptr, ptr @tag_TypeOf, align 8
  %6876 = call ptr @Builtins__structGet(ptr %997, ptr %6875)
  %6877 = load ptr, ptr @tag_IfElse, align 8
  %6878 = call ptr @Builtins__structGet(ptr %997, ptr %6877)
  %6879 = load ptr, ptr @tag_Equals, align 8
  %6880 = call ptr @Builtins__structGet(ptr %997, ptr %6879)
  %6881 = load ptr, ptr @tag_Equals, align 8
  %6882 = call ptr @Builtins__structGet(ptr %997, ptr %6881)
  %6883 = load ptr, ptr @tag_Equals, align 8
  %6884 = call ptr @Builtins__structGet(ptr %997, ptr %6883)
  %6885 = load ptr, ptr @tag_TypeOf, align 8
  %6886 = call ptr @Builtins__structGet(ptr %997, ptr %6885)
  %6887 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6888 = call ptr @Builtins__structGet(ptr %997, ptr %6887)
  %6889 = load ptr, ptr @tag_Equals, align 8
  %6890 = call ptr @Builtins__structGet(ptr %997, ptr %6889)
  %6891 = load ptr, ptr @tag_TypeOf, align 8
  %6892 = call ptr @Builtins__structGet(ptr %997, ptr %6891)
  %6893 = load ptr, ptr @tag_Equals, align 8
  %6894 = call ptr @Builtins__structGet(ptr %997, ptr %6893)
  %6895 = load ptr, ptr @tag_Equals, align 8
  %6896 = call ptr @Builtins__structGet(ptr %997, ptr %6895)
  %6897 = load ptr, ptr @tag_Equals, align 8
  %6898 = call ptr @Builtins__structGet(ptr %997, ptr %6897)
  %6899 = load ptr, ptr @tag_TypeOf, align 8
  %6900 = call ptr @Builtins__structGet(ptr %997, ptr %6899)
  %6901 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6902 = call ptr @Builtins__structGet(ptr %997, ptr %6901)
  %6903 = load ptr, ptr @tag_Equals, align 8
  %6904 = call ptr @Builtins__structGet(ptr %997, ptr %6903)
  %6905 = load ptr, ptr @tag_TypeOf, align 8
  %6906 = call ptr @Builtins__structGet(ptr %997, ptr %6905)
  %6907 = load ptr, ptr @tag_IfElse, align 8
  %6908 = call ptr @Builtins__structGet(ptr %997, ptr %6907)
  %6909 = load ptr, ptr @tag_Equals, align 8
  %6910 = call ptr @Builtins__structGet(ptr %997, ptr %6909)
  %6911 = load ptr, ptr @tag_Equals, align 8
  %6912 = call ptr @Builtins__structGet(ptr %997, ptr %6911)
  %6913 = load ptr, ptr @tag_TypeOf, align 8
  %6914 = call ptr @Builtins__structGet(ptr %997, ptr %6913)
  %6915 = load ptr, ptr @tag_IntAdd, align 8
  %6916 = call ptr @Builtins__structGet(ptr %997, ptr %6915)
  %6917 = load ptr, ptr @tag_IntSubtract, align 8
  %6918 = call ptr @Builtins__structGet(ptr %997, ptr %6917)
  %6919 = load ptr, ptr @tag_IntMultiply, align 8
  %6920 = call ptr @Builtins__structGet(ptr %997, ptr %6919)
  %6921 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %6922 = call ptr @Builtins__structGet(ptr %997, ptr %6921)
  %6923 = load ptr, ptr @tag_IntRemainder, align 8
  %6924 = call ptr @Builtins__structGet(ptr %997, ptr %6923)
  %6925 = load ptr, ptr @tag_IntModulo, align 8
  %6926 = call ptr @Builtins__structGet(ptr %997, ptr %6925)
  %6927 = load ptr, ptr @tag_IntShiftLeft, align 8
  %6928 = call ptr @Builtins__structGet(ptr %997, ptr %6927)
  %6929 = load ptr, ptr @tag_IntShiftRight, align 8
  %6930 = call ptr @Builtins__structGet(ptr %997, ptr %6929)
  %6931 = load ptr, ptr @tag_IntBitLength, align 8
  %6932 = call ptr @Builtins__structGet(ptr %997, ptr %6931)
  %6933 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %6934 = call ptr @Builtins__structGet(ptr %997, ptr %6933)
  %6935 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %6936 = call ptr @Builtins__structGet(ptr %997, ptr %6935)
  %6937 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %6938 = call ptr @Builtins__structGet(ptr %997, ptr %6937)
  %6939 = load ptr, ptr @tag_IntParse, align 8
  %6940 = call ptr @Builtins__structGet(ptr %997, ptr %6939)
  %6941 = load ptr, ptr @tag_Equals, align 8
  %6942 = call ptr @Builtins__structGet(ptr %997, ptr %6941)
  %6943 = load ptr, ptr @tag_Equals, align 8
  %6944 = call ptr @Builtins__structGet(ptr %997, ptr %6943)
  %6945 = load ptr, ptr @tag_Equals, align 8
  %6946 = call ptr @Builtins__structGet(ptr %997, ptr %6945)
  %6947 = load ptr, ptr @tag_TypeOf, align 8
  %6948 = call ptr @Builtins__structGet(ptr %997, ptr %6947)
  %6949 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6950 = call ptr @Builtins__structGet(ptr %997, ptr %6949)
  %6951 = load ptr, ptr @tag_Equals, align 8
  %6952 = call ptr @Builtins__structGet(ptr %997, ptr %6951)
  %6953 = load ptr, ptr @tag_TypeOf, align 8
  %6954 = call ptr @Builtins__structGet(ptr %997, ptr %6953)
  %6955 = load ptr, ptr @tag_Equals, align 8
  %6956 = call ptr @Builtins__structGet(ptr %997, ptr %6955)
  %6957 = load ptr, ptr @tag_Equals, align 8
  %6958 = call ptr @Builtins__structGet(ptr %997, ptr %6957)
  %6959 = load ptr, ptr @tag_Equals, align 8
  %6960 = call ptr @Builtins__structGet(ptr %997, ptr %6959)
  %6961 = load ptr, ptr @tag_TypeOf, align 8
  %6962 = call ptr @Builtins__structGet(ptr %997, ptr %6961)
  %6963 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6964 = call ptr @Builtins__structGet(ptr %997, ptr %6963)
  %6965 = load ptr, ptr @tag_Equals, align 8
  %6966 = call ptr @Builtins__structGet(ptr %997, ptr %6965)
  %6967 = load ptr, ptr @tag_TypeOf, align 8
  %6968 = call ptr @Builtins__structGet(ptr %997, ptr %6967)
  %6969 = load ptr, ptr @tag_Equals, align 8
  %6970 = call ptr @Builtins__structGet(ptr %997, ptr %6969)
  %6971 = load ptr, ptr @tag_Equals, align 8
  %6972 = call ptr @Builtins__structGet(ptr %997, ptr %6971)
  %6973 = load ptr, ptr @tag_Equals, align 8
  %6974 = call ptr @Builtins__structGet(ptr %997, ptr %6973)
  %6975 = load ptr, ptr @tag_TypeOf, align 8
  %6976 = call ptr @Builtins__structGet(ptr %997, ptr %6975)
  %6977 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6978 = call ptr @Builtins__structGet(ptr %997, ptr %6977)
  %6979 = load ptr, ptr @tag_Equals, align 8
  %6980 = call ptr @Builtins__structGet(ptr %997, ptr %6979)
  %6981 = load ptr, ptr @tag_TypeOf, align 8
  %6982 = call ptr @Builtins__structGet(ptr %997, ptr %6981)
  %6983 = load ptr, ptr @tag_IfElse, align 8
  %6984 = call ptr @Builtins__structGet(ptr %997, ptr %6983)
  %6985 = load ptr, ptr @tag_Equals, align 8
  %6986 = call ptr @Builtins__structGet(ptr %997, ptr %6985)
  %6987 = load ptr, ptr @tag_Equals, align 8
  %6988 = call ptr @Builtins__structGet(ptr %997, ptr %6987)
  %6989 = load ptr, ptr @tag_Equals, align 8
  %6990 = call ptr @Builtins__structGet(ptr %997, ptr %6989)
  %6991 = load ptr, ptr @tag_TypeOf, align 8
  %6992 = call ptr @Builtins__structGet(ptr %997, ptr %6991)
  %6993 = load ptr, ptr @tag_GetArgumentCount, align 8
  %6994 = call ptr @Builtins__structGet(ptr %997, ptr %6993)
  %6995 = load ptr, ptr @tag_Equals, align 8
  %6996 = call ptr @Builtins__structGet(ptr %997, ptr %6995)
  %6997 = load ptr, ptr @tag_Equals, align 8
  %6998 = call ptr @Builtins__structGet(ptr %997, ptr %6997)
  %6999 = load ptr, ptr @tag_Equals, align 8
  %7000 = call ptr @Builtins__structGet(ptr %997, ptr %6999)
  %7001 = load ptr, ptr @tag_TypeOf, align 8
  %7002 = call ptr @Builtins__structGet(ptr %997, ptr %7001)
  %7003 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7004 = call ptr @Builtins__structGet(ptr %997, ptr %7003)
  %7005 = load ptr, ptr @tag_Equals, align 8
  %7006 = call ptr @Builtins__structGet(ptr %997, ptr %7005)
  %7007 = load ptr, ptr @tag_TypeOf, align 8
  %7008 = call ptr @Builtins__structGet(ptr %997, ptr %7007)
  %7009 = load ptr, ptr @tag_Equals, align 8
  %7010 = call ptr @Builtins__structGet(ptr %997, ptr %7009)
  %7011 = load ptr, ptr @tag_Equals, align 8
  %7012 = call ptr @Builtins__structGet(ptr %997, ptr %7011)
  %7013 = load ptr, ptr @tag_Equals, align 8
  %7014 = call ptr @Builtins__structGet(ptr %997, ptr %7013)
  %7015 = load ptr, ptr @tag_TypeOf, align 8
  %7016 = call ptr @Builtins__structGet(ptr %997, ptr %7015)
  %7017 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7018 = call ptr @Builtins__structGet(ptr %997, ptr %7017)
  %7019 = load ptr, ptr @tag_Equals, align 8
  %7020 = call ptr @Builtins__structGet(ptr %997, ptr %7019)
  %7021 = load ptr, ptr @tag_TypeOf, align 8
  %7022 = call ptr @Builtins__structGet(ptr %997, ptr %7021)
  %7023 = load ptr, ptr @tag_IfElse, align 8
  %7024 = call ptr @Builtins__structGet(ptr %997, ptr %7023)
  %7025 = load ptr, ptr @tag_Equals, align 8
  %7026 = call ptr @Builtins__structGet(ptr %997, ptr %7025)
  %7027 = load ptr, ptr @tag_TypeOf, align 8
  %7028 = call ptr @Builtins__structGet(ptr %997, ptr %7027)
  %7029 = load ptr, ptr @tag_Equals, align 8
  %7030 = call ptr @Builtins__structGet(ptr %997, ptr %7029)
  %7031 = load ptr, ptr @tag_Equals, align 8
  %7032 = call ptr @Builtins__structGet(ptr %997, ptr %7031)
  %7033 = load ptr, ptr @tag_Equals, align 8
  %7034 = call ptr @Builtins__structGet(ptr %997, ptr %7033)
  %7035 = load ptr, ptr @tag_TypeOf, align 8
  %7036 = call ptr @Builtins__structGet(ptr %997, ptr %7035)
  %7037 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7038 = call ptr @Builtins__structGet(ptr %997, ptr %7037)
  %7039 = load ptr, ptr @tag_Equals, align 8
  %7040 = call ptr @Builtins__structGet(ptr %997, ptr %7039)
  %7041 = load ptr, ptr @tag_TypeOf, align 8
  %7042 = call ptr @Builtins__structGet(ptr %997, ptr %7041)
  %7043 = load ptr, ptr @tag_Equals, align 8
  %7044 = call ptr @Builtins__structGet(ptr %997, ptr %7043)
  %7045 = load ptr, ptr @tag_Equals, align 8
  %7046 = call ptr @Builtins__structGet(ptr %997, ptr %7045)
  %7047 = load ptr, ptr @tag_Equals, align 8
  %7048 = call ptr @Builtins__structGet(ptr %997, ptr %7047)
  %7049 = load ptr, ptr @tag_TypeOf, align 8
  %7050 = call ptr @Builtins__structGet(ptr %997, ptr %7049)
  %7051 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7052 = call ptr @Builtins__structGet(ptr %997, ptr %7051)
  %7053 = load ptr, ptr @tag_Equals, align 8
  %7054 = call ptr @Builtins__structGet(ptr %997, ptr %7053)
  %7055 = load ptr, ptr @tag_TypeOf, align 8
  %7056 = call ptr @Builtins__structGet(ptr %997, ptr %7055)
  %7057 = load ptr, ptr @tag_Equals, align 8
  %7058 = call ptr @Builtins__structGet(ptr %997, ptr %7057)
  %7059 = load ptr, ptr @tag_Equals, align 8
  %7060 = call ptr @Builtins__structGet(ptr %997, ptr %7059)
  %7061 = load ptr, ptr @tag_Equals, align 8
  %7062 = call ptr @Builtins__structGet(ptr %997, ptr %7061)
  %7063 = load ptr, ptr @tag_TypeOf, align 8
  %7064 = call ptr @Builtins__structGet(ptr %997, ptr %7063)
  %7065 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7066 = call ptr @Builtins__structGet(ptr %997, ptr %7065)
  %7067 = load ptr, ptr @tag_Equals, align 8
  %7068 = call ptr @Builtins__structGet(ptr %997, ptr %7067)
  %7069 = load ptr, ptr @tag_TypeOf, align 8
  %7070 = call ptr @Builtins__structGet(ptr %997, ptr %7069)
  %7071 = load ptr, ptr @tag_IfElse, align 8
  %7072 = call ptr @Builtins__structGet(ptr %997, ptr %7071)
  %7073 = load ptr, ptr @tag_Equals, align 8
  %7074 = call ptr @Builtins__structGet(ptr %997, ptr %7073)
  %7075 = load ptr, ptr @tag_TypeOf, align 8
  %7076 = call ptr @Builtins__structGet(ptr %997, ptr %7075)
  %7077 = load ptr, ptr @tag_TagHasValue, align 8
  %7078 = call ptr @Builtins__structGet(ptr %997, ptr %7077)
  %7079 = load ptr, ptr @tag_TagWithoutValue, align 8
  %7080 = call ptr @Builtins__structGet(ptr %997, ptr %7079)
  %7081 = load ptr, ptr @tag_TagGetValue, align 8
  %7082 = call ptr @Builtins__structGet(ptr %997, ptr %7081)
  %7083 = load ptr, ptr @tag_Equals, align 8
  %7084 = call ptr @Builtins__structGet(ptr %997, ptr %7083)
  %7085 = load ptr, ptr @tag_TypeOf, align 8
  %7086 = call ptr @Builtins__structGet(ptr %997, ptr %7085)
  %7087 = load ptr, ptr @tag_Equals, align 8
  %7088 = call ptr @Builtins__structGet(ptr %997, ptr %7087)
  %7089 = load ptr, ptr @tag_TypeOf, align 8
  %7090 = call ptr @Builtins__structGet(ptr %997, ptr %7089)
  %7091 = load ptr, ptr @tag_ListLength, align 8
  %7092 = call ptr @Builtins__structGet(ptr %997, ptr %7091)
  %7093 = load ptr, ptr @tag_ListGet, align 8
  %7094 = call ptr @Builtins__structGet(ptr %997, ptr %7093)
  %7095 = load ptr, ptr @tag_ListInsert, align 8
  %7096 = call ptr @Builtins__structGet(ptr %997, ptr %7095)
  %7097 = load ptr, ptr @tag_ListReplace, align 8
  %7098 = call ptr @Builtins__structGet(ptr %997, ptr %7097)
  %7099 = load ptr, ptr @tag_ListRemoveAt, align 8
  %7100 = call ptr @Builtins__structGet(ptr %997, ptr %7099)
  %7101 = load ptr, ptr @tag_ListFilled, align 8
  %7102 = call ptr @Builtins__structGet(ptr %997, ptr %7101)
  %7103 = load ptr, ptr @tag_Equals, align 8
  %7104 = call ptr @Builtins__structGet(ptr %997, ptr %7103)
  %7105 = load ptr, ptr @tag_Equals, align 8
  %7106 = call ptr @Builtins__structGet(ptr %997, ptr %7105)
  %7107 = load ptr, ptr @tag_Equals, align 8
  %7108 = call ptr @Builtins__structGet(ptr %997, ptr %7107)
  %7109 = load ptr, ptr @tag_TypeOf, align 8
  %7110 = call ptr @Builtins__structGet(ptr %997, ptr %7109)
  %7111 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7112 = call ptr @Builtins__structGet(ptr %997, ptr %7111)
  %7113 = load ptr, ptr @tag_Equals, align 8
  %7114 = call ptr @Builtins__structGet(ptr %997, ptr %7113)
  %7115 = load ptr, ptr @tag_TypeOf, align 8
  %7116 = call ptr @Builtins__structGet(ptr %997, ptr %7115)
  %7117 = load ptr, ptr @tag_Equals, align 8
  %7118 = call ptr @Builtins__structGet(ptr %997, ptr %7117)
  %7119 = load ptr, ptr @tag_Equals, align 8
  %7120 = call ptr @Builtins__structGet(ptr %997, ptr %7119)
  %7121 = load ptr, ptr @tag_Equals, align 8
  %7122 = call ptr @Builtins__structGet(ptr %997, ptr %7121)
  %7123 = load ptr, ptr @tag_TypeOf, align 8
  %7124 = call ptr @Builtins__structGet(ptr %997, ptr %7123)
  %7125 = load ptr, ptr @tag_GetArgumentCount, align 8
  %7126 = call ptr @Builtins__structGet(ptr %997, ptr %7125)
  %7127 = load ptr, ptr @tag_Equals, align 8
  %7128 = call ptr @Builtins__structGet(ptr %997, ptr %7127)
  %7129 = load ptr, ptr @tag_TypeOf, align 8
  %7130 = call ptr @Builtins__structGet(ptr %997, ptr %7129)
  %7131 = load ptr, ptr @tag_IfElse, align 8
  %7132 = call ptr @Builtins__structGet(ptr %997, ptr %7131)
  %7133 = load ptr, ptr @tag_Equals, align 8
  %7134 = call ptr @Builtins__structGet(ptr %997, ptr %7133)
  %7135 = load ptr, ptr @tag_TypeOf, align 8
  %7136 = call ptr @Builtins__structGet(ptr %997, ptr %7135)
  %7137 = load ptr, ptr @tag_Equals, align 8
  %7138 = call ptr @Builtins__structGet(ptr %997, ptr %7137)
  %7139 = load ptr, ptr @tag_TypeOf, align 8
  %7140 = call ptr @Builtins__structGet(ptr %997, ptr %7139)
  %7141 = load ptr, ptr @tag_TextFromUtf8, align 8
  %7142 = call ptr @Builtins__structGet(ptr %997, ptr %7141)
  %7143 = load ptr, ptr @tag_TextIsEmpty, align 8
  %7144 = call ptr @Builtins__structGet(ptr %997, ptr %7143)
  %7145 = load ptr, ptr @tag_TextLength, align 8
  %7146 = call ptr @Builtins__structGet(ptr %997, ptr %7145)
  %7147 = load ptr, ptr @tag_TextCharacters, align 8
  %7148 = call ptr @Builtins__structGet(ptr %997, ptr %7147)
  %7149 = load ptr, ptr @tag_TextGetRange, align 8
  %7150 = call ptr @Builtins__structGet(ptr %997, ptr %7149)
  %7151 = load ptr, ptr @tag_TextConcatenate, align 8
  %7152 = call ptr @Builtins__structGet(ptr %997, ptr %7151)
  %7153 = load ptr, ptr @tag_TextStartsWith, align 8
  %7154 = call ptr @Builtins__structGet(ptr %997, ptr %7153)
  %7155 = load ptr, ptr @tag_TextEndsWith, align 8
  %7156 = call ptr @Builtins__structGet(ptr %997, ptr %7155)
  %7157 = load ptr, ptr @tag_TextContains, align 8
  %7158 = call ptr @Builtins__structGet(ptr %997, ptr %7157)
  %7159 = load ptr, ptr @tag_TextTrimStart, align 8
  %7160 = call ptr @Builtins__structGet(ptr %997, ptr %7159)
  %7161 = load ptr, ptr @tag_TextTrimEnd, align 8
  %7162 = call ptr @Builtins__structGet(ptr %997, ptr %7161)
  %7163 = load ptr, ptr @tag_Equals, align 8
  %7164 = call ptr @Builtins__structGet(ptr %997, ptr %7163)
  %7165 = load ptr, ptr @tag_TypeOf, align 8
  %7166 = call ptr @Builtins__structGet(ptr %997, ptr %7165)
  %7167 = alloca i8, i64 35, align 1
  store [35 x i8] c"Examples:fibonacci:recursive:0:0:3\00", ptr %7167, align 1
  %7168 = call ptr @make_candy_text(ptr %7167)
  store ptr %7168, ptr @"Examples:fibonacci:recursive:0:0:3", align 8
  %7169 = alloca i8, i64 33, align 1
  store [33 x i8] c"Examples:fibonacci:recursive:0:5\00", ptr %7169, align 1
  %7170 = call ptr @make_candy_text(ptr %7169)
  store ptr %7170, ptr @"Examples:fibonacci:recursive:0:5", align 8
  %7171 = alloca i8, i64 31, align 1
  store [31 x i8] c"Examples:fibonacci:recursive:5\00", ptr %7171, align 1
  %7172 = call ptr @make_candy_text(ptr %7171)
  store ptr %7172, ptr @"Examples:fibonacci:recursive:5", align 8
  %7173 = alloca i8, i64 31, align 1
  store [31 x i8] c"Examples:fibonacci:compareTo:8\00", ptr %7173, align 1
  %7174 = call ptr @make_candy_text(ptr %7173)
  store ptr %7174, ptr @"Examples:fibonacci:compareTo:8", align 8
  %7175 = alloca i8, i64 32, align 1
  store [32 x i8] c"Examples:fibonacci:compareTo:10\00", ptr %7175, align 1
  %7176 = call ptr @make_candy_text(ptr %7175)
  store ptr %7176, ptr @"Examples:fibonacci:compareTo:10", align 8
  %7177 = alloca i8, i64 32, align 1
  store [32 x i8] c"Examples:fibonacci:isLessThan:7\00", ptr %7177, align 1
  %7178 = call ptr @make_candy_text(ptr %7177)
  store ptr %7178, ptr @"Examples:fibonacci:isLessThan:7", align 8
  %7179 = alloca i8, i64 33, align 1
  store [33 x i8] c"Examples:fibonacci:isLessThan:13\00", ptr %7179, align 1
  %7180 = call ptr @make_candy_text(ptr %7179)
  store ptr %7180, ptr @"Examples:fibonacci:isLessThan:13", align 8
  %7181 = alloca i8, i64 33, align 1
  store [33 x i8] c"Examples:fibonacci:fibonacci:2:7\00", ptr %7181, align 1
  %7182 = call ptr @make_candy_text(ptr %7181)
  store ptr %7182, ptr @"Examples:fibonacci:fibonacci:2:7", align 8
  %7183 = alloca i8, i64 36, align 1
  store [36 x i8] c"Examples:fibonacci:fibonacci:2:13:9\00", ptr %7183, align 1
  %7184 = call ptr @make_candy_text(ptr %7183)
  store ptr %7184, ptr @"Examples:fibonacci:fibonacci:2:13:9", align 8
  %7185 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:11\00", ptr %7185, align 1
  %7186 = call ptr @make_candy_text(ptr %7185)
  store ptr %7186, ptr @"Examples:fibonacci:fibonacci:2:13:11", align 8
  %7187 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:12\00", ptr %7187, align 1
  %7188 = call ptr @make_candy_text(ptr %7187)
  store ptr %7188, ptr @"Examples:fibonacci:fibonacci:2:13:12", align 8
  %7189 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:20\00", ptr %7189, align 1
  %7190 = call ptr @make_candy_text(ptr %7189)
  store ptr %7190, ptr @"Examples:fibonacci:fibonacci:2:13:20", align 8
  %7191 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:30\00", ptr %7191, align 1
  %7192 = call ptr @make_candy_text(ptr %7191)
  store ptr %7192, ptr @"Examples:fibonacci:fibonacci:2:13:30", align 8
  %7193 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:32\00", ptr %7193, align 1
  %7194 = call ptr @make_candy_text(ptr %7193)
  store ptr %7194, ptr @"Examples:fibonacci:fibonacci:2:13:32", align 8
  %7195 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:33\00", ptr %7195, align 1
  %7196 = call ptr @make_candy_text(ptr %7195)
  store ptr %7196, ptr @"Examples:fibonacci:fibonacci:2:13:33", align 8
  %7197 = alloca i8, i64 37, align 1
  store [37 x i8] c"Examples:fibonacci:fibonacci:2:13:34\00", ptr %7197, align 1
  %7198 = call ptr @make_candy_text(ptr %7197)
  store ptr %7198, ptr @"Examples:fibonacci:fibonacci:2:13:34", align 8
  %7199 = alloca i8, i64 34, align 1
  store [34 x i8] c"Examples:fibonacci:fibonacci:2:14\00", ptr %7199, align 1
  %7200 = call ptr @make_candy_text(ptr %7199)
  store ptr %7200, ptr @"Examples:fibonacci:fibonacci:2:14", align 8
  %7201 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7202 = getelementptr inbounds { ptr }, ptr %7201, i32 0, i32 0
  store ptr %997, ptr %7202, align 8
  %7203 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2, ptr %7201, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7203, ptr @fun_Examples_fibonacci_fibonacci_2, align 8
  %7204 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %7205 = call ptr @make_candy_function(ptr @Examples_fibonacci_recursive_0, ptr %7204, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %7205, ptr @fun_Examples_fibonacci_recursive_0, align 8
  %7206 = alloca i8, i64 10, align 1
  store [10 x i8] c"Arguments\00", ptr %7206, align 1
  %7207 = call ptr @make_candy_tag(ptr %7206, ptr null)
  store ptr %7207, ptr @tag_Arguments, align 8
  %7208 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:fibonacci:21:7\00", ptr %7208, align 1
  %7209 = call ptr @make_candy_text(ptr %7208)
  store ptr %7209, ptr @"Examples:fibonacci:21:7", align 8
  %7210 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:fibonacci:21:8\00", ptr %7210, align 1
  %7211 = call ptr @make_candy_text(ptr %7210)
  store ptr %7211, ptr @"Examples:fibonacci:21:8", align 8
  %7212 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:fibonacci:21:8:n\00", ptr %7212, align 1
  %7213 = call ptr @make_candy_text(ptr %7212)
  store ptr %7213, ptr @"Examples:fibonacci:21:8:n", align 8
  %7214 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:fibonacci:21:8:8\00", ptr %7214, align 1
  %7215 = call ptr @make_candy_text(ptr %7214)
  store ptr %7215, ptr @"Examples:fibonacci:21:8:8", align 8
  %7216 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:fibonacci:21:8:9\00", ptr %7216, align 1
  %7217 = call ptr @make_candy_text(ptr %7216)
  store ptr %7217, ptr @"Examples:fibonacci:21:8:9", align 8
  %7218 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:21:8:17\00", ptr %7218, align 1
  %7219 = call ptr @make_candy_text(ptr %7218)
  store ptr %7219, ptr @"Examples:fibonacci:21:8:17", align 8
  %7220 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7221 = getelementptr inbounds { ptr }, ptr %7220, i32 0, i32 0
  store ptr %997, ptr %7221, align 8
  %7222 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_18, ptr %7220, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7222, ptr @fun_Examples_fibonacci_21_8_18, align 8
  %7223 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:21:8:19\00", ptr %7223, align 1
  %7224 = call ptr @make_candy_text(ptr %7223)
  store ptr %7224, ptr @"Examples:fibonacci:21:8:19", align 8
  %7225 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:21:8:27\00", ptr %7225, align 1
  %7226 = call ptr @make_candy_text(ptr %7225)
  store ptr %7226, ptr @"Examples:fibonacci:21:8:27", align 8
  %7227 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:fibonacci:21:8:28\00", ptr %7227, align 1
  %7228 = call ptr @make_candy_text(ptr %7227)
  store ptr %7228, ptr @"Examples:fibonacci:21:8:28", align 8
  %7229 = alloca i8, i64 54, align 1
  store [54 x i8] c"Usage: `cargo run -- run fibonacci.candy -- <number>`\00", ptr %7229, align 1
  %7230 = call ptr @make_candy_text(ptr %7229)
  store ptr %7230, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  %7231 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %7231, align 1
  %7232 = call ptr @make_candy_tag(ptr %7231, ptr null)
  store ptr %7232, ptr @tag_Stdout, align 8
  %7233 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:fibonacci:21:16\00", ptr %7233, align 1
  %7234 = call ptr @make_candy_text(ptr %7233)
  store ptr %7234, ptr @"Examples:fibonacci:21:16", align 8
  %7235 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:fibonacci:21:17\00", ptr %7235, align 1
  %7236 = call ptr @make_candy_text(ptr %7235)
  store ptr %7236, ptr @"Examples:fibonacci:21:17", align 8
  %7237 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7238 = getelementptr inbounds { ptr, ptr }, ptr %7237, i32 0, i32 0
  store ptr %3760, ptr %7238, align 8
  %7239 = getelementptr inbounds { ptr, ptr }, ptr %7237, i32 0, i32 1
  store ptr %5950, ptr %7239, align 8
  %7240 = call ptr @make_candy_function(ptr @Examples_fibonacci_21, ptr %7237, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %7240, ptr @fun_Examples_fibonacci_21, align 8
  %7241 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %7241, align 1
  %7242 = call ptr @make_candy_tag(ptr %7241, ptr null)
  store ptr %7242, ptr @tag_Main, align 8
  %7243 = alloca ptr, i64 2, align 8
  %7244 = alloca ptr, i64 2, align 8
  %7245 = load ptr, ptr @tag_Main, align 8
  %7246 = load ptr, ptr @fun_Examples_fibonacci_21, align 8
  %7247 = getelementptr ptr, ptr %7243, i64 0
  store ptr %7245, ptr %7247, align 8
  %7248 = getelementptr ptr, ptr %7244, i64 0
  store ptr %7246, ptr %7248, align 8
  %7249 = getelementptr ptr, ptr %7243, i64 1
  store ptr null, ptr %7249, align 8
  %7250 = getelementptr ptr, ptr %7244, i64 1
  store ptr null, ptr %7250, align 8
  %7251 = call ptr @make_candy_struct(ptr %7243, ptr %7244)
  %7252 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %7252, align 1
  %7253 = call ptr @make_candy_tag(ptr %7252, ptr null)
  %7254 = call ptr @candy_builtin_struct_get(ptr %7251, ptr %7253)
  %7255 = call ptr @run_candy_main(ptr %7254, ptr @candy_environment)
  call void @print_candy_value(ptr %7255)
  %7256 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %7256)
  %7257 = load ptr, ptr @"Builtins::fitsInRustU128:10", align 8
  call void @free_candy_value(ptr %7257)
  %7258 = load ptr, ptr @"Builtins::fitsInRustU128:16", align 8
  call void @free_candy_value(ptr %7258)
  %7259 = load ptr, ptr @"Builtins::fitsInRustU128:5", align 8
  call void @free_candy_value(ptr %7259)
  %7260 = load ptr, ptr @"Builtins::fitsInRustU128:8", align 8
  call void @free_candy_value(ptr %7260)
  %7261 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %7261)
  %7262 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %7262)
  %7263 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %7263)
  %7264 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %7264)
  %7265 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %7265)
  %7266 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %7266)
  %7267 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %7267)
  %7268 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %7268)
  %7269 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %7269)
  %7270 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %7270)
  %7271 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %7271)
  %7272 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %7272)
  %7273 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %7273)
  %7274 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %7274)
  %7275 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %7275)
  %7276 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %7276)
  %7277 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %7277)
  %7278 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %7278)
  %7279 = load ptr, ptr @"Builtins::intBitLength:11", align 8
  call void @free_candy_value(ptr %7279)
  %7280 = load ptr, ptr @"Builtins::intBitLength:5", align 8
  call void @free_candy_value(ptr %7280)
  %7281 = load ptr, ptr @"Builtins::intBitwiseAnd:11", align 8
  call void @free_candy_value(ptr %7281)
  %7282 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %7282)
  %7283 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %7283)
  %7284 = load ptr, ptr @"Builtins::intBitwiseOr:11", align 8
  call void @free_candy_value(ptr %7284)
  %7285 = load ptr, ptr @"Builtins::intBitwiseOr:18", align 8
  call void @free_candy_value(ptr %7285)
  %7286 = load ptr, ptr @"Builtins::intBitwiseOr:5", align 8
  call void @free_candy_value(ptr %7286)
  %7287 = load ptr, ptr @"Builtins::intBitwiseXor:11", align 8
  call void @free_candy_value(ptr %7287)
  %7288 = load ptr, ptr @"Builtins::intBitwiseXor:18", align 8
  call void @free_candy_value(ptr %7288)
  %7289 = load ptr, ptr @"Builtins::intBitwiseXor:5", align 8
  call void @free_candy_value(ptr %7289)
  %7290 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %7290)
  %7291 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %7291)
  %7292 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %7292)
  %7293 = load ptr, ptr @"Builtins::intDivideTruncating:11", align 8
  call void @free_candy_value(ptr %7293)
  %7294 = load ptr, ptr @"Builtins::intDivideTruncating:17", align 8
  call void @free_candy_value(ptr %7294)
  %7295 = load ptr, ptr @"Builtins::intDivideTruncating:25", align 8
  call void @free_candy_value(ptr %7295)
  %7296 = load ptr, ptr @"Builtins::intDivideTruncating:32", align 8
  call void @free_candy_value(ptr %7296)
  %7297 = load ptr, ptr @"Builtins::intDivideTruncating:5", align 8
  call void @free_candy_value(ptr %7297)
  %7298 = load ptr, ptr @"Builtins::intModulo:11", align 8
  call void @free_candy_value(ptr %7298)
  %7299 = load ptr, ptr @"Builtins::intModulo:17", align 8
  call void @free_candy_value(ptr %7299)
  %7300 = load ptr, ptr @"Builtins::intModulo:25", align 8
  call void @free_candy_value(ptr %7300)
  %7301 = load ptr, ptr @"Builtins::intModulo:32", align 8
  call void @free_candy_value(ptr %7301)
  %7302 = load ptr, ptr @"Builtins::intModulo:5", align 8
  call void @free_candy_value(ptr %7302)
  %7303 = load ptr, ptr @"Builtins::intMultiply:11", align 8
  call void @free_candy_value(ptr %7303)
  %7304 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %7304)
  %7305 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %7305)
  %7306 = load ptr, ptr @"Builtins::intParse:11", align 8
  call void @free_candy_value(ptr %7306)
  %7307 = load ptr, ptr @"Builtins::intParse:5", align 8
  call void @free_candy_value(ptr %7307)
  %7308 = load ptr, ptr @"Builtins::intRemainder:11", align 8
  call void @free_candy_value(ptr %7308)
  %7309 = load ptr, ptr @"Builtins::intRemainder:17", align 8
  call void @free_candy_value(ptr %7309)
  %7310 = load ptr, ptr @"Builtins::intRemainder:25", align 8
  call void @free_candy_value(ptr %7310)
  %7311 = load ptr, ptr @"Builtins::intRemainder:32", align 8
  call void @free_candy_value(ptr %7311)
  %7312 = load ptr, ptr @"Builtins::intRemainder:5", align 8
  call void @free_candy_value(ptr %7312)
  %7313 = load ptr, ptr @"Builtins::intShiftLeft:11", align 8
  call void @free_candy_value(ptr %7313)
  %7314 = load ptr, ptr @"Builtins::intShiftLeft:14", align 8
  call void @free_candy_value(ptr %7314)
  %7315 = load ptr, ptr @"Builtins::intShiftLeft:23", align 8
  call void @free_candy_value(ptr %7315)
  %7316 = load ptr, ptr @"Builtins::intShiftLeft:24", align 8
  call void @free_candy_value(ptr %7316)
  %7317 = load ptr, ptr @"Builtins::intShiftLeft:26:0", align 8
  call void @free_candy_value(ptr %7317)
  %7318 = load ptr, ptr @"Builtins::intShiftLeft:27", align 8
  call void @free_candy_value(ptr %7318)
  %7319 = load ptr, ptr @"Builtins::intShiftLeft:29", align 8
  call void @free_candy_value(ptr %7319)
  %7320 = load ptr, ptr @"Builtins::intShiftLeft:30", align 8
  call void @free_candy_value(ptr %7320)
  %7321 = load ptr, ptr @"Builtins::intShiftLeft:31", align 8
  call void @free_candy_value(ptr %7321)
  %7322 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  call void @free_candy_value(ptr %7322)
  %7323 = load ptr, ptr @"Builtins::intShiftLeft:42", align 8
  call void @free_candy_value(ptr %7323)
  %7324 = load ptr, ptr @"Builtins::intShiftLeft:49", align 8
  call void @free_candy_value(ptr %7324)
  %7325 = load ptr, ptr @"Builtins::intShiftLeft:5", align 8
  call void @free_candy_value(ptr %7325)
  %7326 = load ptr, ptr @"Builtins::intShiftRight:11", align 8
  call void @free_candy_value(ptr %7326)
  %7327 = load ptr, ptr @"Builtins::intShiftRight:14", align 8
  call void @free_candy_value(ptr %7327)
  %7328 = load ptr, ptr @"Builtins::intShiftRight:23", align 8
  call void @free_candy_value(ptr %7328)
  %7329 = load ptr, ptr @"Builtins::intShiftRight:24", align 8
  call void @free_candy_value(ptr %7329)
  %7330 = load ptr, ptr @"Builtins::intShiftRight:26:0", align 8
  call void @free_candy_value(ptr %7330)
  %7331 = load ptr, ptr @"Builtins::intShiftRight:27", align 8
  call void @free_candy_value(ptr %7331)
  %7332 = load ptr, ptr @"Builtins::intShiftRight:29", align 8
  call void @free_candy_value(ptr %7332)
  %7333 = load ptr, ptr @"Builtins::intShiftRight:30", align 8
  call void @free_candy_value(ptr %7333)
  %7334 = load ptr, ptr @"Builtins::intShiftRight:31", align 8
  call void @free_candy_value(ptr %7334)
  %7335 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  call void @free_candy_value(ptr %7335)
  %7336 = load ptr, ptr @"Builtins::intShiftRight:42", align 8
  call void @free_candy_value(ptr %7336)
  %7337 = load ptr, ptr @"Builtins::intShiftRight:49", align 8
  call void @free_candy_value(ptr %7337)
  %7338 = load ptr, ptr @"Builtins::intShiftRight:5", align 8
  call void @free_candy_value(ptr %7338)
  %7339 = load ptr, ptr @"Builtins::intSubtract:11", align 8
  call void @free_candy_value(ptr %7339)
  %7340 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %7340)
  %7341 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %7341)
  %7342 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %7342)
  %7343 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %7343)
  %7344 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %7344)
  %7345 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %7345)
  %7346 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %7346)
  %7347 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %7347)
  %7348 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %7348)
  %7349 = load ptr, ptr @"Builtins::listFilled:10", align 8
  call void @free_candy_value(ptr %7349)
  %7350 = load ptr, ptr @"Builtins::listFilled:17", align 8
  call void @free_candy_value(ptr %7350)
  %7351 = load ptr, ptr @"Builtins::listFilled:5", align 8
  call void @free_candy_value(ptr %7351)
  %7352 = load ptr, ptr @"Builtins::listFilled:8", align 8
  call void @free_candy_value(ptr %7352)
  %7353 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %7353)
  %7354 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %7354)
  %7355 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %7355)
  %7356 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %7356)
  %7357 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %7357)
  %7358 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %7358)
  %7359 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %7359)
  %7360 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %7360)
  %7361 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %7361)
  %7362 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %7362)
  %7363 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %7363)
  %7364 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %7364)
  %7365 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %7365)
  %7366 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %7366)
  %7367 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %7367)
  %7368 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %7368)
  %7369 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %7369)
  %7370 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %7370)
  %7371 = load ptr, ptr @"Builtins::listRemoveAt:11", align 8
  call void @free_candy_value(ptr %7371)
  %7372 = load ptr, ptr @"Builtins::listRemoveAt:14", align 8
  call void @free_candy_value(ptr %7372)
  %7373 = load ptr, ptr @"Builtins::listRemoveAt:16", align 8
  call void @free_candy_value(ptr %7373)
  %7374 = load ptr, ptr @"Builtins::listRemoveAt:21", align 8
  call void @free_candy_value(ptr %7374)
  %7375 = load ptr, ptr @"Builtins::listRemoveAt:22", align 8
  call void @free_candy_value(ptr %7375)
  %7376 = load ptr, ptr @"Builtins::listRemoveAt:27", align 8
  call void @free_candy_value(ptr %7376)
  %7377 = load ptr, ptr @"Builtins::listRemoveAt:34", align 8
  call void @free_candy_value(ptr %7377)
  %7378 = load ptr, ptr @"Builtins::listRemoveAt:5", align 8
  call void @free_candy_value(ptr %7378)
  %7379 = load ptr, ptr @"Builtins::listReplace:11", align 8
  call void @free_candy_value(ptr %7379)
  %7380 = load ptr, ptr @"Builtins::listReplace:14", align 8
  call void @free_candy_value(ptr %7380)
  %7381 = load ptr, ptr @"Builtins::listReplace:16", align 8
  call void @free_candy_value(ptr %7381)
  %7382 = load ptr, ptr @"Builtins::listReplace:21", align 8
  call void @free_candy_value(ptr %7382)
  %7383 = load ptr, ptr @"Builtins::listReplace:22", align 8
  call void @free_candy_value(ptr %7383)
  %7384 = load ptr, ptr @"Builtins::listReplace:27", align 8
  call void @free_candy_value(ptr %7384)
  %7385 = load ptr, ptr @"Builtins::listReplace:35", align 8
  call void @free_candy_value(ptr %7385)
  %7386 = load ptr, ptr @"Builtins::listReplace:5", align 8
  call void @free_candy_value(ptr %7386)
  %7387 = load ptr, ptr @"Builtins::not:1", align 8
  call void @free_candy_value(ptr %7387)
  %7388 = load ptr, ptr @"Builtins::print:11", align 8
  call void @free_candy_value(ptr %7388)
  %7389 = load ptr, ptr @"Builtins::print:5", align 8
  call void @free_candy_value(ptr %7389)
  %7390 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %7390)
  %7391 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %7391)
  %7392 = load ptr, ptr @"Builtins::structGet:22", align 8
  call void @free_candy_value(ptr %7392)
  %7393 = load ptr, ptr @"Builtins::structGet:24:0", align 8
  call void @free_candy_value(ptr %7393)
  %7394 = load ptr, ptr @"Builtins::structGet:25", align 8
  call void @free_candy_value(ptr %7394)
  %7395 = load ptr, ptr @"Builtins::structGet:28", align 8
  call void @free_candy_value(ptr %7395)
  %7396 = load ptr, ptr @"Builtins::structGet:29", align 8
  call void @free_candy_value(ptr %7396)
  %7397 = load ptr, ptr @"Builtins::structGet:31:0", align 8
  call void @free_candy_value(ptr %7397)
  %7398 = load ptr, ptr @"Builtins::structGet:32", align 8
  call void @free_candy_value(ptr %7398)
  %7399 = load ptr, ptr @"Builtins::structGet:34", align 8
  call void @free_candy_value(ptr %7399)
  %7400 = load ptr, ptr @"Builtins::structGet:35", align 8
  call void @free_candy_value(ptr %7400)
  %7401 = load ptr, ptr @"Builtins::structGet:36", align 8
  call void @free_candy_value(ptr %7401)
  %7402 = load ptr, ptr @"Builtins::structGet:37", align 8
  call void @free_candy_value(ptr %7402)
  %7403 = load ptr, ptr @"Builtins::structGet:38", align 8
  call void @free_candy_value(ptr %7403)
  %7404 = load ptr, ptr @"Builtins::structGet:45", align 8
  call void @free_candy_value(ptr %7404)
  %7405 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %7405)
  %7406 = load ptr, ptr @"Builtins::structGetKeys:11", align 8
  call void @free_candy_value(ptr %7406)
  %7407 = load ptr, ptr @"Builtins::structGetKeys:5", align 8
  call void @free_candy_value(ptr %7407)
  %7408 = load ptr, ptr @"Builtins::structHasKey:12", align 8
  call void @free_candy_value(ptr %7408)
  %7409 = load ptr, ptr @"Builtins::structHasKey:5", align 8
  call void @free_candy_value(ptr %7409)
  %7410 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %7410)
  %7411 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %7411)
  %7412 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %7412)
  %7413 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %7413)
  %7414 = load ptr, ptr @"Builtins::tagHasValue:11", align 8
  call void @free_candy_value(ptr %7414)
  %7415 = load ptr, ptr @"Builtins::tagHasValue:5", align 8
  call void @free_candy_value(ptr %7415)
  %7416 = load ptr, ptr @"Builtins::tagWithoutValue:11", align 8
  call void @free_candy_value(ptr %7416)
  %7417 = load ptr, ptr @"Builtins::tagWithoutValue:5", align 8
  call void @free_candy_value(ptr %7417)
  %7418 = load ptr, ptr @"Builtins::textCharacters:11", align 8
  call void @free_candy_value(ptr %7418)
  %7419 = load ptr, ptr @"Builtins::textCharacters:5", align 8
  call void @free_candy_value(ptr %7419)
  %7420 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %7420)
  %7421 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %7421)
  %7422 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %7422)
  %7423 = load ptr, ptr @"Builtins::textContains:11", align 8
  call void @free_candy_value(ptr %7423)
  %7424 = load ptr, ptr @"Builtins::textContains:18", align 8
  call void @free_candy_value(ptr %7424)
  %7425 = load ptr, ptr @"Builtins::textContains:5", align 8
  call void @free_candy_value(ptr %7425)
  %7426 = load ptr, ptr @"Builtins::textEndsWith:11", align 8
  call void @free_candy_value(ptr %7426)
  %7427 = load ptr, ptr @"Builtins::textEndsWith:18", align 8
  call void @free_candy_value(ptr %7427)
  %7428 = load ptr, ptr @"Builtins::textEndsWith:5", align 8
  call void @free_candy_value(ptr %7428)
  %7429 = load ptr, ptr @"Builtins::textFromUtf8:11", align 8
  call void @free_candy_value(ptr %7429)
  %7430 = load ptr, ptr @"Builtins::textFromUtf8:5", align 8
  call void @free_candy_value(ptr %7430)
  %7431 = load ptr, ptr @"Builtins::textGetRange:11", align 8
  call void @free_candy_value(ptr %7431)
  %7432 = load ptr, ptr @"Builtins::textGetRange:14", align 8
  call void @free_candy_value(ptr %7432)
  %7433 = load ptr, ptr @"Builtins::textGetRange:16", align 8
  call void @free_candy_value(ptr %7433)
  %7434 = load ptr, ptr @"Builtins::textGetRange:24", align 8
  call void @free_candy_value(ptr %7434)
  %7435 = load ptr, ptr @"Builtins::textGetRange:25", align 8
  call void @free_candy_value(ptr %7435)
  %7436 = load ptr, ptr @"Builtins::textGetRange:27", align 8
  call void @free_candy_value(ptr %7436)
  %7437 = load ptr, ptr @"Builtins::textGetRange:33", align 8
  call void @free_candy_value(ptr %7437)
  %7438 = load ptr, ptr @"Builtins::textGetRange:36", align 8
  call void @free_candy_value(ptr %7438)
  %7439 = load ptr, ptr @"Builtins::textGetRange:38", align 8
  call void @free_candy_value(ptr %7439)
  %7440 = load ptr, ptr @"Builtins::textGetRange:46", align 8
  call void @free_candy_value(ptr %7440)
  %7441 = load ptr, ptr @"Builtins::textGetRange:47", align 8
  call void @free_candy_value(ptr %7441)
  %7442 = load ptr, ptr @"Builtins::textGetRange:49", align 8
  call void @free_candy_value(ptr %7442)
  %7443 = load ptr, ptr @"Builtins::textGetRange:5", align 8
  call void @free_candy_value(ptr %7443)
  %7444 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  call void @free_candy_value(ptr %7444)
  %7445 = load ptr, ptr @"Builtins::textGetRange:55", align 8
  call void @free_candy_value(ptr %7445)
  %7446 = load ptr, ptr @"Builtins::textGetRange:63", align 8
  call void @free_candy_value(ptr %7446)
  %7447 = load ptr, ptr @"Builtins::textIsEmpty:11", align 8
  call void @free_candy_value(ptr %7447)
  %7448 = load ptr, ptr @"Builtins::textIsEmpty:5", align 8
  call void @free_candy_value(ptr %7448)
  %7449 = load ptr, ptr @"Builtins::textLength:11", align 8
  call void @free_candy_value(ptr %7449)
  %7450 = load ptr, ptr @"Builtins::textLength:5", align 8
  call void @free_candy_value(ptr %7450)
  %7451 = load ptr, ptr @"Builtins::textStartsWith:11", align 8
  call void @free_candy_value(ptr %7451)
  %7452 = load ptr, ptr @"Builtins::textStartsWith:18", align 8
  call void @free_candy_value(ptr %7452)
  %7453 = load ptr, ptr @"Builtins::textStartsWith:5", align 8
  call void @free_candy_value(ptr %7453)
  %7454 = load ptr, ptr @"Builtins::textTrimEnd:11", align 8
  call void @free_candy_value(ptr %7454)
  %7455 = load ptr, ptr @"Builtins::textTrimEnd:5", align 8
  call void @free_candy_value(ptr %7455)
  %7456 = load ptr, ptr @"Builtins::textTrimStart:11", align 8
  call void @free_candy_value(ptr %7456)
  %7457 = load ptr, ptr @"Builtins::textTrimStart:5", align 8
  call void @free_candy_value(ptr %7457)
  %7458 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %7458)
  %7459 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %7459)
  %7460 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %7460)
  %7461 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %7461)
  %7462 = load ptr, ptr @"Core:equality:17", align 8
  call void @free_candy_value(ptr %7462)
  %7463 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %7463)
  %7464 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %7464)
  %7465 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %7465)
  %7466 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %7466)
  %7467 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %7467)
  %7468 = load ptr, ptr @fun_candy_builtin_int_bit_length, align 8
  call void @free_candy_value(ptr %7468)
  %7469 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %7469)
  %7470 = load ptr, ptr @fun_candy_builtin_int_bitwise_or, align 8
  call void @free_candy_value(ptr %7470)
  %7471 = load ptr, ptr @fun_candy_builtin_int_bitwise_xor, align 8
  call void @free_candy_value(ptr %7471)
  %7472 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %7472)
  %7473 = load ptr, ptr @fun_candy_builtin_int_divide_truncating, align 8
  call void @free_candy_value(ptr %7473)
  %7474 = load ptr, ptr @fun_candy_builtin_int_modulo, align 8
  call void @free_candy_value(ptr %7474)
  %7475 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %7475)
  %7476 = load ptr, ptr @fun_candy_builtin_int_parse, align 8
  call void @free_candy_value(ptr %7476)
  %7477 = load ptr, ptr @fun_candy_builtin_int_remainder, align 8
  call void @free_candy_value(ptr %7477)
  %7478 = load ptr, ptr @fun_candy_builtin_int_shift_left, align 8
  call void @free_candy_value(ptr %7478)
  %7479 = load ptr, ptr @fun_candy_builtin_int_shift_right, align 8
  call void @free_candy_value(ptr %7479)
  %7480 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %7480)
  %7481 = load ptr, ptr @fun_candy_builtin_list_filled, align 8
  call void @free_candy_value(ptr %7481)
  %7482 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %7482)
  %7483 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %7483)
  %7484 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %7484)
  %7485 = load ptr, ptr @fun_candy_builtin_list_remove_at, align 8
  call void @free_candy_value(ptr %7485)
  %7486 = load ptr, ptr @fun_candy_builtin_list_replace, align 8
  call void @free_candy_value(ptr %7486)
  %7487 = load ptr, ptr @fun_candy_builtin_print, align 8
  call void @free_candy_value(ptr %7487)
  %7488 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %7488)
  %7489 = load ptr, ptr @fun_candy_builtin_struct_get_keys, align 8
  call void @free_candy_value(ptr %7489)
  %7490 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %7490)
  %7491 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %7491)
  %7492 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %7492)
  %7493 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %7493)
  %7494 = load ptr, ptr @fun_candy_builtin_text_characters, align 8
  call void @free_candy_value(ptr %7494)
  %7495 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %7495)
  %7496 = load ptr, ptr @fun_candy_builtin_text_contains, align 8
  call void @free_candy_value(ptr %7496)
  %7497 = load ptr, ptr @fun_candy_builtin_text_ends_with, align 8
  call void @free_candy_value(ptr %7497)
  %7498 = load ptr, ptr @fun_candy_builtin_text_from_utf8, align 8
  call void @free_candy_value(ptr %7498)
  %7499 = load ptr, ptr @fun_candy_builtin_text_get_range, align 8
  call void @free_candy_value(ptr %7499)
  %7500 = load ptr, ptr @fun_candy_builtin_text_is_empty, align 8
  call void @free_candy_value(ptr %7500)
  %7501 = load ptr, ptr @fun_candy_builtin_text_length, align 8
  call void @free_candy_value(ptr %7501)
  %7502 = load ptr, ptr @fun_candy_builtin_text_starts_with, align 8
  call void @free_candy_value(ptr %7502)
  %7503 = load ptr, ptr @fun_candy_builtin_text_trim_end, align 8
  call void @free_candy_value(ptr %7503)
  %7504 = load ptr, ptr @fun_candy_builtin_text_trim_start, align 8
  call void @free_candy_value(ptr %7504)
  %7505 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %7505)
  %7506 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %7506)
  %7507 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %7507)
  %7508 = load ptr, ptr @tag_Equals, align 8
  call void @free_candy_value(ptr %7508)
  %7509 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %7509)
  %7510 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %7510)
  %7511 = load ptr, ptr @tag_FunctionRun, align 8
  call void @free_candy_value(ptr %7511)
  %7512 = load ptr, ptr @tag_GetArgumentCount, align 8
  call void @free_candy_value(ptr %7512)
  %7513 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %7513)
  %7514 = load ptr, ptr @tag_IfElse, align 8
  call void @free_candy_value(ptr %7514)
  %7515 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %7515)
  %7516 = load ptr, ptr @tag_IntAdd, align 8
  call void @free_candy_value(ptr %7516)
  %7517 = load ptr, ptr @tag_IntBitLength, align 8
  call void @free_candy_value(ptr %7517)
  %7518 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  call void @free_candy_value(ptr %7518)
  %7519 = load ptr, ptr @tag_IntBitwiseOr, align 8
  call void @free_candy_value(ptr %7519)
  %7520 = load ptr, ptr @tag_IntBitwiseXor, align 8
  call void @free_candy_value(ptr %7520)
  %7521 = load ptr, ptr @tag_IntCompareTo, align 8
  call void @free_candy_value(ptr %7521)
  %7522 = load ptr, ptr @tag_IntDivideTruncating, align 8
  call void @free_candy_value(ptr %7522)
  %7523 = load ptr, ptr @tag_IntModulo, align 8
  call void @free_candy_value(ptr %7523)
  %7524 = load ptr, ptr @tag_IntMultiply, align 8
  call void @free_candy_value(ptr %7524)
  %7525 = load ptr, ptr @tag_IntParse, align 8
  call void @free_candy_value(ptr %7525)
  %7526 = load ptr, ptr @tag_IntRemainder, align 8
  call void @free_candy_value(ptr %7526)
  %7527 = load ptr, ptr @tag_IntShiftLeft, align 8
  call void @free_candy_value(ptr %7527)
  %7528 = load ptr, ptr @tag_IntShiftRight, align 8
  call void @free_candy_value(ptr %7528)
  %7529 = load ptr, ptr @tag_IntSubtract, align 8
  call void @free_candy_value(ptr %7529)
  %7530 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %7530)
  %7531 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %7531)
  %7532 = load ptr, ptr @tag_ListFilled, align 8
  call void @free_candy_value(ptr %7532)
  %7533 = load ptr, ptr @tag_ListGet, align 8
  call void @free_candy_value(ptr %7533)
  %7534 = load ptr, ptr @tag_ListInsert, align 8
  call void @free_candy_value(ptr %7534)
  %7535 = load ptr, ptr @tag_ListLength, align 8
  call void @free_candy_value(ptr %7535)
  %7536 = load ptr, ptr @tag_ListRemoveAt, align 8
  call void @free_candy_value(ptr %7536)
  %7537 = load ptr, ptr @tag_ListReplace, align 8
  call void @free_candy_value(ptr %7537)
  %7538 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %7538)
  %7539 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %7539)
  %7540 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %7540)
  %7541 = load ptr, ptr @tag_Print, align 8
  call void @free_candy_value(ptr %7541)
  %7542 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %7542)
  %7543 = load ptr, ptr @tag_StructGet, align 8
  call void @free_candy_value(ptr %7543)
  %7544 = load ptr, ptr @tag_StructGetKeys, align 8
  call void @free_candy_value(ptr %7544)
  %7545 = load ptr, ptr @tag_StructHasKey, align 8
  call void @free_candy_value(ptr %7545)
  %7546 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %7546)
  %7547 = load ptr, ptr @tag_TagGetValue, align 8
  call void @free_candy_value(ptr %7547)
  %7548 = load ptr, ptr @tag_TagHasValue, align 8
  call void @free_candy_value(ptr %7548)
  %7549 = load ptr, ptr @tag_TagWithoutValue, align 8
  call void @free_candy_value(ptr %7549)
  %7550 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %7550)
  %7551 = load ptr, ptr @tag_TextCharacters, align 8
  call void @free_candy_value(ptr %7551)
  %7552 = load ptr, ptr @tag_TextConcatenate, align 8
  call void @free_candy_value(ptr %7552)
  %7553 = load ptr, ptr @tag_TextContains, align 8
  call void @free_candy_value(ptr %7553)
  %7554 = load ptr, ptr @tag_TextEndsWith, align 8
  call void @free_candy_value(ptr %7554)
  %7555 = load ptr, ptr @tag_TextFromUtf8, align 8
  call void @free_candy_value(ptr %7555)
  %7556 = load ptr, ptr @tag_TextGetRange, align 8
  call void @free_candy_value(ptr %7556)
  %7557 = load ptr, ptr @tag_TextIsEmpty, align 8
  call void @free_candy_value(ptr %7557)
  %7558 = load ptr, ptr @tag_TextLength, align 8
  call void @free_candy_value(ptr %7558)
  %7559 = load ptr, ptr @tag_TextStartsWith, align 8
  call void @free_candy_value(ptr %7559)
  %7560 = load ptr, ptr @tag_TextTrimEnd, align 8
  call void @free_candy_value(ptr %7560)
  %7561 = load ptr, ptr @tag_TextTrimStart, align 8
  call void @free_candy_value(ptr %7561)
  %7562 = load ptr, ptr @tag_ToDebugText, align 8
  call void @free_candy_value(ptr %7562)
  %7563 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %7563)
  %7564 = load ptr, ptr @tag_TypeOf, align 8
  call void @free_candy_value(ptr %7564)
  %7565 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %7565)
  %7566 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %7566)
  %7567 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  call void @free_candy_value(ptr %7567)
  %7568 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %7568)
  %7569 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  call void @free_candy_value(ptr %7569)
  %7570 = load ptr, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  call void @free_candy_value(ptr %7570)
  %7571 = load ptr, ptr @"text_Expected Equal, got ", align 8
  call void @free_candy_value(ptr %7571)
  %7572 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %7572)
  %7573 = load ptr, ptr @"text_Expected Greater, got ", align 8
  call void @free_candy_value(ptr %7573)
  %7574 = load ptr, ptr @"text_Expected Less, got ", align 8
  call void @free_candy_value(ptr %7574)
  %7575 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %7575)
  %7576 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %7576)
  %7577 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %7577)
  %7578 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %7578)
  %7579 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  call void @free_candy_value(ptr %7579)
  %7580 = load ptr, ptr @"text_Struct `", align 8
  call void @free_candy_value(ptr %7580)
  %7581 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %7581)
  %7582 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %7582)
  %7583 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  call void @free_candy_value(ptr %7583)
  %7584 = load ptr, ptr @"text_You can't divide by zero.", align 8
  call void @free_candy_value(ptr %7584)
  %7585 = load ptr, ptr @"text_` is missing the key `", align 8
  call void @free_candy_value(ptr %7585)
  %7586 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %7586)
  %7587 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @free_candy_value(ptr %7587)
  %7588 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7588)
  %7589 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7589)
  %7590 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7590)
  %7591 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7591)
  %7592 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7592)
  %7593 = load ptr, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %7593)
  %7594 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %7594)
  %7595 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7595)
  %7596 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7596)
  %7597 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %7597)
  %7598 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %7598)
  %7599 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %7599)
  %7600 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %7600)
  %7601 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7601)
  %7602 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7602)
  %7603 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7603)
  %7604 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %7604)
  %7605 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %7605)
  %7606 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %7606)
  %7607 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %7607)
  %7608 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %7608)
  %7609 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %7609)
  %7610 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7610)
  %7611 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7611)
  %7612 = load ptr, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %7612)
  %7613 = load ptr, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7613)
  %7614 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %7614)
  %7615 = load ptr, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7615)
  %7616 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7616)
  %7617 = load ptr, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7617)
  %7618 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7618)
  %7619 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %7619)
  %7620 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %7620)
  %7621 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %7621)
  %7622 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7622)
  %7623 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %7623)
  %7624 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7624)
  %7625 = load ptr, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7625)
  %7626 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %7626)
  %7627 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %7627)
  %7628 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7628)
  %7629 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %7629)
  %7630 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %7630)
  %7631 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %7631)
  %7632 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7632)
  %7633 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %7633)
  %7634 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %7634)
  %7635 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %7635)
  %7636 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %7636)
  %7637 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %7637)
  %7638 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %7638)
  %7639 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %7639)
  %7640 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %7640)
  %7641 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  call void @free_candy_value(ptr %7641)
  %7642 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %7642)
  %7643 = load ptr, ptr @fun_Builtins__not, align 8
  call void @free_candy_value(ptr %7643)
  %7644 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  call void @free_candy_value(ptr %7644)
  %7645 = load ptr, ptr @fun_Builtins__not_1_equals_then.3, align 8
  call void @free_candy_value(ptr %7645)
  %7646 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  call void @free_candy_value(ptr %7646)
  %7647 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %7647)
  %7648 = load ptr, ptr @fun_Builtins__not_1_equals_else.5, align 8
  call void @free_candy_value(ptr %7648)
  %7649 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %7649)
  %7650 = load ptr, ptr @fun_Builtins__not_1_equals_else.7, align 8
  call void @free_candy_value(ptr %7650)
  %7651 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %7651)
  %7652 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7652)
  %7653 = load ptr, ptr @fun_Builtins__not_1_equals_then.9, align 8
  call void @free_candy_value(ptr %7653)
  %7654 = load ptr, ptr @fun_Builtins__not_1_equals_then.11, align 8
  call void @free_candy_value(ptr %7654)
  %7655 = load ptr, ptr @fun_Builtins__not_1_equals_else.13, align 8
  call void @free_candy_value(ptr %7655)
  %7656 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %7656)
  %7657 = load ptr, ptr @fun_Builtins__not_1_equals_else.15, align 8
  call void @free_candy_value(ptr %7657)
  %7658 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %7658)
  %7659 = load ptr, ptr @fun_Builtins__not_1_equals_else.17, align 8
  call void @free_candy_value(ptr %7659)
  %7660 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %7660)
  %7661 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %7661)
  %7662 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %7662)
  %7663 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  call void @free_candy_value(ptr %7663)
  %7664 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  call void @free_candy_value(ptr %7664)
  %7665 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %7665)
  %7666 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %7666)
  %7667 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  call void @free_candy_value(ptr %7667)
  %7668 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %7668)
  %7669 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %7669)
  %7670 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %7670)
  %7671 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.23, align 8
  call void @free_candy_value(ptr %7671)
  %7672 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  call void @free_candy_value(ptr %7672)
  %7673 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  call void @free_candy_value(ptr %7673)
  %7674 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %7674)
  %7675 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  call void @free_candy_value(ptr %7675)
  %7676 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %7676)
  %7677 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7677)
  %7678 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.31, align 8
  call void @free_candy_value(ptr %7678)
  %7679 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  call void @free_candy_value(ptr %7679)
  %7680 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  call void @free_candy_value(ptr %7680)
  %7681 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %7681)
  %7682 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  call void @free_candy_value(ptr %7682)
  %7683 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %7683)
  %7684 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %7684)
  %7685 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %7685)
  %7686 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  call void @free_candy_value(ptr %7686)
  %7687 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  call void @free_candy_value(ptr %7687)
  %7688 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %7688)
  %7689 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %7689)
  %7690 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  call void @free_candy_value(ptr %7690)
  %7691 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %7691)
  %7692 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %7692)
  %7693 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %7693)
  %7694 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43, align 8
  call void @free_candy_value(ptr %7694)
  %7695 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  call void @free_candy_value(ptr %7695)
  %7696 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  call void @free_candy_value(ptr %7696)
  %7697 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %7697)
  %7698 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  call void @free_candy_value(ptr %7698)
  %7699 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %7699)
  %7700 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7700)
  %7701 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51, align 8
  call void @free_candy_value(ptr %7701)
  %7702 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  call void @free_candy_value(ptr %7702)
  %7703 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  call void @free_candy_value(ptr %7703)
  %7704 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %7704)
  %7705 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  call void @free_candy_value(ptr %7705)
  %7706 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %7706)
  %7707 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %7707)
  %7708 = load ptr, ptr @fun_Builtins__equals, align 8
  call void @free_candy_value(ptr %7708)
  %7709 = load ptr, ptr @fun_Builtins__functionRun, align 8
  call void @free_candy_value(ptr %7709)
  %7710 = load ptr, ptr @fun_Builtins__getArgumentCount, align 8
  call void @free_candy_value(ptr %7710)
  %7711 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %7711)
  %7712 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %7712)
  %7713 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  call void @free_candy_value(ptr %7713)
  %7714 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %7714)
  %7715 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %7715)
  %7716 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  call void @free_candy_value(ptr %7716)
  %7717 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %7717)
  %7718 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  call void @free_candy_value(ptr %7718)
  %7719 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %7719)
  %7720 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %7720)
  %7721 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %7721)
  %7722 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  call void @free_candy_value(ptr %7722)
  %7723 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  call void @free_candy_value(ptr %7723)
  %7724 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  call void @free_candy_value(ptr %7724)
  %7725 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %7725)
  %7726 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  call void @free_candy_value(ptr %7726)
  %7727 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %7727)
  %7728 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  call void @free_candy_value(ptr %7728)
  %7729 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %7729)
  %7730 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7730)
  %7731 = load ptr, ptr @fun_Builtins__intAdd, align 8
  call void @free_candy_value(ptr %7731)
  %7732 = load ptr, ptr @fun_Builtins__intBitLength, align 8
  call void @free_candy_value(ptr %7732)
  %7733 = load ptr, ptr @fun_Builtins__intBitwiseAnd, align 8
  call void @free_candy_value(ptr %7733)
  %7734 = load ptr, ptr @fun_Builtins__intBitwiseOr, align 8
  call void @free_candy_value(ptr %7734)
  %7735 = load ptr, ptr @fun_Builtins__intBitwiseXor, align 8
  call void @free_candy_value(ptr %7735)
  %7736 = load ptr, ptr @fun_Builtins__intCompareTo, align 8
  call void @free_candy_value(ptr %7736)
  %7737 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  call void @free_candy_value(ptr %7737)
  %7738 = load ptr, ptr @fun_Builtins__intModulo, align 8
  call void @free_candy_value(ptr %7738)
  %7739 = load ptr, ptr @fun_Builtins__intMultiply, align 8
  call void @free_candy_value(ptr %7739)
  %7740 = load ptr, ptr @fun_Builtins__intParse, align 8
  call void @free_candy_value(ptr %7740)
  %7741 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  call void @free_candy_value(ptr %7741)
  %7742 = load ptr, ptr @fun_Builtins__intShiftLeft, align 8
  call void @free_candy_value(ptr %7742)
  %7743 = load ptr, ptr @fun_Builtins__intShiftLeft_25, align 8
  call void @free_candy_value(ptr %7743)
  %7744 = load ptr, ptr @fun_Builtins__intShiftLeft_26, align 8
  call void @free_candy_value(ptr %7744)
  %7745 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  call void @free_candy_value(ptr %7745)
  %7746 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  call void @free_candy_value(ptr %7746)
  %7747 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  call void @free_candy_value(ptr %7747)
  %7748 = load ptr, ptr @fun_Builtins__intSubtract, align 8
  call void @free_candy_value(ptr %7748)
  %7749 = load ptr, ptr @fun_Builtins__listFilled, align 8
  call void @free_candy_value(ptr %7749)
  %7750 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %7750)
  %7751 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %7751)
  %7752 = load ptr, ptr @fun_Builtins__listLength, align 8
  call void @free_candy_value(ptr %7752)
  %7753 = load ptr, ptr @fun_Builtins__listRemoveAt, align 8
  call void @free_candy_value(ptr %7753)
  %7754 = load ptr, ptr @fun_Builtins__listReplace, align 8
  call void @free_candy_value(ptr %7754)
  %7755 = load ptr, ptr @fun_Builtins__print, align 8
  call void @free_candy_value(ptr %7755)
  %7756 = load ptr, ptr @fun_Builtins__structGet, align 8
  call void @free_candy_value(ptr %7756)
  %7757 = load ptr, ptr @fun_Builtins__structGet_23, align 8
  call void @free_candy_value(ptr %7757)
  %7758 = load ptr, ptr @fun_Builtins__structGet_24, align 8
  call void @free_candy_value(ptr %7758)
  %7759 = load ptr, ptr @fun_Builtins__structGet_30, align 8
  call void @free_candy_value(ptr %7759)
  %7760 = load ptr, ptr @fun_Builtins__structGet_31, align 8
  call void @free_candy_value(ptr %7760)
  %7761 = load ptr, ptr @fun_Builtins__structGetKeys, align 8
  call void @free_candy_value(ptr %7761)
  %7762 = load ptr, ptr @fun_Builtins__structHasKey, align 8
  call void @free_candy_value(ptr %7762)
  %7763 = load ptr, ptr @fun_Builtins__tagGetValue, align 8
  call void @free_candy_value(ptr %7763)
  %7764 = load ptr, ptr @fun_Builtins__tagHasValue, align 8
  call void @free_candy_value(ptr %7764)
  %7765 = load ptr, ptr @fun_Builtins__tagWithoutValue, align 8
  call void @free_candy_value(ptr %7765)
  %7766 = load ptr, ptr @fun_Builtins__textCharacters, align 8
  call void @free_candy_value(ptr %7766)
  %7767 = load ptr, ptr @fun_Builtins__textConcatenate, align 8
  call void @free_candy_value(ptr %7767)
  %7768 = load ptr, ptr @fun_Builtins__textContains, align 8
  call void @free_candy_value(ptr %7768)
  %7769 = load ptr, ptr @fun_Builtins__textEndsWith, align 8
  call void @free_candy_value(ptr %7769)
  %7770 = load ptr, ptr @fun_Builtins__textFromUtf8, align 8
  call void @free_candy_value(ptr %7770)
  %7771 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  call void @free_candy_value(ptr %7771)
  %7772 = load ptr, ptr @fun_Builtins__textIsEmpty, align 8
  call void @free_candy_value(ptr %7772)
  %7773 = load ptr, ptr @fun_Builtins__textLength, align 8
  call void @free_candy_value(ptr %7773)
  %7774 = load ptr, ptr @fun_Builtins__textStartsWith, align 8
  call void @free_candy_value(ptr %7774)
  %7775 = load ptr, ptr @fun_Builtins__textTrimEnd, align 8
  call void @free_candy_value(ptr %7775)
  %7776 = load ptr, ptr @fun_Builtins__textTrimStart, align 8
  call void @free_candy_value(ptr %7776)
  %7777 = load ptr, ptr @fun_Builtins__toDebugText, align 8
  call void @free_candy_value(ptr %7777)
  %7778 = load ptr, ptr @fun_Builtins__typeOf, align 8
  call void @free_candy_value(ptr %7778)
  %7779 = load ptr, ptr @"Core:type:28", align 8
  call void @free_candy_value(ptr %7779)
  %7780 = load ptr, ptr @"Core:type:is:2", align 8
  call void @free_candy_value(ptr %7780)
  %7781 = load ptr, ptr @"Core:type:is:5", align 8
  call void @free_candy_value(ptr %7781)
  %7782 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %7782)
  %7783 = load ptr, ptr @"Core:type:is:7", align 8
  call void @free_candy_value(ptr %7783)
  %7784 = load ptr, ptr @"Core:type:is:11", align 8
  call void @free_candy_value(ptr %7784)
  %7785 = load ptr, ptr @"Core:type:is:13", align 8
  call void @free_candy_value(ptr %7785)
  %7786 = load ptr, ptr @tag_Is, align 8
  call void @free_candy_value(ptr %7786)
  %7787 = load ptr, ptr @"Core:function:is:7", align 8
  call void @free_candy_value(ptr %7787)
  %7788 = load ptr, ptr @"Core:function:is:10", align 8
  call void @free_candy_value(ptr %7788)
  %7789 = load ptr, ptr @"Core:function:38", align 8
  call void @free_candy_value(ptr %7789)
  %7790 = load ptr, ptr @"Core:function:is0:7", align 8
  call void @free_candy_value(ptr %7790)
  %7791 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %7791)
  %7792 = load ptr, ptr @"Core:function:is0:11:5", align 8
  call void @free_candy_value(ptr %7792)
  %7793 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %7793)
  %7794 = load ptr, ptr @"Core:function:is1:7", align 8
  call void @free_candy_value(ptr %7794)
  %7795 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %7795)
  %7796 = load ptr, ptr @"Core:function:is1:11:5", align 8
  call void @free_candy_value(ptr %7796)
  %7797 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %7797)
  %7798 = load ptr, ptr @"Core:function:is2:7", align 8
  call void @free_candy_value(ptr %7798)
  %7799 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %7799)
  %7800 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %7800)
  %7801 = load ptr, ptr @"Core:function:is2:11:5", align 8
  call void @free_candy_value(ptr %7801)
  %7802 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %7802)
  %7803 = load ptr, ptr @"Core:function:is3:7", align 8
  call void @free_candy_value(ptr %7803)
  %7804 = load ptr, ptr @"Core:function:is3:11:3", align 8
  call void @free_candy_value(ptr %7804)
  %7805 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %7805)
  %7806 = load ptr, ptr @"Core:function:is3:11:5", align 8
  call void @free_candy_value(ptr %7806)
  %7807 = load ptr, ptr @"Core:function:is3:13", align 8
  call void @free_candy_value(ptr %7807)
  %7808 = load ptr, ptr @"Core:function:is4:7", align 8
  call void @free_candy_value(ptr %7808)
  %7809 = load ptr, ptr @"Core:function:is4:11:3", align 8
  call void @free_candy_value(ptr %7809)
  %7810 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %7810)
  %7811 = load ptr, ptr @"Core:function:is4:11:5", align 8
  call void @free_candy_value(ptr %7811)
  %7812 = load ptr, ptr @"Core:function:is4:13", align 8
  call void @free_candy_value(ptr %7812)
  %7813 = load ptr, ptr @"Core:function:is5:7", align 8
  call void @free_candy_value(ptr %7813)
  %7814 = load ptr, ptr @"Core:function:is5:11:3", align 8
  call void @free_candy_value(ptr %7814)
  %7815 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %7815)
  %7816 = load ptr, ptr @"Core:function:is5:11:5", align 8
  call void @free_candy_value(ptr %7816)
  %7817 = load ptr, ptr @"Core:function:is5:13", align 8
  call void @free_candy_value(ptr %7817)
  %7818 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %7818)
  %7819 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %7819)
  %7820 = load ptr, ptr @"Core:function:run:12", align 8
  call void @free_candy_value(ptr %7820)
  %7821 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %7821)
  %7822 = load ptr, ptr @"Core:function:doNotRun:4", align 8
  call void @free_candy_value(ptr %7822)
  %7823 = load ptr, ptr @tag_DoNotRun, align 8
  call void @free_candy_value(ptr %7823)
  %7824 = load ptr, ptr @tag_Is4, align 8
  call void @free_candy_value(ptr %7824)
  %7825 = load ptr, ptr @tag_Is1, align 8
  call void @free_candy_value(ptr %7825)
  %7826 = load ptr, ptr @tag_Run, align 8
  call void @free_candy_value(ptr %7826)
  %7827 = load ptr, ptr @tag_Is0, align 8
  call void @free_candy_value(ptr %7827)
  %7828 = load ptr, ptr @tag_Is3, align 8
  call void @free_candy_value(ptr %7828)
  %7829 = load ptr, ptr @tag_Is2, align 8
  call void @free_candy_value(ptr %7829)
  %7830 = load ptr, ptr @tag_Is5, align 8
  call void @free_candy_value(ptr %7830)
  %7831 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %7831)
  %7832 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %7832)
  %7833 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  call void @free_candy_value(ptr %7833)
  %7834 = load ptr, ptr @fun_Core_bool_is_1_equals_then.75, align 8
  call void @free_candy_value(ptr %7834)
  %7835 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %7835)
  %7836 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %7836)
  %7837 = load ptr, ptr @fun_Core_bool_is_1_equals_else.77, align 8
  call void @free_candy_value(ptr %7837)
  %7838 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %7838)
  %7839 = load ptr, ptr @fun_Core_bool_is_1_equals_else.79, align 8
  call void @free_candy_value(ptr %7839)
  %7840 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %7840)
  %7841 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %7841)
  %7842 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %7842)
  %7843 = load ptr, ptr @fun_Core_bool_is_1_equals_then.81, align 8
  call void @free_candy_value(ptr %7843)
  %7844 = load ptr, ptr @fun_Core_bool_is_1_equals_then.83, align 8
  call void @free_candy_value(ptr %7844)
  %7845 = load ptr, ptr @fun_Core_bool_is_1_equals_else.85, align 8
  call void @free_candy_value(ptr %7845)
  %7846 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %7846)
  %7847 = load ptr, ptr @fun_Core_bool_is_1_equals_else.87, align 8
  call void @free_candy_value(ptr %7847)
  %7848 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %7848)
  %7849 = load ptr, ptr @fun_Core_bool_is_1_equals_else.89, align 8
  call void @free_candy_value(ptr %7849)
  %7850 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %7850)
  %7851 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7851)
  %7852 = load ptr, ptr @"Core:bool:not:2", align 8
  call void @free_candy_value(ptr %7852)
  %7853 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %7853)
  %7854 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %7854)
  %7855 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %7855)
  %7856 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %7856)
  %7857 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  call void @free_candy_value(ptr %7857)
  %7858 = load ptr, ptr @fun_Core_bool_not_6_equals_then.91, align 8
  call void @free_candy_value(ptr %7858)
  %7859 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %7859)
  %7860 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %7860)
  %7861 = load ptr, ptr @fun_Core_bool_not_6_equals_else.93, align 8
  call void @free_candy_value(ptr %7861)
  %7862 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %7862)
  %7863 = load ptr, ptr @fun_Core_bool_not_6_equals_else.95, align 8
  call void @free_candy_value(ptr %7863)
  %7864 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %7864)
  %7865 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7865)
  %7866 = load ptr, ptr @fun_Core_bool_not_6_equals_then.97, align 8
  call void @free_candy_value(ptr %7866)
  %7867 = load ptr, ptr @fun_Core_bool_not_6_equals_then.99, align 8
  call void @free_candy_value(ptr %7867)
  %7868 = load ptr, ptr @fun_Core_bool_not_6_equals_else.101, align 8
  call void @free_candy_value(ptr %7868)
  %7869 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %7869)
  %7870 = load ptr, ptr @fun_Core_bool_not_6_equals_else.103, align 8
  call void @free_candy_value(ptr %7870)
  %7871 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %7871)
  %7872 = load ptr, ptr @fun_Core_bool_not_6_equals_else.105, align 8
  call void @free_candy_value(ptr %7872)
  %7873 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %7873)
  %7874 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %7874)
  %7875 = load ptr, ptr @"Core:bool:lazyAnd:2", align 8
  call void @free_candy_value(ptr %7875)
  %7876 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %7876)
  %7877 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %7877)
  %7878 = load ptr, ptr @"Core:bool:lazyAnd:12", align 8
  call void @free_candy_value(ptr %7878)
  %7879 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %7879)
  %7880 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %7880)
  %7881 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %7881)
  %7882 = load ptr, ptr @"Core:bool:lazyAnd:18", align 8
  call void @free_candy_value(ptr %7882)
  %7883 = load ptr, ptr @"Core:bool:lazyAnd:18:8", align 8
  call void @free_candy_value(ptr %7883)
  %7884 = load ptr, ptr @"Core:bool:lazyAnd:18:9", align 8
  call void @free_candy_value(ptr %7884)
  %7885 = load ptr, ptr @"Core:bool:lazyAnd:18:13", align 8
  call void @free_candy_value(ptr %7885)
  %7886 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %7886)
  %7887 = load ptr, ptr @"Core:bool:lazyAnd:18:21", align 8
  call void @free_candy_value(ptr %7887)
  %7888 = load ptr, ptr @"Core:bool:and:2", align 8
  call void @free_candy_value(ptr %7888)
  %7889 = load ptr, ptr @"Core:bool:and:4", align 8
  call void @free_candy_value(ptr %7889)
  %7890 = load ptr, ptr @"Core:bool:and:7", align 8
  call void @free_candy_value(ptr %7890)
  %7891 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %7891)
  %7892 = load ptr, ptr @"Core:bool:and:9", align 8
  call void @free_candy_value(ptr %7892)
  %7893 = load ptr, ptr @"Core:bool:and:13", align 8
  call void @free_candy_value(ptr %7893)
  %7894 = load ptr, ptr @"Core:bool:lazyOr:2", align 8
  call void @free_candy_value(ptr %7894)
  %7895 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %7895)
  %7896 = load ptr, ptr @"Core:bool:lazyOr:12", align 8
  call void @free_candy_value(ptr %7896)
  %7897 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %7897)
  %7898 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %7898)
  %7899 = load ptr, ptr @"Core:bool:lazyOr:18", align 8
  call void @free_candy_value(ptr %7899)
  %7900 = load ptr, ptr @"Core:bool:lazyOr:18:9", align 8
  call void @free_candy_value(ptr %7900)
  %7901 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  call void @free_candy_value(ptr %7901)
  %7902 = load ptr, ptr @"Core:bool:lazyOr:18:14", align 8
  call void @free_candy_value(ptr %7902)
  %7903 = load ptr, ptr @"Core:bool:lazyOr:18:22", align 8
  call void @free_candy_value(ptr %7903)
  %7904 = load ptr, ptr @"Core:bool:or:2", align 8
  call void @free_candy_value(ptr %7904)
  %7905 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %7905)
  %7906 = load ptr, ptr @"Core:bool:or:7", align 8
  call void @free_candy_value(ptr %7906)
  %7907 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %7907)
  %7908 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %7908)
  %7909 = load ptr, ptr @"Core:bool:xor:2", align 8
  call void @free_candy_value(ptr %7909)
  %7910 = load ptr, ptr @"Core:bool:xor:4", align 8
  call void @free_candy_value(ptr %7910)
  %7911 = load ptr, ptr @"Core:bool:xor:7", align 8
  call void @free_candy_value(ptr %7911)
  %7912 = load ptr, ptr @"Core:bool:xor:9", align 8
  call void @free_candy_value(ptr %7912)
  %7913 = load ptr, ptr @"Core:bool:xor:14", align 8
  call void @free_candy_value(ptr %7913)
  %7914 = load ptr, ptr @"Core:bool:xor:15", align 8
  call void @free_candy_value(ptr %7914)
  %7915 = load ptr, ptr @"Core:bool:implies:2", align 8
  call void @free_candy_value(ptr %7915)
  %7916 = load ptr, ptr @"Core:bool:implies:4", align 8
  call void @free_candy_value(ptr %7916)
  %7917 = load ptr, ptr @"Core:bool:implies:7", align 8
  call void @free_candy_value(ptr %7917)
  %7918 = load ptr, ptr @"Core:bool:implies:9", align 8
  call void @free_candy_value(ptr %7918)
  %7919 = load ptr, ptr @"Core:bool:implies:12", align 8
  call void @free_candy_value(ptr %7919)
  %7920 = load ptr, ptr @"Core:bool:implies:15", align 8
  call void @free_candy_value(ptr %7920)
  %7921 = load ptr, ptr @tag_LazyAnd, align 8
  call void @free_candy_value(ptr %7921)
  %7922 = load ptr, ptr @tag_Not, align 8
  call void @free_candy_value(ptr %7922)
  %7923 = load ptr, ptr @tag_Xor, align 8
  call void @free_candy_value(ptr %7923)
  %7924 = load ptr, ptr @tag_Implies, align 8
  call void @free_candy_value(ptr %7924)
  %7925 = load ptr, ptr @tag_LazyOr, align 8
  call void @free_candy_value(ptr %7925)
  %7926 = load ptr, ptr @tag_And, align 8
  call void @free_candy_value(ptr %7926)
  %7927 = load ptr, ptr @tag_Or, align 8
  call void @free_candy_value(ptr %7927)
  %7928 = load ptr, ptr @"Core:controlFlow:59", align 8
  call void @free_candy_value(ptr %7928)
  %7929 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %7929)
  %7930 = load ptr, ptr @"Core:check:check:7", align 8
  call void @free_candy_value(ptr %7930)
  %7931 = load ptr, ptr @"Core:check:check:9", align 8
  call void @free_candy_value(ptr %7931)
  %7932 = load ptr, ptr @"Core:check:check:11", align 8
  call void @free_candy_value(ptr %7932)
  %7933 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @free_candy_value(ptr %7933)
  %7934 = load ptr, ptr @"Core:check:check:20", align 8
  call void @free_candy_value(ptr %7934)
  %7935 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  call void @free_candy_value(ptr %7935)
  %7936 = load ptr, ptr @"Core:controlFlow:recursive:7", align 8
  call void @free_candy_value(ptr %7936)
  %7937 = load ptr, ptr @"Core:controlFlow:recursive:9", align 8
  call void @free_candy_value(ptr %7937)
  %7938 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %7938)
  %7939 = load ptr, ptr @"Core:controlFlow:recursive:17", align 8
  call void @free_candy_value(ptr %7939)
  %7940 = load ptr, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  call void @free_candy_value(ptr %7940)
  %7941 = load ptr, ptr @"Core:controlFlow:recursive:18:5", align 8
  call void @free_candy_value(ptr %7941)
  %7942 = load ptr, ptr @"Core:controlFlow:recursive:23", align 8
  call void @free_candy_value(ptr %7942)
  %7943 = load ptr, ptr @"Core:int:is:7", align 8
  call void @free_candy_value(ptr %7943)
  %7944 = load ptr, ptr @"Core:int:is:10", align 8
  call void @free_candy_value(ptr %7944)
  %7945 = load ptr, ptr @num_42, align 8
  call void @free_candy_value(ptr %7945)
  %7946 = load ptr, ptr @"Core:int:72", align 8
  call void @free_candy_value(ptr %7946)
  %7947 = load ptr, ptr @"Core:int:81", align 8
  call void @free_candy_value(ptr %7947)
  %7948 = load ptr, ptr @"Core:int:negate:4", align 8
  call void @free_candy_value(ptr %7948)
  %7949 = load ptr, ptr @"Core:int:negate:8", align 8
  call void @free_candy_value(ptr %7949)
  %7950 = load ptr, ptr @"Core:int:90", align 8
  call void @free_candy_value(ptr %7950)
  %7951 = load ptr, ptr @"Core:int:99", align 8
  call void @free_candy_value(ptr %7951)
  %7952 = load ptr, ptr @"Core:int:108", align 8
  call void @free_candy_value(ptr %7952)
  %7953 = load ptr, ptr @"Core:int:117", align 8
  call void @free_candy_value(ptr %7953)
  %7954 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %7954)
  %7955 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %7955)
  %7956 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %7956)
  %7957 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %7957)
  %7958 = load ptr, ptr @"Core:int:compareTo:18", align 8
  call void @free_candy_value(ptr %7958)
  %7959 = load ptr, ptr @"Core:int:compareTo:20", align 8
  call void @free_candy_value(ptr %7959)
  %7960 = load ptr, ptr @"Core:int:compareTo:26", align 8
  call void @free_candy_value(ptr %7960)
  %7961 = load ptr, ptr @"Core:int:compareTo:34", align 8
  call void @free_candy_value(ptr %7961)
  %7962 = load ptr, ptr @"Core:int:compareTo:38", align 8
  call void @free_candy_value(ptr %7962)
  %7963 = load ptr, ptr @"Core:int:compareTo:39", align 8
  call void @free_candy_value(ptr %7963)
  %7964 = load ptr, ptr @"Core:int:compareTo:40", align 8
  call void @free_candy_value(ptr %7964)
  %7965 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %7965)
  %7966 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %7966)
  %7967 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %7967)
  %7968 = load ptr, ptr @"Core:int:isLessThan:16", align 8
  call void @free_candy_value(ptr %7968)
  %7969 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %7969)
  %7970 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %7970)
  %7971 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %7971)
  %7972 = load ptr, ptr @"Core:int:isGreaterThan:16", align 8
  call void @free_candy_value(ptr %7972)
  %7973 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %7973)
  %7974 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %7974)
  %7975 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %7975)
  %7976 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:21", align 8
  call void @free_candy_value(ptr %7976)
  %7977 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %7977)
  %7978 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %7978)
  %7979 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %7979)
  %7980 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %7980)
  %7981 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:21", align 8
  call void @free_candy_value(ptr %7981)
  %7982 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %7982)
  %7983 = load ptr, ptr @"Core:int:isPositive:4", align 8
  call void @free_candy_value(ptr %7983)
  %7984 = load ptr, ptr @"Core:int:isPositive:8", align 8
  call void @free_candy_value(ptr %7984)
  %7985 = load ptr, ptr @"Core:int:isNonPositive:4", align 8
  call void @free_candy_value(ptr %7985)
  %7986 = load ptr, ptr @"Core:int:isNonPositive:7", align 8
  call void @free_candy_value(ptr %7986)
  %7987 = load ptr, ptr @"Core:int:isNonPositive:15", align 8
  call void @free_candy_value(ptr %7987)
  %7988 = load ptr, ptr @"Core:int:isNonPositive:16", align 8
  call void @free_candy_value(ptr %7988)
  %7989 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %7989)
  %7990 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %7990)
  %7991 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %7991)
  %7992 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %7992)
  %7993 = load ptr, ptr @"Core:int:isNonNegative:15", align 8
  call void @free_candy_value(ptr %7993)
  %7994 = load ptr, ptr @"Core:int:isNonNegative:16", align 8
  call void @free_candy_value(ptr %7994)
  %7995 = load ptr, ptr @"Core:int:absolute:4", align 8
  call void @free_candy_value(ptr %7995)
  %7996 = load ptr, ptr @"Core:int:absolute:8", align 8
  call void @free_candy_value(ptr %7996)
  %7997 = load ptr, ptr @"Core:int:absolute:9:2", align 8
  call void @free_candy_value(ptr %7997)
  %7998 = load ptr, ptr @"Core:int:absolute:11", align 8
  call void @free_candy_value(ptr %7998)
  %7999 = load ptr, ptr @"Core:int:fitsInRustU32:4", align 8
  call void @free_candy_value(ptr %7999)
  %8000 = load ptr, ptr @"Core:int:fitsInRustU32:7", align 8
  call void @free_candy_value(ptr %8000)
  %8001 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  call void @free_candy_value(ptr %8001)
  %8002 = load ptr, ptr @"Core:int:fitsInRustU32:9", align 8
  call void @free_candy_value(ptr %8002)
  %8003 = load ptr, ptr @num_4294967295, align 8
  call void @free_candy_value(ptr %8003)
  %8004 = load ptr, ptr @"Core:int:fitsInRustU32:15", align 8
  call void @free_candy_value(ptr %8004)
  %8005 = load ptr, ptr @"Core:int:fitsInRustU128:4", align 8
  call void @free_candy_value(ptr %8005)
  %8006 = load ptr, ptr @"Core:int:fitsInRustU128:7", align 8
  call void @free_candy_value(ptr %8006)
  %8007 = load ptr, ptr @"Core:int:fitsInRustU128:9", align 8
  call void @free_candy_value(ptr %8007)
  %8008 = load ptr, ptr @"Core:int:fitsInRustU128:15", align 8
  call void @free_candy_value(ptr %8008)
  %8009 = load ptr, ptr @"Core:int:126", align 8
  call void @free_candy_value(ptr %8009)
  %8010 = load ptr, ptr @"Core:int:135", align 8
  call void @free_candy_value(ptr %8010)
  %8011 = load ptr, ptr @"Core:int:144", align 8
  call void @free_candy_value(ptr %8011)
  %8012 = load ptr, ptr @"Core:int:153", align 8
  call void @free_candy_value(ptr %8012)
  %8013 = load ptr, ptr @"Core:int:162", align 8
  call void @free_candy_value(ptr %8013)
  %8014 = load ptr, ptr @"Core:int:171", align 8
  call void @free_candy_value(ptr %8014)
  %8015 = load ptr, ptr @"Core:int:isEven:4", align 8
  call void @free_candy_value(ptr %8015)
  %8016 = load ptr, ptr @"Core:int:isEven:8", align 8
  call void @free_candy_value(ptr %8016)
  %8017 = load ptr, ptr @"Core:int:isEven:11", align 8
  call void @free_candy_value(ptr %8017)
  %8018 = load ptr, ptr @"Core:int:isOdd:4", align 8
  call void @free_candy_value(ptr %8018)
  %8019 = load ptr, ptr @"Core:int:isOdd:8", align 8
  call void @free_candy_value(ptr %8019)
  %8020 = load ptr, ptr @"Core:int:isOdd:11", align 8
  call void @free_candy_value(ptr %8020)
  %8021 = load ptr, ptr @"Core:int:isOdd:16", align 8
  call void @free_candy_value(ptr %8021)
  %8022 = load ptr, ptr @"Core:int:isOdd:26", align 8
  call void @free_candy_value(ptr %8022)
  %8023 = load ptr, ptr @"Core:int:isOdd:27", align 8
  call void @free_candy_value(ptr %8023)
  %8024 = load ptr, ptr @"Core:int:isOdd:28", align 8
  call void @free_candy_value(ptr %8024)
  %8025 = load ptr, ptr @"Core:int:isOdd:29", align 8
  call void @free_candy_value(ptr %8025)
  %8026 = load ptr, ptr @"Core:int:min:4", align 8
  call void @free_candy_value(ptr %8026)
  %8027 = load ptr, ptr @"Core:int:min:9", align 8
  call void @free_candy_value(ptr %8027)
  %8028 = load ptr, ptr @"Core:int:min:14", align 8
  call void @free_candy_value(ptr %8028)
  %8029 = load ptr, ptr @"Core:int:min:17", align 8
  call void @free_candy_value(ptr %8029)
  %8030 = load ptr, ptr @"Core:int:max:4", align 8
  call void @free_candy_value(ptr %8030)
  %8031 = load ptr, ptr @"Core:int:max:9", align 8
  call void @free_candy_value(ptr %8031)
  %8032 = load ptr, ptr @"Core:int:max:14", align 8
  call void @free_candy_value(ptr %8032)
  %8033 = load ptr, ptr @"Core:int:max:17", align 8
  call void @free_candy_value(ptr %8033)
  %8034 = load ptr, ptr @"Core:int:coerceAtLeast:4", align 8
  call void @free_candy_value(ptr %8034)
  %8035 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  call void @free_candy_value(ptr %8035)
  %8036 = load ptr, ptr @"Core:int:coerceAtLeast:9", align 8
  call void @free_candy_value(ptr %8036)
  %8037 = load ptr, ptr @"Core:int:coerceAtLeast:13", align 8
  call void @free_candy_value(ptr %8037)
  %8038 = load ptr, ptr @"Core:int:coerceAtMost:4", align 8
  call void @free_candy_value(ptr %8038)
  %8039 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  call void @free_candy_value(ptr %8039)
  %8040 = load ptr, ptr @"Core:int:coerceAtMost:9", align 8
  call void @free_candy_value(ptr %8040)
  %8041 = load ptr, ptr @"Core:int:coerceAtMost:13", align 8
  call void @free_candy_value(ptr %8041)
  %8042 = load ptr, ptr @"Core:int:coerceIn:4", align 8
  call void @free_candy_value(ptr %8042)
  %8043 = load ptr, ptr @"Core:int:coerceIn:9", align 8
  call void @free_candy_value(ptr %8043)
  %8044 = load ptr, ptr @"Core:int:coerceIn:14", align 8
  call void @free_candy_value(ptr %8044)
  %8045 = load ptr, ptr @"Core:int:coerceIn:18", align 8
  call void @free_candy_value(ptr %8045)
  %8046 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  call void @free_candy_value(ptr %8046)
  %8047 = load ptr, ptr @"Core:int:coerceIn:20", align 8
  call void @free_candy_value(ptr %8047)
  %8048 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  call void @free_candy_value(ptr %8048)
  %8049 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  call void @free_candy_value(ptr %8049)
  %8050 = load ptr, ptr @"Core:int:180", align 8
  call void @free_candy_value(ptr %8050)
  %8051 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  call void @free_candy_value(ptr %8051)
  %8052 = load ptr, ptr @"Core:int:pow:4", align 8
  call void @free_candy_value(ptr %8052)
  %8053 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %8053)
  %8054 = load ptr, ptr @"Core:int:pow:9", align 8
  call void @free_candy_value(ptr %8054)
  %8055 = load ptr, ptr @"Core:int:pow:12", align 8
  call void @free_candy_value(ptr %8055)
  %8056 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %8056)
  %8057 = load ptr, ptr @"Core:int:pow:14", align 8
  call void @free_candy_value(ptr %8057)
  %8058 = load ptr, ptr @tag_Base, align 8
  call void @free_candy_value(ptr %8058)
  %8059 = load ptr, ptr @tag_Exponent, align 8
  call void @free_candy_value(ptr %8059)
  %8060 = load ptr, ptr @"Core:int:pow:21:1", align 8
  call void @free_candy_value(ptr %8060)
  %8061 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  call void @free_candy_value(ptr %8061)
  %8062 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  call void @free_candy_value(ptr %8062)
  %8063 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %8063)
  %8064 = load ptr, ptr @"Core:int:pow:21:base", align 8
  call void @free_candy_value(ptr %8064)
  %8065 = load ptr, ptr @"Core:int:pow:21:exponent", align 8
  call void @free_candy_value(ptr %8065)
  %8066 = load ptr, ptr @"Core:int:pow:21:4", align 8
  call void @free_candy_value(ptr %8066)
  %8067 = load ptr, ptr @"text_Expected `0`, got `", align 8
  call void @free_candy_value(ptr %8067)
  %8068 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  call void @free_candy_value(ptr %8068)
  %8069 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  call void @free_candy_value(ptr %8069)
  %8070 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  call void @free_candy_value(ptr %8070)
  %8071 = load ptr, ptr @"Core:int:pow:21:4:5:10", align 8
  call void @free_candy_value(ptr %8071)
  %8072 = load ptr, ptr @"Core:int:pow:21:4:5:12", align 8
  call void @free_candy_value(ptr %8072)
  %8073 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  call void @free_candy_value(ptr %8073)
  %8074 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  call void @free_candy_value(ptr %8074)
  %8075 = load ptr, ptr @"Core:int:pow:21:4:6:15", align 8
  call void @free_candy_value(ptr %8075)
  %8076 = load ptr, ptr @"Core:int:pow:21:4:6:17", align 8
  call void @free_candy_value(ptr %8076)
  %8077 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  call void @free_candy_value(ptr %8077)
  %8078 = load ptr, ptr @"Core:int:pow:21:4:7", align 8
  call void @free_candy_value(ptr %8078)
  %8079 = load ptr, ptr @"Core:int:pow:22", align 8
  call void @free_candy_value(ptr %8079)
  %8080 = load ptr, ptr @tag_IsLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %8080)
  %8081 = load ptr, ptr @tag_BitwiseAnd, align 8
  call void @free_candy_value(ptr %8081)
  %8082 = load ptr, ptr @tag_BitwiseOr, align 8
  call void @free_candy_value(ptr %8082)
  %8083 = load ptr, ptr @tag_CoerceAtMost, align 8
  call void @free_candy_value(ptr %8083)
  %8084 = load ptr, ptr @tag_Remainder, align 8
  call void @free_candy_value(ptr %8084)
  %8085 = load ptr, ptr @tag_FitsInRustU32, align 8
  call void @free_candy_value(ptr %8085)
  %8086 = load ptr, ptr @tag_ShiftLeft, align 8
  call void @free_candy_value(ptr %8086)
  %8087 = load ptr, ptr @tag_IsPositive, align 8
  call void @free_candy_value(ptr %8087)
  %8088 = load ptr, ptr @tag_CoerceIn, align 8
  call void @free_candy_value(ptr %8088)
  %8089 = load ptr, ptr @tag_IsNegative, align 8
  call void @free_candy_value(ptr %8089)
  %8090 = load ptr, ptr @tag_IsNonNegative, align 8
  call void @free_candy_value(ptr %8090)
  %8091 = load ptr, ptr @tag_Modulo, align 8
  call void @free_candy_value(ptr %8091)
  %8092 = load ptr, ptr @tag_Parse, align 8
  call void @free_candy_value(ptr %8092)
  %8093 = load ptr, ptr @tag_IsGreaterThan, align 8
  call void @free_candy_value(ptr %8093)
  %8094 = load ptr, ptr @tag_IsNonPositive, align 8
  call void @free_candy_value(ptr %8094)
  %8095 = load ptr, ptr @tag_Multiply, align 8
  call void @free_candy_value(ptr %8095)
  %8096 = load ptr, ptr @tag_DivideTruncating, align 8
  call void @free_candy_value(ptr %8096)
  %8097 = load ptr, ptr @tag_Add, align 8
  call void @free_candy_value(ptr %8097)
  %8098 = load ptr, ptr @tag_BitwiseXor, align 8
  call void @free_candy_value(ptr %8098)
  %8099 = load ptr, ptr @tag_IsOdd, align 8
  call void @free_candy_value(ptr %8099)
  %8100 = load ptr, ptr @tag_IsGreaterThanOrEqualTo, align 8
  call void @free_candy_value(ptr %8100)
  %8101 = load ptr, ptr @tag_IsLessThan, align 8
  call void @free_candy_value(ptr %8101)
  %8102 = load ptr, ptr @tag_Negate, align 8
  call void @free_candy_value(ptr %8102)
  %8103 = load ptr, ptr @tag_Pow, align 8
  call void @free_candy_value(ptr %8103)
  %8104 = load ptr, ptr @tag_ShiftRight, align 8
  call void @free_candy_value(ptr %8104)
  %8105 = load ptr, ptr @tag_IsEven, align 8
  call void @free_candy_value(ptr %8105)
  %8106 = load ptr, ptr @tag_Max, align 8
  call void @free_candy_value(ptr %8106)
  %8107 = load ptr, ptr @tag_BitLength, align 8
  call void @free_candy_value(ptr %8107)
  %8108 = load ptr, ptr @tag_Min, align 8
  call void @free_candy_value(ptr %8108)
  %8109 = load ptr, ptr @tag_FitsInRustU128, align 8
  call void @free_candy_value(ptr %8109)
  %8110 = load ptr, ptr @tag_CoerceAtLeast, align 8
  call void @free_candy_value(ptr %8110)
  %8111 = load ptr, ptr @tag_CompareTo, align 8
  call void @free_candy_value(ptr %8111)
  %8112 = load ptr, ptr @tag_Absolute, align 8
  call void @free_candy_value(ptr %8112)
  %8113 = load ptr, ptr @tag_Subtract, align 8
  call void @free_candy_value(ptr %8113)
  %8114 = load ptr, ptr @tag_TheAnswer, align 8
  call void @free_candy_value(ptr %8114)
  %8115 = load ptr, ptr @"Core:tag:is:7", align 8
  call void @free_candy_value(ptr %8115)
  %8116 = load ptr, ptr @"Core:tag:is:10", align 8
  call void @free_candy_value(ptr %8116)
  %8117 = load ptr, ptr @"Core:tag:48", align 8
  call void @free_candy_value(ptr %8117)
  %8118 = load ptr, ptr @"Core:tag:57", align 8
  call void @free_candy_value(ptr %8118)
  %8119 = load ptr, ptr @"Core:tag:66", align 8
  call void @free_candy_value(ptr %8119)
  %8120 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  call void @free_candy_value(ptr %8120)
  %8121 = load ptr, ptr @"Core:tag:withSymbol:4", align 8
  call void @free_candy_value(ptr %8121)
  %8122 = load ptr, ptr @"text_`is symbolTag` was not satisfied", align 8
  call void @free_candy_value(ptr %8122)
  %8123 = load ptr, ptr @"Core:tag:withSymbol:9", align 8
  call void @free_candy_value(ptr %8123)
  %8124 = load ptr, ptr @"Core:tag:withSymbol:12", align 8
  call void @free_candy_value(ptr %8124)
  %8125 = load ptr, ptr @"Core:tag:withSymbol:20", align 8
  call void @free_candy_value(ptr %8125)
  %8126 = load ptr, ptr @"Core:tag:withSymbol:21", align 8
  call void @free_candy_value(ptr %8126)
  %8127 = load ptr, ptr @"text_`symbolTag | hasValue | bool.not` was not satisfied", align 8
  call void @free_candy_value(ptr %8127)
  %8128 = load ptr, ptr @"Core:tag:withSymbol:23", align 8
  call void @free_candy_value(ptr %8128)
  %8129 = load ptr, ptr @"Core:tag:withSymbol:27", align 8
  call void @free_candy_value(ptr %8129)
  %8130 = load ptr, ptr @"Core:tag:withSymbol:28:3", align 8
  call void @free_candy_value(ptr %8130)
  %8131 = load ptr, ptr @"Core:tag:withSymbol:28:4", align 8
  call void @free_candy_value(ptr %8131)
  %8132 = load ptr, ptr @"Core:tag:withSymbol:29:2", align 8
  call void @free_candy_value(ptr %8132)
  %8133 = load ptr, ptr @"Core:tag:withSymbol:30", align 8
  call void @free_candy_value(ptr %8133)
  %8134 = load ptr, ptr @"Core:tag:withValue:4", align 8
  call void @free_candy_value(ptr %8134)
  %8135 = load ptr, ptr @"Core:tag:withValue:7", align 8
  call void @free_candy_value(ptr %8135)
  %8136 = load ptr, ptr @"Core:tag:withValue:9", align 8
  call void @free_candy_value(ptr %8136)
  %8137 = load ptr, ptr @tag_HasValue, align 8
  call void @free_candy_value(ptr %8137)
  %8138 = load ptr, ptr @tag_WithValue, align 8
  call void @free_candy_value(ptr %8138)
  %8139 = load ptr, ptr @tag_GetValue, align 8
  call void @free_candy_value(ptr %8139)
  %8140 = load ptr, ptr @tag_WithoutValue, align 8
  call void @free_candy_value(ptr %8140)
  %8141 = load ptr, ptr @tag_WithSymbol, align 8
  call void @free_candy_value(ptr %8141)
  %8142 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %8142)
  %8143 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %8143)
  %8144 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %8144)
  %8145 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %8145)
  %8146 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %8146)
  %8147 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %8147)
  %8148 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %8148)
  %8149 = load ptr, ptr @"Core:result:is:1:_", align 8
  call void @free_candy_value(ptr %8149)
  %8150 = load ptr, ptr @fun_Core_result_is, align 8
  call void @free_candy_value(ptr %8150)
  %8151 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %8151)
  %8152 = load ptr, ptr @fun_Core_result_is_1_equals_then.109, align 8
  call void @free_candy_value(ptr %8152)
  %8153 = load ptr, ptr @fun_Core_result_is_1_equals_then.111, align 8
  call void @free_candy_value(ptr %8153)
  %8154 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %8154)
  %8155 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %8155)
  %8156 = load ptr, ptr @fun_Core_result_is_1_equals_else.113, align 8
  call void @free_candy_value(ptr %8156)
  %8157 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %8157)
  %8158 = load ptr, ptr @fun_Core_result_is_1_equals_else.115, align 8
  call void @free_candy_value(ptr %8158)
  %8159 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %8159)
  %8160 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %8160)
  %8161 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %8161)
  %8162 = load ptr, ptr @fun_Core_result_is_1_equals_then.117, align 8
  call void @free_candy_value(ptr %8162)
  %8163 = load ptr, ptr @fun_Core_result_is_1_equals_then.119, align 8
  call void @free_candy_value(ptr %8163)
  %8164 = load ptr, ptr @fun_Core_result_is_1_equals_then.121, align 8
  call void @free_candy_value(ptr %8164)
  %8165 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %8165)
  %8166 = load ptr, ptr @fun_Core_result_is_1_equals_else.123, align 8
  call void @free_candy_value(ptr %8166)
  %8167 = load ptr, ptr @fun_Core_result_is_1_equals_else.125, align 8
  call void @free_candy_value(ptr %8167)
  %8168 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %8168)
  %8169 = load ptr, ptr @fun_Core_result_is_1_equals_else.127, align 8
  call void @free_candy_value(ptr %8169)
  %8170 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %8170)
  %8171 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %8171)
  %8172 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %8172)
  %8173 = load ptr, ptr @"Core:result:getValue:2", align 8
  call void @free_candy_value(ptr %8173)
  %8174 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %8174)
  %8175 = load ptr, ptr @"Core:result:getValue:4", align 8
  call void @free_candy_value(ptr %8175)
  %8176 = load ptr, ptr @"Core:result:getValue:13", align 8
  call void @free_candy_value(ptr %8176)
  %8177 = load ptr, ptr @"Core:result:getValue:14", align 8
  call void @free_candy_value(ptr %8177)
  %8178 = load ptr, ptr @"Core:result:isOk:2", align 8
  call void @free_candy_value(ptr %8178)
  %8179 = load ptr, ptr @"Core:result:isOk:4", align 8
  call void @free_candy_value(ptr %8179)
  %8180 = load ptr, ptr @"Core:result:isOk:13", align 8
  call void @free_candy_value(ptr %8180)
  %8181 = load ptr, ptr @"Core:result:isOk:14", align 8
  call void @free_candy_value(ptr %8181)
  %8182 = load ptr, ptr @"Core:result:isOk:17", align 8
  call void @free_candy_value(ptr %8182)
  %8183 = load ptr, ptr @"Core:result:unwrap:2", align 8
  call void @free_candy_value(ptr %8183)
  %8184 = load ptr, ptr @"Core:result:unwrap:4", align 8
  call void @free_candy_value(ptr %8184)
  %8185 = load ptr, ptr @"Core:result:unwrap:7", align 8
  call void @free_candy_value(ptr %8185)
  %8186 = load ptr, ptr @"text_`isOk result` was not satisfied", align 8
  call void @free_candy_value(ptr %8186)
  %8187 = load ptr, ptr @"Core:result:unwrap:9", align 8
  call void @free_candy_value(ptr %8187)
  %8188 = load ptr, ptr @"Core:result:unwrap:12", align 8
  call void @free_candy_value(ptr %8188)
  %8189 = load ptr, ptr @"Core:result:expect:2", align 8
  call void @free_candy_value(ptr %8189)
  %8190 = load ptr, ptr @"Core:result:expect:4", align 8
  call void @free_candy_value(ptr %8190)
  %8191 = load ptr, ptr @"Core:result:expect:12", align 8
  call void @free_candy_value(ptr %8191)
  %8192 = load ptr, ptr @"Core:result:expect:15", align 8
  call void @free_candy_value(ptr %8192)
  %8193 = load ptr, ptr @"text_`type.is message Text` was not satisfied", align 8
  call void @free_candy_value(ptr %8193)
  %8194 = load ptr, ptr @"Core:result:expect:17", align 8
  call void @free_candy_value(ptr %8194)
  %8195 = load ptr, ptr @"Core:result:expect:20", align 8
  call void @free_candy_value(ptr %8195)
  %8196 = load ptr, ptr @"Core:result:expect:22", align 8
  call void @free_candy_value(ptr %8196)
  %8197 = load ptr, ptr @"Core:result:expect:25", align 8
  call void @free_candy_value(ptr %8197)
  %8198 = load ptr, ptr @"Core:result:isError:2", align 8
  call void @free_candy_value(ptr %8198)
  %8199 = load ptr, ptr @"Core:result:isError:4", align 8
  call void @free_candy_value(ptr %8199)
  %8200 = load ptr, ptr @"Core:result:isError:13", align 8
  call void @free_candy_value(ptr %8200)
  %8201 = load ptr, ptr @"Core:result:isError:14", align 8
  call void @free_candy_value(ptr %8201)
  %8202 = load ptr, ptr @"Core:result:isError:17", align 8
  call void @free_candy_value(ptr %8202)
  %8203 = load ptr, ptr @"Core:result:unwrapError:2", align 8
  call void @free_candy_value(ptr %8203)
  %8204 = load ptr, ptr @"Core:result:unwrapError:4", align 8
  call void @free_candy_value(ptr %8204)
  %8205 = load ptr, ptr @"Core:result:unwrapError:7", align 8
  call void @free_candy_value(ptr %8205)
  %8206 = load ptr, ptr @"text_`isError result` was not satisfied", align 8
  call void @free_candy_value(ptr %8206)
  %8207 = load ptr, ptr @"Core:result:unwrapError:9", align 8
  call void @free_candy_value(ptr %8207)
  %8208 = load ptr, ptr @"Core:result:unwrapError:12", align 8
  call void @free_candy_value(ptr %8208)
  %8209 = load ptr, ptr @"Core:result:expectError:2", align 8
  call void @free_candy_value(ptr %8209)
  %8210 = load ptr, ptr @"Core:result:expectError:4", align 8
  call void @free_candy_value(ptr %8210)
  %8211 = load ptr, ptr @"Core:result:expectError:12", align 8
  call void @free_candy_value(ptr %8211)
  %8212 = load ptr, ptr @"Core:result:expectError:15", align 8
  call void @free_candy_value(ptr %8212)
  %8213 = load ptr, ptr @"Core:result:expectError:17", align 8
  call void @free_candy_value(ptr %8213)
  %8214 = load ptr, ptr @"Core:result:expectError:20", align 8
  call void @free_candy_value(ptr %8214)
  %8215 = load ptr, ptr @"Core:result:expectError:22", align 8
  call void @free_candy_value(ptr %8215)
  %8216 = load ptr, ptr @"Core:result:expectError:25", align 8
  call void @free_candy_value(ptr %8216)
  %8217 = load ptr, ptr @"Core:result:mapOrElse:2", align 8
  call void @free_candy_value(ptr %8217)
  %8218 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %8218)
  %8219 = load ptr, ptr @"Core:result:mapOrElse:12", align 8
  call void @free_candy_value(ptr %8219)
  %8220 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %8220)
  %8221 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %8221)
  %8222 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %8222)
  %8223 = load ptr, ptr @"Core:result:mapOrElse:24", align 8
  call void @free_candy_value(ptr %8223)
  %8224 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %8224)
  %8225 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %8225)
  %8226 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %8226)
  %8227 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %8227)
  %8228 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %8228)
  %8229 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %8229)
  %8230 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %8230)
  %8231 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %8231)
  %8232 = load ptr, ptr @"Core:result:mapOr:2", align 8
  call void @free_candy_value(ptr %8232)
  %8233 = load ptr, ptr @"Core:result:mapOr:4", align 8
  call void @free_candy_value(ptr %8233)
  %8234 = load ptr, ptr @"Core:result:mapOr:12", align 8
  call void @free_candy_value(ptr %8234)
  %8235 = load ptr, ptr @"Core:result:mapOr:14", align 8
  call void @free_candy_value(ptr %8235)
  %8236 = load ptr, ptr @"Core:result:mapOr:16", align 8
  call void @free_candy_value(ptr %8236)
  %8237 = load ptr, ptr @"Core:result:mapOr:21", align 8
  call void @free_candy_value(ptr %8237)
  %8238 = load ptr, ptr @"Core:result:flatMap:2", align 8
  call void @free_candy_value(ptr %8238)
  %8239 = load ptr, ptr @"Core:result:flatMap:4", align 8
  call void @free_candy_value(ptr %8239)
  %8240 = load ptr, ptr @"Core:result:flatMap:12", align 8
  call void @free_candy_value(ptr %8240)
  %8241 = load ptr, ptr @"Core:result:flatMap:14", align 8
  call void @free_candy_value(ptr %8241)
  %8242 = load ptr, ptr @"Core:result:flatMap:16", align 8
  call void @free_candy_value(ptr %8242)
  %8243 = load ptr, ptr @"Core:result:flatMap:19:2", align 8
  call void @free_candy_value(ptr %8243)
  %8244 = load ptr, ptr @"Core:result:flatMap:21", align 8
  call void @free_candy_value(ptr %8244)
  %8245 = load ptr, ptr @"Core:result:map:2", align 8
  call void @free_candy_value(ptr %8245)
  %8246 = load ptr, ptr @"Core:result:map:4", align 8
  call void @free_candy_value(ptr %8246)
  %8247 = load ptr, ptr @"Core:result:map:12", align 8
  call void @free_candy_value(ptr %8247)
  %8248 = load ptr, ptr @"Core:result:map:14", align 8
  call void @free_candy_value(ptr %8248)
  %8249 = load ptr, ptr @"Core:result:map:16", align 8
  call void @free_candy_value(ptr %8249)
  %8250 = load ptr, ptr @"Core:result:map:19:3", align 8
  call void @free_candy_value(ptr %8250)
  %8251 = load ptr, ptr @"Core:result:map:20", align 8
  call void @free_candy_value(ptr %8251)
  %8252 = load ptr, ptr @"Core:result:and:2", align 8
  call void @free_candy_value(ptr %8252)
  %8253 = load ptr, ptr @"text_`is resultA` was not satisfied", align 8
  call void @free_candy_value(ptr %8253)
  %8254 = load ptr, ptr @"Core:result:and:4", align 8
  call void @free_candy_value(ptr %8254)
  %8255 = load ptr, ptr @"Core:result:and:7", align 8
  call void @free_candy_value(ptr %8255)
  %8256 = load ptr, ptr @"text_`is resultB` was not satisfied", align 8
  call void @free_candy_value(ptr %8256)
  %8257 = load ptr, ptr @"Core:result:and:9", align 8
  call void @free_candy_value(ptr %8257)
  %8258 = load ptr, ptr @"Core:result:and:13", align 8
  call void @free_candy_value(ptr %8258)
  %8259 = load ptr, ptr @"Core:result:flatMapError:2", align 8
  call void @free_candy_value(ptr %8259)
  %8260 = load ptr, ptr @"Core:result:flatMapError:4", align 8
  call void @free_candy_value(ptr %8260)
  %8261 = load ptr, ptr @"Core:result:flatMapError:12", align 8
  call void @free_candy_value(ptr %8261)
  %8262 = load ptr, ptr @"Core:result:flatMapError:14", align 8
  call void @free_candy_value(ptr %8262)
  %8263 = load ptr, ptr @"Core:result:flatMapError:16", align 8
  call void @free_candy_value(ptr %8263)
  %8264 = load ptr, ptr @"Core:result:flatMapError:20:2", align 8
  call void @free_candy_value(ptr %8264)
  %8265 = load ptr, ptr @"Core:result:flatMapError:21", align 8
  call void @free_candy_value(ptr %8265)
  %8266 = load ptr, ptr @"Core:result:mapError:2", align 8
  call void @free_candy_value(ptr %8266)
  %8267 = load ptr, ptr @"Core:result:mapError:4", align 8
  call void @free_candy_value(ptr %8267)
  %8268 = load ptr, ptr @"Core:result:mapError:12", align 8
  call void @free_candy_value(ptr %8268)
  %8269 = load ptr, ptr @"Core:result:mapError:14", align 8
  call void @free_candy_value(ptr %8269)
  %8270 = load ptr, ptr @"Core:result:mapError:16", align 8
  call void @free_candy_value(ptr %8270)
  %8271 = load ptr, ptr @"Core:result:mapError:19:3", align 8
  call void @free_candy_value(ptr %8271)
  %8272 = load ptr, ptr @"Core:result:mapError:20", align 8
  call void @free_candy_value(ptr %8272)
  %8273 = load ptr, ptr @"Core:result:or:2", align 8
  call void @free_candy_value(ptr %8273)
  %8274 = load ptr, ptr @"Core:result:or:4", align 8
  call void @free_candy_value(ptr %8274)
  %8275 = load ptr, ptr @"Core:result:or:7", align 8
  call void @free_candy_value(ptr %8275)
  %8276 = load ptr, ptr @"Core:result:or:9", align 8
  call void @free_candy_value(ptr %8276)
  %8277 = load ptr, ptr @"Core:result:or:13", align 8
  call void @free_candy_value(ptr %8277)
  %8278 = load ptr, ptr @"Core:result:unwrapOrElse:2", align 8
  call void @free_candy_value(ptr %8278)
  %8279 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %8279)
  %8280 = load ptr, ptr @"Core:result:unwrapOrElse:12", align 8
  call void @free_candy_value(ptr %8280)
  %8281 = load ptr, ptr @"Core:result:unwrapOrElse:14", align 8
  call void @free_candy_value(ptr %8281)
  %8282 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %8282)
  %8283 = load ptr, ptr @"Core:result:unwrapOrElse:16", align 8
  call void @free_candy_value(ptr %8283)
  %8284 = load ptr, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19", align 8
  call void @free_candy_value(ptr %8284)
  %8285 = load ptr, ptr @"Core:result:unwrapOrElse:20:7", align 8
  call void @free_candy_value(ptr %8285)
  %8286 = load ptr, ptr @"Core:result:unwrapOrElse:20:9", align 8
  call void @free_candy_value(ptr %8286)
  %8287 = load ptr, ptr @"Core:result:unwrapOrElse:21", align 8
  call void @free_candy_value(ptr %8287)
  %8288 = load ptr, ptr @"Core:result:unwrapOr:2", align 8
  call void @free_candy_value(ptr %8288)
  %8289 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %8289)
  %8290 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %8290)
  %8291 = load ptr, ptr @"Core:result:flatten:2", align 8
  call void @free_candy_value(ptr %8291)
  %8292 = load ptr, ptr @"text_`is resultOfResult` was not satisfied", align 8
  call void @free_candy_value(ptr %8292)
  %8293 = load ptr, ptr @"Core:result:flatten:4", align 8
  call void @free_candy_value(ptr %8293)
  %8294 = load ptr, ptr @"Core:result:flatten:7:2", align 8
  call void @free_candy_value(ptr %8294)
  %8295 = load ptr, ptr @"text_`is innerResult` was not satisfied", align 8
  call void @free_candy_value(ptr %8295)
  %8296 = load ptr, ptr @"Core:result:flatten:7:4", align 8
  call void @free_candy_value(ptr %8296)
  %8297 = load ptr, ptr @"Core:result:flatten:8", align 8
  call void @free_candy_value(ptr %8297)
  %8298 = load ptr, ptr @tag_UnwrapOr, align 8
  call void @free_candy_value(ptr %8298)
  %8299 = load ptr, ptr @tag_Expect, align 8
  call void @free_candy_value(ptr %8299)
  %8300 = load ptr, ptr @tag_Flatten, align 8
  call void @free_candy_value(ptr %8300)
  %8301 = load ptr, ptr @tag_MapOrElse, align 8
  call void @free_candy_value(ptr %8301)
  %8302 = load ptr, ptr @tag_Map, align 8
  call void @free_candy_value(ptr %8302)
  %8303 = load ptr, ptr @tag_IsError, align 8
  call void @free_candy_value(ptr %8303)
  %8304 = load ptr, ptr @tag_FlatMap, align 8
  call void @free_candy_value(ptr %8304)
  %8305 = load ptr, ptr @tag_ExpectError, align 8
  call void @free_candy_value(ptr %8305)
  %8306 = load ptr, ptr @tag_UnwrapError, align 8
  call void @free_candy_value(ptr %8306)
  %8307 = load ptr, ptr @tag_UnwrapOrElse, align 8
  call void @free_candy_value(ptr %8307)
  %8308 = load ptr, ptr @tag_Unwrap, align 8
  call void @free_candy_value(ptr %8308)
  %8309 = load ptr, ptr @tag_MapOr, align 8
  call void @free_candy_value(ptr %8309)
  %8310 = load ptr, ptr @tag_FlatMapError, align 8
  call void @free_candy_value(ptr %8310)
  %8311 = load ptr, ptr @tag_MapError, align 8
  call void @free_candy_value(ptr %8311)
  %8312 = load ptr, ptr @tag_IsOk, align 8
  call void @free_candy_value(ptr %8312)
  %8313 = load ptr, ptr @"Core:list:89", align 8
  call void @free_candy_value(ptr %8313)
  %8314 = load ptr, ptr @"Core:list:98", align 8
  call void @free_candy_value(ptr %8314)
  %8315 = load ptr, ptr @"text_Expected a List, got `", align 8
  call void @free_candy_value(ptr %8315)
  %8316 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  call void @free_candy_value(ptr %8316)
  %8317 = load ptr, ptr @"Core:list:107", align 8
  call void @free_candy_value(ptr %8317)
  %8318 = load ptr, ptr @"Core:list:116", align 8
  call void @free_candy_value(ptr %8318)
  %8319 = load ptr, ptr @"Core:list:125", align 8
  call void @free_candy_value(ptr %8319)
  %8320 = load ptr, ptr @"Core:list:134", align 8
  call void @free_candy_value(ptr %8320)
  %8321 = load ptr, ptr @"Core:text:341", align 8
  call void @free_candy_value(ptr %8321)
  %8322 = load ptr, ptr @"Core:text:350", align 8
  call void @free_candy_value(ptr %8322)
  %8323 = load ptr, ptr @"Core:text:359", align 8
  call void @free_candy_value(ptr %8323)
  %8324 = load ptr, ptr @"Core:text:368", align 8
  call void @free_candy_value(ptr %8324)
  %8325 = load ptr, ptr @"Core:text:377", align 8
  call void @free_candy_value(ptr %8325)
  %8326 = load ptr, ptr @"Core:text:386", align 8
  call void @free_candy_value(ptr %8326)
  %8327 = load ptr, ptr @"Core:text:395", align 8
  call void @free_candy_value(ptr %8327)
  %8328 = load ptr, ptr @"Core:text:404", align 8
  call void @free_candy_value(ptr %8328)
  %8329 = load ptr, ptr @"Core:text:413", align 8
  call void @free_candy_value(ptr %8329)
  %8330 = load ptr, ptr @"Core:text:422", align 8
  call void @free_candy_value(ptr %8330)
  %8331 = load ptr, ptr @"Core:text:431", align 8
  call void @free_candy_value(ptr %8331)
  %8332 = load ptr, ptr @"Core:toDebugText:toDebugText:7", align 8
  call void @free_candy_value(ptr %8332)
  %8333 = load ptr, ptr @"Core:toDebugText:toDebugText:9", align 8
  call void @free_candy_value(ptr %8333)
  %8334 = load ptr, ptr @fun_Core_type_is, align 8
  call void @free_candy_value(ptr %8334)
  %8335 = load ptr, ptr @fun_Core_function_is, align 8
  call void @free_candy_value(ptr %8335)
  %8336 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %8336)
  %8337 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %8337)
  %8338 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %8338)
  %8339 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %8339)
  %8340 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %8340)
  %8341 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %8341)
  %8342 = load ptr, ptr @fun_Core_function_is3, align 8
  call void @free_candy_value(ptr %8342)
  %8343 = load ptr, ptr @fun_Core_function_is3_11, align 8
  call void @free_candy_value(ptr %8343)
  %8344 = load ptr, ptr @fun_Core_function_is4, align 8
  call void @free_candy_value(ptr %8344)
  %8345 = load ptr, ptr @fun_Core_function_is4_11, align 8
  call void @free_candy_value(ptr %8345)
  %8346 = load ptr, ptr @fun_Core_function_is5, align 8
  call void @free_candy_value(ptr %8346)
  %8347 = load ptr, ptr @fun_Core_function_is5_11, align 8
  call void @free_candy_value(ptr %8347)
  %8348 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %8348)
  %8349 = load ptr, ptr @fun_Core_function_is0_11.129, align 8
  call void @free_candy_value(ptr %8349)
  %8350 = load ptr, ptr @fun_Core_function_doNotRun, align 8
  call void @free_candy_value(ptr %8350)
  %8351 = load ptr, ptr @fun_Core_function_is0_11.131, align 8
  call void @free_candy_value(ptr %8351)
  %8352 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %8352)
  %8353 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  call void @free_candy_value(ptr %8353)
  %8354 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.133, align 8
  call void @free_candy_value(ptr %8354)
  %8355 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  call void @free_candy_value(ptr %8355)
  %8356 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %8356)
  %8357 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.135, align 8
  call void @free_candy_value(ptr %8357)
  %8358 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %8358)
  %8359 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.137, align 8
  call void @free_candy_value(ptr %8359)
  %8360 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %8360)
  %8361 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  call void @free_candy_value(ptr %8361)
  %8362 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %8362)
  %8363 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.139, align 8
  call void @free_candy_value(ptr %8363)
  %8364 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.141, align 8
  call void @free_candy_value(ptr %8364)
  %8365 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.143, align 8
  call void @free_candy_value(ptr %8365)
  %8366 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %8366)
  %8367 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.145, align 8
  call void @free_candy_value(ptr %8367)
  %8368 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %8368)
  %8369 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.147, align 8
  call void @free_candy_value(ptr %8369)
  %8370 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %8370)
  %8371 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %8371)
  %8372 = load ptr, ptr @fun_Core_bool_and, align 8
  call void @free_candy_value(ptr %8372)
  %8373 = load ptr, ptr @fun_Core_bool_and_12, align 8
  call void @free_candy_value(ptr %8373)
  %8374 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %8374)
  %8375 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  call void @free_candy_value(ptr %8375)
  %8376 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.149, align 8
  call void @free_candy_value(ptr %8376)
  %8377 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  call void @free_candy_value(ptr %8377)
  %8378 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %8378)
  %8379 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.151, align 8
  call void @free_candy_value(ptr %8379)
  %8380 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %8380)
  %8381 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.153, align 8
  call void @free_candy_value(ptr %8381)
  %8382 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %8382)
  %8383 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %8383)
  %8384 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.155, align 8
  call void @free_candy_value(ptr %8384)
  %8385 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.157, align 8
  call void @free_candy_value(ptr %8385)
  %8386 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.159, align 8
  call void @free_candy_value(ptr %8386)
  %8387 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %8387)
  %8388 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.161, align 8
  call void @free_candy_value(ptr %8388)
  %8389 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %8389)
  %8390 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.163, align 8
  call void @free_candy_value(ptr %8390)
  %8391 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %8391)
  %8392 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  call void @free_candy_value(ptr %8392)
  %8393 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %8393)
  %8394 = load ptr, ptr @fun_Core_bool_or, align 8
  call void @free_candy_value(ptr %8394)
  %8395 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %8395)
  %8396 = load ptr, ptr @fun_Core_bool_xor, align 8
  call void @free_candy_value(ptr %8396)
  %8397 = load ptr, ptr @fun_Core_bool_implies, align 8
  call void @free_candy_value(ptr %8397)
  %8398 = load ptr, ptr @fun_Core_bool_or_12.165, align 8
  call void @free_candy_value(ptr %8398)
  %8399 = load ptr, ptr @fun_Core_type_is.167, align 8
  call void @free_candy_value(ptr %8399)
  %8400 = load ptr, ptr @fun_Core_function_is.169, align 8
  call void @free_candy_value(ptr %8400)
  %8401 = load ptr, ptr @fun_Core_function_is0.171, align 8
  call void @free_candy_value(ptr %8401)
  %8402 = load ptr, ptr @fun_Core_function_is0_11.173, align 8
  call void @free_candy_value(ptr %8402)
  %8403 = load ptr, ptr @fun_Core_function_is1.175, align 8
  call void @free_candy_value(ptr %8403)
  %8404 = load ptr, ptr @fun_Core_function_is1_11.177, align 8
  call void @free_candy_value(ptr %8404)
  %8405 = load ptr, ptr @fun_Core_function_is2.179, align 8
  call void @free_candy_value(ptr %8405)
  %8406 = load ptr, ptr @fun_Core_function_is2_11.181, align 8
  call void @free_candy_value(ptr %8406)
  %8407 = load ptr, ptr @fun_Core_function_is3.183, align 8
  call void @free_candy_value(ptr %8407)
  %8408 = load ptr, ptr @fun_Core_function_is3_11.185, align 8
  call void @free_candy_value(ptr %8408)
  %8409 = load ptr, ptr @fun_Core_function_is4.187, align 8
  call void @free_candy_value(ptr %8409)
  %8410 = load ptr, ptr @fun_Core_function_is4_11.189, align 8
  call void @free_candy_value(ptr %8410)
  %8411 = load ptr, ptr @fun_Core_function_is5.191, align 8
  call void @free_candy_value(ptr %8411)
  %8412 = load ptr, ptr @fun_Core_function_is5_11.193, align 8
  call void @free_candy_value(ptr %8412)
  %8413 = load ptr, ptr @fun_Core_function_run.195, align 8
  call void @free_candy_value(ptr %8413)
  %8414 = load ptr, ptr @fun_Core_function_is0_11.197, align 8
  call void @free_candy_value(ptr %8414)
  %8415 = load ptr, ptr @fun_Core_function_doNotRun.199, align 8
  call void @free_candy_value(ptr %8415)
  %8416 = load ptr, ptr @fun_Core_function_is0_11.201, align 8
  call void @free_candy_value(ptr %8416)
  %8417 = load ptr, ptr @fun_Core_bool_lazyAnd.203, align 8
  call void @free_candy_value(ptr %8417)
  %8418 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.205, align 8
  call void @free_candy_value(ptr %8418)
  %8419 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.207, align 8
  call void @free_candy_value(ptr %8419)
  %8420 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.209, align 8
  call void @free_candy_value(ptr %8420)
  %8421 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %8421)
  %8422 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.211, align 8
  call void @free_candy_value(ptr %8422)
  %8423 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %8423)
  %8424 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.213, align 8
  call void @free_candy_value(ptr %8424)
  %8425 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %8425)
  %8426 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.215, align 8
  call void @free_candy_value(ptr %8426)
  %8427 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.217, align 8
  call void @free_candy_value(ptr %8427)
  %8428 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.219, align 8
  call void @free_candy_value(ptr %8428)
  %8429 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.221, align 8
  call void @free_candy_value(ptr %8429)
  %8430 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.223, align 8
  call void @free_candy_value(ptr %8430)
  %8431 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %8431)
  %8432 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.225, align 8
  call void @free_candy_value(ptr %8432)
  %8433 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %8433)
  %8434 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.227, align 8
  call void @free_candy_value(ptr %8434)
  %8435 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %8435)
  %8436 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.229, align 8
  call void @free_candy_value(ptr %8436)
  %8437 = load ptr, ptr @fun_Core_bool_and.231, align 8
  call void @free_candy_value(ptr %8437)
  %8438 = load ptr, ptr @fun_Core_bool_and_12.233, align 8
  call void @free_candy_value(ptr %8438)
  %8439 = load ptr, ptr @fun_Core_bool_lazyOr.235, align 8
  call void @free_candy_value(ptr %8439)
  %8440 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.237, align 8
  call void @free_candy_value(ptr %8440)
  %8441 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.239, align 8
  call void @free_candy_value(ptr %8441)
  %8442 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.241, align 8
  call void @free_candy_value(ptr %8442)
  %8443 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %8443)
  %8444 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.243, align 8
  call void @free_candy_value(ptr %8444)
  %8445 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %8445)
  %8446 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.245, align 8
  call void @free_candy_value(ptr %8446)
  %8447 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %8447)
  %8448 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.247, align 8
  call void @free_candy_value(ptr %8448)
  %8449 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.249, align 8
  call void @free_candy_value(ptr %8449)
  %8450 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.251, align 8
  call void @free_candy_value(ptr %8450)
  %8451 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.253, align 8
  call void @free_candy_value(ptr %8451)
  %8452 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %8452)
  %8453 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.255, align 8
  call void @free_candy_value(ptr %8453)
  %8454 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %8454)
  %8455 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.257, align 8
  call void @free_candy_value(ptr %8455)
  %8456 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %8456)
  %8457 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.259, align 8
  call void @free_candy_value(ptr %8457)
  %8458 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.261, align 8
  call void @free_candy_value(ptr %8458)
  %8459 = load ptr, ptr @fun_Core_bool_or.263, align 8
  call void @free_candy_value(ptr %8459)
  %8460 = load ptr, ptr @fun_Core_bool_or_12.265, align 8
  call void @free_candy_value(ptr %8460)
  %8461 = load ptr, ptr @fun_Core_bool_xor.267, align 8
  call void @free_candy_value(ptr %8461)
  %8462 = load ptr, ptr @fun_Core_bool_implies.269, align 8
  call void @free_candy_value(ptr %8462)
  %8463 = load ptr, ptr @fun_Core_bool_or_12.271, align 8
  call void @free_candy_value(ptr %8463)
  %8464 = load ptr, ptr @fun_Core_check_check, align 8
  call void @free_candy_value(ptr %8464)
  %8465 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.273", align 8
  call void @free_candy_value(ptr %8465)
  %8466 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.275", align 8
  call void @free_candy_value(ptr %8466)
  %8467 = load ptr, ptr @fun_Core_type_is.277, align 8
  call void @free_candy_value(ptr %8467)
  %8468 = load ptr, ptr @fun_Core_function_is.279, align 8
  call void @free_candy_value(ptr %8468)
  %8469 = load ptr, ptr @fun_Core_function_is0.281, align 8
  call void @free_candy_value(ptr %8469)
  %8470 = load ptr, ptr @fun_Core_function_is0_11.283, align 8
  call void @free_candy_value(ptr %8470)
  %8471 = load ptr, ptr @fun_Core_function_is1.285, align 8
  call void @free_candy_value(ptr %8471)
  %8472 = load ptr, ptr @fun_Core_function_is1_11.287, align 8
  call void @free_candy_value(ptr %8472)
  %8473 = load ptr, ptr @fun_Core_function_is2.289, align 8
  call void @free_candy_value(ptr %8473)
  %8474 = load ptr, ptr @fun_Core_function_is2_11.291, align 8
  call void @free_candy_value(ptr %8474)
  %8475 = load ptr, ptr @fun_Core_function_is3.293, align 8
  call void @free_candy_value(ptr %8475)
  %8476 = load ptr, ptr @fun_Core_function_is3_11.295, align 8
  call void @free_candy_value(ptr %8476)
  %8477 = load ptr, ptr @fun_Core_function_is4.297, align 8
  call void @free_candy_value(ptr %8477)
  %8478 = load ptr, ptr @fun_Core_function_is4_11.299, align 8
  call void @free_candy_value(ptr %8478)
  %8479 = load ptr, ptr @fun_Core_function_is5.301, align 8
  call void @free_candy_value(ptr %8479)
  %8480 = load ptr, ptr @fun_Core_function_is5_11.303, align 8
  call void @free_candy_value(ptr %8480)
  %8481 = load ptr, ptr @fun_Core_function_run.305, align 8
  call void @free_candy_value(ptr %8481)
  %8482 = load ptr, ptr @fun_Core_function_is0_11.307, align 8
  call void @free_candy_value(ptr %8482)
  %8483 = load ptr, ptr @fun_Core_function_doNotRun.309, align 8
  call void @free_candy_value(ptr %8483)
  %8484 = load ptr, ptr @fun_Core_function_is0_11.311, align 8
  call void @free_candy_value(ptr %8484)
  %8485 = load ptr, ptr @fun_Core_controlFlow_recursive, align 8
  call void @free_candy_value(ptr %8485)
  %8486 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  call void @free_candy_value(ptr %8486)
  %8487 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  call void @free_candy_value(ptr %8487)
  %8488 = load ptr, ptr @fun_Core_type_is.313, align 8
  call void @free_candy_value(ptr %8488)
  %8489 = load ptr, ptr @fun_Core_int_is, align 8
  call void @free_candy_value(ptr %8489)
  %8490 = load ptr, ptr @fun_Core_int_negate, align 8
  call void @free_candy_value(ptr %8490)
  %8491 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %8491)
  %8492 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %8492)
  %8493 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %8493)
  %8494 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %8494)
  %8495 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  call void @free_candy_value(ptr %8495)
  %8496 = load ptr, ptr @fun_Core_int_isPositive, align 8
  call void @free_candy_value(ptr %8496)
  %8497 = load ptr, ptr @fun_Core_int_isNonPositive, align 8
  call void @free_candy_value(ptr %8497)
  %8498 = load ptr, ptr @fun_Core_int_isNegative, align 8
  call void @free_candy_value(ptr %8498)
  %8499 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %8499)
  %8500 = load ptr, ptr @fun_Core_int_absolute, align 8
  call void @free_candy_value(ptr %8500)
  %8501 = load ptr, ptr @fun_Core_int_absolute_9, align 8
  call void @free_candy_value(ptr %8501)
  %8502 = load ptr, ptr @fun_Core_int_absolute_10, align 8
  call void @free_candy_value(ptr %8502)
  %8503 = load ptr, ptr @fun_Core_int_fitsInRustU32, align 8
  call void @free_candy_value(ptr %8503)
  %8504 = load ptr, ptr @fun_Core_int_fitsInRustU128, align 8
  call void @free_candy_value(ptr %8504)
  %8505 = load ptr, ptr @fun_Core_int_isEven, align 8
  call void @free_candy_value(ptr %8505)
  %8506 = load ptr, ptr @fun_Core_int_isOdd, align 8
  call void @free_candy_value(ptr %8506)
  %8507 = load ptr, ptr @fun_Core_int_min, align 8
  call void @free_candy_value(ptr %8507)
  %8508 = load ptr, ptr @fun_Core_int_min_15, align 8
  call void @free_candy_value(ptr %8508)
  %8509 = load ptr, ptr @fun_Core_int_min_16, align 8
  call void @free_candy_value(ptr %8509)
  %8510 = load ptr, ptr @fun_Core_int_max, align 8
  call void @free_candy_value(ptr %8510)
  %8511 = load ptr, ptr @fun_Core_int_max_15, align 8
  call void @free_candy_value(ptr %8511)
  %8512 = load ptr, ptr @fun_Core_int_max_16, align 8
  call void @free_candy_value(ptr %8512)
  %8513 = load ptr, ptr @fun_Core_int_coerceAtLeast, align 8
  call void @free_candy_value(ptr %8513)
  %8514 = load ptr, ptr @fun_Core_int_coerceAtMost, align 8
  call void @free_candy_value(ptr %8514)
  %8515 = load ptr, ptr @fun_Core_int_coerceIn, align 8
  call void @free_candy_value(ptr %8515)
  %8516 = load ptr, ptr @fun_Core_int_pow, align 8
  call void @free_candy_value(ptr %8516)
  %8517 = load ptr, ptr @fun_Core_int_pow_21, align 8
  call void @free_candy_value(ptr %8517)
  %8518 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  call void @free_candy_value(ptr %8518)
  %8519 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  call void @free_candy_value(ptr %8519)
  %8520 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %8520)
  %8521 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  call void @free_candy_value(ptr %8521)
  %8522 = load ptr, ptr @69, align 8
  call void @free_candy_value(ptr %8522)
  %8523 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  call void @free_candy_value(ptr %8523)
  %8524 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.315, align 8
  call void @free_candy_value(ptr %8524)
  %8525 = load ptr, ptr @70, align 8
  call void @free_candy_value(ptr %8525)
  %8526 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.317, align 8
  call void @free_candy_value(ptr %8526)
  %8527 = load ptr, ptr @71, align 8
  call void @free_candy_value(ptr %8527)
  %8528 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.319, align 8
  call void @free_candy_value(ptr %8528)
  %8529 = load ptr, ptr @72, align 8
  call void @free_candy_value(ptr %8529)
  %8530 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  call void @free_candy_value(ptr %8530)
  %8531 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.321, align 8
  call void @free_candy_value(ptr %8531)
  %8532 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  call void @free_candy_value(ptr %8532)
  %8533 = load ptr, ptr @73, align 8
  call void @free_candy_value(ptr %8533)
  %8534 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.323, align 8
  call void @free_candy_value(ptr %8534)
  %8535 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  call void @free_candy_value(ptr %8535)
  %8536 = load ptr, ptr @74, align 8
  call void @free_candy_value(ptr %8536)
  %8537 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %8537)
  %8538 = load ptr, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  call void @free_candy_value(ptr %8538)
  %8539 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  call void @free_candy_value(ptr %8539)
  %8540 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  call void @free_candy_value(ptr %8540)
  %8541 = load ptr, ptr @fun_Core_type_is.325, align 8
  call void @free_candy_value(ptr %8541)
  %8542 = load ptr, ptr @fun_Core_function_is.327, align 8
  call void @free_candy_value(ptr %8542)
  %8543 = load ptr, ptr @fun_Core_function_is0.329, align 8
  call void @free_candy_value(ptr %8543)
  %8544 = load ptr, ptr @fun_Core_function_is0_11.331, align 8
  call void @free_candy_value(ptr %8544)
  %8545 = load ptr, ptr @fun_Core_function_is1.333, align 8
  call void @free_candy_value(ptr %8545)
  %8546 = load ptr, ptr @fun_Core_function_is1_11.335, align 8
  call void @free_candy_value(ptr %8546)
  %8547 = load ptr, ptr @fun_Core_function_is2.337, align 8
  call void @free_candy_value(ptr %8547)
  %8548 = load ptr, ptr @fun_Core_function_is2_11.339, align 8
  call void @free_candy_value(ptr %8548)
  %8549 = load ptr, ptr @fun_Core_function_is3.341, align 8
  call void @free_candy_value(ptr %8549)
  %8550 = load ptr, ptr @fun_Core_function_is3_11.343, align 8
  call void @free_candy_value(ptr %8550)
  %8551 = load ptr, ptr @fun_Core_function_is4.345, align 8
  call void @free_candy_value(ptr %8551)
  %8552 = load ptr, ptr @fun_Core_function_is4_11.347, align 8
  call void @free_candy_value(ptr %8552)
  %8553 = load ptr, ptr @fun_Core_function_is5.349, align 8
  call void @free_candy_value(ptr %8553)
  %8554 = load ptr, ptr @fun_Core_function_is5_11.351, align 8
  call void @free_candy_value(ptr %8554)
  %8555 = load ptr, ptr @fun_Core_function_run.353, align 8
  call void @free_candy_value(ptr %8555)
  %8556 = load ptr, ptr @fun_Core_function_is0_11.355, align 8
  call void @free_candy_value(ptr %8556)
  %8557 = load ptr, ptr @fun_Core_function_doNotRun.357, align 8
  call void @free_candy_value(ptr %8557)
  %8558 = load ptr, ptr @fun_Core_function_is0_11.359, align 8
  call void @free_candy_value(ptr %8558)
  %8559 = load ptr, ptr @fun_Core_type_is.361, align 8
  call void @free_candy_value(ptr %8559)
  %8560 = load ptr, ptr @fun_Core_function_is.363, align 8
  call void @free_candy_value(ptr %8560)
  %8561 = load ptr, ptr @fun_Core_function_is0.365, align 8
  call void @free_candy_value(ptr %8561)
  %8562 = load ptr, ptr @fun_Core_function_is0_11.367, align 8
  call void @free_candy_value(ptr %8562)
  %8563 = load ptr, ptr @fun_Core_function_is1.369, align 8
  call void @free_candy_value(ptr %8563)
  %8564 = load ptr, ptr @fun_Core_function_is1_11.371, align 8
  call void @free_candy_value(ptr %8564)
  %8565 = load ptr, ptr @fun_Core_function_is2.373, align 8
  call void @free_candy_value(ptr %8565)
  %8566 = load ptr, ptr @fun_Core_function_is2_11.375, align 8
  call void @free_candy_value(ptr %8566)
  %8567 = load ptr, ptr @fun_Core_function_is3.377, align 8
  call void @free_candy_value(ptr %8567)
  %8568 = load ptr, ptr @fun_Core_function_is3_11.379, align 8
  call void @free_candy_value(ptr %8568)
  %8569 = load ptr, ptr @fun_Core_function_is4.381, align 8
  call void @free_candy_value(ptr %8569)
  %8570 = load ptr, ptr @fun_Core_function_is4_11.383, align 8
  call void @free_candy_value(ptr %8570)
  %8571 = load ptr, ptr @fun_Core_function_is5.385, align 8
  call void @free_candy_value(ptr %8571)
  %8572 = load ptr, ptr @fun_Core_function_is5_11.387, align 8
  call void @free_candy_value(ptr %8572)
  %8573 = load ptr, ptr @fun_Core_function_run.389, align 8
  call void @free_candy_value(ptr %8573)
  %8574 = load ptr, ptr @fun_Core_function_is0_11.391, align 8
  call void @free_candy_value(ptr %8574)
  %8575 = load ptr, ptr @fun_Core_function_doNotRun.393, align 8
  call void @free_candy_value(ptr %8575)
  %8576 = load ptr, ptr @fun_Core_function_is0_11.395, align 8
  call void @free_candy_value(ptr %8576)
  %8577 = load ptr, ptr @fun_Core_bool_lazyAnd.397, align 8
  call void @free_candy_value(ptr %8577)
  %8578 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.399, align 8
  call void @free_candy_value(ptr %8578)
  %8579 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.401, align 8
  call void @free_candy_value(ptr %8579)
  %8580 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.403, align 8
  call void @free_candy_value(ptr %8580)
  %8581 = load ptr, ptr @75, align 8
  call void @free_candy_value(ptr %8581)
  %8582 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.405, align 8
  call void @free_candy_value(ptr %8582)
  %8583 = load ptr, ptr @76, align 8
  call void @free_candy_value(ptr %8583)
  %8584 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.407, align 8
  call void @free_candy_value(ptr %8584)
  %8585 = load ptr, ptr @77, align 8
  call void @free_candy_value(ptr %8585)
  %8586 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.409, align 8
  call void @free_candy_value(ptr %8586)
  %8587 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.411, align 8
  call void @free_candy_value(ptr %8587)
  %8588 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.413, align 8
  call void @free_candy_value(ptr %8588)
  %8589 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.415, align 8
  call void @free_candy_value(ptr %8589)
  %8590 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.417, align 8
  call void @free_candy_value(ptr %8590)
  %8591 = load ptr, ptr @78, align 8
  call void @free_candy_value(ptr %8591)
  %8592 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.419, align 8
  call void @free_candy_value(ptr %8592)
  %8593 = load ptr, ptr @79, align 8
  call void @free_candy_value(ptr %8593)
  %8594 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.421, align 8
  call void @free_candy_value(ptr %8594)
  %8595 = load ptr, ptr @80, align 8
  call void @free_candy_value(ptr %8595)
  %8596 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.423, align 8
  call void @free_candy_value(ptr %8596)
  %8597 = load ptr, ptr @fun_Core_bool_and.425, align 8
  call void @free_candy_value(ptr %8597)
  %8598 = load ptr, ptr @fun_Core_bool_and_12.427, align 8
  call void @free_candy_value(ptr %8598)
  %8599 = load ptr, ptr @fun_Core_bool_lazyOr.429, align 8
  call void @free_candy_value(ptr %8599)
  %8600 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.431, align 8
  call void @free_candy_value(ptr %8600)
  %8601 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.433, align 8
  call void @free_candy_value(ptr %8601)
  %8602 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.435, align 8
  call void @free_candy_value(ptr %8602)
  %8603 = load ptr, ptr @81, align 8
  call void @free_candy_value(ptr %8603)
  %8604 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.437, align 8
  call void @free_candy_value(ptr %8604)
  %8605 = load ptr, ptr @82, align 8
  call void @free_candy_value(ptr %8605)
  %8606 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.439, align 8
  call void @free_candy_value(ptr %8606)
  %8607 = load ptr, ptr @83, align 8
  call void @free_candy_value(ptr %8607)
  %8608 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.441, align 8
  call void @free_candy_value(ptr %8608)
  %8609 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.443, align 8
  call void @free_candy_value(ptr %8609)
  %8610 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.445, align 8
  call void @free_candy_value(ptr %8610)
  %8611 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.447, align 8
  call void @free_candy_value(ptr %8611)
  %8612 = load ptr, ptr @84, align 8
  call void @free_candy_value(ptr %8612)
  %8613 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.449, align 8
  call void @free_candy_value(ptr %8613)
  %8614 = load ptr, ptr @85, align 8
  call void @free_candy_value(ptr %8614)
  %8615 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.451, align 8
  call void @free_candy_value(ptr %8615)
  %8616 = load ptr, ptr @86, align 8
  call void @free_candy_value(ptr %8616)
  %8617 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.453, align 8
  call void @free_candy_value(ptr %8617)
  %8618 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.455, align 8
  call void @free_candy_value(ptr %8618)
  %8619 = load ptr, ptr @fun_Core_bool_or.457, align 8
  call void @free_candy_value(ptr %8619)
  %8620 = load ptr, ptr @fun_Core_bool_or_12.459, align 8
  call void @free_candy_value(ptr %8620)
  %8621 = load ptr, ptr @fun_Core_bool_xor.461, align 8
  call void @free_candy_value(ptr %8621)
  %8622 = load ptr, ptr @fun_Core_bool_implies.463, align 8
  call void @free_candy_value(ptr %8622)
  %8623 = load ptr, ptr @fun_Core_bool_or_12.465, align 8
  call void @free_candy_value(ptr %8623)
  %8624 = load ptr, ptr @fun_Core_type_is.467, align 8
  call void @free_candy_value(ptr %8624)
  %8625 = load ptr, ptr @fun_Core_tag_is, align 8
  call void @free_candy_value(ptr %8625)
  %8626 = load ptr, ptr @fun_Core_tag_withSymbol, align 8
  call void @free_candy_value(ptr %8626)
  %8627 = load ptr, ptr @fun_Core_tag_withSymbol_28, align 8
  call void @free_candy_value(ptr %8627)
  %8628 = load ptr, ptr @fun_Core_tag_withSymbol_29, align 8
  call void @free_candy_value(ptr %8628)
  %8629 = load ptr, ptr @fun_Core_tag_withValue, align 8
  call void @free_candy_value(ptr %8629)
  %8630 = load ptr, ptr @fun_Core_type_is.469, align 8
  call void @free_candy_value(ptr %8630)
  %8631 = load ptr, ptr @fun_Core_result_getValue, align 8
  call void @free_candy_value(ptr %8631)
  %8632 = load ptr, ptr @fun_Core_result_isOk, align 8
  call void @free_candy_value(ptr %8632)
  %8633 = load ptr, ptr @fun_Core_result_unwrap, align 8
  call void @free_candy_value(ptr %8633)
  %8634 = load ptr, ptr @fun_Core_result_expect, align 8
  call void @free_candy_value(ptr %8634)
  %8635 = load ptr, ptr @fun_Core_result_isError, align 8
  call void @free_candy_value(ptr %8635)
  %8636 = load ptr, ptr @fun_Core_result_unwrapError, align 8
  call void @free_candy_value(ptr %8636)
  %8637 = load ptr, ptr @fun_Core_result_expectError, align 8
  call void @free_candy_value(ptr %8637)
  %8638 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %8638)
  %8639 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %8639)
  %8640 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.471, align 8
  call void @free_candy_value(ptr %8640)
  %8641 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.473, align 8
  call void @free_candy_value(ptr %8641)
  %8642 = load ptr, ptr @87, align 8
  call void @free_candy_value(ptr %8642)
  %8643 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %8643)
  %8644 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.475, align 8
  call void @free_candy_value(ptr %8644)
  %8645 = load ptr, ptr @88, align 8
  call void @free_candy_value(ptr %8645)
  %8646 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.477, align 8
  call void @free_candy_value(ptr %8646)
  %8647 = load ptr, ptr @89, align 8
  call void @free_candy_value(ptr %8647)
  %8648 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  call void @free_candy_value(ptr %8648)
  %8649 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %8649)
  %8650 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.479, align 8
  call void @free_candy_value(ptr %8650)
  %8651 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.481, align 8
  call void @free_candy_value(ptr %8651)
  %8652 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.483, align 8
  call void @free_candy_value(ptr %8652)
  %8653 = load ptr, ptr @90, align 8
  call void @free_candy_value(ptr %8653)
  %8654 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.485, align 8
  call void @free_candy_value(ptr %8654)
  %8655 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.487, align 8
  call void @free_candy_value(ptr %8655)
  %8656 = load ptr, ptr @91, align 8
  call void @free_candy_value(ptr %8656)
  %8657 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.489, align 8
  call void @free_candy_value(ptr %8657)
  %8658 = load ptr, ptr @92, align 8
  call void @free_candy_value(ptr %8658)
  %8659 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  call void @free_candy_value(ptr %8659)
  %8660 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %8660)
  %8661 = load ptr, ptr @fun_Core_result_mapOr, align 8
  call void @free_candy_value(ptr %8661)
  %8662 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  call void @free_candy_value(ptr %8662)
  %8663 = load ptr, ptr @fun_Core_result_flatMap, align 8
  call void @free_candy_value(ptr %8663)
  %8664 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  call void @free_candy_value(ptr %8664)
  %8665 = load ptr, ptr @fun_Core_result_map, align 8
  call void @free_candy_value(ptr %8665)
  %8666 = load ptr, ptr @fun_Core_result_map_19, align 8
  call void @free_candy_value(ptr %8666)
  %8667 = load ptr, ptr @tag_Ok.490, align 8
  call void @free_candy_value(ptr %8667)
  %8668 = load ptr, ptr @fun_Core_result_and, align 8
  call void @free_candy_value(ptr %8668)
  %8669 = load ptr, ptr @fun_Core_result_and_12, align 8
  call void @free_candy_value(ptr %8669)
  %8670 = load ptr, ptr @fun_Core_result_flatMapError, align 8
  call void @free_candy_value(ptr %8670)
  %8671 = load ptr, ptr @fun_Core_result_flatMapError_19, align 8
  call void @free_candy_value(ptr %8671)
  %8672 = load ptr, ptr @fun_Core_result_flatMapError_20, align 8
  call void @free_candy_value(ptr %8672)
  %8673 = load ptr, ptr @fun_Core_result_mapError, align 8
  call void @free_candy_value(ptr %8673)
  %8674 = load ptr, ptr @fun_Core_result_mapError_19, align 8
  call void @free_candy_value(ptr %8674)
  %8675 = load ptr, ptr @tag_Error.491, align 8
  call void @free_candy_value(ptr %8675)
  %8676 = load ptr, ptr @fun_Core_result_or, align 8
  call void @free_candy_value(ptr %8676)
  %8677 = load ptr, ptr @fun_Core_result_or_12, align 8
  call void @free_candy_value(ptr %8677)
  %8678 = load ptr, ptr @fun_Core_result_unwrapOrElse, align 8
  call void @free_candy_value(ptr %8678)
  %8679 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  call void @free_candy_value(ptr %8679)
  %8680 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %8680)
  %8681 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %8681)
  %8682 = load ptr, ptr @fun_Core_result_flatten, align 8
  call void @free_candy_value(ptr %8682)
  %8683 = load ptr, ptr @fun_Core_result_flatten_7, align 8
  call void @free_candy_value(ptr %8683)
  %8684 = load ptr, ptr @"Examples:fibonacci:recursive:0:0:3", align 8
  call void @free_candy_value(ptr %8684)
  %8685 = load ptr, ptr @"Examples:fibonacci:recursive:0:5", align 8
  call void @free_candy_value(ptr %8685)
  %8686 = load ptr, ptr @"Examples:fibonacci:recursive:5", align 8
  call void @free_candy_value(ptr %8686)
  %8687 = load ptr, ptr @"Examples:fibonacci:compareTo:8", align 8
  call void @free_candy_value(ptr %8687)
  %8688 = load ptr, ptr @"Examples:fibonacci:compareTo:10", align 8
  call void @free_candy_value(ptr %8688)
  %8689 = load ptr, ptr @"Examples:fibonacci:isLessThan:7", align 8
  call void @free_candy_value(ptr %8689)
  %8690 = load ptr, ptr @"Examples:fibonacci:isLessThan:13", align 8
  call void @free_candy_value(ptr %8690)
  %8691 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:7", align 8
  call void @free_candy_value(ptr %8691)
  %8692 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:9", align 8
  call void @free_candy_value(ptr %8692)
  %8693 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:11", align 8
  call void @free_candy_value(ptr %8693)
  %8694 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:12", align 8
  call void @free_candy_value(ptr %8694)
  %8695 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:20", align 8
  call void @free_candy_value(ptr %8695)
  %8696 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:30", align 8
  call void @free_candy_value(ptr %8696)
  %8697 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:32", align 8
  call void @free_candy_value(ptr %8697)
  %8698 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:33", align 8
  call void @free_candy_value(ptr %8698)
  %8699 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:13:34", align 8
  call void @free_candy_value(ptr %8699)
  %8700 = load ptr, ptr @"Examples:fibonacci:fibonacci:2:14", align 8
  call void @free_candy_value(ptr %8700)
  %8701 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2, align 8
  call void @free_candy_value(ptr %8701)
  %8702 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_12, align 8
  call void @free_candy_value(ptr %8702)
  %8703 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_13, align 8
  call void @free_candy_value(ptr %8703)
  %8704 = load ptr, ptr @fun_Examples_fibonacci_recursive_0, align 8
  call void @free_candy_value(ptr %8704)
  %8705 = load ptr, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  call void @free_candy_value(ptr %8705)
  %8706 = load ptr, ptr @tag_Arguments, align 8
  call void @free_candy_value(ptr %8706)
  %8707 = load ptr, ptr @"Examples:fibonacci:21:7", align 8
  call void @free_candy_value(ptr %8707)
  %8708 = load ptr, ptr @"Examples:fibonacci:21:8", align 8
  call void @free_candy_value(ptr %8708)
  %8709 = load ptr, ptr @"Examples:fibonacci:21:8:n", align 8
  call void @free_candy_value(ptr %8709)
  %8710 = load ptr, ptr @"Examples:fibonacci:21:8:8", align 8
  call void @free_candy_value(ptr %8710)
  %8711 = load ptr, ptr @"Examples:fibonacci:21:8:9", align 8
  call void @free_candy_value(ptr %8711)
  %8712 = load ptr, ptr @"Examples:fibonacci:21:8:17", align 8
  call void @free_candy_value(ptr %8712)
  %8713 = load ptr, ptr @fun_Examples_fibonacci_21_8_18, align 8
  call void @free_candy_value(ptr %8713)
  %8714 = load ptr, ptr @"Examples:fibonacci:21:8:19", align 8
  call void @free_candy_value(ptr %8714)
  %8715 = load ptr, ptr @"Examples:fibonacci:21:8:27", align 8
  call void @free_candy_value(ptr %8715)
  %8716 = load ptr, ptr @"Examples:fibonacci:21:8:28", align 8
  call void @free_candy_value(ptr %8716)
  %8717 = load ptr, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  call void @free_candy_value(ptr %8717)
  %8718 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %8718)
  %8719 = load ptr, ptr @"Examples:fibonacci:21:16", align 8
  call void @free_candy_value(ptr %8719)
  %8720 = load ptr, ptr @"Examples:fibonacci:21:17", align 8
  call void @free_candy_value(ptr %8720)
  %8721 = load ptr, ptr @fun_Examples_fibonacci_21, align 8
  call void @free_candy_value(ptr %8721)
  %8722 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then, align 8
  call void @free_candy_value(ptr %8722)
  %8723 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then.493, align 8
  call void @free_candy_value(ptr %8723)
  %8724 = load ptr, ptr @93, align 8
  call void @free_candy_value(ptr %8724)
  %8725 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else, align 8
  call void @free_candy_value(ptr %8725)
  %8726 = load ptr, ptr @94, align 8
  call void @free_candy_value(ptr %8726)
  %8727 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else.495, align 8
  call void @free_candy_value(ptr %8727)
  %8728 = load ptr, ptr @95, align 8
  call void @free_candy_value(ptr %8728)
  %8729 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_matched, align 8
  call void @free_candy_value(ptr %8729)
  %8730 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %8730)
  %8731 = load ptr, ptr @tag_Main, align 8
  call void @free_candy_value(ptr %8731)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bit_length(ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_or(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_xor(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_divide_truncating(ptr, ptr)

declare ptr @candy_builtin_int_modulo(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_parse(ptr)

declare ptr @candy_builtin_int_remainder(ptr, ptr)

declare ptr @candy_builtin_int_shift_left(ptr, ptr)

declare ptr @candy_builtin_int_shift_right(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_filled(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_list_remove_at(ptr, ptr)

declare ptr @candy_builtin_list_replace(ptr, ptr, ptr)

declare ptr @candy_builtin_print(ptr)

declare ptr @candy_builtin_struct_get.1(ptr, ptr)

declare ptr @candy_builtin_struct_get_keys(ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_characters(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_text_contains(ptr, ptr)

declare ptr @candy_builtin_text_ends_with(ptr, ptr)

declare ptr @candy_builtin_text_from_utf8(ptr)

declare ptr @candy_builtin_text_get_range(ptr, ptr, ptr)

declare ptr @candy_builtin_text_is_empty(ptr)

declare ptr @candy_builtin_text_length(ptr)

declare ptr @candy_builtin_text_starts_with(ptr, ptr)

declare ptr @candy_builtin_text_trim_end(ptr)

declare ptr @candy_builtin_text_trim_start(ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Cor":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__not(ptr %0) {
Builtins__not:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Builtins__not_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.6, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__not_1_equals_else.7, align 8
  %10 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Builtins__not_1_equals_else.7, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__not_1_case-0_didNotMatch, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %21 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %22 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %16, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Builtins__not_1_equals_then(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.2, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.3, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.4, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.5, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.3, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.5, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.2(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__not_1_equals_else.4(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__not_1_equals_else.6(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__not_1_case-0_didNotMatch(ptr %0) {
Builtins__not_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.8, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Builtins__not_1_equals_then.9, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.16, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__not_1_equals_else.17, align 8
  %18 = load ptr, ptr @fun_Builtins__not_1_equals_then.9, align 8
  %19 = load ptr, ptr @fun_Builtins__not_1_equals_else.17, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__not_1_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Builtins__not_1_equals_then.8(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.10, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.11, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.14, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.15, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.11, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.15, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.10(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.12, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else.13, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else.13, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else.12(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__not_1_equals_else.14(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__not_1_equals_else.16(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__not_1_case-1_didNotMatch(ptr %0) {
Builtins__not_1_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %7, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then)
  %12 = call ptr @Builtins__isNonNegative_13_equals_then(ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %7, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %29, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Builtins__isNonNegative_13_equals_then(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.18, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.20, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.18(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__isNonNegative_13_equals_else.20(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.22, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.23, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.23)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.22(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isNonNegative_13_equals_then.22(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.24, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.28, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.24(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.26, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.26(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @9, align 8
  ret ptr @9
}

define ptr @Builtins__isNonNegative_13_equals_else.28(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.30, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_then.31, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.31)
  %11 = call ptr @Builtins__isNonNegative_13_equals_then.30(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isNonNegative_13_equals_then.30(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.32, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.36, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.32(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.34, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.34(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @11, align 8
  ret ptr @11
}

define ptr @Builtins__isNonNegative_13_equals_else.36(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %12, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then)
  %17 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %12, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_0, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %30, ptr %31)
  %33 = load ptr, ptr @tag_Match, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %34, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.38, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.40, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.38(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @13, align 8
  ret ptr @13
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.40(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43)
  %7 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.44, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.48, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.44(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.46, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.46(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @15, align 8
  ret ptr @15
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.48(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @16, align 8
  ret ptr @16
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51)
  %11 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.52, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.56, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.52(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.54, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.54(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @17, align 8
  ret ptr @17
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.56(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__equals(ptr %0, ptr %1) {
Builtins__equals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Builtins__functionRun(ptr %0) {
Builtins__functionRun:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %7 = load ptr, ptr @num_0, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_pointer(ptr %0)
  %12 = call ptr @get_candy_function_environment(ptr %0)
  %13 = call ptr (...) %11(ptr %12)
  ret ptr %13
}

define ptr @Builtins__getArgumentCount(ptr %0) {
Builtins__getArgumentCount:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_get_argument_count(ptr %0)
  ret ptr %6
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.62, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %36 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_type_of(ptr %1)
  %41 = load ptr, ptr @tag_Function, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr null)
  %45 = call ptr @candy_builtin_type_of(ptr %1)
  %46 = load ptr, ptr @tag_Function, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %49 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr %49)
  %51 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %52 = load ptr, ptr @num_0, align 8
  %53 = call ptr @candy_builtin_equals(ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %55 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr null)
  %56 = call ptr @candy_builtin_type_of(ptr %2)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr null)
  %61 = call ptr @candy_builtin_type_of(ptr %2)
  %62 = load ptr, ptr @tag_Function, align 8
  %63 = call ptr @candy_builtin_equals(ptr %61, ptr %62)
  %64 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %65 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_equals(ptr %67, ptr %68)
  %70 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %71 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr null)
  %72 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %72
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.58, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.60, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.58(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @19, align 8
  ret ptr @19
}

define ptr @Builtins__ifElse_1_equals_else.60(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Builtins__ifElse_1_equals_else.62(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.64, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.72, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.64(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.66, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.70, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.66(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.68, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else.68(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @22, align 8
  ret ptr @22
}

define ptr @Builtins__ifElse_1_equals_else.70(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Builtins__ifElse_1_equals_else.72(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Builtins__ifElse_1_case-0_didNotMatch(ptr %0) {
Builtins__ifElse_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Builtins__intAdd(ptr %0, ptr %1) {
Builtins__intAdd:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitLength(ptr %0) {
Builtins__intBitLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_int_bit_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__intBitwiseAnd(ptr %0, ptr %1) {
Builtins__intBitwiseAnd:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitwiseOr(ptr %0, ptr %1) {
Builtins__intBitwiseOr:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_or(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitwiseXor(ptr %0, ptr %1) {
Builtins__intBitwiseXor:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_xor(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intCompareTo(ptr %0, ptr %1) {
Builtins__intCompareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intDivideTruncating(ptr %0, ptr %1) {
Builtins__intDivideTruncating:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_divide_truncating(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intModulo(ptr %0, ptr %1) {
Builtins__intModulo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_modulo(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intMultiply(ptr %0, ptr %1) {
Builtins__intMultiply:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_multiply(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intParse(ptr %0) {
Builtins__intParse:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_int_parse(ptr %0)
  ret ptr %6
}

define ptr @Builtins__intRemainder(ptr %0, ptr %1) {
Builtins__intRemainder:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_remainder(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intShiftLeft(ptr %0, ptr %1) {
Builtins__intShiftLeft:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftLeft_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftLeft_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftLeft_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftLeft_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_left(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftLeft_25(ptr %0) {
Builtins__intShiftLeft_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftLeft_26(ptr %0) {
Builtins__intShiftLeft_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__intShiftRight(ptr %0, ptr %1) {
Builtins__intShiftRight:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftRight_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftRight_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_right(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftRight_25(ptr %0) {
Builtins__intShiftRight_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftRight_26(ptr %0) {
Builtins__intShiftRight_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__intSubtract(ptr %0, ptr %1) {
Builtins__intSubtract:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_subtract(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__listFilled(ptr %0, ptr %1) {
Builtins__listFilled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Builtins__isNonNegative(ptr %0)
  %8 = load ptr, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @candy_builtin_list_filled(ptr %0, ptr %1)
  ret ptr %10
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_list_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %20
}

define ptr @Builtins__listLength(ptr %0) {
Builtins__listLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_list_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__listRemoveAt(ptr %0, ptr %1) {
Builtins__listRemoveAt:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_List, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %19 = load ptr, ptr @"Builtins::listRemoveAt:21", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = call ptr @candy_builtin_list_length(ptr %0)
  %22 = call ptr @candy_builtin_type_of(ptr %1)
  %23 = load ptr, ptr @tag_Int, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %26 = load ptr, ptr @"Builtins::listRemoveAt:22", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %21)
  %29 = load ptr, ptr @tag_Less, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr null)
  %33 = call ptr @candy_builtin_list_remove_at(ptr %0, ptr %1)
  ret ptr %33
}

define ptr @Builtins__listReplace(ptr %0, ptr %1, ptr %2) {
Builtins__listReplace:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_type_of(ptr %0)
  %17 = load ptr, ptr @tag_List, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listReplace:21", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_list_length(ptr %0)
  %23 = call ptr @candy_builtin_type_of(ptr %1)
  %24 = load ptr, ptr @tag_Int, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %27 = load ptr, ptr @"Builtins::listReplace:22", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %22)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @candy_builtin_list_replace(ptr %0, ptr %1, ptr %2)
  ret ptr %34
}

define ptr @Builtins__print(ptr %0) {
Builtins__print:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_print(ptr %0)
  ret ptr %6
}

define ptr @Builtins__structGet(ptr %0, ptr %1) {
Builtins__structGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %1)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Text, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__structGet_23, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__structGet_23, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Builtins__structGet_24, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Builtins__structGet_24, align 8
  %17 = load ptr, ptr @fun_Builtins__structGet_23, align 8
  %18 = load ptr, ptr @fun_Builtins__structGet_24, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = call ptr @candy_builtin_type_of(ptr %1)
  %21 = load ptr, ptr @tag_Text, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr }, ptr %23, i32 0, i32 0
  store ptr %1, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Builtins__structGet_30, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Builtins__structGet_30, align 8
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr }, ptr %26, i32 0, i32 0
  store ptr %1, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Builtins__structGet_31, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Builtins__structGet_31, align 8
  %29 = load ptr, ptr @fun_Builtins__structGet_30, align 8
  %30 = load ptr, ptr @fun_Builtins__structGet_31, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %22, ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_Struct `", align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %32, ptr %19)
  %34 = load ptr, ptr @"text_` is missing the key `", align 8
  %35 = call ptr @candy_builtin_text_concatenate(ptr %33, ptr %34)
  %36 = call ptr @candy_builtin_text_concatenate(ptr %35, ptr %31)
  %37 = load ptr, ptr @"text_`.", align 8
  %38 = call ptr @candy_builtin_text_concatenate(ptr %36, ptr %37)
  %39 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_struct_get.1(ptr %0, ptr %1)
  ret ptr %40
}

define ptr @Builtins__structGet_23(ptr %0) {
Builtins__structGet_23:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__structGet_24(ptr %0) {
Builtins__structGet_24:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__structGet_30(ptr %0) {
Builtins__structGet_30:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__structGet_31(ptr %0) {
Builtins__structGet_31:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__structGetKeys(ptr %0) {
Builtins__structGetKeys:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_struct_get_keys(ptr %0)
  ret ptr %6
}

define ptr @Builtins__structHasKey(ptr %0, ptr %1) {
Builtins__structHasKey:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %1)
  ret ptr %7
}

define ptr @Builtins__tagGetValue(ptr %0) {
Builtins__tagGetValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %7 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @candy_builtin_tag_get_value(ptr %0)
  ret ptr %9
}

define ptr @Builtins__tagHasValue(ptr %0) {
Builtins__tagHasValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_has_value(ptr %0)
  ret ptr %6
}

define ptr @Builtins__tagWithoutValue(ptr %0) {
Builtins__tagWithoutValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_without_value(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textCharacters(ptr %0) {
Builtins__textCharacters:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_characters(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textConcatenate(ptr %0, ptr %1) {
Builtins__textConcatenate:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textContains(ptr %0, ptr %1) {
Builtins__textContains:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_contains(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textEndsWith(ptr %0, ptr %1) {
Builtins__textEndsWith:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_ends_with(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textFromUtf8(ptr %0) {
Builtins__textFromUtf8:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_from_utf8(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textGetRange(ptr %0, ptr %1, ptr %2) {
Builtins__textGetRange:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_text_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_type_of(ptr %2)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @Builtins__isNonNegative(ptr %2)
  %26 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_text_length(ptr %0)
  %29 = call ptr @Builtins__isLessThanOrEqualTo(ptr %2, ptr %28)
  %30 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %2)
  %33 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = call ptr @candy_builtin_text_get_range(ptr %0, ptr %1, ptr %2)
  ret ptr %35
}

define ptr @Builtins__textIsEmpty(ptr %0) {
Builtins__textIsEmpty:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_is_empty(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textLength(ptr %0) {
Builtins__textLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textStartsWith(ptr %0, ptr %1) {
Builtins__textStartsWith:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_starts_with(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textTrimEnd(ptr %0) {
Builtins__textTrimEnd:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_trim_end(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textTrimStart(ptr %0) {
Builtins__textTrimStart:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_trim_start(ptr %0)
  ret ptr %6
}

define ptr @Builtins__toDebugText(ptr %0) {
Builtins__toDebugText:
  %1 = call ptr @candy_builtin_to_debug_text(ptr %0)
  ret ptr %1
}

define ptr @Builtins__typeOf(ptr %0) {
Builtins__typeOf:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  ret ptr %1
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.78, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.79, align 8
  %10 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.79, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_is_1_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %34 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_is_1_equals_then(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.74, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.75, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.76, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.77, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.75, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.77, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.74(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_is_1_equals_else.76(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_is_1_equals_else.78(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.80, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.81, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.88, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.89, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.81, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.89, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.80(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.82, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.83, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.86, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.87, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.83, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.87, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.82(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.84, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else.85, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else.85, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else.84(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_is_1_equals_else.86(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_is_1_equals_else.88(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_is_1_case-0_didNotMatch(ptr %0) {
Core_bool_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.94, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_not_6_equals_else.95, align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_else.95, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %19, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_bool_not_6_equals_then(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.90, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.91, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.92, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.93, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.91, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.93, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.90(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_bool_not_6_equals_else.92(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_bool_not_6_equals_else.94(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.96, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_not_6_equals_then.97, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.104, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_not_6_equals_else.105, align 8
  %18 = load ptr, ptr @fun_Core_bool_not_6_equals_then.97, align 8
  %19 = load ptr, ptr @fun_Core_bool_not_6_equals_else.105, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_not_6_equals_then.96(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.98, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.99, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.102, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.103, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.99, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.103, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.98(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.100, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else.101, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else.101, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else.100(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_bool_not_6_equals_else.102(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_bool_not_6_equals_else.104(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_bool_not_6_case-1_didNotMatch(ptr %0) {
Core_bool_not_6_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @"anonymous_$generated__needs_isConditionBool_else.106"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_int_pow_21_4_case-0_matched() {
Core_int_pow_21_4_case-0_matched:
  %0 = load ptr, ptr @num_1, align 8
  ret ptr %0
}

define ptr @Core_result_is(ptr %0) {
Core_result_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.114, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.115, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.115, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %37 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.108, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.109, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.112, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.113, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.109, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.113, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.108(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.110, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.111, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.111, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.110(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.112(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_result_is_1_equals_else.114(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.116, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.117, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.126, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.127, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.117, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.127, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.116(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.118, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.119, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.124, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.125, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.119, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.125, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.118(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.120, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.121, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.122, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.123, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.121, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.123, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.120(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_result_is_1_equals_else.122(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.124(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_result_is_1_equals_else.126(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @43, align 8
  ret ptr @43
}

define ptr @Core_result_is_1_case-0_matched(ptr %0) {
Core_result_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_True, align 8
  ret ptr %5
}

define ptr @Core_result_is_1_case-0_didNotMatch(ptr %0) {
Core_result_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @"Core_iterable_range_38, Core_result_unwrapOrElse_19"(ptr %0) {
"Core_iterable_range_38, Core_result_unwrapOrElse_19":
  ret ptr %0
}

define ptr @Core_type_is(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.128, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.129, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.129, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.128(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.130, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.131, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.131, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.130(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.136, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.137, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.137, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.132, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.133, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.134, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.135, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.133, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.135, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.132(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @44, align 8
  ret ptr @44
}

define ptr @Core_bool_lazyAnd_18_equals_else.134(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Core_bool_lazyAnd_18_equals_else.136(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @46, align 8
  ret ptr @46
}

define ptr @Core_bool_lazyAnd_18_case-0_matched(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.138, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.139, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.146, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.147, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.139, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.147, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.138(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.140, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.141, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.144, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.145, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.141, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.145, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.140(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.142, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.143, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.143, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.142(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @47, align 8
  ret ptr @47
}

define ptr @Core_bool_lazyAnd_18_equals_else.144(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_bool_lazyAnd_18_equals_else.146(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd)
  %13 = call ptr @Core_bool_lazyAnd(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.152, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.153, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.153, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.148, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.149, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.150, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.151, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.149, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.151, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.148(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_bool_lazyOr_18_equals_else.150(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_bool_lazyOr_18_equals_else.152(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.154, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.155, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.162, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.163, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.155, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.163, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.154(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.156, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.157, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.160, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.161, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.157, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.161, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.156(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.158, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.159, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.159, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.158(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_bool_lazyOr_18_equals_else.160(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_bool_lazyOr_18_equals_else.162(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_bool_lazyOr_18_case-1_matched(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr)
  %13 = call ptr @Core_bool_lazyOr(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.164, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.165, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.165, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr)
  %22 = call ptr @Core_bool_lazyOr(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.164(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.166(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.168(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.170(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.172, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.173, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.173, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.172(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.174(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.176, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.177, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.177, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.176(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.178(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.180, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.181, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.181, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.180(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.182(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.184, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.185, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.185, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.184(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.186(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.188, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.189, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.189, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.188(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.190(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.192, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.193, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.193, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.192(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.194(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.196, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.197, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.197, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.196(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.198(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.200, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.201, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.201, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.200(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.202(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.204, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.205, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.212, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.213, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.205, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.213, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.214, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.215, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.216, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.217, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.215, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.217, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.204(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.206, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.207, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.210, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.211, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.207, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.211, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.206(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.208, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.209, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.209, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.208(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_bool_lazyAnd_18_equals_else.210(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_bool_lazyAnd_18_equals_else.212(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.214(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.216(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.218, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.219, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.226, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.227, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.219, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.227, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.228, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.229, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.229, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.218(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.220, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.221, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.224, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.225, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.221, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.225, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.220(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.222, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.223, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.223, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.222(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_bool_lazyAnd_18_equals_else.224(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_bool_lazyAnd_18_equals_else.226(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.228(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.230(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.232, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.233, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.233, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.203)
  %13 = call ptr @Core_bool_lazyAnd.202(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.232(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.234(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.236, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.237, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.244, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.245, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.237, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.245, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.246, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.247, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.247, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.236(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.238, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.239, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.242, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.243, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.239, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.243, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.238(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.240, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.241, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.241, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.240(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @62, align 8
  ret ptr @62
}

define ptr @Core_bool_lazyOr_18_equals_else.242(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_bool_lazyOr_18_equals_else.244(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.246(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.248, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.249, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.256, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.257, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.249, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.257, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.258, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.259, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.260, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.261, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.259, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.261, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.248(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.250, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.251, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.254, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.255, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.251, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.255, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.250(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.252, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.253, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.253, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.252(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_bool_lazyOr_18_equals_else.254(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_bool_lazyOr_18_equals_else.256(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @67, align 8
  ret ptr @67
}

define ptr @Core_bool_lazyOr_18_case-1_matched.258(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.260(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.262(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.264, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.265, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.265, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.235)
  %13 = call ptr @Core_bool_lazyOr.234(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.264(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.266(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.268(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.270, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.271, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.271, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.235)
  %22 = call ptr @Core_bool_lazyOr.234(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.270(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check(ptr %0, ptr %1) {
Core_check_check:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = load ptr, ptr @tag_True, align 8
  %12 = call ptr @candy_builtin_equals(ptr %0, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.272", ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.273", align 8
  %16 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %17 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.273", align 8
  %18 = call ptr @candy_builtin_if_else(ptr %12, ptr %16, ptr %17)
  %19 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %20 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.107", align 8
  %21 = call ptr @candy_builtin_if_else(ptr %18, ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %23 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.274", ptr %22, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %23, ptr @"fun_anonymous_$generated__needs_condition_else.275", align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.275", align 8
  %26 = call ptr @candy_builtin_if_else(ptr %0, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.272"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.274"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_type_is.276(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.278(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.280(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.282, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.283, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.283, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.282(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.284(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.286, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.287, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.287, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.286(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.288(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.290, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.291, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.291, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.290(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.292(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.294, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.295, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.295, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.294(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.296(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.298, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.299, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.299, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.298(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.300(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.302, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.303, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.303, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.302(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.304(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.306, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.307, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.307, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.306(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.308(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.310, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.311, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.311, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.310(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is2, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %1, ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %1, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18)
  %17 = call ptr @Core_controlFlow_recursive_18(ptr %15, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_controlFlow_recursive_18(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_type_is.312(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_int_is(ptr %0, ptr %1) {
Core_int_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_int_negate(ptr %0, ptr %1) {
Core_int_negate:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %12, ptr %0, ptr %16)
  ret ptr %17
}

define ptr @Core_int_compareTo(ptr %0, ptr %1, ptr %2) {
Core_int_compareTo:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr @tag_IntCompareTo, align 8
  %26 = call ptr @Builtins__structGet(ptr %24, ptr %25)
  %27 = call ptr @get_candy_function_pointer(ptr %26)
  %28 = call ptr @get_candy_function_environment(ptr %26)
  %29 = call ptr (...) %27(ptr %0, ptr %1, ptr %28)
  %30 = load ptr, ptr @tag_Equal, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @get_candy_function_pointer(ptr %32)
  %34 = call ptr @get_candy_function_environment(ptr %32)
  %35 = call ptr (...) %33(ptr %29, ptr %30, ptr %34)
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr @tag_Implies, align 8
  %39 = call ptr @Builtins__structGet(ptr %37, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %1, ptr %43)
  %45 = call ptr @get_candy_function_pointer(ptr %39)
  %46 = call ptr @get_candy_function_environment(ptr %39)
  %47 = call ptr (...) %45(ptr %35, ptr %44, ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check)
  %49 = call ptr @Core_check_check(ptr %47, ptr %48)
  ret ptr %29
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo)
  %24 = call ptr @Core_int_compareTo(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Less, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThan:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_compareTo)
  %24 = call ptr @Core_int_compareTo(ptr %0, ptr %1, ptr %23)
  %25 = load ptr, ptr @tag_Greater, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %24, ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_int_isLessThanOrEqualTo(ptr %0, ptr %1, ptr %2) {
Core_int_isLessThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan)
  %24 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1, ptr %2) {
Core_int_isGreaterThanOrEqualTo:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %24 = call ptr @Core_int_isLessThan(ptr %0, ptr %1, ptr %23)
  %25 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr @tag_Not, align 8
  %28 = call ptr @Builtins__structGet(ptr %26, ptr %27)
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %24, ptr %30)
  ret ptr %31
}

define ptr @Core_int_isPositive(ptr %0, ptr %1) {
Core_int_isPositive:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan)
  %14 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonPositive(ptr %0, ptr %1) {
Core_int_isNonPositive:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonPositive:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThan)
  %25 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_isNegative(ptr %0, ptr %1) {
Core_int_isNegative:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %14 = call ptr @Core_int_isLessThan(ptr %0, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative(ptr %0, ptr %1) {
Core_int_isNonNegative:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %25 = call ptr @Core_int_isLessThan(ptr %0, ptr %23, ptr %24)
  %26 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @tag_Not, align 8
  %29 = call ptr @Builtins__structGet(ptr %27, ptr %28)
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %25, ptr %31)
  ret ptr %32
}

define ptr @Core_int_absolute(ptr %0, ptr %1) {
Core_int_absolute:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Is, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %0, ptr %16, ptr %18)
  %20 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:int:absolute:8", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_0, align 8
  %24 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %25 = call ptr @Core_int_isLessThan(ptr %0, ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %0, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %32, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_int_absolute_9, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_int_absolute_9, align 8
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr }, ptr %35, i32 0, i32 0
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_int_absolute_10, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_int_absolute_10, align 8
  %38 = load ptr, ptr @fun_Core_int_absolute_9, align 8
  %39 = load ptr, ptr @fun_Core_int_absolute_10, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %25, ptr %38, ptr %39, ptr %43)
  ret ptr %44
}

define ptr @Core_int_absolute_9(ptr %0) {
Core_int_absolute_9:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:absolute:9:2", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %14, ptr %16, ptr %20)
  ret ptr %21
}

define ptr @Core_int_absolute_10(ptr %0) {
Core_int_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_fitsInRustU32(ptr %0, ptr %1) {
Core_int_fitsInRustU32:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative)
  %13 = call ptr @Core_int_isNonNegative(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_4294967295, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %18 = call ptr @Core_int_isLessThan(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_fitsInRustU128(ptr %0, ptr %1) {
Core_int_fitsInRustU128:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative)
  %13 = call ptr @Core_int_isNonNegative(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThan)
  %18 = call ptr @Core_int_isLessThan(ptr %0, ptr %16, ptr %17)
  ret ptr %18
}

define ptr @Core_int_isEven(ptr %0, ptr %1) {
Core_int_isEven:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  ret ptr %23
}

define ptr @Core_int_isOdd(ptr %0, ptr %1) {
Core_int_isOdd:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %0, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:int:isOdd:16", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @num_1, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = call ptr @get_candy_function_pointer(ptr %37)
  %39 = call ptr @get_candy_function_environment(ptr %37)
  %40 = call ptr (...) %38(ptr %0, ptr %35, ptr %39)
  %41 = load ptr, ptr @num_0, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %40, ptr %41, ptr %45)
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr @tag_Not, align 8
  %50 = call ptr @Builtins__structGet(ptr %48, ptr %49)
  %51 = call ptr @get_candy_function_pointer(ptr %50)
  %52 = call ptr @get_candy_function_environment(ptr %50)
  %53 = call ptr (...) %51(ptr %23, ptr %52)
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %55 = load ptr, ptr %54, align 8
  %56 = call ptr @get_candy_function_pointer(ptr %55)
  %57 = call ptr @get_candy_function_environment(ptr %55)
  %58 = call ptr (...) %56(ptr %46, ptr %53, ptr %57)
  %59 = call ptr @get_candy_function_environment(ptr @fun_Core_check_check)
  %60 = call ptr @Core_check_check(ptr %58, ptr %59)
  ret ptr %23
}

define ptr @Core_int_min(ptr %0, ptr %1, ptr %2) {
Core_int_min:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo)
  %24 = call ptr @Core_int_isLessThanOrEqualTo(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_min_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_min_15, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_min_16, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_min_16, align 8
  %31 = load ptr, ptr @fun_Core_int_min_15, align 8
  %32 = load ptr, ptr @fun_Core_int_min_16, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_min_15(ptr %0) {
Core_int_min_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_min_16(ptr %0) {
Core_int_min_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max(ptr %0, ptr %1, ptr %2) {
Core_int_max:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isGreaterThanOrEqualTo)
  %24 = call ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %0, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_max_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_max_15, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_max_16, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_max_16, align 8
  %31 = load ptr, ptr @fun_Core_int_max_15, align 8
  %32 = load ptr, ptr @fun_Core_int_max_16, align 8
  %33 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %24, ptr %31, ptr %32, ptr %36)
  ret ptr %37
}

define ptr @Core_int_max_15(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_coerceAtLeast(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtLeast:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max)
  %24 = call ptr @Core_int_max(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceAtMost(ptr %0, ptr %1, ptr %2) {
Core_int_coerceAtMost:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min)
  %24 = call ptr @Core_int_min(ptr %0, ptr %1, ptr %23)
  ret ptr %24
}

define ptr @Core_int_coerceIn(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_int_coerceIn:
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_Is, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %7)
  %10 = call ptr @get_candy_function_environment(ptr %7)
  %11 = call ptr (...) %9(ptr %0, ptr %8, ptr %10)
  %12 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @tag_Is, align 8
  %17 = call ptr @Builtins__structGet(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Int, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %17)
  %20 = call ptr @get_candy_function_environment(ptr %17)
  %21 = call ptr (...) %19(ptr %1, ptr %18, ptr %20)
  %22 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @tag_Is, align 8
  %27 = call ptr @Builtins__structGet(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Int, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %27)
  %30 = call ptr @get_candy_function_environment(ptr %27)
  %31 = call ptr (...) %29(ptr %2, ptr %28, ptr %30)
  %32 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isLessThanOrEqualTo)
  %35 = call ptr @Core_int_isLessThanOrEqualTo(ptr %1, ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`minimum | isLessThanOrEqualTo maximum` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_Is, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @get_candy_function_pointer(ptr %41)
  %44 = call ptr @get_candy_function_environment(ptr %41)
  %45 = call ptr (...) %43(ptr %0, ptr %42, ptr %44)
  %46 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr @tag_Is, align 8
  %52 = call ptr @Builtins__structGet(ptr %50, ptr %51)
  %53 = load ptr, ptr @tag_Int, align 8
  %54 = call ptr @get_candy_function_pointer(ptr %52)
  %55 = call ptr @get_candy_function_environment(ptr %52)
  %56 = call ptr (...) %54(ptr %1, ptr %53, ptr %55)
  %57 = load ptr, ptr @"text_`is minimum` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:int:coerceIn:24", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr @fun_Core_int_max)
  %61 = call ptr @Core_int_max(ptr %0, ptr %1, ptr %60)
  %62 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr @tag_Is, align 8
  %65 = call ptr @Builtins__structGet(ptr %63, ptr %64)
  %66 = load ptr, ptr @tag_Int, align 8
  %67 = call ptr @get_candy_function_pointer(ptr %65)
  %68 = call ptr @get_candy_function_environment(ptr %65)
  %69 = call ptr (...) %67(ptr %61, ptr %66, ptr %68)
  %70 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %71 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %72 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr %71)
  %73 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr @tag_Is, align 8
  %76 = call ptr @Builtins__structGet(ptr %74, ptr %75)
  %77 = load ptr, ptr @tag_Int, align 8
  %78 = call ptr @get_candy_function_pointer(ptr %76)
  %79 = call ptr @get_candy_function_environment(ptr %76)
  %80 = call ptr (...) %78(ptr %2, ptr %77, ptr %79)
  %81 = load ptr, ptr @"text_`is maximum` was not satisfied", align 8
  %82 = load ptr, ptr @"Core:int:coerceIn:27", align 8
  %83 = call ptr @"anonymous_$generated__needs"(ptr %80, ptr %81, ptr %82)
  %84 = call ptr @get_candy_function_environment(ptr @fun_Core_int_min)
  %85 = call ptr @Core_int_min(ptr %61, ptr %2, ptr %84)
  ret ptr %85
}

define ptr @Core_int_pow(ptr %0, ptr %1, ptr %2) {
Core_int_pow:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_int_isNonNegative)
  %24 = call ptr @Core_int_isNonNegative(ptr %1, ptr %23)
  %25 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = alloca ptr, i64 3, align 8
  %28 = alloca ptr, i64 3, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %28, i64 0
  store ptr %1, ptr %31, align 8
  %32 = load ptr, ptr @tag_Base, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %32, ptr %33, align 8
  %34 = getelementptr ptr, ptr %28, i64 1
  store ptr %0, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = getelementptr ptr, ptr %28, i64 2
  store ptr null, ptr %36, align 8
  %37 = call ptr @make_candy_struct(ptr %27, ptr %28)
  %38 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 0
  store ptr %40, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 1
  store ptr %43, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 2
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 3
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 4
  store ptr %52, ptr %53, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 5
  store ptr %55, ptr %56, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i32 0, i32 6
  store ptr %58, ptr %59, align 8
  %60 = call ptr @make_candy_function(ptr @Core_int_pow_21, ptr %38, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %60, ptr @fun_Core_int_pow_21, align 8
  %61 = load ptr, ptr @fun_Core_int_pow_21, align 8
  %62 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive)
  %63 = call ptr @Core_controlFlow_recursive(ptr %37, ptr %61, ptr %62)
  ret ptr %63
}

define ptr @Core_int_pow_21(ptr %0, ptr %1, ptr %2) {
Core_int_pow_21:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.322, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_int_pow_21_1_isMatch_else.323, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_fibonacci_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.323, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = load ptr, ptr @num_0, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %28, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %35 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %26, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %36, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %0, ptr %44, align 8
  %45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 3
  store ptr %28, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 6
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 4
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 5
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 6
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 7
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 8
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 9
  store ptr %62, ptr %63, align 8
  %64 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %41, i32 0, i32 10
  store ptr %65, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %68 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %69 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %40, ptr %68, ptr %69)
  ret ptr %70
}

define ptr @Core_int_pow_21_1_equals_then(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.320, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.321, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.321, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @68, align 8
  ret ptr @68
}

define ptr @Core_int_pow_21_1_hasKey_else(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @69, align 8
  ret ptr @69
}

define ptr @Core_int_pow_21_1_isMatch_then(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.314, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.315, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.316, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.317, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.315, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.317, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.318, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.319, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.319, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.314(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @70, align 8
  ret ptr @70
}

define ptr @Core_int_pow_21_1_hasKey_else.316(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @71, align 8
  ret ptr @71
}

define ptr @Core_int_pow_21_1_isMatch_then.318(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @72, align 8
  ret ptr @72
}

define ptr @Core_int_pow_21_1_isMatch_else(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.320(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @73, align 8
  ret ptr @73
}

define ptr @Core_int_pow_21_1_isMatch_else.322(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @74, align 8
  ret ptr @74
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 2
  store ptr %13, ptr %14, align 8
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 3
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 4
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 5
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 6
  store ptr %25, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 7
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 8
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 10
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i32 0, i32 9
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-1_matched, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  %37 = call ptr @get_candy_function_environment(ptr @fun_Core_int_pow_21_4_case-1_matched)
  %38 = call ptr @Core_int_pow_21_4_case-1_matched(ptr %37)
  ret ptr %38
}

define ptr @Core_int_pow_21_4_case-1_matched(ptr %0) {
Core_int_pow_21_4_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Is, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @num_1, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 6
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %21, ptr %22, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 2
  store ptr %36, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 3
  store ptr %39, ptr %40, align 8
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %28, i32 0, i32 4
  store ptr %42, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_int_pow_21_4_5, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 7
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 3
  store ptr %56, ptr %57, align 8
  %58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 4
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 9
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i32 0, i32 5
  store ptr %62, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_int_pow_21_4_6, align 8
  %65 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  %66 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  %67 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 8
  %68 = load ptr, ptr %67, align 8
  %69 = call ptr @get_candy_function_pointer(ptr %68)
  %70 = call ptr @get_candy_function_environment(ptr %68)
  %71 = call ptr (...) %69(ptr %27, ptr %65, ptr %66, ptr %70)
  ret ptr %71
}

define ptr @Core_int_pow_21_4_5(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = alloca ptr, i64 3, align 8
  %19 = alloca ptr, i64 3, align 8
  %20 = load ptr, ptr @tag_Exponent, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %19, i64 0
  store ptr %17, ptr %22, align 8
  %23 = load ptr, ptr @tag_Base, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr ptr, ptr %19, i64 1
  store ptr %9, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = getelementptr ptr, ptr %19, i64 2
  store ptr null, ptr %27, align 8
  %28 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = call ptr @get_candy_function_pointer(ptr %30)
  %32 = call ptr @get_candy_function_environment(ptr %30)
  %33 = call ptr (...) %31(ptr %28, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_4_6(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %2, ptr %4, ptr %8)
  %10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @num_1, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 5
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  %18 = load ptr, ptr @num_1, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %17, ptr %18, ptr %22)
  %24 = alloca ptr, i64 3, align 8
  %25 = alloca ptr, i64 3, align 8
  %26 = load ptr, ptr @tag_Base, align 8
  %27 = getelementptr ptr, ptr %24, i64 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr ptr, ptr %25, i64 0
  store ptr %9, ptr %28, align 8
  %29 = load ptr, ptr @tag_Exponent, align 8
  %30 = getelementptr ptr, ptr %24, i64 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr ptr, ptr %25, i64 1
  store ptr %23, ptr %31, align 8
  %32 = getelementptr ptr, ptr %24, i64 2
  store ptr null, ptr %32, align 8
  %33 = getelementptr ptr, ptr %25, i64 2
  store ptr null, ptr %33, align 8
  %34 = call ptr @make_candy_struct(ptr %24, ptr %25)
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %36 = load ptr, ptr %35, align 8
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %34, ptr %38)
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @get_candy_function_pointer(ptr %43)
  %45 = call ptr @get_candy_function_environment(ptr %43)
  %46 = call ptr (...) %44(ptr %41, ptr %39, ptr %45)
  ret ptr %46
}

define ptr @Core_type_is.324(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.326(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.328(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.330, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.331, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.331, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.330(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.332(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.334, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.335, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.335, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.334(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.336(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.338, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.339, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.339, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.338(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.340(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.342, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.343, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.343, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.342(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.344(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.346, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.347, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.347, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.346(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.348(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.350, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.351, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.351, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.350(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.352(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.354, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.355, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.355, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.354(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.356(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.358, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.359, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.359, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.358(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_type_is.360(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is.362(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0.364(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.366, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.367, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.367, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11.366(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1.368(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11.370, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11.371, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11.371, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11.370(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2.372(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11.374, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11.375, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11.375, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11.374(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3.376(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11.378, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11.379, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11.379, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11.378(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4.380(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11.382, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11.383, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11.383, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11.382(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5.384(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11.386, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11.387, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11.387, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11.386(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run.388(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.390, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.391, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.391, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.390(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun.392(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.394, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.395, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.395, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.394(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyAnd.396(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyAnd:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.398, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyAnd_18_equals_then.399, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.406, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyAnd_18_equals_else.407, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.399, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.407, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched.408, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.409, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %26, ptr %39, align 8
  %40 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.410, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %40, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.411, align 8
  %41 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched.409, align 8
  %42 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch.411, align 8
  %43 = call ptr @candy_builtin_if_else(ptr %30, ptr %41, ptr %42)
  ret ptr %43
}

define ptr @Core_bool_lazyAnd_18_equals_then.398(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.400, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.401, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.404, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.405, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.401, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.405, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.400(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.402, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.403, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.403, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.402(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @75, align 8
  ret ptr @75
}

define ptr @Core_bool_lazyAnd_18_equals_else.404(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @76, align 8
  ret ptr @76
}

define ptr @Core_bool_lazyAnd_18_equals_else.406(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @77, align 8
  ret ptr @77
}

define ptr @Core_bool_lazyAnd_18_case-0_matched.408(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch.410(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.412, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.413, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.420, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.421, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.413, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.421, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.422, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.423, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch.423, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.412(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.414, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.415, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.418, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.419, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.415, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.419, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.414(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.416, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.417, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.417, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.416(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @78, align 8
  ret ptr @78
}

define ptr @Core_bool_lazyAnd_18_equals_else.418(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @79, align 8
  ret ptr @79
}

define ptr @Core_bool_lazyAnd_18_equals_else.420(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @80, align 8
  ret ptr @80
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch.422(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_and.424(ptr %0, ptr %1) {
Core_bool_and:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_and_12.426, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_and_12.427, align 8
  %11 = load ptr, ptr @fun_Core_bool_and_12.427, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyAnd.397)
  %13 = call ptr @Core_bool_lazyAnd.396(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_and_12.426(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_lazyOr.428(ptr %0, ptr %1, ptr %2) {
Core_bool_lazyOr:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_Tag, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.430, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_lazyOr_18_equals_then.431, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.438, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_lazyOr_18_equals_else.439, align 8
  %24 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.431, align 8
  %25 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.439, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %1, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %26, ptr %34, align 8
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %31, i32 0, i32 3
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch.440, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.441, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch.441, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %30, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Core_bool_lazyOr_18_equals_then.430(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.432, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.433, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.436, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.437, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.433, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.437, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.432(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.434, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.435, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.435, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.434(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @81, align 8
  ret ptr @81
}

define ptr @Core_bool_lazyOr_18_equals_else.436(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @82, align 8
  ret ptr @82
}

define ptr @Core_bool_lazyOr_18_equals_else.438(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @83, align 8
  ret ptr @83
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch.440(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.442, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.443, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.450, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.451, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.443, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.451, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched.452, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_matched.453, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %20, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch.454, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.455, align 8
  %36 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched.453, align 8
  %37 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch.455, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %24, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_bool_lazyOr_18_equals_then.442(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.444, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.445, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.448, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.449, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.445, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.449, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.444(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.446, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.447, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.447, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.446(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @84, align 8
  ret ptr @84
}

define ptr @Core_bool_lazyOr_18_equals_else.448(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @85, align 8
  ret ptr @85
}

define ptr @Core_bool_lazyOr_18_equals_else.450(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @86, align 8
  ret ptr @86
}

define ptr @Core_bool_lazyOr_18_case-1_matched.452(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Run, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %4)
  %8 = call ptr @get_candy_function_environment(ptr %4)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = call ptr @Core_bool_is(ptr %9)
  %11 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  ret ptr %9
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch.454(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_or.456(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_or_12.458, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_or_12.459, align 8
  %11 = load ptr, ptr @fun_Core_bool_or_12.459, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.429)
  %13 = call ptr @Core_bool_lazyOr.428(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or_12.458(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_xor.460(ptr %0, ptr %1, ptr %2) {
Core_bool_xor:
  %3 = call ptr @Core_bool_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_bool_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_bool_not(ptr %1)
  %10 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = call ptr @get_candy_function_pointer(ptr %11)
  %13 = call ptr @get_candy_function_environment(ptr %11)
  %14 = call ptr (...) %12(ptr %0, ptr %9, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_implies.462(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12.464, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12.465, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12.465, align 8
  %21 = call ptr @get_candy_function_environment(ptr @fun_Core_bool_lazyOr.429)
  %22 = call ptr @Core_bool_lazyOr.428(ptr %8, ptr %20, ptr %21)
  ret ptr %22
}

define ptr @Core_bool_or_12.464(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_type_is.466(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_tag_is(ptr %0, ptr %1) {
Core_tag_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_tag_withSymbol(ptr %0, ptr %1, ptr %2) {
Core_tag_withSymbol:
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Tag, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @tag_Is, align 8
  %16 = call ptr @Builtins__structGet(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Tag, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %1, ptr %17, ptr %19)
  %21 = load ptr, ptr @"text_`is symbolTag` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %1, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 4
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_Not, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %27, ptr %33)
  %35 = load ptr, ptr @"text_`symbolTag | hasValue | bool.not` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8
  %39 = call ptr @get_candy_function_pointer(ptr %38)
  %40 = call ptr @get_candy_function_environment(ptr %38)
  %41 = call ptr (...) %39(ptr %0, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 0
  store ptr %1, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 1
  store ptr %45, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %42, i32 0, i32 2
  store ptr %0, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_tag_withSymbol_28, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_tag_withSymbol_28, align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 5
  %51 = load ptr, ptr %50, align 8
  %52 = getelementptr inbounds { ptr, ptr }, ptr %49, i32 0, i32 0
  store ptr %51, ptr %52, align 8
  %53 = getelementptr inbounds { ptr, ptr }, ptr %49, i32 0, i32 1
  store ptr %1, ptr %53, align 8
  %54 = call ptr @make_candy_function(ptr @Core_tag_withSymbol_29, ptr %49, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %54, ptr @fun_Core_tag_withSymbol_29, align 8
  %55 = load ptr, ptr @fun_Core_tag_withSymbol_28, align 8
  %56 = load ptr, ptr @fun_Core_tag_withSymbol_29, align 8
  %57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i32 0, i32 3
  %58 = load ptr, ptr %57, align 8
  %59 = call ptr @get_candy_function_pointer(ptr %58)
  %60 = call ptr @get_candy_function_environment(ptr %58)
  %61 = call ptr (...) %59(ptr %41, ptr %55, ptr %56, ptr %60)
  ret ptr %61
}

define ptr @Core_tag_withSymbol_28(ptr %0) {
Core_tag_withSymbol_28:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %7, ptr %11)
  ret ptr %12
}

define ptr @Core_tag_withSymbol_29(ptr %0) {
Core_tag_withSymbol_29:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  ret ptr %7
}

define ptr @Core_tag_withValue(ptr %0, ptr %1, ptr %2) {
Core_tag_withValue:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_Is, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Tag, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %6)
  %9 = call ptr @get_candy_function_environment(ptr %6)
  %10 = call ptr (...) %8(ptr %0, ptr %7, ptr %9)
  %11 = load ptr, ptr @"text_`is tag` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %0, ptr %16)
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %1, ptr %19)
  ret ptr %20
}

define ptr @Core_type_is.468(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_result_getValue(ptr %0, ptr %1) {
Core_result_getValue:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_GetValue, align 8
  %8 = call ptr @Builtins__structGet(ptr %6, ptr %7)
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %0, ptr %10)
  ret ptr %11
}

define ptr @Core_result_isOk(ptr %0, ptr %1) {
Core_result_isOk:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_WithoutValue, align 8
  %8 = call ptr @Builtins__structGet(ptr %6, ptr %7)
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %0, ptr %10)
  %12 = load ptr, ptr @tag_Ok, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_result_unwrap(ptr %0, ptr %1) {
Core_result_unwrap:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %0)
  %6 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:result:unwrap:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_WithoutValue, align 8
  %12 = call ptr @Builtins__structGet(ptr %10, ptr %11)
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %0, ptr %14)
  %16 = load ptr, ptr @tag_Ok, align 8
  %17 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @"text_`isOk result` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_result_is(ptr %0)
  %25 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %26 = load ptr, ptr @"Core:result:unwrap:12", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_GetValue, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %0, ptr %33)
  ret ptr %34
}

define ptr @Core_result_expect(ptr %0, ptr %1, ptr %2) {
Core_result_expect:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Text, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %1, ptr %10, ptr %12)
  %14 = load ptr, ptr @"text_`type.is message Text` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @Core_result_is(ptr %0)
  %17 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:result:expect:20", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_WithoutValue, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %23)
  %25 = call ptr @get_candy_function_environment(ptr %23)
  %26 = call ptr (...) %24(ptr %0, ptr %25)
  %27 = load ptr, ptr @tag_Ok, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %26, ptr %27, ptr %31)
  %33 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %1, ptr null)
  %34 = call ptr @Core_result_is(ptr %0)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:result:expect:25", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_GetValue, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %43)
  ret ptr %44
}

define ptr @Core_result_isError(ptr %0, ptr %1) {
Core_result_isError:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_WithoutValue, align 8
  %8 = call ptr @Builtins__structGet(ptr %6, ptr %7)
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %0, ptr %10)
  %12 = load ptr, ptr @tag_Error, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @get_candy_function_pointer(ptr %14)
  %16 = call ptr @get_candy_function_environment(ptr %14)
  %17 = call ptr (...) %15(ptr %11, ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_result_unwrapError(ptr %0, ptr %1) {
Core_result_unwrapError:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %0)
  %6 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:result:unwrapError:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_WithoutValue, align 8
  %12 = call ptr @Builtins__structGet(ptr %10, ptr %11)
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %0, ptr %14)
  %16 = load ptr, ptr @tag_Error, align 8
  %17 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @get_candy_function_pointer(ptr %18)
  %20 = call ptr @get_candy_function_environment(ptr %18)
  %21 = call ptr (...) %19(ptr %15, ptr %16, ptr %20)
  %22 = load ptr, ptr @"text_`isError result` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_result_is(ptr %0)
  %25 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %26 = load ptr, ptr @"Core:result:unwrapError:12", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr @tag_GetValue, align 8
  %31 = call ptr @Builtins__structGet(ptr %29, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %0, ptr %33)
  ret ptr %34
}

define ptr @Core_result_expectError(ptr %0, ptr %1, ptr %2) {
Core_result_expectError:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Text, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %1, ptr %10, ptr %12)
  %14 = load ptr, ptr @"text_`type.is message Text` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @Core_result_is(ptr %0)
  %17 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:result:expectError:20", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_WithoutValue, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %23)
  %25 = call ptr @get_candy_function_environment(ptr %23)
  %26 = call ptr (...) %24(ptr %0, ptr %25)
  %27 = load ptr, ptr @tag_Error, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %26, ptr %27, ptr %31)
  %33 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %1, ptr null)
  %34 = call ptr @Core_result_is(ptr %0)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:result:expectError:25", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr @tag_GetValue, align 8
  %41 = call ptr @Builtins__structGet(ptr %39, ptr %40)
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %0, ptr %43)
  ret ptr %44
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_result_mapOrElse:
  %4 = call ptr @Core_result_is(ptr %0)
  %5 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Is1, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %1, ptr %12)
  %14 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_Is1, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = call ptr @get_candy_function_pointer(ptr %19)
  %21 = call ptr @get_candy_function_environment(ptr %19)
  %22 = call ptr (...) %20(ptr %2, ptr %21)
  %23 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @candy_builtin_type_of(ptr %0)
  %26 = load ptr, ptr @tag_Tag, align 8
  %27 = call ptr @candy_builtin_equals(ptr %26, ptr %25)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %0, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.476, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_30_equals_else.477, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.477, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %27, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_0, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %36, ptr %37)
  %39 = load ptr, ptr @tag_Match, align 8
  %40 = call ptr @candy_builtin_equals(ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %36, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %1, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_matched, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %46 = getelementptr inbounds { ptr, ptr, ptr }, ptr %45, i32 0, i32 0
  store ptr %0, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %45, i32 0, i32 1
  store ptr %36, ptr %47, align 8
  %48 = getelementptr inbounds { ptr, ptr, ptr }, ptr %45, i32 0, i32 2
  store ptr %2, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %45, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %50 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %51 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %52 = call ptr @candy_builtin_if_else(ptr %40, ptr %50, ptr %51)
  ret ptr %52
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.470, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.471, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.474, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.475, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.471, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.475, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.470(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.472, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.473, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.473, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.472(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @87, align 8
  ret ptr @87
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.474(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @88, align 8
  ret ptr @88
}

define ptr @Core_result_mapOrElse_30_equals_else.476(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @89, align 8
  ret ptr @89
}

define ptr @Core_result_mapOrElse_30_case-0_matched(ptr %0) {
Core_result_mapOrElse_30_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.478, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_result_mapOrElse_30_equals_then.479, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.488, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_else.489, align 8
  %18 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.479, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.489, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_result_mapOrElse_30_equals_then.478(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.480, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.481, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.486, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.487, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.481, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.487, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.480(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.482, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.483, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.484, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.485, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.483, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.485, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.482(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @90, align 8
  ret ptr @90
}

define ptr @Core_result_mapOrElse_30_equals_else.484(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.486(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @91, align 8
  ret ptr @91
}

define ptr @Core_result_mapOrElse_30_equals_else.488(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @92, align 8
  ret ptr @92
}

define ptr @Core_result_mapOrElse_30_case-1_matched(ptr %0) {
Core_result_mapOrElse_30_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_result_mapOr(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_result_mapOr:
  %4 = call ptr @Core_result_is(ptr %0)
  %5 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Is1, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %1, ptr %12)
  %14 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %2, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_result_mapOr_20, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_result_mapOr_20, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  %20 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOrElse)
  %21 = call ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_result_mapOr_20(ptr %0, ptr %1) {
Core_result_mapOr_20:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_flatMap(ptr %0, ptr %1, ptr %2) {
Core_result_flatMap:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_flatMap_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_flatMap_19, align 8
  %18 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOr)
  %20 = call ptr @Core_result_mapOr(ptr %0, ptr %18, ptr %0, ptr %19)
  ret ptr %20
}

define ptr @Core_result_flatMap_19(ptr %0, ptr %1) {
Core_result_flatMap_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %6
}

define ptr @Core_result_map(ptr %0, ptr %1, ptr %2) {
Core_result_map:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_map_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_map_19, align 8
  %18 = load ptr, ptr @fun_Core_result_map_19, align 8
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMap)
  %20 = call ptr @Core_result_flatMap(ptr %0, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_result_map_19(ptr %0, ptr %1) {
Core_result_map_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  %7 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Ok.490, align 8
  ret ptr @tag_Ok.490
}

define ptr @Core_result_and(ptr %0, ptr %1) {
Core_result_and:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is resultA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %1)
  %6 = load ptr, ptr @"text_`is resultB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_and_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_and_12, align 8
  %11 = load ptr, ptr @fun_Core_result_and_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMap)
  %13 = call ptr @Core_result_flatMap(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_and_12(ptr %0, ptr %1) {
Core_result_and_12:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_flatMapError(ptr %0, ptr %1, ptr %2) {
Core_result_flatMapError:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_flatMapError_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_flatMapError_19, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_flatMapError_20, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_flatMapError_20, align 8
  %21 = load ptr, ptr @fun_Core_result_flatMapError_19, align 8
  %22 = load ptr, ptr @fun_Core_result_flatMapError_20, align 8
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOrElse)
  %24 = call ptr @Core_result_mapOrElse(ptr %0, ptr %21, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_result_flatMapError_19(ptr %0, ptr %1) {
Core_result_flatMapError_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_flatMapError_20(ptr %0, ptr %1) {
Core_result_flatMapError_20:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %6
}

define ptr @Core_result_mapError(ptr %0, ptr %1, ptr %2) {
Core_result_mapError:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is1, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapError_19, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapError_19, align 8
  %18 = load ptr, ptr @fun_Core_result_mapError_19, align 8
  %19 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMapError)
  %20 = call ptr @Core_result_flatMapError(ptr %0, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_result_mapError_19(ptr %0, ptr %1) {
Core_result_mapError_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  %7 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Error.491, align 8
  ret ptr @tag_Error.491
}

define ptr @Core_result_or(ptr %0, ptr %1) {
Core_result_or:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is resultA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_result_is(ptr %1)
  %6 = load ptr, ptr @"text_`is resultB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_or_12, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_or_12, align 8
  %11 = load ptr, ptr @fun_Core_result_or_12, align 8
  %12 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMapError)
  %13 = call ptr @Core_result_flatMapError(ptr %0, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_or_12(ptr %0, ptr %1) {
Core_result_or_12:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_unwrapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_unwrapOrElse:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is0, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = call ptr @get_candy_function_pointer(ptr %9)
  %11 = call ptr @get_candy_function_environment(ptr %9)
  %12 = call ptr (...) %10(ptr %1, ptr %11)
  %13 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %1, ptr %16, align 8
  %17 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %18, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_20, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %21 = load ptr, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_19", align 8
  %22 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %23 = call ptr @get_candy_function_environment(ptr @fun_Core_result_mapOrElse)
  %24 = call ptr @Core_result_mapOrElse(ptr %0, ptr %21, ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_result_unwrapOrElse_20(ptr %0, ptr %1) {
Core_result_unwrapOrElse_20:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Run, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %5)
  %9 = call ptr @get_candy_function_environment(ptr %5)
  %10 = call ptr (...) %8(ptr %7, ptr %9)
  ret ptr %10
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_unwrapOr_7, align 8
  %8 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %9 = call ptr @get_candy_function_environment(ptr @fun_Core_result_unwrapOrElse)
  %10 = call ptr @Core_result_unwrapOrElse(ptr %0, ptr %8, ptr %9)
  ret ptr %10
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_flatten(ptr %0) {
Core_result_flatten:
  %1 = call ptr @Core_result_is(ptr %0)
  %2 = load ptr, ptr @"text_`is resultOfResult` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Core_result_flatten_7, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_result_flatten_7, align 8
  %6 = load ptr, ptr @fun_Core_result_flatten_7, align 8
  %7 = call ptr @get_candy_function_environment(ptr @fun_Core_result_flatMap)
  %8 = call ptr @Core_result_flatMap(ptr %0, ptr %6, ptr %7)
  ret ptr %8
}

define ptr @Core_result_flatten_7(ptr %0) {
Core_result_flatten_7:
  %1 = call ptr @Core_result_is(ptr %0)
  %2 = load ptr, ptr @"text_`is innerResult` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  ret ptr %0
}

define ptr @Examples_fibonacci_fibonacci_2(ptr %0, ptr %1, ptr %2) {
Examples_fibonacci_fibonacci_2:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr @tag_IfElse, align 8
  %6 = call ptr @Builtins__structGet(ptr %4, ptr %5)
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr @tag_Equals, align 8
  %10 = call ptr @Builtins__structGet(ptr %8, ptr %9)
  %11 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr @tag_IntCompareTo, align 8
  %14 = call ptr @Builtins__structGet(ptr %12, ptr %13)
  %15 = load ptr, ptr @num_2, align 8
  %16 = call ptr @get_candy_function_pointer(ptr %14)
  %17 = call ptr @get_candy_function_environment(ptr %14)
  %18 = call ptr (...) %16(ptr %1, ptr %15, ptr %17)
  %19 = load ptr, ptr @tag_Less, align 8
  %20 = call ptr @get_candy_function_pointer(ptr %10)
  %21 = call ptr @get_candy_function_environment(ptr %10)
  %22 = call ptr (...) %20(ptr %18, ptr %19, ptr %21)
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr }, ptr %23, i32 0, i32 0
  store ptr %1, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2_12, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Examples_fibonacci_fibonacci_2_12, align 8
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %1, ptr %27, align 8
  %28 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %0, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Examples_fibonacci_fibonacci_2_13, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Examples_fibonacci_fibonacci_2_13, align 8
  %33 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_12, align 8
  %34 = load ptr, ptr @fun_Examples_fibonacci_fibonacci_2_13, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %6)
  %36 = call ptr @get_candy_function_environment(ptr %6)
  %37 = call ptr (...) %35(ptr %22, ptr %33, ptr %34, ptr %36)
  ret ptr %37
}

define ptr @Examples_fibonacci_fibonacci_2_12(ptr %0) {
Examples_fibonacci_fibonacci_2_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_fibonacci_fibonacci_2_13(ptr %0) {
Examples_fibonacci_fibonacci_2_13:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_IntSubtract, align 8
  %4 = call ptr @Builtins__structGet(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_1, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %4)
  %9 = call ptr @get_candy_function_environment(ptr %4)
  %10 = call ptr (...) %8(ptr %6, ptr %7, ptr %9)
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %10, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_IntAdd, align 8
  %19 = call ptr @Builtins__structGet(ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_IntSubtract, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @get_candy_function_pointer(ptr %23)
  %28 = call ptr @get_candy_function_environment(ptr %23)
  %29 = call ptr (...) %27(ptr %25, ptr %26, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %29, ptr %33)
  %35 = call ptr @get_candy_function_pointer(ptr %19)
  %36 = call ptr @get_candy_function_environment(ptr %19)
  %37 = call ptr (...) %35(ptr %15, ptr %34, ptr %36)
  ret ptr %37
}

define ptr @Examples_fibonacci_recursive_0(ptr %0, ptr %1) {
Examples_fibonacci_recursive_0:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Examples_fibonacci_recursive_0_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  %5 = load ptr, ptr @fun_Examples_fibonacci_recursive_0_0, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Examples_fibonacci_fibonacci_2)
  %7 = call ptr @Examples_fibonacci_fibonacci_2(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Examples_fibonacci_recursive_0_0(ptr %0, ptr %1) {
Examples_fibonacci_recursive_0_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Examples_fibonacci_21_8_18(ptr %0, ptr %1) {
Examples_fibonacci_21_8_18:
  %2 = load ptr, ptr @fun_Examples_fibonacci_recursive_0, align 8
  %3 = call ptr @Examples_fibonacci_recursive_0(ptr %2, ptr %0)
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr @tag_ToDebugText, align 8
  %7 = call ptr @Builtins__structGet(ptr %5, ptr %6)
  %8 = call ptr @get_candy_function_pointer(ptr %7)
  %9 = call ptr @get_candy_function_environment(ptr %7)
  %10 = call ptr (...) %8(ptr %3, ptr %9)
  ret ptr %10
}

define ptr @Examples_fibonacci_21(ptr %0, ptr %1) {
Examples_fibonacci_21:
  %2 = load ptr, ptr @tag_Arguments, align 8
  %3 = call ptr @Builtins__structGet(ptr %0, ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_List, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Examples_fibonacci_21_8_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_else.494, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Examples_fibonacci_21_8_equals_else.495, align 8
  %13 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then, align 8
  %14 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else.495, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %15, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %26, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_case-0_matched, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Examples_fibonacci_21_8_case-0_matched, align 8
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %15, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_case-0_didNotMatch, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Examples_fibonacci_21_8_case-0_didNotMatch, align 8
  %32 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_matched, align 8
  %33 = load ptr, ptr @fun_Examples_fibonacci_21_8_case-0_didNotMatch, align 8
  %34 = call ptr @candy_builtin_if_else(ptr %19, ptr %32, ptr %33)
  %35 = load ptr, ptr @tag_Stdout, align 8
  %36 = call ptr @Builtins__structGet(ptr %0, ptr %35)
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %34, ptr %38)
  ret ptr %39
}

define ptr @Examples_fibonacci_21_8_equals_then(ptr %0) {
Examples_fibonacci_21_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_list_length(ptr %2)
  %4 = load ptr, ptr @num_1, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_then.492, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Examples_fibonacci_21_8_equals_then.493, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Examples_fibonacci_21_8_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Examples_fibonacci_21_8_equals_else, align 8
  %14 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_then.493, align 8
  %15 = load ptr, ptr @fun_Examples_fibonacci_21_8_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Examples_fibonacci_21_8_equals_then.492(ptr %0) {
Examples_fibonacci_21_8_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @93, align 8
  ret ptr @93
}

define ptr @Examples_fibonacci_21_8_equals_else(ptr %0) {
Examples_fibonacci_21_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected 1 item, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @94, align 8
  ret ptr @94
}

define ptr @Examples_fibonacci_21_8_equals_else.494(ptr %0) {
Examples_fibonacci_21_8_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a List, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @95, align 8
  ret ptr @95
}

define ptr @Examples_fibonacci_21_8_case-0_matched(ptr %0) {
Examples_fibonacci_21_8_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Parse, align 8
  %8 = call ptr @Builtins__structGet(ptr %6, ptr %7)
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %4, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr @tag_Map, align 8
  %15 = call ptr @Builtins__structGet(ptr %13, ptr %14)
  %16 = load ptr, ptr @fun_Examples_fibonacci_21_8_18, align 8
  %17 = call ptr @get_candy_function_pointer(ptr %15)
  %18 = call ptr @get_candy_function_environment(ptr %15)
  %19 = call ptr (...) %17(ptr %11, ptr %16, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr @tag_GetValue, align 8
  %23 = call ptr @Builtins__structGet(ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %23)
  %25 = call ptr @get_candy_function_environment(ptr %23)
  %26 = call ptr (...) %24(ptr %19, ptr %25)
  ret ptr %26
}

define ptr @Examples_fibonacci_21_8_case-0_didNotMatch(ptr %0) {
Examples_fibonacci_21_8_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_Usage: `cargo run -- run fibonacci.candy -- <number>`", align 8
  ret ptr %5
}
