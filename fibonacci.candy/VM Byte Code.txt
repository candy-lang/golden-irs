# VM Byte Code for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constant heap
<replaced address 017970d57aa05a94>: Core:result:mapOr:2
<replaced address 05251864681a3500>: Builtins::typeOf:5
<replaced address 055673228b46d5b7>: Core:result:getValue:2
<replaced address 056aa7001fbe6a6f>: "`tag | typeIs Tag` was not satisfied"
<replaced address 05cf6ed3a3e1ef22>: "NotUtf8"
<replaced address 05e45b91c25d1055>: Core:result:flatMap:2
<replaced address 07bb83a4850353ca>: { 0 arguments (capturing nothing) → ip-4452 }
<replaced address 07c1052bec280409>: "`then | typeIs Function` was not satisfied"
<replaced address 0a03aa928c1cc741>: { 2 arguments (capturing nothing) → ip-751 }
<replaced address 0a7bac382389bce1>: "ReadToEnd"
<replaced address 0d4569ee47d3c0f2>: (,)
<replaced address 0e5dcb874e6dfa57>: Core:result:map:2
<replaced address 0f59d2d5f5f1d623>: Core:result:mapOrElse:4
<replaced address 0fea7d5fa5afcc30>: Builtins::typeIs:25
<replaced address 1076a7c75d895c72>: "NotAnInteger"
<replaced address 13077cf4fbb4e55a>: Builtins::tagGetValue:5
<replaced address 1315f9b01ba30c9f>: Examples:fibonacci:fibonacci:3
<replaced address 13bae94f69b93dec>: Builtins::ifElse:11
<replaced address 13bbc38331a2c1a7>: Builtins::intSubtract:18
<replaced address 1620eaa8950d6c6e>: { 0 arguments (capturing nothing) → ip-112 }
<replaced address 18dc4adab2c8e8df>: "`struct | ✨.structHasKey key` was not satisfied"
<replaced address 19beba0e7e49ddcc>: Match ((,))
<replaced address 1c69e8d7a07a9639>: Core:result:getValue:12
<replaced address 1cc1fbe0eb59b9b1>: { 2 arguments (capturing nothing) → ip-4031 }
<replaced address 1f44a429f4531e2d>: Builtins::ifElse:14
<replaced address 1f92019f89733a43>: Builtins::structGet:12
<replaced address 216d199efe6cdff8>: Builtins::intAdd:18
<replaced address 2571413c63a1bad9>: Core:result:map:12
<replaced address 266d488b0b2596a5>: Core:result:mapOrElse:2
<replaced address 26d9ca4577e51bb7>: { 2 arguments (capturing nothing) → ip-3593 }
<replaced address 2749496cbbd972e7>: "`b | typeIs Int` was not satisfied"
<replaced address 2a8be7103eabae0e>: "Ok"
<replaced address 2ace5f047eecfe6e>: Builtins::ifElse:1
<replaced address 2db459441af47a3a>: Builtins::intParse:11
<replaced address 2ded061b072e15be>: { 0 arguments (capturing nothing) → ip-0 }
<replaced address 328a0a2dafb24069>: { 1 argument (capturing nothing) → ip-629 }
<replaced address 36eebe9168aef0b0>: "The `reason` must be a text."
<replaced address 3d80be4020595727>: Core:result:mapOrElse:24
<replaced address 3eca0e872d043602>: Builtins::typeIs:19
<replaced address 3f1dcd30453d2689>: "`subtrahend | typeIs Int` was not satisfied"
<replaced address 3f287b94ceaa3f9a>: Examples:fibonacci:fibonacci:2:11:9
<replaced address 3f846f87aff145a7>: { 1 argument (capturing nothing) → ip-955 }
<replaced address 41e70e1c83094f2c>: Builtins::tagGetValue:11
<replaced address 41fcadf3280286e7>: Builtins::intCompareTo:18
<replaced address 421b7208a9f93281>: Examples:fibonacci:23:5
<replaced address 422f322f2940db06>: Builtins::structGet:21
<replaced address 4302703a6cd3fa75>: Builtins::getArgumentCount:5
<replaced address 440a4a2e9e3a80bb>: Builtins::intAdd:5
<replaced address 4672d383c7509a9f>: "`then | getArgumentCount | equals 0` was not satisfied"
<replaced address 476c77b2172884e8>: Core:result:mapOr:14
<replaced address 4d094d47213a5655>: "Equal"
<replaced address 4e250f8543910bba>: Builtins::intSubtract:11
<replaced address 51f524ae63c4af0b>: "Tag"
<replaced address 5329c003639cc079>: Examples:fibonacci:23:6:15
<replaced address 549433f5358d17a9>: Core:result:mapOrElse:22
<replaced address 568420a2a5125080>: "GetNextRequest"
<replaced address 56cefe855ac72448>: "`function.is1 okMapper` was not satisfied"
<replaced address 5953f7248ba564f0>: { 2 arguments (capturing nothing) → ip-3362 }
<replaced address 5974d35cd2fe97ca>: { 1 argument (capturing nothing) → ip-4050 }
<replaced address 59fb4da19b618456>: Builtins::structGet:5
<replaced address 5c93ea6ba248e40c>: Builtins::intParse:5
<replaced address 5ce20169ff1b81ad>: Core:result:mapOrElse:26:5
<replaced address 5daeb472a61ff7f8>: "False"
<replaced address 5e7fed672c5c456a>: Core:result:mapOr:4
<replaced address 614077b0f92cd7f0>: "Struct"
<replaced address 62b461c243ad3766>: { 2 arguments (capturing nothing) → ip-3676 }
<replaced address 642c742827aec9ac>: "File"
<replaced address 64b8a29849c6d344>: Examples:fibonacci:23:12
<replaced address 64fe8e375d98780b>: { 1 argument (capturing nothing) → ip-4079 }
<replaced address 65869b7b7c4defee>: "`a | typeIs Int` was not satisfied"
<replaced address 664bab760ff04a9c>: Examples:fibonacci:fibonacci:2:9
<replaced address 6732a87eefdda5c6>: "Nothing"
<replaced address 67e62d06f2f1803b>: { 1 argument (capturing nothing) → ip-1151 }
<replaced address 6ac24dff13e30e79>: Core:result:mapOr:19
<replaced address 6b24044ae391e0b7>: "Int"
<replaced address 6cdccd509afc921c>: "Text"
<replaced address 6fe1fdb2563c07ad>: "Arguments"
<replaced address 7008c023be883ff4>: Builtins::ifElse:19
<replaced address 70a2d1d7839b24a4>: Examples:fibonacci:
<replaced address 71d566509a8a2add>: Examples:fibonacci:fibonacci:2:12
<replaced address 759430442e78094f>: { 1 argument (capturing nothing) → ip-4259 }
<replaced address 75c6f093036a613c>: Examples:fibonacci:23:6:22
<replaced address 78116dc366ac952c>: Core:result:mapOrElse:26:value#1
<replaced address 7a64cb6bd64dda25>: { 0 arguments (capturing nothing) → ip-4119 }
<replaced address 7ab6f395e639a47b>: Core:result:flatMap:12
<replaced address 7ae5b371ff139a5d>: Examples:fibonacci:isLessThan:9
<replaced address 7b5c0ed7f870b37f>: "`conditionIsBool` was not satisfied"
<replaced address 7c65f9f539f0d0fa>: Builtins::intCompareTo:11
<replaced address 7c987e313b2f2519>: Builtins::structGet:14
<replaced address 7d04a0accae5758c>: Builtins::intSubtract:5
<replaced address 807d7368f1a4edd6>: "Builtin"
<replaced address 80f4eaa53f4876cd>: anonymous:$generated::needs
<replaced address 834388196300f4fb>: "`function | typeIs Function` was not satisfied"
<replaced address 8383f19ea0a5e146>: Builtins::toDebugText:5
<replaced address 8462dcb40e458120>: Examples:fibonacci:fibonacci:2:11:27
<replaced address 859014e38a16c47f>: "HttpServer"
<replaced address 871c35d8d3bc0076>: Builtins::ifElse:41
<replaced address 877d667bc6df9870>: { 2 arguments (capturing nothing) → ip-674 }
<replaced address 8913f50da583553f>: { 1 argument (capturing nothing) → ip-115 }
<replaced address 89be9cdfac8d8517>: Examples:fibonacci:recursive:0:5
<replaced address 8b647556f2e3190d>: Examples:fibonacci:compareTo:8
<replaced address 91bca86c00256cf1>: Examples:fibonacci:recursive:5
<replaced address 91ccd4b75c545de9>: "The `condition` must be either `True` or `False`."
<replaced address 92aa0d19152d9fd3>: "`text | typeIs Text` was not satisfied"
<replaced address 939833bfd11b3d16>: Examples:fibonacci:23:6
<replaced address 957eb8ad35ecdba0>: "`else | getArgumentCount | equals 0` was not satisfied"
<replaced address 95c497c9e696f807>: { 0 arguments (capturing nothing) → ip-109 }
<replaced address 996cc5f08093ac25>: "`struct | typeIs Struct` was not satisfied"
<replaced address 9a169748478666fe>: { 0 arguments (capturing nothing) → ip-1216 }
<replaced address 9a411ed2de02bbfd>: "`else | typeIs Function` was not satisfied"
<replaced address 9a873ad1d21541fd>: Core:result:mapOrElse:26
<replaced address 9b051d74ed814f94>: "Open"
<replaced address 9b3fe08f2f022acb>: Core:result:mapOrElse:12
<replaced address 9b692663aeb40da7>: "SendResponse"
<replaced address 9beb0cb1b775254c>: "Close"
<replaced address 9c61ef87641ba65d>: "NoMatch"
<replaced address 9e34e4f0d7d85134>: Builtins::tagGetValue:19
<replaced address 9ee8514b45dca9c6>: Builtins::ifElse:25
<replaced address 9eed8aae34c53a02>: Builtins::tagGetValue:13
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a2f6d53168c96b64>: "GetRandomBytes"
<replaced address a84ff690d98aeae1>: Core:result:getValue:4
<replaced address aa720c25d0768a07>: Builtins::ifElse:28
<replaced address ab458b1cc1453acc>: Builtins::intCompareTo:5
<replaced address ac68896419d48592>: { 1 argument (capturing nothing) → ip-826 }
<replaced address af489c6c7cb5764e>: { 1 argument (capturing nothing) → ip-2150 }
<replaced address b1086454c3fcc390>: "`is result` was not satisfied"
<replaced address b1574ef59cb20f81>: Core:result:map:4
<replaced address b635644f70e8ddd9>: Examples:fibonacci:23:13
<replaced address b66aa5e8eefa60de>: "Function"
<replaced address b7d5083e90b08e9b>: Builtins::getArgumentCount:11
<replaced address b9594ca6bd52c414>: Core:function:is1:11
<replaced address bbcfa9d6e3f11acf>: "Greater"
<replaced address bc3bca1bfe235669>: Core:function:is1:9:3
<replaced address bd7e643bf52790f0>: "Stdout"
<replaced address bd82eea49ada30b1>: Examples:fibonacci:23:6:14:2
<replaced address be94976d83240c54>: { 3 arguments (capturing nothing) → ip-184 }
<replaced address becc28b62033cb33>: Examples:fibonacci:fibonacci:2:11:28
<replaced address bfd21c3590621a95>: Core:result:map:17:3
<replaced address c0bb63bd44e367a3>: { 3 arguments (capturing nothing) → ip-2539 }
<replaced address c4f0291b7762e5a8>: "`minuend | typeIs Int` was not satisfied"
<replaced address c841b45ecc45bd33>: "True"
<replaced address c862a33450840be4>: { 2 arguments (capturing nothing) → ip-3910 }
<replaced address c86ac4aab1e5d003>: Core:result:map:14
<replaced address c98e2f7a8dce9fc1>: Core:result:mapOrElse:26:value
<replaced address cc33b54d0d5baf10>: Core:result:flatMap:19
<replaced address cdbcb70275304920>: Examples:fibonacci:23:6:n
<replaced address cf37b22a7a5dec95>: Builtins::intAdd:11
<replaced address d5df9e6b35678bb5>: Examples:fibonacci:fibonacci:2:11:26
<replaced address d7629bf6e871f5e8>: "Error"
<replaced address d785b7cfdf20724e>: { 2 arguments (capturing nothing) → ip-2948 }
<replaced address d7bd702797f58f51>: Core:result:flatMap:14
<replaced address d962951e9f7283f6>: "`function.is1 errorMapper` was not satisfied"
<replaced address dc704463e00c0b29>: { 0 arguments (capturing nothing) → ip-3 }
<replaced address df0fcdbc9cad1521>: Examples:fibonacci:23:6:7
<replaced address e128eb82cb40fae3>: Core:result:is:1
<replaced address e13459ee6346ab5d>: "List"
<replaced address e1d6728501bc6b89>: Builtins::equals:6
<replaced address e20e5f8b7e376a93>: "FileSystem"
<replaced address e4db5827e264d41a>: Builtins::ifElse:5
<replaced address e63e502aad6c0ab9>: { 3 arguments (capturing nothing) → ip-41 }
<replaced address e74159810db9029c>: { 0 arguments (capturing nothing) → ip-106 }
<replaced address e8c2dfb7598c479d>: "`tag | ✨.tagHasValue` was not satisfied"
<replaced address ea65fb20656c9a12>: Core:result:mapOr:12
<replaced address ea9a293534a31de4>: "Usage: `cargo run -- run fibonacci.candy -- <number>`"
<replaced address edabb9dda7883505>: Examples:fibonacci:fibonacci:2:11:10
<replaced address eed0e5dcad294fd3>: Core:result:flatMap:4
<replaced address ef0df736712a6b95>: "Request"
<replaced address ef5d2e500159f5dd>: "No case matched the given expression."
<replaced address f212ba8abcff978b>: Core:result:flatMap:17:2
<replaced address f2debbb68786f674>: "Less"
<replaced address f451c9fdc2c5b696>: Core:result:mapOrElse:26:2
<replaced address f61c8e70a9c80c6d>: { 3 arguments (capturing nothing) → ip-1733 }
<replaced address f688eda336b6e049>: { 2 arguments (capturing nothing) → ip-3575 }
<replaced address f691b014dc4d5107>: Core:result:map:18
<replaced address f7fc1c0fbd2eb7c2>: { 2 arguments (capturing nothing) → ip-552 }
<replaced address f8465d20e0be15a1>: Core:result:mapOrElse:14
<replaced address f8a743cca2278691>: Examples:fibonacci:recursive:0:0:3
<replaced address f8bed0fc3ef0a4f6>: "Stdin"
<replaced address fa8cdeec1123ecd3>: "SystemClock"
<replaced address fb36281f9aababce>: Builtins::ifElse:33
<replaced address ffea9a3777280bfd>: { 2 arguments (capturing nothing) → ip-475 }

# Instructions
# Builtins::ifElse:1:case-0:matched, Core:result:is:1:case-0:matched, Core:check:check:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, anonymous:$generated::needs:isConditionTrue:then, Builtins::isNonNegative:13:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched
   0: pushConstant inline True
   1: popMultipleBelowTop 1
   2: return
# Core:iterator:withIndex:11:1:isMatch:then, Core:text:31:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:controlFlow:31:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core::155:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:result:also:16:case-0:didNotMatch, Examples:fibonacci:21:isMatch:then, Core:struct:21:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:check:11:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:controlFlow:if:23, Core:list:42:isMatch:then, Core::43:isMatch:then, Core::21:isMatch:then, Core:tag:31:isMatch:then, Core:int:42:isMatch:then, Core::166:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Examples:fibonacci:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isReasonText:then, Core:text:42:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:type:21:isMatch:then, Core:bool:11:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:controlFlow:52:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core::32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core::104:isMatch:then, Core:function:21:isMatch:then, anonymous:$generated::needs:isConditionBool:then, Core:fixedDecimal:54:isMatch:then, Core:list:31:isMatch:then, Core:result:21:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:result:32:isMatch:then, Core:iterator:32:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:int:31:isMatch:then
   3: pushConstant inline Nothing
   4: popMultipleBelowTop 1
   5: return
# anonymous:$generated::needs:isConditionTrue:else
   6: pushFromStack 1
   7: dup by 1
   8: pushConstant inline builtinEquals
   9: pushConstant inline False
  10: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  11: pushFromStack 2
  12: pushFromStack 5
  13: pushFromStack 3
  14: pushFromStack 3
  15: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
  16: pushFromStack 1
  17: dup by 1
  18: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
  19: pushFromStack 0
  20: pushFromStack 3
  21: panic
  22: popMultipleBelowTop 3
  23: return
# anonymous:$generated::needs:isReasonText:else
  24: pushFromStack 1
  25: dup by 1
  26: pushConstant <replaced address 36eebe9168aef0b0> "The `reason` must be a text."
  27: pushFromStack 0
  28: pushFromStack 3
  29: panic
  30: popMultipleBelowTop 3
  31: return
# anonymous:$generated::needs:condition:else
  32: pushFromStack 2
  33: dup by 1
  34: pushFromStack 1
  35: dup by 1
  36: pushFromStack 2
  37: pushFromStack 2
  38: panic
  39: popMultipleBelowTop 3
  40: return
# anonymous:$generated::needs
  41: pushFromStack 3
  42: dup by 2
  43: pushFromStack 2
  44: dup by 1
  45: pushFromStack 0
  46: dup by 2
  47: pushConstant inline builtinEquals
  48: pushConstant inline True
  49: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  50: pushFromStack 2
  51: pushFromStack 7
  52: pushFromStack 3
  53: pushFromStack 3
  54: call with 2 arguments
  55: pushFromStack 7
  56: createFunction with 0 arguments capturing 0 starting at ip-6
  57: pushConstant inline builtinIfElse
  58: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
  59: pushFromStack 1
  60: pushFromStack 5
  61: pushFromStack 2
  62: pushFromStack 5
  63: pushFromStack 9
  64: call with 3 arguments
  65: pushFromStack 9
  66: createFunction with 0 arguments capturing 0 starting at ip-16
  67: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
  68: pushFromStack 5
  69: pushFromStack 4
  70: pushFromStack 2
  71: pushFromStack 4
  72: pushFromStack 13
  73: call with 3 arguments
  74: pushConstant inline builtinTypeOf
  75: pushFromStack 0
  76: pushFromStack 17
  77: pushFromStack 6
  78: call with 1 argument
  79: pushConstant inline Text
  80: pushFromStack 15
  81: pushFromStack 2
  82: pushFromStack 2
  83: pushFromStack 9
  84: call with 2 arguments
  85: pushFromStack 7
  86: createFunction with 0 arguments capturing 0 starting at ip-24
  87: pushFromStack 12
  88: pushFromStack 3
  89: pushFromStack 9
  90: pushFromStack 3
  91: pushFromStack 20
  92: call with 3 arguments
  93: pushFromStack 22
  94: pushFromStack 22
  95: createFunction with 0 arguments capturing 1, 0 starting at ip-32
  96: pushFromStack 10
  97: drop
  98: pushFromStack 3
  99: drop
 100: pushFromStack 16
 101: pushFromStack 19
 102: pushFromStack 13
 103: pushFromStack 3
 104: pushFromStack 24
 105: tailCall with 27 locals and 3 arguments
# Core:iterator:generateWithState:12:1:3:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:bool:lazyAnd:16:equals:then, Core:list:firstWhere:19:equals:then, Core:bool:is:1:equals:then, Core:iterator:where:17:2:3:equals:then, Core:bool:lazyOr:16:equals:then, Core:list:single:6:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:text:isAsciiDigit:14:equals:then, Core:list:first:6:equals:then, Builtins::not:1:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Builtins::ifElse:1:equals:then, Core:list:lastWhere:19:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Builtins::isNonNegative:13:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:bool:not:6:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Core:check:check:1:equals:then, Core:iterator:reduceLeft:16:equals:then
 106: pushConstant <replaced address 19beba0e7e49ddcc> Match ((,))
 107: popMultipleBelowTop 1
 108: return
# Builtins::isNonNegative:13:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:bool:is:1:equals:else, Core:fixedDecimal:105:equals:else, Core:int:pow:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core::21:equals:else, Core:text:42:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:list:42:equals:else, Core:iterator:where:17:2:3:equals:else, Core:bool:11:equals:else, Core:result:21:equals:else, Core::43:equals:else, Core:list:lastWhere:19:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:wrapSafe:14:1:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:iterator:take:27:1:hasKey:else, Core:int:pow:21:4:equals:else, Core:iterator:32:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:where:17:2:3:hasKey:else, Builtins::not:1:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:generate:51:1:hasKey:else, Examples:fibonacci:23:6:equals:else, Core:fixedDecimal:54:equals:else, Core:result:32:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::ifElse:1:equals:else, Core:result:is:1:equals:else, Core:list:firstWhere:19:equals:else, Examples:fibonacci:21:equals:else, Core::166:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:fixedDecimal:32:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:also:16:equals:else, Core:text:repeat:30:1:equals:else, Core:iterator:skip:26:6:8:3:equals:else, Core:bool:lazyAnd:16:equals:else, Core:iterator:21:equals:else, Core:iterator:skip:26:6:1:equals:else, Core::32:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core::104:equals:else, Core:iterator:next:6:equals:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:bool:not:6:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:withIndex:11:5:hasKey:else, Core:function:21:equals:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:31:equals:else, Core:iterator:take:27:1:equals:else, Core:list:generate:51:1:equals:else, Core:text:31:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:controlFlow:52:equals:else, Core:check:check:1:equals:else, Core:bool:lazyOr:16:equals:else, Core:int:31:equals:else, Core:list:single:6:equals:else, Core:fixedDecimal:43:equals:else, Core:list:first:6:equals:else, Core:fixedDecimal:21:equals:else, Core:int:pow:21:1:equals:else, Core:fixedDecimal:is:1:equals:else, Core::155:equals:else, Core:int:42:equals:else, Core:iterator:map:17:3:equals:else
 109: pushConstant inline NoMatch
 110: popMultipleBelowTop 1
 111: return
# Core:function:is1:10, Core:check:check:1:case-0:didNotMatch, Core:function:is2:10, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::ifElse:1:case-0:didNotMatch, anonymous:$generated::needs:isConditionTrue:else, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, Core:function:is4:10, Core:function:is0:10, Builtins::isNonNegative:13:case-1:matched, Core:function:is5:10, Core:bool:is:1:case-0:didNotMatch, Core:list:isValidIndex:19, Core:bool:lazyAnd:16:case-1:matched, Core:bool:not:6:case-0:matched, Builtins::not:1:case-0:matched, Core:function:is3:10, Core:result:is:1:case-0:didNotMatch, Core:list:isValidInsertIndex:19
 112: pushConstant inline False
 113: popMultipleBelowTop 1
 114: return
# Builtins::getArgumentCount
 115: pushFromStack 1
 116: dup by 1
 117: pushFromStack 0
 118: dup by 2
 119: pushConstant inline builtinTypeOf
 120: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 121: pushFromStack 1
 122: pushFromStack 4
 123: pushFromStack 2
 124: call with 1 argument
 125: pushConstant inline builtinEquals
 126: pushConstant inline Function
 127: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 128: pushFromStack 2
 129: pushFromStack 4
 130: pushFromStack 3
 131: pushFromStack 3
 132: call with 2 arguments
 133: pushFromStack 0
 134: dup by 1
 135: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 136: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 137: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 138: pushFromStack 2
 139: pushFromStack 2
 140: pushFromStack 5
 141: pushFromStack 3
 142: pushFromStack 14
 143: pushFromStack 4
 144: traceCallStarts (3 arguments)
 145: pushFromStack 1
 146: pushFromStack 4
 147: pushFromStack 2
 148: pushFromStack 13
 149: pushFromStack 6
 150: call with 3 arguments
 151: traceCallEnds without return value
 152: pushConstant inline builtinGetArgumentCount
 153: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 154: pushFromStack 2
 155: drop
 156: pushFromStack 1
 157: pushFromStack 15
 158: pushFromStack 2
 159: tailCall with 15 locals and 1 argument
# Builtins::ifElse:1:isMatch:then
 160: pushFromStack 1
 161: dup by 1
 162: pushFromStack 1
 163: popMultipleBelowTop 2
 164: return
# Builtins::ifElse:1:isMatch:else
 165: pushFromStack 1
 166: dup by 1
 167: pushConstant inline builtinEquals
 168: pushConstant inline False
 169: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 170: pushFromStack 2
 171: pushFromStack 2
 172: pushFromStack 6
 173: pushFromStack 3
 174: call with 2 arguments
 175: pushConstant inline builtinIfElse
 176: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 177: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 178: pushFromStack 2
 179: pushFromStack 4
 180: pushFromStack 3
 181: pushFromStack 3
 182: pushFromStack 8
 183: tailCall with 9 locals and 3 arguments
# Builtins::ifElse
 184: pushFromStack 3
 185: dup by 3
 186: pushFromStack 2
 187: dup by 4
 188: pushFromStack 1
 189: dup by 4
 190: pushFromStack 0
 191: dup by 10
 192: pushConstant inline builtinEquals
 193: pushConstant inline True
 194: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 195: pushFromStack 2
 196: pushFromStack 2
 197: pushFromStack 8
 198: pushFromStack 3
 199: call with 2 arguments
 200: pushConstant inline builtinIfElse
 201: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 202: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 203: pushFromStack 2
 204: pushFromStack 4
 205: pushFromStack 3
 206: pushFromStack 3
 207: pushFromStack 8
 208: call with 3 arguments
 209: pushFromStack 0
 210: dup by 1
 211: pushConstant inline builtinTagWithoutValue
 212: pushFromStack 0
 213: pushFromStack 2
 214: pushFromStack 8
 215: call with 1 argument
 216: pushConstant inline Match
 217: pushFromStack 10
 218: pushFromStack 2
 219: pushFromStack 2
 220: pushFromStack 11
 221: call with 2 arguments
 222: pushFromStack 4
 223: createFunction with 0 arguments capturing 0 starting at ip-160
 224: pushFromStack 17
 225: createFunction with 0 arguments capturing 0 starting at ip-165
 226: pushFromStack 11
 227: pushFromStack 5
 228: pushFromStack 4
 229: pushFromStack 3
 230: pushFromStack 17
 231: call with 3 arguments
 232: pushFromStack 8
 233: pushFromStack 1
 234: pushFromStack 16
 235: call with 1 argument
 236: pushFromStack 17
 237: pushFromStack 1
 238: pushFromStack 9
 239: pushFromStack 18
 240: call with 2 arguments
 241: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 242: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
 243: pushFromStack 16
 244: pushFromStack 3
 245: pushFromStack 3
 246: pushFromStack 3
 247: pushFromStack 22
 248: call with 3 arguments
 249: pushFromStack 0
 250: dup by 1
 251: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 252: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 253: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 254: pushFromStack 2
 255: pushFromStack 2
 256: pushFromStack 5
 257: pushFromStack 3
 258: pushFromStack 29
 259: pushFromStack 4
 260: traceCallStarts (3 arguments)
 261: pushFromStack 1
 262: pushFromStack 4
 263: pushFromStack 2
 264: pushFromStack 28
 265: pushFromStack 6
 266: call with 3 arguments
 267: traceCallEnds without return value
 268: pushConstant inline builtinTypeOf
 269: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 270: pushFromStack 1
 271: pushFromStack 31
 272: pushFromStack 2
 273: call with 1 argument
 274: pushFromStack 0
 275: dup by 1
 276: pushConstant inline Function
 277: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 278: pushFromStack 30
 279: pushFromStack 3
 280: pushFromStack 3
 281: pushFromStack 3
 282: call with 2 arguments
 283: pushFromStack 0
 284: dup by 1
 285: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 286: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 287: pushFromStack 1
 288: pushFromStack 11
 289: pushFromStack 4
 290: pushFromStack 3
 291: pushFromStack 38
 292: pushFromStack 4
 293: traceCallStarts (3 arguments)
 294: pushFromStack 10
 295: pushFromStack 3
 296: pushFromStack 2
 297: pushFromStack 37
 298: pushFromStack 5
 299: call with 3 arguments
 300: traceCallEnds without return value
 301: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 302: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
 303: pushFromStack 1
 304: pushFromStack 1
 305: pushFromStack 41
 306: pushFromStack 2
 307: traceCallStarts (1 argument)
 308: pushFromStack 36
 309: pushFromStack 9
 310: pushFromStack 9
 311: pushFromStack 9
 312: call with 2 arguments
 313: pushFromStack 0
 314: dup by 1
 315: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 316: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 317: pushFromStack 1
 318: pushFromStack 17
 319: pushFromStack 4
 320: pushFromStack 3
 321: pushFromStack 8
 322: pushFromStack 4
 323: traceCallStarts (3 arguments)
 324: pushFromStack 16
 325: pushFromStack 3
 326: pushFromStack 2
 327: pushFromStack 7
 328: pushFromStack 5
 329: call with 3 arguments
 330: traceCallEnds without return value
 331: pushConstant inline builtinGetArgumentCount
 332: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 333: pushFromStack 1
 334: pushFromStack 46
 335: pushFromStack 2
 336: call with 1 argument
 337: traceCallEnds without return value
 338: pushConstant inline 0
 339: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 340: pushFromStack 45
 341: pushFromStack 3
 342: pushFromStack 3
 343: pushFromStack 3
 344: call with 2 arguments
 345: pushFromStack 0
 346: dup by 1
 347: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 348: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 349: pushFromStack 1
 350: pushFromStack 26
 351: pushFromStack 4
 352: pushFromStack 3
 353: pushFromStack 53
 354: pushFromStack 4
 355: traceCallStarts (3 arguments)
 356: pushFromStack 25
 357: pushFromStack 3
 358: pushFromStack 2
 359: pushFromStack 52
 360: pushFromStack 5
 361: call with 3 arguments
 362: traceCallEnds without return value
 363: pushFromStack 23
 364: pushFromStack 52
 365: pushFromStack 24
 366: call with 1 argument
 367: pushFromStack 0
 368: dup by 1
 369: pushFromStack 50
 370: pushFromStack 1
 371: pushFromStack 23
 372: pushFromStack 23
 373: call with 2 arguments
 374: pushFromStack 0
 375: dup by 1
 376: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 377: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 378: pushFromStack 1
 379: pushFromStack 31
 380: pushFromStack 4
 381: pushFromStack 3
 382: pushFromStack 58
 383: pushFromStack 4
 384: traceCallStarts (3 arguments)
 385: pushFromStack 30
 386: pushFromStack 3
 387: pushFromStack 2
 388: pushFromStack 57
 389: pushFromStack 5
 390: call with 3 arguments
 391: traceCallEnds without return value
 392: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 393: pushFromStack 0
 394: pushFromStack 20
 395: pushFromStack 59
 396: pushFromStack 2
 397: traceCallStarts (1 argument)
 398: pushFromStack 55
 399: pushFromStack 6
 400: pushFromStack 28
 401: pushFromStack 28
 402: call with 2 arguments
 403: pushFromStack 0
 404: dup by 1
 405: pushFromStack 18
 406: pushFromStack 34
 407: pushFromStack 2
 408: pushFromStack 20
 409: pushFromStack 5
 410: pushFromStack 4
 411: traceCallStarts (3 arguments)
 412: pushFromStack 33
 413: pushFromStack 1
 414: pushFromStack 19
 415: pushFromStack 4
 416: pushFromStack 22
 417: call with 3 arguments
 418: traceCallEnds without return value
 419: pushFromStack 16
 420: pushFromStack 60
 421: pushFromStack 17
 422: call with 1 argument
 423: traceCallEnds without return value
 424: pushFromStack 58
 425: pushFromStack 1
 426: pushFromStack 16
 427: pushFromStack 16
 428: call with 2 arguments
 429: pushFromStack 0
 430: dup by 1
 431: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 432: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 433: pushFromStack 1
 434: pushFromStack 39
 435: pushFromStack 4
 436: pushFromStack 3
 437: pushFromStack 66
 438: pushFromStack 4
 439: traceCallStarts (3 arguments)
 440: pushFromStack 38
 441: pushFromStack 3
 442: pushFromStack 2
 443: pushFromStack 65
 444: pushFromStack 5
 445: call with 3 arguments
 446: traceCallEnds without return value
 447: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
 448: pushFromStack 0
 449: pushFromStack 60
 450: pushFromStack 51
 451: pushFromStack 69
 452: pushFromStack 69
 453: pushFromStack 4
 454: traceTailCall (3 arguments)
 455: pushFromStack 38
 456: drop
 457: pushFromStack 29
 458: drop
 459: pushFromStack 23
 460: drop
 461: pushFromStack 14
 462: drop
 463: pushFromStack 9
 464: drop
 465: pushFromStack 6
 466: drop
 467: pushFromStack 1
 468: drop
 469: pushFromStack 59
 470: pushFromStack 50
 471: pushFromStack 68
 472: pushFromStack 68
 473: pushFromStack 4
 474: tailCall with 68 locals and 3 arguments
# Builtins::intAdd
 475: pushFromStack 2
 476: dup by 1
 477: pushFromStack 1
 478: dup by 1
 479: pushFromStack 0
 480: dup by 4
 481: pushConstant inline builtinTypeOf
 482: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 483: pushFromStack 1
 484: pushFromStack 5
 485: pushFromStack 2
 486: call with 1 argument
 487: pushConstant inline builtinEquals
 488: pushConstant inline Int
 489: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 490: pushFromStack 2
 491: pushFromStack 4
 492: pushFromStack 3
 493: pushFromStack 3
 494: call with 2 arguments
 495: pushFromStack 0
 496: dup by 1
 497: pushConstant <replaced address 440a4a2e9e3a80bb> Builtins::intAdd:5
 498: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 499: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
 500: pushFromStack 2
 501: pushFromStack 2
 502: pushFromStack 5
 503: pushFromStack 3
 504: pushFromStack 14
 505: pushFromStack 4
 506: traceCallStarts (3 arguments)
 507: pushFromStack 1
 508: pushFromStack 4
 509: pushFromStack 2
 510: pushFromStack 13
 511: pushFromStack 6
 512: call with 3 arguments
 513: traceCallEnds without return value
 514: pushFromStack 10
 515: pushFromStack 13
 516: pushFromStack 11
 517: call with 1 argument
 518: pushFromStack 8
 519: pushFromStack 1
 520: pushFromStack 9
 521: pushFromStack 9
 522: call with 2 arguments
 523: pushFromStack 0
 524: dup by 1
 525: pushConstant <replaced address cf37b22a7a5dec95> Builtins::intAdd:11
 526: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
 527: pushFromStack 1
 528: pushFromStack 7
 529: pushFromStack 4
 530: pushFromStack 3
 531: pushFromStack 19
 532: pushFromStack 4
 533: traceCallStarts (3 arguments)
 534: pushFromStack 6
 535: pushFromStack 3
 536: pushFromStack 2
 537: pushFromStack 18
 538: pushFromStack 5
 539: call with 3 arguments
 540: traceCallEnds without return value
 541: pushConstant inline builtinIntAdd
 542: pushConstant <replaced address 216d199efe6cdff8> Builtins::intAdd:18
 543: pushFromStack 7
 544: drop
 545: pushFromStack 2
 546: drop
 547: pushFromStack 1
 548: pushFromStack 21
 549: pushFromStack 21
 550: pushFromStack 3
 551: tailCall with 21 locals and 2 arguments
# Builtins::intCompareTo
 552: pushFromStack 2
 553: dup by 1
 554: pushFromStack 1
 555: dup by 1
 556: pushFromStack 0
 557: dup by 4
 558: pushConstant inline builtinTypeOf
 559: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 560: pushFromStack 1
 561: pushFromStack 5
 562: pushFromStack 2
 563: call with 1 argument
 564: pushConstant inline builtinEquals
 565: pushConstant inline Int
 566: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 567: pushFromStack 2
 568: pushFromStack 4
 569: pushFromStack 3
 570: pushFromStack 3
 571: call with 2 arguments
 572: pushFromStack 0
 573: dup by 1
 574: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
 575: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 576: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
 577: pushFromStack 2
 578: pushFromStack 2
 579: pushFromStack 5
 580: pushFromStack 3
 581: pushFromStack 14
 582: pushFromStack 4
 583: traceCallStarts (3 arguments)
 584: pushFromStack 1
 585: pushFromStack 4
 586: pushFromStack 2
 587: pushFromStack 13
 588: pushFromStack 6
 589: call with 3 arguments
 590: traceCallEnds without return value
 591: pushFromStack 10
 592: pushFromStack 13
 593: pushFromStack 11
 594: call with 1 argument
 595: pushFromStack 8
 596: pushFromStack 1
 597: pushFromStack 9
 598: pushFromStack 9
 599: call with 2 arguments
 600: pushFromStack 0
 601: dup by 1
 602: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
 603: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
 604: pushFromStack 1
 605: pushFromStack 7
 606: pushFromStack 4
 607: pushFromStack 3
 608: pushFromStack 19
 609: pushFromStack 4
 610: traceCallStarts (3 arguments)
 611: pushFromStack 6
 612: pushFromStack 3
 613: pushFromStack 2
 614: pushFromStack 18
 615: pushFromStack 5
 616: call with 3 arguments
 617: traceCallEnds without return value
 618: pushConstant inline builtinIntCompareTo
 619: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
 620: pushFromStack 7
 621: drop
 622: pushFromStack 2
 623: drop
 624: pushFromStack 1
 625: pushFromStack 21
 626: pushFromStack 21
 627: pushFromStack 3
 628: tailCall with 21 locals and 2 arguments
# Builtins::intParse
 629: pushFromStack 1
 630: dup by 1
 631: pushFromStack 0
 632: dup by 2
 633: pushConstant inline builtinTypeOf
 634: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 635: pushFromStack 1
 636: pushFromStack 4
 637: pushFromStack 2
 638: call with 1 argument
 639: pushConstant inline builtinEquals
 640: pushConstant inline Text
 641: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 642: pushFromStack 2
 643: pushFromStack 4
 644: pushFromStack 3
 645: pushFromStack 3
 646: call with 2 arguments
 647: pushFromStack 0
 648: dup by 1
 649: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
 650: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 651: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
 652: pushFromStack 2
 653: pushFromStack 2
 654: pushFromStack 5
 655: pushFromStack 3
 656: pushFromStack 14
 657: pushFromStack 4
 658: traceCallStarts (3 arguments)
 659: pushFromStack 1
 660: pushFromStack 4
 661: pushFromStack 2
 662: pushFromStack 13
 663: pushFromStack 6
 664: call with 3 arguments
 665: traceCallEnds without return value
 666: pushConstant inline builtinIntParse
 667: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
 668: pushFromStack 2
 669: drop
 670: pushFromStack 1
 671: pushFromStack 15
 672: pushFromStack 2
 673: tailCall with 15 locals and 1 argument
# Builtins::intSubtract
 674: pushFromStack 2
 675: dup by 1
 676: pushFromStack 1
 677: dup by 1
 678: pushFromStack 0
 679: dup by 4
 680: pushConstant inline builtinTypeOf
 681: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 682: pushFromStack 1
 683: pushFromStack 5
 684: pushFromStack 2
 685: call with 1 argument
 686: pushConstant inline builtinEquals
 687: pushConstant inline Int
 688: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 689: pushFromStack 2
 690: pushFromStack 4
 691: pushFromStack 3
 692: pushFromStack 3
 693: call with 2 arguments
 694: pushFromStack 0
 695: dup by 1
 696: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
 697: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 698: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
 699: pushFromStack 2
 700: pushFromStack 2
 701: pushFromStack 5
 702: pushFromStack 3
 703: pushFromStack 14
 704: pushFromStack 4
 705: traceCallStarts (3 arguments)
 706: pushFromStack 1
 707: pushFromStack 4
 708: pushFromStack 2
 709: pushFromStack 13
 710: pushFromStack 6
 711: call with 3 arguments
 712: traceCallEnds without return value
 713: pushFromStack 10
 714: pushFromStack 13
 715: pushFromStack 11
 716: call with 1 argument
 717: pushFromStack 8
 718: pushFromStack 1
 719: pushFromStack 9
 720: pushFromStack 9
 721: call with 2 arguments
 722: pushFromStack 0
 723: dup by 1
 724: pushConstant <replaced address 4e250f8543910bba> Builtins::intSubtract:11
 725: pushConstant <replaced address 3f1dcd30453d2689> "`subtrahend | typeIs Int` was not satisfied"
 726: pushFromStack 1
 727: pushFromStack 7
 728: pushFromStack 4
 729: pushFromStack 3
 730: pushFromStack 19
 731: pushFromStack 4
 732: traceCallStarts (3 arguments)
 733: pushFromStack 6
 734: pushFromStack 3
 735: pushFromStack 2
 736: pushFromStack 18
 737: pushFromStack 5
 738: call with 3 arguments
 739: traceCallEnds without return value
 740: pushConstant inline builtinIntSubtract
 741: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
 742: pushFromStack 7
 743: drop
 744: pushFromStack 2
 745: drop
 746: pushFromStack 1
 747: pushFromStack 21
 748: pushFromStack 21
 749: pushFromStack 3
 750: tailCall with 21 locals and 2 arguments
# Builtins::structGet
 751: pushFromStack 2
 752: dup by 2
 753: pushFromStack 1
 754: dup by 1
 755: pushFromStack 0
 756: dup by 4
 757: pushConstant inline builtinTypeOf
 758: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 759: pushFromStack 1
 760: pushFromStack 5
 761: pushFromStack 2
 762: call with 1 argument
 763: pushConstant inline builtinEquals
 764: pushConstant inline Struct
 765: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 766: pushFromStack 2
 767: pushFromStack 4
 768: pushFromStack 3
 769: pushFromStack 3
 770: call with 2 arguments
 771: pushFromStack 0
 772: dup by 1
 773: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
 774: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 775: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
 776: pushFromStack 2
 777: pushFromStack 2
 778: pushFromStack 5
 779: pushFromStack 3
 780: pushFromStack 14
 781: pushFromStack 4
 782: traceCallStarts (3 arguments)
 783: pushFromStack 1
 784: pushFromStack 4
 785: pushFromStack 2
 786: pushFromStack 13
 787: pushFromStack 6
 788: call with 3 arguments
 789: traceCallEnds without return value
 790: pushConstant inline builtinStructHasKey
 791: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
 792: pushFromStack 1
 793: pushFromStack 16
 794: pushFromStack 16
 795: pushFromStack 3
 796: call with 2 arguments
 797: pushFromStack 0
 798: dup by 1
 799: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
 800: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
 801: pushFromStack 1
 802: pushFromStack 8
 803: pushFromStack 4
 804: pushFromStack 3
 805: pushFromStack 20
 806: pushFromStack 4
 807: traceCallStarts (3 arguments)
 808: pushFromStack 7
 809: pushFromStack 3
 810: pushFromStack 2
 811: pushFromStack 19
 812: pushFromStack 5
 813: call with 3 arguments
 814: traceCallEnds without return value
 815: pushConstant inline builtinStructGet
 816: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
 817: pushFromStack 8
 818: drop
 819: pushFromStack 2
 820: drop
 821: pushFromStack 1
 822: pushFromStack 22
 823: pushFromStack 22
 824: pushFromStack 3
 825: tailCall with 22 locals and 2 arguments
# Builtins::tagGetValue
 826: pushFromStack 1
 827: dup by 2
 828: pushFromStack 0
 829: dup by 4
 830: pushConstant inline builtinTypeOf
 831: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 832: pushFromStack 1
 833: pushFromStack 4
 834: pushFromStack 2
 835: call with 1 argument
 836: pushConstant inline builtinEquals
 837: pushConstant inline Tag
 838: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 839: pushFromStack 2
 840: pushFromStack 4
 841: pushFromStack 3
 842: pushFromStack 3
 843: call with 2 arguments
 844: pushFromStack 0
 845: dup by 1
 846: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
 847: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 848: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
 849: pushFromStack 2
 850: pushFromStack 2
 851: pushFromStack 5
 852: pushFromStack 3
 853: pushFromStack 14
 854: pushFromStack 4
 855: traceCallStarts (3 arguments)
 856: pushFromStack 1
 857: pushFromStack 4
 858: pushFromStack 2
 859: pushFromStack 13
 860: pushFromStack 6
 861: call with 3 arguments
 862: traceCallEnds without return value
 863: pushConstant inline builtinTagHasValue
 864: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
 865: pushFromStack 1
 866: pushFromStack 15
 867: pushFromStack 2
 868: call with 1 argument
 869: pushFromStack 0
 870: dup by 1
 871: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
 872: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
 873: pushFromStack 1
 874: pushFromStack 8
 875: pushFromStack 4
 876: pushFromStack 3
 877: pushFromStack 20
 878: pushFromStack 4
 879: traceCallStarts (3 arguments)
 880: pushFromStack 7
 881: pushFromStack 3
 882: pushFromStack 2
 883: pushFromStack 19
 884: pushFromStack 5
 885: call with 3 arguments
 886: traceCallEnds without return value
 887: pushConstant inline builtinTagGetValue
 888: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
 889: pushFromStack 8
 890: drop
 891: pushFromStack 2
 892: drop
 893: pushFromStack 1
 894: pushFromStack 21
 895: pushFromStack 2
 896: tailCall with 21 locals and 1 argument
# Core:function:is1:9
 897: pushFromStack 1
 898: dup by 3
 899: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
 900: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
 901: pushFromStack 1
 902: pushFromStack 1
 903: pushFromStack 5
 904: pushFromStack 2
 905: traceCallStarts (1 argument)
 906: pushConstant inline builtinTypeOf
 907: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 908: pushFromStack 1
 909: pushFromStack 6
 910: pushFromStack 2
 911: call with 1 argument
 912: pushConstant inline builtinEquals
 913: pushConstant inline Function
 914: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 915: pushFromStack 2
 916: pushFromStack 4
 917: pushFromStack 3
 918: pushFromStack 3
 919: call with 2 arguments
 920: pushFromStack 0
 921: dup by 1
 922: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 923: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 924: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 925: pushFromStack 2
 926: pushFromStack 2
 927: pushFromStack 5
 928: pushFromStack 3
 929: pushFromStack 15
 930: pushFromStack 4
 931: traceCallStarts (3 arguments)
 932: pushFromStack 1
 933: pushFromStack 4
 934: pushFromStack 2
 935: pushFromStack 14
 936: pushFromStack 6
 937: call with 3 arguments
 938: traceCallEnds without return value
 939: pushConstant inline builtinGetArgumentCount
 940: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 941: pushFromStack 1
 942: pushFromStack 17
 943: pushFromStack 2
 944: call with 1 argument
 945: traceCallEnds without return value
 946: pushConstant inline 1
 947: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 948: pushFromStack 5
 949: drop
 950: pushFromStack 12
 951: pushFromStack 3
 952: pushFromStack 3
 953: pushFromStack 3
 954: tailCall with 20 locals and 2 arguments
# Core:function:is1
 955: pushFromStack 1
 956: dup by 1
 957: pushConstant inline builtinTypeOf
 958: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
 959: pushFromStack 1
 960: pushFromStack 4
 961: pushFromStack 2
 962: call with 1 argument
 963: pushConstant inline builtinEquals
 964: pushConstant inline Function
 965: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 966: pushFromStack 2
 967: pushFromStack 4
 968: pushFromStack 3
 969: pushFromStack 3
 970: call with 2 arguments
 971: pushFromStack 0
 972: dup by 1
 973: pushFromStack 8
 974: createFunction with 0 arguments capturing 0 starting at ip-897
 975: pushFromStack 0
 976: dup by 1
 977: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
 978: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
 979: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
 980: pushFromStack 2
 981: pushFromStack 2
 982: pushFromStack 7
 983: pushFromStack 6
 984: pushFromStack 4
 985: pushFromStack 4
 986: traceTailCall (3 arguments)
 987: pushFromStack 1
 988: pushFromStack 6
 989: pushFromStack 5
 990: pushFromStack 3
 991: pushFromStack 6
 992: tailCall with 14 locals and 3 arguments
# Core:result:is:1:equals:then
 993: pushFromStack 1
 994: dup by 1
 995: pushConstant inline builtinTagGetValue
 996: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 997: pushFromStack 1
 998: pushFromStack 4
 999: pushFromStack 2
1000: call with 1 argument
1001: pushFromStack 0
1002: createList 1
1003: pushFromStack 0
1004: createTag Match
1005: popMultipleBelowTop 6
1006: return
1007: pushFromStack 1
1008: dup by 2
1009: pushConstant inline builtinTagHasValue
1010: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1011: pushFromStack 1
1012: pushFromStack 4
1013: pushFromStack 2
1014: call with 1 argument
1015: pushConstant inline builtinEquals
1016: pushConstant inline True
1017: pushFromStack 1
1018: pushFromStack 1
1019: pushFromStack 4
1020: pushFromStack 6
1021: call with 2 arguments
1022: pushFromStack 7
1023: createFunction with 0 arguments capturing 0 starting at ip-993
1024: pushConstant inline builtinIfElse
1025: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1026: pushFromStack 1
1027: pushFromStack 5
1028: pushFromStack 4
1029: pushFromStack 3
1030: pushFromStack 12
1031: tailCall with 12 locals and 3 arguments
1032: pushFromStack 1
1033: dup by 2
1034: pushConstant inline builtinTagWithoutValue
1035: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1036: pushFromStack 1
1037: pushFromStack 4
1038: pushFromStack 2
1039: call with 1 argument
1040: pushConstant inline builtinEquals
1041: pushConstant inline Ok
1042: pushFromStack 1
1043: pushFromStack 1
1044: pushFromStack 4
1045: pushFromStack 6
1046: call with 2 arguments
1047: pushFromStack 7
1048: createFunction with 0 arguments capturing 0 starting at ip-1007
1049: pushConstant inline builtinIfElse
1050: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1051: pushFromStack 1
1052: pushFromStack 5
1053: pushFromStack 4
1054: pushFromStack 3
1055: pushFromStack 12
1056: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
1057: pushFromStack 1
1058: dup by 1
1059: pushFromStack 1
1060: popMultipleBelowTop 2
1061: return
# Core:result:is:1:equals:then
1062: pushFromStack 1
1063: dup by 1
1064: pushConstant inline builtinTagGetValue
1065: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1066: pushFromStack 1
1067: pushFromStack 4
1068: pushFromStack 2
1069: call with 1 argument
1070: pushFromStack 0
1071: createList 1
1072: pushFromStack 0
1073: createTag Match
1074: popMultipleBelowTop 6
1075: return
1076: pushFromStack 1
1077: dup by 2
1078: pushConstant inline builtinTagHasValue
1079: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1080: pushFromStack 1
1081: pushFromStack 4
1082: pushFromStack 2
1083: call with 1 argument
1084: pushConstant inline builtinEquals
1085: pushConstant inline True
1086: pushFromStack 1
1087: pushFromStack 1
1088: pushFromStack 4
1089: pushFromStack 6
1090: call with 2 arguments
1091: pushFromStack 7
1092: createFunction with 0 arguments capturing 0 starting at ip-1062
1093: pushConstant inline builtinIfElse
1094: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1095: pushFromStack 1
1096: pushFromStack 5
1097: pushFromStack 4
1098: pushFromStack 3
1099: pushFromStack 12
1100: tailCall with 12 locals and 3 arguments
1101: pushFromStack 1
1102: dup by 2
1103: pushConstant inline builtinTagWithoutValue
1104: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1105: pushFromStack 1
1106: pushFromStack 4
1107: pushFromStack 2
1108: call with 1 argument
1109: pushConstant inline builtinEquals
1110: pushConstant inline Error
1111: pushFromStack 1
1112: pushFromStack 1
1113: pushFromStack 4
1114: pushFromStack 6
1115: call with 2 arguments
1116: pushFromStack 7
1117: createFunction with 0 arguments capturing 0 starting at ip-1076
1118: pushConstant inline builtinIfElse
1119: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1120: pushFromStack 1
1121: pushFromStack 5
1122: pushFromStack 4
1123: pushFromStack 3
1124: pushFromStack 12
1125: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
1126: pushFromStack 1
1127: dup by 2
1128: pushConstant inline builtinTypeOf
1129: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1130: pushFromStack 1
1131: pushFromStack 4
1132: pushFromStack 2
1133: call with 1 argument
1134: pushConstant inline builtinEquals
1135: pushConstant inline Tag
1136: pushFromStack 1
1137: pushFromStack 1
1138: pushFromStack 4
1139: pushFromStack 6
1140: call with 2 arguments
1141: pushFromStack 7
1142: createFunction with 0 arguments capturing 0 starting at ip-1101
1143: pushConstant inline builtinIfElse
1144: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1145: pushFromStack 1
1146: pushFromStack 5
1147: pushFromStack 4
1148: pushFromStack 3
1149: pushFromStack 12
1150: tailCall with 12 locals and 3 arguments
# Core:result:is
1151: pushFromStack 1
1152: dup by 2
1153: pushConstant inline builtinTypeOf
1154: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1155: pushFromStack 1
1156: pushFromStack 4
1157: pushFromStack 2
1158: call with 1 argument
1159: pushConstant inline builtinEquals
1160: pushConstant inline Tag
1161: pushFromStack 1
1162: pushFromStack 1
1163: pushFromStack 4
1164: pushFromStack 6
1165: call with 2 arguments
1166: pushFromStack 7
1167: createFunction with 0 arguments capturing 0 starting at ip-1032
1168: pushConstant inline builtinIfElse
1169: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1170: pushFromStack 1
1171: pushFromStack 5
1172: pushFromStack 4
1173: pushFromStack 3
1174: pushFromStack 12
1175: call with 3 arguments
1176: pushFromStack 0
1177: dup by 1
1178: pushConstant inline builtinTagWithoutValue
1179: pushFromStack 0
1180: pushFromStack 2
1181: pushFromStack 12
1182: call with 1 argument
1183: pushConstant inline Match
1184: pushFromStack 10
1185: pushFromStack 2
1186: pushFromStack 2
1187: pushFromStack 15
1188: call with 2 arguments
1189: pushFromStack 4
1190: createFunction with 0 arguments capturing 0 starting at ip-1057
1191: pushFromStack 10
1192: createFunction with 0 arguments capturing 0 starting at ip-1126
1193: pushFromStack 10
1194: pushFromStack 5
1195: pushFromStack 4
1196: pushFromStack 3
1197: pushFromStack 21
1198: call with 3 arguments
1199: pushFromStack 8
1200: pushFromStack 1
1201: pushFromStack 20
1202: call with 1 argument
1203: pushFromStack 17
1204: pushFromStack 1
1205: pushFromStack 9
1206: pushFromStack 22
1207: call with 2 arguments
1208: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1209: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
1210: pushFromStack 15
1211: pushFromStack 3
1212: pushFromStack 3
1213: pushFromStack 3
1214: pushFromStack 26
1215: tailCall with 26 locals and 3 arguments
# Core:result:mapOrElse:26:case-1:didNotMatch
1216: pushConstant <replaced address ef5d2e500159f5dd> "No case matched the given expression."
1217: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1218: pushFromStack 1
1219: pushFromStack 1
1220: panic
1221: popMultipleBelowTop 3
1222: return
# Core:result:is:1:equals:then
1223: pushFromStack 1
1224: dup by 1
1225: pushConstant inline builtinTagGetValue
1226: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1227: pushFromStack 1
1228: pushFromStack 4
1229: pushFromStack 2
1230: call with 1 argument
1231: pushFromStack 0
1232: createList 1
1233: pushFromStack 0
1234: createTag Match
1235: popMultipleBelowTop 6
1236: return
1237: pushFromStack 1
1238: dup by 2
1239: pushConstant inline builtinTagHasValue
1240: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1241: pushFromStack 1
1242: pushFromStack 4
1243: pushFromStack 2
1244: call with 1 argument
1245: pushConstant inline builtinEquals
1246: pushConstant inline True
1247: pushFromStack 1
1248: pushFromStack 1
1249: pushFromStack 4
1250: pushFromStack 6
1251: call with 2 arguments
1252: pushFromStack 7
1253: createFunction with 0 arguments capturing 0 starting at ip-1223
1254: pushConstant inline builtinIfElse
1255: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1256: pushFromStack 1
1257: pushFromStack 5
1258: pushFromStack 4
1259: pushFromStack 3
1260: pushFromStack 12
1261: tailCall with 12 locals and 3 arguments
1262: pushFromStack 1
1263: dup by 2
1264: pushConstant inline builtinTagWithoutValue
1265: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1266: pushFromStack 1
1267: pushFromStack 4
1268: pushFromStack 2
1269: call with 1 argument
1270: pushConstant inline builtinEquals
1271: pushConstant inline Ok
1272: pushFromStack 1
1273: pushFromStack 1
1274: pushFromStack 4
1275: pushFromStack 6
1276: call with 2 arguments
1277: pushFromStack 7
1278: createFunction with 0 arguments capturing 0 starting at ip-1237
1279: pushConstant inline builtinIfElse
1280: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1281: pushFromStack 1
1282: pushFromStack 5
1283: pushFromStack 4
1284: pushFromStack 3
1285: pushFromStack 12
1286: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
1287: pushFromStack 1
1288: dup by 1
1289: pushFromStack 1
1290: popMultipleBelowTop 2
1291: return
# Core:result:is:1:equals:then
1292: pushFromStack 1
1293: dup by 1
1294: pushConstant inline builtinTagGetValue
1295: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1296: pushFromStack 1
1297: pushFromStack 4
1298: pushFromStack 2
1299: call with 1 argument
1300: pushFromStack 0
1301: createList 1
1302: pushFromStack 0
1303: createTag Match
1304: popMultipleBelowTop 6
1305: return
1306: pushFromStack 1
1307: dup by 2
1308: pushConstant inline builtinTagHasValue
1309: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1310: pushFromStack 1
1311: pushFromStack 4
1312: pushFromStack 2
1313: call with 1 argument
1314: pushConstant inline builtinEquals
1315: pushConstant inline True
1316: pushFromStack 1
1317: pushFromStack 1
1318: pushFromStack 4
1319: pushFromStack 6
1320: call with 2 arguments
1321: pushFromStack 7
1322: createFunction with 0 arguments capturing 0 starting at ip-1292
1323: pushConstant inline builtinIfElse
1324: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1325: pushFromStack 1
1326: pushFromStack 5
1327: pushFromStack 4
1328: pushFromStack 3
1329: pushFromStack 12
1330: tailCall with 12 locals and 3 arguments
1331: pushFromStack 1
1332: dup by 2
1333: pushConstant inline builtinTagWithoutValue
1334: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1335: pushFromStack 1
1336: pushFromStack 4
1337: pushFromStack 2
1338: call with 1 argument
1339: pushConstant inline builtinEquals
1340: pushConstant inline Error
1341: pushFromStack 1
1342: pushFromStack 1
1343: pushFromStack 4
1344: pushFromStack 6
1345: call with 2 arguments
1346: pushFromStack 7
1347: createFunction with 0 arguments capturing 0 starting at ip-1306
1348: pushConstant inline builtinIfElse
1349: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1350: pushFromStack 1
1351: pushFromStack 5
1352: pushFromStack 4
1353: pushFromStack 3
1354: pushFromStack 12
1355: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
1356: pushFromStack 1
1357: dup by 2
1358: pushConstant inline builtinTypeOf
1359: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1360: pushFromStack 1
1361: pushFromStack 4
1362: pushFromStack 2
1363: call with 1 argument
1364: pushConstant inline builtinEquals
1365: pushConstant inline Tag
1366: pushFromStack 1
1367: pushFromStack 1
1368: pushFromStack 4
1369: pushFromStack 6
1370: call with 2 arguments
1371: pushFromStack 7
1372: createFunction with 0 arguments capturing 0 starting at ip-1331
1373: pushConstant inline builtinIfElse
1374: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1375: pushFromStack 1
1376: pushFromStack 5
1377: pushFromStack 4
1378: pushFromStack 3
1379: pushFromStack 12
1380: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
1381: pushFromStack 1
1382: dup by 3
1383: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
1384: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
1385: pushFromStack 1
1386: pushFromStack 1
1387: pushFromStack 5
1388: pushFromStack 2
1389: traceCallStarts (1 argument)
1390: pushConstant inline builtinTypeOf
1391: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1392: pushFromStack 1
1393: pushFromStack 6
1394: pushFromStack 2
1395: call with 1 argument
1396: pushConstant inline builtinEquals
1397: pushConstant inline Function
1398: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1399: pushFromStack 2
1400: pushFromStack 4
1401: pushFromStack 3
1402: pushFromStack 3
1403: call with 2 arguments
1404: pushFromStack 0
1405: dup by 1
1406: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
1407: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1408: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1409: pushFromStack 2
1410: pushFromStack 2
1411: pushFromStack 5
1412: pushFromStack 3
1413: pushFromStack 15
1414: pushFromStack 4
1415: traceCallStarts (3 arguments)
1416: pushFromStack 1
1417: pushFromStack 4
1418: pushFromStack 2
1419: pushFromStack 14
1420: pushFromStack 6
1421: call with 3 arguments
1422: traceCallEnds without return value
1423: pushConstant inline builtinGetArgumentCount
1424: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
1425: pushFromStack 1
1426: pushFromStack 17
1427: pushFromStack 2
1428: call with 1 argument
1429: traceCallEnds without return value
1430: pushConstant inline 1
1431: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1432: pushFromStack 5
1433: drop
1434: pushFromStack 12
1435: pushFromStack 3
1436: pushFromStack 3
1437: pushFromStack 3
1438: tailCall with 20 locals and 2 arguments
1439: pushFromStack 1
1440: dup by 3
1441: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
1442: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
1443: pushFromStack 1
1444: pushFromStack 1
1445: pushFromStack 5
1446: pushFromStack 2
1447: traceCallStarts (1 argument)
1448: pushConstant inline builtinTypeOf
1449: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1450: pushFromStack 1
1451: pushFromStack 6
1452: pushFromStack 2
1453: call with 1 argument
1454: pushConstant inline builtinEquals
1455: pushConstant inline Function
1456: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1457: pushFromStack 2
1458: pushFromStack 4
1459: pushFromStack 3
1460: pushFromStack 3
1461: call with 2 arguments
1462: pushFromStack 0
1463: dup by 1
1464: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
1465: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1466: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1467: pushFromStack 2
1468: pushFromStack 2
1469: pushFromStack 5
1470: pushFromStack 3
1471: pushFromStack 15
1472: pushFromStack 4
1473: traceCallStarts (3 arguments)
1474: pushFromStack 1
1475: pushFromStack 4
1476: pushFromStack 2
1477: pushFromStack 14
1478: pushFromStack 6
1479: call with 3 arguments
1480: traceCallEnds without return value
1481: pushConstant inline builtinGetArgumentCount
1482: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
1483: pushFromStack 1
1484: pushFromStack 17
1485: pushFromStack 2
1486: call with 1 argument
1487: traceCallEnds without return value
1488: pushConstant inline 1
1489: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1490: pushFromStack 5
1491: drop
1492: pushFromStack 12
1493: pushFromStack 3
1494: pushFromStack 3
1495: pushFromStack 3
1496: tailCall with 20 locals and 2 arguments
# Core:result:mapOrElse:26:equals:then
1497: pushFromStack 1
1498: dup by 1
1499: pushConstant inline builtinTagGetValue
1500: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1501: pushFromStack 1
1502: pushFromStack 4
1503: pushFromStack 2
1504: call with 1 argument
1505: pushFromStack 0
1506: createList 1
1507: pushFromStack 0
1508: createTag Match
1509: popMultipleBelowTop 6
1510: return
1511: pushFromStack 1
1512: dup by 2
1513: pushConstant inline builtinTagHasValue
1514: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1515: pushFromStack 1
1516: pushFromStack 4
1517: pushFromStack 2
1518: call with 1 argument
1519: pushConstant inline builtinEquals
1520: pushConstant inline True
1521: pushFromStack 1
1522: pushFromStack 1
1523: pushFromStack 4
1524: pushFromStack 6
1525: call with 2 arguments
1526: pushFromStack 7
1527: createFunction with 0 arguments capturing 0 starting at ip-1497
1528: pushConstant inline builtinIfElse
1529: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1530: pushFromStack 1
1531: pushFromStack 5
1532: pushFromStack 4
1533: pushFromStack 3
1534: pushFromStack 12
1535: tailCall with 12 locals and 3 arguments
1536: pushFromStack 1
1537: dup by 2
1538: pushConstant inline builtinTagWithoutValue
1539: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1540: pushFromStack 1
1541: pushFromStack 4
1542: pushFromStack 2
1543: call with 1 argument
1544: pushConstant inline builtinEquals
1545: pushConstant inline Ok
1546: pushFromStack 1
1547: pushFromStack 1
1548: pushFromStack 4
1549: pushFromStack 6
1550: call with 2 arguments
1551: pushFromStack 7
1552: createFunction with 0 arguments capturing 0 starting at ip-1511
1553: pushConstant inline builtinIfElse
1554: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1555: pushFromStack 1
1556: pushFromStack 5
1557: pushFromStack 4
1558: pushFromStack 3
1559: pushFromStack 12
1560: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:26:case-0:matched
1561: pushFromStack 2
1562: dup by 2
1563: pushFromStack 1
1564: dup by 1
1565: pushConstant inline builtinTagGetValue
1566: pushConstant <replaced address c98e2f7a8dce9fc1> Core:result:mapOrElse:26:value
1567: pushFromStack 1
1568: pushFromStack 4
1569: pushFromStack 2
1570: call with 1 argument
1571: pushConstant inline builtinListGet
1572: pushConstant inline 0
1573: pushFromStack 1
1574: pushFromStack 3
1575: pushFromStack 2
1576: pushFromStack 6
1577: call with 2 arguments
1578: pushFromStack 0
1579: dup by 1
1580: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1581: pushFromStack 0
1582: pushFromStack 10
1583: pushFromStack 3
1584: pushFromStack 2
1585: traceTailCall (1 argument)
1586: pushFromStack 9
1587: pushFromStack 2
1588: pushFromStack 2
1589: tailCall with 10 locals and 1 argument
# Core:result:mapOrElse:26:equals:then
1590: pushFromStack 1
1591: dup by 1
1592: pushConstant inline builtinTagGetValue
1593: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1594: pushFromStack 1
1595: pushFromStack 4
1596: pushFromStack 2
1597: call with 1 argument
1598: pushFromStack 0
1599: createList 1
1600: pushFromStack 0
1601: createTag Match
1602: popMultipleBelowTop 6
1603: return
1604: pushFromStack 1
1605: dup by 2
1606: pushConstant inline builtinTagHasValue
1607: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1608: pushFromStack 1
1609: pushFromStack 4
1610: pushFromStack 2
1611: call with 1 argument
1612: pushConstant inline builtinEquals
1613: pushConstant inline True
1614: pushFromStack 1
1615: pushFromStack 1
1616: pushFromStack 4
1617: pushFromStack 6
1618: call with 2 arguments
1619: pushFromStack 7
1620: createFunction with 0 arguments capturing 0 starting at ip-1590
1621: pushConstant inline builtinIfElse
1622: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1623: pushFromStack 1
1624: pushFromStack 5
1625: pushFromStack 4
1626: pushFromStack 3
1627: pushFromStack 12
1628: tailCall with 12 locals and 3 arguments
1629: pushFromStack 1
1630: dup by 2
1631: pushConstant inline builtinTagWithoutValue
1632: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1633: pushFromStack 1
1634: pushFromStack 4
1635: pushFromStack 2
1636: call with 1 argument
1637: pushConstant inline builtinEquals
1638: pushConstant inline Error
1639: pushFromStack 1
1640: pushFromStack 1
1641: pushFromStack 4
1642: pushFromStack 6
1643: call with 2 arguments
1644: pushFromStack 7
1645: createFunction with 0 arguments capturing 0 starting at ip-1604
1646: pushConstant inline builtinIfElse
1647: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1648: pushFromStack 1
1649: pushFromStack 5
1650: pushFromStack 4
1651: pushFromStack 3
1652: pushFromStack 12
1653: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:26:case-1:matched
1654: pushFromStack 2
1655: dup by 2
1656: pushFromStack 1
1657: dup by 1
1658: pushConstant inline builtinTagGetValue
1659: pushConstant <replaced address 78116dc366ac952c> Core:result:mapOrElse:26:value#1
1660: pushFromStack 1
1661: pushFromStack 4
1662: pushFromStack 2
1663: call with 1 argument
1664: pushConstant inline builtinListGet
1665: pushConstant inline 0
1666: pushFromStack 1
1667: pushFromStack 3
1668: pushFromStack 2
1669: pushFromStack 6
1670: call with 2 arguments
1671: pushFromStack 0
1672: dup by 1
1673: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1674: pushFromStack 0
1675: pushFromStack 10
1676: pushFromStack 3
1677: pushFromStack 2
1678: traceTailCall (1 argument)
1679: pushFromStack 9
1680: pushFromStack 2
1681: pushFromStack 2
1682: tailCall with 10 locals and 1 argument
# Core:result:mapOrElse:26:case-0:didNotMatch
1683: pushFromStack 2
1684: dup by 2
1685: pushFromStack 1
1686: dup by 1
1687: pushConstant inline builtinTypeOf
1688: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1689: pushFromStack 1
1690: pushFromStack 5
1691: pushFromStack 2
1692: call with 1 argument
1693: pushConstant inline builtinEquals
1694: pushConstant inline Tag
1695: pushFromStack 1
1696: pushFromStack 1
1697: pushFromStack 4
1698: pushFromStack 6
1699: call with 2 arguments
1700: pushFromStack 8
1701: createFunction with 0 arguments capturing 0 starting at ip-1629
1702: pushConstant inline builtinIfElse
1703: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1704: pushFromStack 1
1705: pushFromStack 5
1706: pushFromStack 4
1707: pushFromStack 3
1708: pushFromStack 12
1709: call with 3 arguments
1710: pushFromStack 0
1711: dup by 1
1712: pushConstant inline builtinTagWithoutValue
1713: pushFromStack 0
1714: pushFromStack 2
1715: pushFromStack 12
1716: call with 1 argument
1717: pushConstant inline Match
1718: pushFromStack 10
1719: pushFromStack 2
1720: pushFromStack 2
1721: pushFromStack 15
1722: call with 2 arguments
1723: pushFromStack 16
1724: pushFromStack 5
1725: createFunction with 0 arguments capturing 1, 0 starting at ip-1654
1726: pushConstant <replaced address 9a169748478666fe> { 0 arguments (capturing nothing) → ip-1216 }
1727: pushFromStack 10
1728: pushFromStack 5
1729: pushFromStack 3
1730: pushFromStack 3
1731: pushFromStack 21
1732: tailCall with 22 locals and 3 arguments
# Core:result:mapOrElse
1733: pushFromStack 3
1734: dup by 6
1735: pushFromStack 2
1736: dup by 3
1737: pushFromStack 1
1738: dup by 3
1739: pushFromStack 0
1740: dup by 6
1741: pushConstant <replaced address 266d488b0b2596a5> Core:result:mapOrElse:2
1742: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
1743: pushFromStack 1
1744: pushFromStack 1
1745: pushFromStack 7
1746: pushFromStack 2
1747: traceCallStarts (1 argument)
1748: pushConstant inline builtinTypeOf
1749: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1750: pushFromStack 1
1751: pushFromStack 8
1752: pushFromStack 2
1753: call with 1 argument
1754: pushConstant inline builtinEquals
1755: pushConstant inline Tag
1756: pushFromStack 1
1757: pushFromStack 1
1758: pushFromStack 4
1759: pushFromStack 6
1760: call with 2 arguments
1761: pushFromStack 11
1762: createFunction with 0 arguments capturing 0 starting at ip-1262
1763: pushConstant inline builtinIfElse
1764: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1765: pushFromStack 1
1766: pushFromStack 5
1767: pushFromStack 4
1768: pushFromStack 3
1769: pushFromStack 12
1770: call with 3 arguments
1771: pushFromStack 0
1772: dup by 1
1773: pushConstant inline builtinTagWithoutValue
1774: pushFromStack 0
1775: pushFromStack 2
1776: pushFromStack 12
1777: call with 1 argument
1778: pushConstant inline Match
1779: pushFromStack 10
1780: pushFromStack 2
1781: pushFromStack 2
1782: pushFromStack 15
1783: call with 2 arguments
1784: pushFromStack 4
1785: createFunction with 0 arguments capturing 0 starting at ip-1287
1786: pushFromStack 10
1787: createFunction with 0 arguments capturing 0 starting at ip-1356
1788: pushFromStack 10
1789: pushFromStack 5
1790: pushFromStack 4
1791: pushFromStack 3
1792: pushFromStack 21
1793: call with 3 arguments
1794: pushFromStack 8
1795: pushFromStack 1
1796: pushFromStack 20
1797: call with 1 argument
1798: pushFromStack 17
1799: pushFromStack 1
1800: pushFromStack 9
1801: pushFromStack 22
1802: call with 2 arguments
1803: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1804: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
1805: pushFromStack 15
1806: pushFromStack 3
1807: pushFromStack 3
1808: pushFromStack 3
1809: pushFromStack 26
1810: call with 3 arguments
1811: pushFromStack 0
1812: dup by 1
1813: traceCallEnds without return value
1814: pushConstant <replaced address 0f59d2d5f5f1d623> Core:result:mapOrElse:4
1815: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1816: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1817: pushFromStack 2
1818: pushFromStack 2
1819: pushFromStack 5
1820: pushFromStack 3
1821: pushFromStack 34
1822: pushFromStack 4
1823: traceCallStarts (3 arguments)
1824: pushFromStack 1
1825: pushFromStack 4
1826: pushFromStack 2
1827: pushFromStack 33
1828: pushFromStack 6
1829: call with 3 arguments
1830: traceCallEnds without return value
1831: pushConstant <replaced address 9b3fe08f2f022acb> Core:result:mapOrElse:12
1832: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
1833: pushFromStack 1
1834: pushFromStack 1
1835: pushFromStack 37
1836: pushFromStack 2
1837: traceCallStarts (1 argument)
1838: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
1839: pushFromStack 31
1840: pushFromStack 37
1841: pushFromStack 2
1842: call with 1 argument
1843: pushConstant inline Function
1844: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1845: pushFromStack 31
1846: pushFromStack 3
1847: pushFromStack 3
1848: pushFromStack 3
1849: call with 2 arguments
1850: pushFromStack 0
1851: dup by 1
1852: pushFromStack 40
1853: createFunction with 0 arguments capturing 0 starting at ip-1381
1854: pushFromStack 0
1855: dup by 1
1856: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
1857: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
1858: pushFromStack 1
1859: pushFromStack 1
1860: pushFromStack 6
1861: pushFromStack 5
1862: pushFromStack 20
1863: pushFromStack 4
1864: traceCallStarts (3 arguments)
1865: pushFromStack 0
1866: pushFromStack 5
1867: pushFromStack 4
1868: pushFromStack 19
1869: pushFromStack 5
1870: call with 3 arguments
1871: pushFromStack 0
1872: dup by 1
1873: traceCallEnds without return value
1874: traceCallEnds without return value
1875: pushConstant <replaced address f8465d20e0be15a1> Core:result:mapOrElse:14
1876: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
1877: pushFromStack 1
1878: pushFromStack 17
1879: pushFromStack 4
1880: pushFromStack 3
1881: pushFromStack 49
1882: pushFromStack 4
1883: traceCallStarts (3 arguments)
1884: pushFromStack 16
1885: pushFromStack 3
1886: pushFromStack 2
1887: pushFromStack 48
1888: pushFromStack 5
1889: call with 3 arguments
1890: traceCallEnds without return value
1891: pushConstant <replaced address 549433f5358d17a9> Core:result:mapOrElse:22
1892: pushFromStack 0
1893: pushFromStack 15
1894: pushFromStack 50
1895: pushFromStack 2
1896: traceCallStarts (1 argument)
1897: pushFromStack 44
1898: pushFromStack 49
1899: pushFromStack 15
1900: call with 1 argument
1901: pushFromStack 42
1902: pushFromStack 1
1903: pushFromStack 14
1904: pushFromStack 14
1905: call with 2 arguments
1906: pushFromStack 0
1907: dup by 1
1908: pushFromStack 50
1909: createFunction with 0 arguments capturing 0 starting at ip-1439
1910: pushFromStack 0
1911: dup by 1
1912: pushFromStack 10
1913: pushFromStack 10
1914: pushFromStack 4
1915: pushFromStack 3
1916: pushFromStack 29
1917: pushFromStack 4
1918: traceCallStarts (3 arguments)
1919: pushFromStack 9
1920: pushFromStack 3
1921: pushFromStack 2
1922: pushFromStack 28
1923: pushFromStack 14
1924: call with 3 arguments
1925: pushFromStack 0
1926: dup by 1
1927: traceCallEnds without return value
1928: traceCallEnds without return value
1929: pushConstant <replaced address 3d80be4020595727> Core:result:mapOrElse:24
1930: pushConstant <replaced address d962951e9f7283f6> "`function.is1 errorMapper` was not satisfied"
1931: pushFromStack 1
1932: pushFromStack 26
1933: pushFromStack 4
1934: pushFromStack 3
1935: pushFromStack 58
1936: pushFromStack 4
1937: traceCallStarts (3 arguments)
1938: pushFromStack 25
1939: pushFromStack 3
1940: pushFromStack 2
1941: pushFromStack 57
1942: pushFromStack 5
1943: call with 3 arguments
1944: traceCallEnds without return value
1945: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1946: pushFromStack 53
1947: pushFromStack 37
1948: pushFromStack 2
1949: call with 1 argument
1950: pushFromStack 51
1951: pushFromStack 51
1952: pushFromStack 2
1953: pushFromStack 4
1954: call with 2 arguments
1955: pushFromStack 38
1956: createFunction with 0 arguments capturing 0 starting at ip-1536
1957: pushFromStack 49
1958: pushFromStack 3
1959: pushFromStack 2
1960: pushFromStack 51
1961: pushFromStack 8
1962: call with 3 arguments
1963: pushFromStack 0
1964: dup by 1
1965: pushFromStack 47
1966: pushFromStack 1
1967: pushFromStack 7
1968: call with 1 argument
1969: pushFromStack 56
1970: pushFromStack 1
1971: pushFromStack 48
1972: pushFromStack 9
1973: call with 2 arguments
1974: pushFromStack 24
1975: pushFromStack 3
1976: createFunction with 0 arguments capturing 1, 0 starting at ip-1561
1977: pushFromStack 7
1978: pushFromStack 17
1979: createFunction with 0 arguments capturing 1, 0 starting at ip-1683
1980: pushFromStack 38
1981: drop
1982: pushFromStack 23
1983: drop
1984: pushFromStack 14
1985: drop
1986: pushFromStack 58
1987: pushFromStack 7
1988: pushFromStack 5
1989: pushFromStack 3
1990: pushFromStack 17
1991: tailCall with 73 locals and 3 arguments
# Core:result:is:1:equals:then
1992: pushFromStack 1
1993: dup by 1
1994: pushConstant inline builtinTagGetValue
1995: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1996: pushFromStack 1
1997: pushFromStack 4
1998: pushFromStack 2
1999: call with 1 argument
2000: pushFromStack 0
2001: createList 1
2002: pushFromStack 0
2003: createTag Match
2004: popMultipleBelowTop 6
2005: return
2006: pushFromStack 1
2007: dup by 2
2008: pushConstant inline builtinTagHasValue
2009: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2010: pushFromStack 1
2011: pushFromStack 4
2012: pushFromStack 2
2013: call with 1 argument
2014: pushConstant inline builtinEquals
2015: pushConstant inline True
2016: pushFromStack 1
2017: pushFromStack 1
2018: pushFromStack 4
2019: pushFromStack 6
2020: call with 2 arguments
2021: pushFromStack 7
2022: createFunction with 0 arguments capturing 0 starting at ip-1992
2023: pushConstant inline builtinIfElse
2024: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2025: pushFromStack 1
2026: pushFromStack 5
2027: pushFromStack 4
2028: pushFromStack 3
2029: pushFromStack 12
2030: tailCall with 12 locals and 3 arguments
2031: pushFromStack 1
2032: dup by 2
2033: pushConstant inline builtinTagWithoutValue
2034: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2035: pushFromStack 1
2036: pushFromStack 4
2037: pushFromStack 2
2038: call with 1 argument
2039: pushConstant inline builtinEquals
2040: pushConstant inline Ok
2041: pushFromStack 1
2042: pushFromStack 1
2043: pushFromStack 4
2044: pushFromStack 6
2045: call with 2 arguments
2046: pushFromStack 7
2047: createFunction with 0 arguments capturing 0 starting at ip-2006
2048: pushConstant inline builtinIfElse
2049: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2050: pushFromStack 1
2051: pushFromStack 5
2052: pushFromStack 4
2053: pushFromStack 3
2054: pushFromStack 12
2055: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
2056: pushFromStack 1
2057: dup by 1
2058: pushFromStack 1
2059: popMultipleBelowTop 2
2060: return
# Core:result:is:1:equals:then
2061: pushFromStack 1
2062: dup by 1
2063: pushConstant inline builtinTagGetValue
2064: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2065: pushFromStack 1
2066: pushFromStack 4
2067: pushFromStack 2
2068: call with 1 argument
2069: pushFromStack 0
2070: createList 1
2071: pushFromStack 0
2072: createTag Match
2073: popMultipleBelowTop 6
2074: return
2075: pushFromStack 1
2076: dup by 2
2077: pushConstant inline builtinTagHasValue
2078: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2079: pushFromStack 1
2080: pushFromStack 4
2081: pushFromStack 2
2082: call with 1 argument
2083: pushConstant inline builtinEquals
2084: pushConstant inline True
2085: pushFromStack 1
2086: pushFromStack 1
2087: pushFromStack 4
2088: pushFromStack 6
2089: call with 2 arguments
2090: pushFromStack 7
2091: createFunction with 0 arguments capturing 0 starting at ip-2061
2092: pushConstant inline builtinIfElse
2093: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2094: pushFromStack 1
2095: pushFromStack 5
2096: pushFromStack 4
2097: pushFromStack 3
2098: pushFromStack 12
2099: tailCall with 12 locals and 3 arguments
2100: pushFromStack 1
2101: dup by 2
2102: pushConstant inline builtinTagWithoutValue
2103: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2104: pushFromStack 1
2105: pushFromStack 4
2106: pushFromStack 2
2107: call with 1 argument
2108: pushConstant inline builtinEquals
2109: pushConstant inline Error
2110: pushFromStack 1
2111: pushFromStack 1
2112: pushFromStack 4
2113: pushFromStack 6
2114: call with 2 arguments
2115: pushFromStack 7
2116: createFunction with 0 arguments capturing 0 starting at ip-2075
2117: pushConstant inline builtinIfElse
2118: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2119: pushFromStack 1
2120: pushFromStack 5
2121: pushFromStack 4
2122: pushFromStack 3
2123: pushFromStack 12
2124: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
2125: pushFromStack 1
2126: dup by 2
2127: pushConstant inline builtinTypeOf
2128: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2129: pushFromStack 1
2130: pushFromStack 4
2131: pushFromStack 2
2132: call with 1 argument
2133: pushConstant inline builtinEquals
2134: pushConstant inline Tag
2135: pushFromStack 1
2136: pushFromStack 1
2137: pushFromStack 4
2138: pushFromStack 6
2139: call with 2 arguments
2140: pushFromStack 7
2141: createFunction with 0 arguments capturing 0 starting at ip-2100
2142: pushConstant inline builtinIfElse
2143: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2144: pushFromStack 1
2145: pushFromStack 5
2146: pushFromStack 4
2147: pushFromStack 3
2148: pushFromStack 12
2149: tailCall with 12 locals and 3 arguments
# Core:result:getValue
2150: pushFromStack 1
2151: dup by 7
2152: pushFromStack 0
2153: dup by 2
2154: pushConstant <replaced address 055673228b46d5b7> Core:result:getValue:2
2155: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
2156: pushFromStack 1
2157: pushFromStack 1
2158: pushFromStack 5
2159: pushFromStack 2
2160: traceCallStarts (1 argument)
2161: pushConstant inline builtinTypeOf
2162: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2163: pushFromStack 1
2164: pushFromStack 6
2165: pushFromStack 2
2166: call with 1 argument
2167: pushConstant inline builtinEquals
2168: pushConstant inline Tag
2169: pushFromStack 1
2170: pushFromStack 1
2171: pushFromStack 4
2172: pushFromStack 6
2173: call with 2 arguments
2174: pushFromStack 9
2175: createFunction with 0 arguments capturing 0 starting at ip-2031
2176: pushConstant inline builtinIfElse
2177: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2178: pushFromStack 1
2179: pushFromStack 5
2180: pushFromStack 4
2181: pushFromStack 3
2182: pushFromStack 12
2183: call with 3 arguments
2184: pushFromStack 0
2185: dup by 1
2186: pushConstant inline builtinTagWithoutValue
2187: pushFromStack 0
2188: pushFromStack 2
2189: pushFromStack 12
2190: call with 1 argument
2191: pushConstant inline Match
2192: pushFromStack 10
2193: pushFromStack 2
2194: pushFromStack 2
2195: pushFromStack 15
2196: call with 2 arguments
2197: pushFromStack 4
2198: createFunction with 0 arguments capturing 0 starting at ip-2056
2199: pushFromStack 10
2200: createFunction with 0 arguments capturing 0 starting at ip-2125
2201: pushFromStack 10
2202: pushFromStack 5
2203: pushFromStack 4
2204: pushFromStack 3
2205: pushFromStack 21
2206: call with 3 arguments
2207: pushFromStack 8
2208: pushFromStack 1
2209: pushFromStack 20
2210: call with 1 argument
2211: pushFromStack 17
2212: pushFromStack 1
2213: pushFromStack 9
2214: pushFromStack 22
2215: call with 2 arguments
2216: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2217: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
2218: pushFromStack 15
2219: pushFromStack 3
2220: pushFromStack 3
2221: pushFromStack 3
2222: pushFromStack 26
2223: call with 3 arguments
2224: pushFromStack 0
2225: dup by 1
2226: traceCallEnds without return value
2227: pushConstant <replaced address a84ff690d98aeae1> Core:result:getValue:4
2228: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2229: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
2230: pushFromStack 2
2231: pushFromStack 2
2232: pushFromStack 5
2233: pushFromStack 3
2234: pushFromStack 34
2235: pushFromStack 4
2236: traceCallStarts (3 arguments)
2237: pushFromStack 1
2238: pushFromStack 4
2239: pushFromStack 2
2240: pushFromStack 33
2241: pushFromStack 6
2242: call with 3 arguments
2243: traceCallEnds without return value
2244: pushConstant <replaced address 1c69e8d7a07a9639> Core:result:getValue:12
2245: pushConstant <replaced address ac68896419d48592> { 1 argument (capturing nothing) → ip-826 }
2246: pushFromStack 1
2247: pushFromStack 1
2248: pushFromStack 15
2249: pushFromStack 2
2250: traceTailCall (1 argument)
2251: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2252: pushFromStack 31
2253: pushFromStack 15
2254: pushFromStack 2
2255: call with 1 argument
2256: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2257: pushFromStack 30
2258: pushFromStack 2
2259: pushFromStack 31
2260: pushFromStack 3
2261: call with 2 arguments
2262: pushFromStack 0
2263: dup by 1
2264: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
2265: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
2266: pushFromStack 1
2267: pushFromStack 11
2268: pushFromStack 4
2269: pushFromStack 3
2270: pushFromStack 11
2271: pushFromStack 4
2272: traceCallStarts (3 arguments)
2273: pushFromStack 10
2274: pushFromStack 3
2275: pushFromStack 2
2276: pushFromStack 10
2277: pushFromStack 5
2278: call with 3 arguments
2279: traceCallEnds without return value
2280: pushConstant inline builtinTagHasValue
2281: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
2282: pushFromStack 1
2283: pushFromStack 23
2284: pushFromStack 2
2285: call with 1 argument
2286: pushFromStack 0
2287: dup by 1
2288: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
2289: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
2290: pushFromStack 1
2291: pushFromStack 17
2292: pushFromStack 4
2293: pushFromStack 3
2294: pushFromStack 17
2295: pushFromStack 4
2296: traceCallStarts (3 arguments)
2297: pushFromStack 16
2298: pushFromStack 3
2299: pushFromStack 2
2300: pushFromStack 16
2301: pushFromStack 5
2302: call with 3 arguments
2303: traceCallEnds without return value
2304: pushConstant inline builtinTagGetValue
2305: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
2306: pushFromStack 17
2307: drop
2308: pushFromStack 8
2309: drop
2310: pushFromStack 2
2311: drop
2312: pushFromStack 1
2313: pushFromStack 29
2314: pushFromStack 2
2315: tailCall with 50 locals and 1 argument
# Core:result:is:1:equals:then
2316: pushFromStack 1
2317: dup by 1
2318: pushConstant inline builtinTagGetValue
2319: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2320: pushFromStack 1
2321: pushFromStack 4
2322: pushFromStack 2
2323: call with 1 argument
2324: pushFromStack 0
2325: createList 1
2326: pushFromStack 0
2327: createTag Match
2328: popMultipleBelowTop 6
2329: return
2330: pushFromStack 1
2331: dup by 2
2332: pushConstant inline builtinTagHasValue
2333: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2334: pushFromStack 1
2335: pushFromStack 4
2336: pushFromStack 2
2337: call with 1 argument
2338: pushConstant inline builtinEquals
2339: pushConstant inline True
2340: pushFromStack 1
2341: pushFromStack 1
2342: pushFromStack 4
2343: pushFromStack 6
2344: call with 2 arguments
2345: pushFromStack 7
2346: createFunction with 0 arguments capturing 0 starting at ip-2316
2347: pushConstant inline builtinIfElse
2348: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2349: pushFromStack 1
2350: pushFromStack 5
2351: pushFromStack 4
2352: pushFromStack 3
2353: pushFromStack 12
2354: tailCall with 12 locals and 3 arguments
2355: pushFromStack 1
2356: dup by 2
2357: pushConstant inline builtinTagWithoutValue
2358: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2359: pushFromStack 1
2360: pushFromStack 4
2361: pushFromStack 2
2362: call with 1 argument
2363: pushConstant inline builtinEquals
2364: pushConstant inline Ok
2365: pushFromStack 1
2366: pushFromStack 1
2367: pushFromStack 4
2368: pushFromStack 6
2369: call with 2 arguments
2370: pushFromStack 7
2371: createFunction with 0 arguments capturing 0 starting at ip-2330
2372: pushConstant inline builtinIfElse
2373: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2374: pushFromStack 1
2375: pushFromStack 5
2376: pushFromStack 4
2377: pushFromStack 3
2378: pushFromStack 12
2379: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
2380: pushFromStack 1
2381: dup by 1
2382: pushFromStack 1
2383: popMultipleBelowTop 2
2384: return
# Core:result:is:1:equals:then
2385: pushFromStack 1
2386: dup by 1
2387: pushConstant inline builtinTagGetValue
2388: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2389: pushFromStack 1
2390: pushFromStack 4
2391: pushFromStack 2
2392: call with 1 argument
2393: pushFromStack 0
2394: createList 1
2395: pushFromStack 0
2396: createTag Match
2397: popMultipleBelowTop 6
2398: return
2399: pushFromStack 1
2400: dup by 2
2401: pushConstant inline builtinTagHasValue
2402: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2403: pushFromStack 1
2404: pushFromStack 4
2405: pushFromStack 2
2406: call with 1 argument
2407: pushConstant inline builtinEquals
2408: pushConstant inline True
2409: pushFromStack 1
2410: pushFromStack 1
2411: pushFromStack 4
2412: pushFromStack 6
2413: call with 2 arguments
2414: pushFromStack 7
2415: createFunction with 0 arguments capturing 0 starting at ip-2385
2416: pushConstant inline builtinIfElse
2417: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2418: pushFromStack 1
2419: pushFromStack 5
2420: pushFromStack 4
2421: pushFromStack 3
2422: pushFromStack 12
2423: tailCall with 12 locals and 3 arguments
2424: pushFromStack 1
2425: dup by 2
2426: pushConstant inline builtinTagWithoutValue
2427: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2428: pushFromStack 1
2429: pushFromStack 4
2430: pushFromStack 2
2431: call with 1 argument
2432: pushConstant inline builtinEquals
2433: pushConstant inline Error
2434: pushFromStack 1
2435: pushFromStack 1
2436: pushFromStack 4
2437: pushFromStack 6
2438: call with 2 arguments
2439: pushFromStack 7
2440: createFunction with 0 arguments capturing 0 starting at ip-2399
2441: pushConstant inline builtinIfElse
2442: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2443: pushFromStack 1
2444: pushFromStack 5
2445: pushFromStack 4
2446: pushFromStack 3
2447: pushFromStack 12
2448: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
2449: pushFromStack 1
2450: dup by 2
2451: pushConstant inline builtinTypeOf
2452: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2453: pushFromStack 1
2454: pushFromStack 4
2455: pushFromStack 2
2456: call with 1 argument
2457: pushConstant inline builtinEquals
2458: pushConstant inline Tag
2459: pushFromStack 1
2460: pushFromStack 1
2461: pushFromStack 4
2462: pushFromStack 6
2463: call with 2 arguments
2464: pushFromStack 7
2465: createFunction with 0 arguments capturing 0 starting at ip-2424
2466: pushConstant inline builtinIfElse
2467: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2468: pushFromStack 1
2469: pushFromStack 5
2470: pushFromStack 4
2471: pushFromStack 3
2472: pushFromStack 12
2473: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
2474: pushFromStack 1
2475: dup by 3
2476: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
2477: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
2478: pushFromStack 1
2479: pushFromStack 1
2480: pushFromStack 5
2481: pushFromStack 2
2482: traceCallStarts (1 argument)
2483: pushConstant inline builtinTypeOf
2484: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2485: pushFromStack 1
2486: pushFromStack 6
2487: pushFromStack 2
2488: call with 1 argument
2489: pushConstant inline builtinEquals
2490: pushConstant inline Function
2491: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2492: pushFromStack 2
2493: pushFromStack 4
2494: pushFromStack 3
2495: pushFromStack 3
2496: call with 2 arguments
2497: pushFromStack 0
2498: dup by 1
2499: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
2500: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2501: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
2502: pushFromStack 2
2503: pushFromStack 2
2504: pushFromStack 5
2505: pushFromStack 3
2506: pushFromStack 15
2507: pushFromStack 4
2508: traceCallStarts (3 arguments)
2509: pushFromStack 1
2510: pushFromStack 4
2511: pushFromStack 2
2512: pushFromStack 14
2513: pushFromStack 6
2514: call with 3 arguments
2515: traceCallEnds without return value
2516: pushConstant inline builtinGetArgumentCount
2517: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
2518: pushFromStack 1
2519: pushFromStack 17
2520: pushFromStack 2
2521: call with 1 argument
2522: traceCallEnds without return value
2523: pushConstant inline 1
2524: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2525: pushFromStack 5
2526: drop
2527: pushFromStack 12
2528: pushFromStack 3
2529: pushFromStack 3
2530: pushFromStack 3
2531: tailCall with 20 locals and 2 arguments
# Core:result:mapOr:18
2532: pushFromStack 2
2533: dup by 1
2534: pushFromStack 1
2535: drop
2536: pushFromStack 2
2537: popMultipleBelowTop 3
2538: return
# Core:result:mapOr
2539: pushFromStack 3
2540: dup by 5
2541: pushFromStack 2
2542: dup by 4
2543: pushFromStack 0
2544: dup by 4
2545: pushConstant <replaced address 017970d57aa05a94> Core:result:mapOr:2
2546: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
2547: pushFromStack 1
2548: pushFromStack 1
2549: pushFromStack 7
2550: pushFromStack 2
2551: traceCallStarts (1 argument)
2552: pushConstant inline builtinTypeOf
2553: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2554: pushFromStack 1
2555: pushFromStack 8
2556: pushFromStack 2
2557: call with 1 argument
2558: pushConstant inline builtinEquals
2559: pushConstant inline Tag
2560: pushFromStack 1
2561: pushFromStack 1
2562: pushFromStack 4
2563: pushFromStack 6
2564: call with 2 arguments
2565: pushFromStack 11
2566: createFunction with 0 arguments capturing 0 starting at ip-2355
2567: pushConstant inline builtinIfElse
2568: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2569: pushFromStack 1
2570: pushFromStack 5
2571: pushFromStack 4
2572: pushFromStack 3
2573: pushFromStack 12
2574: call with 3 arguments
2575: pushFromStack 0
2576: dup by 1
2577: pushConstant inline builtinTagWithoutValue
2578: pushFromStack 0
2579: pushFromStack 2
2580: pushFromStack 12
2581: call with 1 argument
2582: pushConstant inline Match
2583: pushFromStack 10
2584: pushFromStack 2
2585: pushFromStack 2
2586: pushFromStack 15
2587: call with 2 arguments
2588: pushFromStack 4
2589: createFunction with 0 arguments capturing 0 starting at ip-2380
2590: pushFromStack 10
2591: createFunction with 0 arguments capturing 0 starting at ip-2449
2592: pushFromStack 10
2593: pushFromStack 5
2594: pushFromStack 4
2595: pushFromStack 3
2596: pushFromStack 21
2597: call with 3 arguments
2598: pushFromStack 8
2599: pushFromStack 1
2600: pushFromStack 20
2601: call with 1 argument
2602: pushFromStack 17
2603: pushFromStack 1
2604: pushFromStack 9
2605: pushFromStack 22
2606: call with 2 arguments
2607: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2608: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
2609: pushFromStack 15
2610: pushFromStack 3
2611: pushFromStack 3
2612: pushFromStack 3
2613: pushFromStack 26
2614: call with 3 arguments
2615: pushFromStack 0
2616: dup by 1
2617: traceCallEnds without return value
2618: pushConstant <replaced address 5e7fed672c5c456a> Core:result:mapOr:4
2619: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2620: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
2621: pushFromStack 2
2622: pushFromStack 2
2623: pushFromStack 5
2624: pushFromStack 3
2625: pushFromStack 34
2626: pushFromStack 4
2627: traceCallStarts (3 arguments)
2628: pushFromStack 1
2629: pushFromStack 4
2630: pushFromStack 2
2631: pushFromStack 33
2632: pushFromStack 6
2633: call with 3 arguments
2634: traceCallEnds without return value
2635: pushConstant <replaced address ea65fb20656c9a12> Core:result:mapOr:12
2636: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
2637: pushFromStack 1
2638: pushFromStack 1
2639: pushFromStack 37
2640: pushFromStack 2
2641: traceCallStarts (1 argument)
2642: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
2643: pushFromStack 31
2644: pushFromStack 37
2645: pushFromStack 2
2646: call with 1 argument
2647: pushConstant inline Function
2648: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2649: pushFromStack 31
2650: pushFromStack 3
2651: pushFromStack 3
2652: pushFromStack 3
2653: call with 2 arguments
2654: pushFromStack 0
2655: dup by 1
2656: pushFromStack 40
2657: createFunction with 0 arguments capturing 0 starting at ip-2474
2658: pushFromStack 0
2659: dup by 1
2660: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
2661: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
2662: pushFromStack 1
2663: pushFromStack 1
2664: pushFromStack 6
2665: pushFromStack 5
2666: pushFromStack 20
2667: pushFromStack 4
2668: traceCallStarts (3 arguments)
2669: pushFromStack 0
2670: pushFromStack 5
2671: pushFromStack 4
2672: pushFromStack 19
2673: pushFromStack 5
2674: call with 3 arguments
2675: pushFromStack 0
2676: dup by 1
2677: traceCallEnds without return value
2678: traceCallEnds without return value
2679: pushConstant <replaced address 476c77b2172884e8> Core:result:mapOr:14
2680: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
2681: pushFromStack 1
2682: pushFromStack 17
2683: pushFromStack 4
2684: pushFromStack 3
2685: pushFromStack 49
2686: pushFromStack 4
2687: traceCallStarts (3 arguments)
2688: pushFromStack 16
2689: pushFromStack 3
2690: pushFromStack 2
2691: pushFromStack 48
2692: pushFromStack 5
2693: call with 3 arguments
2694: traceCallEnds without return value
2695: pushFromStack 47
2696: createFunction with 1 argument capturing 0 starting at ip-2532
2697: pushFromStack 0
2698: dup by 1
2699: pushConstant <replaced address 6ac24dff13e30e79> Core:result:mapOr:19
2700: pushConstant <replaced address f61c8e70a9c80c6d> { 3 arguments (capturing nothing) → ip-1733 }
2701: pushFromStack 1
2702: pushFromStack 1
2703: pushFromStack 32
2704: pushFromStack 14
2705: pushFromStack 6
2706: pushFromStack 4
2707: traceTailCall (3 arguments)
2708: pushFromStack 19
2709: drop
2710: pushFromStack 4
2711: drop
2712: pushFromStack 0
2713: pushFromStack 31
2714: pushFromStack 13
2715: pushFromStack 5
2716: pushFromStack 5
2717: tailCall with 54 locals and 3 arguments
# Core:result:is:1:equals:then
2718: pushFromStack 1
2719: dup by 1
2720: pushConstant inline builtinTagGetValue
2721: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2722: pushFromStack 1
2723: pushFromStack 4
2724: pushFromStack 2
2725: call with 1 argument
2726: pushFromStack 0
2727: createList 1
2728: pushFromStack 0
2729: createTag Match
2730: popMultipleBelowTop 6
2731: return
2732: pushFromStack 1
2733: dup by 2
2734: pushConstant inline builtinTagHasValue
2735: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2736: pushFromStack 1
2737: pushFromStack 4
2738: pushFromStack 2
2739: call with 1 argument
2740: pushConstant inline builtinEquals
2741: pushConstant inline True
2742: pushFromStack 1
2743: pushFromStack 1
2744: pushFromStack 4
2745: pushFromStack 6
2746: call with 2 arguments
2747: pushFromStack 7
2748: createFunction with 0 arguments capturing 0 starting at ip-2718
2749: pushConstant inline builtinIfElse
2750: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2751: pushFromStack 1
2752: pushFromStack 5
2753: pushFromStack 4
2754: pushFromStack 3
2755: pushFromStack 12
2756: tailCall with 12 locals and 3 arguments
2757: pushFromStack 1
2758: dup by 2
2759: pushConstant inline builtinTagWithoutValue
2760: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2761: pushFromStack 1
2762: pushFromStack 4
2763: pushFromStack 2
2764: call with 1 argument
2765: pushConstant inline builtinEquals
2766: pushConstant inline Ok
2767: pushFromStack 1
2768: pushFromStack 1
2769: pushFromStack 4
2770: pushFromStack 6
2771: call with 2 arguments
2772: pushFromStack 7
2773: createFunction with 0 arguments capturing 0 starting at ip-2732
2774: pushConstant inline builtinIfElse
2775: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2776: pushFromStack 1
2777: pushFromStack 5
2778: pushFromStack 4
2779: pushFromStack 3
2780: pushFromStack 12
2781: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
2782: pushFromStack 1
2783: dup by 1
2784: pushFromStack 1
2785: popMultipleBelowTop 2
2786: return
# Core:result:is:1:equals:then
2787: pushFromStack 1
2788: dup by 1
2789: pushConstant inline builtinTagGetValue
2790: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2791: pushFromStack 1
2792: pushFromStack 4
2793: pushFromStack 2
2794: call with 1 argument
2795: pushFromStack 0
2796: createList 1
2797: pushFromStack 0
2798: createTag Match
2799: popMultipleBelowTop 6
2800: return
2801: pushFromStack 1
2802: dup by 2
2803: pushConstant inline builtinTagHasValue
2804: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2805: pushFromStack 1
2806: pushFromStack 4
2807: pushFromStack 2
2808: call with 1 argument
2809: pushConstant inline builtinEquals
2810: pushConstant inline True
2811: pushFromStack 1
2812: pushFromStack 1
2813: pushFromStack 4
2814: pushFromStack 6
2815: call with 2 arguments
2816: pushFromStack 7
2817: createFunction with 0 arguments capturing 0 starting at ip-2787
2818: pushConstant inline builtinIfElse
2819: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2820: pushFromStack 1
2821: pushFromStack 5
2822: pushFromStack 4
2823: pushFromStack 3
2824: pushFromStack 12
2825: tailCall with 12 locals and 3 arguments
2826: pushFromStack 1
2827: dup by 2
2828: pushConstant inline builtinTagWithoutValue
2829: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2830: pushFromStack 1
2831: pushFromStack 4
2832: pushFromStack 2
2833: call with 1 argument
2834: pushConstant inline builtinEquals
2835: pushConstant inline Error
2836: pushFromStack 1
2837: pushFromStack 1
2838: pushFromStack 4
2839: pushFromStack 6
2840: call with 2 arguments
2841: pushFromStack 7
2842: createFunction with 0 arguments capturing 0 starting at ip-2801
2843: pushConstant inline builtinIfElse
2844: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2845: pushFromStack 1
2846: pushFromStack 5
2847: pushFromStack 4
2848: pushFromStack 3
2849: pushFromStack 12
2850: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
2851: pushFromStack 1
2852: dup by 2
2853: pushConstant inline builtinTypeOf
2854: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2855: pushFromStack 1
2856: pushFromStack 4
2857: pushFromStack 2
2858: call with 1 argument
2859: pushConstant inline builtinEquals
2860: pushConstant inline Tag
2861: pushFromStack 1
2862: pushFromStack 1
2863: pushFromStack 4
2864: pushFromStack 6
2865: call with 2 arguments
2866: pushFromStack 7
2867: createFunction with 0 arguments capturing 0 starting at ip-2826
2868: pushConstant inline builtinIfElse
2869: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2870: pushFromStack 1
2871: pushFromStack 5
2872: pushFromStack 4
2873: pushFromStack 3
2874: pushFromStack 12
2875: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
2876: pushFromStack 1
2877: dup by 3
2878: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
2879: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
2880: pushFromStack 1
2881: pushFromStack 1
2882: pushFromStack 5
2883: pushFromStack 2
2884: traceCallStarts (1 argument)
2885: pushConstant inline builtinTypeOf
2886: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2887: pushFromStack 1
2888: pushFromStack 6
2889: pushFromStack 2
2890: call with 1 argument
2891: pushConstant inline builtinEquals
2892: pushConstant inline Function
2893: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2894: pushFromStack 2
2895: pushFromStack 4
2896: pushFromStack 3
2897: pushFromStack 3
2898: call with 2 arguments
2899: pushFromStack 0
2900: dup by 1
2901: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
2902: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2903: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
2904: pushFromStack 2
2905: pushFromStack 2
2906: pushFromStack 5
2907: pushFromStack 3
2908: pushFromStack 15
2909: pushFromStack 4
2910: traceCallStarts (3 arguments)
2911: pushFromStack 1
2912: pushFromStack 4
2913: pushFromStack 2
2914: pushFromStack 14
2915: pushFromStack 6
2916: call with 3 arguments
2917: traceCallEnds without return value
2918: pushConstant inline builtinGetArgumentCount
2919: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
2920: pushFromStack 1
2921: pushFromStack 17
2922: pushFromStack 2
2923: call with 1 argument
2924: traceCallEnds without return value
2925: pushConstant inline 1
2926: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2927: pushFromStack 5
2928: drop
2929: pushFromStack 12
2930: pushFromStack 3
2931: pushFromStack 3
2932: pushFromStack 3
2933: tailCall with 20 locals and 2 arguments
# Core:result:flatMap:17
2934: pushFromStack 2
2935: dup by 2
2936: pushFromStack 1
2937: dup by 1
2938: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
2939: pushFromStack 0
2940: pushFromStack 4
2941: pushFromStack 4
2942: pushFromStack 2
2943: traceTailCall (1 argument)
2944: pushFromStack 3
2945: pushFromStack 3
2946: pushFromStack 2
2947: tailCall with 4 locals and 1 argument
# Core:result:flatMap
2948: pushFromStack 2
2949: dup by 7
2950: pushFromStack 1
2951: dup by 3
2952: pushFromStack 0
2953: dup by 4
2954: pushConstant <replaced address 05e45b91c25d1055> Core:result:flatMap:2
2955: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
2956: pushFromStack 1
2957: pushFromStack 1
2958: pushFromStack 6
2959: pushFromStack 2
2960: traceCallStarts (1 argument)
2961: pushConstant inline builtinTypeOf
2962: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2963: pushFromStack 1
2964: pushFromStack 7
2965: pushFromStack 2
2966: call with 1 argument
2967: pushConstant inline builtinEquals
2968: pushConstant inline Tag
2969: pushFromStack 1
2970: pushFromStack 1
2971: pushFromStack 4
2972: pushFromStack 6
2973: call with 2 arguments
2974: pushFromStack 10
2975: createFunction with 0 arguments capturing 0 starting at ip-2757
2976: pushConstant inline builtinIfElse
2977: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2978: pushFromStack 1
2979: pushFromStack 5
2980: pushFromStack 4
2981: pushFromStack 3
2982: pushFromStack 12
2983: call with 3 arguments
2984: pushFromStack 0
2985: dup by 1
2986: pushConstant inline builtinTagWithoutValue
2987: pushFromStack 0
2988: pushFromStack 2
2989: pushFromStack 12
2990: call with 1 argument
2991: pushConstant inline Match
2992: pushFromStack 10
2993: pushFromStack 2
2994: pushFromStack 2
2995: pushFromStack 15
2996: call with 2 arguments
2997: pushFromStack 4
2998: createFunction with 0 arguments capturing 0 starting at ip-2782
2999: pushFromStack 10
3000: createFunction with 0 arguments capturing 0 starting at ip-2851
3001: pushFromStack 10
3002: pushFromStack 5
3003: pushFromStack 4
3004: pushFromStack 3
3005: pushFromStack 21
3006: call with 3 arguments
3007: pushFromStack 8
3008: pushFromStack 1
3009: pushFromStack 20
3010: call with 1 argument
3011: pushFromStack 17
3012: pushFromStack 1
3013: pushFromStack 9
3014: pushFromStack 22
3015: call with 2 arguments
3016: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
3017: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
3018: pushFromStack 15
3019: pushFromStack 3
3020: pushFromStack 3
3021: pushFromStack 3
3022: pushFromStack 26
3023: call with 3 arguments
3024: pushFromStack 0
3025: dup by 1
3026: traceCallEnds without return value
3027: pushConstant <replaced address eed0e5dcad294fd3> Core:result:flatMap:4
3028: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3029: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
3030: pushFromStack 2
3031: pushFromStack 2
3032: pushFromStack 5
3033: pushFromStack 3
3034: pushFromStack 34
3035: pushFromStack 4
3036: traceCallStarts (3 arguments)
3037: pushFromStack 1
3038: pushFromStack 4
3039: pushFromStack 2
3040: pushFromStack 33
3041: pushFromStack 6
3042: call with 3 arguments
3043: traceCallEnds without return value
3044: pushConstant <replaced address 7ab6f395e639a47b> Core:result:flatMap:12
3045: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
3046: pushFromStack 1
3047: pushFromStack 1
3048: pushFromStack 36
3049: pushFromStack 2
3050: traceCallStarts (1 argument)
3051: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
3052: pushFromStack 31
3053: pushFromStack 36
3054: pushFromStack 2
3055: call with 1 argument
3056: pushConstant inline Function
3057: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3058: pushFromStack 31
3059: pushFromStack 3
3060: pushFromStack 3
3061: pushFromStack 3
3062: call with 2 arguments
3063: pushFromStack 0
3064: dup by 1
3065: pushFromStack 39
3066: createFunction with 0 arguments capturing 0 starting at ip-2876
3067: pushFromStack 0
3068: dup by 1
3069: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
3070: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
3071: pushFromStack 1
3072: pushFromStack 1
3073: pushFromStack 6
3074: pushFromStack 5
3075: pushFromStack 20
3076: pushFromStack 4
3077: traceCallStarts (3 arguments)
3078: pushFromStack 0
3079: pushFromStack 5
3080: pushFromStack 4
3081: pushFromStack 19
3082: pushFromStack 5
3083: call with 3 arguments
3084: pushFromStack 0
3085: dup by 1
3086: traceCallEnds without return value
3087: traceCallEnds without return value
3088: pushConstant <replaced address d7bd702797f58f51> Core:result:flatMap:14
3089: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
3090: pushFromStack 1
3091: pushFromStack 17
3092: pushFromStack 4
3093: pushFromStack 3
3094: pushFromStack 49
3095: pushFromStack 4
3096: traceCallStarts (3 arguments)
3097: pushFromStack 16
3098: pushFromStack 3
3099: pushFromStack 2
3100: pushFromStack 48
3101: pushFromStack 5
3102: call with 3 arguments
3103: traceCallEnds without return value
3104: pushFromStack 7
3105: createFunction with 1 argument capturing 0 starting at ip-2934
3106: pushFromStack 0
3107: dup by 1
3108: pushConstant <replaced address cc33b54d0d5baf10> Core:result:flatMap:19
3109: pushConstant <replaced address c0bb63bd44e367a3> { 3 arguments (capturing nothing) → ip-2539 }
3110: pushFromStack 1
3111: pushFromStack 1
3112: pushFromStack 32
3113: pushFromStack 5
3114: pushFromStack 1
3115: pushFromStack 4
3116: traceTailCall (3 arguments)
3117: pushFromStack 19
3118: drop
3119: pushFromStack 4
3120: drop
3121: pushFromStack 0
3122: pushFromStack 31
3123: pushFromStack 4
3124: pushFromStack 1
3125: pushFromStack 5
3126: tailCall with 53 locals and 3 arguments
# Core:result:is:1:equals:then
3127: pushFromStack 1
3128: dup by 1
3129: pushConstant inline builtinTagGetValue
3130: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3131: pushFromStack 1
3132: pushFromStack 4
3133: pushFromStack 2
3134: call with 1 argument
3135: pushFromStack 0
3136: createList 1
3137: pushFromStack 0
3138: createTag Match
3139: popMultipleBelowTop 6
3140: return
3141: pushFromStack 1
3142: dup by 2
3143: pushConstant inline builtinTagHasValue
3144: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3145: pushFromStack 1
3146: pushFromStack 4
3147: pushFromStack 2
3148: call with 1 argument
3149: pushConstant inline builtinEquals
3150: pushConstant inline True
3151: pushFromStack 1
3152: pushFromStack 1
3153: pushFromStack 4
3154: pushFromStack 6
3155: call with 2 arguments
3156: pushFromStack 7
3157: createFunction with 0 arguments capturing 0 starting at ip-3127
3158: pushConstant inline builtinIfElse
3159: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3160: pushFromStack 1
3161: pushFromStack 5
3162: pushFromStack 4
3163: pushFromStack 3
3164: pushFromStack 12
3165: tailCall with 12 locals and 3 arguments
3166: pushFromStack 1
3167: dup by 2
3168: pushConstant inline builtinTagWithoutValue
3169: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3170: pushFromStack 1
3171: pushFromStack 4
3172: pushFromStack 2
3173: call with 1 argument
3174: pushConstant inline builtinEquals
3175: pushConstant inline Ok
3176: pushFromStack 1
3177: pushFromStack 1
3178: pushFromStack 4
3179: pushFromStack 6
3180: call with 2 arguments
3181: pushFromStack 7
3182: createFunction with 0 arguments capturing 0 starting at ip-3141
3183: pushConstant inline builtinIfElse
3184: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3185: pushFromStack 1
3186: pushFromStack 5
3187: pushFromStack 4
3188: pushFromStack 3
3189: pushFromStack 12
3190: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
3191: pushFromStack 1
3192: dup by 1
3193: pushFromStack 1
3194: popMultipleBelowTop 2
3195: return
# Core:result:is:1:equals:then
3196: pushFromStack 1
3197: dup by 1
3198: pushConstant inline builtinTagGetValue
3199: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3200: pushFromStack 1
3201: pushFromStack 4
3202: pushFromStack 2
3203: call with 1 argument
3204: pushFromStack 0
3205: createList 1
3206: pushFromStack 0
3207: createTag Match
3208: popMultipleBelowTop 6
3209: return
3210: pushFromStack 1
3211: dup by 2
3212: pushConstant inline builtinTagHasValue
3213: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3214: pushFromStack 1
3215: pushFromStack 4
3216: pushFromStack 2
3217: call with 1 argument
3218: pushConstant inline builtinEquals
3219: pushConstant inline True
3220: pushFromStack 1
3221: pushFromStack 1
3222: pushFromStack 4
3223: pushFromStack 6
3224: call with 2 arguments
3225: pushFromStack 7
3226: createFunction with 0 arguments capturing 0 starting at ip-3196
3227: pushConstant inline builtinIfElse
3228: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3229: pushFromStack 1
3230: pushFromStack 5
3231: pushFromStack 4
3232: pushFromStack 3
3233: pushFromStack 12
3234: tailCall with 12 locals and 3 arguments
3235: pushFromStack 1
3236: dup by 2
3237: pushConstant inline builtinTagWithoutValue
3238: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3239: pushFromStack 1
3240: pushFromStack 4
3241: pushFromStack 2
3242: call with 1 argument
3243: pushConstant inline builtinEquals
3244: pushConstant inline Error
3245: pushFromStack 1
3246: pushFromStack 1
3247: pushFromStack 4
3248: pushFromStack 6
3249: call with 2 arguments
3250: pushFromStack 7
3251: createFunction with 0 arguments capturing 0 starting at ip-3210
3252: pushConstant inline builtinIfElse
3253: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3254: pushFromStack 1
3255: pushFromStack 5
3256: pushFromStack 4
3257: pushFromStack 3
3258: pushFromStack 12
3259: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
3260: pushFromStack 1
3261: dup by 2
3262: pushConstant inline builtinTypeOf
3263: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3264: pushFromStack 1
3265: pushFromStack 4
3266: pushFromStack 2
3267: call with 1 argument
3268: pushConstant inline builtinEquals
3269: pushConstant inline Tag
3270: pushFromStack 1
3271: pushFromStack 1
3272: pushFromStack 4
3273: pushFromStack 6
3274: call with 2 arguments
3275: pushFromStack 7
3276: createFunction with 0 arguments capturing 0 starting at ip-3235
3277: pushConstant inline builtinIfElse
3278: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3279: pushFromStack 1
3280: pushFromStack 5
3281: pushFromStack 4
3282: pushFromStack 3
3283: pushFromStack 12
3284: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
3285: pushFromStack 1
3286: dup by 3
3287: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
3288: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
3289: pushFromStack 1
3290: pushFromStack 1
3291: pushFromStack 5
3292: pushFromStack 2
3293: traceCallStarts (1 argument)
3294: pushConstant inline builtinTypeOf
3295: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
3296: pushFromStack 1
3297: pushFromStack 6
3298: pushFromStack 2
3299: call with 1 argument
3300: pushConstant inline builtinEquals
3301: pushConstant inline Function
3302: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
3303: pushFromStack 2
3304: pushFromStack 4
3305: pushFromStack 3
3306: pushFromStack 3
3307: call with 2 arguments
3308: pushFromStack 0
3309: dup by 1
3310: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
3311: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3312: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
3313: pushFromStack 2
3314: pushFromStack 2
3315: pushFromStack 5
3316: pushFromStack 3
3317: pushFromStack 15
3318: pushFromStack 4
3319: traceCallStarts (3 arguments)
3320: pushFromStack 1
3321: pushFromStack 4
3322: pushFromStack 2
3323: pushFromStack 14
3324: pushFromStack 6
3325: call with 3 arguments
3326: traceCallEnds without return value
3327: pushConstant inline builtinGetArgumentCount
3328: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
3329: pushFromStack 1
3330: pushFromStack 17
3331: pushFromStack 2
3332: call with 1 argument
3333: traceCallEnds without return value
3334: pushConstant inline 1
3335: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3336: pushFromStack 5
3337: drop
3338: pushFromStack 12
3339: pushFromStack 3
3340: pushFromStack 3
3341: pushFromStack 3
3342: tailCall with 20 locals and 2 arguments
# Core:result:map:17
3343: pushFromStack 2
3344: dup by 2
3345: pushFromStack 1
3346: dup by 1
3347: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3348: pushFromStack 0
3349: pushFromStack 4
3350: pushFromStack 4
3351: pushFromStack 2
3352: traceCallStarts (1 argument)
3353: pushFromStack 3
3354: pushFromStack 3
3355: pushFromStack 2
3356: call with 1 argument
3357: traceCallEnds without return value
3358: pushFromStack 0
3359: createTag Ok
3360: popMultipleBelowTop 5
3361: return
# Core:result:map
3362: pushFromStack 2
3363: dup by 5
3364: pushFromStack 1
3365: dup by 3
3366: pushFromStack 0
3367: dup by 4
3368: pushConstant <replaced address 0e5dcb874e6dfa57> Core:result:map:2
3369: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
3370: pushFromStack 1
3371: pushFromStack 1
3372: pushFromStack 6
3373: pushFromStack 2
3374: traceCallStarts (1 argument)
3375: pushConstant inline builtinTypeOf
3376: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3377: pushFromStack 1
3378: pushFromStack 7
3379: pushFromStack 2
3380: call with 1 argument
3381: pushConstant inline builtinEquals
3382: pushConstant inline Tag
3383: pushFromStack 1
3384: pushFromStack 1
3385: pushFromStack 4
3386: pushFromStack 6
3387: call with 2 arguments
3388: pushFromStack 10
3389: createFunction with 0 arguments capturing 0 starting at ip-3166
3390: pushConstant inline builtinIfElse
3391: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3392: pushFromStack 1
3393: pushFromStack 5
3394: pushFromStack 4
3395: pushFromStack 3
3396: pushFromStack 12
3397: call with 3 arguments
3398: pushFromStack 0
3399: dup by 1
3400: pushConstant inline builtinTagWithoutValue
3401: pushFromStack 0
3402: pushFromStack 2
3403: pushFromStack 12
3404: call with 1 argument
3405: pushConstant inline Match
3406: pushFromStack 10
3407: pushFromStack 2
3408: pushFromStack 2
3409: pushFromStack 15
3410: call with 2 arguments
3411: pushFromStack 4
3412: createFunction with 0 arguments capturing 0 starting at ip-3191
3413: pushFromStack 10
3414: createFunction with 0 arguments capturing 0 starting at ip-3260
3415: pushFromStack 10
3416: pushFromStack 5
3417: pushFromStack 4
3418: pushFromStack 3
3419: pushFromStack 21
3420: call with 3 arguments
3421: pushFromStack 8
3422: pushFromStack 1
3423: pushFromStack 20
3424: call with 1 argument
3425: pushFromStack 17
3426: pushFromStack 1
3427: pushFromStack 9
3428: pushFromStack 22
3429: call with 2 arguments
3430: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
3431: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
3432: pushFromStack 15
3433: pushFromStack 3
3434: pushFromStack 3
3435: pushFromStack 3
3436: pushFromStack 26
3437: call with 3 arguments
3438: pushFromStack 0
3439: dup by 1
3440: traceCallEnds without return value
3441: pushConstant <replaced address b1574ef59cb20f81> Core:result:map:4
3442: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3443: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
3444: pushFromStack 2
3445: pushFromStack 2
3446: pushFromStack 5
3447: pushFromStack 3
3448: pushFromStack 34
3449: pushFromStack 4
3450: traceCallStarts (3 arguments)
3451: pushFromStack 1
3452: pushFromStack 4
3453: pushFromStack 2
3454: pushFromStack 33
3455: pushFromStack 6
3456: call with 3 arguments
3457: traceCallEnds without return value
3458: pushConstant <replaced address 2571413c63a1bad9> Core:result:map:12
3459: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
3460: pushFromStack 1
3461: pushFromStack 1
3462: pushFromStack 36
3463: pushFromStack 2
3464: traceCallStarts (1 argument)
3465: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
3466: pushFromStack 31
3467: pushFromStack 36
3468: pushFromStack 2
3469: call with 1 argument
3470: pushConstant inline Function
3471: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3472: pushFromStack 31
3473: pushFromStack 3
3474: pushFromStack 3
3475: pushFromStack 3
3476: call with 2 arguments
3477: pushFromStack 0
3478: dup by 1
3479: pushFromStack 39
3480: createFunction with 0 arguments capturing 0 starting at ip-3285
3481: pushFromStack 0
3482: dup by 1
3483: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
3484: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
3485: pushFromStack 1
3486: pushFromStack 1
3487: pushFromStack 6
3488: pushFromStack 5
3489: pushFromStack 20
3490: pushFromStack 4
3491: traceCallStarts (3 arguments)
3492: pushFromStack 0
3493: pushFromStack 5
3494: pushFromStack 4
3495: pushFromStack 19
3496: pushFromStack 5
3497: call with 3 arguments
3498: pushFromStack 0
3499: dup by 1
3500: traceCallEnds without return value
3501: traceCallEnds without return value
3502: pushConstant <replaced address c86ac4aab1e5d003> Core:result:map:14
3503: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
3504: pushFromStack 1
3505: pushFromStack 17
3506: pushFromStack 4
3507: pushFromStack 3
3508: pushFromStack 49
3509: pushFromStack 4
3510: traceCallStarts (3 arguments)
3511: pushFromStack 16
3512: pushFromStack 3
3513: pushFromStack 2
3514: pushFromStack 48
3515: pushFromStack 5
3516: call with 3 arguments
3517: traceCallEnds without return value
3518: pushFromStack 7
3519: createFunction with 1 argument capturing 0 starting at ip-3343
3520: pushFromStack 0
3521: dup by 1
3522: pushConstant <replaced address f691b014dc4d5107> Core:result:map:18
3523: pushConstant <replaced address d785b7cfdf20724e> { 2 arguments (capturing nothing) → ip-2948 }
3524: pushFromStack 1
3525: pushFromStack 1
3526: pushFromStack 32
3527: pushFromStack 5
3528: pushFromStack 3
3529: traceTailCall (2 arguments)
3530: pushFromStack 19
3531: drop
3532: pushFromStack 4
3533: drop
3534: pushFromStack 0
3535: pushFromStack 31
3536: pushFromStack 4
3537: pushFromStack 4
3538: tailCall with 53 locals and 2 arguments
# Examples:fibonacci:recursive:0:0
3539: pushFromStack 2
3540: dup by 4
3541: pushFromStack 1
3542: dup by 1
3543: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
3544: pushFromStack 0
3545: pushFromStack 4
3546: pushFromStack 0
3547: pushFromStack 5
3548: pushFromStack 3
3549: traceTailCall (2 arguments)
3550: pushFromStack 3
3551: pushFromStack 0
3552: pushFromStack 4
3553: pushFromStack 3
3554: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0
3555: pushFromStack 3
3556: dup by 2
3557: pushFromStack 1
3558: dup by 1
3559: pushFromStack 2
3560: createFunction with 1 argument capturing 0 starting at ip-3539
3561: pushFromStack 0
3562: dup by 1
3563: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
3564: pushFromStack 0
3565: pushFromStack 7
3566: pushFromStack 3
3567: pushFromStack 7
3568: pushFromStack 3
3569: traceTailCall (2 arguments)
3570: pushFromStack 6
3571: pushFromStack 2
3572: pushFromStack 6
3573: pushFromStack 3
3574: tailCall with 7 locals and 2 arguments
# Examples:fibonacci:recursive
3575: pushFromStack 2
3576: dup by 1
3577: pushFromStack 1
3578: createFunction with 2 arguments capturing 0 starting at ip-3555
3579: pushFromStack 0
3580: dup by 3
3581: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
3582: pushFromStack 0
3583: pushFromStack 2
3584: pushFromStack 0
3585: pushFromStack 8
3586: pushFromStack 3
3587: traceTailCall (2 arguments)
3588: pushFromStack 1
3589: pushFromStack 0
3590: pushFromStack 7
3591: pushFromStack 3
3592: tailCall with 6 locals and 2 arguments
# Examples:fibonacci:compareTo
3593: pushFromStack 2
3594: dup by 2
3595: pushFromStack 1
3596: dup by 2
3597: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
3598: pushConstant <replaced address f7fc1c0fbd2eb7c2> { 2 arguments (capturing nothing) → ip-552 }
3599: pushFromStack 1
3600: pushFromStack 1
3601: pushFromStack 6
3602: pushFromStack 6
3603: pushFromStack 3
3604: traceTailCall (2 arguments)
3605: pushConstant inline builtinTypeOf
3606: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
3607: pushFromStack 1
3608: pushFromStack 7
3609: pushFromStack 2
3610: call with 1 argument
3611: pushConstant inline builtinEquals
3612: pushConstant inline Int
3613: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
3614: pushFromStack 2
3615: pushFromStack 4
3616: pushFromStack 3
3617: pushFromStack 3
3618: call with 2 arguments
3619: pushFromStack 0
3620: dup by 1
3621: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
3622: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3623: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
3624: pushFromStack 2
3625: pushFromStack 2
3626: pushFromStack 5
3627: pushFromStack 3
3628: pushFromStack 15
3629: pushFromStack 4
3630: traceCallStarts (3 arguments)
3631: pushFromStack 1
3632: pushFromStack 4
3633: pushFromStack 2
3634: pushFromStack 14
3635: pushFromStack 6
3636: call with 3 arguments
3637: traceCallEnds without return value
3638: pushFromStack 10
3639: pushFromStack 15
3640: pushFromStack 11
3641: call with 1 argument
3642: pushFromStack 8
3643: pushFromStack 1
3644: pushFromStack 9
3645: pushFromStack 9
3646: call with 2 arguments
3647: pushFromStack 0
3648: dup by 1
3649: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
3650: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
3651: pushFromStack 1
3652: pushFromStack 7
3653: pushFromStack 4
3654: pushFromStack 3
3655: pushFromStack 20
3656: pushFromStack 4
3657: traceCallStarts (3 arguments)
3658: pushFromStack 6
3659: pushFromStack 3
3660: pushFromStack 2
3661: pushFromStack 19
3662: pushFromStack 5
3663: call with 3 arguments
3664: traceCallEnds without return value
3665: pushConstant inline builtinIntCompareTo
3666: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
3667: pushFromStack 7
3668: drop
3669: pushFromStack 2
3670: drop
3671: pushFromStack 1
3672: pushFromStack 23
3673: pushFromStack 23
3674: pushFromStack 3
3675: tailCall with 23 locals and 2 arguments
# Examples:fibonacci:isLessThan
3676: pushFromStack 2
3677: dup by 3
3678: pushFromStack 1
3679: dup by 3
3680: pushConstant <replaced address 7ae5b371ff139a5d> Examples:fibonacci:isLessThan:9
3681: pushConstant <replaced address 26d9ca4577e51bb7> { 2 arguments (capturing nothing) → ip-3593 }
3682: pushFromStack 1
3683: pushFromStack 1
3684: pushFromStack 6
3685: pushFromStack 6
3686: pushFromStack 3
3687: traceCallStarts (2 arguments)
3688: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
3689: pushConstant <replaced address f7fc1c0fbd2eb7c2> { 2 arguments (capturing nothing) → ip-552 }
3690: pushFromStack 1
3691: pushFromStack 1
3692: pushFromStack 8
3693: pushFromStack 8
3694: pushFromStack 3
3695: traceCallStarts (2 arguments)
3696: pushConstant inline builtinTypeOf
3697: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
3698: pushFromStack 1
3699: pushFromStack 9
3700: pushFromStack 2
3701: call with 1 argument
3702: pushConstant inline builtinEquals
3703: pushConstant inline Int
3704: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
3705: pushFromStack 2
3706: pushFromStack 4
3707: pushFromStack 3
3708: pushFromStack 3
3709: call with 2 arguments
3710: pushFromStack 0
3711: dup by 1
3712: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
3713: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3714: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
3715: pushFromStack 2
3716: pushFromStack 2
3717: pushFromStack 5
3718: pushFromStack 3
3719: pushFromStack 15
3720: pushFromStack 4
3721: traceCallStarts (3 arguments)
3722: pushFromStack 1
3723: pushFromStack 4
3724: pushFromStack 2
3725: pushFromStack 14
3726: pushFromStack 6
3727: call with 3 arguments
3728: traceCallEnds without return value
3729: pushFromStack 10
3730: pushFromStack 17
3731: pushFromStack 11
3732: call with 1 argument
3733: pushFromStack 8
3734: pushFromStack 1
3735: pushFromStack 9
3736: pushFromStack 9
3737: call with 2 arguments
3738: pushFromStack 0
3739: dup by 1
3740: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
3741: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
3742: pushFromStack 1
3743: pushFromStack 7
3744: pushFromStack 4
3745: pushFromStack 3
3746: pushFromStack 20
3747: pushFromStack 4
3748: traceCallStarts (3 arguments)
3749: pushFromStack 6
3750: pushFromStack 3
3751: pushFromStack 2
3752: pushFromStack 19
3753: pushFromStack 5
3754: call with 3 arguments
3755: traceCallEnds without return value
3756: pushConstant inline builtinIntCompareTo
3757: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
3758: pushFromStack 1
3759: pushFromStack 25
3760: pushFromStack 25
3761: pushFromStack 3
3762: call with 2 arguments
3763: traceCallEnds without return value
3764: traceCallEnds without return value
3765: pushConstant inline Less
3766: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3767: pushFromStack 10
3768: drop
3769: pushFromStack 5
3770: drop
3771: pushFromStack 17
3772: pushFromStack 3
3773: pushFromStack 3
3774: pushFromStack 3
3775: tailCall with 28 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:10
3776: pushFromStack 1
3777: dup by 1
3778: pushFromStack 1
3779: popMultipleBelowTop 2
3780: return
# Examples:fibonacci:fibonacci:2:11
3781: pushFromStack 2
3782: dup by 4
3783: pushFromStack 1
3784: dup by 5
3785: pushConstant <replaced address 3f287b94ceaa3f9a> Examples:fibonacci:fibonacci:2:11:9
3786: pushConstant <replaced address 877d667bc6df9870> { 2 arguments (capturing nothing) → ip-674 }
3787: pushConstant inline 1
3788: pushFromStack 2
3789: pushFromStack 2
3790: pushFromStack 6
3791: pushFromStack 3
3792: pushFromStack 3
3793: traceCallStarts (2 arguments)
3794: pushConstant inline builtinTypeOf
3795: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
3796: pushFromStack 1
3797: pushFromStack 7
3798: pushFromStack 2
3799: call with 1 argument
3800: pushConstant inline builtinEquals
3801: pushConstant inline Int
3802: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
3803: pushFromStack 2
3804: pushFromStack 4
3805: pushFromStack 3
3806: pushFromStack 3
3807: call with 2 arguments
3808: pushFromStack 0
3809: dup by 3
3810: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
3811: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3812: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
3813: pushFromStack 2
3814: pushFromStack 2
3815: pushFromStack 5
3816: pushFromStack 3
3817: pushFromStack 16
3818: pushFromStack 4
3819: traceCallStarts (3 arguments)
3820: pushFromStack 1
3821: pushFromStack 4
3822: pushFromStack 2
3823: pushFromStack 15
3824: pushFromStack 6
3825: call with 3 arguments
3826: traceCallEnds without return value
3827: pushConstant inline builtinIntSubtract
3828: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
3829: pushFromStack 1
3830: pushFromStack 18
3831: pushFromStack 15
3832: pushFromStack 3
3833: call with 2 arguments
3834: pushFromStack 0
3835: dup by 1
3836: traceCallEnds without return value
3837: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
3838: pushFromStack 0
3839: pushFromStack 21
3840: pushFromStack 3
3841: pushFromStack 2
3842: traceCallStarts (1 argument)
3843: pushFromStack 20
3844: pushFromStack 2
3845: pushFromStack 2
3846: call with 1 argument
3847: pushFromStack 0
3848: dup by 1
3849: traceCallEnds without return value
3850: pushConstant <replaced address d5df9e6b35678bb5> Examples:fibonacci:fibonacci:2:11:26
3851: pushConstant inline 2
3852: pushFromStack 1
3853: pushFromStack 20
3854: pushFromStack 24
3855: pushFromStack 3
3856: pushFromStack 3
3857: traceCallStarts (2 arguments)
3858: pushFromStack 10
3859: pushFromStack 10
3860: pushFromStack 13
3861: pushFromStack 11
3862: pushFromStack 5
3863: pushFromStack 4
3864: traceCallStarts (3 arguments)
3865: pushFromStack 9
3866: pushFromStack 12
3867: pushFromStack 10
3868: pushFromStack 4
3869: pushFromStack 14
3870: call with 3 arguments
3871: traceCallEnds without return value
3872: pushFromStack 7
3873: pushFromStack 24
3874: pushFromStack 3
3875: pushFromStack 9
3876: call with 2 arguments
3877: pushFromStack 0
3878: dup by 1
3879: traceCallEnds without return value
3880: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
3881: pushFromStack 0
3882: pushFromStack 27
3883: pushFromStack 3
3884: pushFromStack 2
3885: traceCallStarts (1 argument)
3886: pushFromStack 26
3887: pushFromStack 2
3888: pushFromStack 2
3889: call with 1 argument
3890: pushFromStack 0
3891: dup by 1
3892: traceCallEnds without return value
3893: pushConstant <replaced address becc28b62033cb33> Examples:fibonacci:fibonacci:2:11:28
3894: pushConstant <replaced address ffea9a3777280bfd> { 2 arguments (capturing nothing) → ip-475 }
3895: pushFromStack 1
3896: pushFromStack 1
3897: pushFromStack 10
3898: pushFromStack 5
3899: pushFromStack 3
3900: traceTailCall (2 arguments)
3901: pushFromStack 13
3902: drop
3903: pushFromStack 5
3904: drop
3905: pushFromStack 0
3906: pushFromStack 9
3907: pushFromStack 4
3908: pushFromStack 4
3909: tailCall with 30 locals and 2 arguments
# Examples:fibonacci:fibonacci:2
3910: pushFromStack 1
3911: dup by 6
3912: pushConstant <replaced address 664bab760ff04a9c> Examples:fibonacci:fibonacci:2:9
3913: pushConstant <replaced address 62b461c243ad3766> { 2 arguments (capturing nothing) → ip-3676 }
3914: pushConstant inline 2
3915: pushFromStack 2
3916: pushFromStack 2
3917: pushFromStack 6
3918: pushFromStack 3
3919: pushFromStack 3
3920: traceCallStarts (2 arguments)
3921: pushConstant <replaced address 7ae5b371ff139a5d> Examples:fibonacci:isLessThan:9
3922: pushConstant <replaced address 26d9ca4577e51bb7> { 2 arguments (capturing nothing) → ip-3593 }
3923: pushFromStack 1
3924: pushFromStack 1
3925: pushFromStack 8
3926: pushFromStack 5
3927: pushFromStack 3
3928: traceCallStarts (2 arguments)
3929: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
3930: pushConstant <replaced address f7fc1c0fbd2eb7c2> { 2 arguments (capturing nothing) → ip-552 }
3931: pushFromStack 1
3932: pushFromStack 1
3933: pushFromStack 10
3934: pushFromStack 7
3935: pushFromStack 3
3936: traceCallStarts (2 arguments)
3937: pushConstant inline builtinTypeOf
3938: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
3939: pushFromStack 1
3940: pushFromStack 11
3941: pushFromStack 2
3942: call with 1 argument
3943: pushConstant inline builtinEquals
3944: pushConstant inline Int
3945: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
3946: pushFromStack 2
3947: pushFromStack 4
3948: pushFromStack 3
3949: pushFromStack 3
3950: call with 2 arguments
3951: pushFromStack 0
3952: dup by 1
3953: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
3954: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3955: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
3956: pushFromStack 2
3957: pushFromStack 2
3958: pushFromStack 5
3959: pushFromStack 3
3960: pushFromStack 15
3961: pushFromStack 4
3962: traceCallStarts (3 arguments)
3963: pushFromStack 1
3964: pushFromStack 4
3965: pushFromStack 2
3966: pushFromStack 14
3967: pushFromStack 6
3968: call with 3 arguments
3969: traceCallEnds without return value
3970: pushConstant inline builtinIntCompareTo
3971: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
3972: pushFromStack 1
3973: pushFromStack 22
3974: pushFromStack 19
3975: pushFromStack 3
3976: call with 2 arguments
3977: traceCallEnds without return value
3978: traceCallEnds without return value
3979: pushConstant inline Less
3980: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3981: pushFromStack 12
3982: pushFromStack 3
3983: pushFromStack 3
3984: pushFromStack 3
3985: call with 2 arguments
3986: pushFromStack 0
3987: dup by 1
3988: traceCallEnds without return value
3989: pushFromStack 25
3990: createFunction with 0 arguments capturing 0 starting at ip-3776
3991: pushFromStack 0
3992: dup by 1
3993: pushFromStack 28
3994: pushFromStack 2
3995: createFunction with 0 arguments capturing 1, 0 starting at ip-3781
3996: pushFromStack 0
3997: dup by 1
3998: pushConstant <replaced address 71d566509a8a2add> Examples:fibonacci:fibonacci:2:12
3999: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
4000: pushFromStack 1
4001: pushFromStack 1
4002: pushFromStack 9
4003: pushFromStack 8
4004: pushFromStack 6
4005: pushFromStack 4
4006: traceTailCall (3 arguments)
4007: pushFromStack 13
4008: drop
4009: pushFromStack 0
4010: pushFromStack 8
4011: pushFromStack 7
4012: pushFromStack 5
4013: pushFromStack 5
4014: tailCall with 34 locals and 3 arguments
# Examples:fibonacci:recursive:0:0
4015: pushFromStack 2
4016: dup by 4
4017: pushFromStack 1
4018: dup by 1
4019: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4020: pushFromStack 0
4021: pushFromStack 4
4022: pushFromStack 0
4023: pushFromStack 5
4024: pushFromStack 3
4025: traceTailCall (2 arguments)
4026: pushFromStack 3
4027: pushFromStack 0
4028: pushFromStack 4
4029: pushFromStack 3
4030: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0
4031: pushFromStack 1
4032: dup by 1
4033: pushFromStack 2
4034: createFunction with 1 argument capturing 0 starting at ip-4015
4035: pushFromStack 0
4036: dup by 1
4037: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4038: pushConstant <replaced address c862a33450840be4> { 2 arguments (capturing nothing) → ip-3910 }
4039: pushFromStack 1
4040: pushFromStack 1
4041: pushFromStack 4
4042: pushFromStack 8
4043: pushFromStack 3
4044: traceTailCall (2 arguments)
4045: pushFromStack 0
4046: pushFromStack 3
4047: pushFromStack 7
4048: pushFromStack 4
4049: tailCall with 7 locals and 2 arguments
# Examples:fibonacci:fibonacci
4050: pushFromStack 1
4051: dup by 2
4052: pushConstant <replaced address 1315f9b01ba30c9f> Examples:fibonacci:fibonacci:3
4053: pushConstant <replaced address f688eda336b6e049> { 2 arguments (capturing nothing) → ip-3575 }
4054: pushConstant <replaced address c862a33450840be4> { 2 arguments (capturing nothing) → ip-3910 }
4055: pushFromStack 2
4056: pushFromStack 2
4057: pushFromStack 6
4058: pushFromStack 3
4059: pushFromStack 3
4060: traceCallStarts (2 arguments)
4061: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
4062: pushConstant <replaced address 1cc1fbe0eb59b9b1> { 2 arguments (capturing nothing) → ip-4031 }
4063: pushFromStack 1
4064: pushFromStack 1
4065: pushFromStack 0
4066: pushFromStack 9
4067: pushFromStack 3
4068: traceCallStarts (2 arguments)
4069: pushFromStack 0
4070: pushFromStack 0
4071: pushFromStack 8
4072: pushFromStack 4
4073: call with 2 arguments
4074: traceCallEnds without return value
4075: traceCallEnds without return value
4076: pushFromStack 0
4077: popMultipleBelowTop 8
4078: return
# Examples:fibonacci:23:6:14
4079: pushFromStack 1
4080: dup by 3
4081: pushConstant <replaced address bd82eea49ada30b1> Examples:fibonacci:23:6:14:2
4082: pushConstant <replaced address 5974d35cd2fe97ca> { 1 argument (capturing nothing) → ip-4050 }
4083: pushFromStack 1
4084: pushFromStack 1
4085: pushFromStack 5
4086: pushFromStack 2
4087: traceCallStarts (1 argument)
4088: pushConstant <replaced address 1315f9b01ba30c9f> Examples:fibonacci:fibonacci:3
4089: pushConstant <replaced address f688eda336b6e049> { 2 arguments (capturing nothing) → ip-3575 }
4090: pushConstant <replaced address c862a33450840be4> { 2 arguments (capturing nothing) → ip-3910 }
4091: pushFromStack 2
4092: pushFromStack 2
4093: pushFromStack 8
4094: pushFromStack 3
4095: pushFromStack 3
4096: traceCallStarts (2 arguments)
4097: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
4098: pushConstant <replaced address 1cc1fbe0eb59b9b1> { 2 arguments (capturing nothing) → ip-4031 }
4099: pushFromStack 1
4100: pushFromStack 1
4101: pushFromStack 0
4102: pushFromStack 11
4103: pushFromStack 3
4104: traceCallStarts (2 arguments)
4105: pushFromStack 0
4106: pushFromStack 0
4107: pushFromStack 10
4108: pushFromStack 4
4109: call with 2 arguments
4110: traceCallEnds without return value
4111: traceCallEnds without return value
4112: traceCallEnds without return value
4113: pushConstant inline builtinToDebugText
4114: pushConstant <replaced address 8383f19ea0a5e146> Builtins::toDebugText:5
4115: pushFromStack 1
4116: pushFromStack 3
4117: pushFromStack 2
4118: tailCall with 12 locals and 1 argument
# Examples:fibonacci:23:6:case-0:didNotMatch
4119: pushConstant <replaced address ea9a293534a31de4> "Usage: `cargo run -- run fibonacci.candy -- <number>`"
4120: popMultipleBelowTop 1
4121: return
# Examples:fibonacci:23:6:equals:then
4122: pushFromStack 1
4123: dup by 1
4124: pushConstant inline builtinListGet
4125: pushConstant inline 0
4126: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
4127: pushFromStack 2
4128: pushFromStack 5
4129: pushFromStack 3
4130: pushFromStack 3
4131: call with 2 arguments
4132: pushFromStack 0
4133: createList 1
4134: pushFromStack 0
4135: createTag Match
4136: popMultipleBelowTop 7
4137: return
4138: pushFromStack 1
4139: dup by 2
4140: pushConstant inline builtinListLength
4141: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
4142: pushFromStack 1
4143: pushFromStack 4
4144: pushFromStack 2
4145: call with 1 argument
4146: pushConstant inline builtinEquals
4147: pushConstant inline 1
4148: pushFromStack 1
4149: pushFromStack 1
4150: pushFromStack 4
4151: pushFromStack 6
4152: call with 2 arguments
4153: pushFromStack 7
4154: createFunction with 0 arguments capturing 0 starting at ip-4122
4155: pushConstant inline builtinIfElse
4156: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4157: pushFromStack 1
4158: pushFromStack 5
4159: pushFromStack 4
4160: pushFromStack 3
4161: pushFromStack 12
4162: tailCall with 12 locals and 3 arguments
# Examples:fibonacci:23:6:case-0:matched
4163: pushFromStack 1
4164: dup by 1
4165: pushConstant inline builtinTagGetValue
4166: pushConstant <replaced address cdbcb70275304920> Examples:fibonacci:23:6:n
4167: pushFromStack 1
4168: pushFromStack 4
4169: pushFromStack 2
4170: call with 1 argument
4171: pushConstant inline builtinListGet
4172: pushConstant inline 0
4173: pushFromStack 1
4174: pushFromStack 3
4175: pushFromStack 2
4176: pushFromStack 6
4177: call with 2 arguments
4178: pushFromStack 0
4179: dup by 2
4180: pushConstant <replaced address df0fcdbc9cad1521> Examples:fibonacci:23:6:7
4181: pushConstant <replaced address 328a0a2dafb24069> { 1 argument (capturing nothing) → ip-629 }
4182: pushFromStack 1
4183: pushFromStack 1
4184: pushFromStack 4
4185: pushFromStack 2
4186: traceCallStarts (1 argument)
4187: pushConstant inline builtinTypeOf
4188: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
4189: pushFromStack 1
4190: pushFromStack 5
4191: pushFromStack 2
4192: call with 1 argument
4193: pushConstant inline builtinEquals
4194: pushConstant inline Text
4195: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
4196: pushFromStack 2
4197: pushFromStack 4
4198: pushFromStack 3
4199: pushFromStack 3
4200: call with 2 arguments
4201: pushFromStack 0
4202: dup by 1
4203: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
4204: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4205: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
4206: pushFromStack 2
4207: pushFromStack 2
4208: pushFromStack 5
4209: pushFromStack 3
4210: pushFromStack 15
4211: pushFromStack 4
4212: traceCallStarts (3 arguments)
4213: pushFromStack 1
4214: pushFromStack 4
4215: pushFromStack 2
4216: pushFromStack 14
4217: pushFromStack 6
4218: call with 3 arguments
4219: traceCallEnds without return value
4220: pushConstant inline builtinIntParse
4221: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
4222: pushFromStack 1
4223: pushFromStack 16
4224: pushFromStack 2
4225: call with 1 argument
4226: pushFromStack 0
4227: dup by 1
4228: traceCallEnds without return value
4229: pushConstant <replaced address 5329c003639cc079> Examples:fibonacci:23:6:15
4230: pushConstant <replaced address 5953f7248ba564f0> { 2 arguments (capturing nothing) → ip-3362 }
4231: pushConstant <replaced address 64fe8e375d98780b> { 1 argument (capturing nothing) → ip-4079 }
4232: pushFromStack 2
4233: pushFromStack 2
4234: pushFromStack 5
4235: pushFromStack 3
4236: pushFromStack 3
4237: traceCallStarts (2 arguments)
4238: pushFromStack 1
4239: pushFromStack 4
4240: pushFromStack 2
4241: pushFromStack 5
4242: call with 2 arguments
4243: pushFromStack 0
4244: dup by 1
4245: traceCallEnds without return value
4246: pushConstant <replaced address 75c6f093036a613c> Examples:fibonacci:23:6:22
4247: pushConstant <replaced address af489c6c7cb5764e> { 1 argument (capturing nothing) → ip-2150 }
4248: pushFromStack 1
4249: pushFromStack 1
4250: pushFromStack 4
4251: pushFromStack 2
4252: traceTailCall (1 argument)
4253: pushFromStack 9
4254: drop
4255: pushFromStack 0
4256: pushFromStack 3
4257: pushFromStack 3
4258: tailCall with 30 locals and 1 argument
# Examples:fibonacci:23
4259: pushFromStack 1
4260: dup by 6
4261: pushConstant <replaced address 421b7208a9f93281> Examples:fibonacci:23:5
4262: pushConstant <replaced address 0a03aa928c1cc741> { 2 arguments (capturing nothing) → ip-751 }
4263: pushConstant inline Arguments
4264: pushFromStack 2
4265: pushFromStack 2
4266: pushFromStack 6
4267: pushFromStack 3
4268: pushFromStack 3
4269: traceCallStarts (2 arguments)
4270: pushConstant inline builtinTypeOf
4271: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
4272: pushFromStack 1
4273: pushFromStack 7
4274: pushFromStack 2
4275: call with 1 argument
4276: pushConstant inline builtinEquals
4277: pushConstant inline Struct
4278: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
4279: pushFromStack 2
4280: pushFromStack 4
4281: pushFromStack 3
4282: pushFromStack 3
4283: call with 2 arguments
4284: pushFromStack 0
4285: dup by 3
4286: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
4287: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4288: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
4289: pushFromStack 2
4290: pushFromStack 2
4291: pushFromStack 5
4292: pushFromStack 3
4293: pushFromStack 16
4294: pushFromStack 4
4295: traceCallStarts (3 arguments)
4296: pushFromStack 1
4297: pushFromStack 4
4298: pushFromStack 2
4299: pushFromStack 15
4300: pushFromStack 6
4301: call with 3 arguments
4302: traceCallEnds without return value
4303: pushConstant inline builtinStructHasKey
4304: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
4305: pushFromStack 1
4306: pushFromStack 18
4307: pushFromStack 15
4308: pushFromStack 3
4309: call with 2 arguments
4310: pushFromStack 0
4311: dup by 1
4312: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
4313: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
4314: pushFromStack 1
4315: pushFromStack 8
4316: pushFromStack 4
4317: pushFromStack 3
4318: pushFromStack 22
4319: pushFromStack 4
4320: traceCallStarts (3 arguments)
4321: pushFromStack 7
4322: pushFromStack 3
4323: pushFromStack 2
4324: pushFromStack 21
4325: pushFromStack 5
4326: call with 3 arguments
4327: traceCallEnds without return value
4328: pushConstant inline builtinStructGet
4329: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
4330: pushFromStack 1
4331: pushFromStack 24
4332: pushFromStack 21
4333: pushFromStack 3
4334: call with 2 arguments
4335: pushFromStack 0
4336: dup by 1
4337: traceCallEnds without return value
4338: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
4339: pushFromStack 20
4340: pushFromStack 2
4341: pushFromStack 2
4342: call with 1 argument
4343: pushConstant inline List
4344: pushFromStack 19
4345: pushFromStack 1
4346: pushFromStack 3
4347: pushFromStack 5
4348: call with 2 arguments
4349: pushFromStack 4
4350: createFunction with 0 arguments capturing 0 starting at ip-4138
4351: pushConstant inline builtinIfElse
4352: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4353: pushFromStack 1
4354: pushFromStack 5
4355: pushFromStack 4
4356: pushFromStack 3
4357: pushFromStack 11
4358: call with 3 arguments
4359: pushFromStack 0
4360: dup by 1
4361: pushConstant inline builtinTagWithoutValue
4362: pushFromStack 0
4363: pushFromStack 2
4364: pushFromStack 11
4365: call with 1 argument
4366: pushConstant inline Match
4367: pushFromStack 28
4368: pushFromStack 2
4369: pushFromStack 2
4370: pushFromStack 14
4371: call with 2 arguments
4372: pushFromStack 4
4373: createFunction with 0 arguments capturing 0 starting at ip-4163
4374: pushConstant <replaced address 7a64cb6bd64dda25> { 0 arguments (capturing nothing) → ip-4119 }
4375: pushFromStack 9
4376: pushFromStack 4
4377: pushFromStack 3
4378: pushFromStack 3
4379: pushFromStack 19
4380: call with 3 arguments
4381: pushFromStack 0
4382: dup by 1
4383: pushConstant <replaced address 64b8a29849c6d344> Examples:fibonacci:23:12
4384: pushConstant inline Stdout
4385: pushFromStack 1
4386: pushFromStack 41
4387: pushFromStack 45
4388: pushFromStack 3
4389: pushFromStack 3
4390: traceCallStarts (2 arguments)
4391: pushFromStack 31
4392: pushFromStack 31
4393: pushFromStack 34
4394: pushFromStack 32
4395: pushFromStack 5
4396: pushFromStack 4
4397: traceCallStarts (3 arguments)
4398: pushFromStack 30
4399: pushFromStack 33
4400: pushFromStack 31
4401: pushFromStack 4
4402: pushFromStack 35
4403: call with 3 arguments
4404: traceCallEnds without return value
4405: pushFromStack 28
4406: pushFromStack 45
4407: pushFromStack 3
4408: pushFromStack 30
4409: call with 2 arguments
4410: pushFromStack 0
4411: dup by 1
4412: pushFromStack 26
4413: pushFromStack 33
4414: pushFromStack 2
4415: pushFromStack 28
4416: pushFromStack 7
4417: pushFromStack 4
4418: traceCallStarts (3 arguments)
4419: pushFromStack 32
4420: pushFromStack 1
4421: pushFromStack 27
4422: pushFromStack 6
4423: pushFromStack 30
4424: call with 3 arguments
4425: traceCallEnds without return value
4426: pushFromStack 24
4427: pushFromStack 47
4428: pushFromStack 5
4429: pushFromStack 26
4430: call with 2 arguments
4431: pushFromStack 0
4432: dup by 1
4433: traceCallEnds without return value
4434: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
4435: pushFromStack 0
4436: pushFromStack 2
4437: pushFromStack 9
4438: pushFromStack 2
4439: traceTailCall (1 argument)
4440: pushFromStack 33
4441: drop
4442: pushFromStack 27
4443: drop
4444: pushFromStack 4
4445: drop
4446: pushFromStack 2
4447: drop
4448: pushFromStack 1
4449: pushFromStack 8
4450: pushFromStack 2
4451: tailCall with 49 locals and 1 argument
# Examples:fibonacci:
4452: pushConstant <replaced address 759430442e78094f> { 1 argument (capturing nothing) → ip-4259 }
4453: popMultipleBelowTop 1
4454: return
