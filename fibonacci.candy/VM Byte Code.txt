# VM Byte Code for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constant heap
<replaced address 017970d57aa05a94>: Core:result:mapOr:2
<replaced address 041596422ce35135>: { 0 arguments (capturing nothing) → ip-2407 }
<replaced address 05251864681a3500>: Builtins::typeOf:5
<replaced address 055673228b46d5b7>: Core:result:getValue:2
<replaced address 056aa7001fbe6a6f>: "`tag | typeIs Tag` was not satisfied"
<replaced address 05cf6ed3a3e1ef22>: "NotUtf8"
<replaced address 05e45b91c25d1055>: Core:result:flatMap:2
<replaced address 05f0bd0262d94431>: { 3 arguments (capturing nothing) → ip-4753 }
<replaced address 0643ee59211ac3f8>: { 0 arguments (capturing nothing) → ip-862 }
<replaced address 06485537fe8b7c51>: { 0 arguments (capturing nothing) → ip-6795 }
<replaced address 07c1052bec280409>: "`then | typeIs Function` was not satisfied"
<replaced address 0a7bac382389bce1>: "ReadToEnd"
<replaced address 0cc587e4feaafef0>: { 0 arguments (capturing nothing) → ip-6774 }
<replaced address 0d4569ee47d3c0f2>: (,)
<replaced address 0e5dcb874e6dfa57>: Core:result:map:2
<replaced address 0f59d2d5f5f1d623>: Core:result:mapOrElse:4
<replaced address 0fea7d5fa5afcc30>: Builtins::typeIs:25
<replaced address 104d462a8ceaa3b5>: { 0 arguments (capturing nothing) → ip-8679 }
<replaced address 1076a7c75d895c72>: "NotAnInteger"
<replaced address 1105ebe7e9d78c83>: { 0 arguments (capturing nothing) → ip-8689 }
<replaced address 13077cf4fbb4e55a>: Builtins::tagGetValue:5
<replaced address 1315f9b01ba30c9f>: Examples:fibonacci:fibonacci:3
<replaced address 13bae94f69b93dec>: Builtins::ifElse:11
<replaced address 13bbc38331a2c1a7>: Builtins::intSubtract:18
<replaced address 161fa8b20ca41330>: { 0 arguments (capturing nothing) → ip-1846 }
<replaced address 1620eaa8950d6c6e>: { 0 arguments (capturing nothing) → ip-112 }
<replaced address 18dc4adab2c8e8df>: "`struct | ✨.structHasKey key` was not satisfied"
<replaced address 19beba0e7e49ddcc>: Match ((,))
<replaced address 1c69e8d7a07a9639>: Core:result:getValue:12
<replaced address 1f44a429f4531e2d>: Builtins::ifElse:14
<replaced address 1f92019f89733a43>: Builtins::structGet:12
<replaced address 216d199efe6cdff8>: Builtins::intAdd:18
<replaced address 21f03b3ca28e0378>: "You called a tag that already has a value."
<replaced address 225e43665aeed085>: { 0 arguments (capturing nothing) → ip-3959 }
<replaced address 231d32f461ea7789>: { 0 arguments (capturing nothing) → ip-7523 }
<replaced address 2571413c63a1bad9>: Core:result:map:12
<replaced address 25fa21146fc4092a>: { 0 arguments (capturing nothing) → ip-2372 }
<replaced address 266d488b0b2596a5>: Core:result:mapOrElse:2
<replaced address 2749496cbbd972e7>: "`b | typeIs Int` was not satisfied"
<replaced address 28d1665f17c38934>: { 0 arguments (capturing nothing) → ip-9762 }
<replaced address 29f9db9855e50da6>: "You called a function that expects "
<replaced address 2a8be7103eabae0e>: "Ok"
<replaced address 2ace5f047eecfe6e>: Builtins::ifElse:1
<replaced address 2cc529e2abd4637b>: " arguments with 1 arguments."
<replaced address 2db459441af47a3a>: Builtins::intParse:11
<replaced address 2ded061b072e15be>: { 0 arguments (capturing nothing) → ip-0 }
<replaced address 318842cdd7cea1c4>: { 0 arguments (capturing nothing) → ip-242 }
<replaced address 33b9bfcd210d73a2>: { 0 arguments (capturing nothing) → ip-5084 }
<replaced address 33eb9d1ec067367e>: { 1 argument (capturing nothing) → ip-9462 }
<replaced address 35219c8edbd127ed>: { 0 arguments (capturing nothing) → ip-1215 }
<replaced address 369890defb850b20>: { 0 arguments (capturing nothing) → ip-7142 }
<replaced address 36eebe9168aef0b0>: "The `reason` must be a text."
<replaced address 3c5957eb057b9937>: { 0 arguments (capturing nothing) → ip-221 }
<replaced address 3d80be4020595727>: Core:result:mapOrElse:24
<replaced address 3e7ee2443ed19b48>: { 0 arguments (capturing nothing) → ip-2414 }
<replaced address 3eca0e872d043602>: Builtins::typeIs:19
<replaced address 3f1dcd30453d2689>: "`subtrahend | typeIs Int` was not satisfied"
<replaced address 3f287b94ceaa3f9a>: Examples:fibonacci:fibonacci:2:11:9
<replaced address 3f4197b5df094e06>: { 0 arguments (capturing nothing) → ip-5928 }
<replaced address 401a561af8e6f5be>: { 2 arguments (capturing nothing) → ip-1364 }
<replaced address 40b1a13a1079c664>: { 0 arguments (capturing nothing) → ip-6802 }
<replaced address 41e70e1c83094f2c>: Builtins::tagGetValue:11
<replaced address 41fcadf3280286e7>: Builtins::intCompareTo:18
<replaced address 421b7208a9f93281>: Examples:fibonacci:23:5
<replaced address 422f322f2940db06>: Builtins::structGet:21
<replaced address 4302703a6cd3fa75>: Builtins::getArgumentCount:5
<replaced address 43fc308333ab851f>: { 3 arguments (capturing nothing) → ip-3423 }
<replaced address 440a4a2e9e3a80bb>: Builtins::intAdd:5
<replaced address 4501bdc6a4cb2f7e>: { 0 arguments (capturing nothing) → ip-7488 }
<replaced address 4672d383c7509a9f>: "`then | getArgumentCount | equals 0` was not satisfied"
<replaced address 476c77b2172884e8>: Core:result:mapOr:14
<replaced address 489cfa79756bbb84>: { 0 arguments (capturing nothing) → ip-7474 }
<replaced address 4977ff9b06a0fe0d>: " arguments with 2 arguments."
<replaced address 4ab6922c9ed8edc8>: { 0 arguments (capturing nothing) → ip-8686 }
<replaced address 4ac325cdf2f66a34>: { 0 arguments (capturing nothing) → ip-1314 }
<replaced address 4b6f37e9fbc5d696>: { 0 arguments (capturing nothing) → ip-8696 }
<replaced address 4c347148acd03bd0>: { 0 arguments (capturing nothing) → ip-1494 }
<replaced address 4d094d47213a5655>: "Equal"
<replaced address 4e250f8543910bba>: Builtins::intSubtract:11
<replaced address 4eaaa90b93950b2c>: { 1 argument (capturing nothing) → ip-140 }
<replaced address 50912176953f2156>: { 0 arguments (capturing nothing) → ip-4408 }
<replaced address 51f524ae63c4af0b>: "Tag"
<replaced address 5329c003639cc079>: Examples:fibonacci:23:6:15
<replaced address 549433f5358d17a9>: Core:result:mapOrElse:22
<replaced address 5503399cb31f4f37>: { 2 arguments (capturing nothing) → ip-905 }
<replaced address 568420a2a5125080>: "GetNextRequest"
<replaced address 56cefe855ac72448>: "`function.is1 okMapper` was not satisfied"
<replaced address 59fb4da19b618456>: Builtins::structGet:5
<replaced address 5c93ea6ba248e40c>: Builtins::intParse:5
<replaced address 5cc78f686cdd1a98>: { 0 arguments (capturing nothing) → ip-3966 }
<replaced address 5ce20169ff1b81ad>: Core:result:mapOrElse:26:5
<replaced address 5d867ef673d8c19c>: { 0 arguments (capturing nothing) → ip-7530 }
<replaced address 5daeb472a61ff7f8>: "False"
<replaced address 5e7fed672c5c456a>: Core:result:mapOr:4
<replaced address 611c12d3de9f3c0b>: { 0 arguments (capturing nothing) → ip-2393 }
<replaced address 614077b0f92cd7f0>: "Struct"
<replaced address 62976e02dbc3d797>: { 0 arguments (capturing nothing) → ip-5949 }
<replaced address 642c742827aec9ac>: "File"
<replaced address 64b8a29849c6d344>: Examples:fibonacci:23:12
<replaced address 65869b7b7c4defee>: "`a | typeIs Int` was not satisfied"
<replaced address 664bab760ff04a9c>: Examples:fibonacci:fibonacci:2:9
<replaced address 6732a87eefdda5c6>: "Nothing"
<replaced address 68579413a185b90f>: { 0 arguments (capturing nothing) → ip-7509 }
<replaced address 6ac24dff13e30e79>: Core:result:mapOr:19
<replaced address 6b24044ae391e0b7>: "Int"
<replaced address 6cdccd509afc921c>: "Text"
<replaced address 6d8bc0b01b68ed0f>: { 2 arguments (capturing nothing) → ip-7169 }
<replaced address 6edbb18c8fe8a683>: { 0 arguments (capturing nothing) → ip-5105 }
<replaced address 6fe1fdb2563c07ad>: "Arguments"
<replaced address 7008c023be883ff4>: Builtins::ifElse:19
<replaced address 703659b1b25a31c3>: { 0 arguments (capturing nothing) → ip-8625 }
<replaced address 70a2d1d7839b24a4>: Examples:fibonacci:
<replaced address 7123377f52cd6d5b>: { 2 arguments (capturing nothing) → ip-1085 }
<replaced address 71d566509a8a2add>: Examples:fibonacci:fibonacci:2:12
<replaced address 754f758090f20bd1>: { 0 arguments (capturing nothing) → ip-1035 }
<replaced address 75c6f093036a613c>: Examples:fibonacci:23:6:22
<replaced address 76c2a3ed1769e34a>: { 0 arguments (capturing nothing) → ip-228 }
<replaced address 77c2885b22af7c12>: { 1 argument (capturing nothing) → ip-1722 }
<replaced address 78116dc366ac952c>: Core:result:mapOrElse:26:value#1
<replaced address 7ab6f395e639a47b>: Core:result:flatMap:12
<replaced address 7ae5b371ff139a5d>: Examples:fibonacci:isLessThan:9
<replaced address 7b5c0ed7f870b37f>: "`conditionIsBool` was not satisfied"
<replaced address 7c65f9f539f0d0fa>: Builtins::intCompareTo:11
<replaced address 7c987e313b2f2519>: Builtins::structGet:14
<replaced address 7d04a0accae5758c>: Builtins::intSubtract:5
<replaced address 7eb081198d2e8ae6>: { 0 arguments (capturing nothing) → ip-1672 }
<replaced address 807d7368f1a4edd6>: "Builtin"
<replaced address 80f4eaa53f4876cd>: anonymous:$generated::needs
<replaced address 834388196300f4fb>: "`function | typeIs Function` was not satisfied"
<replaced address 8383f19ea0a5e146>: Builtins::toDebugText:5
<replaced address 8462dcb40e458120>: Examples:fibonacci:fibonacci:2:11:27
<replaced address 859014e38a16c47f>: "HttpServer"
<replaced address 85ec0259501507ea>: { 0 arguments (capturing nothing) → ip-6788 }
<replaced address 871c35d8d3bc0076>: Builtins::ifElse:41
<replaced address 89be9cdfac8d8517>: Examples:fibonacci:recursive:0:5
<replaced address 8b2eceb75759e0c1>: { 1 argument (capturing nothing) → ip-8589 }
<replaced address 8b647556f2e3190d>: Examples:fibonacci:compareTo:8
<replaced address 8d21dac3ad217357>: { 0 arguments (capturing nothing) → ip-6781 }
<replaced address 8e445bc6862a7d85>: { 3 arguments (capturing nothing) → ip-397 }
<replaced address 91bca86c00256cf1>: Examples:fibonacci:recursive:5
<replaced address 91ccd4b75c545de9>: "The `condition` must be either `True` or `False`."
<replaced address 92aa0d19152d9fd3>: "`text | typeIs Text` was not satisfied"
<replaced address 939833bfd11b3d16>: Examples:fibonacci:23:6
<replaced address 957eb8ad35ecdba0>: "`else | getArgumentCount | equals 0` was not satisfied"
<replaced address 95c497c9e696f807>: { 0 arguments (capturing nothing) → ip-109 }
<replaced address 967bfb90bb1a8797>: { 0 arguments (capturing nothing) → ip-1853 }
<replaced address 996cc5f08093ac25>: "`struct | typeIs Struct` was not satisfied"
<replaced address 9a411ed2de02bbfd>: "`else | typeIs Function` was not satisfied"
<replaced address 9a873ad1d21541fd>: Core:result:mapOrElse:26
<replaced address 9b051d74ed814f94>: "Open"
<replaced address 9b3fe08f2f022acb>: Core:result:mapOrElse:12
<replaced address 9b692663aeb40da7>: "SendResponse"
<replaced address 9b855ed5f08d861e>: { 0 arguments (capturing nothing) → ip-2400 }
<replaced address 9beb0cb1b775254c>: "Close"
<replaced address 9c61ef87641ba65d>: "NoMatch"
<replaced address 9d41aee4f1fc136e>: { 1 argument (capturing nothing) → ip-1990 }
<replaced address 9e34e4f0d7d85134>: Builtins::tagGetValue:19
<replaced address 9eb43c56343f3e48>: { 1 argument (capturing nothing) → ip-1240 }
<replaced address 9ee8514b45dca9c6>: Builtins::ifElse:25
<replaced address 9eed8aae34c53a02>: Builtins::tagGetValue:13
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a2c0e015b3740322>: { 0 arguments (capturing nothing) → ip-7516 }
<replaced address a2f6d53168c96b64>: "GetRandomBytes"
<replaced address a64d053a1f246040>: { 0 arguments (capturing nothing) → ip-8710 }
<replaced address a65673f31e3a7d91>: { 0 arguments (capturing nothing) → ip-2379 }
<replaced address a7d1cf221b5f191d>: { 0 arguments (capturing nothing) → ip-5935 }
<replaced address a7f973910ac7ef7b>: { 2 arguments (capturing nothing) → ip-5597 }
<replaced address a84ff690d98aeae1>: Core:result:getValue:4
<replaced address a9f1b0a5eedb0997>: { 0 arguments (capturing nothing) → ip-2365 }
<replaced address aa720c25d0768a07>: Builtins::ifElse:28
<replaced address aa9fa5b3c4487bd6>: { 0 arguments (capturing nothing) → ip-8632 }
<replaced address ab458b1cc1453acc>: Builtins::intCompareTo:5
<replaced address ad91f532e120fa95>: { 0 arguments (capturing nothing) → ip-7495 }
<replaced address afb8c182a2e055e4>: { 0 arguments (capturing nothing) → ip-1042 }
<replaced address b1086454c3fcc390>: "`is result` was not satisfied"
<replaced address b12b4ef3e52380be>: { 0 arguments (capturing nothing) → ip-256 }
<replaced address b1574ef59cb20f81>: Core:result:map:4
<replaced address b1e495ac8645162b>: { 0 arguments (capturing nothing) → ip-249 }
<replaced address b3ff6f56381ba1ad>: { 0 arguments (capturing nothing) → ip-8703 }
<replaced address b41612abcf83e809>: { 0 arguments (capturing nothing) → ip-5091 }
<replaced address b635644f70e8ddd9>: Examples:fibonacci:23:13
<replaced address b66aa5e8eefa60de>: "Function"
<replaced address b7d5083e90b08e9b>: Builtins::getArgumentCount:11
<replaced address b7dc18b5e494a988>: { 2 arguments (capturing nothing) → ip-8570 }
<replaced address b92158e2d194ec6d>: { 0 arguments (capturing nothing) → ip-4415 }
<replaced address b9594ca6bd52c414>: Core:function:is1:11
<replaced address b9ce0bfa1e99056e>: { 0 arguments (capturing nothing) → ip-3952 }
<replaced address bb6ac1c76117b922>: { 2 arguments (capturing nothing) → ip-1544 }
<replaced address bbcfa9d6e3f11acf>: "Greater"
<replaced address bbfd050c570524d0>: { 0 arguments (capturing nothing) → ip-214 }
<replaced address bc27ce639b755a49>: { 2 arguments (capturing nothing) → ip-8183 }
<replaced address bc3bca1bfe235669>: Core:function:is1:9:3
<replaced address bd7e643bf52790f0>: "Stdout"
<replaced address bd82eea49ada30b1>: Examples:fibonacci:23:6:14:2
<replaced address becc28b62033cb33>: Examples:fibonacci:fibonacci:2:11:28
<replaced address bfd21c3590621a95>: Core:result:map:17:3
<replaced address c10df418bef03acb>: { 0 arguments (capturing nothing) → ip-6809 }
<replaced address c1be25f0a730ee0f>: "You can only call tags or functions."
<replaced address c2082fb1645bc1fc>: { 1 argument (capturing nothing) → ip-2300 }
<replaced address c4a428f16deb61d9>: { 0 arguments (capturing nothing) → ip-115 }
<replaced address c4f0291b7762e5a8>: "`minuend | typeIs Int` was not satisfied"
<replaced address c55ccd7d548d3a0d>: "Tags can only be created with one value."
<replaced address c841b45ecc45bd33>: "True"
<replaced address c86ac4aab1e5d003>: Core:result:map:14
<replaced address c8f94d5823e22feb>: { 0 arguments (capturing nothing) → ip-7481 }
<replaced address c98e2f7a8dce9fc1>: Core:result:mapOrElse:26:value
<replaced address cb1f78aca16cde9b>: { 0 arguments (capturing nothing) → ip-1321 }
<replaced address cbdaa2570f2c79e5>: { 0 arguments (capturing nothing) → ip-855 }
<replaced address cc33b54d0d5baf10>: Core:result:flatMap:19
<replaced address cc90c4275b46b037>: { 0 arguments (capturing nothing) → ip-1501 }
<replaced address cdbcb70275304920>: Examples:fibonacci:23:6:n
<replaced address cf37b22a7a5dec95>: Builtins::intAdd:11
<replaced address d5df9e6b35678bb5>: Examples:fibonacci:fibonacci:2:11:26
<replaced address d7629bf6e871f5e8>: "Error"
<replaced address d7bd702797f58f51>: Core:result:flatMap:14
<replaced address d962951e9f7283f6>: "`function.is1 errorMapper` was not satisfied"
<replaced address dc704463e00c0b29>: { 0 arguments (capturing nothing) → ip-3 }
<replaced address df0fcdbc9cad1521>: Examples:fibonacci:23:6:7
<replaced address e034677c287ec6cb>: { 2 arguments (capturing nothing) → ip-7117 }
<replaced address e0bfbff53028c7a4>: { 0 arguments (capturing nothing) → ip-2386 }
<replaced address e128eb82cb40fae3>: Core:result:is:1
<replaced address e13459ee6346ab5d>: "List"
<replaced address e1d6728501bc6b89>: Builtins::equals:6
<replaced address e20e5f8b7e376a93>: "FileSystem"
<replaced address e23b1b242d4d6330>: { 0 arguments (capturing nothing) → ip-5942 }
<replaced address e4db5827e264d41a>: Builtins::ifElse:5
<replaced address e63e502aad6c0ab9>: { 3 arguments (capturing nothing) → ip-41 }
<replaced address e6c3ffce4f3bf9fb>: { 1 argument (capturing nothing) → ip-8639 }
<replaced address e740b885c98455fd>: { 0 arguments (capturing nothing) → ip-1679 }
<replaced address e74159810db9029c>: { 0 arguments (capturing nothing) → ip-106 }
<replaced address e7fb4134f30f44a8>: { 0 arguments (capturing nothing) → ip-7502 }
<replaced address e8c2dfb7598c479d>: "`tag | ✨.tagHasValue` was not satisfied"
<replaced address ea65fb20656c9a12>: Core:result:mapOr:12
<replaced address ea9a293534a31de4>: "Usage: `cargo run -- run fibonacci.candy -- <number>`"
<replaced address ed495f3dc60840ad>: { 1 argument (capturing nothing) → ip-4169 }
<replaced address edabb9dda7883505>: Examples:fibonacci:fibonacci:2:11:10
<replaced address ee7f5eade172321c>: { 0 arguments (capturing nothing) → ip-5098 }
<replaced address eed0e5dcad294fd3>: Core:result:flatMap:4
<replaced address ef0df736712a6b95>: "Request"
<replaced address ef5d2e500159f5dd>: "No case matched the given expression."
<replaced address efda06d303e3bd5c>: { 0 arguments (capturing nothing) → ip-8618 }
<replaced address f212ba8abcff978b>: Core:result:flatMap:17:2
<replaced address f2debbb68786f674>: "Less"
<replaced address f451c9fdc2c5b696>: Core:result:mapOrElse:26:2
<replaced address f691b014dc4d5107>: Core:result:map:18
<replaced address f71ef6cbc5e057b1>: { 0 arguments (capturing nothing) → ip-235 }
<replaced address f8465d20e0be15a1>: Core:result:mapOrElse:14
<replaced address f8a743cca2278691>: Examples:fibonacci:recursive:0:0:3
<replaced address f8b7e6b56f22ffab>: { 2 arguments (capturing nothing) → ip-6445 }
<replaced address f8bed0fc3ef0a4f6>: "Stdin"
<replaced address fa8cdeec1123ecd3>: "SystemClock"
<replaced address fb36281f9aababce>: Builtins::ifElse:33
<replaced address fc2f44dce996c10d>: { 0 arguments (capturing nothing) → ip-7135 }
<replaced address fd0d0b1c2519cdbd>: { 2 arguments (capturing nothing) → ip-7323 }

# Instructions
# Builtins::ifElse:1:case-0:matched, Core:result:is:1:case-0:matched, Core:check:check:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, anonymous:$generated::needs:isConditionTrue:then, Builtins::isNonNegative:13:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched
   0: pushConstant inline True
   1: popMultipleBelowTop 1
   2: return
# Core:iterator:withIndex:11:1:isMatch:then, Core:text:31:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:text:charFromAsciiCode:36:isMatch:then, Core:controlFlow:31:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core::155:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:result:also:16:case-0:didNotMatch, Examples:fibonacci:21:isMatch:then, Core:struct:21:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:check:11:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:controlFlow:if:23, Core:list:42:isMatch:then, Core:tag:31:isMatch:then, Core:int:42:isMatch:then, Core::43:isMatch:then, Core::166:isMatch:then, Core::21:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Examples:fibonacci:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isReasonText:then, Core:text:42:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:type:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:bool:11:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:controlFlow:52:isMatch:then, Core::32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core::104:isMatch:then, Core:function:21:isMatch:then, anonymous:$generated::needs:isConditionBool:then, Core:result:21:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:list:31:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:result:32:isMatch:then, Core:iterator:32:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:int:31:isMatch:then
   3: pushConstant inline Nothing
   4: popMultipleBelowTop 1
   5: return
# anonymous:$generated::needs:isConditionTrue:else
   6: pushFromStack 1
   7: dup by 1
   8: pushConstant inline builtinEquals
   9: pushConstant inline False
  10: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  11: pushFromStack 2
  12: pushFromStack 5
  13: pushFromStack 3
  14: pushFromStack 3
  15: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
  16: pushFromStack 1
  17: dup by 1
  18: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
  19: pushFromStack 0
  20: pushFromStack 3
  21: panic
  22: popMultipleBelowTop 3
  23: return
# anonymous:$generated::needs:isReasonText:else
  24: pushFromStack 1
  25: dup by 1
  26: pushConstant <replaced address 36eebe9168aef0b0> "The `reason` must be a text."
  27: pushFromStack 0
  28: pushFromStack 3
  29: panic
  30: popMultipleBelowTop 3
  31: return
# anonymous:$generated::needs:condition:else
  32: pushFromStack 2
  33: dup by 1
  34: pushFromStack 1
  35: dup by 1
  36: pushFromStack 2
  37: pushFromStack 2
  38: panic
  39: popMultipleBelowTop 3
  40: return
# anonymous:$generated::needs
  41: pushFromStack 3
  42: dup by 2
  43: pushFromStack 2
  44: dup by 1
  45: pushFromStack 0
  46: dup by 2
  47: pushConstant inline builtinEquals
  48: pushConstant inline True
  49: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  50: pushFromStack 2
  51: pushFromStack 7
  52: pushFromStack 3
  53: pushFromStack 3
  54: call with 2 arguments
  55: pushFromStack 7
  56: createFunction with 0 arguments capturing 0 starting at ip-6
  57: pushConstant inline builtinIfElse
  58: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
  59: pushFromStack 1
  60: pushFromStack 5
  61: pushFromStack 2
  62: pushFromStack 5
  63: pushFromStack 9
  64: call with 3 arguments
  65: pushFromStack 9
  66: createFunction with 0 arguments capturing 0 starting at ip-16
  67: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
  68: pushFromStack 5
  69: pushFromStack 4
  70: pushFromStack 2
  71: pushFromStack 4
  72: pushFromStack 13
  73: call with 3 arguments
  74: pushConstant inline builtinTypeOf
  75: pushFromStack 0
  76: pushFromStack 17
  77: pushFromStack 6
  78: call with 1 argument
  79: pushConstant inline Text
  80: pushFromStack 15
  81: pushFromStack 2
  82: pushFromStack 2
  83: pushFromStack 9
  84: call with 2 arguments
  85: pushFromStack 7
  86: createFunction with 0 arguments capturing 0 starting at ip-24
  87: pushFromStack 12
  88: pushFromStack 3
  89: pushFromStack 9
  90: pushFromStack 3
  91: pushFromStack 20
  92: call with 3 arguments
  93: pushFromStack 22
  94: pushFromStack 22
  95: createFunction with 0 arguments capturing 1, 0 starting at ip-32
  96: pushFromStack 10
  97: drop
  98: pushFromStack 3
  99: drop
 100: pushFromStack 16
 101: pushFromStack 19
 102: pushFromStack 13
 103: pushFromStack 3
 104: pushFromStack 24
 105: tailCall with 27 locals and 3 arguments
# Core:iterator:generateWithState:12:1:3:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:bool:lazyAnd:16:equals:then, Core:list:firstWhere:19:equals:then, Core:bool:is:1:equals:then, Core:iterator:where:17:2:3:equals:then, Core:bool:lazyOr:16:equals:then, Core:list:single:6:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:text:isAsciiDigit:14:equals:then, Core:list:first:6:equals:then, Builtins::not:1:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Builtins::ifElse:1:equals:then, Core:list:lastWhere:19:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Builtins::isNonNegative:13:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:bool:not:6:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Core:check:check:1:equals:then, Core:iterator:reduceLeft:16:equals:then
 106: pushConstant <replaced address 19beba0e7e49ddcc> Match ((,))
 107: popMultipleBelowTop 1
 108: return
# Builtins::isNonNegative:13:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:bool:is:1:equals:else, Core:fixedDecimal:105:equals:else, Core:int:pow:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core::21:equals:else, Core:text:42:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:list:42:equals:else, Core:iterator:where:17:2:3:equals:else, Core:bool:11:equals:else, Core:result:21:equals:else, Core::43:equals:else, Core:list:lastWhere:19:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:wrapSafe:14:1:equals:else, Core:text:charFromAsciiCode:36:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:int:pow:21:4:equals:else, Core:iterator:32:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:where:17:2:3:hasKey:else, Builtins::not:1:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:generate:51:1:hasKey:else, Core:iterator:take:27:1:hasKey:else, Core:fixedDecimal:54:equals:else, Core:result:32:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::ifElse:1:equals:else, Core:result:is:1:equals:else, Core:list:firstWhere:19:equals:else, Examples:fibonacci:21:equals:else, Examples:fibonacci:23:6:equals:else, Core::166:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:fixedDecimal:32:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:also:16:equals:else, Core:text:repeat:30:1:equals:else, Core:iterator:skip:26:6:8:3:equals:else, Core:bool:lazyAnd:16:equals:else, Core:iterator:21:equals:else, Core:iterator:skip:26:6:1:equals:else, Core::32:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core::104:equals:else, Core:iterator:next:6:equals:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:bool:not:6:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:withIndex:11:5:hasKey:else, Core:function:21:equals:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:31:equals:else, Core:iterator:take:27:1:equals:else, Core:list:generate:51:1:equals:else, Core:text:31:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:controlFlow:52:equals:else, Core:check:check:1:equals:else, Core:bool:lazyOr:16:equals:else, Core:int:31:equals:else, Core:list:single:6:equals:else, Core:fixedDecimal:43:equals:else, Core:list:first:6:equals:else, Core:fixedDecimal:21:equals:else, Core:int:pow:21:1:equals:else, Core:fixedDecimal:is:1:equals:else, Core::155:equals:else, Core:int:42:equals:else, Core:iterator:map:17:3:equals:else
 109: pushConstant inline NoMatch
 110: popMultipleBelowTop 1
 111: return
# Core:function:is1:10, Core:check:check:1:case-0:didNotMatch, Core:function:is2:10, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::ifElse:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, Core:function:is0:10, Core:function:is4:10, Builtins::isNonNegative:13:case-1:matched, Core:function:is5:10, Core:bool:is:1:case-0:didNotMatch, Core:bool:not:6:case-0:matched, Core:bool:lazyAnd:16:case-1:matched, Core:list:isValidIndex:19, Builtins::not:1:case-0:matched, Core:function:is3:10, Core:result:is:1:case-0:didNotMatch, Core:list:isValidInsertIndex:19
 112: pushConstant inline False
 113: popMultipleBelowTop 1
 114: return
# anonymous:$generated::needs:isConditionBool:else
 115: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 116: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 117: pushFromStack 1
 118: pushFromStack 1
 119: panic
 120: popMultipleBelowTop 3
 121: return
# anonymous:$generated::needs:isConditionTrue:else
 122: pushFromStack 1
 123: dup by 1
 124: pushConstant inline builtinEquals
 125: pushConstant inline False
 126: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 127: pushFromStack 2
 128: pushFromStack 5
 129: pushFromStack 3
 130: pushFromStack 3
 131: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 132: pushFromStack 1
 133: dup by 1
 134: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 135: pushFromStack 0
 136: pushFromStack 3
 137: panic
 138: popMultipleBelowTop 3
 139: return
# Builtins::getArgumentCount
 140: pushFromStack 1
 141: dup by 1
 142: pushFromStack 0
 143: dup by 2
 144: pushConstant inline builtinTypeOf
 145: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 146: pushFromStack 1
 147: pushFromStack 4
 148: pushFromStack 2
 149: call with 1 argument
 150: pushConstant inline builtinEquals
 151: pushConstant inline Function
 152: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 153: pushFromStack 2
 154: pushFromStack 4
 155: pushFromStack 3
 156: pushFromStack 3
 157: call with 2 arguments
 158: pushFromStack 0
 159: dup by 3
 160: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 161: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 162: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 163: pushFromStack 2
 164: pushFromStack 2
 165: pushFromStack 5
 166: pushFromStack 3
 167: pushFromStack 14
 168: pushFromStack 4
 169: traceCallStarts (3 arguments)
 170: pushConstant inline True
 171: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 172: pushFromStack 8
 173: pushFromStack 6
 174: pushFromStack 3
 175: pushFromStack 3
 176: call with 2 arguments
 177: pushFromStack 6
 178: createFunction with 0 arguments capturing 0 starting at ip-122
 179: pushConstant inline builtinIfElse
 180: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 181: pushFromStack 1
 182: pushFromStack 5
 183: pushFromStack 2
 184: pushFromStack 5
 185: pushFromStack 9
 186: call with 3 arguments
 187: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
 188: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
 189: pushFromStack 4
 190: pushFromStack 3
 191: pushFromStack 3
 192: pushFromStack 3
 193: pushFromStack 12
 194: call with 3 arguments
 195: pushFromStack 21
 196: createFunction with 0 arguments capturing 0 starting at ip-132
 197: pushFromStack 7
 198: pushFromStack 10
 199: pushFromStack 6
 200: pushFromStack 3
 201: pushFromStack 15
 202: call with 3 arguments
 203: traceCallEnds without return value
 204: pushConstant inline builtinGetArgumentCount
 205: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 206: pushFromStack 5
 207: drop
 208: pushFromStack 2
 209: drop
 210: pushFromStack 1
 211: pushFromStack 28
 212: pushFromStack 2
 213: tailCall with 28 locals and 1 argument
# anonymous:$generated::needs:isConditionBool:else
 214: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 215: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 216: pushFromStack 1
 217: pushFromStack 1
 218: panic
 219: popMultipleBelowTop 3
 220: return
 221: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 222: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 223: pushFromStack 1
 224: pushFromStack 1
 225: panic
 226: popMultipleBelowTop 3
 227: return
# anonymous:$generated::needs:condition:else
 228: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 229: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 230: pushFromStack 1
 231: pushFromStack 1
 232: panic
 233: popMultipleBelowTop 3
 234: return
# anonymous:$generated::needs:isConditionBool:else
 235: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 236: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 237: pushFromStack 1
 238: pushFromStack 1
 239: panic
 240: popMultipleBelowTop 3
 241: return
 242: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 243: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 244: pushFromStack 1
 245: pushFromStack 1
 246: panic
 247: popMultipleBelowTop 3
 248: return
# anonymous:$generated::needs:condition:else
 249: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 250: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 251: pushFromStack 1
 252: pushFromStack 1
 253: panic
 254: popMultipleBelowTop 3
 255: return
# anonymous:$generated::needs:isConditionBool:else
 256: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 257: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 258: pushFromStack 1
 259: pushFromStack 1
 260: panic
 261: popMultipleBelowTop 3
 262: return
# Builtins::ifElse:1:isMatch:then
 263: pushFromStack 1
 264: dup by 1
 265: pushFromStack 1
 266: popMultipleBelowTop 2
 267: return
# Builtins::ifElse:1:isMatch:else
 268: pushFromStack 1
 269: dup by 1
 270: pushConstant inline builtinEquals
 271: pushConstant inline False
 272: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 273: pushFromStack 2
 274: pushFromStack 2
 275: pushFromStack 6
 276: pushFromStack 3
 277: call with 2 arguments
 278: pushConstant inline builtinIfElse
 279: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 280: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 281: pushFromStack 2
 282: pushFromStack 4
 283: pushFromStack 3
 284: pushFromStack 3
 285: pushFromStack 8
 286: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
 287: pushFromStack 1
 288: dup by 1
 289: pushConstant inline builtinEquals
 290: pushConstant inline False
 291: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 292: pushFromStack 2
 293: pushFromStack 5
 294: pushFromStack 3
 295: pushFromStack 3
 296: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 297: pushFromStack 1
 298: dup by 1
 299: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 300: pushFromStack 0
 301: pushFromStack 3
 302: panic
 303: popMultipleBelowTop 3
 304: return
# anonymous:$generated::needs:isConditionTrue:else
 305: pushFromStack 1
 306: dup by 1
 307: pushConstant inline builtinEquals
 308: pushConstant inline False
 309: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 310: pushFromStack 2
 311: pushFromStack 5
 312: pushFromStack 3
 313: pushFromStack 3
 314: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 315: pushFromStack 1
 316: dup by 1
 317: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 318: pushFromStack 0
 319: pushFromStack 3
 320: panic
 321: popMultipleBelowTop 3
 322: return
# anonymous:$generated::needs:isConditionTrue:else
 323: pushFromStack 1
 324: dup by 1
 325: pushConstant inline builtinEquals
 326: pushConstant inline False
 327: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 328: pushFromStack 2
 329: pushFromStack 5
 330: pushFromStack 3
 331: pushFromStack 3
 332: tailCall with 5 locals and 2 arguments
 333: pushFromStack 1
 334: dup by 1
 335: pushConstant inline builtinEquals
 336: pushConstant inline False
 337: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 338: pushFromStack 2
 339: pushFromStack 5
 340: pushFromStack 3
 341: pushFromStack 3
 342: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 343: pushFromStack 1
 344: dup by 1
 345: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 346: pushFromStack 0
 347: pushFromStack 3
 348: panic
 349: popMultipleBelowTop 3
 350: return
# anonymous:$generated::needs:isConditionTrue:else
 351: pushFromStack 1
 352: dup by 1
 353: pushConstant inline builtinEquals
 354: pushConstant inline False
 355: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 356: pushFromStack 2
 357: pushFromStack 5
 358: pushFromStack 3
 359: pushFromStack 3
 360: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 361: pushFromStack 1
 362: dup by 1
 363: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 364: pushFromStack 0
 365: pushFromStack 3
 366: panic
 367: popMultipleBelowTop 3
 368: return
# anonymous:$generated::needs:isConditionTrue:else
 369: pushFromStack 1
 370: dup by 1
 371: pushConstant inline builtinEquals
 372: pushConstant inline False
 373: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 374: pushFromStack 2
 375: pushFromStack 5
 376: pushFromStack 3
 377: pushFromStack 3
 378: tailCall with 5 locals and 2 arguments
 379: pushFromStack 1
 380: dup by 1
 381: pushConstant inline builtinEquals
 382: pushConstant inline False
 383: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 384: pushFromStack 2
 385: pushFromStack 5
 386: pushFromStack 3
 387: pushFromStack 3
 388: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 389: pushFromStack 1
 390: dup by 1
 391: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 392: pushFromStack 0
 393: pushFromStack 3
 394: panic
 395: popMultipleBelowTop 3
 396: return
# Builtins::ifElse
 397: pushFromStack 3
 398: dup by 3
 399: pushFromStack 2
 400: dup by 4
 401: pushFromStack 1
 402: dup by 4
 403: pushFromStack 0
 404: dup by 10
 405: pushConstant inline builtinEquals
 406: pushConstant inline True
 407: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 408: pushFromStack 2
 409: pushFromStack 2
 410: pushFromStack 8
 411: pushFromStack 3
 412: call with 2 arguments
 413: pushConstant inline builtinIfElse
 414: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 415: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 416: pushFromStack 2
 417: pushFromStack 4
 418: pushFromStack 3
 419: pushFromStack 3
 420: pushFromStack 8
 421: call with 3 arguments
 422: pushFromStack 0
 423: dup by 1
 424: pushConstant inline builtinTagWithoutValue
 425: pushFromStack 0
 426: pushFromStack 2
 427: pushFromStack 8
 428: call with 1 argument
 429: pushConstant inline Match
 430: pushFromStack 10
 431: pushFromStack 2
 432: pushFromStack 2
 433: pushFromStack 11
 434: call with 2 arguments
 435: pushFromStack 4
 436: createFunction with 0 arguments capturing 0 starting at ip-263
 437: pushFromStack 17
 438: createFunction with 0 arguments capturing 0 starting at ip-268
 439: pushFromStack 11
 440: pushFromStack 5
 441: pushFromStack 4
 442: pushFromStack 3
 443: pushFromStack 17
 444: call with 3 arguments
 445: pushFromStack 8
 446: pushFromStack 1
 447: pushFromStack 16
 448: call with 1 argument
 449: pushFromStack 17
 450: pushFromStack 1
 451: pushFromStack 9
 452: pushFromStack 18
 453: call with 2 arguments
 454: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 455: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
 456: pushFromStack 16
 457: pushFromStack 3
 458: pushFromStack 3
 459: pushFromStack 3
 460: pushFromStack 22
 461: call with 3 arguments
 462: pushFromStack 0
 463: dup by 3
 464: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 465: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 466: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 467: pushFromStack 2
 468: pushFromStack 2
 469: pushFromStack 5
 470: pushFromStack 3
 471: pushFromStack 29
 472: pushFromStack 4
 473: traceCallStarts (3 arguments)
 474: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 475: pushFromStack 25
 476: pushFromStack 5
 477: pushFromStack 26
 478: pushFromStack 3
 479: call with 2 arguments
 480: pushFromStack 5
 481: createFunction with 0 arguments capturing 0 starting at ip-287
 482: pushFromStack 24
 483: pushFromStack 3
 484: pushFromStack 11
 485: pushFromStack 3
 486: pushFromStack 7
 487: call with 3 arguments
 488: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
 489: pushConstant <replaced address bbfd050c570524d0> { 0 arguments (capturing nothing) → ip-214 }
 490: pushFromStack 27
 491: pushFromStack 3
 492: pushFromStack 3
 493: pushFromStack 3
 494: pushFromStack 10
 495: call with 3 arguments
 496: pushFromStack 33
 497: createFunction with 0 arguments capturing 0 starting at ip-297
 498: pushFromStack 30
 499: pushFromStack 8
 500: pushFromStack 6
 501: pushFromStack 3
 502: pushFromStack 13
 503: call with 3 arguments
 504: traceCallEnds without return value
 505: pushConstant inline builtinTypeOf
 506: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 507: pushFromStack 1
 508: pushFromStack 41
 509: pushFromStack 2
 510: call with 1 argument
 511: pushFromStack 0
 512: dup by 1
 513: pushConstant inline Function
 514: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 515: pushFromStack 40
 516: pushFromStack 3
 517: pushFromStack 3
 518: pushFromStack 3
 519: call with 2 arguments
 520: pushFromStack 0
 521: dup by 3
 522: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 523: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 524: pushFromStack 1
 525: pushFromStack 21
 526: pushFromStack 4
 527: pushFromStack 3
 528: pushFromStack 14
 529: pushFromStack 4
 530: traceCallStarts (3 arguments)
 531: pushFromStack 43
 532: pushFromStack 3
 533: pushFromStack 44
 534: pushFromStack 21
 535: call with 2 arguments
 536: pushFromStack 3
 537: createFunction with 0 arguments capturing 0 starting at ip-305
 538: pushFromStack 42
 539: pushFromStack 3
 540: pushFromStack 29
 541: pushFromStack 3
 542: pushFromStack 25
 543: call with 3 arguments
 544: pushConstant <replaced address 3c5957eb057b9937> { 0 arguments (capturing nothing) → ip-221 }
 545: pushFromStack 44
 546: pushFromStack 2
 547: pushFromStack 20
 548: pushFromStack 3
 549: pushFromStack 27
 550: call with 3 arguments
 551: pushFromStack 16
 552: createFunction with 0 arguments capturing 0 starting at ip-315
 553: pushFromStack 47
 554: pushFromStack 7
 555: pushFromStack 23
 556: pushFromStack 3
 557: pushFromStack 30
 558: call with 3 arguments
 559: traceCallEnds without return value
 560: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 561: pushConstant <replaced address 4eaaa90b93950b2c> { 1 argument (capturing nothing) → ip-140 }
 562: pushFromStack 1
 563: pushFromStack 1
 564: pushFromStack 59
 565: pushFromStack 2
 566: traceCallStarts (1 argument)
 567: pushFromStack 54
 568: pushFromStack 17
 569: pushFromStack 17
 570: pushFromStack 17
 571: call with 2 arguments
 572: pushFromStack 0
 573: dup by 3
 574: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 575: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 576: pushFromStack 1
 577: pushFromStack 35
 578: pushFromStack 4
 579: pushFromStack 3
 580: pushFromStack 8
 581: pushFromStack 4
 582: traceCallStarts (3 arguments)
 583: pushFromStack 57
 584: pushFromStack 3
 585: pushFromStack 58
 586: pushFromStack 35
 587: call with 2 arguments
 588: pushFromStack 3
 589: createFunction with 0 arguments capturing 0 starting at ip-323
 590: pushFromStack 56
 591: pushFromStack 3
 592: pushFromStack 43
 593: pushFromStack 3
 594: pushFromStack 39
 595: call with 3 arguments
 596: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
 597: pushFromStack 58
 598: pushFromStack 2
 599: pushFromStack 34
 600: pushFromStack 3
 601: pushFromStack 41
 602: call with 3 arguments
 603: pushConstant <replaced address 76c2a3ed1769e34a> { 0 arguments (capturing nothing) → ip-228 }
 604: pushFromStack 60
 605: pushFromStack 6
 606: pushFromStack 36
 607: pushFromStack 3
 608: pushFromStack 43
 609: call with 3 arguments
 610: traceCallEnds without return value
 611: pushConstant inline builtinGetArgumentCount
 612: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 613: pushFromStack 1
 614: pushFromStack 71
 615: pushFromStack 2
 616: call with 1 argument
 617: traceCallEnds without return value
 618: pushConstant inline 0
 619: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 620: pushFromStack 70
 621: pushFromStack 3
 622: pushFromStack 3
 623: pushFromStack 3
 624: call with 2 arguments
 625: pushFromStack 0
 626: dup by 3
 627: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 628: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 629: pushFromStack 1
 630: pushFromStack 51
 631: pushFromStack 4
 632: pushFromStack 3
 633: pushFromStack 27
 634: pushFromStack 4
 635: traceCallStarts (3 arguments)
 636: pushFromStack 73
 637: pushFromStack 3
 638: pushFromStack 74
 639: pushFromStack 51
 640: call with 2 arguments
 641: pushFromStack 3
 642: createFunction with 0 arguments capturing 0 starting at ip-333
 643: pushFromStack 72
 644: pushFromStack 3
 645: pushFromStack 59
 646: pushFromStack 3
 647: pushFromStack 55
 648: call with 3 arguments
 649: pushConstant <replaced address f71ef6cbc5e057b1> { 0 arguments (capturing nothing) → ip-235 }
 650: pushFromStack 74
 651: pushFromStack 2
 652: pushFromStack 50
 653: pushFromStack 3
 654: pushFromStack 57
 655: call with 3 arguments
 656: pushFromStack 29
 657: createFunction with 0 arguments capturing 0 starting at ip-343
 658: pushFromStack 77
 659: pushFromStack 7
 660: pushFromStack 53
 661: pushFromStack 3
 662: pushFromStack 60
 663: call with 3 arguments
 664: traceCallEnds without return value
 665: pushFromStack 46
 666: pushFromStack 85
 667: pushFromStack 47
 668: call with 1 argument
 669: pushFromStack 0
 670: dup by 1
 671: pushFromStack 83
 672: pushFromStack 1
 673: pushFromStack 46
 674: pushFromStack 46
 675: call with 2 arguments
 676: pushFromStack 0
 677: dup by 3
 678: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 679: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 680: pushFromStack 1
 681: pushFromStack 64
 682: pushFromStack 4
 683: pushFromStack 3
 684: pushFromStack 10
 685: pushFromStack 4
 686: traceCallStarts (3 arguments)
 687: pushFromStack 86
 688: pushFromStack 3
 689: pushFromStack 87
 690: pushFromStack 64
 691: call with 2 arguments
 692: pushFromStack 3
 693: createFunction with 0 arguments capturing 0 starting at ip-351
 694: pushFromStack 85
 695: pushFromStack 3
 696: pushFromStack 72
 697: pushFromStack 3
 698: pushFromStack 68
 699: call with 3 arguments
 700: pushConstant <replaced address 318842cdd7cea1c4> { 0 arguments (capturing nothing) → ip-242 }
 701: pushFromStack 87
 702: pushFromStack 2
 703: pushFromStack 63
 704: pushFromStack 3
 705: pushFromStack 70
 706: call with 3 arguments
 707: pushFromStack 12
 708: createFunction with 0 arguments capturing 0 starting at ip-361
 709: pushFromStack 90
 710: pushFromStack 7
 711: pushFromStack 66
 712: pushFromStack 3
 713: pushFromStack 73
 714: call with 3 arguments
 715: traceCallEnds without return value
 716: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 717: pushFromStack 0
 718: pushFromStack 43
 719: pushFromStack 100
 720: pushFromStack 2
 721: traceCallStarts (1 argument)
 722: pushFromStack 96
 723: pushFromStack 14
 724: pushFromStack 59
 725: pushFromStack 59
 726: call with 2 arguments
 727: pushFromStack 0
 728: dup by 3
 729: pushFromStack 41
 730: pushFromStack 75
 731: pushFromStack 2
 732: pushFromStack 43
 733: pushFromStack 5
 734: pushFromStack 4
 735: traceCallStarts (3 arguments)
 736: pushFromStack 97
 737: pushFromStack 1
 738: pushFromStack 98
 739: pushFromStack 75
 740: call with 2 arguments
 741: pushFromStack 1
 742: createFunction with 0 arguments capturing 0 starting at ip-369
 743: pushFromStack 96
 744: pushFromStack 3
 745: pushFromStack 83
 746: pushFromStack 3
 747: pushFromStack 79
 748: call with 3 arguments
 749: pushFromStack 97
 750: pushFromStack 1
 751: pushFromStack 73
 752: pushFromStack 42
 753: pushFromStack 80
 754: call with 3 arguments
 755: pushConstant <replaced address b1e495ac8645162b> { 0 arguments (capturing nothing) → ip-249 }
 756: pushFromStack 99
 757: pushFromStack 5
 758: pushFromStack 75
 759: pushFromStack 3
 760: pushFromStack 82
 761: call with 3 arguments
 762: traceCallEnds without return value
 763: pushFromStack 38
 764: pushFromStack 107
 765: pushFromStack 39
 766: call with 1 argument
 767: traceCallEnds without return value
 768: pushFromStack 105
 769: pushFromStack 1
 770: pushFromStack 38
 771: pushFromStack 38
 772: call with 2 arguments
 773: pushFromStack 0
 774: dup by 3
 775: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 776: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 777: pushFromStack 1
 778: pushFromStack 86
 779: pushFromStack 4
 780: pushFromStack 3
 781: pushFromStack 19
 782: pushFromStack 4
 783: traceCallStarts (3 arguments)
 784: pushFromStack 108
 785: pushFromStack 3
 786: pushFromStack 109
 787: pushFromStack 86
 788: call with 2 arguments
 789: pushFromStack 3
 790: createFunction with 0 arguments capturing 0 starting at ip-379
 791: pushFromStack 107
 792: pushFromStack 3
 793: pushFromStack 94
 794: pushFromStack 3
 795: pushFromStack 90
 796: call with 3 arguments
 797: pushConstant <replaced address b12b4ef3e52380be> { 0 arguments (capturing nothing) → ip-256 }
 798: pushFromStack 109
 799: pushFromStack 2
 800: pushFromStack 85
 801: pushFromStack 3
 802: pushFromStack 92
 803: call with 3 arguments
 804: pushFromStack 21
 805: createFunction with 0 arguments capturing 0 starting at ip-389
 806: pushFromStack 112
 807: pushFromStack 7
 808: pushFromStack 88
 809: pushFromStack 3
 810: pushFromStack 95
 811: call with 3 arguments
 812: traceCallEnds without return value
 813: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
 814: pushFromStack 0
 815: pushFromStack 115
 816: pushFromStack 106
 817: pushFromStack 124
 818: pushFromStack 124
 819: pushFromStack 4
 820: traceTailCall (3 arguments)
 821: pushFromStack 86
 822: drop
 823: pushFromStack 83
 824: drop
 825: pushFromStack 69
 826: drop
 827: pushFromStack 66
 828: drop
 829: pushFromStack 55
 830: drop
 831: pushFromStack 53
 832: drop
 833: pushFromStack 39
 834: drop
 835: pushFromStack 36
 836: drop
 837: pushFromStack 26
 838: drop
 839: pushFromStack 23
 840: drop
 841: pushFromStack 16
 842: drop
 843: pushFromStack 14
 844: drop
 845: pushFromStack 4
 846: drop
 847: pushFromStack 1
 848: drop
 849: pushFromStack 114
 850: pushFromStack 105
 851: pushFromStack 123
 852: pushFromStack 123
 853: pushFromStack 4
 854: tailCall with 123 locals and 3 arguments
# anonymous:$generated::needs:isConditionBool:else
 855: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 856: pushConstant <replaced address 440a4a2e9e3a80bb> Builtins::intAdd:5
 857: pushFromStack 1
 858: pushFromStack 1
 859: panic
 860: popMultipleBelowTop 3
 861: return
 862: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 863: pushConstant <replaced address cf37b22a7a5dec95> Builtins::intAdd:11
 864: pushFromStack 1
 865: pushFromStack 1
 866: panic
 867: popMultipleBelowTop 3
 868: return
# anonymous:$generated::needs:isConditionTrue:else
 869: pushFromStack 1
 870: dup by 1
 871: pushConstant inline builtinEquals
 872: pushConstant inline False
 873: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 874: pushFromStack 2
 875: pushFromStack 5
 876: pushFromStack 3
 877: pushFromStack 3
 878: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 879: pushFromStack 1
 880: dup by 1
 881: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
 882: pushFromStack 0
 883: pushFromStack 3
 884: panic
 885: popMultipleBelowTop 3
 886: return
# anonymous:$generated::needs:isConditionTrue:else
 887: pushFromStack 1
 888: dup by 1
 889: pushConstant inline builtinEquals
 890: pushConstant inline False
 891: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 892: pushFromStack 2
 893: pushFromStack 5
 894: pushFromStack 3
 895: pushFromStack 3
 896: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 897: pushFromStack 1
 898: dup by 1
 899: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
 900: pushFromStack 0
 901: pushFromStack 3
 902: panic
 903: popMultipleBelowTop 3
 904: return
# Builtins::intAdd
 905: pushFromStack 2
 906: dup by 1
 907: pushFromStack 1
 908: dup by 1
 909: pushFromStack 0
 910: dup by 4
 911: pushConstant inline builtinTypeOf
 912: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 913: pushFromStack 1
 914: pushFromStack 5
 915: pushFromStack 2
 916: call with 1 argument
 917: pushConstant inline builtinEquals
 918: pushConstant inline Int
 919: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 920: pushFromStack 2
 921: pushFromStack 4
 922: pushFromStack 3
 923: pushFromStack 3
 924: call with 2 arguments
 925: pushFromStack 0
 926: dup by 3
 927: pushConstant <replaced address 440a4a2e9e3a80bb> Builtins::intAdd:5
 928: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 929: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
 930: pushFromStack 2
 931: pushFromStack 2
 932: pushFromStack 5
 933: pushFromStack 3
 934: pushFromStack 14
 935: pushFromStack 4
 936: traceCallStarts (3 arguments)
 937: pushConstant inline True
 938: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 939: pushFromStack 8
 940: pushFromStack 6
 941: pushFromStack 3
 942: pushFromStack 3
 943: call with 2 arguments
 944: pushFromStack 6
 945: createFunction with 0 arguments capturing 0 starting at ip-869
 946: pushConstant inline builtinIfElse
 947: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 948: pushFromStack 1
 949: pushFromStack 5
 950: pushFromStack 2
 951: pushFromStack 5
 952: pushFromStack 9
 953: call with 3 arguments
 954: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
 955: pushConstant <replaced address cbdaa2570f2c79e5> { 0 arguments (capturing nothing) → ip-855 }
 956: pushFromStack 4
 957: pushFromStack 3
 958: pushFromStack 3
 959: pushFromStack 3
 960: pushFromStack 12
 961: call with 3 arguments
 962: pushFromStack 21
 963: createFunction with 0 arguments capturing 0 starting at ip-879
 964: pushFromStack 7
 965: pushFromStack 10
 966: pushFromStack 6
 967: pushFromStack 3
 968: pushFromStack 15
 969: call with 3 arguments
 970: traceCallEnds without return value
 971: pushFromStack 23
 972: pushFromStack 26
 973: pushFromStack 24
 974: call with 1 argument
 975: pushFromStack 21
 976: pushFromStack 1
 977: pushFromStack 22
 978: pushFromStack 22
 979: call with 2 arguments
 980: pushFromStack 0
 981: dup by 3
 982: pushConstant <replaced address cf37b22a7a5dec95> Builtins::intAdd:11
 983: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
 984: pushFromStack 1
 985: pushFromStack 20
 986: pushFromStack 4
 987: pushFromStack 3
 988: pushFromStack 10
 989: pushFromStack 4
 990: traceCallStarts (3 arguments)
 991: pushFromStack 24
 992: pushFromStack 3
 993: pushFromStack 19
 994: pushFromStack 19
 995: call with 2 arguments
 996: pushFromStack 3
 997: createFunction with 0 arguments capturing 0 starting at ip-887
 998: pushFromStack 15
 999: pushFromStack 3
1000: pushFromStack 16
1001: pushFromStack 3
1002: pushFromStack 23
1003: call with 3 arguments
1004: pushConstant <replaced address 0643ee59211ac3f8> { 0 arguments (capturing nothing) → ip-862 }
1005: pushFromStack 17
1006: pushFromStack 2
1007: pushFromStack 16
1008: pushFromStack 3
1009: pushFromStack 25
1010: call with 3 arguments
1011: pushFromStack 12
1012: createFunction with 0 arguments capturing 0 starting at ip-897
1013: pushFromStack 20
1014: pushFromStack 7
1015: pushFromStack 19
1016: pushFromStack 3
1017: pushFromStack 28
1018: call with 3 arguments
1019: traceCallEnds without return value
1020: pushConstant inline builtinIntAdd
1021: pushConstant <replaced address 216d199efe6cdff8> Builtins::intAdd:18
1022: pushFromStack 18
1023: drop
1024: pushFromStack 15
1025: drop
1026: pushFromStack 5
1027: drop
1028: pushFromStack 2
1029: drop
1030: pushFromStack 1
1031: pushFromStack 42
1032: pushFromStack 42
1033: pushFromStack 3
1034: tailCall with 42 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
1035: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1036: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
1037: pushFromStack 1
1038: pushFromStack 1
1039: panic
1040: popMultipleBelowTop 3
1041: return
1042: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1043: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
1044: pushFromStack 1
1045: pushFromStack 1
1046: panic
1047: popMultipleBelowTop 3
1048: return
# anonymous:$generated::needs:isConditionTrue:else
1049: pushFromStack 1
1050: dup by 1
1051: pushConstant inline builtinEquals
1052: pushConstant inline False
1053: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1054: pushFromStack 2
1055: pushFromStack 5
1056: pushFromStack 3
1057: pushFromStack 3
1058: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1059: pushFromStack 1
1060: dup by 1
1061: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
1062: pushFromStack 0
1063: pushFromStack 3
1064: panic
1065: popMultipleBelowTop 3
1066: return
# anonymous:$generated::needs:isConditionTrue:else
1067: pushFromStack 1
1068: dup by 1
1069: pushConstant inline builtinEquals
1070: pushConstant inline False
1071: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1072: pushFromStack 2
1073: pushFromStack 5
1074: pushFromStack 3
1075: pushFromStack 3
1076: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1077: pushFromStack 1
1078: dup by 1
1079: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
1080: pushFromStack 0
1081: pushFromStack 3
1082: panic
1083: popMultipleBelowTop 3
1084: return
# Builtins::intCompareTo
1085: pushFromStack 2
1086: dup by 1
1087: pushFromStack 1
1088: dup by 1
1089: pushFromStack 0
1090: dup by 4
1091: pushConstant inline builtinTypeOf
1092: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1093: pushFromStack 1
1094: pushFromStack 5
1095: pushFromStack 2
1096: call with 1 argument
1097: pushConstant inline builtinEquals
1098: pushConstant inline Int
1099: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1100: pushFromStack 2
1101: pushFromStack 4
1102: pushFromStack 3
1103: pushFromStack 3
1104: call with 2 arguments
1105: pushFromStack 0
1106: dup by 3
1107: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
1108: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1109: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
1110: pushFromStack 2
1111: pushFromStack 2
1112: pushFromStack 5
1113: pushFromStack 3
1114: pushFromStack 14
1115: pushFromStack 4
1116: traceCallStarts (3 arguments)
1117: pushConstant inline True
1118: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1119: pushFromStack 8
1120: pushFromStack 6
1121: pushFromStack 3
1122: pushFromStack 3
1123: call with 2 arguments
1124: pushFromStack 6
1125: createFunction with 0 arguments capturing 0 starting at ip-1049
1126: pushConstant inline builtinIfElse
1127: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1128: pushFromStack 1
1129: pushFromStack 5
1130: pushFromStack 2
1131: pushFromStack 5
1132: pushFromStack 9
1133: call with 3 arguments
1134: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1135: pushConstant <replaced address 754f758090f20bd1> { 0 arguments (capturing nothing) → ip-1035 }
1136: pushFromStack 4
1137: pushFromStack 3
1138: pushFromStack 3
1139: pushFromStack 3
1140: pushFromStack 12
1141: call with 3 arguments
1142: pushFromStack 21
1143: createFunction with 0 arguments capturing 0 starting at ip-1059
1144: pushFromStack 7
1145: pushFromStack 10
1146: pushFromStack 6
1147: pushFromStack 3
1148: pushFromStack 15
1149: call with 3 arguments
1150: traceCallEnds without return value
1151: pushFromStack 23
1152: pushFromStack 26
1153: pushFromStack 24
1154: call with 1 argument
1155: pushFromStack 21
1156: pushFromStack 1
1157: pushFromStack 22
1158: pushFromStack 22
1159: call with 2 arguments
1160: pushFromStack 0
1161: dup by 3
1162: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
1163: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
1164: pushFromStack 1
1165: pushFromStack 20
1166: pushFromStack 4
1167: pushFromStack 3
1168: pushFromStack 10
1169: pushFromStack 4
1170: traceCallStarts (3 arguments)
1171: pushFromStack 24
1172: pushFromStack 3
1173: pushFromStack 19
1174: pushFromStack 19
1175: call with 2 arguments
1176: pushFromStack 3
1177: createFunction with 0 arguments capturing 0 starting at ip-1067
1178: pushFromStack 15
1179: pushFromStack 3
1180: pushFromStack 16
1181: pushFromStack 3
1182: pushFromStack 23
1183: call with 3 arguments
1184: pushConstant <replaced address afb8c182a2e055e4> { 0 arguments (capturing nothing) → ip-1042 }
1185: pushFromStack 17
1186: pushFromStack 2
1187: pushFromStack 16
1188: pushFromStack 3
1189: pushFromStack 25
1190: call with 3 arguments
1191: pushFromStack 12
1192: createFunction with 0 arguments capturing 0 starting at ip-1077
1193: pushFromStack 20
1194: pushFromStack 7
1195: pushFromStack 19
1196: pushFromStack 3
1197: pushFromStack 28
1198: call with 3 arguments
1199: traceCallEnds without return value
1200: pushConstant inline builtinIntCompareTo
1201: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
1202: pushFromStack 18
1203: drop
1204: pushFromStack 15
1205: drop
1206: pushFromStack 5
1207: drop
1208: pushFromStack 2
1209: drop
1210: pushFromStack 1
1211: pushFromStack 42
1212: pushFromStack 42
1213: pushFromStack 3
1214: tailCall with 42 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
1215: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1216: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
1217: pushFromStack 1
1218: pushFromStack 1
1219: panic
1220: popMultipleBelowTop 3
1221: return
# anonymous:$generated::needs:isConditionTrue:else
1222: pushFromStack 1
1223: dup by 1
1224: pushConstant inline builtinEquals
1225: pushConstant inline False
1226: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1227: pushFromStack 2
1228: pushFromStack 5
1229: pushFromStack 3
1230: pushFromStack 3
1231: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1232: pushFromStack 1
1233: dup by 1
1234: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
1235: pushFromStack 0
1236: pushFromStack 3
1237: panic
1238: popMultipleBelowTop 3
1239: return
# Builtins::intParse
1240: pushFromStack 1
1241: dup by 1
1242: pushFromStack 0
1243: dup by 2
1244: pushConstant inline builtinTypeOf
1245: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1246: pushFromStack 1
1247: pushFromStack 4
1248: pushFromStack 2
1249: call with 1 argument
1250: pushConstant inline builtinEquals
1251: pushConstant inline Text
1252: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1253: pushFromStack 2
1254: pushFromStack 4
1255: pushFromStack 3
1256: pushFromStack 3
1257: call with 2 arguments
1258: pushFromStack 0
1259: dup by 3
1260: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
1261: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1262: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
1263: pushFromStack 2
1264: pushFromStack 2
1265: pushFromStack 5
1266: pushFromStack 3
1267: pushFromStack 14
1268: pushFromStack 4
1269: traceCallStarts (3 arguments)
1270: pushConstant inline True
1271: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1272: pushFromStack 8
1273: pushFromStack 6
1274: pushFromStack 3
1275: pushFromStack 3
1276: call with 2 arguments
1277: pushFromStack 6
1278: createFunction with 0 arguments capturing 0 starting at ip-1222
1279: pushConstant inline builtinIfElse
1280: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1281: pushFromStack 1
1282: pushFromStack 5
1283: pushFromStack 2
1284: pushFromStack 5
1285: pushFromStack 9
1286: call with 3 arguments
1287: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1288: pushConstant <replaced address 35219c8edbd127ed> { 0 arguments (capturing nothing) → ip-1215 }
1289: pushFromStack 4
1290: pushFromStack 3
1291: pushFromStack 3
1292: pushFromStack 3
1293: pushFromStack 12
1294: call with 3 arguments
1295: pushFromStack 21
1296: createFunction with 0 arguments capturing 0 starting at ip-1232
1297: pushFromStack 7
1298: pushFromStack 10
1299: pushFromStack 6
1300: pushFromStack 3
1301: pushFromStack 15
1302: call with 3 arguments
1303: traceCallEnds without return value
1304: pushConstant inline builtinIntParse
1305: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
1306: pushFromStack 5
1307: drop
1308: pushFromStack 2
1309: drop
1310: pushFromStack 1
1311: pushFromStack 28
1312: pushFromStack 2
1313: tailCall with 28 locals and 1 argument
# anonymous:$generated::needs:isConditionBool:else
1314: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1315: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
1316: pushFromStack 1
1317: pushFromStack 1
1318: panic
1319: popMultipleBelowTop 3
1320: return
1321: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1322: pushConstant <replaced address 4e250f8543910bba> Builtins::intSubtract:11
1323: pushFromStack 1
1324: pushFromStack 1
1325: panic
1326: popMultipleBelowTop 3
1327: return
# anonymous:$generated::needs:isConditionTrue:else
1328: pushFromStack 1
1329: dup by 1
1330: pushConstant inline builtinEquals
1331: pushConstant inline False
1332: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1333: pushFromStack 2
1334: pushFromStack 5
1335: pushFromStack 3
1336: pushFromStack 3
1337: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1338: pushFromStack 1
1339: dup by 1
1340: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
1341: pushFromStack 0
1342: pushFromStack 3
1343: panic
1344: popMultipleBelowTop 3
1345: return
# anonymous:$generated::needs:isConditionTrue:else
1346: pushFromStack 1
1347: dup by 1
1348: pushConstant inline builtinEquals
1349: pushConstant inline False
1350: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1351: pushFromStack 2
1352: pushFromStack 5
1353: pushFromStack 3
1354: pushFromStack 3
1355: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1356: pushFromStack 1
1357: dup by 1
1358: pushConstant <replaced address 3f1dcd30453d2689> "`subtrahend | typeIs Int` was not satisfied"
1359: pushFromStack 0
1360: pushFromStack 3
1361: panic
1362: popMultipleBelowTop 3
1363: return
# Builtins::intSubtract
1364: pushFromStack 2
1365: dup by 1
1366: pushFromStack 1
1367: dup by 1
1368: pushFromStack 0
1369: dup by 4
1370: pushConstant inline builtinTypeOf
1371: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1372: pushFromStack 1
1373: pushFromStack 5
1374: pushFromStack 2
1375: call with 1 argument
1376: pushConstant inline builtinEquals
1377: pushConstant inline Int
1378: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1379: pushFromStack 2
1380: pushFromStack 4
1381: pushFromStack 3
1382: pushFromStack 3
1383: call with 2 arguments
1384: pushFromStack 0
1385: dup by 3
1386: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
1387: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1388: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
1389: pushFromStack 2
1390: pushFromStack 2
1391: pushFromStack 5
1392: pushFromStack 3
1393: pushFromStack 14
1394: pushFromStack 4
1395: traceCallStarts (3 arguments)
1396: pushConstant inline True
1397: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1398: pushFromStack 8
1399: pushFromStack 6
1400: pushFromStack 3
1401: pushFromStack 3
1402: call with 2 arguments
1403: pushFromStack 6
1404: createFunction with 0 arguments capturing 0 starting at ip-1328
1405: pushConstant inline builtinIfElse
1406: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1407: pushFromStack 1
1408: pushFromStack 5
1409: pushFromStack 2
1410: pushFromStack 5
1411: pushFromStack 9
1412: call with 3 arguments
1413: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1414: pushConstant <replaced address 4ac325cdf2f66a34> { 0 arguments (capturing nothing) → ip-1314 }
1415: pushFromStack 4
1416: pushFromStack 3
1417: pushFromStack 3
1418: pushFromStack 3
1419: pushFromStack 12
1420: call with 3 arguments
1421: pushFromStack 21
1422: createFunction with 0 arguments capturing 0 starting at ip-1338
1423: pushFromStack 7
1424: pushFromStack 10
1425: pushFromStack 6
1426: pushFromStack 3
1427: pushFromStack 15
1428: call with 3 arguments
1429: traceCallEnds without return value
1430: pushFromStack 23
1431: pushFromStack 26
1432: pushFromStack 24
1433: call with 1 argument
1434: pushFromStack 21
1435: pushFromStack 1
1436: pushFromStack 22
1437: pushFromStack 22
1438: call with 2 arguments
1439: pushFromStack 0
1440: dup by 3
1441: pushConstant <replaced address 4e250f8543910bba> Builtins::intSubtract:11
1442: pushConstant <replaced address 3f1dcd30453d2689> "`subtrahend | typeIs Int` was not satisfied"
1443: pushFromStack 1
1444: pushFromStack 20
1445: pushFromStack 4
1446: pushFromStack 3
1447: pushFromStack 10
1448: pushFromStack 4
1449: traceCallStarts (3 arguments)
1450: pushFromStack 24
1451: pushFromStack 3
1452: pushFromStack 19
1453: pushFromStack 19
1454: call with 2 arguments
1455: pushFromStack 3
1456: createFunction with 0 arguments capturing 0 starting at ip-1346
1457: pushFromStack 15
1458: pushFromStack 3
1459: pushFromStack 16
1460: pushFromStack 3
1461: pushFromStack 23
1462: call with 3 arguments
1463: pushConstant <replaced address cb1f78aca16cde9b> { 0 arguments (capturing nothing) → ip-1321 }
1464: pushFromStack 17
1465: pushFromStack 2
1466: pushFromStack 16
1467: pushFromStack 3
1468: pushFromStack 25
1469: call with 3 arguments
1470: pushFromStack 12
1471: createFunction with 0 arguments capturing 0 starting at ip-1356
1472: pushFromStack 20
1473: pushFromStack 7
1474: pushFromStack 19
1475: pushFromStack 3
1476: pushFromStack 28
1477: call with 3 arguments
1478: traceCallEnds without return value
1479: pushConstant inline builtinIntSubtract
1480: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
1481: pushFromStack 18
1482: drop
1483: pushFromStack 15
1484: drop
1485: pushFromStack 5
1486: drop
1487: pushFromStack 2
1488: drop
1489: pushFromStack 1
1490: pushFromStack 42
1491: pushFromStack 42
1492: pushFromStack 3
1493: tailCall with 42 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
1494: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1495: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
1496: pushFromStack 1
1497: pushFromStack 1
1498: panic
1499: popMultipleBelowTop 3
1500: return
1501: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1502: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
1503: pushFromStack 1
1504: pushFromStack 1
1505: panic
1506: popMultipleBelowTop 3
1507: return
# anonymous:$generated::needs:isConditionTrue:else
1508: pushFromStack 1
1509: dup by 1
1510: pushConstant inline builtinEquals
1511: pushConstant inline False
1512: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1513: pushFromStack 2
1514: pushFromStack 5
1515: pushFromStack 3
1516: pushFromStack 3
1517: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1518: pushFromStack 1
1519: dup by 1
1520: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
1521: pushFromStack 0
1522: pushFromStack 3
1523: panic
1524: popMultipleBelowTop 3
1525: return
# anonymous:$generated::needs:isConditionTrue:else
1526: pushFromStack 1
1527: dup by 1
1528: pushConstant inline builtinEquals
1529: pushConstant inline False
1530: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1531: pushFromStack 2
1532: pushFromStack 5
1533: pushFromStack 3
1534: pushFromStack 3
1535: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1536: pushFromStack 1
1537: dup by 1
1538: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
1539: pushFromStack 0
1540: pushFromStack 3
1541: panic
1542: popMultipleBelowTop 3
1543: return
# Builtins::structGet
1544: pushFromStack 2
1545: dup by 2
1546: pushFromStack 1
1547: dup by 1
1548: pushFromStack 0
1549: dup by 4
1550: pushConstant inline builtinTypeOf
1551: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1552: pushFromStack 1
1553: pushFromStack 5
1554: pushFromStack 2
1555: call with 1 argument
1556: pushConstant inline builtinEquals
1557: pushConstant inline Struct
1558: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1559: pushFromStack 2
1560: pushFromStack 4
1561: pushFromStack 3
1562: pushFromStack 3
1563: call with 2 arguments
1564: pushFromStack 0
1565: dup by 3
1566: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
1567: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1568: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
1569: pushFromStack 2
1570: pushFromStack 2
1571: pushFromStack 5
1572: pushFromStack 3
1573: pushFromStack 14
1574: pushFromStack 4
1575: traceCallStarts (3 arguments)
1576: pushConstant inline True
1577: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1578: pushFromStack 8
1579: pushFromStack 6
1580: pushFromStack 3
1581: pushFromStack 3
1582: call with 2 arguments
1583: pushFromStack 6
1584: createFunction with 0 arguments capturing 0 starting at ip-1508
1585: pushConstant inline builtinIfElse
1586: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1587: pushFromStack 1
1588: pushFromStack 5
1589: pushFromStack 2
1590: pushFromStack 5
1591: pushFromStack 9
1592: call with 3 arguments
1593: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1594: pushConstant <replaced address 4c347148acd03bd0> { 0 arguments (capturing nothing) → ip-1494 }
1595: pushFromStack 4
1596: pushFromStack 3
1597: pushFromStack 3
1598: pushFromStack 3
1599: pushFromStack 12
1600: call with 3 arguments
1601: pushFromStack 21
1602: createFunction with 0 arguments capturing 0 starting at ip-1518
1603: pushFromStack 7
1604: pushFromStack 10
1605: pushFromStack 6
1606: pushFromStack 3
1607: pushFromStack 15
1608: call with 3 arguments
1609: traceCallEnds without return value
1610: pushConstant inline builtinStructHasKey
1611: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
1612: pushFromStack 1
1613: pushFromStack 29
1614: pushFromStack 29
1615: pushFromStack 3
1616: call with 2 arguments
1617: pushFromStack 0
1618: dup by 3
1619: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
1620: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
1621: pushFromStack 1
1622: pushFromStack 21
1623: pushFromStack 4
1624: pushFromStack 3
1625: pushFromStack 11
1626: pushFromStack 4
1627: traceCallStarts (3 arguments)
1628: pushFromStack 25
1629: pushFromStack 3
1630: pushFromStack 20
1631: pushFromStack 20
1632: call with 2 arguments
1633: pushFromStack 3
1634: createFunction with 0 arguments capturing 0 starting at ip-1526
1635: pushFromStack 16
1636: pushFromStack 3
1637: pushFromStack 17
1638: pushFromStack 3
1639: pushFromStack 24
1640: call with 3 arguments
1641: pushConstant <replaced address cc90c4275b46b037> { 0 arguments (capturing nothing) → ip-1501 }
1642: pushFromStack 18
1643: pushFromStack 2
1644: pushFromStack 17
1645: pushFromStack 3
1646: pushFromStack 26
1647: call with 3 arguments
1648: pushFromStack 13
1649: createFunction with 0 arguments capturing 0 starting at ip-1536
1650: pushFromStack 21
1651: pushFromStack 7
1652: pushFromStack 20
1653: pushFromStack 3
1654: pushFromStack 29
1655: call with 3 arguments
1656: traceCallEnds without return value
1657: pushConstant inline builtinStructGet
1658: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
1659: pushFromStack 19
1660: drop
1661: pushFromStack 16
1662: drop
1663: pushFromStack 5
1664: drop
1665: pushFromStack 2
1666: drop
1667: pushFromStack 1
1668: pushFromStack 43
1669: pushFromStack 43
1670: pushFromStack 3
1671: tailCall with 43 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
1672: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1673: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
1674: pushFromStack 1
1675: pushFromStack 1
1676: panic
1677: popMultipleBelowTop 3
1678: return
1679: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1680: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
1681: pushFromStack 1
1682: pushFromStack 1
1683: panic
1684: popMultipleBelowTop 3
1685: return
# anonymous:$generated::needs:isConditionTrue:else
1686: pushFromStack 1
1687: dup by 1
1688: pushConstant inline builtinEquals
1689: pushConstant inline False
1690: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1691: pushFromStack 2
1692: pushFromStack 5
1693: pushFromStack 3
1694: pushFromStack 3
1695: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1696: pushFromStack 1
1697: dup by 1
1698: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
1699: pushFromStack 0
1700: pushFromStack 3
1701: panic
1702: popMultipleBelowTop 3
1703: return
# anonymous:$generated::needs:isConditionTrue:else
1704: pushFromStack 1
1705: dup by 1
1706: pushConstant inline builtinEquals
1707: pushConstant inline False
1708: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1709: pushFromStack 2
1710: pushFromStack 5
1711: pushFromStack 3
1712: pushFromStack 3
1713: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1714: pushFromStack 1
1715: dup by 1
1716: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
1717: pushFromStack 0
1718: pushFromStack 3
1719: panic
1720: popMultipleBelowTop 3
1721: return
# Builtins::tagGetValue
1722: pushFromStack 1
1723: dup by 2
1724: pushFromStack 0
1725: dup by 4
1726: pushConstant inline builtinTypeOf
1727: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1728: pushFromStack 1
1729: pushFromStack 4
1730: pushFromStack 2
1731: call with 1 argument
1732: pushConstant inline builtinEquals
1733: pushConstant inline Tag
1734: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1735: pushFromStack 2
1736: pushFromStack 4
1737: pushFromStack 3
1738: pushFromStack 3
1739: call with 2 arguments
1740: pushFromStack 0
1741: dup by 3
1742: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
1743: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1744: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
1745: pushFromStack 2
1746: pushFromStack 2
1747: pushFromStack 5
1748: pushFromStack 3
1749: pushFromStack 14
1750: pushFromStack 4
1751: traceCallStarts (3 arguments)
1752: pushConstant inline True
1753: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1754: pushFromStack 8
1755: pushFromStack 6
1756: pushFromStack 3
1757: pushFromStack 3
1758: call with 2 arguments
1759: pushFromStack 6
1760: createFunction with 0 arguments capturing 0 starting at ip-1686
1761: pushConstant inline builtinIfElse
1762: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1763: pushFromStack 1
1764: pushFromStack 5
1765: pushFromStack 2
1766: pushFromStack 5
1767: pushFromStack 9
1768: call with 3 arguments
1769: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1770: pushConstant <replaced address 7eb081198d2e8ae6> { 0 arguments (capturing nothing) → ip-1672 }
1771: pushFromStack 4
1772: pushFromStack 3
1773: pushFromStack 3
1774: pushFromStack 3
1775: pushFromStack 12
1776: call with 3 arguments
1777: pushFromStack 21
1778: createFunction with 0 arguments capturing 0 starting at ip-1696
1779: pushFromStack 7
1780: pushFromStack 10
1781: pushFromStack 6
1782: pushFromStack 3
1783: pushFromStack 15
1784: call with 3 arguments
1785: traceCallEnds without return value
1786: pushConstant inline builtinTagHasValue
1787: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
1788: pushFromStack 1
1789: pushFromStack 28
1790: pushFromStack 2
1791: call with 1 argument
1792: pushFromStack 0
1793: dup by 3
1794: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
1795: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
1796: pushFromStack 1
1797: pushFromStack 21
1798: pushFromStack 4
1799: pushFromStack 3
1800: pushFromStack 11
1801: pushFromStack 4
1802: traceCallStarts (3 arguments)
1803: pushFromStack 25
1804: pushFromStack 3
1805: pushFromStack 20
1806: pushFromStack 20
1807: call with 2 arguments
1808: pushFromStack 3
1809: createFunction with 0 arguments capturing 0 starting at ip-1704
1810: pushFromStack 16
1811: pushFromStack 3
1812: pushFromStack 17
1813: pushFromStack 3
1814: pushFromStack 24
1815: call with 3 arguments
1816: pushConstant <replaced address e740b885c98455fd> { 0 arguments (capturing nothing) → ip-1679 }
1817: pushFromStack 18
1818: pushFromStack 2
1819: pushFromStack 17
1820: pushFromStack 3
1821: pushFromStack 26
1822: call with 3 arguments
1823: pushFromStack 13
1824: createFunction with 0 arguments capturing 0 starting at ip-1714
1825: pushFromStack 21
1826: pushFromStack 7
1827: pushFromStack 20
1828: pushFromStack 3
1829: pushFromStack 29
1830: call with 3 arguments
1831: traceCallEnds without return value
1832: pushConstant inline builtinTagGetValue
1833: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
1834: pushFromStack 19
1835: drop
1836: pushFromStack 16
1837: drop
1838: pushFromStack 5
1839: drop
1840: pushFromStack 2
1841: drop
1842: pushFromStack 1
1843: pushFromStack 42
1844: pushFromStack 2
1845: tailCall with 42 locals and 1 argument
# anonymous:$generated::needs:condition:else
1846: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1847: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
1848: pushFromStack 1
1849: pushFromStack 1
1850: panic
1851: popMultipleBelowTop 3
1852: return
1853: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
1854: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
1855: pushFromStack 1
1856: pushFromStack 1
1857: panic
1858: popMultipleBelowTop 3
1859: return
# anonymous:$generated::needs:isConditionTrue:else
1860: pushFromStack 1
1861: dup by 1
1862: pushConstant inline builtinEquals
1863: pushConstant inline False
1864: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1865: pushFromStack 2
1866: pushFromStack 5
1867: pushFromStack 3
1868: pushFromStack 3
1869: tailCall with 5 locals and 2 arguments
# Core:function:is1:9
1870: pushFromStack 1
1871: dup by 3
1872: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
1873: pushConstant <replaced address 4eaaa90b93950b2c> { 1 argument (capturing nothing) → ip-140 }
1874: pushFromStack 1
1875: pushFromStack 1
1876: pushFromStack 5
1877: pushFromStack 2
1878: traceCallStarts (1 argument)
1879: pushConstant inline builtinTypeOf
1880: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1881: pushFromStack 1
1882: pushFromStack 6
1883: pushFromStack 2
1884: call with 1 argument
1885: pushConstant inline builtinEquals
1886: pushConstant inline Function
1887: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1888: pushFromStack 2
1889: pushFromStack 4
1890: pushFromStack 3
1891: pushFromStack 3
1892: call with 2 arguments
1893: pushFromStack 0
1894: dup by 3
1895: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
1896: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1897: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1898: pushFromStack 2
1899: pushFromStack 2
1900: pushFromStack 5
1901: pushFromStack 3
1902: pushFromStack 15
1903: pushFromStack 4
1904: traceCallStarts (3 arguments)
1905: pushConstant inline True
1906: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1907: pushFromStack 8
1908: pushFromStack 6
1909: pushFromStack 3
1910: pushFromStack 3
1911: call with 2 arguments
1912: pushFromStack 6
1913: createFunction with 0 arguments capturing 0 starting at ip-1860
1914: pushConstant inline builtinIfElse
1915: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1916: pushFromStack 1
1917: pushFromStack 5
1918: pushFromStack 2
1919: pushFromStack 5
1920: pushFromStack 9
1921: call with 3 arguments
1922: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1923: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
1924: pushFromStack 4
1925: pushFromStack 3
1926: pushFromStack 3
1927: pushFromStack 3
1928: pushFromStack 12
1929: call with 3 arguments
1930: pushConstant <replaced address 161fa8b20ca41330> { 0 arguments (capturing nothing) → ip-1846 }
1931: pushFromStack 6
1932: pushFromStack 9
1933: pushFromStack 5
1934: pushFromStack 3
1935: pushFromStack 14
1936: call with 3 arguments
1937: traceCallEnds without return value
1938: pushConstant inline builtinGetArgumentCount
1939: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
1940: pushFromStack 1
1941: pushFromStack 29
1942: pushFromStack 2
1943: call with 1 argument
1944: traceCallEnds without return value
1945: pushConstant inline 1
1946: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1947: pushFromStack 7
1948: drop
1949: pushFromStack 5
1950: drop
1951: pushFromStack 24
1952: pushFromStack 3
1953: pushFromStack 3
1954: pushFromStack 3
1955: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
1956: pushFromStack 1
1957: dup by 1
1958: pushFromStack 1
1959: popMultipleBelowTop 2
1960: return
# Builtins::ifElse:1:isMatch:else
1961: pushFromStack 1
1962: dup by 1
1963: pushConstant inline builtinEquals
1964: pushConstant inline False
1965: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
1966: pushFromStack 2
1967: pushFromStack 2
1968: pushFromStack 6
1969: pushFromStack 3
1970: call with 2 arguments
1971: pushConstant inline builtinIfElse
1972: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
1973: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1974: pushFromStack 2
1975: pushFromStack 4
1976: pushFromStack 3
1977: pushFromStack 3
1978: pushFromStack 8
1979: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
1980: pushFromStack 1
1981: dup by 1
1982: pushConstant inline builtinEquals
1983: pushConstant inline False
1984: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1985: pushFromStack 2
1986: pushFromStack 5
1987: pushFromStack 3
1988: pushFromStack 3
1989: tailCall with 5 locals and 2 arguments
# Core:function:is1
1990: pushFromStack 1
1991: dup by 1
1992: pushConstant inline builtinTypeOf
1993: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
1994: pushFromStack 1
1995: pushFromStack 4
1996: pushFromStack 2
1997: call with 1 argument
1998: pushConstant inline builtinEquals
1999: pushConstant inline Function
2000: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2001: pushFromStack 2
2002: pushFromStack 4
2003: pushFromStack 3
2004: pushFromStack 3
2005: call with 2 arguments
2006: pushFromStack 0
2007: dup by 4
2008: pushFromStack 8
2009: createFunction with 0 arguments capturing 0 starting at ip-1870
2010: pushFromStack 0
2011: dup by 2
2012: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
2013: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
2014: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
2015: pushFromStack 2
2016: pushFromStack 2
2017: pushFromStack 7
2018: pushFromStack 6
2019: pushFromStack 4
2020: pushFromStack 4
2021: traceCallStarts (3 arguments)
2022: pushConstant inline True
2023: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
2024: pushFromStack 10
2025: pushFromStack 2
2026: pushFromStack 9
2027: pushFromStack 3
2028: call with 2 arguments
2029: pushConstant inline builtinIfElse
2030: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
2031: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2032: pushFromStack 2
2033: pushFromStack 4
2034: pushFromStack 3
2035: pushFromStack 3
2036: pushFromStack 8
2037: call with 3 arguments
2038: pushFromStack 0
2039: dup by 1
2040: pushConstant inline builtinTagWithoutValue
2041: pushFromStack 0
2042: pushFromStack 2
2043: pushFromStack 8
2044: call with 1 argument
2045: pushConstant inline Match
2046: pushFromStack 18
2047: pushFromStack 2
2048: pushFromStack 2
2049: pushFromStack 11
2050: call with 2 arguments
2051: pushFromStack 4
2052: createFunction with 0 arguments capturing 0 starting at ip-1956
2053: pushFromStack 18
2054: createFunction with 0 arguments capturing 0 starting at ip-1961
2055: pushFromStack 11
2056: pushFromStack 5
2057: pushFromStack 4
2058: pushFromStack 3
2059: pushFromStack 17
2060: call with 3 arguments
2061: pushFromStack 8
2062: pushFromStack 1
2063: pushFromStack 16
2064: call with 1 argument
2065: pushFromStack 25
2066: pushFromStack 1
2067: pushFromStack 9
2068: pushFromStack 18
2069: call with 2 arguments
2070: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2071: pushFromStack 15
2072: pushFromStack 2
2073: pushFromStack 2
2074: pushFromStack 22
2075: pushFromStack 21
2076: call with 3 arguments
2077: pushFromStack 0
2078: dup by 3
2079: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
2080: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2081: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
2082: pushFromStack 2
2083: pushFromStack 2
2084: pushFromStack 5
2085: pushFromStack 3
2086: pushFromStack 29
2087: pushFromStack 4
2088: traceCallStarts (3 arguments)
2089: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2090: pushFromStack 32
2091: pushFromStack 5
2092: pushFromStack 25
2093: pushFromStack 3
2094: call with 2 arguments
2095: pushFromStack 5
2096: createFunction with 0 arguments capturing 0 starting at ip-1980
2097: pushFromStack 23
2098: pushFromStack 3
2099: pushFromStack 10
2100: pushFromStack 3
2101: pushFromStack 7
2102: call with 3 arguments
2103: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
2104: pushConstant <replaced address bbfd050c570524d0> { 0 arguments (capturing nothing) → ip-214 }
2105: pushFromStack 26
2106: pushFromStack 3
2107: pushFromStack 3
2108: pushFromStack 3
2109: pushFromStack 10
2110: call with 3 arguments
2111: pushConstant <replaced address 967bfb90bb1a8797> { 0 arguments (capturing nothing) → ip-1853 }
2112: pushFromStack 28
2113: pushFromStack 7
2114: pushFromStack 5
2115: pushFromStack 3
2116: pushFromStack 12
2117: call with 3 arguments
2118: traceCallEnds without return value
2119: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
2120: pushFromStack 0
2121: pushFromStack 31
2122: pushFromStack 22
2123: pushFromStack 40
2124: pushFromStack 38
2125: pushFromStack 4
2126: traceCallStarts (3 arguments)
2127: pushFromStack 30
2128: pushFromStack 21
2129: pushFromStack 39
2130: pushFromStack 37
2131: pushFromStack 4
2132: call with 3 arguments
2133: traceCallEnds without return value
2134: traceCallEnds without return value
2135: pushFromStack 4
2136: drop
2137: pushFromStack 2
2138: drop
2139: pushFromStack 0
2140: popMultipleBelowTop 49
2141: return
# Core:result:is:1:equals:then
2142: pushFromStack 1
2143: dup by 1
2144: pushConstant inline builtinTagGetValue
2145: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2146: pushFromStack 1
2147: pushFromStack 4
2148: pushFromStack 2
2149: call with 1 argument
2150: pushFromStack 0
2151: createList 1
2152: pushFromStack 0
2153: createTag Match
2154: popMultipleBelowTop 6
2155: return
2156: pushFromStack 1
2157: dup by 2
2158: pushConstant inline builtinTagHasValue
2159: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2160: pushFromStack 1
2161: pushFromStack 4
2162: pushFromStack 2
2163: call with 1 argument
2164: pushConstant inline builtinEquals
2165: pushConstant inline True
2166: pushFromStack 1
2167: pushFromStack 1
2168: pushFromStack 4
2169: pushFromStack 6
2170: call with 2 arguments
2171: pushFromStack 7
2172: createFunction with 0 arguments capturing 0 starting at ip-2142
2173: pushConstant inline builtinIfElse
2174: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2175: pushFromStack 1
2176: pushFromStack 5
2177: pushFromStack 4
2178: pushFromStack 3
2179: pushFromStack 12
2180: tailCall with 12 locals and 3 arguments
2181: pushFromStack 1
2182: dup by 2
2183: pushConstant inline builtinTagWithoutValue
2184: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2185: pushFromStack 1
2186: pushFromStack 4
2187: pushFromStack 2
2188: call with 1 argument
2189: pushConstant inline builtinEquals
2190: pushConstant inline Ok
2191: pushFromStack 1
2192: pushFromStack 1
2193: pushFromStack 4
2194: pushFromStack 6
2195: call with 2 arguments
2196: pushFromStack 7
2197: createFunction with 0 arguments capturing 0 starting at ip-2156
2198: pushConstant inline builtinIfElse
2199: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2200: pushFromStack 1
2201: pushFromStack 5
2202: pushFromStack 4
2203: pushFromStack 3
2204: pushFromStack 12
2205: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
2206: pushFromStack 1
2207: dup by 1
2208: pushFromStack 1
2209: popMultipleBelowTop 2
2210: return
# Core:result:is:1:equals:then
2211: pushFromStack 1
2212: dup by 1
2213: pushConstant inline builtinTagGetValue
2214: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2215: pushFromStack 1
2216: pushFromStack 4
2217: pushFromStack 2
2218: call with 1 argument
2219: pushFromStack 0
2220: createList 1
2221: pushFromStack 0
2222: createTag Match
2223: popMultipleBelowTop 6
2224: return
2225: pushFromStack 1
2226: dup by 2
2227: pushConstant inline builtinTagHasValue
2228: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2229: pushFromStack 1
2230: pushFromStack 4
2231: pushFromStack 2
2232: call with 1 argument
2233: pushConstant inline builtinEquals
2234: pushConstant inline True
2235: pushFromStack 1
2236: pushFromStack 1
2237: pushFromStack 4
2238: pushFromStack 6
2239: call with 2 arguments
2240: pushFromStack 7
2241: createFunction with 0 arguments capturing 0 starting at ip-2211
2242: pushConstant inline builtinIfElse
2243: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2244: pushFromStack 1
2245: pushFromStack 5
2246: pushFromStack 4
2247: pushFromStack 3
2248: pushFromStack 12
2249: tailCall with 12 locals and 3 arguments
2250: pushFromStack 1
2251: dup by 2
2252: pushConstant inline builtinTagWithoutValue
2253: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2254: pushFromStack 1
2255: pushFromStack 4
2256: pushFromStack 2
2257: call with 1 argument
2258: pushConstant inline builtinEquals
2259: pushConstant inline Error
2260: pushFromStack 1
2261: pushFromStack 1
2262: pushFromStack 4
2263: pushFromStack 6
2264: call with 2 arguments
2265: pushFromStack 7
2266: createFunction with 0 arguments capturing 0 starting at ip-2225
2267: pushConstant inline builtinIfElse
2268: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2269: pushFromStack 1
2270: pushFromStack 5
2271: pushFromStack 4
2272: pushFromStack 3
2273: pushFromStack 12
2274: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
2275: pushFromStack 1
2276: dup by 2
2277: pushConstant inline builtinTypeOf
2278: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2279: pushFromStack 1
2280: pushFromStack 4
2281: pushFromStack 2
2282: call with 1 argument
2283: pushConstant inline builtinEquals
2284: pushConstant inline Tag
2285: pushFromStack 1
2286: pushFromStack 1
2287: pushFromStack 4
2288: pushFromStack 6
2289: call with 2 arguments
2290: pushFromStack 7
2291: createFunction with 0 arguments capturing 0 starting at ip-2250
2292: pushConstant inline builtinIfElse
2293: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2294: pushFromStack 1
2295: pushFromStack 5
2296: pushFromStack 4
2297: pushFromStack 3
2298: pushFromStack 12
2299: tailCall with 12 locals and 3 arguments
# Core:result:is
2300: pushFromStack 1
2301: dup by 2
2302: pushConstant inline builtinTypeOf
2303: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2304: pushFromStack 1
2305: pushFromStack 4
2306: pushFromStack 2
2307: call with 1 argument
2308: pushConstant inline builtinEquals
2309: pushConstant inline Tag
2310: pushFromStack 1
2311: pushFromStack 1
2312: pushFromStack 4
2313: pushFromStack 6
2314: call with 2 arguments
2315: pushFromStack 7
2316: createFunction with 0 arguments capturing 0 starting at ip-2181
2317: pushConstant inline builtinIfElse
2318: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2319: pushFromStack 1
2320: pushFromStack 5
2321: pushFromStack 4
2322: pushFromStack 3
2323: pushFromStack 12
2324: call with 3 arguments
2325: pushFromStack 0
2326: dup by 1
2327: pushConstant inline builtinTagWithoutValue
2328: pushFromStack 0
2329: pushFromStack 2
2330: pushFromStack 12
2331: call with 1 argument
2332: pushConstant inline Match
2333: pushFromStack 10
2334: pushFromStack 2
2335: pushFromStack 2
2336: pushFromStack 15
2337: call with 2 arguments
2338: pushFromStack 4
2339: createFunction with 0 arguments capturing 0 starting at ip-2206
2340: pushFromStack 10
2341: createFunction with 0 arguments capturing 0 starting at ip-2275
2342: pushFromStack 10
2343: pushFromStack 5
2344: pushFromStack 4
2345: pushFromStack 3
2346: pushFromStack 21
2347: call with 3 arguments
2348: pushFromStack 8
2349: pushFromStack 1
2350: pushFromStack 20
2351: call with 1 argument
2352: pushFromStack 17
2353: pushFromStack 1
2354: pushFromStack 9
2355: pushFromStack 22
2356: call with 2 arguments
2357: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2358: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
2359: pushFromStack 15
2360: pushFromStack 3
2361: pushFromStack 3
2362: pushFromStack 3
2363: pushFromStack 26
2364: tailCall with 26 locals and 3 arguments
# anonymous:$generated::needs:isConditionBool:else
2365: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
2366: pushConstant <replaced address 0f59d2d5f5f1d623> Core:result:mapOrElse:4
2367: pushFromStack 1
2368: pushFromStack 1
2369: panic
2370: popMultipleBelowTop 3
2371: return
2372: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
2373: pushConstant <replaced address f8465d20e0be15a1> Core:result:mapOrElse:14
2374: pushFromStack 1
2375: pushFromStack 1
2376: panic
2377: popMultipleBelowTop 3
2378: return
2379: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
2380: pushConstant <replaced address 3d80be4020595727> Core:result:mapOrElse:24
2381: pushFromStack 1
2382: pushFromStack 1
2383: panic
2384: popMultipleBelowTop 3
2385: return
# Core:result:mapOrElse:26:2:doesTagHaveValue:then
2386: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
2387: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
2388: pushFromStack 1
2389: pushFromStack 1
2390: panic
2391: popMultipleBelowTop 3
2392: return
# Core:result:mapOrElse:26:2:calleeIsFunction:else
2393: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
2394: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
2395: pushFromStack 1
2396: pushFromStack 1
2397: panic
2398: popMultipleBelowTop 3
2399: return
# Core:result:mapOrElse:26:5:doesTagHaveValue:then
2400: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
2401: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
2402: pushFromStack 1
2403: pushFromStack 1
2404: panic
2405: popMultipleBelowTop 3
2406: return
# Core:result:mapOrElse:26:5:calleeIsFunction:else
2407: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
2408: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
2409: pushFromStack 1
2410: pushFromStack 1
2411: panic
2412: popMultipleBelowTop 3
2413: return
# Core:result:mapOrElse:26:case-1:didNotMatch
2414: pushConstant <replaced address ef5d2e500159f5dd> "No case matched the given expression."
2415: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
2416: pushFromStack 1
2417: pushFromStack 1
2418: panic
2419: popMultipleBelowTop 3
2420: return
# Core:result:is:1:equals:then
2421: pushFromStack 1
2422: dup by 1
2423: pushConstant inline builtinTagGetValue
2424: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2425: pushFromStack 1
2426: pushFromStack 4
2427: pushFromStack 2
2428: call with 1 argument
2429: pushFromStack 0
2430: createList 1
2431: pushFromStack 0
2432: createTag Match
2433: popMultipleBelowTop 6
2434: return
2435: pushFromStack 1
2436: dup by 2
2437: pushConstant inline builtinTagHasValue
2438: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2439: pushFromStack 1
2440: pushFromStack 4
2441: pushFromStack 2
2442: call with 1 argument
2443: pushConstant inline builtinEquals
2444: pushConstant inline True
2445: pushFromStack 1
2446: pushFromStack 1
2447: pushFromStack 4
2448: pushFromStack 6
2449: call with 2 arguments
2450: pushFromStack 7
2451: createFunction with 0 arguments capturing 0 starting at ip-2421
2452: pushConstant inline builtinIfElse
2453: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2454: pushFromStack 1
2455: pushFromStack 5
2456: pushFromStack 4
2457: pushFromStack 3
2458: pushFromStack 12
2459: tailCall with 12 locals and 3 arguments
2460: pushFromStack 1
2461: dup by 2
2462: pushConstant inline builtinTagWithoutValue
2463: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2464: pushFromStack 1
2465: pushFromStack 4
2466: pushFromStack 2
2467: call with 1 argument
2468: pushConstant inline builtinEquals
2469: pushConstant inline Ok
2470: pushFromStack 1
2471: pushFromStack 1
2472: pushFromStack 4
2473: pushFromStack 6
2474: call with 2 arguments
2475: pushFromStack 7
2476: createFunction with 0 arguments capturing 0 starting at ip-2435
2477: pushConstant inline builtinIfElse
2478: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2479: pushFromStack 1
2480: pushFromStack 5
2481: pushFromStack 4
2482: pushFromStack 3
2483: pushFromStack 12
2484: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
2485: pushFromStack 1
2486: dup by 1
2487: pushFromStack 1
2488: popMultipleBelowTop 2
2489: return
# Core:result:is:1:equals:then
2490: pushFromStack 1
2491: dup by 1
2492: pushConstant inline builtinTagGetValue
2493: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2494: pushFromStack 1
2495: pushFromStack 4
2496: pushFromStack 2
2497: call with 1 argument
2498: pushFromStack 0
2499: createList 1
2500: pushFromStack 0
2501: createTag Match
2502: popMultipleBelowTop 6
2503: return
2504: pushFromStack 1
2505: dup by 2
2506: pushConstant inline builtinTagHasValue
2507: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2508: pushFromStack 1
2509: pushFromStack 4
2510: pushFromStack 2
2511: call with 1 argument
2512: pushConstant inline builtinEquals
2513: pushConstant inline True
2514: pushFromStack 1
2515: pushFromStack 1
2516: pushFromStack 4
2517: pushFromStack 6
2518: call with 2 arguments
2519: pushFromStack 7
2520: createFunction with 0 arguments capturing 0 starting at ip-2490
2521: pushConstant inline builtinIfElse
2522: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2523: pushFromStack 1
2524: pushFromStack 5
2525: pushFromStack 4
2526: pushFromStack 3
2527: pushFromStack 12
2528: tailCall with 12 locals and 3 arguments
2529: pushFromStack 1
2530: dup by 2
2531: pushConstant inline builtinTagWithoutValue
2532: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2533: pushFromStack 1
2534: pushFromStack 4
2535: pushFromStack 2
2536: call with 1 argument
2537: pushConstant inline builtinEquals
2538: pushConstant inline Error
2539: pushFromStack 1
2540: pushFromStack 1
2541: pushFromStack 4
2542: pushFromStack 6
2543: call with 2 arguments
2544: pushFromStack 7
2545: createFunction with 0 arguments capturing 0 starting at ip-2504
2546: pushConstant inline builtinIfElse
2547: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2548: pushFromStack 1
2549: pushFromStack 5
2550: pushFromStack 4
2551: pushFromStack 3
2552: pushFromStack 12
2553: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
2554: pushFromStack 1
2555: dup by 2
2556: pushConstant inline builtinTypeOf
2557: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2558: pushFromStack 1
2559: pushFromStack 4
2560: pushFromStack 2
2561: call with 1 argument
2562: pushConstant inline builtinEquals
2563: pushConstant inline Tag
2564: pushFromStack 1
2565: pushFromStack 1
2566: pushFromStack 4
2567: pushFromStack 6
2568: call with 2 arguments
2569: pushFromStack 7
2570: createFunction with 0 arguments capturing 0 starting at ip-2529
2571: pushConstant inline builtinIfElse
2572: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2573: pushFromStack 1
2574: pushFromStack 5
2575: pushFromStack 4
2576: pushFromStack 3
2577: pushFromStack 12
2578: tailCall with 12 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
2579: pushFromStack 1
2580: dup by 1
2581: pushConstant inline builtinEquals
2582: pushConstant inline False
2583: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2584: pushFromStack 2
2585: pushFromStack 5
2586: pushFromStack 3
2587: pushFromStack 3
2588: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
2589: pushFromStack 1
2590: dup by 1
2591: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
2592: pushFromStack 0
2593: pushFromStack 3
2594: panic
2595: popMultipleBelowTop 3
2596: return
# anonymous:$generated::needs:isConditionTrue:else
2597: pushFromStack 1
2598: dup by 1
2599: pushConstant inline builtinEquals
2600: pushConstant inline False
2601: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2602: pushFromStack 2
2603: pushFromStack 5
2604: pushFromStack 3
2605: pushFromStack 3
2606: tailCall with 5 locals and 2 arguments
# Core:function:is1:9
2607: pushFromStack 1
2608: dup by 3
2609: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
2610: pushConstant <replaced address 4eaaa90b93950b2c> { 1 argument (capturing nothing) → ip-140 }
2611: pushFromStack 1
2612: pushFromStack 1
2613: pushFromStack 5
2614: pushFromStack 2
2615: traceCallStarts (1 argument)
2616: pushConstant inline builtinTypeOf
2617: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2618: pushFromStack 1
2619: pushFromStack 6
2620: pushFromStack 2
2621: call with 1 argument
2622: pushConstant inline builtinEquals
2623: pushConstant inline Function
2624: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2625: pushFromStack 2
2626: pushFromStack 4
2627: pushFromStack 3
2628: pushFromStack 3
2629: call with 2 arguments
2630: pushFromStack 0
2631: dup by 3
2632: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
2633: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2634: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
2635: pushFromStack 2
2636: pushFromStack 2
2637: pushFromStack 5
2638: pushFromStack 3
2639: pushFromStack 15
2640: pushFromStack 4
2641: traceCallStarts (3 arguments)
2642: pushConstant inline True
2643: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2644: pushFromStack 8
2645: pushFromStack 6
2646: pushFromStack 3
2647: pushFromStack 3
2648: call with 2 arguments
2649: pushFromStack 6
2650: createFunction with 0 arguments capturing 0 starting at ip-2597
2651: pushConstant inline builtinIfElse
2652: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2653: pushFromStack 1
2654: pushFromStack 5
2655: pushFromStack 2
2656: pushFromStack 5
2657: pushFromStack 9
2658: call with 3 arguments
2659: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
2660: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
2661: pushFromStack 4
2662: pushFromStack 3
2663: pushFromStack 3
2664: pushFromStack 3
2665: pushFromStack 12
2666: call with 3 arguments
2667: pushConstant <replaced address 161fa8b20ca41330> { 0 arguments (capturing nothing) → ip-1846 }
2668: pushFromStack 6
2669: pushFromStack 9
2670: pushFromStack 5
2671: pushFromStack 3
2672: pushFromStack 14
2673: call with 3 arguments
2674: traceCallEnds without return value
2675: pushConstant inline builtinGetArgumentCount
2676: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
2677: pushFromStack 1
2678: pushFromStack 29
2679: pushFromStack 2
2680: call with 1 argument
2681: traceCallEnds without return value
2682: pushConstant inline 1
2683: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2684: pushFromStack 7
2685: drop
2686: pushFromStack 5
2687: drop
2688: pushFromStack 24
2689: pushFromStack 3
2690: pushFromStack 3
2691: pushFromStack 3
2692: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
2693: pushFromStack 1
2694: dup by 1
2695: pushFromStack 1
2696: popMultipleBelowTop 2
2697: return
# Builtins::ifElse:1:isMatch:else
2698: pushFromStack 1
2699: dup by 1
2700: pushConstant inline builtinEquals
2701: pushConstant inline False
2702: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
2703: pushFromStack 2
2704: pushFromStack 2
2705: pushFromStack 6
2706: pushFromStack 3
2707: call with 2 arguments
2708: pushConstant inline builtinIfElse
2709: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
2710: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2711: pushFromStack 2
2712: pushFromStack 4
2713: pushFromStack 3
2714: pushFromStack 3
2715: pushFromStack 8
2716: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
2717: pushFromStack 1
2718: dup by 1
2719: pushConstant inline builtinEquals
2720: pushConstant inline False
2721: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2722: pushFromStack 2
2723: pushFromStack 5
2724: pushFromStack 3
2725: pushFromStack 3
2726: tailCall with 5 locals and 2 arguments
2727: pushFromStack 1
2728: dup by 1
2729: pushConstant inline builtinEquals
2730: pushConstant inline False
2731: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2732: pushFromStack 2
2733: pushFromStack 5
2734: pushFromStack 3
2735: pushFromStack 3
2736: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
2737: pushFromStack 1
2738: dup by 1
2739: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
2740: pushFromStack 0
2741: pushFromStack 3
2742: panic
2743: popMultipleBelowTop 3
2744: return
# anonymous:$generated::needs:isConditionTrue:else
2745: pushFromStack 1
2746: dup by 1
2747: pushConstant inline builtinEquals
2748: pushConstant inline False
2749: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2750: pushFromStack 2
2751: pushFromStack 5
2752: pushFromStack 3
2753: pushFromStack 3
2754: tailCall with 5 locals and 2 arguments
# Core:function:is1:9
2755: pushFromStack 1
2756: dup by 3
2757: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
2758: pushConstant <replaced address 4eaaa90b93950b2c> { 1 argument (capturing nothing) → ip-140 }
2759: pushFromStack 1
2760: pushFromStack 1
2761: pushFromStack 5
2762: pushFromStack 2
2763: traceCallStarts (1 argument)
2764: pushConstant inline builtinTypeOf
2765: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2766: pushFromStack 1
2767: pushFromStack 6
2768: pushFromStack 2
2769: call with 1 argument
2770: pushConstant inline builtinEquals
2771: pushConstant inline Function
2772: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2773: pushFromStack 2
2774: pushFromStack 4
2775: pushFromStack 3
2776: pushFromStack 3
2777: call with 2 arguments
2778: pushFromStack 0
2779: dup by 3
2780: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
2781: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2782: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
2783: pushFromStack 2
2784: pushFromStack 2
2785: pushFromStack 5
2786: pushFromStack 3
2787: pushFromStack 15
2788: pushFromStack 4
2789: traceCallStarts (3 arguments)
2790: pushConstant inline True
2791: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2792: pushFromStack 8
2793: pushFromStack 6
2794: pushFromStack 3
2795: pushFromStack 3
2796: call with 2 arguments
2797: pushFromStack 6
2798: createFunction with 0 arguments capturing 0 starting at ip-2745
2799: pushConstant inline builtinIfElse
2800: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2801: pushFromStack 1
2802: pushFromStack 5
2803: pushFromStack 2
2804: pushFromStack 5
2805: pushFromStack 9
2806: call with 3 arguments
2807: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
2808: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
2809: pushFromStack 4
2810: pushFromStack 3
2811: pushFromStack 3
2812: pushFromStack 3
2813: pushFromStack 12
2814: call with 3 arguments
2815: pushConstant <replaced address 161fa8b20ca41330> { 0 arguments (capturing nothing) → ip-1846 }
2816: pushFromStack 6
2817: pushFromStack 9
2818: pushFromStack 5
2819: pushFromStack 3
2820: pushFromStack 14
2821: call with 3 arguments
2822: traceCallEnds without return value
2823: pushConstant inline builtinGetArgumentCount
2824: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
2825: pushFromStack 1
2826: pushFromStack 29
2827: pushFromStack 2
2828: call with 1 argument
2829: traceCallEnds without return value
2830: pushConstant inline 1
2831: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2832: pushFromStack 7
2833: drop
2834: pushFromStack 5
2835: drop
2836: pushFromStack 24
2837: pushFromStack 3
2838: pushFromStack 3
2839: pushFromStack 3
2840: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
2841: pushFromStack 1
2842: dup by 1
2843: pushFromStack 1
2844: popMultipleBelowTop 2
2845: return
# Builtins::ifElse:1:isMatch:else
2846: pushFromStack 1
2847: dup by 1
2848: pushConstant inline builtinEquals
2849: pushConstant inline False
2850: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
2851: pushFromStack 2
2852: pushFromStack 2
2853: pushFromStack 6
2854: pushFromStack 3
2855: call with 2 arguments
2856: pushConstant inline builtinIfElse
2857: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
2858: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2859: pushFromStack 2
2860: pushFromStack 4
2861: pushFromStack 3
2862: pushFromStack 3
2863: pushFromStack 8
2864: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
2865: pushFromStack 1
2866: dup by 1
2867: pushConstant inline builtinEquals
2868: pushConstant inline False
2869: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2870: pushFromStack 2
2871: pushFromStack 5
2872: pushFromStack 3
2873: pushFromStack 3
2874: tailCall with 5 locals and 2 arguments
2875: pushFromStack 1
2876: dup by 1
2877: pushConstant inline builtinEquals
2878: pushConstant inline False
2879: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2880: pushFromStack 2
2881: pushFromStack 5
2882: pushFromStack 3
2883: pushFromStack 3
2884: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
2885: pushFromStack 1
2886: dup by 1
2887: pushConstant <replaced address d962951e9f7283f6> "`function.is1 errorMapper` was not satisfied"
2888: pushFromStack 0
2889: pushFromStack 3
2890: panic
2891: popMultipleBelowTop 3
2892: return
# Core:result:mapOrElse:26:equals:then
2893: pushFromStack 1
2894: dup by 1
2895: pushConstant inline builtinTagGetValue
2896: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
2897: pushFromStack 1
2898: pushFromStack 4
2899: pushFromStack 2
2900: call with 1 argument
2901: pushFromStack 0
2902: createList 1
2903: pushFromStack 0
2904: createTag Match
2905: popMultipleBelowTop 6
2906: return
2907: pushFromStack 1
2908: dup by 2
2909: pushConstant inline builtinTagHasValue
2910: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
2911: pushFromStack 1
2912: pushFromStack 4
2913: pushFromStack 2
2914: call with 1 argument
2915: pushConstant inline builtinEquals
2916: pushConstant inline True
2917: pushFromStack 1
2918: pushFromStack 1
2919: pushFromStack 4
2920: pushFromStack 6
2921: call with 2 arguments
2922: pushFromStack 7
2923: createFunction with 0 arguments capturing 0 starting at ip-2893
2924: pushConstant inline builtinIfElse
2925: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2926: pushFromStack 1
2927: pushFromStack 5
2928: pushFromStack 4
2929: pushFromStack 3
2930: pushFromStack 12
2931: tailCall with 12 locals and 3 arguments
2932: pushFromStack 1
2933: dup by 2
2934: pushConstant inline builtinTagWithoutValue
2935: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
2936: pushFromStack 1
2937: pushFromStack 4
2938: pushFromStack 2
2939: call with 1 argument
2940: pushConstant inline builtinEquals
2941: pushConstant inline Ok
2942: pushFromStack 1
2943: pushFromStack 1
2944: pushFromStack 4
2945: pushFromStack 6
2946: call with 2 arguments
2947: pushFromStack 7
2948: createFunction with 0 arguments capturing 0 starting at ip-2907
2949: pushConstant inline builtinIfElse
2950: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2951: pushFromStack 1
2952: pushFromStack 5
2953: pushFromStack 4
2954: pushFromStack 3
2955: pushFromStack 12
2956: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:26:2:doesTagHaveValue:else
2957: pushFromStack 2
2958: dup by 1
2959: pushFromStack 1
2960: dup by 1
2961: pushConstant inline builtinTagWithValue
2962: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
2963: pushFromStack 1
2964: pushFromStack 5
2965: pushFromStack 5
2966: pushFromStack 3
2967: tailCall with 5 locals and 2 arguments
# Core:result:mapOrElse:26:2:calleeIsTag:then
2968: pushFromStack 2
2969: dup by 2
2970: pushFromStack 1
2971: dup by 1
2972: pushConstant inline builtinTagHasValue
2973: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
2974: pushFromStack 1
2975: pushFromStack 5
2976: pushFromStack 2
2977: call with 1 argument
2978: pushFromStack 5
2979: pushFromStack 5
2980: createFunction with 0 arguments capturing 1, 0 starting at ip-2957
2981: pushConstant inline builtinIfElse
2982: pushConstant <replaced address e0bfbff53028c7a4> { 0 arguments (capturing nothing) → ip-2386 }
2983: pushFromStack 1
2984: pushFromStack 6
2985: pushFromStack 2
2986: pushFromStack 5
2987: pushFromStack 10
2988: tailCall with 11 locals and 3 arguments
# Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:then
2989: pushFromStack 2
2990: dup by 2
2991: pushFromStack 1
2992: dup by 2
2993: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
2994: pushFromStack 0
2995: pushFromStack 4
2996: pushFromStack 4
2997: pushFromStack 2
2998: traceTailCall (1 argument)
2999: pushFromStack 3
3000: pushFromStack 3
3001: pushFromStack 2
3002: tailCall with 4 locals and 1 argument
# Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:else
3003: pushFromStack 1
3004: dup by 1
3005: pushConstant inline builtinToDebugText
3006: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
3007: pushFromStack 1
3008: pushFromStack 4
3009: pushFromStack 2
3010: call with 1 argument
3011: pushConstant inline builtinTextConcatenate
3012: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
3013: pushFromStack 1
3014: pushFromStack 1
3015: pushFromStack 4
3016: pushFromStack 6
3017: call with 2 arguments
3018: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
3019: pushFromStack 3
3020: pushFromStack 2
3021: pushFromStack 2
3022: pushFromStack 8
3023: call with 2 arguments
3024: pushFromStack 0
3025: pushFromStack 7
3026: panic
3027: popMultipleBelowTop 10
3028: return
# Core:result:mapOrElse:26:2:calleeIsFunction:then
3029: pushFromStack 2
3030: dup by 2
3031: pushFromStack 1
3032: dup by 1
3033: pushConstant inline builtinGetArgumentCount
3034: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
3035: pushFromStack 1
3036: pushFromStack 5
3037: pushFromStack 2
3038: call with 1 argument
3039: pushFromStack 0
3040: dup by 1
3041: pushConstant inline builtinEquals
3042: pushConstant inline 1
3043: pushFromStack 1
3044: pushFromStack 3
3045: pushFromStack 2
3046: pushFromStack 6
3047: call with 2 arguments
3048: pushFromStack 8
3049: pushFromStack 8
3050: createFunction with 0 arguments capturing 1, 0 starting at ip-2989
3051: pushFromStack 6
3052: createFunction with 0 arguments capturing 0 starting at ip-3003
3053: pushConstant inline builtinIfElse
3054: pushFromStack 0
3055: pushFromStack 7
3056: pushFromStack 5
3057: pushFromStack 4
3058: pushFromStack 14
3059: tailCall with 15 locals and 3 arguments
# Core:result:mapOrElse:26:2:calleeIsTag:else
3060: pushFromStack 3
3061: dup by 1
3062: pushFromStack 2
3063: dup by 1
3064: pushFromStack 1
3065: dup by 1
3066: pushConstant inline builtinEquals
3067: pushConstant inline Function
3068: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
3069: pushFromStack 2
3070: pushFromStack 5
3071: pushFromStack 3
3072: pushFromStack 3
3073: call with 2 arguments
3074: pushFromStack 7
3075: pushFromStack 7
3076: createFunction with 0 arguments capturing 1, 0 starting at ip-3029
3077: pushConstant inline builtinIfElse
3078: pushConstant <replaced address 611c12d3de9f3c0b> { 0 arguments (capturing nothing) → ip-2393 }
3079: pushFromStack 1
3080: pushFromStack 6
3081: pushFromStack 4
3082: pushFromStack 3
3083: pushFromStack 10
3084: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:26:case-0:matched
3085: pushFromStack 2
3086: dup by 3
3087: pushFromStack 1
3088: dup by 1
3089: pushConstant inline builtinTagGetValue
3090: pushConstant <replaced address c98e2f7a8dce9fc1> Core:result:mapOrElse:26:value
3091: pushFromStack 1
3092: pushFromStack 4
3093: pushFromStack 2
3094: call with 1 argument
3095: pushConstant inline builtinListGet
3096: pushConstant inline 0
3097: pushFromStack 1
3098: pushFromStack 3
3099: pushFromStack 2
3100: pushFromStack 6
3101: call with 2 arguments
3102: pushFromStack 0
3103: dup by 1
3104: pushConstant inline builtinTypeOf
3105: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
3106: pushFromStack 1
3107: pushFromStack 11
3108: pushFromStack 2
3109: call with 1 argument
3110: pushFromStack 0
3111: dup by 1
3112: pushConstant inline builtinEquals
3113: pushConstant inline Tag
3114: pushFromStack 1
3115: pushFromStack 3
3116: pushFromStack 2
3117: pushFromStack 6
3118: call with 2 arguments
3119: pushFromStack 14
3120: pushFromStack 7
3121: createFunction with 0 arguments capturing 1, 0 starting at ip-2968
3122: pushFromStack 2
3123: pushFromStack 2
3124: pushFromStack 8
3125: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-3060
3126: pushConstant inline builtinIfElse
3127: pushFromStack 0
3128: pushFromStack 9
3129: pushFromStack 7
3130: pushFromStack 4
3131: pushFromStack 16
3132: tailCall with 23 locals and 3 arguments
# Core:result:mapOrElse:26:equals:then
3133: pushFromStack 1
3134: dup by 1
3135: pushConstant inline builtinTagGetValue
3136: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
3137: pushFromStack 1
3138: pushFromStack 4
3139: pushFromStack 2
3140: call with 1 argument
3141: pushFromStack 0
3142: createList 1
3143: pushFromStack 0
3144: createTag Match
3145: popMultipleBelowTop 6
3146: return
3147: pushFromStack 1
3148: dup by 2
3149: pushConstant inline builtinTagHasValue
3150: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
3151: pushFromStack 1
3152: pushFromStack 4
3153: pushFromStack 2
3154: call with 1 argument
3155: pushConstant inline builtinEquals
3156: pushConstant inline True
3157: pushFromStack 1
3158: pushFromStack 1
3159: pushFromStack 4
3160: pushFromStack 6
3161: call with 2 arguments
3162: pushFromStack 7
3163: createFunction with 0 arguments capturing 0 starting at ip-3133
3164: pushConstant inline builtinIfElse
3165: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3166: pushFromStack 1
3167: pushFromStack 5
3168: pushFromStack 4
3169: pushFromStack 3
3170: pushFromStack 12
3171: tailCall with 12 locals and 3 arguments
3172: pushFromStack 1
3173: dup by 2
3174: pushConstant inline builtinTagWithoutValue
3175: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
3176: pushFromStack 1
3177: pushFromStack 4
3178: pushFromStack 2
3179: call with 1 argument
3180: pushConstant inline builtinEquals
3181: pushConstant inline Error
3182: pushFromStack 1
3183: pushFromStack 1
3184: pushFromStack 4
3185: pushFromStack 6
3186: call with 2 arguments
3187: pushFromStack 7
3188: createFunction with 0 arguments capturing 0 starting at ip-3147
3189: pushConstant inline builtinIfElse
3190: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3191: pushFromStack 1
3192: pushFromStack 5
3193: pushFromStack 4
3194: pushFromStack 3
3195: pushFromStack 12
3196: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:26:5:doesTagHaveValue:else
3197: pushFromStack 2
3198: dup by 1
3199: pushFromStack 1
3200: dup by 1
3201: pushConstant inline builtinTagWithValue
3202: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
3203: pushFromStack 1
3204: pushFromStack 5
3205: pushFromStack 5
3206: pushFromStack 3
3207: tailCall with 5 locals and 2 arguments
# Core:result:mapOrElse:26:5:calleeIsTag:then
3208: pushFromStack 2
3209: dup by 2
3210: pushFromStack 1
3211: dup by 1
3212: pushConstant inline builtinTagHasValue
3213: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
3214: pushFromStack 1
3215: pushFromStack 5
3216: pushFromStack 2
3217: call with 1 argument
3218: pushFromStack 5
3219: pushFromStack 5
3220: createFunction with 0 arguments capturing 1, 0 starting at ip-3197
3221: pushConstant inline builtinIfElse
3222: pushConstant <replaced address 9b855ed5f08d861e> { 0 arguments (capturing nothing) → ip-2400 }
3223: pushFromStack 1
3224: pushFromStack 6
3225: pushFromStack 2
3226: pushFromStack 5
3227: pushFromStack 10
3228: tailCall with 11 locals and 3 arguments
# Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:then
3229: pushFromStack 2
3230: dup by 2
3231: pushFromStack 1
3232: dup by 2
3233: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
3234: pushFromStack 0
3235: pushFromStack 4
3236: pushFromStack 4
3237: pushFromStack 2
3238: traceTailCall (1 argument)
3239: pushFromStack 3
3240: pushFromStack 3
3241: pushFromStack 2
3242: tailCall with 4 locals and 1 argument
# Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:else
3243: pushFromStack 1
3244: dup by 1
3245: pushConstant inline builtinToDebugText
3246: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
3247: pushFromStack 1
3248: pushFromStack 4
3249: pushFromStack 2
3250: call with 1 argument
3251: pushConstant inline builtinTextConcatenate
3252: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
3253: pushFromStack 1
3254: pushFromStack 1
3255: pushFromStack 4
3256: pushFromStack 6
3257: call with 2 arguments
3258: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
3259: pushFromStack 3
3260: pushFromStack 2
3261: pushFromStack 2
3262: pushFromStack 8
3263: call with 2 arguments
3264: pushFromStack 0
3265: pushFromStack 7
3266: panic
3267: popMultipleBelowTop 10
3268: return
# Core:result:mapOrElse:26:5:calleeIsFunction:then
3269: pushFromStack 2
3270: dup by 2
3271: pushFromStack 1
3272: dup by 1
3273: pushConstant inline builtinGetArgumentCount
3274: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
3275: pushFromStack 1
3276: pushFromStack 5
3277: pushFromStack 2
3278: call with 1 argument
3279: pushFromStack 0
3280: dup by 1
3281: pushConstant inline builtinEquals
3282: pushConstant inline 1
3283: pushFromStack 1
3284: pushFromStack 3
3285: pushFromStack 2
3286: pushFromStack 6
3287: call with 2 arguments
3288: pushFromStack 8
3289: pushFromStack 8
3290: createFunction with 0 arguments capturing 1, 0 starting at ip-3229
3291: pushFromStack 6
3292: createFunction with 0 arguments capturing 0 starting at ip-3243
3293: pushConstant inline builtinIfElse
3294: pushFromStack 0
3295: pushFromStack 7
3296: pushFromStack 5
3297: pushFromStack 4
3298: pushFromStack 14
3299: tailCall with 15 locals and 3 arguments
# Core:result:mapOrElse:26:5:calleeIsTag:else
3300: pushFromStack 3
3301: dup by 1
3302: pushFromStack 2
3303: dup by 1
3304: pushFromStack 1
3305: dup by 1
3306: pushConstant inline builtinEquals
3307: pushConstant inline Function
3308: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
3309: pushFromStack 2
3310: pushFromStack 5
3311: pushFromStack 3
3312: pushFromStack 3
3313: call with 2 arguments
3314: pushFromStack 7
3315: pushFromStack 7
3316: createFunction with 0 arguments capturing 1, 0 starting at ip-3269
3317: pushConstant inline builtinIfElse
3318: pushConstant <replaced address 041596422ce35135> { 0 arguments (capturing nothing) → ip-2407 }
3319: pushFromStack 1
3320: pushFromStack 6
3321: pushFromStack 4
3322: pushFromStack 3
3323: pushFromStack 10
3324: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:26:case-1:matched
3325: pushFromStack 2
3326: dup by 3
3327: pushFromStack 1
3328: dup by 1
3329: pushConstant inline builtinTagGetValue
3330: pushConstant <replaced address 78116dc366ac952c> Core:result:mapOrElse:26:value#1
3331: pushFromStack 1
3332: pushFromStack 4
3333: pushFromStack 2
3334: call with 1 argument
3335: pushConstant inline builtinListGet
3336: pushConstant inline 0
3337: pushFromStack 1
3338: pushFromStack 3
3339: pushFromStack 2
3340: pushFromStack 6
3341: call with 2 arguments
3342: pushFromStack 0
3343: dup by 1
3344: pushConstant inline builtinTypeOf
3345: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
3346: pushFromStack 1
3347: pushFromStack 11
3348: pushFromStack 2
3349: call with 1 argument
3350: pushFromStack 0
3351: dup by 1
3352: pushConstant inline builtinEquals
3353: pushConstant inline Tag
3354: pushFromStack 1
3355: pushFromStack 3
3356: pushFromStack 2
3357: pushFromStack 6
3358: call with 2 arguments
3359: pushFromStack 14
3360: pushFromStack 7
3361: createFunction with 0 arguments capturing 1, 0 starting at ip-3208
3362: pushFromStack 2
3363: pushFromStack 2
3364: pushFromStack 8
3365: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-3300
3366: pushConstant inline builtinIfElse
3367: pushFromStack 0
3368: pushFromStack 9
3369: pushFromStack 7
3370: pushFromStack 4
3371: pushFromStack 16
3372: tailCall with 23 locals and 3 arguments
# Core:result:mapOrElse:26:case-0:didNotMatch
3373: pushFromStack 2
3374: dup by 2
3375: pushFromStack 1
3376: dup by 1
3377: pushConstant inline builtinTypeOf
3378: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
3379: pushFromStack 1
3380: pushFromStack 5
3381: pushFromStack 2
3382: call with 1 argument
3383: pushConstant inline builtinEquals
3384: pushConstant inline Tag
3385: pushFromStack 1
3386: pushFromStack 1
3387: pushFromStack 4
3388: pushFromStack 6
3389: call with 2 arguments
3390: pushFromStack 8
3391: createFunction with 0 arguments capturing 0 starting at ip-3172
3392: pushConstant inline builtinIfElse
3393: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3394: pushFromStack 1
3395: pushFromStack 5
3396: pushFromStack 4
3397: pushFromStack 3
3398: pushFromStack 12
3399: call with 3 arguments
3400: pushFromStack 0
3401: dup by 1
3402: pushConstant inline builtinTagWithoutValue
3403: pushFromStack 0
3404: pushFromStack 2
3405: pushFromStack 12
3406: call with 1 argument
3407: pushConstant inline Match
3408: pushFromStack 10
3409: pushFromStack 2
3410: pushFromStack 2
3411: pushFromStack 15
3412: call with 2 arguments
3413: pushFromStack 16
3414: pushFromStack 5
3415: createFunction with 0 arguments capturing 1, 0 starting at ip-3325
3416: pushConstant <replaced address 3e7ee2443ed19b48> { 0 arguments (capturing nothing) → ip-2414 }
3417: pushFromStack 10
3418: pushFromStack 5
3419: pushFromStack 3
3420: pushFromStack 3
3421: pushFromStack 21
3422: tailCall with 22 locals and 3 arguments
# Core:result:mapOrElse
3423: pushFromStack 3
3424: dup by 6
3425: pushFromStack 2
3426: dup by 3
3427: pushFromStack 1
3428: dup by 3
3429: pushFromStack 0
3430: dup by 6
3431: pushConstant <replaced address 266d488b0b2596a5> Core:result:mapOrElse:2
3432: pushConstant <replaced address c2082fb1645bc1fc> { 1 argument (capturing nothing) → ip-2300 }
3433: pushFromStack 1
3434: pushFromStack 1
3435: pushFromStack 7
3436: pushFromStack 2
3437: traceCallStarts (1 argument)
3438: pushConstant inline builtinTypeOf
3439: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3440: pushFromStack 1
3441: pushFromStack 8
3442: pushFromStack 2
3443: call with 1 argument
3444: pushConstant inline builtinEquals
3445: pushConstant inline Tag
3446: pushFromStack 1
3447: pushFromStack 1
3448: pushFromStack 4
3449: pushFromStack 6
3450: call with 2 arguments
3451: pushFromStack 11
3452: createFunction with 0 arguments capturing 0 starting at ip-2460
3453: pushConstant inline builtinIfElse
3454: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3455: pushFromStack 1
3456: pushFromStack 5
3457: pushFromStack 4
3458: pushFromStack 3
3459: pushFromStack 12
3460: call with 3 arguments
3461: pushFromStack 0
3462: dup by 1
3463: pushConstant inline builtinTagWithoutValue
3464: pushFromStack 0
3465: pushFromStack 2
3466: pushFromStack 12
3467: call with 1 argument
3468: pushConstant inline Match
3469: pushFromStack 10
3470: pushFromStack 2
3471: pushFromStack 2
3472: pushFromStack 15
3473: call with 2 arguments
3474: pushFromStack 4
3475: createFunction with 0 arguments capturing 0 starting at ip-2485
3476: pushFromStack 10
3477: createFunction with 0 arguments capturing 0 starting at ip-2554
3478: pushFromStack 10
3479: pushFromStack 5
3480: pushFromStack 4
3481: pushFromStack 3
3482: pushFromStack 21
3483: call with 3 arguments
3484: pushFromStack 8
3485: pushFromStack 1
3486: pushFromStack 20
3487: call with 1 argument
3488: pushFromStack 17
3489: pushFromStack 1
3490: pushFromStack 9
3491: pushFromStack 22
3492: call with 2 arguments
3493: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
3494: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
3495: pushFromStack 15
3496: pushFromStack 3
3497: pushFromStack 3
3498: pushFromStack 3
3499: pushFromStack 26
3500: call with 3 arguments
3501: pushFromStack 0
3502: dup by 3
3503: traceCallEnds without return value
3504: pushConstant <replaced address 0f59d2d5f5f1d623> Core:result:mapOrElse:4
3505: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3506: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
3507: pushFromStack 2
3508: pushFromStack 2
3509: pushFromStack 5
3510: pushFromStack 3
3511: pushFromStack 34
3512: pushFromStack 4
3513: traceCallStarts (3 arguments)
3514: pushConstant inline True
3515: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
3516: pushFromStack 26
3517: pushFromStack 6
3518: pushFromStack 3
3519: pushFromStack 3
3520: call with 2 arguments
3521: pushFromStack 6
3522: createFunction with 0 arguments capturing 0 starting at ip-2579
3523: pushFromStack 24
3524: pushFromStack 3
3525: pushFromStack 12
3526: pushFromStack 3
3527: pushFromStack 7
3528: call with 3 arguments
3529: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
3530: pushConstant <replaced address a9f1b0a5eedb0997> { 0 arguments (capturing nothing) → ip-2365 }
3531: pushFromStack 27
3532: pushFromStack 3
3533: pushFromStack 3
3534: pushFromStack 3
3535: pushFromStack 10
3536: call with 3 arguments
3537: pushFromStack 39
3538: createFunction with 0 arguments capturing 0 starting at ip-2589
3539: pushFromStack 30
3540: pushFromStack 8
3541: pushFromStack 6
3542: pushFromStack 3
3543: pushFromStack 13
3544: call with 3 arguments
3545: traceCallEnds without return value
3546: pushConstant <replaced address 9b3fe08f2f022acb> Core:result:mapOrElse:12
3547: pushConstant <replaced address 9d41aee4f1fc136e> { 1 argument (capturing nothing) → ip-1990 }
3548: pushFromStack 1
3549: pushFromStack 1
3550: pushFromStack 48
3551: pushFromStack 2
3552: traceCallStarts (1 argument)
3553: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
3554: pushFromStack 42
3555: pushFromStack 48
3556: pushFromStack 2
3557: call with 1 argument
3558: pushConstant inline Function
3559: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3560: pushFromStack 42
3561: pushFromStack 3
3562: pushFromStack 3
3563: pushFromStack 3
3564: call with 2 arguments
3565: pushFromStack 0
3566: dup by 4
3567: pushFromStack 51
3568: createFunction with 0 arguments capturing 0 starting at ip-2607
3569: pushFromStack 0
3570: dup by 2
3571: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
3572: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
3573: pushFromStack 1
3574: pushFromStack 1
3575: pushFromStack 6
3576: pushFromStack 5
3577: pushFromStack 31
3578: pushFromStack 4
3579: traceCallStarts (3 arguments)
3580: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
3581: pushFromStack 48
3582: pushFromStack 24
3583: pushFromStack 7
3584: pushFromStack 3
3585: call with 2 arguments
3586: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
3587: pushFromStack 45
3588: pushFromStack 2
3589: pushFromStack 2
3590: pushFromStack 47
3591: pushFromStack 6
3592: call with 3 arguments
3593: pushFromStack 0
3594: dup by 1
3595: pushFromStack 43
3596: pushFromStack 1
3597: pushFromStack 5
3598: call with 1 argument
3599: pushFromStack 52
3600: pushFromStack 1
3601: pushFromStack 44
3602: pushFromStack 7
3603: call with 2 arguments
3604: pushFromStack 2
3605: createFunction with 0 arguments capturing 0 starting at ip-2693
3606: pushFromStack 12
3607: createFunction with 0 arguments capturing 0 starting at ip-2698
3608: pushFromStack 52
3609: pushFromStack 5
3610: pushFromStack 4
3611: pushFromStack 3
3612: pushFromStack 13
3613: call with 3 arguments
3614: pushFromStack 50
3615: pushFromStack 1
3616: pushFromStack 12
3617: call with 1 argument
3618: pushFromStack 59
3619: pushFromStack 1
3620: pushFromStack 51
3621: pushFromStack 14
3622: call with 2 arguments
3623: pushFromStack 55
3624: pushFromStack 1
3625: pushFromStack 43
3626: pushFromStack 43
3627: pushFromStack 16
3628: call with 3 arguments
3629: pushFromStack 0
3630: dup by 3
3631: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
3632: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
3633: pushFromStack 1
3634: pushFromStack 41
3635: pushFromStack 4
3636: pushFromStack 3
3637: pushFromStack 21
3638: pushFromStack 4
3639: traceCallStarts (3 arguments)
3640: pushFromStack 63
3641: pushFromStack 3
3642: pushFromStack 40
3643: pushFromStack 40
3644: call with 2 arguments
3645: pushFromStack 3
3646: createFunction with 0 arguments capturing 0 starting at ip-2717
3647: pushFromStack 61
3648: pushFromStack 3
3649: pushFromStack 49
3650: pushFromStack 3
3651: pushFromStack 44
3652: call with 3 arguments
3653: pushConstant <replaced address bbfd050c570524d0> { 0 arguments (capturing nothing) → ip-214 }
3654: pushFromStack 63
3655: pushFromStack 2
3656: pushFromStack 39
3657: pushFromStack 3
3658: pushFromStack 46
3659: call with 3 arguments
3660: pushConstant <replaced address 967bfb90bb1a8797> { 0 arguments (capturing nothing) → ip-1853 }
3661: pushFromStack 65
3662: pushFromStack 6
3663: pushFromStack 41
3664: pushFromStack 3
3665: pushFromStack 48
3666: call with 3 arguments
3667: traceCallEnds without return value
3668: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
3669: pushFromStack 0
3670: pushFromStack 68
3671: pushFromStack 18
3672: pushFromStack 30
3673: pushFromStack 56
3674: pushFromStack 4
3675: traceCallStarts (3 arguments)
3676: pushFromStack 67
3677: pushFromStack 17
3678: pushFromStack 29
3679: pushFromStack 55
3680: pushFromStack 4
3681: call with 3 arguments
3682: pushFromStack 0
3683: dup by 3
3684: traceCallEnds without return value
3685: traceCallEnds without return value
3686: traceCallEnds without return value
3687: pushConstant <replaced address f8465d20e0be15a1> Core:result:mapOrElse:14
3688: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
3689: pushFromStack 1
3690: pushFromStack 53
3691: pushFromStack 4
3692: pushFromStack 3
3693: pushFromStack 45
3694: pushFromStack 4
3695: traceCallStarts (3 arguments)
3696: pushFromStack 75
3697: pushFromStack 3
3698: pushFromStack 52
3699: pushFromStack 52
3700: call with 2 arguments
3701: pushFromStack 3
3702: createFunction with 0 arguments capturing 0 starting at ip-2727
3703: pushFromStack 73
3704: pushFromStack 3
3705: pushFromStack 61
3706: pushFromStack 3
3707: pushFromStack 56
3708: call with 3 arguments
3709: pushConstant <replaced address 25fa21146fc4092a> { 0 arguments (capturing nothing) → ip-2372 }
3710: pushFromStack 75
3711: pushFromStack 2
3712: pushFromStack 51
3713: pushFromStack 3
3714: pushFromStack 58
3715: call with 3 arguments
3716: pushFromStack 47
3717: createFunction with 0 arguments capturing 0 starting at ip-2737
3718: pushFromStack 78
3719: pushFromStack 7
3720: pushFromStack 54
3721: pushFromStack 3
3722: pushFromStack 61
3723: call with 3 arguments
3724: traceCallEnds without return value
3725: pushConstant <replaced address 549433f5358d17a9> Core:result:mapOrElse:22
3726: pushFromStack 0
3727: pushFromStack 48
3728: pushFromStack 94
3729: pushFromStack 2
3730: traceCallStarts (1 argument)
3731: pushFromStack 88
3732: pushFromStack 93
3733: pushFromStack 48
3734: call with 1 argument
3735: pushFromStack 86
3736: pushFromStack 1
3737: pushFromStack 47
3738: pushFromStack 47
3739: call with 2 arguments
3740: pushFromStack 0
3741: dup by 4
3742: pushFromStack 94
3743: createFunction with 0 arguments capturing 0 starting at ip-2755
3744: pushFromStack 0
3745: dup by 2
3746: pushFromStack 43
3747: pushFromStack 43
3748: pushFromStack 4
3749: pushFromStack 3
3750: pushFromStack 73
3751: pushFromStack 4
3752: traceCallStarts (3 arguments)
3753: pushFromStack 89
3754: pushFromStack 65
3755: pushFromStack 4
3756: pushFromStack 44
3757: call with 2 arguments
3758: pushFromStack 85
3759: pushFromStack 1
3760: pushFromStack 42
3761: pushFromStack 87
3762: pushFromStack 46
3763: call with 3 arguments
3764: pushFromStack 0
3765: dup by 1
3766: pushFromStack 83
3767: pushFromStack 1
3768: pushFromStack 45
3769: call with 1 argument
3770: pushFromStack 92
3771: pushFromStack 1
3772: pushFromStack 84
3773: pushFromStack 47
3774: call with 2 arguments
3775: pushFromStack 2
3776: createFunction with 0 arguments capturing 0 starting at ip-2841
3777: pushFromStack 8
3778: createFunction with 0 arguments capturing 0 starting at ip-2846
3779: pushFromStack 92
3780: pushFromStack 5
3781: pushFromStack 4
3782: pushFromStack 3
3783: pushFromStack 53
3784: call with 3 arguments
3785: pushFromStack 90
3786: pushFromStack 1
3787: pushFromStack 52
3788: call with 1 argument
3789: pushFromStack 99
3790: pushFromStack 1
3791: pushFromStack 91
3792: pushFromStack 54
3793: call with 2 arguments
3794: pushFromStack 95
3795: pushFromStack 1
3796: pushFromStack 83
3797: pushFromStack 83
3798: pushFromStack 56
3799: call with 3 arguments
3800: pushFromStack 0
3801: dup by 3
3802: pushFromStack 39
3803: pushFromStack 79
3804: pushFromStack 2
3805: pushFromStack 41
3806: pushFromStack 59
3807: pushFromStack 4
3808: traceCallStarts (3 arguments)
3809: pushFromStack 101
3810: pushFromStack 1
3811: pushFromStack 78
3812: pushFromStack 78
3813: call with 2 arguments
3814: pushFromStack 1
3815: createFunction with 0 arguments capturing 0 starting at ip-2865
3816: pushFromStack 99
3817: pushFromStack 3
3818: pushFromStack 87
3819: pushFromStack 3
3820: pushFromStack 82
3821: call with 3 arguments
3822: pushFromStack 100
3823: pushFromStack 1
3824: pushFromStack 76
3825: pushFromStack 40
3826: pushFromStack 83
3827: call with 3 arguments
3828: pushFromStack 101
3829: pushFromStack 4
3830: pushFromStack 77
3831: pushFromStack 39
3832: pushFromStack 84
3833: call with 3 arguments
3834: traceCallEnds without return value
3835: pushFromStack 35
3836: pushFromStack 103
3837: pushFromStack 13
3838: pushFromStack 21
3839: pushFromStack 91
3840: pushFromStack 4
3841: traceCallStarts (3 arguments)
3842: pushFromStack 102
3843: pushFromStack 12
3844: pushFromStack 20
3845: pushFromStack 90
3846: pushFromStack 39
3847: call with 3 arguments
3848: pushFromStack 0
3849: dup by 3
3850: traceCallEnds without return value
3851: traceCallEnds without return value
3852: traceCallEnds without return value
3853: pushConstant <replaced address 3d80be4020595727> Core:result:mapOrElse:24
3854: pushConstant <replaced address d962951e9f7283f6> "`function.is1 errorMapper` was not satisfied"
3855: pushFromStack 1
3856: pushFromStack 88
3857: pushFromStack 4
3858: pushFromStack 3
3859: pushFromStack 32
3860: pushFromStack 4
3861: traceCallStarts (3 arguments)
3862: pushFromStack 110
3863: pushFromStack 3
3864: pushFromStack 87
3865: pushFromStack 87
3866: call with 2 arguments
3867: pushFromStack 3
3868: createFunction with 0 arguments capturing 0 starting at ip-2875
3869: pushFromStack 108
3870: pushFromStack 3
3871: pushFromStack 96
3872: pushFromStack 3
3873: pushFromStack 91
3874: call with 3 arguments
3875: pushConstant <replaced address a65673f31e3a7d91> { 0 arguments (capturing nothing) → ip-2379 }
3876: pushFromStack 110
3877: pushFromStack 2
3878: pushFromStack 86
3879: pushFromStack 3
3880: pushFromStack 93
3881: call with 3 arguments
3882: pushFromStack 34
3883: createFunction with 0 arguments capturing 0 starting at ip-2885
3884: pushFromStack 113
3885: pushFromStack 7
3886: pushFromStack 89
3887: pushFromStack 3
3888: pushFromStack 96
3889: call with 3 arguments
3890: traceCallEnds without return value
3891: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
3892: pushFromStack 123
3893: pushFromStack 107
3894: pushFromStack 2
3895: call with 1 argument
3896: pushFromStack 121
3897: pushFromStack 121
3898: pushFromStack 2
3899: pushFromStack 4
3900: call with 2 arguments
3901: pushFromStack 108
3902: createFunction with 0 arguments capturing 0 starting at ip-2932
3903: pushFromStack 119
3904: pushFromStack 3
3905: pushFromStack 2
3906: pushFromStack 121
3907: pushFromStack 8
3908: call with 3 arguments
3909: pushFromStack 0
3910: dup by 1
3911: pushFromStack 117
3912: pushFromStack 1
3913: pushFromStack 7
3914: call with 1 argument
3915: pushFromStack 126
3916: pushFromStack 1
3917: pushFromStack 118
3918: pushFromStack 9
3919: call with 2 arguments
3920: pushFromStack 83
3921: pushFromStack 3
3922: createFunction with 0 arguments capturing 1, 0 starting at ip-3085
3923: pushFromStack 7
3924: pushFromStack 43
3925: createFunction with 0 arguments capturing 1, 0 starting at ip-3373
3926: pushFromStack 100
3927: drop
3928: pushFromStack 97
3929: drop
3930: pushFromStack 64
3931: drop
3932: pushFromStack 62
3933: drop
3934: pushFromStack 52
3935: drop
3936: pushFromStack 49
3937: drop
3938: pushFromStack 27
3939: drop
3940: pushFromStack 26
3941: drop
3942: pushFromStack 17
3943: drop
3944: pushFromStack 14
3945: drop
3946: pushFromStack 128
3947: pushFromStack 7
3948: pushFromStack 5
3949: pushFromStack 3
3950: pushFromStack 17
3951: tailCall with 143 locals and 3 arguments
# anonymous:$generated::needs:isConditionBool:else
3952: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
3953: pushConstant <replaced address a84ff690d98aeae1> Core:result:getValue:4
3954: pushFromStack 1
3955: pushFromStack 1
3956: panic
3957: popMultipleBelowTop 3
3958: return
# anonymous:$generated::needs:condition:else
3959: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
3960: pushConstant <replaced address 1c69e8d7a07a9639> Core:result:getValue:12
3961: pushFromStack 1
3962: pushFromStack 1
3963: panic
3964: popMultipleBelowTop 3
3965: return
3966: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
3967: pushConstant <replaced address 1c69e8d7a07a9639> Core:result:getValue:12
3968: pushFromStack 1
3969: pushFromStack 1
3970: panic
3971: popMultipleBelowTop 3
3972: return
# Core:result:is:1:equals:then
3973: pushFromStack 1
3974: dup by 1
3975: pushConstant inline builtinTagGetValue
3976: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3977: pushFromStack 1
3978: pushFromStack 4
3979: pushFromStack 2
3980: call with 1 argument
3981: pushFromStack 0
3982: createList 1
3983: pushFromStack 0
3984: createTag Match
3985: popMultipleBelowTop 6
3986: return
3987: pushFromStack 1
3988: dup by 2
3989: pushConstant inline builtinTagHasValue
3990: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3991: pushFromStack 1
3992: pushFromStack 4
3993: pushFromStack 2
3994: call with 1 argument
3995: pushConstant inline builtinEquals
3996: pushConstant inline True
3997: pushFromStack 1
3998: pushFromStack 1
3999: pushFromStack 4
4000: pushFromStack 6
4001: call with 2 arguments
4002: pushFromStack 7
4003: createFunction with 0 arguments capturing 0 starting at ip-3973
4004: pushConstant inline builtinIfElse
4005: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4006: pushFromStack 1
4007: pushFromStack 5
4008: pushFromStack 4
4009: pushFromStack 3
4010: pushFromStack 12
4011: tailCall with 12 locals and 3 arguments
4012: pushFromStack 1
4013: dup by 2
4014: pushConstant inline builtinTagWithoutValue
4015: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4016: pushFromStack 1
4017: pushFromStack 4
4018: pushFromStack 2
4019: call with 1 argument
4020: pushConstant inline builtinEquals
4021: pushConstant inline Ok
4022: pushFromStack 1
4023: pushFromStack 1
4024: pushFromStack 4
4025: pushFromStack 6
4026: call with 2 arguments
4027: pushFromStack 7
4028: createFunction with 0 arguments capturing 0 starting at ip-3987
4029: pushConstant inline builtinIfElse
4030: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4031: pushFromStack 1
4032: pushFromStack 5
4033: pushFromStack 4
4034: pushFromStack 3
4035: pushFromStack 12
4036: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
4037: pushFromStack 1
4038: dup by 1
4039: pushFromStack 1
4040: popMultipleBelowTop 2
4041: return
# Core:result:is:1:equals:then
4042: pushFromStack 1
4043: dup by 1
4044: pushConstant inline builtinTagGetValue
4045: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4046: pushFromStack 1
4047: pushFromStack 4
4048: pushFromStack 2
4049: call with 1 argument
4050: pushFromStack 0
4051: createList 1
4052: pushFromStack 0
4053: createTag Match
4054: popMultipleBelowTop 6
4055: return
4056: pushFromStack 1
4057: dup by 2
4058: pushConstant inline builtinTagHasValue
4059: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4060: pushFromStack 1
4061: pushFromStack 4
4062: pushFromStack 2
4063: call with 1 argument
4064: pushConstant inline builtinEquals
4065: pushConstant inline True
4066: pushFromStack 1
4067: pushFromStack 1
4068: pushFromStack 4
4069: pushFromStack 6
4070: call with 2 arguments
4071: pushFromStack 7
4072: createFunction with 0 arguments capturing 0 starting at ip-4042
4073: pushConstant inline builtinIfElse
4074: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4075: pushFromStack 1
4076: pushFromStack 5
4077: pushFromStack 4
4078: pushFromStack 3
4079: pushFromStack 12
4080: tailCall with 12 locals and 3 arguments
4081: pushFromStack 1
4082: dup by 2
4083: pushConstant inline builtinTagWithoutValue
4084: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4085: pushFromStack 1
4086: pushFromStack 4
4087: pushFromStack 2
4088: call with 1 argument
4089: pushConstant inline builtinEquals
4090: pushConstant inline Error
4091: pushFromStack 1
4092: pushFromStack 1
4093: pushFromStack 4
4094: pushFromStack 6
4095: call with 2 arguments
4096: pushFromStack 7
4097: createFunction with 0 arguments capturing 0 starting at ip-4056
4098: pushConstant inline builtinIfElse
4099: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4100: pushFromStack 1
4101: pushFromStack 5
4102: pushFromStack 4
4103: pushFromStack 3
4104: pushFromStack 12
4105: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
4106: pushFromStack 1
4107: dup by 2
4108: pushConstant inline builtinTypeOf
4109: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4110: pushFromStack 1
4111: pushFromStack 4
4112: pushFromStack 2
4113: call with 1 argument
4114: pushConstant inline builtinEquals
4115: pushConstant inline Tag
4116: pushFromStack 1
4117: pushFromStack 1
4118: pushFromStack 4
4119: pushFromStack 6
4120: call with 2 arguments
4121: pushFromStack 7
4122: createFunction with 0 arguments capturing 0 starting at ip-4081
4123: pushConstant inline builtinIfElse
4124: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4125: pushFromStack 1
4126: pushFromStack 5
4127: pushFromStack 4
4128: pushFromStack 3
4129: pushFromStack 12
4130: tailCall with 12 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
4131: pushFromStack 1
4132: dup by 1
4133: pushConstant inline builtinEquals
4134: pushConstant inline False
4135: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4136: pushFromStack 2
4137: pushFromStack 5
4138: pushFromStack 3
4139: pushFromStack 3
4140: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
4141: pushFromStack 1
4142: dup by 1
4143: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
4144: pushFromStack 0
4145: pushFromStack 3
4146: panic
4147: popMultipleBelowTop 3
4148: return
# anonymous:$generated::needs:isConditionTrue:else
4149: pushFromStack 1
4150: dup by 1
4151: pushConstant inline builtinEquals
4152: pushConstant inline False
4153: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4154: pushFromStack 2
4155: pushFromStack 5
4156: pushFromStack 3
4157: pushFromStack 3
4158: tailCall with 5 locals and 2 arguments
4159: pushFromStack 1
4160: dup by 1
4161: pushConstant inline builtinEquals
4162: pushConstant inline False
4163: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4164: pushFromStack 2
4165: pushFromStack 5
4166: pushFromStack 3
4167: pushFromStack 3
4168: tailCall with 5 locals and 2 arguments
# Core:result:getValue
4169: pushFromStack 1
4170: dup by 7
4171: pushFromStack 0
4172: dup by 2
4173: pushConstant <replaced address 055673228b46d5b7> Core:result:getValue:2
4174: pushConstant <replaced address c2082fb1645bc1fc> { 1 argument (capturing nothing) → ip-2300 }
4175: pushFromStack 1
4176: pushFromStack 1
4177: pushFromStack 5
4178: pushFromStack 2
4179: traceCallStarts (1 argument)
4180: pushConstant inline builtinTypeOf
4181: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4182: pushFromStack 1
4183: pushFromStack 6
4184: pushFromStack 2
4185: call with 1 argument
4186: pushConstant inline builtinEquals
4187: pushConstant inline Tag
4188: pushFromStack 1
4189: pushFromStack 1
4190: pushFromStack 4
4191: pushFromStack 6
4192: call with 2 arguments
4193: pushFromStack 9
4194: createFunction with 0 arguments capturing 0 starting at ip-4012
4195: pushConstant inline builtinIfElse
4196: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4197: pushFromStack 1
4198: pushFromStack 5
4199: pushFromStack 4
4200: pushFromStack 3
4201: pushFromStack 12
4202: call with 3 arguments
4203: pushFromStack 0
4204: dup by 1
4205: pushConstant inline builtinTagWithoutValue
4206: pushFromStack 0
4207: pushFromStack 2
4208: pushFromStack 12
4209: call with 1 argument
4210: pushConstant inline Match
4211: pushFromStack 10
4212: pushFromStack 2
4213: pushFromStack 2
4214: pushFromStack 15
4215: call with 2 arguments
4216: pushFromStack 4
4217: createFunction with 0 arguments capturing 0 starting at ip-4037
4218: pushFromStack 10
4219: createFunction with 0 arguments capturing 0 starting at ip-4106
4220: pushFromStack 10
4221: pushFromStack 5
4222: pushFromStack 4
4223: pushFromStack 3
4224: pushFromStack 21
4225: call with 3 arguments
4226: pushFromStack 8
4227: pushFromStack 1
4228: pushFromStack 20
4229: call with 1 argument
4230: pushFromStack 17
4231: pushFromStack 1
4232: pushFromStack 9
4233: pushFromStack 22
4234: call with 2 arguments
4235: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
4236: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
4237: pushFromStack 15
4238: pushFromStack 3
4239: pushFromStack 3
4240: pushFromStack 3
4241: pushFromStack 26
4242: call with 3 arguments
4243: pushFromStack 0
4244: dup by 3
4245: traceCallEnds without return value
4246: pushConstant <replaced address a84ff690d98aeae1> Core:result:getValue:4
4247: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4248: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
4249: pushFromStack 2
4250: pushFromStack 2
4251: pushFromStack 5
4252: pushFromStack 3
4253: pushFromStack 34
4254: pushFromStack 4
4255: traceCallStarts (3 arguments)
4256: pushConstant inline True
4257: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4258: pushFromStack 26
4259: pushFromStack 6
4260: pushFromStack 3
4261: pushFromStack 3
4262: call with 2 arguments
4263: pushFromStack 6
4264: createFunction with 0 arguments capturing 0 starting at ip-4131
4265: pushFromStack 24
4266: pushFromStack 3
4267: pushFromStack 12
4268: pushFromStack 3
4269: pushFromStack 7
4270: call with 3 arguments
4271: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
4272: pushConstant <replaced address b9ce0bfa1e99056e> { 0 arguments (capturing nothing) → ip-3952 }
4273: pushFromStack 27
4274: pushFromStack 3
4275: pushFromStack 3
4276: pushFromStack 3
4277: pushFromStack 10
4278: call with 3 arguments
4279: pushFromStack 39
4280: createFunction with 0 arguments capturing 0 starting at ip-4141
4281: pushFromStack 30
4282: pushFromStack 8
4283: pushFromStack 6
4284: pushFromStack 3
4285: pushFromStack 13
4286: call with 3 arguments
4287: traceCallEnds without return value
4288: pushConstant <replaced address 1c69e8d7a07a9639> Core:result:getValue:12
4289: pushConstant <replaced address 77c2885b22af7c12> { 1 argument (capturing nothing) → ip-1722 }
4290: pushFromStack 1
4291: pushFromStack 1
4292: pushFromStack 26
4293: pushFromStack 2
4294: traceTailCall (1 argument)
4295: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
4296: pushFromStack 42
4297: pushFromStack 26
4298: pushFromStack 2
4299: call with 1 argument
4300: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
4301: pushFromStack 41
4302: pushFromStack 2
4303: pushFromStack 42
4304: pushFromStack 3
4305: call with 2 arguments
4306: pushFromStack 0
4307: dup by 3
4308: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
4309: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
4310: pushFromStack 1
4311: pushFromStack 22
4312: pushFromStack 4
4313: pushFromStack 3
4314: pushFromStack 11
4315: pushFromStack 4
4316: traceCallStarts (3 arguments)
4317: pushFromStack 44
4318: pushFromStack 3
4319: pushFromStack 21
4320: pushFromStack 21
4321: call with 2 arguments
4322: pushFromStack 3
4323: createFunction with 0 arguments capturing 0 starting at ip-4149
4324: pushFromStack 42
4325: pushFromStack 3
4326: pushFromStack 30
4327: pushFromStack 3
4328: pushFromStack 25
4329: call with 3 arguments
4330: pushConstant <replaced address 7eb081198d2e8ae6> { 0 arguments (capturing nothing) → ip-1672 }
4331: pushFromStack 44
4332: pushFromStack 2
4333: pushFromStack 20
4334: pushFromStack 3
4335: pushFromStack 27
4336: call with 3 arguments
4337: pushConstant <replaced address 225e43665aeed085> { 0 arguments (capturing nothing) → ip-3959 }
4338: pushFromStack 46
4339: pushFromStack 6
4340: pushFromStack 22
4341: pushFromStack 3
4342: pushFromStack 29
4343: call with 3 arguments
4344: traceCallEnds without return value
4345: pushConstant inline builtinTagHasValue
4346: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
4347: pushFromStack 1
4348: pushFromStack 41
4349: pushFromStack 2
4350: call with 1 argument
4351: pushFromStack 0
4352: dup by 3
4353: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
4354: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
4355: pushFromStack 1
4356: pushFromStack 35
4357: pushFromStack 4
4358: pushFromStack 3
4359: pushFromStack 24
4360: pushFromStack 4
4361: traceCallStarts (3 arguments)
4362: pushFromStack 57
4363: pushFromStack 3
4364: pushFromStack 34
4365: pushFromStack 34
4366: call with 2 arguments
4367: pushFromStack 3
4368: createFunction with 0 arguments capturing 0 starting at ip-4159
4369: pushFromStack 55
4370: pushFromStack 3
4371: pushFromStack 43
4372: pushFromStack 3
4373: pushFromStack 38
4374: call with 3 arguments
4375: pushConstant <replaced address e740b885c98455fd> { 0 arguments (capturing nothing) → ip-1679 }
4376: pushFromStack 57
4377: pushFromStack 2
4378: pushFromStack 33
4379: pushFromStack 3
4380: pushFromStack 40
4381: call with 3 arguments
4382: pushConstant <replaced address 5cc78f686cdd1a98> { 0 arguments (capturing nothing) → ip-3966 }
4383: pushFromStack 59
4384: pushFromStack 6
4385: pushFromStack 35
4386: pushFromStack 3
4387: pushFromStack 42
4388: call with 3 arguments
4389: traceCallEnds without return value
4390: pushConstant inline builtinTagGetValue
4391: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
4392: pushFromStack 34
4393: drop
4394: pushFromStack 31
4395: drop
4396: pushFromStack 17
4397: drop
4398: pushFromStack 15
4399: drop
4400: pushFromStack 4
4401: drop
4402: pushFromStack 2
4403: drop
4404: pushFromStack 1
4405: pushFromStack 54
4406: pushFromStack 2
4407: tailCall with 75 locals and 1 argument
# anonymous:$generated::needs:isConditionBool:else
4408: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
4409: pushConstant <replaced address 5e7fed672c5c456a> Core:result:mapOr:4
4410: pushFromStack 1
4411: pushFromStack 1
4412: panic
4413: popMultipleBelowTop 3
4414: return
4415: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
4416: pushConstant <replaced address 476c77b2172884e8> Core:result:mapOr:14
4417: pushFromStack 1
4418: pushFromStack 1
4419: panic
4420: popMultipleBelowTop 3
4421: return
# Core:result:is:1:equals:then
4422: pushFromStack 1
4423: dup by 1
4424: pushConstant inline builtinTagGetValue
4425: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4426: pushFromStack 1
4427: pushFromStack 4
4428: pushFromStack 2
4429: call with 1 argument
4430: pushFromStack 0
4431: createList 1
4432: pushFromStack 0
4433: createTag Match
4434: popMultipleBelowTop 6
4435: return
4436: pushFromStack 1
4437: dup by 2
4438: pushConstant inline builtinTagHasValue
4439: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4440: pushFromStack 1
4441: pushFromStack 4
4442: pushFromStack 2
4443: call with 1 argument
4444: pushConstant inline builtinEquals
4445: pushConstant inline True
4446: pushFromStack 1
4447: pushFromStack 1
4448: pushFromStack 4
4449: pushFromStack 6
4450: call with 2 arguments
4451: pushFromStack 7
4452: createFunction with 0 arguments capturing 0 starting at ip-4422
4453: pushConstant inline builtinIfElse
4454: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4455: pushFromStack 1
4456: pushFromStack 5
4457: pushFromStack 4
4458: pushFromStack 3
4459: pushFromStack 12
4460: tailCall with 12 locals and 3 arguments
4461: pushFromStack 1
4462: dup by 2
4463: pushConstant inline builtinTagWithoutValue
4464: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4465: pushFromStack 1
4466: pushFromStack 4
4467: pushFromStack 2
4468: call with 1 argument
4469: pushConstant inline builtinEquals
4470: pushConstant inline Ok
4471: pushFromStack 1
4472: pushFromStack 1
4473: pushFromStack 4
4474: pushFromStack 6
4475: call with 2 arguments
4476: pushFromStack 7
4477: createFunction with 0 arguments capturing 0 starting at ip-4436
4478: pushConstant inline builtinIfElse
4479: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4480: pushFromStack 1
4481: pushFromStack 5
4482: pushFromStack 4
4483: pushFromStack 3
4484: pushFromStack 12
4485: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
4486: pushFromStack 1
4487: dup by 1
4488: pushFromStack 1
4489: popMultipleBelowTop 2
4490: return
# Core:result:is:1:equals:then
4491: pushFromStack 1
4492: dup by 1
4493: pushConstant inline builtinTagGetValue
4494: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4495: pushFromStack 1
4496: pushFromStack 4
4497: pushFromStack 2
4498: call with 1 argument
4499: pushFromStack 0
4500: createList 1
4501: pushFromStack 0
4502: createTag Match
4503: popMultipleBelowTop 6
4504: return
4505: pushFromStack 1
4506: dup by 2
4507: pushConstant inline builtinTagHasValue
4508: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4509: pushFromStack 1
4510: pushFromStack 4
4511: pushFromStack 2
4512: call with 1 argument
4513: pushConstant inline builtinEquals
4514: pushConstant inline True
4515: pushFromStack 1
4516: pushFromStack 1
4517: pushFromStack 4
4518: pushFromStack 6
4519: call with 2 arguments
4520: pushFromStack 7
4521: createFunction with 0 arguments capturing 0 starting at ip-4491
4522: pushConstant inline builtinIfElse
4523: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4524: pushFromStack 1
4525: pushFromStack 5
4526: pushFromStack 4
4527: pushFromStack 3
4528: pushFromStack 12
4529: tailCall with 12 locals and 3 arguments
4530: pushFromStack 1
4531: dup by 2
4532: pushConstant inline builtinTagWithoutValue
4533: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4534: pushFromStack 1
4535: pushFromStack 4
4536: pushFromStack 2
4537: call with 1 argument
4538: pushConstant inline builtinEquals
4539: pushConstant inline Error
4540: pushFromStack 1
4541: pushFromStack 1
4542: pushFromStack 4
4543: pushFromStack 6
4544: call with 2 arguments
4545: pushFromStack 7
4546: createFunction with 0 arguments capturing 0 starting at ip-4505
4547: pushConstant inline builtinIfElse
4548: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4549: pushFromStack 1
4550: pushFromStack 5
4551: pushFromStack 4
4552: pushFromStack 3
4553: pushFromStack 12
4554: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
4555: pushFromStack 1
4556: dup by 2
4557: pushConstant inline builtinTypeOf
4558: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4559: pushFromStack 1
4560: pushFromStack 4
4561: pushFromStack 2
4562: call with 1 argument
4563: pushConstant inline builtinEquals
4564: pushConstant inline Tag
4565: pushFromStack 1
4566: pushFromStack 1
4567: pushFromStack 4
4568: pushFromStack 6
4569: call with 2 arguments
4570: pushFromStack 7
4571: createFunction with 0 arguments capturing 0 starting at ip-4530
4572: pushConstant inline builtinIfElse
4573: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4574: pushFromStack 1
4575: pushFromStack 5
4576: pushFromStack 4
4577: pushFromStack 3
4578: pushFromStack 12
4579: tailCall with 12 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
4580: pushFromStack 1
4581: dup by 1
4582: pushConstant inline builtinEquals
4583: pushConstant inline False
4584: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4585: pushFromStack 2
4586: pushFromStack 5
4587: pushFromStack 3
4588: pushFromStack 3
4589: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
4590: pushFromStack 1
4591: dup by 1
4592: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
4593: pushFromStack 0
4594: pushFromStack 3
4595: panic
4596: popMultipleBelowTop 3
4597: return
# anonymous:$generated::needs:isConditionTrue:else
4598: pushFromStack 1
4599: dup by 1
4600: pushConstant inline builtinEquals
4601: pushConstant inline False
4602: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4603: pushFromStack 2
4604: pushFromStack 5
4605: pushFromStack 3
4606: pushFromStack 3
4607: tailCall with 5 locals and 2 arguments
# Core:function:is1:9
4608: pushFromStack 1
4609: dup by 3
4610: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
4611: pushConstant <replaced address 4eaaa90b93950b2c> { 1 argument (capturing nothing) → ip-140 }
4612: pushFromStack 1
4613: pushFromStack 1
4614: pushFromStack 5
4615: pushFromStack 2
4616: traceCallStarts (1 argument)
4617: pushConstant inline builtinTypeOf
4618: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
4619: pushFromStack 1
4620: pushFromStack 6
4621: pushFromStack 2
4622: call with 1 argument
4623: pushConstant inline builtinEquals
4624: pushConstant inline Function
4625: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
4626: pushFromStack 2
4627: pushFromStack 4
4628: pushFromStack 3
4629: pushFromStack 3
4630: call with 2 arguments
4631: pushFromStack 0
4632: dup by 3
4633: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
4634: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4635: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
4636: pushFromStack 2
4637: pushFromStack 2
4638: pushFromStack 5
4639: pushFromStack 3
4640: pushFromStack 15
4641: pushFromStack 4
4642: traceCallStarts (3 arguments)
4643: pushConstant inline True
4644: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4645: pushFromStack 8
4646: pushFromStack 6
4647: pushFromStack 3
4648: pushFromStack 3
4649: call with 2 arguments
4650: pushFromStack 6
4651: createFunction with 0 arguments capturing 0 starting at ip-4598
4652: pushConstant inline builtinIfElse
4653: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
4654: pushFromStack 1
4655: pushFromStack 5
4656: pushFromStack 2
4657: pushFromStack 5
4658: pushFromStack 9
4659: call with 3 arguments
4660: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
4661: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
4662: pushFromStack 4
4663: pushFromStack 3
4664: pushFromStack 3
4665: pushFromStack 3
4666: pushFromStack 12
4667: call with 3 arguments
4668: pushConstant <replaced address 161fa8b20ca41330> { 0 arguments (capturing nothing) → ip-1846 }
4669: pushFromStack 6
4670: pushFromStack 9
4671: pushFromStack 5
4672: pushFromStack 3
4673: pushFromStack 14
4674: call with 3 arguments
4675: traceCallEnds without return value
4676: pushConstant inline builtinGetArgumentCount
4677: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
4678: pushFromStack 1
4679: pushFromStack 29
4680: pushFromStack 2
4681: call with 1 argument
4682: traceCallEnds without return value
4683: pushConstant inline 1
4684: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
4685: pushFromStack 7
4686: drop
4687: pushFromStack 5
4688: drop
4689: pushFromStack 24
4690: pushFromStack 3
4691: pushFromStack 3
4692: pushFromStack 3
4693: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
4694: pushFromStack 1
4695: dup by 1
4696: pushFromStack 1
4697: popMultipleBelowTop 2
4698: return
# Builtins::ifElse:1:isMatch:else
4699: pushFromStack 1
4700: dup by 1
4701: pushConstant inline builtinEquals
4702: pushConstant inline False
4703: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
4704: pushFromStack 2
4705: pushFromStack 2
4706: pushFromStack 6
4707: pushFromStack 3
4708: call with 2 arguments
4709: pushConstant inline builtinIfElse
4710: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
4711: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4712: pushFromStack 2
4713: pushFromStack 4
4714: pushFromStack 3
4715: pushFromStack 3
4716: pushFromStack 8
4717: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
4718: pushFromStack 1
4719: dup by 1
4720: pushConstant inline builtinEquals
4721: pushConstant inline False
4722: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4723: pushFromStack 2
4724: pushFromStack 5
4725: pushFromStack 3
4726: pushFromStack 3
4727: tailCall with 5 locals and 2 arguments
4728: pushFromStack 1
4729: dup by 1
4730: pushConstant inline builtinEquals
4731: pushConstant inline False
4732: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4733: pushFromStack 2
4734: pushFromStack 5
4735: pushFromStack 3
4736: pushFromStack 3
4737: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
4738: pushFromStack 1
4739: dup by 1
4740: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
4741: pushFromStack 0
4742: pushFromStack 3
4743: panic
4744: popMultipleBelowTop 3
4745: return
# Core:result:mapOr:18
4746: pushFromStack 2
4747: dup by 1
4748: pushFromStack 1
4749: drop
4750: pushFromStack 2
4751: popMultipleBelowTop 3
4752: return
# Core:result:mapOr
4753: pushFromStack 3
4754: dup by 5
4755: pushFromStack 2
4756: dup by 4
4757: pushFromStack 0
4758: dup by 4
4759: pushConstant <replaced address 017970d57aa05a94> Core:result:mapOr:2
4760: pushConstant <replaced address c2082fb1645bc1fc> { 1 argument (capturing nothing) → ip-2300 }
4761: pushFromStack 1
4762: pushFromStack 1
4763: pushFromStack 7
4764: pushFromStack 2
4765: traceCallStarts (1 argument)
4766: pushConstant inline builtinTypeOf
4767: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4768: pushFromStack 1
4769: pushFromStack 8
4770: pushFromStack 2
4771: call with 1 argument
4772: pushConstant inline builtinEquals
4773: pushConstant inline Tag
4774: pushFromStack 1
4775: pushFromStack 1
4776: pushFromStack 4
4777: pushFromStack 6
4778: call with 2 arguments
4779: pushFromStack 11
4780: createFunction with 0 arguments capturing 0 starting at ip-4461
4781: pushConstant inline builtinIfElse
4782: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4783: pushFromStack 1
4784: pushFromStack 5
4785: pushFromStack 4
4786: pushFromStack 3
4787: pushFromStack 12
4788: call with 3 arguments
4789: pushFromStack 0
4790: dup by 1
4791: pushConstant inline builtinTagWithoutValue
4792: pushFromStack 0
4793: pushFromStack 2
4794: pushFromStack 12
4795: call with 1 argument
4796: pushConstant inline Match
4797: pushFromStack 10
4798: pushFromStack 2
4799: pushFromStack 2
4800: pushFromStack 15
4801: call with 2 arguments
4802: pushFromStack 4
4803: createFunction with 0 arguments capturing 0 starting at ip-4486
4804: pushFromStack 10
4805: createFunction with 0 arguments capturing 0 starting at ip-4555
4806: pushFromStack 10
4807: pushFromStack 5
4808: pushFromStack 4
4809: pushFromStack 3
4810: pushFromStack 21
4811: call with 3 arguments
4812: pushFromStack 8
4813: pushFromStack 1
4814: pushFromStack 20
4815: call with 1 argument
4816: pushFromStack 17
4817: pushFromStack 1
4818: pushFromStack 9
4819: pushFromStack 22
4820: call with 2 arguments
4821: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
4822: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
4823: pushFromStack 15
4824: pushFromStack 3
4825: pushFromStack 3
4826: pushFromStack 3
4827: pushFromStack 26
4828: call with 3 arguments
4829: pushFromStack 0
4830: dup by 3
4831: traceCallEnds without return value
4832: pushConstant <replaced address 5e7fed672c5c456a> Core:result:mapOr:4
4833: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4834: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
4835: pushFromStack 2
4836: pushFromStack 2
4837: pushFromStack 5
4838: pushFromStack 3
4839: pushFromStack 34
4840: pushFromStack 4
4841: traceCallStarts (3 arguments)
4842: pushConstant inline True
4843: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
4844: pushFromStack 26
4845: pushFromStack 6
4846: pushFromStack 3
4847: pushFromStack 3
4848: call with 2 arguments
4849: pushFromStack 6
4850: createFunction with 0 arguments capturing 0 starting at ip-4580
4851: pushFromStack 24
4852: pushFromStack 3
4853: pushFromStack 12
4854: pushFromStack 3
4855: pushFromStack 7
4856: call with 3 arguments
4857: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
4858: pushConstant <replaced address 50912176953f2156> { 0 arguments (capturing nothing) → ip-4408 }
4859: pushFromStack 27
4860: pushFromStack 3
4861: pushFromStack 3
4862: pushFromStack 3
4863: pushFromStack 10
4864: call with 3 arguments
4865: pushFromStack 39
4866: createFunction with 0 arguments capturing 0 starting at ip-4590
4867: pushFromStack 30
4868: pushFromStack 8
4869: pushFromStack 6
4870: pushFromStack 3
4871: pushFromStack 13
4872: call with 3 arguments
4873: traceCallEnds without return value
4874: pushConstant <replaced address ea65fb20656c9a12> Core:result:mapOr:12
4875: pushConstant <replaced address 9d41aee4f1fc136e> { 1 argument (capturing nothing) → ip-1990 }
4876: pushFromStack 1
4877: pushFromStack 1
4878: pushFromStack 48
4879: pushFromStack 2
4880: traceCallStarts (1 argument)
4881: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
4882: pushFromStack 42
4883: pushFromStack 48
4884: pushFromStack 2
4885: call with 1 argument
4886: pushConstant inline Function
4887: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
4888: pushFromStack 42
4889: pushFromStack 3
4890: pushFromStack 3
4891: pushFromStack 3
4892: call with 2 arguments
4893: pushFromStack 0
4894: dup by 4
4895: pushFromStack 51
4896: createFunction with 0 arguments capturing 0 starting at ip-4608
4897: pushFromStack 0
4898: dup by 2
4899: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
4900: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
4901: pushFromStack 1
4902: pushFromStack 1
4903: pushFromStack 6
4904: pushFromStack 5
4905: pushFromStack 31
4906: pushFromStack 4
4907: traceCallStarts (3 arguments)
4908: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
4909: pushFromStack 48
4910: pushFromStack 24
4911: pushFromStack 7
4912: pushFromStack 3
4913: call with 2 arguments
4914: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
4915: pushFromStack 45
4916: pushFromStack 2
4917: pushFromStack 2
4918: pushFromStack 47
4919: pushFromStack 6
4920: call with 3 arguments
4921: pushFromStack 0
4922: dup by 1
4923: pushFromStack 43
4924: pushFromStack 1
4925: pushFromStack 5
4926: call with 1 argument
4927: pushFromStack 52
4928: pushFromStack 1
4929: pushFromStack 44
4930: pushFromStack 7
4931: call with 2 arguments
4932: pushFromStack 2
4933: createFunction with 0 arguments capturing 0 starting at ip-4694
4934: pushFromStack 12
4935: createFunction with 0 arguments capturing 0 starting at ip-4699
4936: pushFromStack 52
4937: pushFromStack 5
4938: pushFromStack 4
4939: pushFromStack 3
4940: pushFromStack 13
4941: call with 3 arguments
4942: pushFromStack 50
4943: pushFromStack 1
4944: pushFromStack 12
4945: call with 1 argument
4946: pushFromStack 59
4947: pushFromStack 1
4948: pushFromStack 51
4949: pushFromStack 14
4950: call with 2 arguments
4951: pushFromStack 55
4952: pushFromStack 1
4953: pushFromStack 43
4954: pushFromStack 43
4955: pushFromStack 16
4956: call with 3 arguments
4957: pushFromStack 0
4958: dup by 3
4959: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
4960: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
4961: pushFromStack 1
4962: pushFromStack 41
4963: pushFromStack 4
4964: pushFromStack 3
4965: pushFromStack 21
4966: pushFromStack 4
4967: traceCallStarts (3 arguments)
4968: pushFromStack 63
4969: pushFromStack 3
4970: pushFromStack 40
4971: pushFromStack 40
4972: call with 2 arguments
4973: pushFromStack 3
4974: createFunction with 0 arguments capturing 0 starting at ip-4718
4975: pushFromStack 61
4976: pushFromStack 3
4977: pushFromStack 49
4978: pushFromStack 3
4979: pushFromStack 44
4980: call with 3 arguments
4981: pushConstant <replaced address bbfd050c570524d0> { 0 arguments (capturing nothing) → ip-214 }
4982: pushFromStack 63
4983: pushFromStack 2
4984: pushFromStack 39
4985: pushFromStack 3
4986: pushFromStack 46
4987: call with 3 arguments
4988: pushConstant <replaced address 967bfb90bb1a8797> { 0 arguments (capturing nothing) → ip-1853 }
4989: pushFromStack 65
4990: pushFromStack 6
4991: pushFromStack 41
4992: pushFromStack 3
4993: pushFromStack 48
4994: call with 3 arguments
4995: traceCallEnds without return value
4996: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
4997: pushFromStack 0
4998: pushFromStack 68
4999: pushFromStack 18
5000: pushFromStack 30
5001: pushFromStack 56
5002: pushFromStack 4
5003: traceCallStarts (3 arguments)
5004: pushFromStack 67
5005: pushFromStack 17
5006: pushFromStack 29
5007: pushFromStack 55
5008: pushFromStack 4
5009: call with 3 arguments
5010: pushFromStack 0
5011: dup by 3
5012: traceCallEnds without return value
5013: traceCallEnds without return value
5014: traceCallEnds without return value
5015: pushConstant <replaced address 476c77b2172884e8> Core:result:mapOr:14
5016: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
5017: pushFromStack 1
5018: pushFromStack 53
5019: pushFromStack 4
5020: pushFromStack 3
5021: pushFromStack 45
5022: pushFromStack 4
5023: traceCallStarts (3 arguments)
5024: pushFromStack 75
5025: pushFromStack 3
5026: pushFromStack 52
5027: pushFromStack 52
5028: call with 2 arguments
5029: pushFromStack 3
5030: createFunction with 0 arguments capturing 0 starting at ip-4728
5031: pushFromStack 73
5032: pushFromStack 3
5033: pushFromStack 61
5034: pushFromStack 3
5035: pushFromStack 56
5036: call with 3 arguments
5037: pushConstant <replaced address b92158e2d194ec6d> { 0 arguments (capturing nothing) → ip-4415 }
5038: pushFromStack 75
5039: pushFromStack 2
5040: pushFromStack 51
5041: pushFromStack 3
5042: pushFromStack 58
5043: call with 3 arguments
5044: pushFromStack 47
5045: createFunction with 0 arguments capturing 0 starting at ip-4738
5046: pushFromStack 78
5047: pushFromStack 7
5048: pushFromStack 54
5049: pushFromStack 3
5050: pushFromStack 61
5051: call with 3 arguments
5052: traceCallEnds without return value
5053: pushFromStack 91
5054: createFunction with 1 argument capturing 0 starting at ip-4746
5055: pushFromStack 0
5056: dup by 1
5057: pushConstant <replaced address 6ac24dff13e30e79> Core:result:mapOr:19
5058: pushConstant <replaced address 43fc308333ab851f> { 3 arguments (capturing nothing) → ip-3423 }
5059: pushFromStack 1
5060: pushFromStack 1
5061: pushFromStack 76
5062: pushFromStack 47
5063: pushFromStack 6
5064: pushFromStack 4
5065: traceTailCall (3 arguments)
5066: pushFromStack 55
5067: drop
5068: pushFromStack 52
5069: drop
5070: pushFromStack 19
5071: drop
5072: pushFromStack 17
5073: drop
5074: pushFromStack 7
5075: drop
5076: pushFromStack 4
5077: drop
5078: pushFromStack 0
5079: pushFromStack 75
5080: pushFromStack 46
5081: pushFromStack 5
5082: pushFromStack 5
5083: tailCall with 98 locals and 3 arguments
# anonymous:$generated::needs:isConditionBool:else
5084: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
5085: pushConstant <replaced address eed0e5dcad294fd3> Core:result:flatMap:4
5086: pushFromStack 1
5087: pushFromStack 1
5088: panic
5089: popMultipleBelowTop 3
5090: return
5091: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
5092: pushConstant <replaced address d7bd702797f58f51> Core:result:flatMap:14
5093: pushFromStack 1
5094: pushFromStack 1
5095: panic
5096: popMultipleBelowTop 3
5097: return
# Core:result:flatMap:17:2:doesTagHaveValue:then
5098: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
5099: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5100: pushFromStack 1
5101: pushFromStack 1
5102: panic
5103: popMultipleBelowTop 3
5104: return
# Core:result:flatMap:17:2:calleeIsFunction:else
5105: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
5106: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5107: pushFromStack 1
5108: pushFromStack 1
5109: panic
5110: popMultipleBelowTop 3
5111: return
# Core:result:is:1:equals:then
5112: pushFromStack 1
5113: dup by 1
5114: pushConstant inline builtinTagGetValue
5115: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5116: pushFromStack 1
5117: pushFromStack 4
5118: pushFromStack 2
5119: call with 1 argument
5120: pushFromStack 0
5121: createList 1
5122: pushFromStack 0
5123: createTag Match
5124: popMultipleBelowTop 6
5125: return
5126: pushFromStack 1
5127: dup by 2
5128: pushConstant inline builtinTagHasValue
5129: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5130: pushFromStack 1
5131: pushFromStack 4
5132: pushFromStack 2
5133: call with 1 argument
5134: pushConstant inline builtinEquals
5135: pushConstant inline True
5136: pushFromStack 1
5137: pushFromStack 1
5138: pushFromStack 4
5139: pushFromStack 6
5140: call with 2 arguments
5141: pushFromStack 7
5142: createFunction with 0 arguments capturing 0 starting at ip-5112
5143: pushConstant inline builtinIfElse
5144: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5145: pushFromStack 1
5146: pushFromStack 5
5147: pushFromStack 4
5148: pushFromStack 3
5149: pushFromStack 12
5150: tailCall with 12 locals and 3 arguments
5151: pushFromStack 1
5152: dup by 2
5153: pushConstant inline builtinTagWithoutValue
5154: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5155: pushFromStack 1
5156: pushFromStack 4
5157: pushFromStack 2
5158: call with 1 argument
5159: pushConstant inline builtinEquals
5160: pushConstant inline Ok
5161: pushFromStack 1
5162: pushFromStack 1
5163: pushFromStack 4
5164: pushFromStack 6
5165: call with 2 arguments
5166: pushFromStack 7
5167: createFunction with 0 arguments capturing 0 starting at ip-5126
5168: pushConstant inline builtinIfElse
5169: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5170: pushFromStack 1
5171: pushFromStack 5
5172: pushFromStack 4
5173: pushFromStack 3
5174: pushFromStack 12
5175: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
5176: pushFromStack 1
5177: dup by 1
5178: pushFromStack 1
5179: popMultipleBelowTop 2
5180: return
# Core:result:is:1:equals:then
5181: pushFromStack 1
5182: dup by 1
5183: pushConstant inline builtinTagGetValue
5184: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5185: pushFromStack 1
5186: pushFromStack 4
5187: pushFromStack 2
5188: call with 1 argument
5189: pushFromStack 0
5190: createList 1
5191: pushFromStack 0
5192: createTag Match
5193: popMultipleBelowTop 6
5194: return
5195: pushFromStack 1
5196: dup by 2
5197: pushConstant inline builtinTagHasValue
5198: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5199: pushFromStack 1
5200: pushFromStack 4
5201: pushFromStack 2
5202: call with 1 argument
5203: pushConstant inline builtinEquals
5204: pushConstant inline True
5205: pushFromStack 1
5206: pushFromStack 1
5207: pushFromStack 4
5208: pushFromStack 6
5209: call with 2 arguments
5210: pushFromStack 7
5211: createFunction with 0 arguments capturing 0 starting at ip-5181
5212: pushConstant inline builtinIfElse
5213: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5214: pushFromStack 1
5215: pushFromStack 5
5216: pushFromStack 4
5217: pushFromStack 3
5218: pushFromStack 12
5219: tailCall with 12 locals and 3 arguments
5220: pushFromStack 1
5221: dup by 2
5222: pushConstant inline builtinTagWithoutValue
5223: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5224: pushFromStack 1
5225: pushFromStack 4
5226: pushFromStack 2
5227: call with 1 argument
5228: pushConstant inline builtinEquals
5229: pushConstant inline Error
5230: pushFromStack 1
5231: pushFromStack 1
5232: pushFromStack 4
5233: pushFromStack 6
5234: call with 2 arguments
5235: pushFromStack 7
5236: createFunction with 0 arguments capturing 0 starting at ip-5195
5237: pushConstant inline builtinIfElse
5238: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5239: pushFromStack 1
5240: pushFromStack 5
5241: pushFromStack 4
5242: pushFromStack 3
5243: pushFromStack 12
5244: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
5245: pushFromStack 1
5246: dup by 2
5247: pushConstant inline builtinTypeOf
5248: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5249: pushFromStack 1
5250: pushFromStack 4
5251: pushFromStack 2
5252: call with 1 argument
5253: pushConstant inline builtinEquals
5254: pushConstant inline Tag
5255: pushFromStack 1
5256: pushFromStack 1
5257: pushFromStack 4
5258: pushFromStack 6
5259: call with 2 arguments
5260: pushFromStack 7
5261: createFunction with 0 arguments capturing 0 starting at ip-5220
5262: pushConstant inline builtinIfElse
5263: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5264: pushFromStack 1
5265: pushFromStack 5
5266: pushFromStack 4
5267: pushFromStack 3
5268: pushFromStack 12
5269: tailCall with 12 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
5270: pushFromStack 1
5271: dup by 1
5272: pushConstant inline builtinEquals
5273: pushConstant inline False
5274: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
5275: pushFromStack 2
5276: pushFromStack 5
5277: pushFromStack 3
5278: pushFromStack 3
5279: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
5280: pushFromStack 1
5281: dup by 1
5282: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
5283: pushFromStack 0
5284: pushFromStack 3
5285: panic
5286: popMultipleBelowTop 3
5287: return
# anonymous:$generated::needs:isConditionTrue:else
5288: pushFromStack 1
5289: dup by 1
5290: pushConstant inline builtinEquals
5291: pushConstant inline False
5292: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
5293: pushFromStack 2
5294: pushFromStack 5
5295: pushFromStack 3
5296: pushFromStack 3
5297: tailCall with 5 locals and 2 arguments
# Core:function:is1:9
5298: pushFromStack 1
5299: dup by 3
5300: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
5301: pushConstant <replaced address 4eaaa90b93950b2c> { 1 argument (capturing nothing) → ip-140 }
5302: pushFromStack 1
5303: pushFromStack 1
5304: pushFromStack 5
5305: pushFromStack 2
5306: traceCallStarts (1 argument)
5307: pushConstant inline builtinTypeOf
5308: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
5309: pushFromStack 1
5310: pushFromStack 6
5311: pushFromStack 2
5312: call with 1 argument
5313: pushConstant inline builtinEquals
5314: pushConstant inline Function
5315: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
5316: pushFromStack 2
5317: pushFromStack 4
5318: pushFromStack 3
5319: pushFromStack 3
5320: call with 2 arguments
5321: pushFromStack 0
5322: dup by 3
5323: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
5324: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
5325: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
5326: pushFromStack 2
5327: pushFromStack 2
5328: pushFromStack 5
5329: pushFromStack 3
5330: pushFromStack 15
5331: pushFromStack 4
5332: traceCallStarts (3 arguments)
5333: pushConstant inline True
5334: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
5335: pushFromStack 8
5336: pushFromStack 6
5337: pushFromStack 3
5338: pushFromStack 3
5339: call with 2 arguments
5340: pushFromStack 6
5341: createFunction with 0 arguments capturing 0 starting at ip-5288
5342: pushConstant inline builtinIfElse
5343: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
5344: pushFromStack 1
5345: pushFromStack 5
5346: pushFromStack 2
5347: pushFromStack 5
5348: pushFromStack 9
5349: call with 3 arguments
5350: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
5351: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
5352: pushFromStack 4
5353: pushFromStack 3
5354: pushFromStack 3
5355: pushFromStack 3
5356: pushFromStack 12
5357: call with 3 arguments
5358: pushConstant <replaced address 161fa8b20ca41330> { 0 arguments (capturing nothing) → ip-1846 }
5359: pushFromStack 6
5360: pushFromStack 9
5361: pushFromStack 5
5362: pushFromStack 3
5363: pushFromStack 14
5364: call with 3 arguments
5365: traceCallEnds without return value
5366: pushConstant inline builtinGetArgumentCount
5367: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
5368: pushFromStack 1
5369: pushFromStack 29
5370: pushFromStack 2
5371: call with 1 argument
5372: traceCallEnds without return value
5373: pushConstant inline 1
5374: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
5375: pushFromStack 7
5376: drop
5377: pushFromStack 5
5378: drop
5379: pushFromStack 24
5380: pushFromStack 3
5381: pushFromStack 3
5382: pushFromStack 3
5383: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
5384: pushFromStack 1
5385: dup by 1
5386: pushFromStack 1
5387: popMultipleBelowTop 2
5388: return
# Builtins::ifElse:1:isMatch:else
5389: pushFromStack 1
5390: dup by 1
5391: pushConstant inline builtinEquals
5392: pushConstant inline False
5393: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
5394: pushFromStack 2
5395: pushFromStack 2
5396: pushFromStack 6
5397: pushFromStack 3
5398: call with 2 arguments
5399: pushConstant inline builtinIfElse
5400: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
5401: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5402: pushFromStack 2
5403: pushFromStack 4
5404: pushFromStack 3
5405: pushFromStack 3
5406: pushFromStack 8
5407: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
5408: pushFromStack 1
5409: dup by 1
5410: pushConstant inline builtinEquals
5411: pushConstant inline False
5412: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
5413: pushFromStack 2
5414: pushFromStack 5
5415: pushFromStack 3
5416: pushFromStack 3
5417: tailCall with 5 locals and 2 arguments
5418: pushFromStack 1
5419: dup by 1
5420: pushConstant inline builtinEquals
5421: pushConstant inline False
5422: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
5423: pushFromStack 2
5424: pushFromStack 5
5425: pushFromStack 3
5426: pushFromStack 3
5427: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
5428: pushFromStack 1
5429: dup by 1
5430: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
5431: pushFromStack 0
5432: pushFromStack 3
5433: panic
5434: popMultipleBelowTop 3
5435: return
# Core:result:flatMap:17:2:doesTagHaveValue:else
5436: pushFromStack 2
5437: dup by 1
5438: pushFromStack 1
5439: dup by 1
5440: pushConstant inline builtinTagWithValue
5441: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5442: pushFromStack 1
5443: pushFromStack 5
5444: pushFromStack 5
5445: pushFromStack 3
5446: tailCall with 5 locals and 2 arguments
# Core:result:flatMap:17:2:calleeIsTag:then
5447: pushFromStack 2
5448: dup by 2
5449: pushFromStack 1
5450: dup by 1
5451: pushConstant inline builtinTagHasValue
5452: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5453: pushFromStack 1
5454: pushFromStack 5
5455: pushFromStack 2
5456: call with 1 argument
5457: pushFromStack 5
5458: pushFromStack 5
5459: createFunction with 0 arguments capturing 1, 0 starting at ip-5436
5460: pushConstant inline builtinIfElse
5461: pushConstant <replaced address ee7f5eade172321c> { 0 arguments (capturing nothing) → ip-5098 }
5462: pushFromStack 1
5463: pushFromStack 6
5464: pushFromStack 2
5465: pushFromStack 5
5466: pushFromStack 10
5467: tailCall with 11 locals and 3 arguments
# Core:result:flatMap:17:2:hasCorrectNumberOfArguments:then
5468: pushFromStack 2
5469: dup by 2
5470: pushFromStack 1
5471: dup by 2
5472: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5473: pushFromStack 0
5474: pushFromStack 4
5475: pushFromStack 4
5476: pushFromStack 2
5477: traceTailCall (1 argument)
5478: pushFromStack 3
5479: pushFromStack 3
5480: pushFromStack 2
5481: tailCall with 4 locals and 1 argument
# Core:result:flatMap:17:2:hasCorrectNumberOfArguments:else
5482: pushFromStack 1
5483: dup by 1
5484: pushConstant inline builtinToDebugText
5485: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5486: pushFromStack 1
5487: pushFromStack 4
5488: pushFromStack 2
5489: call with 1 argument
5490: pushConstant inline builtinTextConcatenate
5491: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
5492: pushFromStack 1
5493: pushFromStack 1
5494: pushFromStack 4
5495: pushFromStack 6
5496: call with 2 arguments
5497: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
5498: pushFromStack 3
5499: pushFromStack 2
5500: pushFromStack 2
5501: pushFromStack 8
5502: call with 2 arguments
5503: pushFromStack 0
5504: pushFromStack 7
5505: panic
5506: popMultipleBelowTop 10
5507: return
# Core:result:flatMap:17:2:calleeIsFunction:then
5508: pushFromStack 2
5509: dup by 2
5510: pushFromStack 1
5511: dup by 1
5512: pushConstant inline builtinGetArgumentCount
5513: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5514: pushFromStack 1
5515: pushFromStack 5
5516: pushFromStack 2
5517: call with 1 argument
5518: pushFromStack 0
5519: dup by 1
5520: pushConstant inline builtinEquals
5521: pushConstant inline 1
5522: pushFromStack 1
5523: pushFromStack 3
5524: pushFromStack 2
5525: pushFromStack 6
5526: call with 2 arguments
5527: pushFromStack 8
5528: pushFromStack 8
5529: createFunction with 0 arguments capturing 1, 0 starting at ip-5468
5530: pushFromStack 6
5531: createFunction with 0 arguments capturing 0 starting at ip-5482
5532: pushConstant inline builtinIfElse
5533: pushFromStack 0
5534: pushFromStack 7
5535: pushFromStack 5
5536: pushFromStack 4
5537: pushFromStack 14
5538: tailCall with 15 locals and 3 arguments
# Core:result:flatMap:17:2:calleeIsTag:else
5539: pushFromStack 3
5540: dup by 1
5541: pushFromStack 2
5542: dup by 1
5543: pushFromStack 1
5544: dup by 1
5545: pushConstant inline builtinEquals
5546: pushConstant inline Function
5547: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5548: pushFromStack 2
5549: pushFromStack 5
5550: pushFromStack 3
5551: pushFromStack 3
5552: call with 2 arguments
5553: pushFromStack 7
5554: pushFromStack 7
5555: createFunction with 0 arguments capturing 1, 0 starting at ip-5508
5556: pushConstant inline builtinIfElse
5557: pushConstant <replaced address 6edbb18c8fe8a683> { 0 arguments (capturing nothing) → ip-5105 }
5558: pushFromStack 1
5559: pushFromStack 6
5560: pushFromStack 4
5561: pushFromStack 3
5562: pushFromStack 10
5563: tailCall with 13 locals and 3 arguments
# Core:result:flatMap:17
5564: pushFromStack 2
5565: dup by 3
5566: pushFromStack 1
5567: dup by 1
5568: pushConstant inline builtinTypeOf
5569: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
5570: pushFromStack 1
5571: pushFromStack 5
5572: pushFromStack 2
5573: call with 1 argument
5574: pushFromStack 0
5575: dup by 1
5576: pushConstant inline builtinEquals
5577: pushConstant inline Tag
5578: pushFromStack 1
5579: pushFromStack 3
5580: pushFromStack 2
5581: pushFromStack 6
5582: call with 2 arguments
5583: pushFromStack 8
5584: pushFromStack 8
5585: createFunction with 0 arguments capturing 1, 0 starting at ip-5447
5586: pushFromStack 2
5587: pushFromStack 2
5588: pushFromStack 8
5589: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-5539
5590: pushConstant inline builtinIfElse
5591: pushFromStack 0
5592: pushFromStack 9
5593: pushFromStack 7
5594: pushFromStack 4
5595: pushFromStack 16
5596: tailCall with 17 locals and 3 arguments
# Core:result:flatMap
5597: pushFromStack 2
5598: dup by 7
5599: pushFromStack 1
5600: dup by 3
5601: pushFromStack 0
5602: dup by 4
5603: pushConstant <replaced address 05e45b91c25d1055> Core:result:flatMap:2
5604: pushConstant <replaced address c2082fb1645bc1fc> { 1 argument (capturing nothing) → ip-2300 }
5605: pushFromStack 1
5606: pushFromStack 1
5607: pushFromStack 6
5608: pushFromStack 2
5609: traceCallStarts (1 argument)
5610: pushConstant inline builtinTypeOf
5611: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5612: pushFromStack 1
5613: pushFromStack 7
5614: pushFromStack 2
5615: call with 1 argument
5616: pushConstant inline builtinEquals
5617: pushConstant inline Tag
5618: pushFromStack 1
5619: pushFromStack 1
5620: pushFromStack 4
5621: pushFromStack 6
5622: call with 2 arguments
5623: pushFromStack 10
5624: createFunction with 0 arguments capturing 0 starting at ip-5151
5625: pushConstant inline builtinIfElse
5626: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5627: pushFromStack 1
5628: pushFromStack 5
5629: pushFromStack 4
5630: pushFromStack 3
5631: pushFromStack 12
5632: call with 3 arguments
5633: pushFromStack 0
5634: dup by 1
5635: pushConstant inline builtinTagWithoutValue
5636: pushFromStack 0
5637: pushFromStack 2
5638: pushFromStack 12
5639: call with 1 argument
5640: pushConstant inline Match
5641: pushFromStack 10
5642: pushFromStack 2
5643: pushFromStack 2
5644: pushFromStack 15
5645: call with 2 arguments
5646: pushFromStack 4
5647: createFunction with 0 arguments capturing 0 starting at ip-5176
5648: pushFromStack 10
5649: createFunction with 0 arguments capturing 0 starting at ip-5245
5650: pushFromStack 10
5651: pushFromStack 5
5652: pushFromStack 4
5653: pushFromStack 3
5654: pushFromStack 21
5655: call with 3 arguments
5656: pushFromStack 8
5657: pushFromStack 1
5658: pushFromStack 20
5659: call with 1 argument
5660: pushFromStack 17
5661: pushFromStack 1
5662: pushFromStack 9
5663: pushFromStack 22
5664: call with 2 arguments
5665: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
5666: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
5667: pushFromStack 15
5668: pushFromStack 3
5669: pushFromStack 3
5670: pushFromStack 3
5671: pushFromStack 26
5672: call with 3 arguments
5673: pushFromStack 0
5674: dup by 3
5675: traceCallEnds without return value
5676: pushConstant <replaced address eed0e5dcad294fd3> Core:result:flatMap:4
5677: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
5678: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
5679: pushFromStack 2
5680: pushFromStack 2
5681: pushFromStack 5
5682: pushFromStack 3
5683: pushFromStack 34
5684: pushFromStack 4
5685: traceCallStarts (3 arguments)
5686: pushConstant inline True
5687: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
5688: pushFromStack 26
5689: pushFromStack 6
5690: pushFromStack 3
5691: pushFromStack 3
5692: call with 2 arguments
5693: pushFromStack 6
5694: createFunction with 0 arguments capturing 0 starting at ip-5270
5695: pushFromStack 24
5696: pushFromStack 3
5697: pushFromStack 12
5698: pushFromStack 3
5699: pushFromStack 7
5700: call with 3 arguments
5701: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
5702: pushConstant <replaced address 33b9bfcd210d73a2> { 0 arguments (capturing nothing) → ip-5084 }
5703: pushFromStack 27
5704: pushFromStack 3
5705: pushFromStack 3
5706: pushFromStack 3
5707: pushFromStack 10
5708: call with 3 arguments
5709: pushFromStack 39
5710: createFunction with 0 arguments capturing 0 starting at ip-5280
5711: pushFromStack 30
5712: pushFromStack 8
5713: pushFromStack 6
5714: pushFromStack 3
5715: pushFromStack 13
5716: call with 3 arguments
5717: traceCallEnds without return value
5718: pushConstant <replaced address 7ab6f395e639a47b> Core:result:flatMap:12
5719: pushConstant <replaced address 9d41aee4f1fc136e> { 1 argument (capturing nothing) → ip-1990 }
5720: pushFromStack 1
5721: pushFromStack 1
5722: pushFromStack 47
5723: pushFromStack 2
5724: traceCallStarts (1 argument)
5725: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
5726: pushFromStack 42
5727: pushFromStack 47
5728: pushFromStack 2
5729: call with 1 argument
5730: pushConstant inline Function
5731: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
5732: pushFromStack 42
5733: pushFromStack 3
5734: pushFromStack 3
5735: pushFromStack 3
5736: call with 2 arguments
5737: pushFromStack 0
5738: dup by 4
5739: pushFromStack 50
5740: createFunction with 0 arguments capturing 0 starting at ip-5298
5741: pushFromStack 0
5742: dup by 2
5743: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
5744: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
5745: pushFromStack 1
5746: pushFromStack 1
5747: pushFromStack 6
5748: pushFromStack 5
5749: pushFromStack 31
5750: pushFromStack 4
5751: traceCallStarts (3 arguments)
5752: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
5753: pushFromStack 48
5754: pushFromStack 24
5755: pushFromStack 7
5756: pushFromStack 3
5757: call with 2 arguments
5758: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
5759: pushFromStack 45
5760: pushFromStack 2
5761: pushFromStack 2
5762: pushFromStack 47
5763: pushFromStack 6
5764: call with 3 arguments
5765: pushFromStack 0
5766: dup by 1
5767: pushFromStack 43
5768: pushFromStack 1
5769: pushFromStack 5
5770: call with 1 argument
5771: pushFromStack 52
5772: pushFromStack 1
5773: pushFromStack 44
5774: pushFromStack 7
5775: call with 2 arguments
5776: pushFromStack 2
5777: createFunction with 0 arguments capturing 0 starting at ip-5384
5778: pushFromStack 12
5779: createFunction with 0 arguments capturing 0 starting at ip-5389
5780: pushFromStack 52
5781: pushFromStack 5
5782: pushFromStack 4
5783: pushFromStack 3
5784: pushFromStack 13
5785: call with 3 arguments
5786: pushFromStack 50
5787: pushFromStack 1
5788: pushFromStack 12
5789: call with 1 argument
5790: pushFromStack 59
5791: pushFromStack 1
5792: pushFromStack 51
5793: pushFromStack 14
5794: call with 2 arguments
5795: pushFromStack 55
5796: pushFromStack 1
5797: pushFromStack 43
5798: pushFromStack 43
5799: pushFromStack 16
5800: call with 3 arguments
5801: pushFromStack 0
5802: dup by 3
5803: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
5804: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
5805: pushFromStack 1
5806: pushFromStack 41
5807: pushFromStack 4
5808: pushFromStack 3
5809: pushFromStack 21
5810: pushFromStack 4
5811: traceCallStarts (3 arguments)
5812: pushFromStack 63
5813: pushFromStack 3
5814: pushFromStack 40
5815: pushFromStack 40
5816: call with 2 arguments
5817: pushFromStack 3
5818: createFunction with 0 arguments capturing 0 starting at ip-5408
5819: pushFromStack 61
5820: pushFromStack 3
5821: pushFromStack 49
5822: pushFromStack 3
5823: pushFromStack 44
5824: call with 3 arguments
5825: pushConstant <replaced address bbfd050c570524d0> { 0 arguments (capturing nothing) → ip-214 }
5826: pushFromStack 63
5827: pushFromStack 2
5828: pushFromStack 39
5829: pushFromStack 3
5830: pushFromStack 46
5831: call with 3 arguments
5832: pushConstant <replaced address 967bfb90bb1a8797> { 0 arguments (capturing nothing) → ip-1853 }
5833: pushFromStack 65
5834: pushFromStack 6
5835: pushFromStack 41
5836: pushFromStack 3
5837: pushFromStack 48
5838: call with 3 arguments
5839: traceCallEnds without return value
5840: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
5841: pushFromStack 0
5842: pushFromStack 68
5843: pushFromStack 18
5844: pushFromStack 30
5845: pushFromStack 56
5846: pushFromStack 4
5847: traceCallStarts (3 arguments)
5848: pushFromStack 67
5849: pushFromStack 17
5850: pushFromStack 29
5851: pushFromStack 55
5852: pushFromStack 4
5853: call with 3 arguments
5854: pushFromStack 0
5855: dup by 3
5856: traceCallEnds without return value
5857: traceCallEnds without return value
5858: traceCallEnds without return value
5859: pushConstant <replaced address d7bd702797f58f51> Core:result:flatMap:14
5860: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
5861: pushFromStack 1
5862: pushFromStack 53
5863: pushFromStack 4
5864: pushFromStack 3
5865: pushFromStack 45
5866: pushFromStack 4
5867: traceCallStarts (3 arguments)
5868: pushFromStack 75
5869: pushFromStack 3
5870: pushFromStack 52
5871: pushFromStack 52
5872: call with 2 arguments
5873: pushFromStack 3
5874: createFunction with 0 arguments capturing 0 starting at ip-5418
5875: pushFromStack 73
5876: pushFromStack 3
5877: pushFromStack 61
5878: pushFromStack 3
5879: pushFromStack 56
5880: call with 3 arguments
5881: pushConstant <replaced address b41612abcf83e809> { 0 arguments (capturing nothing) → ip-5091 }
5882: pushFromStack 75
5883: pushFromStack 2
5884: pushFromStack 51
5885: pushFromStack 3
5886: pushFromStack 58
5887: call with 3 arguments
5888: pushFromStack 47
5889: createFunction with 0 arguments capturing 0 starting at ip-5428
5890: pushFromStack 78
5891: pushFromStack 7
5892: pushFromStack 54
5893: pushFromStack 3
5894: pushFromStack 61
5895: call with 3 arguments
5896: traceCallEnds without return value
5897: pushFromStack 40
5898: createFunction with 1 argument capturing 0 starting at ip-5564
5899: pushFromStack 0
5900: dup by 1
5901: pushConstant <replaced address cc33b54d0d5baf10> Core:result:flatMap:19
5902: pushConstant <replaced address 05f0bd0262d94431> { 3 arguments (capturing nothing) → ip-4753 }
5903: pushFromStack 1
5904: pushFromStack 1
5905: pushFromStack 76
5906: pushFromStack 5
5907: pushFromStack 1
5908: pushFromStack 4
5909: traceTailCall (3 arguments)
5910: pushFromStack 55
5911: drop
5912: pushFromStack 52
5913: drop
5914: pushFromStack 19
5915: drop
5916: pushFromStack 17
5917: drop
5918: pushFromStack 7
5919: drop
5920: pushFromStack 4
5921: drop
5922: pushFromStack 0
5923: pushFromStack 75
5924: pushFromStack 4
5925: pushFromStack 1
5926: pushFromStack 5
5927: tailCall with 97 locals and 3 arguments
# anonymous:$generated::needs:isConditionBool:else
5928: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
5929: pushConstant <replaced address b1574ef59cb20f81> Core:result:map:4
5930: pushFromStack 1
5931: pushFromStack 1
5932: panic
5933: popMultipleBelowTop 3
5934: return
5935: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
5936: pushConstant <replaced address c86ac4aab1e5d003> Core:result:map:14
5937: pushFromStack 1
5938: pushFromStack 1
5939: panic
5940: popMultipleBelowTop 3
5941: return
# Core:result:map:17:3:doesTagHaveValue:then
5942: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
5943: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
5944: pushFromStack 1
5945: pushFromStack 1
5946: panic
5947: popMultipleBelowTop 3
5948: return
# Core:result:map:17:3:calleeIsFunction:else
5949: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
5950: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
5951: pushFromStack 1
5952: pushFromStack 1
5953: panic
5954: popMultipleBelowTop 3
5955: return
# Core:result:is:1:equals:then
5956: pushFromStack 1
5957: dup by 1
5958: pushConstant inline builtinTagGetValue
5959: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5960: pushFromStack 1
5961: pushFromStack 4
5962: pushFromStack 2
5963: call with 1 argument
5964: pushFromStack 0
5965: createList 1
5966: pushFromStack 0
5967: createTag Match
5968: popMultipleBelowTop 6
5969: return
5970: pushFromStack 1
5971: dup by 2
5972: pushConstant inline builtinTagHasValue
5973: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5974: pushFromStack 1
5975: pushFromStack 4
5976: pushFromStack 2
5977: call with 1 argument
5978: pushConstant inline builtinEquals
5979: pushConstant inline True
5980: pushFromStack 1
5981: pushFromStack 1
5982: pushFromStack 4
5983: pushFromStack 6
5984: call with 2 arguments
5985: pushFromStack 7
5986: createFunction with 0 arguments capturing 0 starting at ip-5956
5987: pushConstant inline builtinIfElse
5988: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5989: pushFromStack 1
5990: pushFromStack 5
5991: pushFromStack 4
5992: pushFromStack 3
5993: pushFromStack 12
5994: tailCall with 12 locals and 3 arguments
5995: pushFromStack 1
5996: dup by 2
5997: pushConstant inline builtinTagWithoutValue
5998: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
5999: pushFromStack 1
6000: pushFromStack 4
6001: pushFromStack 2
6002: call with 1 argument
6003: pushConstant inline builtinEquals
6004: pushConstant inline Ok
6005: pushFromStack 1
6006: pushFromStack 1
6007: pushFromStack 4
6008: pushFromStack 6
6009: call with 2 arguments
6010: pushFromStack 7
6011: createFunction with 0 arguments capturing 0 starting at ip-5970
6012: pushConstant inline builtinIfElse
6013: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
6014: pushFromStack 1
6015: pushFromStack 5
6016: pushFromStack 4
6017: pushFromStack 3
6018: pushFromStack 12
6019: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
6020: pushFromStack 1
6021: dup by 1
6022: pushFromStack 1
6023: popMultipleBelowTop 2
6024: return
# Core:result:is:1:equals:then
6025: pushFromStack 1
6026: dup by 1
6027: pushConstant inline builtinTagGetValue
6028: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
6029: pushFromStack 1
6030: pushFromStack 4
6031: pushFromStack 2
6032: call with 1 argument
6033: pushFromStack 0
6034: createList 1
6035: pushFromStack 0
6036: createTag Match
6037: popMultipleBelowTop 6
6038: return
6039: pushFromStack 1
6040: dup by 2
6041: pushConstant inline builtinTagHasValue
6042: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
6043: pushFromStack 1
6044: pushFromStack 4
6045: pushFromStack 2
6046: call with 1 argument
6047: pushConstant inline builtinEquals
6048: pushConstant inline True
6049: pushFromStack 1
6050: pushFromStack 1
6051: pushFromStack 4
6052: pushFromStack 6
6053: call with 2 arguments
6054: pushFromStack 7
6055: createFunction with 0 arguments capturing 0 starting at ip-6025
6056: pushConstant inline builtinIfElse
6057: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
6058: pushFromStack 1
6059: pushFromStack 5
6060: pushFromStack 4
6061: pushFromStack 3
6062: pushFromStack 12
6063: tailCall with 12 locals and 3 arguments
6064: pushFromStack 1
6065: dup by 2
6066: pushConstant inline builtinTagWithoutValue
6067: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
6068: pushFromStack 1
6069: pushFromStack 4
6070: pushFromStack 2
6071: call with 1 argument
6072: pushConstant inline builtinEquals
6073: pushConstant inline Error
6074: pushFromStack 1
6075: pushFromStack 1
6076: pushFromStack 4
6077: pushFromStack 6
6078: call with 2 arguments
6079: pushFromStack 7
6080: createFunction with 0 arguments capturing 0 starting at ip-6039
6081: pushConstant inline builtinIfElse
6082: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
6083: pushFromStack 1
6084: pushFromStack 5
6085: pushFromStack 4
6086: pushFromStack 3
6087: pushFromStack 12
6088: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
6089: pushFromStack 1
6090: dup by 2
6091: pushConstant inline builtinTypeOf
6092: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
6093: pushFromStack 1
6094: pushFromStack 4
6095: pushFromStack 2
6096: call with 1 argument
6097: pushConstant inline builtinEquals
6098: pushConstant inline Tag
6099: pushFromStack 1
6100: pushFromStack 1
6101: pushFromStack 4
6102: pushFromStack 6
6103: call with 2 arguments
6104: pushFromStack 7
6105: createFunction with 0 arguments capturing 0 starting at ip-6064
6106: pushConstant inline builtinIfElse
6107: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
6108: pushFromStack 1
6109: pushFromStack 5
6110: pushFromStack 4
6111: pushFromStack 3
6112: pushFromStack 12
6113: tailCall with 12 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
6114: pushFromStack 1
6115: dup by 1
6116: pushConstant inline builtinEquals
6117: pushConstant inline False
6118: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
6119: pushFromStack 2
6120: pushFromStack 5
6121: pushFromStack 3
6122: pushFromStack 3
6123: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
6124: pushFromStack 1
6125: dup by 1
6126: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
6127: pushFromStack 0
6128: pushFromStack 3
6129: panic
6130: popMultipleBelowTop 3
6131: return
# anonymous:$generated::needs:isConditionTrue:else
6132: pushFromStack 1
6133: dup by 1
6134: pushConstant inline builtinEquals
6135: pushConstant inline False
6136: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
6137: pushFromStack 2
6138: pushFromStack 5
6139: pushFromStack 3
6140: pushFromStack 3
6141: tailCall with 5 locals and 2 arguments
# Core:function:is1:9
6142: pushFromStack 1
6143: dup by 3
6144: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
6145: pushConstant <replaced address 4eaaa90b93950b2c> { 1 argument (capturing nothing) → ip-140 }
6146: pushFromStack 1
6147: pushFromStack 1
6148: pushFromStack 5
6149: pushFromStack 2
6150: traceCallStarts (1 argument)
6151: pushConstant inline builtinTypeOf
6152: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
6153: pushFromStack 1
6154: pushFromStack 6
6155: pushFromStack 2
6156: call with 1 argument
6157: pushConstant inline builtinEquals
6158: pushConstant inline Function
6159: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
6160: pushFromStack 2
6161: pushFromStack 4
6162: pushFromStack 3
6163: pushFromStack 3
6164: call with 2 arguments
6165: pushFromStack 0
6166: dup by 3
6167: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
6168: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
6169: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
6170: pushFromStack 2
6171: pushFromStack 2
6172: pushFromStack 5
6173: pushFromStack 3
6174: pushFromStack 15
6175: pushFromStack 4
6176: traceCallStarts (3 arguments)
6177: pushConstant inline True
6178: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
6179: pushFromStack 8
6180: pushFromStack 6
6181: pushFromStack 3
6182: pushFromStack 3
6183: call with 2 arguments
6184: pushFromStack 6
6185: createFunction with 0 arguments capturing 0 starting at ip-6132
6186: pushConstant inline builtinIfElse
6187: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
6188: pushFromStack 1
6189: pushFromStack 5
6190: pushFromStack 2
6191: pushFromStack 5
6192: pushFromStack 9
6193: call with 3 arguments
6194: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
6195: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
6196: pushFromStack 4
6197: pushFromStack 3
6198: pushFromStack 3
6199: pushFromStack 3
6200: pushFromStack 12
6201: call with 3 arguments
6202: pushConstant <replaced address 161fa8b20ca41330> { 0 arguments (capturing nothing) → ip-1846 }
6203: pushFromStack 6
6204: pushFromStack 9
6205: pushFromStack 5
6206: pushFromStack 3
6207: pushFromStack 14
6208: call with 3 arguments
6209: traceCallEnds without return value
6210: pushConstant inline builtinGetArgumentCount
6211: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
6212: pushFromStack 1
6213: pushFromStack 29
6214: pushFromStack 2
6215: call with 1 argument
6216: traceCallEnds without return value
6217: pushConstant inline 1
6218: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
6219: pushFromStack 7
6220: drop
6221: pushFromStack 5
6222: drop
6223: pushFromStack 24
6224: pushFromStack 3
6225: pushFromStack 3
6226: pushFromStack 3
6227: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
6228: pushFromStack 1
6229: dup by 1
6230: pushFromStack 1
6231: popMultipleBelowTop 2
6232: return
# Builtins::ifElse:1:isMatch:else
6233: pushFromStack 1
6234: dup by 1
6235: pushConstant inline builtinEquals
6236: pushConstant inline False
6237: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
6238: pushFromStack 2
6239: pushFromStack 2
6240: pushFromStack 6
6241: pushFromStack 3
6242: call with 2 arguments
6243: pushConstant inline builtinIfElse
6244: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
6245: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
6246: pushFromStack 2
6247: pushFromStack 4
6248: pushFromStack 3
6249: pushFromStack 3
6250: pushFromStack 8
6251: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
6252: pushFromStack 1
6253: dup by 1
6254: pushConstant inline builtinEquals
6255: pushConstant inline False
6256: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
6257: pushFromStack 2
6258: pushFromStack 5
6259: pushFromStack 3
6260: pushFromStack 3
6261: tailCall with 5 locals and 2 arguments
6262: pushFromStack 1
6263: dup by 1
6264: pushConstant inline builtinEquals
6265: pushConstant inline False
6266: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
6267: pushFromStack 2
6268: pushFromStack 5
6269: pushFromStack 3
6270: pushFromStack 3
6271: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
6272: pushFromStack 1
6273: dup by 1
6274: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
6275: pushFromStack 0
6276: pushFromStack 3
6277: panic
6278: popMultipleBelowTop 3
6279: return
# Core:result:map:17:3:doesTagHaveValue:else
6280: pushFromStack 2
6281: dup by 1
6282: pushFromStack 1
6283: dup by 1
6284: pushConstant inline builtinTagWithValue
6285: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
6286: pushFromStack 1
6287: pushFromStack 5
6288: pushFromStack 5
6289: pushFromStack 3
6290: tailCall with 5 locals and 2 arguments
# Core:result:map:17:3:calleeIsTag:then
6291: pushFromStack 2
6292: dup by 2
6293: pushFromStack 1
6294: dup by 1
6295: pushConstant inline builtinTagHasValue
6296: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
6297: pushFromStack 1
6298: pushFromStack 5
6299: pushFromStack 2
6300: call with 1 argument
6301: pushFromStack 5
6302: pushFromStack 5
6303: createFunction with 0 arguments capturing 1, 0 starting at ip-6280
6304: pushConstant inline builtinIfElse
6305: pushConstant <replaced address e23b1b242d4d6330> { 0 arguments (capturing nothing) → ip-5942 }
6306: pushFromStack 1
6307: pushFromStack 6
6308: pushFromStack 2
6309: pushFromStack 5
6310: pushFromStack 10
6311: tailCall with 11 locals and 3 arguments
# Core:result:map:17:3:hasCorrectNumberOfArguments:then
6312: pushFromStack 2
6313: dup by 2
6314: pushFromStack 1
6315: dup by 2
6316: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
6317: pushFromStack 0
6318: pushFromStack 4
6319: pushFromStack 4
6320: pushFromStack 2
6321: traceTailCall (1 argument)
6322: pushFromStack 3
6323: pushFromStack 3
6324: pushFromStack 2
6325: tailCall with 4 locals and 1 argument
# Core:result:map:17:3:hasCorrectNumberOfArguments:else
6326: pushFromStack 1
6327: dup by 1
6328: pushConstant inline builtinToDebugText
6329: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
6330: pushFromStack 1
6331: pushFromStack 4
6332: pushFromStack 2
6333: call with 1 argument
6334: pushConstant inline builtinTextConcatenate
6335: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
6336: pushFromStack 1
6337: pushFromStack 1
6338: pushFromStack 4
6339: pushFromStack 6
6340: call with 2 arguments
6341: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
6342: pushFromStack 3
6343: pushFromStack 2
6344: pushFromStack 2
6345: pushFromStack 8
6346: call with 2 arguments
6347: pushFromStack 0
6348: pushFromStack 7
6349: panic
6350: popMultipleBelowTop 10
6351: return
# Core:result:map:17:3:calleeIsFunction:then
6352: pushFromStack 2
6353: dup by 2
6354: pushFromStack 1
6355: dup by 1
6356: pushConstant inline builtinGetArgumentCount
6357: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
6358: pushFromStack 1
6359: pushFromStack 5
6360: pushFromStack 2
6361: call with 1 argument
6362: pushFromStack 0
6363: dup by 1
6364: pushConstant inline builtinEquals
6365: pushConstant inline 1
6366: pushFromStack 1
6367: pushFromStack 3
6368: pushFromStack 2
6369: pushFromStack 6
6370: call with 2 arguments
6371: pushFromStack 8
6372: pushFromStack 8
6373: createFunction with 0 arguments capturing 1, 0 starting at ip-6312
6374: pushFromStack 6
6375: createFunction with 0 arguments capturing 0 starting at ip-6326
6376: pushConstant inline builtinIfElse
6377: pushFromStack 0
6378: pushFromStack 7
6379: pushFromStack 5
6380: pushFromStack 4
6381: pushFromStack 14
6382: tailCall with 15 locals and 3 arguments
# Core:result:map:17:3:calleeIsTag:else
6383: pushFromStack 3
6384: dup by 1
6385: pushFromStack 2
6386: dup by 1
6387: pushFromStack 1
6388: dup by 1
6389: pushConstant inline builtinEquals
6390: pushConstant inline Function
6391: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
6392: pushFromStack 2
6393: pushFromStack 5
6394: pushFromStack 3
6395: pushFromStack 3
6396: call with 2 arguments
6397: pushFromStack 7
6398: pushFromStack 7
6399: createFunction with 0 arguments capturing 1, 0 starting at ip-6352
6400: pushConstant inline builtinIfElse
6401: pushConstant <replaced address 62976e02dbc3d797> { 0 arguments (capturing nothing) → ip-5949 }
6402: pushFromStack 1
6403: pushFromStack 6
6404: pushFromStack 4
6405: pushFromStack 3
6406: pushFromStack 10
6407: tailCall with 13 locals and 3 arguments
# Core:result:map:17
6408: pushFromStack 2
6409: dup by 3
6410: pushFromStack 1
6411: dup by 1
6412: pushConstant inline builtinTypeOf
6413: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
6414: pushFromStack 1
6415: pushFromStack 5
6416: pushFromStack 2
6417: call with 1 argument
6418: pushFromStack 0
6419: dup by 1
6420: pushConstant inline builtinEquals
6421: pushConstant inline Tag
6422: pushFromStack 1
6423: pushFromStack 3
6424: pushFromStack 2
6425: pushFromStack 6
6426: call with 2 arguments
6427: pushFromStack 8
6428: pushFromStack 8
6429: createFunction with 0 arguments capturing 1, 0 starting at ip-6291
6430: pushFromStack 2
6431: pushFromStack 2
6432: pushFromStack 8
6433: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-6383
6434: pushConstant inline builtinIfElse
6435: pushFromStack 0
6436: pushFromStack 9
6437: pushFromStack 7
6438: pushFromStack 4
6439: pushFromStack 16
6440: call with 3 arguments
6441: pushFromStack 0
6442: createTag Ok
6443: popMultipleBelowTop 18
6444: return
# Core:result:map
6445: pushFromStack 2
6446: dup by 5
6447: pushFromStack 1
6448: dup by 3
6449: pushFromStack 0
6450: dup by 4
6451: pushConstant <replaced address 0e5dcb874e6dfa57> Core:result:map:2
6452: pushConstant <replaced address c2082fb1645bc1fc> { 1 argument (capturing nothing) → ip-2300 }
6453: pushFromStack 1
6454: pushFromStack 1
6455: pushFromStack 6
6456: pushFromStack 2
6457: traceCallStarts (1 argument)
6458: pushConstant inline builtinTypeOf
6459: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
6460: pushFromStack 1
6461: pushFromStack 7
6462: pushFromStack 2
6463: call with 1 argument
6464: pushConstant inline builtinEquals
6465: pushConstant inline Tag
6466: pushFromStack 1
6467: pushFromStack 1
6468: pushFromStack 4
6469: pushFromStack 6
6470: call with 2 arguments
6471: pushFromStack 10
6472: createFunction with 0 arguments capturing 0 starting at ip-5995
6473: pushConstant inline builtinIfElse
6474: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
6475: pushFromStack 1
6476: pushFromStack 5
6477: pushFromStack 4
6478: pushFromStack 3
6479: pushFromStack 12
6480: call with 3 arguments
6481: pushFromStack 0
6482: dup by 1
6483: pushConstant inline builtinTagWithoutValue
6484: pushFromStack 0
6485: pushFromStack 2
6486: pushFromStack 12
6487: call with 1 argument
6488: pushConstant inline Match
6489: pushFromStack 10
6490: pushFromStack 2
6491: pushFromStack 2
6492: pushFromStack 15
6493: call with 2 arguments
6494: pushFromStack 4
6495: createFunction with 0 arguments capturing 0 starting at ip-6020
6496: pushFromStack 10
6497: createFunction with 0 arguments capturing 0 starting at ip-6089
6498: pushFromStack 10
6499: pushFromStack 5
6500: pushFromStack 4
6501: pushFromStack 3
6502: pushFromStack 21
6503: call with 3 arguments
6504: pushFromStack 8
6505: pushFromStack 1
6506: pushFromStack 20
6507: call with 1 argument
6508: pushFromStack 17
6509: pushFromStack 1
6510: pushFromStack 9
6511: pushFromStack 22
6512: call with 2 arguments
6513: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
6514: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
6515: pushFromStack 15
6516: pushFromStack 3
6517: pushFromStack 3
6518: pushFromStack 3
6519: pushFromStack 26
6520: call with 3 arguments
6521: pushFromStack 0
6522: dup by 3
6523: traceCallEnds without return value
6524: pushConstant <replaced address b1574ef59cb20f81> Core:result:map:4
6525: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
6526: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
6527: pushFromStack 2
6528: pushFromStack 2
6529: pushFromStack 5
6530: pushFromStack 3
6531: pushFromStack 34
6532: pushFromStack 4
6533: traceCallStarts (3 arguments)
6534: pushConstant inline True
6535: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
6536: pushFromStack 26
6537: pushFromStack 6
6538: pushFromStack 3
6539: pushFromStack 3
6540: call with 2 arguments
6541: pushFromStack 6
6542: createFunction with 0 arguments capturing 0 starting at ip-6114
6543: pushFromStack 24
6544: pushFromStack 3
6545: pushFromStack 12
6546: pushFromStack 3
6547: pushFromStack 7
6548: call with 3 arguments
6549: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
6550: pushConstant <replaced address 3f4197b5df094e06> { 0 arguments (capturing nothing) → ip-5928 }
6551: pushFromStack 27
6552: pushFromStack 3
6553: pushFromStack 3
6554: pushFromStack 3
6555: pushFromStack 10
6556: call with 3 arguments
6557: pushFromStack 39
6558: createFunction with 0 arguments capturing 0 starting at ip-6124
6559: pushFromStack 30
6560: pushFromStack 8
6561: pushFromStack 6
6562: pushFromStack 3
6563: pushFromStack 13
6564: call with 3 arguments
6565: traceCallEnds without return value
6566: pushConstant <replaced address 2571413c63a1bad9> Core:result:map:12
6567: pushConstant <replaced address 9d41aee4f1fc136e> { 1 argument (capturing nothing) → ip-1990 }
6568: pushFromStack 1
6569: pushFromStack 1
6570: pushFromStack 47
6571: pushFromStack 2
6572: traceCallStarts (1 argument)
6573: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
6574: pushFromStack 42
6575: pushFromStack 47
6576: pushFromStack 2
6577: call with 1 argument
6578: pushConstant inline Function
6579: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
6580: pushFromStack 42
6581: pushFromStack 3
6582: pushFromStack 3
6583: pushFromStack 3
6584: call with 2 arguments
6585: pushFromStack 0
6586: dup by 4
6587: pushFromStack 50
6588: createFunction with 0 arguments capturing 0 starting at ip-6142
6589: pushFromStack 0
6590: dup by 2
6591: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
6592: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
6593: pushFromStack 1
6594: pushFromStack 1
6595: pushFromStack 6
6596: pushFromStack 5
6597: pushFromStack 31
6598: pushFromStack 4
6599: traceCallStarts (3 arguments)
6600: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
6601: pushFromStack 48
6602: pushFromStack 24
6603: pushFromStack 7
6604: pushFromStack 3
6605: call with 2 arguments
6606: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
6607: pushFromStack 45
6608: pushFromStack 2
6609: pushFromStack 2
6610: pushFromStack 47
6611: pushFromStack 6
6612: call with 3 arguments
6613: pushFromStack 0
6614: dup by 1
6615: pushFromStack 43
6616: pushFromStack 1
6617: pushFromStack 5
6618: call with 1 argument
6619: pushFromStack 52
6620: pushFromStack 1
6621: pushFromStack 44
6622: pushFromStack 7
6623: call with 2 arguments
6624: pushFromStack 2
6625: createFunction with 0 arguments capturing 0 starting at ip-6228
6626: pushFromStack 12
6627: createFunction with 0 arguments capturing 0 starting at ip-6233
6628: pushFromStack 52
6629: pushFromStack 5
6630: pushFromStack 4
6631: pushFromStack 3
6632: pushFromStack 13
6633: call with 3 arguments
6634: pushFromStack 50
6635: pushFromStack 1
6636: pushFromStack 12
6637: call with 1 argument
6638: pushFromStack 59
6639: pushFromStack 1
6640: pushFromStack 51
6641: pushFromStack 14
6642: call with 2 arguments
6643: pushFromStack 55
6644: pushFromStack 1
6645: pushFromStack 43
6646: pushFromStack 43
6647: pushFromStack 16
6648: call with 3 arguments
6649: pushFromStack 0
6650: dup by 3
6651: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
6652: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
6653: pushFromStack 1
6654: pushFromStack 41
6655: pushFromStack 4
6656: pushFromStack 3
6657: pushFromStack 21
6658: pushFromStack 4
6659: traceCallStarts (3 arguments)
6660: pushFromStack 63
6661: pushFromStack 3
6662: pushFromStack 40
6663: pushFromStack 40
6664: call with 2 arguments
6665: pushFromStack 3
6666: createFunction with 0 arguments capturing 0 starting at ip-6252
6667: pushFromStack 61
6668: pushFromStack 3
6669: pushFromStack 49
6670: pushFromStack 3
6671: pushFromStack 44
6672: call with 3 arguments
6673: pushConstant <replaced address bbfd050c570524d0> { 0 arguments (capturing nothing) → ip-214 }
6674: pushFromStack 63
6675: pushFromStack 2
6676: pushFromStack 39
6677: pushFromStack 3
6678: pushFromStack 46
6679: call with 3 arguments
6680: pushConstant <replaced address 967bfb90bb1a8797> { 0 arguments (capturing nothing) → ip-1853 }
6681: pushFromStack 65
6682: pushFromStack 6
6683: pushFromStack 41
6684: pushFromStack 3
6685: pushFromStack 48
6686: call with 3 arguments
6687: traceCallEnds without return value
6688: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
6689: pushFromStack 0
6690: pushFromStack 68
6691: pushFromStack 18
6692: pushFromStack 30
6693: pushFromStack 56
6694: pushFromStack 4
6695: traceCallStarts (3 arguments)
6696: pushFromStack 67
6697: pushFromStack 17
6698: pushFromStack 29
6699: pushFromStack 55
6700: pushFromStack 4
6701: call with 3 arguments
6702: pushFromStack 0
6703: dup by 3
6704: traceCallEnds without return value
6705: traceCallEnds without return value
6706: traceCallEnds without return value
6707: pushConstant <replaced address c86ac4aab1e5d003> Core:result:map:14
6708: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
6709: pushFromStack 1
6710: pushFromStack 53
6711: pushFromStack 4
6712: pushFromStack 3
6713: pushFromStack 45
6714: pushFromStack 4
6715: traceCallStarts (3 arguments)
6716: pushFromStack 75
6717: pushFromStack 3
6718: pushFromStack 52
6719: pushFromStack 52
6720: call with 2 arguments
6721: pushFromStack 3
6722: createFunction with 0 arguments capturing 0 starting at ip-6262
6723: pushFromStack 73
6724: pushFromStack 3
6725: pushFromStack 61
6726: pushFromStack 3
6727: pushFromStack 56
6728: call with 3 arguments
6729: pushConstant <replaced address a7d1cf221b5f191d> { 0 arguments (capturing nothing) → ip-5935 }
6730: pushFromStack 75
6731: pushFromStack 2
6732: pushFromStack 51
6733: pushFromStack 3
6734: pushFromStack 58
6735: call with 3 arguments
6736: pushFromStack 47
6737: createFunction with 0 arguments capturing 0 starting at ip-6272
6738: pushFromStack 78
6739: pushFromStack 7
6740: pushFromStack 54
6741: pushFromStack 3
6742: pushFromStack 61
6743: call with 3 arguments
6744: traceCallEnds without return value
6745: pushFromStack 40
6746: createFunction with 1 argument capturing 0 starting at ip-6408
6747: pushFromStack 0
6748: dup by 1
6749: pushConstant <replaced address f691b014dc4d5107> Core:result:map:18
6750: pushConstant <replaced address a7f973910ac7ef7b> { 2 arguments (capturing nothing) → ip-5597 }
6751: pushFromStack 1
6752: pushFromStack 1
6753: pushFromStack 76
6754: pushFromStack 5
6755: pushFromStack 3
6756: traceTailCall (2 arguments)
6757: pushFromStack 55
6758: drop
6759: pushFromStack 52
6760: drop
6761: pushFromStack 19
6762: drop
6763: pushFromStack 17
6764: drop
6765: pushFromStack 7
6766: drop
6767: pushFromStack 4
6768: drop
6769: pushFromStack 0
6770: pushFromStack 75
6771: pushFromStack 4
6772: pushFromStack 4
6773: tailCall with 97 locals and 2 arguments
# Examples:fibonacci:recursive:0:0:3:doesTagHaveValue:then
6774: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
6775: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6776: pushFromStack 1
6777: pushFromStack 1
6778: panic
6779: popMultipleBelowTop 3
6780: return
# Examples:fibonacci:recursive:0:0:3:doesTagHaveValue:else
6781: pushConstant <replaced address c55ccd7d548d3a0d> "Tags can only be created with one value."
6782: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6783: pushFromStack 1
6784: pushFromStack 1
6785: panic
6786: popMultipleBelowTop 3
6787: return
# Examples:fibonacci:recursive:0:0:3:calleeIsFunction:else
6788: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
6789: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6790: pushFromStack 1
6791: pushFromStack 1
6792: panic
6793: popMultipleBelowTop 3
6794: return
# Examples:fibonacci:recursive:0:5:doesTagHaveValue:then
6795: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
6796: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
6797: pushFromStack 1
6798: pushFromStack 1
6799: panic
6800: popMultipleBelowTop 3
6801: return
# Examples:fibonacci:recursive:0:5:doesTagHaveValue:else
6802: pushConstant <replaced address c55ccd7d548d3a0d> "Tags can only be created with one value."
6803: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
6804: pushFromStack 1
6805: pushFromStack 1
6806: panic
6807: popMultipleBelowTop 3
6808: return
# Examples:fibonacci:recursive:0:5:calleeIsFunction:else
6809: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
6810: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
6811: pushFromStack 1
6812: pushFromStack 1
6813: panic
6814: popMultipleBelowTop 3
6815: return
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:then
6816: pushFromStack 1
6817: dup by 1
6818: pushConstant inline builtinTagHasValue
6819: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6820: pushFromStack 1
6821: pushFromStack 4
6822: pushFromStack 2
6823: call with 1 argument
6824: pushConstant inline builtinIfElse
6825: pushConstant <replaced address 0cc587e4feaafef0> { 0 arguments (capturing nothing) → ip-6774 }
6826: pushConstant <replaced address 8d21dac3ad217357> { 0 arguments (capturing nothing) → ip-6781 }
6827: pushFromStack 2
6828: pushFromStack 4
6829: pushFromStack 3
6830: pushFromStack 3
6831: pushFromStack 8
6832: tailCall with 8 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:then
6833: pushFromStack 2
6834: dup by 4
6835: pushFromStack 1
6836: dup by 2
6837: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6838: pushFromStack 0
6839: pushFromStack 4
6840: pushFromStack 0
6841: pushFromStack 5
6842: pushFromStack 3
6843: traceTailCall (2 arguments)
6844: pushFromStack 3
6845: pushFromStack 0
6846: pushFromStack 4
6847: pushFromStack 3
6848: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:else
6849: pushFromStack 1
6850: dup by 1
6851: pushConstant inline builtinToDebugText
6852: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6853: pushFromStack 1
6854: pushFromStack 4
6855: pushFromStack 2
6856: call with 1 argument
6857: pushConstant inline builtinTextConcatenate
6858: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
6859: pushFromStack 1
6860: pushFromStack 1
6861: pushFromStack 4
6862: pushFromStack 6
6863: call with 2 arguments
6864: pushConstant <replaced address 4977ff9b06a0fe0d> " arguments with 2 arguments."
6865: pushFromStack 3
6866: pushFromStack 2
6867: pushFromStack 2
6868: pushFromStack 8
6869: call with 2 arguments
6870: pushFromStack 0
6871: pushFromStack 7
6872: panic
6873: popMultipleBelowTop 10
6874: return
# Examples:fibonacci:recursive:0:0:3:calleeIsFunction:then
6875: pushFromStack 2
6876: dup by 2
6877: pushFromStack 1
6878: dup by 1
6879: pushConstant inline builtinGetArgumentCount
6880: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6881: pushFromStack 1
6882: pushFromStack 5
6883: pushFromStack 2
6884: call with 1 argument
6885: pushFromStack 0
6886: dup by 1
6887: pushConstant inline builtinEquals
6888: pushConstant inline 2
6889: pushFromStack 1
6890: pushFromStack 3
6891: pushFromStack 2
6892: pushFromStack 6
6893: call with 2 arguments
6894: pushFromStack 8
6895: pushFromStack 8
6896: createFunction with 0 arguments capturing 1, 0 starting at ip-6833
6897: pushFromStack 6
6898: createFunction with 0 arguments capturing 0 starting at ip-6849
6899: pushConstant inline builtinIfElse
6900: pushFromStack 0
6901: pushFromStack 7
6902: pushFromStack 5
6903: pushFromStack 4
6904: pushFromStack 14
6905: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:else
6906: pushFromStack 3
6907: dup by 1
6908: pushFromStack 2
6909: dup by 1
6910: pushFromStack 1
6911: dup by 1
6912: pushConstant inline builtinEquals
6913: pushConstant inline Function
6914: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6915: pushFromStack 2
6916: pushFromStack 5
6917: pushFromStack 3
6918: pushFromStack 3
6919: call with 2 arguments
6920: pushFromStack 7
6921: pushFromStack 7
6922: createFunction with 0 arguments capturing 1, 0 starting at ip-6875
6923: pushConstant inline builtinIfElse
6924: pushConstant <replaced address 85ec0259501507ea> { 0 arguments (capturing nothing) → ip-6788 }
6925: pushFromStack 1
6926: pushFromStack 6
6927: pushFromStack 4
6928: pushFromStack 3
6929: pushFromStack 10
6930: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:recursive:0:0
6931: pushFromStack 2
6932: dup by 3
6933: pushConstant inline builtinTypeOf
6934: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
6935: pushFromStack 1
6936: pushFromStack 5
6937: pushFromStack 2
6938: call with 1 argument
6939: pushFromStack 0
6940: dup by 1
6941: pushConstant inline builtinEquals
6942: pushConstant inline Tag
6943: pushFromStack 1
6944: pushFromStack 3
6945: pushFromStack 2
6946: pushFromStack 6
6947: call with 2 arguments
6948: pushFromStack 8
6949: createFunction with 0 arguments capturing 0 starting at ip-6816
6950: pushFromStack 1
6951: pushFromStack 10
6952: pushFromStack 7
6953: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-6906
6954: pushConstant inline builtinIfElse
6955: pushFromStack 0
6956: pushFromStack 8
6957: pushFromStack 7
6958: pushFromStack 4
6959: pushFromStack 15
6960: tailCall with 16 locals and 3 arguments
# Examples:fibonacci:recursive:0:5:calleeIsTag:then
6961: pushFromStack 1
6962: dup by 1
6963: pushConstant inline builtinTagHasValue
6964: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
6965: pushFromStack 1
6966: pushFromStack 4
6967: pushFromStack 2
6968: call with 1 argument
6969: pushConstant inline builtinIfElse
6970: pushConstant <replaced address 06485537fe8b7c51> { 0 arguments (capturing nothing) → ip-6795 }
6971: pushConstant <replaced address 40b1a13a1079c664> { 0 arguments (capturing nothing) → ip-6802 }
6972: pushFromStack 2
6973: pushFromStack 4
6974: pushFromStack 3
6975: pushFromStack 3
6976: pushFromStack 8
6977: tailCall with 8 locals and 3 arguments
# Examples:fibonacci:recursive:0:5:hasCorrectNumberOfArguments:then
6978: pushFromStack 3
6979: dup by 2
6980: pushFromStack 2
6981: dup by 2
6982: pushFromStack 1
6983: dup by 2
6984: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
6985: pushFromStack 0
6986: pushFromStack 5
6987: pushFromStack 4
6988: pushFromStack 6
6989: pushFromStack 3
6990: traceTailCall (2 arguments)
6991: pushFromStack 4
6992: pushFromStack 3
6993: pushFromStack 5
6994: pushFromStack 3
6995: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:recursive:0:5:hasCorrectNumberOfArguments:else
6996: pushFromStack 1
6997: dup by 1
6998: pushConstant inline builtinToDebugText
6999: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
7000: pushFromStack 1
7001: pushFromStack 4
7002: pushFromStack 2
7003: call with 1 argument
7004: pushConstant inline builtinTextConcatenate
7005: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
7006: pushFromStack 1
7007: pushFromStack 1
7008: pushFromStack 4
7009: pushFromStack 6
7010: call with 2 arguments
7011: pushConstant <replaced address 4977ff9b06a0fe0d> " arguments with 2 arguments."
7012: pushFromStack 3
7013: pushFromStack 2
7014: pushFromStack 2
7015: pushFromStack 8
7016: call with 2 arguments
7017: pushFromStack 0
7018: pushFromStack 7
7019: panic
7020: popMultipleBelowTop 10
7021: return
# Examples:fibonacci:recursive:0:5:calleeIsFunction:then
7022: pushFromStack 3
7023: dup by 2
7024: pushFromStack 2
7025: dup by 1
7026: pushFromStack 1
7027: dup by 1
7028: pushConstant inline builtinGetArgumentCount
7029: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
7030: pushFromStack 1
7031: pushFromStack 6
7032: pushFromStack 2
7033: call with 1 argument
7034: pushFromStack 0
7035: dup by 1
7036: pushConstant inline builtinEquals
7037: pushConstant inline 2
7038: pushFromStack 1
7039: pushFromStack 3
7040: pushFromStack 2
7041: pushFromStack 6
7042: call with 2 arguments
7043: pushFromStack 9
7044: pushFromStack 9
7045: pushFromStack 9
7046: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-6978
7047: pushFromStack 7
7048: createFunction with 0 arguments capturing 0 starting at ip-6996
7049: pushConstant inline builtinIfElse
7050: pushFromStack 0
7051: pushFromStack 8
7052: pushFromStack 5
7053: pushFromStack 4
7054: pushFromStack 15
7055: tailCall with 17 locals and 3 arguments
# Examples:fibonacci:recursive:0:5:calleeIsTag:else
7056: pushFromStack 4
7057: dup by 1
7058: pushFromStack 3
7059: dup by 1
7060: pushFromStack 2
7061: dup by 1
7062: pushFromStack 1
7063: dup by 1
7064: pushConstant inline builtinEquals
7065: pushConstant inline Function
7066: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
7067: pushFromStack 2
7068: pushFromStack 5
7069: pushFromStack 3
7070: pushFromStack 3
7071: call with 2 arguments
7072: pushFromStack 8
7073: pushFromStack 8
7074: pushFromStack 8
7075: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-7022
7076: pushConstant inline builtinIfElse
7077: pushConstant <replaced address c10df418bef03acb> { 0 arguments (capturing nothing) → ip-6809 }
7078: pushFromStack 1
7079: pushFromStack 7
7080: pushFromStack 4
7081: pushFromStack 3
7082: pushFromStack 11
7083: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:recursive:0
7084: pushFromStack 3
7085: dup by 3
7086: pushFromStack 2
7087: createFunction with 1 argument capturing 0 starting at ip-6931
7088: pushConstant inline builtinTypeOf
7089: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
7090: pushFromStack 1
7091: pushFromStack 8
7092: pushFromStack 2
7093: call with 1 argument
7094: pushFromStack 0
7095: dup by 1
7096: pushConstant inline builtinEquals
7097: pushConstant inline Tag
7098: pushFromStack 1
7099: pushFromStack 3
7100: pushFromStack 2
7101: pushFromStack 6
7102: call with 2 arguments
7103: pushFromStack 11
7104: createFunction with 0 arguments capturing 0 starting at ip-6961
7105: pushFromStack 1
7106: pushFromStack 12
7107: pushFromStack 10
7108: pushFromStack 8
7109: createFunction with 0 arguments capturing 3, 2, 1, 0 starting at ip-7056
7110: pushConstant inline builtinIfElse
7111: pushFromStack 0
7112: pushFromStack 9
7113: pushFromStack 8
7114: pushFromStack 4
7115: pushFromStack 16
7116: tailCall with 20 locals and 3 arguments
# Examples:fibonacci:recursive
7117: pushFromStack 2
7118: dup by 1
7119: pushFromStack 1
7120: createFunction with 2 arguments capturing 0 starting at ip-7084
7121: pushFromStack 0
7122: dup by 3
7123: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
7124: pushFromStack 0
7125: pushFromStack 2
7126: pushFromStack 0
7127: pushFromStack 8
7128: pushFromStack 3
7129: traceTailCall (2 arguments)
7130: pushFromStack 1
7131: pushFromStack 0
7132: pushFromStack 7
7133: pushFromStack 3
7134: tailCall with 6 locals and 2 arguments
# anonymous:$generated::needs:condition:else
7135: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
7136: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
7137: pushFromStack 1
7138: pushFromStack 1
7139: panic
7140: popMultipleBelowTop 3
7141: return
7142: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
7143: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
7144: pushFromStack 1
7145: pushFromStack 1
7146: panic
7147: popMultipleBelowTop 3
7148: return
# anonymous:$generated::needs:isConditionTrue:else
7149: pushFromStack 1
7150: dup by 1
7151: pushConstant inline builtinEquals
7152: pushConstant inline False
7153: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7154: pushFromStack 2
7155: pushFromStack 5
7156: pushFromStack 3
7157: pushFromStack 3
7158: tailCall with 5 locals and 2 arguments
7159: pushFromStack 1
7160: dup by 1
7161: pushConstant inline builtinEquals
7162: pushConstant inline False
7163: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7164: pushFromStack 2
7165: pushFromStack 5
7166: pushFromStack 3
7167: pushFromStack 3
7168: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:compareTo
7169: pushFromStack 2
7170: dup by 2
7171: pushFromStack 1
7172: dup by 2
7173: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
7174: pushConstant <replaced address 7123377f52cd6d5b> { 2 arguments (capturing nothing) → ip-1085 }
7175: pushFromStack 1
7176: pushFromStack 1
7177: pushFromStack 6
7178: pushFromStack 6
7179: pushFromStack 3
7180: traceTailCall (2 arguments)
7181: pushConstant inline builtinTypeOf
7182: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
7183: pushFromStack 1
7184: pushFromStack 7
7185: pushFromStack 2
7186: call with 1 argument
7187: pushConstant inline builtinEquals
7188: pushConstant inline Int
7189: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
7190: pushFromStack 2
7191: pushFromStack 4
7192: pushFromStack 3
7193: pushFromStack 3
7194: call with 2 arguments
7195: pushFromStack 0
7196: dup by 3
7197: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
7198: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
7199: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
7200: pushFromStack 2
7201: pushFromStack 2
7202: pushFromStack 5
7203: pushFromStack 3
7204: pushFromStack 15
7205: pushFromStack 4
7206: traceCallStarts (3 arguments)
7207: pushConstant inline True
7208: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7209: pushFromStack 8
7210: pushFromStack 6
7211: pushFromStack 3
7212: pushFromStack 3
7213: call with 2 arguments
7214: pushFromStack 6
7215: createFunction with 0 arguments capturing 0 starting at ip-7149
7216: pushConstant inline builtinIfElse
7217: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
7218: pushFromStack 1
7219: pushFromStack 5
7220: pushFromStack 2
7221: pushFromStack 5
7222: pushFromStack 9
7223: call with 3 arguments
7224: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
7225: pushConstant <replaced address 754f758090f20bd1> { 0 arguments (capturing nothing) → ip-1035 }
7226: pushFromStack 4
7227: pushFromStack 3
7228: pushFromStack 3
7229: pushFromStack 3
7230: pushFromStack 12
7231: call with 3 arguments
7232: pushConstant <replaced address fc2f44dce996c10d> { 0 arguments (capturing nothing) → ip-7135 }
7233: pushFromStack 6
7234: pushFromStack 9
7235: pushFromStack 5
7236: pushFromStack 3
7237: pushFromStack 14
7238: call with 3 arguments
7239: traceCallEnds without return value
7240: pushFromStack 22
7241: pushFromStack 27
7242: pushFromStack 23
7243: call with 1 argument
7244: pushFromStack 20
7245: pushFromStack 1
7246: pushFromStack 21
7247: pushFromStack 21
7248: call with 2 arguments
7249: pushFromStack 0
7250: dup by 3
7251: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
7252: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
7253: pushFromStack 1
7254: pushFromStack 19
7255: pushFromStack 4
7256: pushFromStack 3
7257: pushFromStack 32
7258: pushFromStack 4
7259: traceCallStarts (3 arguments)
7260: pushFromStack 23
7261: pushFromStack 3
7262: pushFromStack 18
7263: pushFromStack 18
7264: call with 2 arguments
7265: pushFromStack 3
7266: createFunction with 0 arguments capturing 0 starting at ip-7159
7267: pushFromStack 14
7268: pushFromStack 3
7269: pushFromStack 15
7270: pushFromStack 3
7271: pushFromStack 22
7272: call with 3 arguments
7273: pushConstant <replaced address afb8c182a2e055e4> { 0 arguments (capturing nothing) → ip-1042 }
7274: pushFromStack 16
7275: pushFromStack 2
7276: pushFromStack 15
7277: pushFromStack 3
7278: pushFromStack 24
7279: call with 3 arguments
7280: pushConstant <replaced address 369890defb850b20> { 0 arguments (capturing nothing) → ip-7142 }
7281: pushFromStack 18
7282: pushFromStack 6
7283: pushFromStack 17
7284: pushFromStack 3
7285: pushFromStack 26
7286: call with 3 arguments
7287: traceCallEnds without return value
7288: pushConstant inline builtinIntCompareTo
7289: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
7290: pushFromStack 16
7291: drop
7292: pushFromStack 14
7293: drop
7294: pushFromStack 4
7295: drop
7296: pushFromStack 2
7297: drop
7298: pushFromStack 1
7299: pushFromStack 42
7300: pushFromStack 42
7301: pushFromStack 3
7302: tailCall with 42 locals and 2 arguments
# anonymous:$generated::needs:isConditionTrue:else
7303: pushFromStack 1
7304: dup by 1
7305: pushConstant inline builtinEquals
7306: pushConstant inline False
7307: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7308: pushFromStack 2
7309: pushFromStack 5
7310: pushFromStack 3
7311: pushFromStack 3
7312: tailCall with 5 locals and 2 arguments
7313: pushFromStack 1
7314: dup by 1
7315: pushConstant inline builtinEquals
7316: pushConstant inline False
7317: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7318: pushFromStack 2
7319: pushFromStack 5
7320: pushFromStack 3
7321: pushFromStack 3
7322: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:isLessThan
7323: pushFromStack 2
7324: dup by 3
7325: pushFromStack 1
7326: dup by 3
7327: pushConstant <replaced address 7ae5b371ff139a5d> Examples:fibonacci:isLessThan:9
7328: pushConstant <replaced address 6d8bc0b01b68ed0f> { 2 arguments (capturing nothing) → ip-7169 }
7329: pushFromStack 1
7330: pushFromStack 1
7331: pushFromStack 6
7332: pushFromStack 6
7333: pushFromStack 3
7334: traceCallStarts (2 arguments)
7335: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
7336: pushConstant <replaced address 7123377f52cd6d5b> { 2 arguments (capturing nothing) → ip-1085 }
7337: pushFromStack 1
7338: pushFromStack 1
7339: pushFromStack 8
7340: pushFromStack 8
7341: pushFromStack 3
7342: traceCallStarts (2 arguments)
7343: pushConstant inline builtinTypeOf
7344: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
7345: pushFromStack 1
7346: pushFromStack 9
7347: pushFromStack 2
7348: call with 1 argument
7349: pushConstant inline builtinEquals
7350: pushConstant inline Int
7351: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
7352: pushFromStack 2
7353: pushFromStack 4
7354: pushFromStack 3
7355: pushFromStack 3
7356: call with 2 arguments
7357: pushFromStack 0
7358: dup by 3
7359: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
7360: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
7361: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
7362: pushFromStack 2
7363: pushFromStack 2
7364: pushFromStack 5
7365: pushFromStack 3
7366: pushFromStack 15
7367: pushFromStack 4
7368: traceCallStarts (3 arguments)
7369: pushConstant inline True
7370: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7371: pushFromStack 8
7372: pushFromStack 6
7373: pushFromStack 3
7374: pushFromStack 3
7375: call with 2 arguments
7376: pushFromStack 6
7377: createFunction with 0 arguments capturing 0 starting at ip-7303
7378: pushConstant inline builtinIfElse
7379: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
7380: pushFromStack 1
7381: pushFromStack 5
7382: pushFromStack 2
7383: pushFromStack 5
7384: pushFromStack 9
7385: call with 3 arguments
7386: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
7387: pushConstant <replaced address 754f758090f20bd1> { 0 arguments (capturing nothing) → ip-1035 }
7388: pushFromStack 4
7389: pushFromStack 3
7390: pushFromStack 3
7391: pushFromStack 3
7392: pushFromStack 12
7393: call with 3 arguments
7394: pushConstant <replaced address fc2f44dce996c10d> { 0 arguments (capturing nothing) → ip-7135 }
7395: pushFromStack 6
7396: pushFromStack 9
7397: pushFromStack 5
7398: pushFromStack 3
7399: pushFromStack 14
7400: call with 3 arguments
7401: traceCallEnds without return value
7402: pushFromStack 22
7403: pushFromStack 29
7404: pushFromStack 23
7405: call with 1 argument
7406: pushFromStack 20
7407: pushFromStack 1
7408: pushFromStack 21
7409: pushFromStack 21
7410: call with 2 arguments
7411: pushFromStack 0
7412: dup by 3
7413: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
7414: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
7415: pushFromStack 1
7416: pushFromStack 19
7417: pushFromStack 4
7418: pushFromStack 3
7419: pushFromStack 32
7420: pushFromStack 4
7421: traceCallStarts (3 arguments)
7422: pushFromStack 23
7423: pushFromStack 3
7424: pushFromStack 18
7425: pushFromStack 18
7426: call with 2 arguments
7427: pushFromStack 3
7428: createFunction with 0 arguments capturing 0 starting at ip-7313
7429: pushFromStack 14
7430: pushFromStack 3
7431: pushFromStack 15
7432: pushFromStack 3
7433: pushFromStack 22
7434: call with 3 arguments
7435: pushConstant <replaced address afb8c182a2e055e4> { 0 arguments (capturing nothing) → ip-1042 }
7436: pushFromStack 16
7437: pushFromStack 2
7438: pushFromStack 15
7439: pushFromStack 3
7440: pushFromStack 24
7441: call with 3 arguments
7442: pushConstant <replaced address 369890defb850b20> { 0 arguments (capturing nothing) → ip-7142 }
7443: pushFromStack 18
7444: pushFromStack 6
7445: pushFromStack 17
7446: pushFromStack 3
7447: pushFromStack 26
7448: call with 3 arguments
7449: traceCallEnds without return value
7450: pushConstant inline builtinIntCompareTo
7451: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
7452: pushFromStack 1
7453: pushFromStack 44
7454: pushFromStack 44
7455: pushFromStack 3
7456: call with 2 arguments
7457: traceCallEnds without return value
7458: traceCallEnds without return value
7459: pushConstant inline Less
7460: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
7461: pushFromStack 19
7462: drop
7463: pushFromStack 17
7464: drop
7465: pushFromStack 7
7466: drop
7467: pushFromStack 5
7468: drop
7469: pushFromStack 36
7470: pushFromStack 3
7471: pushFromStack 3
7472: pushFromStack 3
7473: tailCall with 47 locals and 2 arguments
# anonymous:$generated::needs:condition:else
7474: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
7475: pushConstant <replaced address 3f287b94ceaa3f9a> Examples:fibonacci:fibonacci:2:11:9
7476: pushFromStack 1
7477: pushFromStack 1
7478: panic
7479: popMultipleBelowTop 3
7480: return
# Examples:fibonacci:fibonacci:2:11:10:doesTagHaveValue:then
7481: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
7482: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7483: pushFromStack 1
7484: pushFromStack 1
7485: panic
7486: popMultipleBelowTop 3
7487: return
# Examples:fibonacci:fibonacci:2:11:10:calleeIsFunction:else
7488: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
7489: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7490: pushFromStack 1
7491: pushFromStack 1
7492: panic
7493: popMultipleBelowTop 3
7494: return
# anonymous:$generated::needs:condition:else
7495: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
7496: pushConstant <replaced address d5df9e6b35678bb5> Examples:fibonacci:fibonacci:2:11:26
7497: pushFromStack 1
7498: pushFromStack 1
7499: panic
7500: popMultipleBelowTop 3
7501: return
# Examples:fibonacci:fibonacci:2:11:27:doesTagHaveValue:then
7502: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
7503: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7504: pushFromStack 1
7505: pushFromStack 1
7506: panic
7507: popMultipleBelowTop 3
7508: return
# Examples:fibonacci:fibonacci:2:11:27:calleeIsFunction:else
7509: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
7510: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7511: pushFromStack 1
7512: pushFromStack 1
7513: panic
7514: popMultipleBelowTop 3
7515: return
# anonymous:$generated::needs:condition:else
7516: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
7517: pushConstant <replaced address becc28b62033cb33> Examples:fibonacci:fibonacci:2:11:28
7518: pushFromStack 1
7519: pushFromStack 1
7520: panic
7521: popMultipleBelowTop 3
7522: return
7523: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
7524: pushConstant <replaced address becc28b62033cb33> Examples:fibonacci:fibonacci:2:11:28
7525: pushFromStack 1
7526: pushFromStack 1
7527: panic
7528: popMultipleBelowTop 3
7529: return
7530: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
7531: pushConstant <replaced address 71d566509a8a2add> Examples:fibonacci:fibonacci:2:12
7532: pushFromStack 1
7533: pushFromStack 1
7534: panic
7535: popMultipleBelowTop 3
7536: return
# anonymous:$generated::needs:isConditionTrue:else
7537: pushFromStack 1
7538: dup by 1
7539: pushConstant inline builtinEquals
7540: pushConstant inline False
7541: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7542: pushFromStack 2
7543: pushFromStack 5
7544: pushFromStack 3
7545: pushFromStack 3
7546: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:10
7547: pushFromStack 1
7548: dup by 1
7549: pushFromStack 1
7550: popMultipleBelowTop 2
7551: return
# anonymous:$generated::needs:isConditionTrue:else
7552: pushFromStack 1
7553: dup by 1
7554: pushConstant inline builtinEquals
7555: pushConstant inline False
7556: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7557: pushFromStack 2
7558: pushFromStack 5
7559: pushFromStack 3
7560: pushFromStack 3
7561: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:11:10:doesTagHaveValue:else
7562: pushFromStack 2
7563: dup by 1
7564: pushFromStack 1
7565: dup by 1
7566: pushConstant inline builtinTagWithValue
7567: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7568: pushFromStack 1
7569: pushFromStack 5
7570: pushFromStack 5
7571: pushFromStack 3
7572: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:11:10:calleeIsTag:then
7573: pushFromStack 2
7574: dup by 2
7575: pushFromStack 1
7576: dup by 1
7577: pushConstant inline builtinTagHasValue
7578: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7579: pushFromStack 1
7580: pushFromStack 5
7581: pushFromStack 2
7582: call with 1 argument
7583: pushFromStack 5
7584: pushFromStack 5
7585: createFunction with 0 arguments capturing 1, 0 starting at ip-7562
7586: pushConstant inline builtinIfElse
7587: pushConstant <replaced address c8f94d5823e22feb> { 0 arguments (capturing nothing) → ip-7481 }
7588: pushFromStack 1
7589: pushFromStack 6
7590: pushFromStack 2
7591: pushFromStack 5
7592: pushFromStack 10
7593: tailCall with 11 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:10:hasCorrectNumberOfArguments:then
7594: pushFromStack 2
7595: dup by 2
7596: pushFromStack 1
7597: dup by 2
7598: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7599: pushFromStack 0
7600: pushFromStack 4
7601: pushFromStack 4
7602: pushFromStack 2
7603: traceTailCall (1 argument)
7604: pushFromStack 3
7605: pushFromStack 3
7606: pushFromStack 2
7607: tailCall with 4 locals and 1 argument
# Examples:fibonacci:fibonacci:2:11:10:hasCorrectNumberOfArguments:else
7608: pushFromStack 1
7609: dup by 1
7610: pushConstant inline builtinToDebugText
7611: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7612: pushFromStack 1
7613: pushFromStack 4
7614: pushFromStack 2
7615: call with 1 argument
7616: pushConstant inline builtinTextConcatenate
7617: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
7618: pushFromStack 1
7619: pushFromStack 1
7620: pushFromStack 4
7621: pushFromStack 6
7622: call with 2 arguments
7623: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
7624: pushFromStack 3
7625: pushFromStack 2
7626: pushFromStack 2
7627: pushFromStack 8
7628: call with 2 arguments
7629: pushFromStack 0
7630: pushFromStack 7
7631: panic
7632: popMultipleBelowTop 10
7633: return
# Examples:fibonacci:fibonacci:2:11:10:calleeIsFunction:then
7634: pushFromStack 2
7635: dup by 2
7636: pushFromStack 1
7637: dup by 1
7638: pushConstant inline builtinGetArgumentCount
7639: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7640: pushFromStack 1
7641: pushFromStack 5
7642: pushFromStack 2
7643: call with 1 argument
7644: pushFromStack 0
7645: dup by 1
7646: pushConstant inline builtinEquals
7647: pushConstant inline 1
7648: pushFromStack 1
7649: pushFromStack 3
7650: pushFromStack 2
7651: pushFromStack 6
7652: call with 2 arguments
7653: pushFromStack 8
7654: pushFromStack 8
7655: createFunction with 0 arguments capturing 1, 0 starting at ip-7594
7656: pushFromStack 6
7657: createFunction with 0 arguments capturing 0 starting at ip-7608
7658: pushConstant inline builtinIfElse
7659: pushFromStack 0
7660: pushFromStack 7
7661: pushFromStack 5
7662: pushFromStack 4
7663: pushFromStack 14
7664: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:10:calleeIsTag:else
7665: pushFromStack 3
7666: dup by 1
7667: pushFromStack 2
7668: dup by 1
7669: pushFromStack 1
7670: dup by 1
7671: pushConstant inline builtinEquals
7672: pushConstant inline Function
7673: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7674: pushFromStack 2
7675: pushFromStack 5
7676: pushFromStack 3
7677: pushFromStack 3
7678: call with 2 arguments
7679: pushFromStack 7
7680: pushFromStack 7
7681: createFunction with 0 arguments capturing 1, 0 starting at ip-7634
7682: pushConstant inline builtinIfElse
7683: pushConstant <replaced address 4501bdc6a4cb2f7e> { 0 arguments (capturing nothing) → ip-7488 }
7684: pushFromStack 1
7685: pushFromStack 6
7686: pushFromStack 4
7687: pushFromStack 3
7688: pushFromStack 10
7689: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:27:doesTagHaveValue:else
7690: pushFromStack 2
7691: dup by 1
7692: pushFromStack 1
7693: dup by 1
7694: pushConstant inline builtinTagWithValue
7695: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7696: pushFromStack 1
7697: pushFromStack 5
7698: pushFromStack 5
7699: pushFromStack 3
7700: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:11:27:calleeIsTag:then
7701: pushFromStack 2
7702: dup by 2
7703: pushFromStack 1
7704: dup by 1
7705: pushConstant inline builtinTagHasValue
7706: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7707: pushFromStack 1
7708: pushFromStack 5
7709: pushFromStack 2
7710: call with 1 argument
7711: pushFromStack 5
7712: pushFromStack 5
7713: createFunction with 0 arguments capturing 1, 0 starting at ip-7690
7714: pushConstant inline builtinIfElse
7715: pushConstant <replaced address e7fb4134f30f44a8> { 0 arguments (capturing nothing) → ip-7502 }
7716: pushFromStack 1
7717: pushFromStack 6
7718: pushFromStack 2
7719: pushFromStack 5
7720: pushFromStack 10
7721: tailCall with 11 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:27:hasCorrectNumberOfArguments:then
7722: pushFromStack 2
7723: dup by 2
7724: pushFromStack 1
7725: dup by 2
7726: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7727: pushFromStack 0
7728: pushFromStack 4
7729: pushFromStack 4
7730: pushFromStack 2
7731: traceTailCall (1 argument)
7732: pushFromStack 3
7733: pushFromStack 3
7734: pushFromStack 2
7735: tailCall with 4 locals and 1 argument
# Examples:fibonacci:fibonacci:2:11:27:hasCorrectNumberOfArguments:else
7736: pushFromStack 1
7737: dup by 1
7738: pushConstant inline builtinToDebugText
7739: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7740: pushFromStack 1
7741: pushFromStack 4
7742: pushFromStack 2
7743: call with 1 argument
7744: pushConstant inline builtinTextConcatenate
7745: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
7746: pushFromStack 1
7747: pushFromStack 1
7748: pushFromStack 4
7749: pushFromStack 6
7750: call with 2 arguments
7751: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
7752: pushFromStack 3
7753: pushFromStack 2
7754: pushFromStack 2
7755: pushFromStack 8
7756: call with 2 arguments
7757: pushFromStack 0
7758: pushFromStack 7
7759: panic
7760: popMultipleBelowTop 10
7761: return
# Examples:fibonacci:fibonacci:2:11:27:calleeIsFunction:then
7762: pushFromStack 2
7763: dup by 2
7764: pushFromStack 1
7765: dup by 1
7766: pushConstant inline builtinGetArgumentCount
7767: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7768: pushFromStack 1
7769: pushFromStack 5
7770: pushFromStack 2
7771: call with 1 argument
7772: pushFromStack 0
7773: dup by 1
7774: pushConstant inline builtinEquals
7775: pushConstant inline 1
7776: pushFromStack 1
7777: pushFromStack 3
7778: pushFromStack 2
7779: pushFromStack 6
7780: call with 2 arguments
7781: pushFromStack 8
7782: pushFromStack 8
7783: createFunction with 0 arguments capturing 1, 0 starting at ip-7722
7784: pushFromStack 6
7785: createFunction with 0 arguments capturing 0 starting at ip-7736
7786: pushConstant inline builtinIfElse
7787: pushFromStack 0
7788: pushFromStack 7
7789: pushFromStack 5
7790: pushFromStack 4
7791: pushFromStack 14
7792: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:27:calleeIsTag:else
7793: pushFromStack 3
7794: dup by 1
7795: pushFromStack 2
7796: dup by 1
7797: pushFromStack 1
7798: dup by 1
7799: pushConstant inline builtinEquals
7800: pushConstant inline Function
7801: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7802: pushFromStack 2
7803: pushFromStack 5
7804: pushFromStack 3
7805: pushFromStack 3
7806: call with 2 arguments
7807: pushFromStack 7
7808: pushFromStack 7
7809: createFunction with 0 arguments capturing 1, 0 starting at ip-7762
7810: pushConstant inline builtinIfElse
7811: pushConstant <replaced address 68579413a185b90f> { 0 arguments (capturing nothing) → ip-7509 }
7812: pushFromStack 1
7813: pushFromStack 6
7814: pushFromStack 4
7815: pushFromStack 3
7816: pushFromStack 10
7817: tailCall with 13 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
7818: pushFromStack 1
7819: dup by 1
7820: pushConstant inline builtinEquals
7821: pushConstant inline False
7822: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7823: pushFromStack 2
7824: pushFromStack 5
7825: pushFromStack 3
7826: pushFromStack 3
7827: tailCall with 5 locals and 2 arguments
7828: pushFromStack 1
7829: dup by 1
7830: pushConstant inline builtinEquals
7831: pushConstant inline False
7832: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7833: pushFromStack 2
7834: pushFromStack 5
7835: pushFromStack 3
7836: pushFromStack 3
7837: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:11
7838: pushFromStack 2
7839: dup by 6
7840: pushFromStack 1
7841: dup by 5
7842: pushConstant <replaced address 3f287b94ceaa3f9a> Examples:fibonacci:fibonacci:2:11:9
7843: pushConstant <replaced address 401a561af8e6f5be> { 2 arguments (capturing nothing) → ip-1364 }
7844: pushConstant inline 1
7845: pushFromStack 2
7846: pushFromStack 2
7847: pushFromStack 6
7848: pushFromStack 3
7849: pushFromStack 3
7850: traceCallStarts (2 arguments)
7851: pushConstant inline builtinTypeOf
7852: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
7853: pushFromStack 1
7854: pushFromStack 7
7855: pushFromStack 2
7856: call with 1 argument
7857: pushConstant inline builtinEquals
7858: pushConstant inline Int
7859: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
7860: pushFromStack 2
7861: pushFromStack 4
7862: pushFromStack 3
7863: pushFromStack 3
7864: call with 2 arguments
7865: pushFromStack 0
7866: dup by 5
7867: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
7868: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
7869: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
7870: pushFromStack 2
7871: pushFromStack 2
7872: pushFromStack 5
7873: pushFromStack 3
7874: pushFromStack 16
7875: pushFromStack 4
7876: traceCallStarts (3 arguments)
7877: pushConstant inline True
7878: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
7879: pushFromStack 8
7880: pushFromStack 6
7881: pushFromStack 3
7882: pushFromStack 3
7883: call with 2 arguments
7884: pushFromStack 0
7885: dup by 1
7886: pushFromStack 6
7887: createFunction with 0 arguments capturing 0 starting at ip-7552
7888: pushFromStack 0
7889: dup by 1
7890: pushConstant inline builtinIfElse
7891: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
7892: pushFromStack 1
7893: pushFromStack 5
7894: pushFromStack 2
7895: pushFromStack 5
7896: pushFromStack 9
7897: call with 3 arguments
7898: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
7899: pushConstant <replaced address 4ac325cdf2f66a34> { 0 arguments (capturing nothing) → ip-1314 }
7900: pushFromStack 4
7901: pushFromStack 3
7902: pushFromStack 3
7903: pushFromStack 3
7904: pushFromStack 12
7905: call with 3 arguments
7906: pushConstant <replaced address 489cfa79756bbb84> { 0 arguments (capturing nothing) → ip-7474 }
7907: pushFromStack 6
7908: pushFromStack 9
7909: pushFromStack 5
7910: pushFromStack 3
7911: pushFromStack 14
7912: call with 3 arguments
7913: traceCallEnds without return value
7914: pushConstant inline builtinIntSubtract
7915: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
7916: pushFromStack 1
7917: pushFromStack 30
7918: pushFromStack 27
7919: pushFromStack 3
7920: call with 2 arguments
7921: pushFromStack 0
7922: dup by 1
7923: traceCallEnds without return value
7924: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
7925: pushFromStack 26
7926: pushFromStack 33
7927: pushFromStack 2
7928: call with 1 argument
7929: pushFromStack 0
7930: dup by 1
7931: pushConstant inline Tag
7932: pushFromStack 25
7933: pushFromStack 2
7934: pushFromStack 2
7935: pushFromStack 5
7936: call with 2 arguments
7937: pushFromStack 35
7938: pushFromStack 5
7939: createFunction with 0 arguments capturing 1, 0 starting at ip-7573
7940: pushFromStack 2
7941: pushFromStack 2
7942: pushFromStack 7
7943: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-7665
7944: pushFromStack 21
7945: pushFromStack 8
7946: pushFromStack 6
7947: pushFromStack 3
7948: pushFromStack 14
7949: call with 3 arguments
7950: pushFromStack 0
7951: dup by 2
7952: pushConstant <replaced address d5df9e6b35678bb5> Examples:fibonacci:fibonacci:2:11:26
7953: pushConstant inline 2
7954: pushFromStack 1
7955: pushFromStack 42
7956: pushFromStack 46
7957: pushFromStack 3
7958: pushFromStack 3
7959: traceCallStarts (2 arguments)
7960: pushFromStack 32
7961: pushFromStack 32
7962: pushFromStack 28
7963: pushFromStack 33
7964: pushFromStack 5
7965: pushFromStack 4
7966: traceCallStarts (3 arguments)
7967: pushFromStack 24
7968: pushFromStack 28
7969: pushFromStack 25
7970: pushFromStack 28
7971: pushFromStack 32
7972: call with 3 arguments
7973: pushFromStack 25
7974: pushFromStack 1
7975: pushFromStack 24
7976: pushFromStack 24
7977: pushFromStack 33
7978: call with 3 arguments
7979: pushConstant <replaced address ad91f532e120fa95> { 0 arguments (capturing nothing) → ip-7495 }
7980: pushFromStack 27
7981: pushFromStack 30
7982: pushFromStack 26
7983: pushFromStack 3
7984: pushFromStack 35
7985: call with 3 arguments
7986: traceCallEnds without return value
7987: pushFromStack 20
7988: pushFromStack 49
7989: pushFromStack 6
7990: pushFromStack 22
7991: call with 2 arguments
7992: pushFromStack 0
7993: dup by 1
7994: traceCallEnds without return value
7995: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
7996: pushFromStack 45
7997: pushFromStack 13
7998: pushFromStack 2
7999: call with 1 argument
8000: pushFromStack 0
8001: dup by 1
8002: pushFromStack 43
8003: pushFromStack 1
8004: pushFromStack 20
8005: pushFromStack 4
8006: call with 2 arguments
8007: pushFromStack 14
8008: pushFromStack 4
8009: createFunction with 0 arguments capturing 1, 0 starting at ip-7701
8010: pushFromStack 2
8011: pushFromStack 2
8012: pushFromStack 6
8013: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-7793
8014: pushFromStack 39
8015: pushFromStack 8
8016: pushFromStack 6
8017: pushFromStack 3
8018: pushFromStack 13
8019: call with 3 arguments
8020: pushFromStack 0
8021: dup by 2
8022: pushConstant <replaced address becc28b62033cb33> Examples:fibonacci:fibonacci:2:11:28
8023: pushConstant <replaced address 5503399cb31f4f37> { 2 arguments (capturing nothing) → ip-905 }
8024: pushFromStack 1
8025: pushFromStack 1
8026: pushFromStack 22
8027: pushFromStack 5
8028: pushFromStack 3
8029: traceTailCall (2 arguments)
8030: pushFromStack 57
8031: pushFromStack 21
8032: pushFromStack 58
8033: call with 1 argument
8034: pushFromStack 55
8035: pushFromStack 1
8036: pushFromStack 56
8037: pushFromStack 56
8038: call with 2 arguments
8039: pushFromStack 0
8040: dup by 3
8041: pushConstant <replaced address 440a4a2e9e3a80bb> Builtins::intAdd:5
8042: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
8043: pushFromStack 1
8044: pushFromStack 54
8045: pushFromStack 4
8046: pushFromStack 3
8047: pushFromStack 9
8048: pushFromStack 4
8049: traceCallStarts (3 arguments)
8050: pushFromStack 58
8051: pushFromStack 3
8052: pushFromStack 53
8053: pushFromStack 53
8054: call with 2 arguments
8055: pushFromStack 3
8056: createFunction with 0 arguments capturing 0 starting at ip-7818
8057: pushFromStack 49
8058: pushFromStack 3
8059: pushFromStack 50
8060: pushFromStack 3
8061: pushFromStack 57
8062: call with 3 arguments
8063: pushConstant <replaced address cbdaa2570f2c79e5> { 0 arguments (capturing nothing) → ip-855 }
8064: pushFromStack 51
8065: pushFromStack 2
8066: pushFromStack 50
8067: pushFromStack 3
8068: pushFromStack 59
8069: call with 3 arguments
8070: pushConstant <replaced address a2c0e015b3740322> { 0 arguments (capturing nothing) → ip-7516 }
8071: pushFromStack 53
8072: pushFromStack 6
8073: pushFromStack 52
8074: pushFromStack 3
8075: pushFromStack 61
8076: call with 3 arguments
8077: traceCallEnds without return value
8078: pushFromStack 69
8079: pushFromStack 15
8080: pushFromStack 70
8081: call with 1 argument
8082: pushFromStack 67
8083: pushFromStack 1
8084: pushFromStack 68
8085: pushFromStack 68
8086: call with 2 arguments
8087: pushFromStack 0
8088: dup by 3
8089: pushConstant <replaced address cf37b22a7a5dec95> Builtins::intAdd:11
8090: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
8091: pushFromStack 1
8092: pushFromStack 66
8093: pushFromStack 4
8094: pushFromStack 3
8095: pushFromStack 21
8096: pushFromStack 4
8097: traceCallStarts (3 arguments)
8098: pushFromStack 70
8099: pushFromStack 3
8100: pushFromStack 65
8101: pushFromStack 65
8102: call with 2 arguments
8103: pushFromStack 3
8104: createFunction with 0 arguments capturing 0 starting at ip-7828
8105: pushFromStack 61
8106: pushFromStack 3
8107: pushFromStack 62
8108: pushFromStack 3
8109: pushFromStack 69
8110: call with 3 arguments
8111: pushConstant <replaced address 0643ee59211ac3f8> { 0 arguments (capturing nothing) → ip-862 }
8112: pushFromStack 63
8113: pushFromStack 2
8114: pushFromStack 62
8115: pushFromStack 3
8116: pushFromStack 71
8117: call with 3 arguments
8118: pushConstant <replaced address 231d32f461ea7789> { 0 arguments (capturing nothing) → ip-7523 }
8119: pushFromStack 65
8120: pushFromStack 6
8121: pushFromStack 64
8122: pushFromStack 3
8123: pushFromStack 73
8124: call with 3 arguments
8125: traceCallEnds without return value
8126: pushConstant inline builtinIntAdd
8127: pushConstant <replaced address 216d199efe6cdff8> Builtins::intAdd:18
8128: pushFromStack 63
8129: drop
8130: pushFromStack 61
8131: drop
8132: pushFromStack 42
8133: drop
8134: pushFromStack 40
8135: drop
8136: pushFromStack 16
8137: drop
8138: pushFromStack 14
8139: drop
8140: pushFromStack 4
8141: drop
8142: pushFromStack 2
8143: drop
8144: pushFromStack 1
8145: pushFromStack 47
8146: pushFromStack 30
8147: pushFromStack 3
8148: tailCall with 90 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
8149: pushFromStack 1
8150: dup by 1
8151: pushFromStack 1
8152: popMultipleBelowTop 2
8153: return
# Builtins::ifElse:1:isMatch:else
8154: pushFromStack 1
8155: dup by 1
8156: pushConstant inline builtinEquals
8157: pushConstant inline False
8158: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
8159: pushFromStack 2
8160: pushFromStack 2
8161: pushFromStack 6
8162: pushFromStack 3
8163: call with 2 arguments
8164: pushConstant inline builtinIfElse
8165: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
8166: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8167: pushFromStack 2
8168: pushFromStack 4
8169: pushFromStack 3
8170: pushFromStack 3
8171: pushFromStack 8
8172: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
8173: pushFromStack 1
8174: dup by 1
8175: pushConstant inline builtinEquals
8176: pushConstant inline False
8177: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8178: pushFromStack 2
8179: pushFromStack 5
8180: pushFromStack 3
8181: pushFromStack 3
8182: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2
8183: pushFromStack 1
8184: dup by 6
8185: pushConstant <replaced address 664bab760ff04a9c> Examples:fibonacci:fibonacci:2:9
8186: pushConstant <replaced address fd0d0b1c2519cdbd> { 2 arguments (capturing nothing) → ip-7323 }
8187: pushConstant inline 2
8188: pushFromStack 2
8189: pushFromStack 2
8190: pushFromStack 6
8191: pushFromStack 3
8192: pushFromStack 3
8193: traceCallStarts (2 arguments)
8194: pushConstant <replaced address 7ae5b371ff139a5d> Examples:fibonacci:isLessThan:9
8195: pushConstant <replaced address 6d8bc0b01b68ed0f> { 2 arguments (capturing nothing) → ip-7169 }
8196: pushFromStack 1
8197: pushFromStack 1
8198: pushFromStack 8
8199: pushFromStack 5
8200: pushFromStack 3
8201: traceCallStarts (2 arguments)
8202: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
8203: pushConstant <replaced address 7123377f52cd6d5b> { 2 arguments (capturing nothing) → ip-1085 }
8204: pushFromStack 1
8205: pushFromStack 1
8206: pushFromStack 10
8207: pushFromStack 7
8208: pushFromStack 3
8209: traceCallStarts (2 arguments)
8210: pushConstant inline builtinTypeOf
8211: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
8212: pushFromStack 1
8213: pushFromStack 11
8214: pushFromStack 2
8215: call with 1 argument
8216: pushConstant inline builtinEquals
8217: pushConstant inline Int
8218: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
8219: pushFromStack 2
8220: pushFromStack 4
8221: pushFromStack 3
8222: pushFromStack 3
8223: call with 2 arguments
8224: pushFromStack 0
8225: dup by 3
8226: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
8227: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
8228: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
8229: pushFromStack 2
8230: pushFromStack 2
8231: pushFromStack 5
8232: pushFromStack 3
8233: pushFromStack 15
8234: pushFromStack 4
8235: traceCallStarts (3 arguments)
8236: pushConstant inline True
8237: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8238: pushFromStack 8
8239: pushFromStack 6
8240: pushFromStack 3
8241: pushFromStack 3
8242: call with 2 arguments
8243: pushFromStack 6
8244: createFunction with 0 arguments capturing 0 starting at ip-7537
8245: pushConstant inline builtinIfElse
8246: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
8247: pushFromStack 1
8248: pushFromStack 5
8249: pushFromStack 2
8250: pushFromStack 5
8251: pushFromStack 9
8252: call with 3 arguments
8253: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
8254: pushConstant <replaced address 754f758090f20bd1> { 0 arguments (capturing nothing) → ip-1035 }
8255: pushFromStack 4
8256: pushFromStack 3
8257: pushFromStack 3
8258: pushFromStack 3
8259: pushFromStack 12
8260: call with 3 arguments
8261: pushConstant <replaced address fc2f44dce996c10d> { 0 arguments (capturing nothing) → ip-7135 }
8262: pushFromStack 6
8263: pushFromStack 9
8264: pushFromStack 5
8265: pushFromStack 3
8266: pushFromStack 14
8267: call with 3 arguments
8268: traceCallEnds without return value
8269: pushConstant inline builtinIntCompareTo
8270: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
8271: pushFromStack 1
8272: pushFromStack 34
8273: pushFromStack 31
8274: pushFromStack 3
8275: call with 2 arguments
8276: traceCallEnds without return value
8277: traceCallEnds without return value
8278: pushConstant inline Less
8279: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
8280: pushFromStack 24
8281: pushFromStack 3
8282: pushFromStack 3
8283: pushFromStack 3
8284: call with 2 arguments
8285: pushFromStack 0
8286: dup by 4
8287: traceCallEnds without return value
8288: pushFromStack 37
8289: createFunction with 0 arguments capturing 0 starting at ip-7547
8290: pushFromStack 0
8291: dup by 2
8292: pushFromStack 40
8293: pushFromStack 2
8294: createFunction with 0 arguments capturing 1, 0 starting at ip-7838
8295: pushFromStack 0
8296: dup by 2
8297: pushConstant <replaced address 71d566509a8a2add> Examples:fibonacci:fibonacci:2:12
8298: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
8299: pushFromStack 1
8300: pushFromStack 1
8301: pushFromStack 9
8302: pushFromStack 8
8303: pushFromStack 6
8304: pushFromStack 4
8305: traceCallStarts (3 arguments)
8306: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
8307: pushFromStack 33
8308: pushFromStack 27
8309: pushFromStack 10
8310: pushFromStack 3
8311: call with 2 arguments
8312: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
8313: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8314: pushFromStack 24
8315: pushFromStack 3
8316: pushFromStack 3
8317: pushFromStack 3
8318: pushFromStack 7
8319: call with 3 arguments
8320: pushFromStack 0
8321: dup by 1
8322: pushConstant inline builtinTagWithoutValue
8323: pushFromStack 0
8324: pushFromStack 2
8325: pushFromStack 7
8326: call with 1 argument
8327: pushConstant inline Match
8328: pushFromStack 40
8329: pushFromStack 2
8330: pushFromStack 2
8331: pushFromStack 10
8332: call with 2 arguments
8333: pushFromStack 4
8334: createFunction with 0 arguments capturing 0 starting at ip-8149
8335: pushFromStack 18
8336: createFunction with 0 arguments capturing 0 starting at ip-8154
8337: pushFromStack 33
8338: pushFromStack 5
8339: pushFromStack 4
8340: pushFromStack 3
8341: pushFromStack 16
8342: call with 3 arguments
8343: pushFromStack 8
8344: pushFromStack 1
8345: pushFromStack 15
8346: call with 1 argument
8347: pushFromStack 47
8348: pushFromStack 1
8349: pushFromStack 9
8350: pushFromStack 17
8351: call with 2 arguments
8352: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
8353: pushFromStack 37
8354: pushFromStack 2
8355: pushFromStack 38
8356: pushFromStack 3
8357: pushFromStack 20
8358: call with 3 arguments
8359: pushFromStack 0
8360: dup by 3
8361: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
8362: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
8363: pushFromStack 1
8364: pushFromStack 48
8365: pushFromStack 4
8366: pushFromStack 3
8367: pushFromStack 25
8368: pushFromStack 4
8369: traceCallStarts (3 arguments)
8370: pushFromStack 52
8371: pushFromStack 3
8372: pushFromStack 47
8373: pushFromStack 47
8374: call with 2 arguments
8375: pushFromStack 3
8376: createFunction with 0 arguments capturing 0 starting at ip-8173
8377: pushFromStack 43
8378: pushFromStack 3
8379: pushFromStack 44
8380: pushFromStack 3
8381: pushFromStack 51
8382: call with 3 arguments
8383: pushConstant <replaced address bbfd050c570524d0> { 0 arguments (capturing nothing) → ip-214 }
8384: pushFromStack 45
8385: pushFromStack 2
8386: pushFromStack 44
8387: pushFromStack 3
8388: pushFromStack 53
8389: call with 3 arguments
8390: pushConstant <replaced address 5d867ef673d8c19c> { 0 arguments (capturing nothing) → ip-7530 }
8391: pushFromStack 47
8392: pushFromStack 6
8393: pushFromStack 46
8394: pushFromStack 3
8395: pushFromStack 55
8396: call with 3 arguments
8397: traceCallEnds without return value
8398: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
8399: pushFromStack 0
8400: pushFromStack 50
8401: pushFromStack 19
8402: pushFromStack 37
8403: pushFromStack 35
8404: pushFromStack 4
8405: traceCallStarts (3 arguments)
8406: pushFromStack 49
8407: pushFromStack 18
8408: pushFromStack 36
8409: pushFromStack 34
8410: pushFromStack 4
8411: call with 3 arguments
8412: traceCallEnds without return value
8413: traceCallEnds without return value
8414: pushFromStack 45
8415: drop
8416: pushFromStack 43
8417: drop
8418: pushFromStack 4
8419: drop
8420: pushFromStack 2
8421: drop
8422: pushFromStack 0
8423: popMultipleBelowTop 76
8424: return
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:then
8425: pushFromStack 1
8426: dup by 1
8427: pushConstant inline builtinTagHasValue
8428: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
8429: pushFromStack 1
8430: pushFromStack 4
8431: pushFromStack 2
8432: call with 1 argument
8433: pushConstant inline builtinIfElse
8434: pushConstant <replaced address 0cc587e4feaafef0> { 0 arguments (capturing nothing) → ip-6774 }
8435: pushConstant <replaced address 8d21dac3ad217357> { 0 arguments (capturing nothing) → ip-6781 }
8436: pushFromStack 2
8437: pushFromStack 4
8438: pushFromStack 3
8439: pushFromStack 3
8440: pushFromStack 8
8441: tailCall with 8 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:then
8442: pushFromStack 2
8443: dup by 4
8444: pushFromStack 1
8445: dup by 2
8446: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
8447: pushFromStack 0
8448: pushFromStack 4
8449: pushFromStack 0
8450: pushFromStack 5
8451: pushFromStack 3
8452: traceTailCall (2 arguments)
8453: pushFromStack 3
8454: pushFromStack 0
8455: pushFromStack 4
8456: pushFromStack 3
8457: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:else
8458: pushFromStack 1
8459: dup by 1
8460: pushConstant inline builtinToDebugText
8461: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
8462: pushFromStack 1
8463: pushFromStack 4
8464: pushFromStack 2
8465: call with 1 argument
8466: pushConstant inline builtinTextConcatenate
8467: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
8468: pushFromStack 1
8469: pushFromStack 1
8470: pushFromStack 4
8471: pushFromStack 6
8472: call with 2 arguments
8473: pushConstant <replaced address 4977ff9b06a0fe0d> " arguments with 2 arguments."
8474: pushFromStack 3
8475: pushFromStack 2
8476: pushFromStack 2
8477: pushFromStack 8
8478: call with 2 arguments
8479: pushFromStack 0
8480: pushFromStack 7
8481: panic
8482: popMultipleBelowTop 10
8483: return
# Examples:fibonacci:recursive:0:0:3:calleeIsFunction:then
8484: pushFromStack 2
8485: dup by 2
8486: pushFromStack 1
8487: dup by 1
8488: pushConstant inline builtinGetArgumentCount
8489: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
8490: pushFromStack 1
8491: pushFromStack 5
8492: pushFromStack 2
8493: call with 1 argument
8494: pushFromStack 0
8495: dup by 1
8496: pushConstant inline builtinEquals
8497: pushConstant inline 2
8498: pushFromStack 1
8499: pushFromStack 3
8500: pushFromStack 2
8501: pushFromStack 6
8502: call with 2 arguments
8503: pushFromStack 8
8504: pushFromStack 8
8505: createFunction with 0 arguments capturing 1, 0 starting at ip-8442
8506: pushFromStack 6
8507: createFunction with 0 arguments capturing 0 starting at ip-8458
8508: pushConstant inline builtinIfElse
8509: pushFromStack 0
8510: pushFromStack 7
8511: pushFromStack 5
8512: pushFromStack 4
8513: pushFromStack 14
8514: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:else
8515: pushFromStack 3
8516: dup by 1
8517: pushFromStack 2
8518: dup by 1
8519: pushFromStack 1
8520: dup by 1
8521: pushConstant inline builtinEquals
8522: pushConstant inline Function
8523: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
8524: pushFromStack 2
8525: pushFromStack 5
8526: pushFromStack 3
8527: pushFromStack 3
8528: call with 2 arguments
8529: pushFromStack 7
8530: pushFromStack 7
8531: createFunction with 0 arguments capturing 1, 0 starting at ip-8484
8532: pushConstant inline builtinIfElse
8533: pushConstant <replaced address 85ec0259501507ea> { 0 arguments (capturing nothing) → ip-6788 }
8534: pushFromStack 1
8535: pushFromStack 6
8536: pushFromStack 4
8537: pushFromStack 3
8538: pushFromStack 10
8539: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:recursive:0:0
8540: pushFromStack 2
8541: dup by 3
8542: pushConstant inline builtinTypeOf
8543: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
8544: pushFromStack 1
8545: pushFromStack 5
8546: pushFromStack 2
8547: call with 1 argument
8548: pushFromStack 0
8549: dup by 1
8550: pushConstant inline builtinEquals
8551: pushConstant inline Tag
8552: pushFromStack 1
8553: pushFromStack 3
8554: pushFromStack 2
8555: pushFromStack 6
8556: call with 2 arguments
8557: pushFromStack 8
8558: createFunction with 0 arguments capturing 0 starting at ip-8425
8559: pushFromStack 1
8560: pushFromStack 10
8561: pushFromStack 7
8562: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-8515
8563: pushConstant inline builtinIfElse
8564: pushFromStack 0
8565: pushFromStack 8
8566: pushFromStack 7
8567: pushFromStack 4
8568: pushFromStack 15
8569: tailCall with 16 locals and 3 arguments
# Examples:fibonacci:recursive:0
8570: pushFromStack 1
8571: dup by 1
8572: pushFromStack 2
8573: createFunction with 1 argument capturing 0 starting at ip-8540
8574: pushFromStack 0
8575: dup by 1
8576: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
8577: pushConstant <replaced address bc27ce639b755a49> { 2 arguments (capturing nothing) → ip-8183 }
8578: pushFromStack 1
8579: pushFromStack 1
8580: pushFromStack 4
8581: pushFromStack 8
8582: pushFromStack 3
8583: traceTailCall (2 arguments)
8584: pushFromStack 0
8585: pushFromStack 3
8586: pushFromStack 7
8587: pushFromStack 4
8588: tailCall with 7 locals and 2 arguments
# Examples:fibonacci:fibonacci
8589: pushFromStack 1
8590: dup by 2
8591: pushConstant <replaced address 1315f9b01ba30c9f> Examples:fibonacci:fibonacci:3
8592: pushConstant <replaced address e034677c287ec6cb> { 2 arguments (capturing nothing) → ip-7117 }
8593: pushConstant <replaced address bc27ce639b755a49> { 2 arguments (capturing nothing) → ip-8183 }
8594: pushFromStack 2
8595: pushFromStack 2
8596: pushFromStack 6
8597: pushFromStack 3
8598: pushFromStack 3
8599: traceCallStarts (2 arguments)
8600: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
8601: pushConstant <replaced address b7dc18b5e494a988> { 2 arguments (capturing nothing) → ip-8570 }
8602: pushFromStack 1
8603: pushFromStack 1
8604: pushFromStack 0
8605: pushFromStack 9
8606: pushFromStack 3
8607: traceCallStarts (2 arguments)
8608: pushFromStack 0
8609: pushFromStack 0
8610: pushFromStack 8
8611: pushFromStack 4
8612: call with 2 arguments
8613: traceCallEnds without return value
8614: traceCallEnds without return value
8615: pushFromStack 0
8616: popMultipleBelowTop 8
8617: return
# anonymous:$generated::needs:condition:else
8618: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
8619: pushConstant <replaced address 421b7208a9f93281> Examples:fibonacci:23:5
8620: pushFromStack 1
8621: pushFromStack 1
8622: panic
8623: popMultipleBelowTop 3
8624: return
8625: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
8626: pushConstant <replaced address 421b7208a9f93281> Examples:fibonacci:23:5
8627: pushFromStack 1
8628: pushFromStack 1
8629: panic
8630: popMultipleBelowTop 3
8631: return
8632: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
8633: pushConstant <replaced address df0fcdbc9cad1521> Examples:fibonacci:23:6:7
8634: pushFromStack 1
8635: pushFromStack 1
8636: panic
8637: popMultipleBelowTop 3
8638: return
# Examples:fibonacci:23:6:14
8639: pushFromStack 1
8640: dup by 3
8641: pushConstant <replaced address bd82eea49ada30b1> Examples:fibonacci:23:6:14:2
8642: pushConstant <replaced address 8b2eceb75759e0c1> { 1 argument (capturing nothing) → ip-8589 }
8643: pushFromStack 1
8644: pushFromStack 1
8645: pushFromStack 5
8646: pushFromStack 2
8647: traceCallStarts (1 argument)
8648: pushConstant <replaced address 1315f9b01ba30c9f> Examples:fibonacci:fibonacci:3
8649: pushConstant <replaced address e034677c287ec6cb> { 2 arguments (capturing nothing) → ip-7117 }
8650: pushConstant <replaced address bc27ce639b755a49> { 2 arguments (capturing nothing) → ip-8183 }
8651: pushFromStack 2
8652: pushFromStack 2
8653: pushFromStack 8
8654: pushFromStack 3
8655: pushFromStack 3
8656: traceCallStarts (2 arguments)
8657: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
8658: pushConstant <replaced address b7dc18b5e494a988> { 2 arguments (capturing nothing) → ip-8570 }
8659: pushFromStack 1
8660: pushFromStack 1
8661: pushFromStack 0
8662: pushFromStack 11
8663: pushFromStack 3
8664: traceCallStarts (2 arguments)
8665: pushFromStack 0
8666: pushFromStack 0
8667: pushFromStack 10
8668: pushFromStack 4
8669: call with 2 arguments
8670: traceCallEnds without return value
8671: traceCallEnds without return value
8672: traceCallEnds without return value
8673: pushConstant inline builtinToDebugText
8674: pushConstant <replaced address 8383f19ea0a5e146> Builtins::toDebugText:5
8675: pushFromStack 1
8676: pushFromStack 3
8677: pushFromStack 2
8678: tailCall with 12 locals and 1 argument
# anonymous:$generated::needs:condition:else
8679: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
8680: pushConstant <replaced address 75c6f093036a613c> Examples:fibonacci:23:6:22
8681: pushFromStack 1
8682: pushFromStack 1
8683: panic
8684: popMultipleBelowTop 3
8685: return
# Examples:fibonacci:23:6:case-0:didNotMatch
8686: pushConstant <replaced address ea9a293534a31de4> "Usage: `cargo run -- run fibonacci.candy -- <number>`"
8687: popMultipleBelowTop 1
8688: return
# anonymous:$generated::needs:condition:else
8689: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
8690: pushConstant <replaced address 64b8a29849c6d344> Examples:fibonacci:23:12
8691: pushFromStack 1
8692: pushFromStack 1
8693: panic
8694: popMultipleBelowTop 3
8695: return
8696: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
8697: pushConstant <replaced address 64b8a29849c6d344> Examples:fibonacci:23:12
8698: pushFromStack 1
8699: pushFromStack 1
8700: panic
8701: popMultipleBelowTop 3
8702: return
# Examples:fibonacci:23:13:doesTagHaveValue:then
8703: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
8704: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
8705: pushFromStack 1
8706: pushFromStack 1
8707: panic
8708: popMultipleBelowTop 3
8709: return
# Examples:fibonacci:23:13:calleeIsFunction:else
8710: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
8711: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
8712: pushFromStack 1
8713: pushFromStack 1
8714: panic
8715: popMultipleBelowTop 3
8716: return
# anonymous:$generated::needs:isConditionTrue:else
8717: pushFromStack 1
8718: dup by 1
8719: pushConstant inline builtinEquals
8720: pushConstant inline False
8721: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8722: pushFromStack 2
8723: pushFromStack 5
8724: pushFromStack 3
8725: pushFromStack 3
8726: tailCall with 5 locals and 2 arguments
8727: pushFromStack 1
8728: dup by 1
8729: pushConstant inline builtinEquals
8730: pushConstant inline False
8731: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8732: pushFromStack 2
8733: pushFromStack 5
8734: pushFromStack 3
8735: pushFromStack 3
8736: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:23:6:equals:then
8737: pushFromStack 1
8738: dup by 1
8739: pushConstant inline builtinListGet
8740: pushConstant inline 0
8741: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
8742: pushFromStack 2
8743: pushFromStack 5
8744: pushFromStack 3
8745: pushFromStack 3
8746: call with 2 arguments
8747: pushFromStack 0
8748: createList 1
8749: pushFromStack 0
8750: createTag Match
8751: popMultipleBelowTop 7
8752: return
8753: pushFromStack 1
8754: dup by 2
8755: pushConstant inline builtinListLength
8756: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
8757: pushFromStack 1
8758: pushFromStack 4
8759: pushFromStack 2
8760: call with 1 argument
8761: pushConstant inline builtinEquals
8762: pushConstant inline 1
8763: pushFromStack 1
8764: pushFromStack 1
8765: pushFromStack 4
8766: pushFromStack 6
8767: call with 2 arguments
8768: pushFromStack 7
8769: createFunction with 0 arguments capturing 0 starting at ip-8737
8770: pushConstant inline builtinIfElse
8771: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8772: pushFromStack 1
8773: pushFromStack 5
8774: pushFromStack 4
8775: pushFromStack 3
8776: pushFromStack 12
8777: tailCall with 12 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
8778: pushFromStack 1
8779: dup by 1
8780: pushConstant inline builtinEquals
8781: pushConstant inline False
8782: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8783: pushFromStack 2
8784: pushFromStack 5
8785: pushFromStack 3
8786: pushFromStack 3
8787: tailCall with 5 locals and 2 arguments
# Core:result:is:1:equals:then
8788: pushFromStack 1
8789: dup by 1
8790: pushConstant inline builtinTagGetValue
8791: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
8792: pushFromStack 1
8793: pushFromStack 4
8794: pushFromStack 2
8795: call with 1 argument
8796: pushFromStack 0
8797: createList 1
8798: pushFromStack 0
8799: createTag Match
8800: popMultipleBelowTop 6
8801: return
8802: pushFromStack 1
8803: dup by 2
8804: pushConstant inline builtinTagHasValue
8805: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
8806: pushFromStack 1
8807: pushFromStack 4
8808: pushFromStack 2
8809: call with 1 argument
8810: pushConstant inline builtinEquals
8811: pushConstant inline True
8812: pushFromStack 1
8813: pushFromStack 1
8814: pushFromStack 4
8815: pushFromStack 6
8816: call with 2 arguments
8817: pushFromStack 7
8818: createFunction with 0 arguments capturing 0 starting at ip-8788
8819: pushConstant inline builtinIfElse
8820: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8821: pushFromStack 1
8822: pushFromStack 5
8823: pushFromStack 4
8824: pushFromStack 3
8825: pushFromStack 12
8826: tailCall with 12 locals and 3 arguments
8827: pushFromStack 1
8828: dup by 2
8829: pushConstant inline builtinTagWithoutValue
8830: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
8831: pushFromStack 1
8832: pushFromStack 4
8833: pushFromStack 2
8834: call with 1 argument
8835: pushConstant inline builtinEquals
8836: pushConstant inline Ok
8837: pushFromStack 1
8838: pushFromStack 1
8839: pushFromStack 4
8840: pushFromStack 6
8841: call with 2 arguments
8842: pushFromStack 7
8843: createFunction with 0 arguments capturing 0 starting at ip-8802
8844: pushConstant inline builtinIfElse
8845: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8846: pushFromStack 1
8847: pushFromStack 5
8848: pushFromStack 4
8849: pushFromStack 3
8850: pushFromStack 12
8851: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
8852: pushFromStack 1
8853: dup by 1
8854: pushFromStack 1
8855: popMultipleBelowTop 2
8856: return
# Core:result:is:1:equals:then
8857: pushFromStack 1
8858: dup by 1
8859: pushConstant inline builtinTagGetValue
8860: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
8861: pushFromStack 1
8862: pushFromStack 4
8863: pushFromStack 2
8864: call with 1 argument
8865: pushFromStack 0
8866: createList 1
8867: pushFromStack 0
8868: createTag Match
8869: popMultipleBelowTop 6
8870: return
8871: pushFromStack 1
8872: dup by 2
8873: pushConstant inline builtinTagHasValue
8874: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
8875: pushFromStack 1
8876: pushFromStack 4
8877: pushFromStack 2
8878: call with 1 argument
8879: pushConstant inline builtinEquals
8880: pushConstant inline True
8881: pushFromStack 1
8882: pushFromStack 1
8883: pushFromStack 4
8884: pushFromStack 6
8885: call with 2 arguments
8886: pushFromStack 7
8887: createFunction with 0 arguments capturing 0 starting at ip-8857
8888: pushConstant inline builtinIfElse
8889: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8890: pushFromStack 1
8891: pushFromStack 5
8892: pushFromStack 4
8893: pushFromStack 3
8894: pushFromStack 12
8895: tailCall with 12 locals and 3 arguments
8896: pushFromStack 1
8897: dup by 2
8898: pushConstant inline builtinTagWithoutValue
8899: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
8900: pushFromStack 1
8901: pushFromStack 4
8902: pushFromStack 2
8903: call with 1 argument
8904: pushConstant inline builtinEquals
8905: pushConstant inline Error
8906: pushFromStack 1
8907: pushFromStack 1
8908: pushFromStack 4
8909: pushFromStack 6
8910: call with 2 arguments
8911: pushFromStack 7
8912: createFunction with 0 arguments capturing 0 starting at ip-8871
8913: pushConstant inline builtinIfElse
8914: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8915: pushFromStack 1
8916: pushFromStack 5
8917: pushFromStack 4
8918: pushFromStack 3
8919: pushFromStack 12
8920: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
8921: pushFromStack 1
8922: dup by 2
8923: pushConstant inline builtinTypeOf
8924: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
8925: pushFromStack 1
8926: pushFromStack 4
8927: pushFromStack 2
8928: call with 1 argument
8929: pushConstant inline builtinEquals
8930: pushConstant inline Tag
8931: pushFromStack 1
8932: pushFromStack 1
8933: pushFromStack 4
8934: pushFromStack 6
8935: call with 2 arguments
8936: pushFromStack 7
8937: createFunction with 0 arguments capturing 0 starting at ip-8896
8938: pushConstant inline builtinIfElse
8939: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
8940: pushFromStack 1
8941: pushFromStack 5
8942: pushFromStack 4
8943: pushFromStack 3
8944: pushFromStack 12
8945: tailCall with 12 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
8946: pushFromStack 1
8947: dup by 1
8948: pushConstant inline builtinEquals
8949: pushConstant inline False
8950: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8951: pushFromStack 2
8952: pushFromStack 5
8953: pushFromStack 3
8954: pushFromStack 3
8955: tailCall with 5 locals and 2 arguments
8956: pushFromStack 1
8957: dup by 1
8958: pushConstant inline builtinEquals
8959: pushConstant inline False
8960: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8961: pushFromStack 2
8962: pushFromStack 5
8963: pushFromStack 3
8964: pushFromStack 3
8965: tailCall with 5 locals and 2 arguments
8966: pushFromStack 1
8967: dup by 1
8968: pushConstant inline builtinEquals
8969: pushConstant inline False
8970: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
8971: pushFromStack 2
8972: pushFromStack 5
8973: pushFromStack 3
8974: pushFromStack 3
8975: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:23:6:case-0:matched
8976: pushFromStack 1
8977: dup by 1
8978: pushConstant inline builtinTagGetValue
8979: pushConstant <replaced address cdbcb70275304920> Examples:fibonacci:23:6:n
8980: pushFromStack 1
8981: pushFromStack 4
8982: pushFromStack 2
8983: call with 1 argument
8984: pushConstant inline builtinListGet
8985: pushConstant inline 0
8986: pushFromStack 1
8987: pushFromStack 3
8988: pushFromStack 2
8989: pushFromStack 6
8990: call with 2 arguments
8991: pushFromStack 0
8992: dup by 2
8993: pushConstant <replaced address df0fcdbc9cad1521> Examples:fibonacci:23:6:7
8994: pushConstant <replaced address 9eb43c56343f3e48> { 1 argument (capturing nothing) → ip-1240 }
8995: pushFromStack 1
8996: pushFromStack 1
8997: pushFromStack 4
8998: pushFromStack 2
8999: traceCallStarts (1 argument)
9000: pushConstant inline builtinTypeOf
9001: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
9002: pushFromStack 1
9003: pushFromStack 5
9004: pushFromStack 2
9005: call with 1 argument
9006: pushConstant inline builtinEquals
9007: pushConstant inline Text
9008: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
9009: pushFromStack 2
9010: pushFromStack 4
9011: pushFromStack 3
9012: pushFromStack 3
9013: call with 2 arguments
9014: pushFromStack 0
9015: dup by 3
9016: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
9017: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
9018: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
9019: pushFromStack 2
9020: pushFromStack 2
9021: pushFromStack 5
9022: pushFromStack 3
9023: pushFromStack 15
9024: pushFromStack 4
9025: traceCallStarts (3 arguments)
9026: pushConstant inline True
9027: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
9028: pushFromStack 8
9029: pushFromStack 6
9030: pushFromStack 3
9031: pushFromStack 3
9032: call with 2 arguments
9033: pushFromStack 6
9034: createFunction with 0 arguments capturing 0 starting at ip-8778
9035: pushConstant inline builtinIfElse
9036: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
9037: pushFromStack 1
9038: pushFromStack 5
9039: pushFromStack 2
9040: pushFromStack 5
9041: pushFromStack 9
9042: call with 3 arguments
9043: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
9044: pushConstant <replaced address 35219c8edbd127ed> { 0 arguments (capturing nothing) → ip-1215 }
9045: pushFromStack 4
9046: pushFromStack 3
9047: pushFromStack 3
9048: pushFromStack 3
9049: pushFromStack 12
9050: call with 3 arguments
9051: pushConstant <replaced address aa9fa5b3c4487bd6> { 0 arguments (capturing nothing) → ip-8632 }
9052: pushFromStack 6
9053: pushFromStack 9
9054: pushFromStack 5
9055: pushFromStack 3
9056: pushFromStack 14
9057: call with 3 arguments
9058: traceCallEnds without return value
9059: pushConstant inline builtinIntParse
9060: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
9061: pushFromStack 1
9062: pushFromStack 28
9063: pushFromStack 2
9064: call with 1 argument
9065: pushFromStack 0
9066: dup by 1
9067: traceCallEnds without return value
9068: pushConstant <replaced address 5329c003639cc079> Examples:fibonacci:23:6:15
9069: pushConstant <replaced address f8b7e6b56f22ffab> { 2 arguments (capturing nothing) → ip-6445 }
9070: pushConstant <replaced address e6c3ffce4f3bf9fb> { 1 argument (capturing nothing) → ip-8639 }
9071: pushFromStack 2
9072: pushFromStack 2
9073: pushFromStack 5
9074: pushFromStack 3
9075: pushFromStack 3
9076: traceCallStarts (2 arguments)
9077: pushFromStack 1
9078: pushFromStack 4
9079: pushFromStack 2
9080: pushFromStack 5
9081: call with 2 arguments
9082: pushFromStack 0
9083: dup by 8
9084: traceCallEnds without return value
9085: pushConstant <replaced address 75c6f093036a613c> Examples:fibonacci:23:6:22
9086: pushConstant <replaced address ed495f3dc60840ad> { 1 argument (capturing nothing) → ip-4169 }
9087: pushFromStack 1
9088: pushFromStack 1
9089: pushFromStack 4
9090: pushFromStack 2
9091: traceCallStarts (1 argument)
9092: pushConstant <replaced address 055673228b46d5b7> Core:result:getValue:2
9093: pushConstant <replaced address c2082fb1645bc1fc> { 1 argument (capturing nothing) → ip-2300 }
9094: pushFromStack 1
9095: pushFromStack 1
9096: pushFromStack 6
9097: pushFromStack 2
9098: traceCallStarts (1 argument)
9099: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
9100: pushFromStack 34
9101: pushFromStack 6
9102: pushFromStack 2
9103: call with 1 argument
9104: pushConstant inline Tag
9105: pushFromStack 33
9106: pushFromStack 1
9107: pushFromStack 3
9108: pushFromStack 5
9109: call with 2 arguments
9110: pushFromStack 8
9111: createFunction with 0 arguments capturing 0 starting at ip-8827
9112: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
9113: pushFromStack 25
9114: pushFromStack 4
9115: pushFromStack 3
9116: pushFromStack 3
9117: pushFromStack 10
9118: call with 3 arguments
9119: pushFromStack 0
9120: dup by 1
9121: pushConstant inline builtinTagWithoutValue
9122: pushFromStack 0
9123: pushFromStack 2
9124: pushFromStack 10
9125: call with 1 argument
9126: pushConstant inline Match
9127: pushFromStack 41
9128: pushFromStack 2
9129: pushFromStack 2
9130: pushFromStack 13
9131: call with 2 arguments
9132: pushFromStack 4
9133: createFunction with 0 arguments capturing 0 starting at ip-8852
9134: pushFromStack 9
9135: createFunction with 0 arguments capturing 0 starting at ip-8921
9136: pushFromStack 34
9137: pushFromStack 5
9138: pushFromStack 4
9139: pushFromStack 3
9140: pushFromStack 19
9141: call with 3 arguments
9142: pushFromStack 8
9143: pushFromStack 1
9144: pushFromStack 18
9145: call with 1 argument
9146: pushFromStack 48
9147: pushFromStack 1
9148: pushFromStack 9
9149: pushFromStack 20
9150: call with 2 arguments
9151: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
9152: pushFromStack 38
9153: pushFromStack 2
9154: pushFromStack 39
9155: pushFromStack 3
9156: pushFromStack 23
9157: call with 3 arguments
9158: pushFromStack 0
9159: dup by 3
9160: traceCallEnds without return value
9161: pushConstant <replaced address a84ff690d98aeae1> Core:result:getValue:4
9162: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
9163: pushFromStack 1
9164: pushFromStack 49
9165: pushFromStack 4
9166: pushFromStack 3
9167: pushFromStack 30
9168: pushFromStack 4
9169: traceCallStarts (3 arguments)
9170: pushFromStack 53
9171: pushFromStack 3
9172: pushFromStack 48
9173: pushFromStack 48
9174: call with 2 arguments
9175: pushFromStack 3
9176: createFunction with 0 arguments capturing 0 starting at ip-8946
9177: pushFromStack 44
9178: pushFromStack 3
9179: pushFromStack 45
9180: pushFromStack 3
9181: pushFromStack 52
9182: call with 3 arguments
9183: pushConstant <replaced address b9ce0bfa1e99056e> { 0 arguments (capturing nothing) → ip-3952 }
9184: pushFromStack 46
9185: pushFromStack 2
9186: pushFromStack 45
9187: pushFromStack 3
9188: pushFromStack 54
9189: call with 3 arguments
9190: pushConstant <replaced address 104d462a8ceaa3b5> { 0 arguments (capturing nothing) → ip-8679 }
9191: pushFromStack 48
9192: pushFromStack 6
9193: pushFromStack 47
9194: pushFromStack 3
9195: pushFromStack 56
9196: call with 3 arguments
9197: traceCallEnds without return value
9198: pushConstant <replaced address 1c69e8d7a07a9639> Core:result:getValue:12
9199: pushConstant <replaced address 77c2885b22af7c12> { 1 argument (capturing nothing) → ip-1722 }
9200: pushFromStack 1
9201: pushFromStack 1
9202: pushFromStack 20
9203: pushFromStack 2
9204: traceCallStarts (1 argument)
9205: pushFromStack 66
9206: pushFromStack 19
9207: pushFromStack 67
9208: call with 1 argument
9209: pushFromStack 64
9210: pushFromStack 1
9211: pushFromStack 33
9212: pushFromStack 65
9213: call with 2 arguments
9214: pushFromStack 0
9215: dup by 3
9216: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
9217: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
9218: pushFromStack 1
9219: pushFromStack 63
9220: pushFromStack 4
9221: pushFromStack 3
9222: pushFromStack 9
9223: pushFromStack 4
9224: traceCallStarts (3 arguments)
9225: pushFromStack 67
9226: pushFromStack 3
9227: pushFromStack 62
9228: pushFromStack 62
9229: call with 2 arguments
9230: pushFromStack 3
9231: createFunction with 0 arguments capturing 0 starting at ip-8956
9232: pushFromStack 58
9233: pushFromStack 3
9234: pushFromStack 59
9235: pushFromStack 3
9236: pushFromStack 66
9237: call with 3 arguments
9238: pushConstant <replaced address 7eb081198d2e8ae6> { 0 arguments (capturing nothing) → ip-1672 }
9239: pushFromStack 60
9240: pushFromStack 2
9241: pushFromStack 59
9242: pushFromStack 3
9243: pushFromStack 68
9244: call with 3 arguments
9245: pushConstant <replaced address 225e43665aeed085> { 0 arguments (capturing nothing) → ip-3959 }
9246: pushFromStack 62
9247: pushFromStack 6
9248: pushFromStack 61
9249: pushFromStack 3
9250: pushFromStack 70
9251: call with 3 arguments
9252: traceCallEnds without return value
9253: pushConstant inline builtinTagHasValue
9254: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
9255: pushFromStack 1
9256: pushFromStack 33
9257: pushFromStack 2
9258: call with 1 argument
9259: pushFromStack 0
9260: dup by 3
9261: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
9262: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
9263: pushFromStack 1
9264: pushFromStack 76
9265: pushFromStack 4
9266: pushFromStack 3
9267: pushFromStack 22
9268: pushFromStack 4
9269: traceCallStarts (3 arguments)
9270: pushFromStack 80
9271: pushFromStack 3
9272: pushFromStack 75
9273: pushFromStack 75
9274: call with 2 arguments
9275: pushFromStack 3
9276: createFunction with 0 arguments capturing 0 starting at ip-8966
9277: pushFromStack 71
9278: pushFromStack 3
9279: pushFromStack 72
9280: pushFromStack 3
9281: pushFromStack 79
9282: call with 3 arguments
9283: pushConstant <replaced address e740b885c98455fd> { 0 arguments (capturing nothing) → ip-1679 }
9284: pushFromStack 73
9285: pushFromStack 2
9286: pushFromStack 72
9287: pushFromStack 3
9288: pushFromStack 81
9289: call with 3 arguments
9290: pushConstant <replaced address 5cc78f686cdd1a98> { 0 arguments (capturing nothing) → ip-3966 }
9291: pushFromStack 75
9292: pushFromStack 6
9293: pushFromStack 74
9294: pushFromStack 3
9295: pushFromStack 83
9296: call with 3 arguments
9297: traceCallEnds without return value
9298: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
9299: pushFromStack 100
9300: pushFromStack 45
9301: pushFromStack 2
9302: call with 1 argument
9303: traceCallEnds without return value
9304: traceCallEnds without return value
9305: pushFromStack 73
9306: drop
9307: pushFromStack 71
9308: drop
9309: pushFromStack 31
9310: drop
9311: pushFromStack 29
9312: drop
9313: pushFromStack 17
9314: drop
9315: pushFromStack 15
9316: drop
9317: pushFromStack 4
9318: drop
9319: pushFromStack 2
9320: drop
9321: pushFromStack 0
9322: popMultipleBelowTop 104
9323: return
# anonymous:$generated::needs:isConditionTrue:else
9324: pushFromStack 1
9325: dup by 1
9326: pushConstant inline builtinEquals
9327: pushConstant inline False
9328: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
9329: pushFromStack 2
9330: pushFromStack 5
9331: pushFromStack 3
9332: pushFromStack 3
9333: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:23:13:doesTagHaveValue:else
9334: pushFromStack 2
9335: dup by 1
9336: pushFromStack 1
9337: dup by 1
9338: pushConstant inline builtinTagWithValue
9339: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
9340: pushFromStack 1
9341: pushFromStack 4
9342: pushFromStack 6
9343: pushFromStack 3
9344: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:23:13:calleeIsTag:then
9345: pushFromStack 2
9346: dup by 1
9347: pushFromStack 1
9348: dup by 2
9349: pushConstant inline builtinTagHasValue
9350: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
9351: pushFromStack 1
9352: pushFromStack 4
9353: pushFromStack 2
9354: call with 1 argument
9355: pushFromStack 5
9356: pushFromStack 5
9357: createFunction with 0 arguments capturing 1, 0 starting at ip-9334
9358: pushConstant inline builtinIfElse
9359: pushConstant <replaced address b3ff6f56381ba1ad> { 0 arguments (capturing nothing) → ip-8703 }
9360: pushFromStack 1
9361: pushFromStack 6
9362: pushFromStack 2
9363: pushFromStack 5
9364: pushFromStack 10
9365: tailCall with 11 locals and 3 arguments
# Examples:fibonacci:23:13:hasCorrectNumberOfArguments:then
9366: pushFromStack 2
9367: dup by 2
9368: pushFromStack 1
9369: dup by 2
9370: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
9371: pushFromStack 0
9372: pushFromStack 3
9373: pushFromStack 5
9374: pushFromStack 2
9375: traceTailCall (1 argument)
9376: pushFromStack 2
9377: pushFromStack 4
9378: pushFromStack 2
9379: tailCall with 4 locals and 1 argument
# Examples:fibonacci:23:13:hasCorrectNumberOfArguments:else
9380: pushFromStack 1
9381: dup by 1
9382: pushConstant inline builtinToDebugText
9383: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
9384: pushFromStack 1
9385: pushFromStack 4
9386: pushFromStack 2
9387: call with 1 argument
9388: pushConstant inline builtinTextConcatenate
9389: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
9390: pushFromStack 1
9391: pushFromStack 1
9392: pushFromStack 4
9393: pushFromStack 6
9394: call with 2 arguments
9395: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
9396: pushFromStack 3
9397: pushFromStack 2
9398: pushFromStack 2
9399: pushFromStack 8
9400: call with 2 arguments
9401: pushFromStack 0
9402: pushFromStack 7
9403: panic
9404: popMultipleBelowTop 10
9405: return
# Examples:fibonacci:23:13:calleeIsFunction:then
9406: pushFromStack 2
9407: dup by 1
9408: pushFromStack 1
9409: dup by 2
9410: pushConstant inline builtinGetArgumentCount
9411: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
9412: pushFromStack 1
9413: pushFromStack 4
9414: pushFromStack 2
9415: call with 1 argument
9416: pushFromStack 0
9417: dup by 1
9418: pushConstant inline builtinEquals
9419: pushConstant inline 1
9420: pushFromStack 1
9421: pushFromStack 3
9422: pushFromStack 2
9423: pushFromStack 6
9424: call with 2 arguments
9425: pushFromStack 8
9426: pushFromStack 8
9427: createFunction with 0 arguments capturing 1, 0 starting at ip-9366
9428: pushFromStack 6
9429: createFunction with 0 arguments capturing 0 starting at ip-9380
9430: pushConstant inline builtinIfElse
9431: pushFromStack 0
9432: pushFromStack 7
9433: pushFromStack 5
9434: pushFromStack 4
9435: pushFromStack 14
9436: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:23:13:calleeIsTag:else
9437: pushFromStack 3
9438: dup by 1
9439: pushFromStack 2
9440: dup by 1
9441: pushFromStack 1
9442: dup by 1
9443: pushConstant inline builtinEquals
9444: pushConstant inline Function
9445: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
9446: pushFromStack 2
9447: pushFromStack 5
9448: pushFromStack 3
9449: pushFromStack 3
9450: call with 2 arguments
9451: pushFromStack 7
9452: pushFromStack 7
9453: createFunction with 0 arguments capturing 1, 0 starting at ip-9406
9454: pushConstant inline builtinIfElse
9455: pushConstant <replaced address a64d053a1f246040> { 0 arguments (capturing nothing) → ip-8710 }
9456: pushFromStack 1
9457: pushFromStack 6
9458: pushFromStack 4
9459: pushFromStack 3
9460: pushFromStack 10
9461: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:23
9462: pushFromStack 1
9463: dup by 6
9464: pushConstant <replaced address 421b7208a9f93281> Examples:fibonacci:23:5
9465: pushConstant <replaced address bb6ac1c76117b922> { 2 arguments (capturing nothing) → ip-1544 }
9466: pushConstant inline Arguments
9467: pushFromStack 2
9468: pushFromStack 2
9469: pushFromStack 6
9470: pushFromStack 3
9471: pushFromStack 3
9472: traceCallStarts (2 arguments)
9473: pushConstant inline builtinTypeOf
9474: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
9475: pushFromStack 1
9476: pushFromStack 7
9477: pushFromStack 2
9478: call with 1 argument
9479: pushConstant inline builtinEquals
9480: pushConstant inline Struct
9481: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
9482: pushFromStack 2
9483: pushFromStack 4
9484: pushFromStack 3
9485: pushFromStack 3
9486: call with 2 arguments
9487: pushFromStack 0
9488: dup by 5
9489: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
9490: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
9491: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
9492: pushFromStack 2
9493: pushFromStack 2
9494: pushFromStack 5
9495: pushFromStack 3
9496: pushFromStack 16
9497: pushFromStack 4
9498: traceCallStarts (3 arguments)
9499: pushConstant inline True
9500: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
9501: pushFromStack 8
9502: pushFromStack 6
9503: pushFromStack 3
9504: pushFromStack 3
9505: call with 2 arguments
9506: pushFromStack 0
9507: dup by 1
9508: pushFromStack 6
9509: createFunction with 0 arguments capturing 0 starting at ip-8717
9510: pushFromStack 0
9511: dup by 1
9512: pushConstant inline builtinIfElse
9513: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
9514: pushFromStack 1
9515: pushFromStack 5
9516: pushFromStack 2
9517: pushFromStack 5
9518: pushFromStack 9
9519: call with 3 arguments
9520: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
9521: pushConstant <replaced address 4c347148acd03bd0> { 0 arguments (capturing nothing) → ip-1494 }
9522: pushFromStack 4
9523: pushFromStack 3
9524: pushFromStack 3
9525: pushFromStack 3
9526: pushFromStack 12
9527: call with 3 arguments
9528: pushConstant <replaced address efda06d303e3bd5c> { 0 arguments (capturing nothing) → ip-8618 }
9529: pushFromStack 6
9530: pushFromStack 9
9531: pushFromStack 5
9532: pushFromStack 3
9533: pushFromStack 14
9534: call with 3 arguments
9535: traceCallEnds without return value
9536: pushConstant inline builtinStructHasKey
9537: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
9538: pushFromStack 1
9539: pushFromStack 30
9540: pushFromStack 27
9541: pushFromStack 3
9542: call with 2 arguments
9543: pushFromStack 0
9544: dup by 3
9545: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
9546: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
9547: pushFromStack 1
9548: pushFromStack 20
9549: pushFromStack 4
9550: pushFromStack 3
9551: pushFromStack 34
9552: pushFromStack 4
9553: traceCallStarts (3 arguments)
9554: pushFromStack 24
9555: pushFromStack 3
9556: pushFromStack 19
9557: pushFromStack 19
9558: call with 2 arguments
9559: pushFromStack 3
9560: createFunction with 0 arguments capturing 0 starting at ip-8727
9561: pushFromStack 15
9562: pushFromStack 3
9563: pushFromStack 16
9564: pushFromStack 3
9565: pushFromStack 23
9566: call with 3 arguments
9567: pushConstant <replaced address cc90c4275b46b037> { 0 arguments (capturing nothing) → ip-1501 }
9568: pushFromStack 17
9569: pushFromStack 2
9570: pushFromStack 16
9571: pushFromStack 3
9572: pushFromStack 25
9573: call with 3 arguments
9574: pushConstant <replaced address 703659b1b25a31c3> { 0 arguments (capturing nothing) → ip-8625 }
9575: pushFromStack 19
9576: pushFromStack 6
9577: pushFromStack 18
9578: pushFromStack 3
9579: pushFromStack 27
9580: call with 3 arguments
9581: traceCallEnds without return value
9582: pushConstant inline builtinStructGet
9583: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
9584: pushFromStack 1
9585: pushFromStack 43
9586: pushFromStack 40
9587: pushFromStack 3
9588: call with 2 arguments
9589: pushFromStack 0
9590: dup by 1
9591: traceCallEnds without return value
9592: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
9593: pushFromStack 39
9594: pushFromStack 2
9595: pushFromStack 2
9596: call with 1 argument
9597: pushConstant inline List
9598: pushFromStack 38
9599: pushFromStack 1
9600: pushFromStack 3
9601: pushFromStack 5
9602: call with 2 arguments
9603: pushFromStack 4
9604: createFunction with 0 arguments capturing 0 starting at ip-8753
9605: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
9606: pushFromStack 30
9607: pushFromStack 4
9608: pushFromStack 3
9609: pushFromStack 3
9610: pushFromStack 10
9611: call with 3 arguments
9612: pushFromStack 0
9613: dup by 1
9614: pushConstant inline builtinTagWithoutValue
9615: pushFromStack 0
9616: pushFromStack 2
9617: pushFromStack 10
9618: call with 1 argument
9619: pushConstant inline Match
9620: pushFromStack 46
9621: pushFromStack 2
9622: pushFromStack 2
9623: pushFromStack 13
9624: call with 2 arguments
9625: pushFromStack 4
9626: createFunction with 0 arguments capturing 0 starting at ip-8976
9627: pushConstant <replaced address 4ab6922c9ed8edc8> { 0 arguments (capturing nothing) → ip-8686 }
9628: pushFromStack 38
9629: pushFromStack 4
9630: pushFromStack 3
9631: pushFromStack 3
9632: pushFromStack 18
9633: call with 3 arguments
9634: pushFromStack 0
9635: dup by 1
9636: pushConstant <replaced address 64b8a29849c6d344> Examples:fibonacci:23:12
9637: pushConstant inline Stdout
9638: pushFromStack 1
9639: pushFromStack 59
9640: pushFromStack 63
9641: pushFromStack 3
9642: pushFromStack 3
9643: traceCallStarts (2 arguments)
9644: pushFromStack 49
9645: pushFromStack 49
9646: pushFromStack 45
9647: pushFromStack 50
9648: pushFromStack 5
9649: pushFromStack 4
9650: traceCallStarts (3 arguments)
9651: pushFromStack 41
9652: pushFromStack 45
9653: pushFromStack 42
9654: pushFromStack 45
9655: pushFromStack 49
9656: call with 3 arguments
9657: pushFromStack 42
9658: pushFromStack 1
9659: pushFromStack 41
9660: pushFromStack 41
9661: pushFromStack 50
9662: call with 3 arguments
9663: pushConstant <replaced address 1105ebe7e9d78c83> { 0 arguments (capturing nothing) → ip-8689 }
9664: pushFromStack 44
9665: pushFromStack 47
9666: pushFromStack 43
9667: pushFromStack 3
9668: pushFromStack 52
9669: call with 3 arguments
9670: traceCallEnds without return value
9671: pushFromStack 37
9672: pushFromStack 66
9673: pushFromStack 6
9674: pushFromStack 39
9675: call with 2 arguments
9676: pushFromStack 0
9677: dup by 3
9678: pushFromStack 35
9679: pushFromStack 54
9680: pushFromStack 2
9681: pushFromStack 37
9682: pushFromStack 10
9683: pushFromStack 4
9684: traceCallStarts (3 arguments)
9685: pushFromStack 58
9686: pushFromStack 1
9687: pushFromStack 53
9688: pushFromStack 53
9689: call with 2 arguments
9690: pushFromStack 1
9691: createFunction with 0 arguments capturing 0 starting at ip-9324
9692: pushFromStack 49
9693: pushFromStack 3
9694: pushFromStack 50
9695: pushFromStack 3
9696: pushFromStack 57
9697: call with 3 arguments
9698: pushFromStack 50
9699: pushFromStack 1
9700: pushFromStack 49
9701: pushFromStack 36
9702: pushFromStack 58
9703: call with 3 arguments
9704: pushConstant <replaced address 4b6f37e9fbc5d696> { 0 arguments (capturing nothing) → ip-8696 }
9705: pushFromStack 52
9706: pushFromStack 5
9707: pushFromStack 51
9708: pushFromStack 3
9709: pushFromStack 60
9710: call with 3 arguments
9711: traceCallEnds without return value
9712: pushFromStack 32
9713: pushFromStack 74
9714: pushFromStack 14
9715: pushFromStack 34
9716: call with 2 arguments
9717: pushFromStack 0
9718: dup by 2
9719: traceCallEnds without return value
9720: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
9721: pushFromStack 70
9722: pushFromStack 2
9723: pushFromStack 2
9724: call with 1 argument
9725: pushFromStack 0
9726: dup by 1
9727: pushConstant inline Tag
9728: pushFromStack 69
9729: pushFromStack 2
9730: pushFromStack 2
9731: pushFromStack 5
9732: call with 2 arguments
9733: pushFromStack 19
9734: pushFromStack 5
9735: createFunction with 0 arguments capturing 1, 0 starting at ip-9345
9736: pushFromStack 2
9737: pushFromStack 2
9738: pushFromStack 7
9739: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-9437
9740: pushFromStack 60
9741: drop
9742: pushFromStack 58
9743: drop
9744: pushFromStack 47
9745: drop
9746: pushFromStack 45
9747: drop
9748: pushFromStack 22
9749: drop
9750: pushFromStack 20
9751: drop
9752: pushFromStack 14
9753: drop
9754: pushFromStack 12
9755: drop
9756: pushFromStack 65
9757: pushFromStack 8
9758: pushFromStack 6
9759: pushFromStack 3
9760: pushFromStack 14
9761: tailCall with 86 locals and 3 arguments
# Examples:fibonacci:
9762: pushConstant <replaced address 33eb9d1ec067367e> { 1 argument (capturing nothing) → ip-9462 }
9763: popMultipleBelowTop 1
9764: return
