# VM Byte Code for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constant heap
<replaced address 017970d57aa05a94>: Core:result:mapOr:2
<replaced address 02a6ceb483dc3215>: { 0 arguments (capturing nothing) → ip-1223 }
<replaced address 04d98daa55845d31>: { 0 arguments (capturing nothing) → ip-4203 }
<replaced address 05251864681a3500>: Builtins::typeOf:5
<replaced address 055673228b46d5b7>: Core:result:getValue:2
<replaced address 056aa7001fbe6a6f>: "`tag | typeIs Tag` was not satisfied"
<replaced address 05cf6ed3a3e1ef22>: "NotUtf8"
<replaced address 05e45b91c25d1055>: Core:result:flatMap:2
<replaced address 07c1052bec280409>: "`then | typeIs Function` was not satisfied"
<replaced address 0a03aa928c1cc741>: { 2 arguments (capturing nothing) → ip-751 }
<replaced address 0a7bac382389bce1>: "ReadToEnd"
<replaced address 0d4569ee47d3c0f2>: (,)
<replaced address 0e5dcb874e6dfa57>: Core:result:map:2
<replaced address 0f59d2d5f5f1d623>: Core:result:mapOrElse:4
<replaced address 0fea7d5fa5afcc30>: Builtins::typeIs:25
<replaced address 1076a7c75d895c72>: "NotAnInteger"
<replaced address 13077cf4fbb4e55a>: Builtins::tagGetValue:5
<replaced address 1315f9b01ba30c9f>: Examples:fibonacci:fibonacci:3
<replaced address 13bae94f69b93dec>: Builtins::ifElse:11
<replaced address 13bbc38331a2c1a7>: Builtins::intSubtract:18
<replaced address 1620eaa8950d6c6e>: { 0 arguments (capturing nothing) → ip-112 }
<replaced address 18b558216c24f4d7>: { 3 arguments (capturing nothing) → ip-2055 }
<replaced address 18dc4adab2c8e8df>: "`struct | ✨.structHasKey key` was not satisfied"
<replaced address 19beba0e7e49ddcc>: Match ((,))
<replaced address 1a7a75ee2874f2d9>: { 0 arguments (capturing nothing) → ip-6003 }
<replaced address 1c69e8d7a07a9639>: Core:result:getValue:12
<replaced address 1f44a429f4531e2d>: Builtins::ifElse:14
<replaced address 1f92019f89733a43>: Builtins::structGet:12
<replaced address 216d199efe6cdff8>: Builtins::intAdd:18
<replaced address 21f03b3ca28e0378>: "You called a tag that already has a value."
<replaced address 2571413c63a1bad9>: Core:result:map:12
<replaced address 266d488b0b2596a5>: Core:result:mapOrElse:2
<replaced address 2749496cbbd972e7>: "`b | typeIs Int` was not satisfied"
<replaced address 29f9db9855e50da6>: "You called a function that expects "
<replaced address 2a8be7103eabae0e>: "Ok"
<replaced address 2ace5f047eecfe6e>: Builtins::ifElse:1
<replaced address 2cc529e2abd4637b>: " arguments with 1 arguments."
<replaced address 2db459441af47a3a>: Builtins::intParse:11
<replaced address 2ded061b072e15be>: { 0 arguments (capturing nothing) → ip-0 }
<replaced address 328a0a2dafb24069>: { 1 argument (capturing nothing) → ip-629 }
<replaced address 36eebe9168aef0b0>: "The `reason` must be a text."
<replaced address 378d23a23b1680ba>: { 1 argument (capturing nothing) → ip-5794 }
<replaced address 3d101ab695ca7c28>: { 0 arguments (capturing nothing) → ip-1230 }
<replaced address 3d7bd8edde84a365>: { 3 arguments (capturing nothing) → ip-2861 }
<replaced address 3d80be4020595727>: Core:result:mapOrElse:24
<replaced address 3eca0e872d043602>: Builtins::typeIs:19
<replaced address 3f1dcd30453d2689>: "`subtrahend | typeIs Int` was not satisfied"
<replaced address 3f287b94ceaa3f9a>: Examples:fibonacci:fibonacci:2:11:9
<replaced address 3f42d9ac6772a744>: { 0 arguments (capturing nothing) → ip-4210 }
<replaced address 3f846f87aff145a7>: { 1 argument (capturing nothing) → ip-955 }
<replaced address 41e70e1c83094f2c>: Builtins::tagGetValue:11
<replaced address 41fcadf3280286e7>: Builtins::intCompareTo:18
<replaced address 421b7208a9f93281>: Examples:fibonacci:23:5
<replaced address 422f322f2940db06>: Builtins::structGet:21
<replaced address 4302703a6cd3fa75>: Builtins::getArgumentCount:5
<replaced address 440a4a2e9e3a80bb>: Builtins::intAdd:5
<replaced address 4672d383c7509a9f>: "`then | getArgumentCount | equals 0` was not satisfied"
<replaced address 476c77b2172884e8>: Core:result:mapOr:14
<replaced address 4977ff9b06a0fe0d>: " arguments with 2 arguments."
<replaced address 4a13eec9951f9eb7>: { 0 arguments (capturing nothing) → ip-4189 }
<replaced address 4ba18d0872ae2383>: { 2 arguments (capturing nothing) → ip-4005 }
<replaced address 4d094d47213a5655>: "Equal"
<replaced address 4dd3ab030021a200>: { 2 arguments (capturing nothing) → ip-4626 }
<replaced address 4e250f8543910bba>: Builtins::intSubtract:11
<replaced address 4f1484510fb12c8c>: { 0 arguments (capturing nothing) → ip-3610 }
<replaced address 4ff42d8217d23f19>: { 2 arguments (capturing nothing) → ip-3431 }
<replaced address 51f524ae63c4af0b>: "Tag"
<replaced address 5329c003639cc079>: Examples:fibonacci:23:6:15
<replaced address 5369a8b7c5a7fa9e>: { 0 arguments (capturing nothing) → ip-3040 }
<replaced address 549433f5358d17a9>: Core:result:mapOrElse:22
<replaced address 568420a2a5125080>: "GetNextRequest"
<replaced address 56cefe855ac72448>: "`function.is1 okMapper` was not satisfied"
<replaced address 59fb4da19b618456>: Builtins::structGet:5
<replaced address 5c93ea6ba248e40c>: Builtins::intParse:5
<replaced address 5ce20169ff1b81ad>: Core:result:mapOrElse:26:5
<replaced address 5daeb472a61ff7f8>: "False"
<replaced address 5e7fed672c5c456a>: Core:result:mapOr:4
<replaced address 614077b0f92cd7f0>: "Struct"
<replaced address 642c742827aec9ac>: "File"
<replaced address 64b8a29849c6d344>: Examples:fibonacci:23:12
<replaced address 65869b7b7c4defee>: "`a | typeIs Int` was not satisfied"
<replaced address 664bab760ff04a9c>: Examples:fibonacci:fibonacci:2:9
<replaced address 6732a87eefdda5c6>: "Nothing"
<replaced address 67e62d06f2f1803b>: { 1 argument (capturing nothing) → ip-1151 }
<replaced address 6ac24dff13e30e79>: Core:result:mapOr:19
<replaced address 6b24044ae391e0b7>: "Int"
<replaced address 6bf9bb926069afea>: { 0 arguments (capturing nothing) → ip-4740 }
<replaced address 6cdccd509afc921c>: "Text"
<replaced address 6fe1fdb2563c07ad>: "Arguments"
<replaced address 7008c023be883ff4>: Builtins::ifElse:19
<replaced address 7085c524d75fa5d0>: { 1 argument (capturing nothing) → ip-5472 }
<replaced address 70a2d1d7839b24a4>: Examples:fibonacci:
<replaced address 71d566509a8a2add>: Examples:fibonacci:fibonacci:2:12
<replaced address 732f93fcbd761b57>: { 0 arguments (capturing nothing) → ip-4733 }
<replaced address 75c6f093036a613c>: Examples:fibonacci:23:6:22
<replaced address 764ffae9e06c5138>: { 1 argument (capturing nothing) → ip-2472 }
<replaced address 78116dc366ac952c>: Core:result:mapOrElse:26:value#1
<replaced address 7ab6f395e639a47b>: Core:result:flatMap:12
<replaced address 7ae5b371ff139a5d>: Examples:fibonacci:isLessThan:9
<replaced address 7b5c0ed7f870b37f>: "`conditionIsBool` was not satisfied"
<replaced address 7c65f9f539f0d0fa>: Builtins::intCompareTo:11
<replaced address 7c987e313b2f2519>: Builtins::structGet:14
<replaced address 7d04a0accae5758c>: Builtins::intSubtract:5
<replaced address 807d7368f1a4edd6>: "Builtin"
<replaced address 80f4eaa53f4876cd>: anonymous:$generated::needs
<replaced address 830a0c5f20961151>: { 0 arguments (capturing nothing) → ip-5515 }
<replaced address 834388196300f4fb>: "`function | typeIs Function` was not satisfied"
<replaced address 8383f19ea0a5e146>: Builtins::toDebugText:5
<replaced address 8462dcb40e458120>: Examples:fibonacci:fibonacci:2:11:27
<replaced address 847d3acba70de8ca>: { 0 arguments (capturing nothing) → ip-4196 }
<replaced address 859014e38a16c47f>: "HttpServer"
<replaced address 871c35d8d3bc0076>: Builtins::ifElse:41
<replaced address 877d667bc6df9870>: { 2 arguments (capturing nothing) → ip-674 }
<replaced address 8913f50da583553f>: { 1 argument (capturing nothing) → ip-115 }
<replaced address 89be9cdfac8d8517>: Examples:fibonacci:recursive:0:5
<replaced address 8b647556f2e3190d>: Examples:fibonacci:compareTo:8
<replaced address 91bca86c00256cf1>: Examples:fibonacci:recursive:5
<replaced address 91ccd4b75c545de9>: "The `condition` must be either `True` or `False`."
<replaced address 92aa0d19152d9fd3>: "`text | typeIs Text` was not satisfied"
<replaced address 939833bfd11b3d16>: Examples:fibonacci:23:6
<replaced address 9494412f3107182f>: { 1 argument (capturing nothing) → ip-5443 }
<replaced address 957eb8ad35ecdba0>: "`else | getArgumentCount | equals 0` was not satisfied"
<replaced address 95c497c9e696f807>: { 0 arguments (capturing nothing) → ip-109 }
<replaced address 96aa8acb98c6c8ca>: { 2 arguments (capturing nothing) → ip-5424 }
<replaced address 996cc5f08093ac25>: "`struct | typeIs Struct` was not satisfied"
<replaced address 9a169748478666fe>: { 0 arguments (capturing nothing) → ip-1216 }
<replaced address 9a411ed2de02bbfd>: "`else | typeIs Function` was not satisfied"
<replaced address 9a873ad1d21541fd>: Core:result:mapOrElse:26
<replaced address 9b051d74ed814f94>: "Open"
<replaced address 9b3fe08f2f022acb>: Core:result:mapOrElse:12
<replaced address 9b692663aeb40da7>: "SendResponse"
<replaced address 9beb0cb1b775254c>: "Close"
<replaced address 9c61ef87641ba65d>: "NoMatch"
<replaced address 9d267b82107cf22b>: { 2 arguments (capturing nothing) → ip-4525 }
<replaced address 9e34e4f0d7d85134>: Builtins::tagGetValue:19
<replaced address 9ee8514b45dca9c6>: Builtins::ifElse:25
<replaced address 9eed8aae34c53a02>: Builtins::tagGetValue:13
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a2f6d53168c96b64>: "GetRandomBytes"
<replaced address a84ff690d98aeae1>: Core:result:getValue:4
<replaced address aa720c25d0768a07>: Builtins::ifElse:28
<replaced address ab458b1cc1453acc>: Builtins::intCompareTo:5
<replaced address ac68896419d48592>: { 1 argument (capturing nothing) → ip-826 }
<replaced address b1086454c3fcc390>: "`is result` was not satisfied"
<replaced address b1574ef59cb20f81>: Core:result:map:4
<replaced address b635644f70e8ddd9>: Examples:fibonacci:23:13
<replaced address b66aa5e8eefa60de>: "Function"
<replaced address b7d5083e90b08e9b>: Builtins::getArgumentCount:11
<replaced address b9594ca6bd52c414>: Core:function:is1:11
<replaced address bbcfa9d6e3f11acf>: "Greater"
<replaced address bbf9e02401fdc5b5>: { 0 arguments (capturing nothing) → ip-3047 }
<replaced address bc3bca1bfe235669>: Core:function:is1:9:3
<replaced address bce25712c50048f4>: { 2 arguments (capturing nothing) → ip-5174 }
<replaced address bd6c6d954440f08f>: { 0 arguments (capturing nothing) → ip-1237 }
<replaced address bd73586132845b64>: { 0 arguments (capturing nothing) → ip-5522 }
<replaced address bd7e643bf52790f0>: "Stdout"
<replaced address bd82eea49ada30b1>: Examples:fibonacci:23:6:14:2
<replaced address be94976d83240c54>: { 3 arguments (capturing nothing) → ip-184 }
<replaced address becc28b62033cb33>: Examples:fibonacci:fibonacci:2:11:28
<replaced address bf9f2c8b15e91bab>: { 0 arguments (capturing nothing) → ip-4217 }
<replaced address bfd21c3590621a95>: Core:result:map:17:3
<replaced address c1be25f0a730ee0f>: "You can only call tags or functions."
<replaced address c4f0291b7762e5a8>: "`minuend | typeIs Int` was not satisfied"
<replaced address c55ccd7d548d3a0d>: "Tags can only be created with one value."
<replaced address c841b45ecc45bd33>: "True"
<replaced address c86ac4aab1e5d003>: Core:result:map:14
<replaced address c98e2f7a8dce9fc1>: Core:result:mapOrElse:26:value
<replaced address c9b79beae6a92a50>: { 0 arguments (capturing nothing) → ip-4182 }
<replaced address cc33b54d0d5baf10>: Core:result:flatMap:19
<replaced address cdbcb70275304920>: Examples:fibonacci:23:6:n
<replaced address cf37b22a7a5dec95>: Builtins::intAdd:11
<replaced address cf70d72fbe27a0f3>: { 0 arguments (capturing nothing) → ip-3617 }
<replaced address d486ce1647b81be6>: { 0 arguments (capturing nothing) → ip-5512 }
<replaced address d5df9e6b35678bb5>: Examples:fibonacci:fibonacci:2:11:26
<replaced address d7629bf6e871f5e8>: "Error"
<replaced address d7bd702797f58f51>: Core:result:flatMap:14
<replaced address d962951e9f7283f6>: "`function.is1 errorMapper` was not satisfied"
<replaced address dc704463e00c0b29>: { 0 arguments (capturing nothing) → ip-3 }
<replaced address df0fcdbc9cad1521>: Examples:fibonacci:23:6:7
<replaced address e128eb82cb40fae3>: Core:result:is:1
<replaced address e13459ee6346ab5d>: "List"
<replaced address e1d6728501bc6b89>: Builtins::equals:6
<replaced address e20e5f8b7e376a93>: "FileSystem"
<replaced address e260dca1501833b1>: { 2 arguments (capturing nothing) → ip-4543 }
<replaced address e4db5827e264d41a>: Builtins::ifElse:5
<replaced address e63e502aad6c0ab9>: { 3 arguments (capturing nothing) → ip-41 }
<replaced address e74159810db9029c>: { 0 arguments (capturing nothing) → ip-106 }
<replaced address e8c2dfb7598c479d>: "`tag | ✨.tagHasValue` was not satisfied"
<replaced address ea65fb20656c9a12>: Core:result:mapOr:12
<replaced address ea9a293534a31de4>: "Usage: `cargo run -- run fibonacci.candy -- <number>`"
<replaced address ec560e710ee02451>: { 0 arguments (capturing nothing) → ip-4747 }
<replaced address edabb9dda7883505>: Examples:fibonacci:fibonacci:2:11:10
<replaced address eed0e5dcad294fd3>: Core:result:flatMap:4
<replaced address ef0df736712a6b95>: "Request"
<replaced address ef5d2e500159f5dd>: "No case matched the given expression."
<replaced address f212ba8abcff978b>: Core:result:flatMap:17:2
<replaced address f2d3411e0effa6f0>: { 0 arguments (capturing nothing) → ip-4726 }
<replaced address f2debbb68786f674>: "Less"
<replaced address f451c9fdc2c5b696>: Core:result:mapOrElse:26:2
<replaced address f691b014dc4d5107>: Core:result:map:18
<replaced address f7d5b997562f3aa2>: { 0 arguments (capturing nothing) → ip-1244 }
<replaced address f7fc1c0fbd2eb7c2>: { 2 arguments (capturing nothing) → ip-552 }
<replaced address f8465d20e0be15a1>: Core:result:mapOrElse:14
<replaced address f8a743cca2278691>: Examples:fibonacci:recursive:0:0:3
<replaced address f8bed0fc3ef0a4f6>: "Stdin"
<replaced address fa8cdeec1123ecd3>: "SystemClock"
<replaced address fb36281f9aababce>: Builtins::ifElse:33
<replaced address ffea9a3777280bfd>: { 2 arguments (capturing nothing) → ip-475 }

# Instructions
# Builtins::ifElse:1:case-0:matched, Core:result:is:1:case-0:matched, Core:check:check:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, anonymous:$generated::needs:isConditionTrue:then, Builtins::isNonNegative:13:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched
   0: pushConstant inline True
   1: popMultipleBelowTop 1
   2: return
# Core:iterator:withIndex:11:1:isMatch:then, Core:text:31:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:controlFlow:31:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core::155:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:result:also:16:case-0:didNotMatch, Examples:fibonacci:21:isMatch:then, Core:struct:21:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:check:11:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:controlFlow:if:23, Core:list:42:isMatch:then, Core::43:isMatch:then, Core::21:isMatch:then, Core:tag:31:isMatch:then, Core:int:42:isMatch:then, Core::166:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Examples:fibonacci:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isReasonText:then, Core:text:42:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:type:21:isMatch:then, Core:bool:11:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:controlFlow:52:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core::32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core::104:isMatch:then, Core:function:21:isMatch:then, anonymous:$generated::needs:isConditionBool:then, Core:fixedDecimal:54:isMatch:then, Core:list:31:isMatch:then, Core:result:21:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:result:32:isMatch:then, Core:iterator:32:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:int:31:isMatch:then
   3: pushConstant inline Nothing
   4: popMultipleBelowTop 1
   5: return
# anonymous:$generated::needs:isConditionTrue:else
   6: pushFromStack 1
   7: dup by 1
   8: pushConstant inline builtinEquals
   9: pushConstant inline False
  10: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  11: pushFromStack 2
  12: pushFromStack 5
  13: pushFromStack 3
  14: pushFromStack 3
  15: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
  16: pushFromStack 1
  17: dup by 1
  18: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
  19: pushFromStack 0
  20: pushFromStack 3
  21: panic
  22: popMultipleBelowTop 3
  23: return
# anonymous:$generated::needs:isReasonText:else
  24: pushFromStack 1
  25: dup by 1
  26: pushConstant <replaced address 36eebe9168aef0b0> "The `reason` must be a text."
  27: pushFromStack 0
  28: pushFromStack 3
  29: panic
  30: popMultipleBelowTop 3
  31: return
# anonymous:$generated::needs:condition:else
  32: pushFromStack 2
  33: dup by 1
  34: pushFromStack 1
  35: dup by 1
  36: pushFromStack 2
  37: pushFromStack 2
  38: panic
  39: popMultipleBelowTop 3
  40: return
# anonymous:$generated::needs
  41: pushFromStack 3
  42: dup by 2
  43: pushFromStack 2
  44: dup by 1
  45: pushFromStack 0
  46: dup by 2
  47: pushConstant inline builtinEquals
  48: pushConstant inline True
  49: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  50: pushFromStack 2
  51: pushFromStack 7
  52: pushFromStack 3
  53: pushFromStack 3
  54: call with 2 arguments
  55: pushFromStack 7
  56: createFunction with 0 arguments capturing 0 starting at ip-6
  57: pushConstant inline builtinIfElse
  58: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
  59: pushFromStack 1
  60: pushFromStack 5
  61: pushFromStack 2
  62: pushFromStack 5
  63: pushFromStack 9
  64: call with 3 arguments
  65: pushFromStack 9
  66: createFunction with 0 arguments capturing 0 starting at ip-16
  67: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
  68: pushFromStack 5
  69: pushFromStack 4
  70: pushFromStack 2
  71: pushFromStack 4
  72: pushFromStack 13
  73: call with 3 arguments
  74: pushConstant inline builtinTypeOf
  75: pushFromStack 0
  76: pushFromStack 17
  77: pushFromStack 6
  78: call with 1 argument
  79: pushConstant inline Text
  80: pushFromStack 15
  81: pushFromStack 2
  82: pushFromStack 2
  83: pushFromStack 9
  84: call with 2 arguments
  85: pushFromStack 7
  86: createFunction with 0 arguments capturing 0 starting at ip-24
  87: pushFromStack 12
  88: pushFromStack 3
  89: pushFromStack 9
  90: pushFromStack 3
  91: pushFromStack 20
  92: call with 3 arguments
  93: pushFromStack 22
  94: pushFromStack 22
  95: createFunction with 0 arguments capturing 1, 0 starting at ip-32
  96: pushFromStack 10
  97: drop
  98: pushFromStack 3
  99: drop
 100: pushFromStack 16
 101: pushFromStack 19
 102: pushFromStack 13
 103: pushFromStack 3
 104: pushFromStack 24
 105: tailCall with 27 locals and 3 arguments
# Core:iterator:generateWithState:12:1:3:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:bool:lazyAnd:16:equals:then, Core:list:firstWhere:19:equals:then, Core:bool:is:1:equals:then, Core:iterator:where:17:2:3:equals:then, Core:bool:lazyOr:16:equals:then, Core:list:single:6:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:text:isAsciiDigit:14:equals:then, Core:list:first:6:equals:then, Builtins::not:1:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Builtins::ifElse:1:equals:then, Core:list:lastWhere:19:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Builtins::isNonNegative:13:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:bool:not:6:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Core:check:check:1:equals:then, Core:iterator:reduceLeft:16:equals:then
 106: pushConstant <replaced address 19beba0e7e49ddcc> Match ((,))
 107: popMultipleBelowTop 1
 108: return
# Builtins::isNonNegative:13:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:bool:is:1:equals:else, Core:fixedDecimal:105:equals:else, Core:int:pow:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core::21:equals:else, Core:text:42:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:list:42:equals:else, Core:iterator:where:17:2:3:equals:else, Core:bool:11:equals:else, Core:result:21:equals:else, Core::43:equals:else, Core:list:lastWhere:19:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:wrapSafe:14:1:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:iterator:take:27:1:hasKey:else, Core:int:pow:21:4:equals:else, Core:iterator:32:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:where:17:2:3:hasKey:else, Builtins::not:1:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:generate:51:1:hasKey:else, Examples:fibonacci:23:6:equals:else, Core:fixedDecimal:54:equals:else, Core:result:32:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::ifElse:1:equals:else, Core:result:is:1:equals:else, Core:list:firstWhere:19:equals:else, Examples:fibonacci:21:equals:else, Core::166:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:fixedDecimal:32:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:also:16:equals:else, Core:text:repeat:30:1:equals:else, Core:iterator:skip:26:6:8:3:equals:else, Core:bool:lazyAnd:16:equals:else, Core:iterator:21:equals:else, Core:iterator:skip:26:6:1:equals:else, Core::32:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core::104:equals:else, Core:iterator:next:6:equals:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:bool:not:6:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:withIndex:11:5:hasKey:else, Core:function:21:equals:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:31:equals:else, Core:iterator:take:27:1:equals:else, Core:list:generate:51:1:equals:else, Core:text:31:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:controlFlow:52:equals:else, Core:check:check:1:equals:else, Core:bool:lazyOr:16:equals:else, Core:int:31:equals:else, Core:list:single:6:equals:else, Core:fixedDecimal:43:equals:else, Core:list:first:6:equals:else, Core:fixedDecimal:21:equals:else, Core:int:pow:21:1:equals:else, Core:fixedDecimal:is:1:equals:else, Core::155:equals:else, Core:int:42:equals:else, Core:iterator:map:17:3:equals:else
 109: pushConstant inline NoMatch
 110: popMultipleBelowTop 1
 111: return
# Core:function:is1:10, Core:check:check:1:case-0:didNotMatch, Core:function:is2:10, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::ifElse:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, Core:function:is0:10, Core:function:is4:10, Builtins::isNonNegative:13:case-1:matched, Core:function:is5:10, Core:bool:is:1:case-0:didNotMatch, Core:bool:not:6:case-0:matched, Core:bool:lazyAnd:16:case-1:matched, Core:list:isValidIndex:19, Builtins::not:1:case-0:matched, Core:function:is3:10, Core:result:is:1:case-0:didNotMatch, Core:list:isValidInsertIndex:19
 112: pushConstant inline False
 113: popMultipleBelowTop 1
 114: return
# Builtins::getArgumentCount
 115: pushFromStack 1
 116: dup by 1
 117: pushFromStack 0
 118: dup by 2
 119: pushConstant inline builtinTypeOf
 120: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 121: pushFromStack 1
 122: pushFromStack 4
 123: pushFromStack 2
 124: call with 1 argument
 125: pushConstant inline builtinEquals
 126: pushConstant inline Function
 127: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 128: pushFromStack 2
 129: pushFromStack 4
 130: pushFromStack 3
 131: pushFromStack 3
 132: call with 2 arguments
 133: pushFromStack 0
 134: dup by 1
 135: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 136: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 137: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 138: pushFromStack 2
 139: pushFromStack 2
 140: pushFromStack 5
 141: pushFromStack 3
 142: pushFromStack 14
 143: pushFromStack 4
 144: traceCallStarts (3 arguments)
 145: pushFromStack 1
 146: pushFromStack 4
 147: pushFromStack 2
 148: pushFromStack 13
 149: pushFromStack 6
 150: call with 3 arguments
 151: traceCallEnds without return value
 152: pushConstant inline builtinGetArgumentCount
 153: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 154: pushFromStack 2
 155: drop
 156: pushFromStack 1
 157: pushFromStack 15
 158: pushFromStack 2
 159: tailCall with 15 locals and 1 argument
# Builtins::ifElse:1:isMatch:then
 160: pushFromStack 1
 161: dup by 1
 162: pushFromStack 1
 163: popMultipleBelowTop 2
 164: return
# Builtins::ifElse:1:isMatch:else
 165: pushFromStack 1
 166: dup by 1
 167: pushConstant inline builtinEquals
 168: pushConstant inline False
 169: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 170: pushFromStack 2
 171: pushFromStack 2
 172: pushFromStack 6
 173: pushFromStack 3
 174: call with 2 arguments
 175: pushConstant inline builtinIfElse
 176: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 177: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 178: pushFromStack 2
 179: pushFromStack 4
 180: pushFromStack 3
 181: pushFromStack 3
 182: pushFromStack 8
 183: tailCall with 9 locals and 3 arguments
# Builtins::ifElse
 184: pushFromStack 3
 185: dup by 3
 186: pushFromStack 2
 187: dup by 4
 188: pushFromStack 1
 189: dup by 4
 190: pushFromStack 0
 191: dup by 10
 192: pushConstant inline builtinEquals
 193: pushConstant inline True
 194: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 195: pushFromStack 2
 196: pushFromStack 2
 197: pushFromStack 8
 198: pushFromStack 3
 199: call with 2 arguments
 200: pushConstant inline builtinIfElse
 201: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 202: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 203: pushFromStack 2
 204: pushFromStack 4
 205: pushFromStack 3
 206: pushFromStack 3
 207: pushFromStack 8
 208: call with 3 arguments
 209: pushFromStack 0
 210: dup by 1
 211: pushConstant inline builtinTagWithoutValue
 212: pushFromStack 0
 213: pushFromStack 2
 214: pushFromStack 8
 215: call with 1 argument
 216: pushConstant inline Match
 217: pushFromStack 10
 218: pushFromStack 2
 219: pushFromStack 2
 220: pushFromStack 11
 221: call with 2 arguments
 222: pushFromStack 4
 223: createFunction with 0 arguments capturing 0 starting at ip-160
 224: pushFromStack 17
 225: createFunction with 0 arguments capturing 0 starting at ip-165
 226: pushFromStack 11
 227: pushFromStack 5
 228: pushFromStack 4
 229: pushFromStack 3
 230: pushFromStack 17
 231: call with 3 arguments
 232: pushFromStack 8
 233: pushFromStack 1
 234: pushFromStack 16
 235: call with 1 argument
 236: pushFromStack 17
 237: pushFromStack 1
 238: pushFromStack 9
 239: pushFromStack 18
 240: call with 2 arguments
 241: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 242: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
 243: pushFromStack 16
 244: pushFromStack 3
 245: pushFromStack 3
 246: pushFromStack 3
 247: pushFromStack 22
 248: call with 3 arguments
 249: pushFromStack 0
 250: dup by 1
 251: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 252: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 253: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 254: pushFromStack 2
 255: pushFromStack 2
 256: pushFromStack 5
 257: pushFromStack 3
 258: pushFromStack 29
 259: pushFromStack 4
 260: traceCallStarts (3 arguments)
 261: pushFromStack 1
 262: pushFromStack 4
 263: pushFromStack 2
 264: pushFromStack 28
 265: pushFromStack 6
 266: call with 3 arguments
 267: traceCallEnds without return value
 268: pushConstant inline builtinTypeOf
 269: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 270: pushFromStack 1
 271: pushFromStack 31
 272: pushFromStack 2
 273: call with 1 argument
 274: pushFromStack 0
 275: dup by 1
 276: pushConstant inline Function
 277: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 278: pushFromStack 30
 279: pushFromStack 3
 280: pushFromStack 3
 281: pushFromStack 3
 282: call with 2 arguments
 283: pushFromStack 0
 284: dup by 1
 285: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 286: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 287: pushFromStack 1
 288: pushFromStack 11
 289: pushFromStack 4
 290: pushFromStack 3
 291: pushFromStack 38
 292: pushFromStack 4
 293: traceCallStarts (3 arguments)
 294: pushFromStack 10
 295: pushFromStack 3
 296: pushFromStack 2
 297: pushFromStack 37
 298: pushFromStack 5
 299: call with 3 arguments
 300: traceCallEnds without return value
 301: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 302: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
 303: pushFromStack 1
 304: pushFromStack 1
 305: pushFromStack 41
 306: pushFromStack 2
 307: traceCallStarts (1 argument)
 308: pushFromStack 36
 309: pushFromStack 9
 310: pushFromStack 9
 311: pushFromStack 9
 312: call with 2 arguments
 313: pushFromStack 0
 314: dup by 1
 315: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 316: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 317: pushFromStack 1
 318: pushFromStack 17
 319: pushFromStack 4
 320: pushFromStack 3
 321: pushFromStack 8
 322: pushFromStack 4
 323: traceCallStarts (3 arguments)
 324: pushFromStack 16
 325: pushFromStack 3
 326: pushFromStack 2
 327: pushFromStack 7
 328: pushFromStack 5
 329: call with 3 arguments
 330: traceCallEnds without return value
 331: pushConstant inline builtinGetArgumentCount
 332: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 333: pushFromStack 1
 334: pushFromStack 46
 335: pushFromStack 2
 336: call with 1 argument
 337: traceCallEnds without return value
 338: pushConstant inline 0
 339: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 340: pushFromStack 45
 341: pushFromStack 3
 342: pushFromStack 3
 343: pushFromStack 3
 344: call with 2 arguments
 345: pushFromStack 0
 346: dup by 1
 347: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 348: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 349: pushFromStack 1
 350: pushFromStack 26
 351: pushFromStack 4
 352: pushFromStack 3
 353: pushFromStack 53
 354: pushFromStack 4
 355: traceCallStarts (3 arguments)
 356: pushFromStack 25
 357: pushFromStack 3
 358: pushFromStack 2
 359: pushFromStack 52
 360: pushFromStack 5
 361: call with 3 arguments
 362: traceCallEnds without return value
 363: pushFromStack 23
 364: pushFromStack 52
 365: pushFromStack 24
 366: call with 1 argument
 367: pushFromStack 0
 368: dup by 1
 369: pushFromStack 50
 370: pushFromStack 1
 371: pushFromStack 23
 372: pushFromStack 23
 373: call with 2 arguments
 374: pushFromStack 0
 375: dup by 1
 376: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 377: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 378: pushFromStack 1
 379: pushFromStack 31
 380: pushFromStack 4
 381: pushFromStack 3
 382: pushFromStack 58
 383: pushFromStack 4
 384: traceCallStarts (3 arguments)
 385: pushFromStack 30
 386: pushFromStack 3
 387: pushFromStack 2
 388: pushFromStack 57
 389: pushFromStack 5
 390: call with 3 arguments
 391: traceCallEnds without return value
 392: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 393: pushFromStack 0
 394: pushFromStack 20
 395: pushFromStack 59
 396: pushFromStack 2
 397: traceCallStarts (1 argument)
 398: pushFromStack 55
 399: pushFromStack 6
 400: pushFromStack 28
 401: pushFromStack 28
 402: call with 2 arguments
 403: pushFromStack 0
 404: dup by 1
 405: pushFromStack 18
 406: pushFromStack 34
 407: pushFromStack 2
 408: pushFromStack 20
 409: pushFromStack 5
 410: pushFromStack 4
 411: traceCallStarts (3 arguments)
 412: pushFromStack 33
 413: pushFromStack 1
 414: pushFromStack 19
 415: pushFromStack 4
 416: pushFromStack 22
 417: call with 3 arguments
 418: traceCallEnds without return value
 419: pushFromStack 16
 420: pushFromStack 60
 421: pushFromStack 17
 422: call with 1 argument
 423: traceCallEnds without return value
 424: pushFromStack 58
 425: pushFromStack 1
 426: pushFromStack 16
 427: pushFromStack 16
 428: call with 2 arguments
 429: pushFromStack 0
 430: dup by 1
 431: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 432: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 433: pushFromStack 1
 434: pushFromStack 39
 435: pushFromStack 4
 436: pushFromStack 3
 437: pushFromStack 66
 438: pushFromStack 4
 439: traceCallStarts (3 arguments)
 440: pushFromStack 38
 441: pushFromStack 3
 442: pushFromStack 2
 443: pushFromStack 65
 444: pushFromStack 5
 445: call with 3 arguments
 446: traceCallEnds without return value
 447: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
 448: pushFromStack 0
 449: pushFromStack 60
 450: pushFromStack 51
 451: pushFromStack 69
 452: pushFromStack 69
 453: pushFromStack 4
 454: traceTailCall (3 arguments)
 455: pushFromStack 38
 456: drop
 457: pushFromStack 29
 458: drop
 459: pushFromStack 23
 460: drop
 461: pushFromStack 14
 462: drop
 463: pushFromStack 9
 464: drop
 465: pushFromStack 6
 466: drop
 467: pushFromStack 1
 468: drop
 469: pushFromStack 59
 470: pushFromStack 50
 471: pushFromStack 68
 472: pushFromStack 68
 473: pushFromStack 4
 474: tailCall with 68 locals and 3 arguments
# Builtins::intAdd
 475: pushFromStack 2
 476: dup by 1
 477: pushFromStack 1
 478: dup by 1
 479: pushFromStack 0
 480: dup by 4
 481: pushConstant inline builtinTypeOf
 482: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 483: pushFromStack 1
 484: pushFromStack 5
 485: pushFromStack 2
 486: call with 1 argument
 487: pushConstant inline builtinEquals
 488: pushConstant inline Int
 489: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 490: pushFromStack 2
 491: pushFromStack 4
 492: pushFromStack 3
 493: pushFromStack 3
 494: call with 2 arguments
 495: pushFromStack 0
 496: dup by 1
 497: pushConstant <replaced address 440a4a2e9e3a80bb> Builtins::intAdd:5
 498: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 499: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
 500: pushFromStack 2
 501: pushFromStack 2
 502: pushFromStack 5
 503: pushFromStack 3
 504: pushFromStack 14
 505: pushFromStack 4
 506: traceCallStarts (3 arguments)
 507: pushFromStack 1
 508: pushFromStack 4
 509: pushFromStack 2
 510: pushFromStack 13
 511: pushFromStack 6
 512: call with 3 arguments
 513: traceCallEnds without return value
 514: pushFromStack 10
 515: pushFromStack 13
 516: pushFromStack 11
 517: call with 1 argument
 518: pushFromStack 8
 519: pushFromStack 1
 520: pushFromStack 9
 521: pushFromStack 9
 522: call with 2 arguments
 523: pushFromStack 0
 524: dup by 1
 525: pushConstant <replaced address cf37b22a7a5dec95> Builtins::intAdd:11
 526: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
 527: pushFromStack 1
 528: pushFromStack 7
 529: pushFromStack 4
 530: pushFromStack 3
 531: pushFromStack 19
 532: pushFromStack 4
 533: traceCallStarts (3 arguments)
 534: pushFromStack 6
 535: pushFromStack 3
 536: pushFromStack 2
 537: pushFromStack 18
 538: pushFromStack 5
 539: call with 3 arguments
 540: traceCallEnds without return value
 541: pushConstant inline builtinIntAdd
 542: pushConstant <replaced address 216d199efe6cdff8> Builtins::intAdd:18
 543: pushFromStack 7
 544: drop
 545: pushFromStack 2
 546: drop
 547: pushFromStack 1
 548: pushFromStack 21
 549: pushFromStack 21
 550: pushFromStack 3
 551: tailCall with 21 locals and 2 arguments
# Builtins::intCompareTo
 552: pushFromStack 2
 553: dup by 1
 554: pushFromStack 1
 555: dup by 1
 556: pushFromStack 0
 557: dup by 4
 558: pushConstant inline builtinTypeOf
 559: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 560: pushFromStack 1
 561: pushFromStack 5
 562: pushFromStack 2
 563: call with 1 argument
 564: pushConstant inline builtinEquals
 565: pushConstant inline Int
 566: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 567: pushFromStack 2
 568: pushFromStack 4
 569: pushFromStack 3
 570: pushFromStack 3
 571: call with 2 arguments
 572: pushFromStack 0
 573: dup by 1
 574: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
 575: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 576: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
 577: pushFromStack 2
 578: pushFromStack 2
 579: pushFromStack 5
 580: pushFromStack 3
 581: pushFromStack 14
 582: pushFromStack 4
 583: traceCallStarts (3 arguments)
 584: pushFromStack 1
 585: pushFromStack 4
 586: pushFromStack 2
 587: pushFromStack 13
 588: pushFromStack 6
 589: call with 3 arguments
 590: traceCallEnds without return value
 591: pushFromStack 10
 592: pushFromStack 13
 593: pushFromStack 11
 594: call with 1 argument
 595: pushFromStack 8
 596: pushFromStack 1
 597: pushFromStack 9
 598: pushFromStack 9
 599: call with 2 arguments
 600: pushFromStack 0
 601: dup by 1
 602: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
 603: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
 604: pushFromStack 1
 605: pushFromStack 7
 606: pushFromStack 4
 607: pushFromStack 3
 608: pushFromStack 19
 609: pushFromStack 4
 610: traceCallStarts (3 arguments)
 611: pushFromStack 6
 612: pushFromStack 3
 613: pushFromStack 2
 614: pushFromStack 18
 615: pushFromStack 5
 616: call with 3 arguments
 617: traceCallEnds without return value
 618: pushConstant inline builtinIntCompareTo
 619: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
 620: pushFromStack 7
 621: drop
 622: pushFromStack 2
 623: drop
 624: pushFromStack 1
 625: pushFromStack 21
 626: pushFromStack 21
 627: pushFromStack 3
 628: tailCall with 21 locals and 2 arguments
# Builtins::intParse
 629: pushFromStack 1
 630: dup by 1
 631: pushFromStack 0
 632: dup by 2
 633: pushConstant inline builtinTypeOf
 634: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 635: pushFromStack 1
 636: pushFromStack 4
 637: pushFromStack 2
 638: call with 1 argument
 639: pushConstant inline builtinEquals
 640: pushConstant inline Text
 641: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 642: pushFromStack 2
 643: pushFromStack 4
 644: pushFromStack 3
 645: pushFromStack 3
 646: call with 2 arguments
 647: pushFromStack 0
 648: dup by 1
 649: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
 650: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 651: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
 652: pushFromStack 2
 653: pushFromStack 2
 654: pushFromStack 5
 655: pushFromStack 3
 656: pushFromStack 14
 657: pushFromStack 4
 658: traceCallStarts (3 arguments)
 659: pushFromStack 1
 660: pushFromStack 4
 661: pushFromStack 2
 662: pushFromStack 13
 663: pushFromStack 6
 664: call with 3 arguments
 665: traceCallEnds without return value
 666: pushConstant inline builtinIntParse
 667: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
 668: pushFromStack 2
 669: drop
 670: pushFromStack 1
 671: pushFromStack 15
 672: pushFromStack 2
 673: tailCall with 15 locals and 1 argument
# Builtins::intSubtract
 674: pushFromStack 2
 675: dup by 1
 676: pushFromStack 1
 677: dup by 1
 678: pushFromStack 0
 679: dup by 4
 680: pushConstant inline builtinTypeOf
 681: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 682: pushFromStack 1
 683: pushFromStack 5
 684: pushFromStack 2
 685: call with 1 argument
 686: pushConstant inline builtinEquals
 687: pushConstant inline Int
 688: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 689: pushFromStack 2
 690: pushFromStack 4
 691: pushFromStack 3
 692: pushFromStack 3
 693: call with 2 arguments
 694: pushFromStack 0
 695: dup by 1
 696: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
 697: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 698: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
 699: pushFromStack 2
 700: pushFromStack 2
 701: pushFromStack 5
 702: pushFromStack 3
 703: pushFromStack 14
 704: pushFromStack 4
 705: traceCallStarts (3 arguments)
 706: pushFromStack 1
 707: pushFromStack 4
 708: pushFromStack 2
 709: pushFromStack 13
 710: pushFromStack 6
 711: call with 3 arguments
 712: traceCallEnds without return value
 713: pushFromStack 10
 714: pushFromStack 13
 715: pushFromStack 11
 716: call with 1 argument
 717: pushFromStack 8
 718: pushFromStack 1
 719: pushFromStack 9
 720: pushFromStack 9
 721: call with 2 arguments
 722: pushFromStack 0
 723: dup by 1
 724: pushConstant <replaced address 4e250f8543910bba> Builtins::intSubtract:11
 725: pushConstant <replaced address 3f1dcd30453d2689> "`subtrahend | typeIs Int` was not satisfied"
 726: pushFromStack 1
 727: pushFromStack 7
 728: pushFromStack 4
 729: pushFromStack 3
 730: pushFromStack 19
 731: pushFromStack 4
 732: traceCallStarts (3 arguments)
 733: pushFromStack 6
 734: pushFromStack 3
 735: pushFromStack 2
 736: pushFromStack 18
 737: pushFromStack 5
 738: call with 3 arguments
 739: traceCallEnds without return value
 740: pushConstant inline builtinIntSubtract
 741: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
 742: pushFromStack 7
 743: drop
 744: pushFromStack 2
 745: drop
 746: pushFromStack 1
 747: pushFromStack 21
 748: pushFromStack 21
 749: pushFromStack 3
 750: tailCall with 21 locals and 2 arguments
# Builtins::structGet
 751: pushFromStack 2
 752: dup by 2
 753: pushFromStack 1
 754: dup by 1
 755: pushFromStack 0
 756: dup by 4
 757: pushConstant inline builtinTypeOf
 758: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 759: pushFromStack 1
 760: pushFromStack 5
 761: pushFromStack 2
 762: call with 1 argument
 763: pushConstant inline builtinEquals
 764: pushConstant inline Struct
 765: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 766: pushFromStack 2
 767: pushFromStack 4
 768: pushFromStack 3
 769: pushFromStack 3
 770: call with 2 arguments
 771: pushFromStack 0
 772: dup by 1
 773: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
 774: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 775: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
 776: pushFromStack 2
 777: pushFromStack 2
 778: pushFromStack 5
 779: pushFromStack 3
 780: pushFromStack 14
 781: pushFromStack 4
 782: traceCallStarts (3 arguments)
 783: pushFromStack 1
 784: pushFromStack 4
 785: pushFromStack 2
 786: pushFromStack 13
 787: pushFromStack 6
 788: call with 3 arguments
 789: traceCallEnds without return value
 790: pushConstant inline builtinStructHasKey
 791: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
 792: pushFromStack 1
 793: pushFromStack 16
 794: pushFromStack 16
 795: pushFromStack 3
 796: call with 2 arguments
 797: pushFromStack 0
 798: dup by 1
 799: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
 800: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
 801: pushFromStack 1
 802: pushFromStack 8
 803: pushFromStack 4
 804: pushFromStack 3
 805: pushFromStack 20
 806: pushFromStack 4
 807: traceCallStarts (3 arguments)
 808: pushFromStack 7
 809: pushFromStack 3
 810: pushFromStack 2
 811: pushFromStack 19
 812: pushFromStack 5
 813: call with 3 arguments
 814: traceCallEnds without return value
 815: pushConstant inline builtinStructGet
 816: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
 817: pushFromStack 8
 818: drop
 819: pushFromStack 2
 820: drop
 821: pushFromStack 1
 822: pushFromStack 22
 823: pushFromStack 22
 824: pushFromStack 3
 825: tailCall with 22 locals and 2 arguments
# Builtins::tagGetValue
 826: pushFromStack 1
 827: dup by 2
 828: pushFromStack 0
 829: dup by 4
 830: pushConstant inline builtinTypeOf
 831: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 832: pushFromStack 1
 833: pushFromStack 4
 834: pushFromStack 2
 835: call with 1 argument
 836: pushConstant inline builtinEquals
 837: pushConstant inline Tag
 838: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 839: pushFromStack 2
 840: pushFromStack 4
 841: pushFromStack 3
 842: pushFromStack 3
 843: call with 2 arguments
 844: pushFromStack 0
 845: dup by 1
 846: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
 847: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 848: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
 849: pushFromStack 2
 850: pushFromStack 2
 851: pushFromStack 5
 852: pushFromStack 3
 853: pushFromStack 14
 854: pushFromStack 4
 855: traceCallStarts (3 arguments)
 856: pushFromStack 1
 857: pushFromStack 4
 858: pushFromStack 2
 859: pushFromStack 13
 860: pushFromStack 6
 861: call with 3 arguments
 862: traceCallEnds without return value
 863: pushConstant inline builtinTagHasValue
 864: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
 865: pushFromStack 1
 866: pushFromStack 15
 867: pushFromStack 2
 868: call with 1 argument
 869: pushFromStack 0
 870: dup by 1
 871: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
 872: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
 873: pushFromStack 1
 874: pushFromStack 8
 875: pushFromStack 4
 876: pushFromStack 3
 877: pushFromStack 20
 878: pushFromStack 4
 879: traceCallStarts (3 arguments)
 880: pushFromStack 7
 881: pushFromStack 3
 882: pushFromStack 2
 883: pushFromStack 19
 884: pushFromStack 5
 885: call with 3 arguments
 886: traceCallEnds without return value
 887: pushConstant inline builtinTagGetValue
 888: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
 889: pushFromStack 8
 890: drop
 891: pushFromStack 2
 892: drop
 893: pushFromStack 1
 894: pushFromStack 21
 895: pushFromStack 2
 896: tailCall with 21 locals and 1 argument
# Core:function:is1:9
 897: pushFromStack 1
 898: dup by 3
 899: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
 900: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
 901: pushFromStack 1
 902: pushFromStack 1
 903: pushFromStack 5
 904: pushFromStack 2
 905: traceCallStarts (1 argument)
 906: pushConstant inline builtinTypeOf
 907: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 908: pushFromStack 1
 909: pushFromStack 6
 910: pushFromStack 2
 911: call with 1 argument
 912: pushConstant inline builtinEquals
 913: pushConstant inline Function
 914: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 915: pushFromStack 2
 916: pushFromStack 4
 917: pushFromStack 3
 918: pushFromStack 3
 919: call with 2 arguments
 920: pushFromStack 0
 921: dup by 1
 922: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 923: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 924: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 925: pushFromStack 2
 926: pushFromStack 2
 927: pushFromStack 5
 928: pushFromStack 3
 929: pushFromStack 15
 930: pushFromStack 4
 931: traceCallStarts (3 arguments)
 932: pushFromStack 1
 933: pushFromStack 4
 934: pushFromStack 2
 935: pushFromStack 14
 936: pushFromStack 6
 937: call with 3 arguments
 938: traceCallEnds without return value
 939: pushConstant inline builtinGetArgumentCount
 940: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 941: pushFromStack 1
 942: pushFromStack 17
 943: pushFromStack 2
 944: call with 1 argument
 945: traceCallEnds without return value
 946: pushConstant inline 1
 947: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 948: pushFromStack 5
 949: drop
 950: pushFromStack 12
 951: pushFromStack 3
 952: pushFromStack 3
 953: pushFromStack 3
 954: tailCall with 20 locals and 2 arguments
# Core:function:is1
 955: pushFromStack 1
 956: dup by 1
 957: pushConstant inline builtinTypeOf
 958: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
 959: pushFromStack 1
 960: pushFromStack 4
 961: pushFromStack 2
 962: call with 1 argument
 963: pushConstant inline builtinEquals
 964: pushConstant inline Function
 965: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 966: pushFromStack 2
 967: pushFromStack 4
 968: pushFromStack 3
 969: pushFromStack 3
 970: call with 2 arguments
 971: pushFromStack 0
 972: dup by 1
 973: pushFromStack 8
 974: createFunction with 0 arguments capturing 0 starting at ip-897
 975: pushFromStack 0
 976: dup by 1
 977: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
 978: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
 979: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
 980: pushFromStack 2
 981: pushFromStack 2
 982: pushFromStack 7
 983: pushFromStack 6
 984: pushFromStack 4
 985: pushFromStack 4
 986: traceTailCall (3 arguments)
 987: pushFromStack 1
 988: pushFromStack 6
 989: pushFromStack 5
 990: pushFromStack 3
 991: pushFromStack 6
 992: tailCall with 14 locals and 3 arguments
# Core:result:is:1:equals:then
 993: pushFromStack 1
 994: dup by 1
 995: pushConstant inline builtinTagGetValue
 996: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 997: pushFromStack 1
 998: pushFromStack 4
 999: pushFromStack 2
1000: call with 1 argument
1001: pushFromStack 0
1002: createList 1
1003: pushFromStack 0
1004: createTag Match
1005: popMultipleBelowTop 6
1006: return
1007: pushFromStack 1
1008: dup by 2
1009: pushConstant inline builtinTagHasValue
1010: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1011: pushFromStack 1
1012: pushFromStack 4
1013: pushFromStack 2
1014: call with 1 argument
1015: pushConstant inline builtinEquals
1016: pushConstant inline True
1017: pushFromStack 1
1018: pushFromStack 1
1019: pushFromStack 4
1020: pushFromStack 6
1021: call with 2 arguments
1022: pushFromStack 7
1023: createFunction with 0 arguments capturing 0 starting at ip-993
1024: pushConstant inline builtinIfElse
1025: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1026: pushFromStack 1
1027: pushFromStack 5
1028: pushFromStack 4
1029: pushFromStack 3
1030: pushFromStack 12
1031: tailCall with 12 locals and 3 arguments
1032: pushFromStack 1
1033: dup by 2
1034: pushConstant inline builtinTagWithoutValue
1035: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1036: pushFromStack 1
1037: pushFromStack 4
1038: pushFromStack 2
1039: call with 1 argument
1040: pushConstant inline builtinEquals
1041: pushConstant inline Ok
1042: pushFromStack 1
1043: pushFromStack 1
1044: pushFromStack 4
1045: pushFromStack 6
1046: call with 2 arguments
1047: pushFromStack 7
1048: createFunction with 0 arguments capturing 0 starting at ip-1007
1049: pushConstant inline builtinIfElse
1050: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1051: pushFromStack 1
1052: pushFromStack 5
1053: pushFromStack 4
1054: pushFromStack 3
1055: pushFromStack 12
1056: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
1057: pushFromStack 1
1058: dup by 1
1059: pushFromStack 1
1060: popMultipleBelowTop 2
1061: return
# Core:result:is:1:equals:then
1062: pushFromStack 1
1063: dup by 1
1064: pushConstant inline builtinTagGetValue
1065: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1066: pushFromStack 1
1067: pushFromStack 4
1068: pushFromStack 2
1069: call with 1 argument
1070: pushFromStack 0
1071: createList 1
1072: pushFromStack 0
1073: createTag Match
1074: popMultipleBelowTop 6
1075: return
1076: pushFromStack 1
1077: dup by 2
1078: pushConstant inline builtinTagHasValue
1079: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1080: pushFromStack 1
1081: pushFromStack 4
1082: pushFromStack 2
1083: call with 1 argument
1084: pushConstant inline builtinEquals
1085: pushConstant inline True
1086: pushFromStack 1
1087: pushFromStack 1
1088: pushFromStack 4
1089: pushFromStack 6
1090: call with 2 arguments
1091: pushFromStack 7
1092: createFunction with 0 arguments capturing 0 starting at ip-1062
1093: pushConstant inline builtinIfElse
1094: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1095: pushFromStack 1
1096: pushFromStack 5
1097: pushFromStack 4
1098: pushFromStack 3
1099: pushFromStack 12
1100: tailCall with 12 locals and 3 arguments
1101: pushFromStack 1
1102: dup by 2
1103: pushConstant inline builtinTagWithoutValue
1104: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1105: pushFromStack 1
1106: pushFromStack 4
1107: pushFromStack 2
1108: call with 1 argument
1109: pushConstant inline builtinEquals
1110: pushConstant inline Error
1111: pushFromStack 1
1112: pushFromStack 1
1113: pushFromStack 4
1114: pushFromStack 6
1115: call with 2 arguments
1116: pushFromStack 7
1117: createFunction with 0 arguments capturing 0 starting at ip-1076
1118: pushConstant inline builtinIfElse
1119: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1120: pushFromStack 1
1121: pushFromStack 5
1122: pushFromStack 4
1123: pushFromStack 3
1124: pushFromStack 12
1125: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
1126: pushFromStack 1
1127: dup by 2
1128: pushConstant inline builtinTypeOf
1129: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1130: pushFromStack 1
1131: pushFromStack 4
1132: pushFromStack 2
1133: call with 1 argument
1134: pushConstant inline builtinEquals
1135: pushConstant inline Tag
1136: pushFromStack 1
1137: pushFromStack 1
1138: pushFromStack 4
1139: pushFromStack 6
1140: call with 2 arguments
1141: pushFromStack 7
1142: createFunction with 0 arguments capturing 0 starting at ip-1101
1143: pushConstant inline builtinIfElse
1144: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1145: pushFromStack 1
1146: pushFromStack 5
1147: pushFromStack 4
1148: pushFromStack 3
1149: pushFromStack 12
1150: tailCall with 12 locals and 3 arguments
# Core:result:is
1151: pushFromStack 1
1152: dup by 2
1153: pushConstant inline builtinTypeOf
1154: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1155: pushFromStack 1
1156: pushFromStack 4
1157: pushFromStack 2
1158: call with 1 argument
1159: pushConstant inline builtinEquals
1160: pushConstant inline Tag
1161: pushFromStack 1
1162: pushFromStack 1
1163: pushFromStack 4
1164: pushFromStack 6
1165: call with 2 arguments
1166: pushFromStack 7
1167: createFunction with 0 arguments capturing 0 starting at ip-1032
1168: pushConstant inline builtinIfElse
1169: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1170: pushFromStack 1
1171: pushFromStack 5
1172: pushFromStack 4
1173: pushFromStack 3
1174: pushFromStack 12
1175: call with 3 arguments
1176: pushFromStack 0
1177: dup by 1
1178: pushConstant inline builtinTagWithoutValue
1179: pushFromStack 0
1180: pushFromStack 2
1181: pushFromStack 12
1182: call with 1 argument
1183: pushConstant inline Match
1184: pushFromStack 10
1185: pushFromStack 2
1186: pushFromStack 2
1187: pushFromStack 15
1188: call with 2 arguments
1189: pushFromStack 4
1190: createFunction with 0 arguments capturing 0 starting at ip-1057
1191: pushFromStack 10
1192: createFunction with 0 arguments capturing 0 starting at ip-1126
1193: pushFromStack 10
1194: pushFromStack 5
1195: pushFromStack 4
1196: pushFromStack 3
1197: pushFromStack 21
1198: call with 3 arguments
1199: pushFromStack 8
1200: pushFromStack 1
1201: pushFromStack 20
1202: call with 1 argument
1203: pushFromStack 17
1204: pushFromStack 1
1205: pushFromStack 9
1206: pushFromStack 22
1207: call with 2 arguments
1208: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1209: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
1210: pushFromStack 15
1211: pushFromStack 3
1212: pushFromStack 3
1213: pushFromStack 3
1214: pushFromStack 26
1215: tailCall with 26 locals and 3 arguments
# Core:result:mapOrElse:26:2:doesTagHaveValue:then
1216: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
1217: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1218: pushFromStack 1
1219: pushFromStack 1
1220: panic
1221: popMultipleBelowTop 3
1222: return
# Core:result:mapOrElse:26:2:calleeIsFunction:else
1223: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
1224: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1225: pushFromStack 1
1226: pushFromStack 1
1227: panic
1228: popMultipleBelowTop 3
1229: return
# Core:result:mapOrElse:26:5:doesTagHaveValue:then
1230: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
1231: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1232: pushFromStack 1
1233: pushFromStack 1
1234: panic
1235: popMultipleBelowTop 3
1236: return
# Core:result:mapOrElse:26:5:calleeIsFunction:else
1237: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
1238: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1239: pushFromStack 1
1240: pushFromStack 1
1241: panic
1242: popMultipleBelowTop 3
1243: return
# Core:result:mapOrElse:26:case-1:didNotMatch
1244: pushConstant <replaced address ef5d2e500159f5dd> "No case matched the given expression."
1245: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1246: pushFromStack 1
1247: pushFromStack 1
1248: panic
1249: popMultipleBelowTop 3
1250: return
# Core:result:is:1:equals:then
1251: pushFromStack 1
1252: dup by 1
1253: pushConstant inline builtinTagGetValue
1254: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1255: pushFromStack 1
1256: pushFromStack 4
1257: pushFromStack 2
1258: call with 1 argument
1259: pushFromStack 0
1260: createList 1
1261: pushFromStack 0
1262: createTag Match
1263: popMultipleBelowTop 6
1264: return
1265: pushFromStack 1
1266: dup by 2
1267: pushConstant inline builtinTagHasValue
1268: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1269: pushFromStack 1
1270: pushFromStack 4
1271: pushFromStack 2
1272: call with 1 argument
1273: pushConstant inline builtinEquals
1274: pushConstant inline True
1275: pushFromStack 1
1276: pushFromStack 1
1277: pushFromStack 4
1278: pushFromStack 6
1279: call with 2 arguments
1280: pushFromStack 7
1281: createFunction with 0 arguments capturing 0 starting at ip-1251
1282: pushConstant inline builtinIfElse
1283: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1284: pushFromStack 1
1285: pushFromStack 5
1286: pushFromStack 4
1287: pushFromStack 3
1288: pushFromStack 12
1289: tailCall with 12 locals and 3 arguments
1290: pushFromStack 1
1291: dup by 2
1292: pushConstant inline builtinTagWithoutValue
1293: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1294: pushFromStack 1
1295: pushFromStack 4
1296: pushFromStack 2
1297: call with 1 argument
1298: pushConstant inline builtinEquals
1299: pushConstant inline Ok
1300: pushFromStack 1
1301: pushFromStack 1
1302: pushFromStack 4
1303: pushFromStack 6
1304: call with 2 arguments
1305: pushFromStack 7
1306: createFunction with 0 arguments capturing 0 starting at ip-1265
1307: pushConstant inline builtinIfElse
1308: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1309: pushFromStack 1
1310: pushFromStack 5
1311: pushFromStack 4
1312: pushFromStack 3
1313: pushFromStack 12
1314: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
1315: pushFromStack 1
1316: dup by 1
1317: pushFromStack 1
1318: popMultipleBelowTop 2
1319: return
# Core:result:is:1:equals:then
1320: pushFromStack 1
1321: dup by 1
1322: pushConstant inline builtinTagGetValue
1323: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1324: pushFromStack 1
1325: pushFromStack 4
1326: pushFromStack 2
1327: call with 1 argument
1328: pushFromStack 0
1329: createList 1
1330: pushFromStack 0
1331: createTag Match
1332: popMultipleBelowTop 6
1333: return
1334: pushFromStack 1
1335: dup by 2
1336: pushConstant inline builtinTagHasValue
1337: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1338: pushFromStack 1
1339: pushFromStack 4
1340: pushFromStack 2
1341: call with 1 argument
1342: pushConstant inline builtinEquals
1343: pushConstant inline True
1344: pushFromStack 1
1345: pushFromStack 1
1346: pushFromStack 4
1347: pushFromStack 6
1348: call with 2 arguments
1349: pushFromStack 7
1350: createFunction with 0 arguments capturing 0 starting at ip-1320
1351: pushConstant inline builtinIfElse
1352: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1353: pushFromStack 1
1354: pushFromStack 5
1355: pushFromStack 4
1356: pushFromStack 3
1357: pushFromStack 12
1358: tailCall with 12 locals and 3 arguments
1359: pushFromStack 1
1360: dup by 2
1361: pushConstant inline builtinTagWithoutValue
1362: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1363: pushFromStack 1
1364: pushFromStack 4
1365: pushFromStack 2
1366: call with 1 argument
1367: pushConstant inline builtinEquals
1368: pushConstant inline Error
1369: pushFromStack 1
1370: pushFromStack 1
1371: pushFromStack 4
1372: pushFromStack 6
1373: call with 2 arguments
1374: pushFromStack 7
1375: createFunction with 0 arguments capturing 0 starting at ip-1334
1376: pushConstant inline builtinIfElse
1377: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1378: pushFromStack 1
1379: pushFromStack 5
1380: pushFromStack 4
1381: pushFromStack 3
1382: pushFromStack 12
1383: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
1384: pushFromStack 1
1385: dup by 2
1386: pushConstant inline builtinTypeOf
1387: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1388: pushFromStack 1
1389: pushFromStack 4
1390: pushFromStack 2
1391: call with 1 argument
1392: pushConstant inline builtinEquals
1393: pushConstant inline Tag
1394: pushFromStack 1
1395: pushFromStack 1
1396: pushFromStack 4
1397: pushFromStack 6
1398: call with 2 arguments
1399: pushFromStack 7
1400: createFunction with 0 arguments capturing 0 starting at ip-1359
1401: pushConstant inline builtinIfElse
1402: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1403: pushFromStack 1
1404: pushFromStack 5
1405: pushFromStack 4
1406: pushFromStack 3
1407: pushFromStack 12
1408: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
1409: pushFromStack 1
1410: dup by 3
1411: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
1412: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
1413: pushFromStack 1
1414: pushFromStack 1
1415: pushFromStack 5
1416: pushFromStack 2
1417: traceCallStarts (1 argument)
1418: pushConstant inline builtinTypeOf
1419: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1420: pushFromStack 1
1421: pushFromStack 6
1422: pushFromStack 2
1423: call with 1 argument
1424: pushConstant inline builtinEquals
1425: pushConstant inline Function
1426: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1427: pushFromStack 2
1428: pushFromStack 4
1429: pushFromStack 3
1430: pushFromStack 3
1431: call with 2 arguments
1432: pushFromStack 0
1433: dup by 1
1434: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
1435: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1436: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1437: pushFromStack 2
1438: pushFromStack 2
1439: pushFromStack 5
1440: pushFromStack 3
1441: pushFromStack 15
1442: pushFromStack 4
1443: traceCallStarts (3 arguments)
1444: pushFromStack 1
1445: pushFromStack 4
1446: pushFromStack 2
1447: pushFromStack 14
1448: pushFromStack 6
1449: call with 3 arguments
1450: traceCallEnds without return value
1451: pushConstant inline builtinGetArgumentCount
1452: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
1453: pushFromStack 1
1454: pushFromStack 17
1455: pushFromStack 2
1456: call with 1 argument
1457: traceCallEnds without return value
1458: pushConstant inline 1
1459: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1460: pushFromStack 5
1461: drop
1462: pushFromStack 12
1463: pushFromStack 3
1464: pushFromStack 3
1465: pushFromStack 3
1466: tailCall with 20 locals and 2 arguments
1467: pushFromStack 1
1468: dup by 3
1469: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
1470: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
1471: pushFromStack 1
1472: pushFromStack 1
1473: pushFromStack 5
1474: pushFromStack 2
1475: traceCallStarts (1 argument)
1476: pushConstant inline builtinTypeOf
1477: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1478: pushFromStack 1
1479: pushFromStack 6
1480: pushFromStack 2
1481: call with 1 argument
1482: pushConstant inline builtinEquals
1483: pushConstant inline Function
1484: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1485: pushFromStack 2
1486: pushFromStack 4
1487: pushFromStack 3
1488: pushFromStack 3
1489: call with 2 arguments
1490: pushFromStack 0
1491: dup by 1
1492: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
1493: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1494: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1495: pushFromStack 2
1496: pushFromStack 2
1497: pushFromStack 5
1498: pushFromStack 3
1499: pushFromStack 15
1500: pushFromStack 4
1501: traceCallStarts (3 arguments)
1502: pushFromStack 1
1503: pushFromStack 4
1504: pushFromStack 2
1505: pushFromStack 14
1506: pushFromStack 6
1507: call with 3 arguments
1508: traceCallEnds without return value
1509: pushConstant inline builtinGetArgumentCount
1510: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
1511: pushFromStack 1
1512: pushFromStack 17
1513: pushFromStack 2
1514: call with 1 argument
1515: traceCallEnds without return value
1516: pushConstant inline 1
1517: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1518: pushFromStack 5
1519: drop
1520: pushFromStack 12
1521: pushFromStack 3
1522: pushFromStack 3
1523: pushFromStack 3
1524: tailCall with 20 locals and 2 arguments
# Core:result:mapOrElse:26:equals:then
1525: pushFromStack 1
1526: dup by 1
1527: pushConstant inline builtinTagGetValue
1528: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1529: pushFromStack 1
1530: pushFromStack 4
1531: pushFromStack 2
1532: call with 1 argument
1533: pushFromStack 0
1534: createList 1
1535: pushFromStack 0
1536: createTag Match
1537: popMultipleBelowTop 6
1538: return
1539: pushFromStack 1
1540: dup by 2
1541: pushConstant inline builtinTagHasValue
1542: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1543: pushFromStack 1
1544: pushFromStack 4
1545: pushFromStack 2
1546: call with 1 argument
1547: pushConstant inline builtinEquals
1548: pushConstant inline True
1549: pushFromStack 1
1550: pushFromStack 1
1551: pushFromStack 4
1552: pushFromStack 6
1553: call with 2 arguments
1554: pushFromStack 7
1555: createFunction with 0 arguments capturing 0 starting at ip-1525
1556: pushConstant inline builtinIfElse
1557: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1558: pushFromStack 1
1559: pushFromStack 5
1560: pushFromStack 4
1561: pushFromStack 3
1562: pushFromStack 12
1563: tailCall with 12 locals and 3 arguments
1564: pushFromStack 1
1565: dup by 2
1566: pushConstant inline builtinTagWithoutValue
1567: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1568: pushFromStack 1
1569: pushFromStack 4
1570: pushFromStack 2
1571: call with 1 argument
1572: pushConstant inline builtinEquals
1573: pushConstant inline Ok
1574: pushFromStack 1
1575: pushFromStack 1
1576: pushFromStack 4
1577: pushFromStack 6
1578: call with 2 arguments
1579: pushFromStack 7
1580: createFunction with 0 arguments capturing 0 starting at ip-1539
1581: pushConstant inline builtinIfElse
1582: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1583: pushFromStack 1
1584: pushFromStack 5
1585: pushFromStack 4
1586: pushFromStack 3
1587: pushFromStack 12
1588: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:26:2:doesTagHaveValue:else
1589: pushFromStack 2
1590: dup by 1
1591: pushFromStack 1
1592: dup by 1
1593: pushConstant inline builtinTagWithValue
1594: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1595: pushFromStack 1
1596: pushFromStack 5
1597: pushFromStack 5
1598: pushFromStack 3
1599: tailCall with 5 locals and 2 arguments
# Core:result:mapOrElse:26:2:calleeIsTag:then
1600: pushFromStack 2
1601: dup by 2
1602: pushFromStack 1
1603: dup by 1
1604: pushConstant inline builtinTagHasValue
1605: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1606: pushFromStack 1
1607: pushFromStack 5
1608: pushFromStack 2
1609: call with 1 argument
1610: pushFromStack 5
1611: pushFromStack 5
1612: createFunction with 0 arguments capturing 1, 0 starting at ip-1589
1613: pushConstant inline builtinIfElse
1614: pushConstant <replaced address 9a169748478666fe> { 0 arguments (capturing nothing) → ip-1216 }
1615: pushFromStack 1
1616: pushFromStack 6
1617: pushFromStack 2
1618: pushFromStack 5
1619: pushFromStack 10
1620: tailCall with 11 locals and 3 arguments
# Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:then
1621: pushFromStack 2
1622: dup by 2
1623: pushFromStack 1
1624: dup by 2
1625: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1626: pushFromStack 0
1627: pushFromStack 4
1628: pushFromStack 4
1629: pushFromStack 2
1630: traceTailCall (1 argument)
1631: pushFromStack 3
1632: pushFromStack 3
1633: pushFromStack 2
1634: tailCall with 4 locals and 1 argument
# Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:else
1635: pushFromStack 1
1636: dup by 1
1637: pushConstant inline builtinToDebugText
1638: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1639: pushFromStack 1
1640: pushFromStack 4
1641: pushFromStack 2
1642: call with 1 argument
1643: pushConstant inline builtinTextConcatenate
1644: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
1645: pushFromStack 1
1646: pushFromStack 1
1647: pushFromStack 4
1648: pushFromStack 6
1649: call with 2 arguments
1650: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
1651: pushFromStack 3
1652: pushFromStack 2
1653: pushFromStack 2
1654: pushFromStack 8
1655: call with 2 arguments
1656: pushFromStack 0
1657: pushFromStack 7
1658: panic
1659: popMultipleBelowTop 10
1660: return
# Core:result:mapOrElse:26:2:calleeIsFunction:then
1661: pushFromStack 2
1662: dup by 2
1663: pushFromStack 1
1664: dup by 1
1665: pushConstant inline builtinGetArgumentCount
1666: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1667: pushFromStack 1
1668: pushFromStack 5
1669: pushFromStack 2
1670: call with 1 argument
1671: pushFromStack 0
1672: dup by 1
1673: pushConstant inline builtinEquals
1674: pushConstant inline 1
1675: pushFromStack 1
1676: pushFromStack 3
1677: pushFromStack 2
1678: pushFromStack 6
1679: call with 2 arguments
1680: pushFromStack 8
1681: pushFromStack 8
1682: createFunction with 0 arguments capturing 1, 0 starting at ip-1621
1683: pushFromStack 6
1684: createFunction with 0 arguments capturing 0 starting at ip-1635
1685: pushConstant inline builtinIfElse
1686: pushFromStack 0
1687: pushFromStack 7
1688: pushFromStack 5
1689: pushFromStack 4
1690: pushFromStack 14
1691: tailCall with 15 locals and 3 arguments
# Core:result:mapOrElse:26:2:calleeIsTag:else
1692: pushFromStack 3
1693: dup by 1
1694: pushFromStack 2
1695: dup by 1
1696: pushFromStack 1
1697: dup by 1
1698: pushConstant inline builtinEquals
1699: pushConstant inline Function
1700: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1701: pushFromStack 2
1702: pushFromStack 5
1703: pushFromStack 3
1704: pushFromStack 3
1705: call with 2 arguments
1706: pushFromStack 7
1707: pushFromStack 7
1708: createFunction with 0 arguments capturing 1, 0 starting at ip-1661
1709: pushConstant inline builtinIfElse
1710: pushConstant <replaced address 02a6ceb483dc3215> { 0 arguments (capturing nothing) → ip-1223 }
1711: pushFromStack 1
1712: pushFromStack 6
1713: pushFromStack 4
1714: pushFromStack 3
1715: pushFromStack 10
1716: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:26:case-0:matched
1717: pushFromStack 2
1718: dup by 3
1719: pushFromStack 1
1720: dup by 1
1721: pushConstant inline builtinTagGetValue
1722: pushConstant <replaced address c98e2f7a8dce9fc1> Core:result:mapOrElse:26:value
1723: pushFromStack 1
1724: pushFromStack 4
1725: pushFromStack 2
1726: call with 1 argument
1727: pushConstant inline builtinListGet
1728: pushConstant inline 0
1729: pushFromStack 1
1730: pushFromStack 3
1731: pushFromStack 2
1732: pushFromStack 6
1733: call with 2 arguments
1734: pushFromStack 0
1735: dup by 1
1736: pushConstant inline builtinTypeOf
1737: pushConstant <replaced address f451c9fdc2c5b696> Core:result:mapOrElse:26:2
1738: pushFromStack 1
1739: pushFromStack 11
1740: pushFromStack 2
1741: call with 1 argument
1742: pushFromStack 0
1743: dup by 1
1744: pushConstant inline builtinEquals
1745: pushConstant inline Tag
1746: pushFromStack 1
1747: pushFromStack 3
1748: pushFromStack 2
1749: pushFromStack 6
1750: call with 2 arguments
1751: pushFromStack 14
1752: pushFromStack 7
1753: createFunction with 0 arguments capturing 1, 0 starting at ip-1600
1754: pushFromStack 2
1755: pushFromStack 2
1756: pushFromStack 8
1757: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-1692
1758: pushConstant inline builtinIfElse
1759: pushFromStack 0
1760: pushFromStack 9
1761: pushFromStack 7
1762: pushFromStack 4
1763: pushFromStack 16
1764: tailCall with 23 locals and 3 arguments
# Core:result:mapOrElse:26:equals:then
1765: pushFromStack 1
1766: dup by 1
1767: pushConstant inline builtinTagGetValue
1768: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1769: pushFromStack 1
1770: pushFromStack 4
1771: pushFromStack 2
1772: call with 1 argument
1773: pushFromStack 0
1774: createList 1
1775: pushFromStack 0
1776: createTag Match
1777: popMultipleBelowTop 6
1778: return
1779: pushFromStack 1
1780: dup by 2
1781: pushConstant inline builtinTagHasValue
1782: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1783: pushFromStack 1
1784: pushFromStack 4
1785: pushFromStack 2
1786: call with 1 argument
1787: pushConstant inline builtinEquals
1788: pushConstant inline True
1789: pushFromStack 1
1790: pushFromStack 1
1791: pushFromStack 4
1792: pushFromStack 6
1793: call with 2 arguments
1794: pushFromStack 7
1795: createFunction with 0 arguments capturing 0 starting at ip-1765
1796: pushConstant inline builtinIfElse
1797: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1798: pushFromStack 1
1799: pushFromStack 5
1800: pushFromStack 4
1801: pushFromStack 3
1802: pushFromStack 12
1803: tailCall with 12 locals and 3 arguments
1804: pushFromStack 1
1805: dup by 2
1806: pushConstant inline builtinTagWithoutValue
1807: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1808: pushFromStack 1
1809: pushFromStack 4
1810: pushFromStack 2
1811: call with 1 argument
1812: pushConstant inline builtinEquals
1813: pushConstant inline Error
1814: pushFromStack 1
1815: pushFromStack 1
1816: pushFromStack 4
1817: pushFromStack 6
1818: call with 2 arguments
1819: pushFromStack 7
1820: createFunction with 0 arguments capturing 0 starting at ip-1779
1821: pushConstant inline builtinIfElse
1822: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1823: pushFromStack 1
1824: pushFromStack 5
1825: pushFromStack 4
1826: pushFromStack 3
1827: pushFromStack 12
1828: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:26:5:doesTagHaveValue:else
1829: pushFromStack 2
1830: dup by 1
1831: pushFromStack 1
1832: dup by 1
1833: pushConstant inline builtinTagWithValue
1834: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1835: pushFromStack 1
1836: pushFromStack 5
1837: pushFromStack 5
1838: pushFromStack 3
1839: tailCall with 5 locals and 2 arguments
# Core:result:mapOrElse:26:5:calleeIsTag:then
1840: pushFromStack 2
1841: dup by 2
1842: pushFromStack 1
1843: dup by 1
1844: pushConstant inline builtinTagHasValue
1845: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1846: pushFromStack 1
1847: pushFromStack 5
1848: pushFromStack 2
1849: call with 1 argument
1850: pushFromStack 5
1851: pushFromStack 5
1852: createFunction with 0 arguments capturing 1, 0 starting at ip-1829
1853: pushConstant inline builtinIfElse
1854: pushConstant <replaced address 3d101ab695ca7c28> { 0 arguments (capturing nothing) → ip-1230 }
1855: pushFromStack 1
1856: pushFromStack 6
1857: pushFromStack 2
1858: pushFromStack 5
1859: pushFromStack 10
1860: tailCall with 11 locals and 3 arguments
# Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:then
1861: pushFromStack 2
1862: dup by 2
1863: pushFromStack 1
1864: dup by 2
1865: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1866: pushFromStack 0
1867: pushFromStack 4
1868: pushFromStack 4
1869: pushFromStack 2
1870: traceTailCall (1 argument)
1871: pushFromStack 3
1872: pushFromStack 3
1873: pushFromStack 2
1874: tailCall with 4 locals and 1 argument
# Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:else
1875: pushFromStack 1
1876: dup by 1
1877: pushConstant inline builtinToDebugText
1878: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1879: pushFromStack 1
1880: pushFromStack 4
1881: pushFromStack 2
1882: call with 1 argument
1883: pushConstant inline builtinTextConcatenate
1884: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
1885: pushFromStack 1
1886: pushFromStack 1
1887: pushFromStack 4
1888: pushFromStack 6
1889: call with 2 arguments
1890: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
1891: pushFromStack 3
1892: pushFromStack 2
1893: pushFromStack 2
1894: pushFromStack 8
1895: call with 2 arguments
1896: pushFromStack 0
1897: pushFromStack 7
1898: panic
1899: popMultipleBelowTop 10
1900: return
# Core:result:mapOrElse:26:5:calleeIsFunction:then
1901: pushFromStack 2
1902: dup by 2
1903: pushFromStack 1
1904: dup by 1
1905: pushConstant inline builtinGetArgumentCount
1906: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1907: pushFromStack 1
1908: pushFromStack 5
1909: pushFromStack 2
1910: call with 1 argument
1911: pushFromStack 0
1912: dup by 1
1913: pushConstant inline builtinEquals
1914: pushConstant inline 1
1915: pushFromStack 1
1916: pushFromStack 3
1917: pushFromStack 2
1918: pushFromStack 6
1919: call with 2 arguments
1920: pushFromStack 8
1921: pushFromStack 8
1922: createFunction with 0 arguments capturing 1, 0 starting at ip-1861
1923: pushFromStack 6
1924: createFunction with 0 arguments capturing 0 starting at ip-1875
1925: pushConstant inline builtinIfElse
1926: pushFromStack 0
1927: pushFromStack 7
1928: pushFromStack 5
1929: pushFromStack 4
1930: pushFromStack 14
1931: tailCall with 15 locals and 3 arguments
# Core:result:mapOrElse:26:5:calleeIsTag:else
1932: pushFromStack 3
1933: dup by 1
1934: pushFromStack 2
1935: dup by 1
1936: pushFromStack 1
1937: dup by 1
1938: pushConstant inline builtinEquals
1939: pushConstant inline Function
1940: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1941: pushFromStack 2
1942: pushFromStack 5
1943: pushFromStack 3
1944: pushFromStack 3
1945: call with 2 arguments
1946: pushFromStack 7
1947: pushFromStack 7
1948: createFunction with 0 arguments capturing 1, 0 starting at ip-1901
1949: pushConstant inline builtinIfElse
1950: pushConstant <replaced address bd6c6d954440f08f> { 0 arguments (capturing nothing) → ip-1237 }
1951: pushFromStack 1
1952: pushFromStack 6
1953: pushFromStack 4
1954: pushFromStack 3
1955: pushFromStack 10
1956: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:26:case-1:matched
1957: pushFromStack 2
1958: dup by 3
1959: pushFromStack 1
1960: dup by 1
1961: pushConstant inline builtinTagGetValue
1962: pushConstant <replaced address 78116dc366ac952c> Core:result:mapOrElse:26:value#1
1963: pushFromStack 1
1964: pushFromStack 4
1965: pushFromStack 2
1966: call with 1 argument
1967: pushConstant inline builtinListGet
1968: pushConstant inline 0
1969: pushFromStack 1
1970: pushFromStack 3
1971: pushFromStack 2
1972: pushFromStack 6
1973: call with 2 arguments
1974: pushFromStack 0
1975: dup by 1
1976: pushConstant inline builtinTypeOf
1977: pushConstant <replaced address 5ce20169ff1b81ad> Core:result:mapOrElse:26:5
1978: pushFromStack 1
1979: pushFromStack 11
1980: pushFromStack 2
1981: call with 1 argument
1982: pushFromStack 0
1983: dup by 1
1984: pushConstant inline builtinEquals
1985: pushConstant inline Tag
1986: pushFromStack 1
1987: pushFromStack 3
1988: pushFromStack 2
1989: pushFromStack 6
1990: call with 2 arguments
1991: pushFromStack 14
1992: pushFromStack 7
1993: createFunction with 0 arguments capturing 1, 0 starting at ip-1840
1994: pushFromStack 2
1995: pushFromStack 2
1996: pushFromStack 8
1997: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-1932
1998: pushConstant inline builtinIfElse
1999: pushFromStack 0
2000: pushFromStack 9
2001: pushFromStack 7
2002: pushFromStack 4
2003: pushFromStack 16
2004: tailCall with 23 locals and 3 arguments
# Core:result:mapOrElse:26:case-0:didNotMatch
2005: pushFromStack 2
2006: dup by 2
2007: pushFromStack 1
2008: dup by 1
2009: pushConstant inline builtinTypeOf
2010: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
2011: pushFromStack 1
2012: pushFromStack 5
2013: pushFromStack 2
2014: call with 1 argument
2015: pushConstant inline builtinEquals
2016: pushConstant inline Tag
2017: pushFromStack 1
2018: pushFromStack 1
2019: pushFromStack 4
2020: pushFromStack 6
2021: call with 2 arguments
2022: pushFromStack 8
2023: createFunction with 0 arguments capturing 0 starting at ip-1804
2024: pushConstant inline builtinIfElse
2025: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2026: pushFromStack 1
2027: pushFromStack 5
2028: pushFromStack 4
2029: pushFromStack 3
2030: pushFromStack 12
2031: call with 3 arguments
2032: pushFromStack 0
2033: dup by 1
2034: pushConstant inline builtinTagWithoutValue
2035: pushFromStack 0
2036: pushFromStack 2
2037: pushFromStack 12
2038: call with 1 argument
2039: pushConstant inline Match
2040: pushFromStack 10
2041: pushFromStack 2
2042: pushFromStack 2
2043: pushFromStack 15
2044: call with 2 arguments
2045: pushFromStack 16
2046: pushFromStack 5
2047: createFunction with 0 arguments capturing 1, 0 starting at ip-1957
2048: pushConstant <replaced address f7d5b997562f3aa2> { 0 arguments (capturing nothing) → ip-1244 }
2049: pushFromStack 10
2050: pushFromStack 5
2051: pushFromStack 3
2052: pushFromStack 3
2053: pushFromStack 21
2054: tailCall with 22 locals and 3 arguments
# Core:result:mapOrElse
2055: pushFromStack 3
2056: dup by 6
2057: pushFromStack 2
2058: dup by 3
2059: pushFromStack 1
2060: dup by 3
2061: pushFromStack 0
2062: dup by 6
2063: pushConstant <replaced address 266d488b0b2596a5> Core:result:mapOrElse:2
2064: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
2065: pushFromStack 1
2066: pushFromStack 1
2067: pushFromStack 7
2068: pushFromStack 2
2069: traceCallStarts (1 argument)
2070: pushConstant inline builtinTypeOf
2071: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2072: pushFromStack 1
2073: pushFromStack 8
2074: pushFromStack 2
2075: call with 1 argument
2076: pushConstant inline builtinEquals
2077: pushConstant inline Tag
2078: pushFromStack 1
2079: pushFromStack 1
2080: pushFromStack 4
2081: pushFromStack 6
2082: call with 2 arguments
2083: pushFromStack 11
2084: createFunction with 0 arguments capturing 0 starting at ip-1290
2085: pushConstant inline builtinIfElse
2086: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2087: pushFromStack 1
2088: pushFromStack 5
2089: pushFromStack 4
2090: pushFromStack 3
2091: pushFromStack 12
2092: call with 3 arguments
2093: pushFromStack 0
2094: dup by 1
2095: pushConstant inline builtinTagWithoutValue
2096: pushFromStack 0
2097: pushFromStack 2
2098: pushFromStack 12
2099: call with 1 argument
2100: pushConstant inline Match
2101: pushFromStack 10
2102: pushFromStack 2
2103: pushFromStack 2
2104: pushFromStack 15
2105: call with 2 arguments
2106: pushFromStack 4
2107: createFunction with 0 arguments capturing 0 starting at ip-1315
2108: pushFromStack 10
2109: createFunction with 0 arguments capturing 0 starting at ip-1384
2110: pushFromStack 10
2111: pushFromStack 5
2112: pushFromStack 4
2113: pushFromStack 3
2114: pushFromStack 21
2115: call with 3 arguments
2116: pushFromStack 8
2117: pushFromStack 1
2118: pushFromStack 20
2119: call with 1 argument
2120: pushFromStack 17
2121: pushFromStack 1
2122: pushFromStack 9
2123: pushFromStack 22
2124: call with 2 arguments
2125: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2126: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
2127: pushFromStack 15
2128: pushFromStack 3
2129: pushFromStack 3
2130: pushFromStack 3
2131: pushFromStack 26
2132: call with 3 arguments
2133: pushFromStack 0
2134: dup by 1
2135: traceCallEnds without return value
2136: pushConstant <replaced address 0f59d2d5f5f1d623> Core:result:mapOrElse:4
2137: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2138: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
2139: pushFromStack 2
2140: pushFromStack 2
2141: pushFromStack 5
2142: pushFromStack 3
2143: pushFromStack 34
2144: pushFromStack 4
2145: traceCallStarts (3 arguments)
2146: pushFromStack 1
2147: pushFromStack 4
2148: pushFromStack 2
2149: pushFromStack 33
2150: pushFromStack 6
2151: call with 3 arguments
2152: traceCallEnds without return value
2153: pushConstant <replaced address 9b3fe08f2f022acb> Core:result:mapOrElse:12
2154: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
2155: pushFromStack 1
2156: pushFromStack 1
2157: pushFromStack 37
2158: pushFromStack 2
2159: traceCallStarts (1 argument)
2160: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
2161: pushFromStack 31
2162: pushFromStack 37
2163: pushFromStack 2
2164: call with 1 argument
2165: pushConstant inline Function
2166: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2167: pushFromStack 31
2168: pushFromStack 3
2169: pushFromStack 3
2170: pushFromStack 3
2171: call with 2 arguments
2172: pushFromStack 0
2173: dup by 1
2174: pushFromStack 40
2175: createFunction with 0 arguments capturing 0 starting at ip-1409
2176: pushFromStack 0
2177: dup by 1
2178: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
2179: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
2180: pushFromStack 1
2181: pushFromStack 1
2182: pushFromStack 6
2183: pushFromStack 5
2184: pushFromStack 20
2185: pushFromStack 4
2186: traceCallStarts (3 arguments)
2187: pushFromStack 0
2188: pushFromStack 5
2189: pushFromStack 4
2190: pushFromStack 19
2191: pushFromStack 5
2192: call with 3 arguments
2193: pushFromStack 0
2194: dup by 1
2195: traceCallEnds without return value
2196: traceCallEnds without return value
2197: pushConstant <replaced address f8465d20e0be15a1> Core:result:mapOrElse:14
2198: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
2199: pushFromStack 1
2200: pushFromStack 17
2201: pushFromStack 4
2202: pushFromStack 3
2203: pushFromStack 49
2204: pushFromStack 4
2205: traceCallStarts (3 arguments)
2206: pushFromStack 16
2207: pushFromStack 3
2208: pushFromStack 2
2209: pushFromStack 48
2210: pushFromStack 5
2211: call with 3 arguments
2212: traceCallEnds without return value
2213: pushConstant <replaced address 549433f5358d17a9> Core:result:mapOrElse:22
2214: pushFromStack 0
2215: pushFromStack 15
2216: pushFromStack 50
2217: pushFromStack 2
2218: traceCallStarts (1 argument)
2219: pushFromStack 44
2220: pushFromStack 49
2221: pushFromStack 15
2222: call with 1 argument
2223: pushFromStack 42
2224: pushFromStack 1
2225: pushFromStack 14
2226: pushFromStack 14
2227: call with 2 arguments
2228: pushFromStack 0
2229: dup by 1
2230: pushFromStack 50
2231: createFunction with 0 arguments capturing 0 starting at ip-1467
2232: pushFromStack 0
2233: dup by 1
2234: pushFromStack 10
2235: pushFromStack 10
2236: pushFromStack 4
2237: pushFromStack 3
2238: pushFromStack 29
2239: pushFromStack 4
2240: traceCallStarts (3 arguments)
2241: pushFromStack 9
2242: pushFromStack 3
2243: pushFromStack 2
2244: pushFromStack 28
2245: pushFromStack 14
2246: call with 3 arguments
2247: pushFromStack 0
2248: dup by 1
2249: traceCallEnds without return value
2250: traceCallEnds without return value
2251: pushConstant <replaced address 3d80be4020595727> Core:result:mapOrElse:24
2252: pushConstant <replaced address d962951e9f7283f6> "`function.is1 errorMapper` was not satisfied"
2253: pushFromStack 1
2254: pushFromStack 26
2255: pushFromStack 4
2256: pushFromStack 3
2257: pushFromStack 58
2258: pushFromStack 4
2259: traceCallStarts (3 arguments)
2260: pushFromStack 25
2261: pushFromStack 3
2262: pushFromStack 2
2263: pushFromStack 57
2264: pushFromStack 5
2265: call with 3 arguments
2266: traceCallEnds without return value
2267: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
2268: pushFromStack 53
2269: pushFromStack 37
2270: pushFromStack 2
2271: call with 1 argument
2272: pushFromStack 51
2273: pushFromStack 51
2274: pushFromStack 2
2275: pushFromStack 4
2276: call with 2 arguments
2277: pushFromStack 38
2278: createFunction with 0 arguments capturing 0 starting at ip-1564
2279: pushFromStack 49
2280: pushFromStack 3
2281: pushFromStack 2
2282: pushFromStack 51
2283: pushFromStack 8
2284: call with 3 arguments
2285: pushFromStack 0
2286: dup by 1
2287: pushFromStack 47
2288: pushFromStack 1
2289: pushFromStack 7
2290: call with 1 argument
2291: pushFromStack 56
2292: pushFromStack 1
2293: pushFromStack 48
2294: pushFromStack 9
2295: call with 2 arguments
2296: pushFromStack 24
2297: pushFromStack 3
2298: createFunction with 0 arguments capturing 1, 0 starting at ip-1717
2299: pushFromStack 7
2300: pushFromStack 17
2301: createFunction with 0 arguments capturing 1, 0 starting at ip-2005
2302: pushFromStack 38
2303: drop
2304: pushFromStack 23
2305: drop
2306: pushFromStack 14
2307: drop
2308: pushFromStack 58
2309: pushFromStack 7
2310: pushFromStack 5
2311: pushFromStack 3
2312: pushFromStack 17
2313: tailCall with 73 locals and 3 arguments
# Core:result:is:1:equals:then
2314: pushFromStack 1
2315: dup by 1
2316: pushConstant inline builtinTagGetValue
2317: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2318: pushFromStack 1
2319: pushFromStack 4
2320: pushFromStack 2
2321: call with 1 argument
2322: pushFromStack 0
2323: createList 1
2324: pushFromStack 0
2325: createTag Match
2326: popMultipleBelowTop 6
2327: return
2328: pushFromStack 1
2329: dup by 2
2330: pushConstant inline builtinTagHasValue
2331: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2332: pushFromStack 1
2333: pushFromStack 4
2334: pushFromStack 2
2335: call with 1 argument
2336: pushConstant inline builtinEquals
2337: pushConstant inline True
2338: pushFromStack 1
2339: pushFromStack 1
2340: pushFromStack 4
2341: pushFromStack 6
2342: call with 2 arguments
2343: pushFromStack 7
2344: createFunction with 0 arguments capturing 0 starting at ip-2314
2345: pushConstant inline builtinIfElse
2346: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2347: pushFromStack 1
2348: pushFromStack 5
2349: pushFromStack 4
2350: pushFromStack 3
2351: pushFromStack 12
2352: tailCall with 12 locals and 3 arguments
2353: pushFromStack 1
2354: dup by 2
2355: pushConstant inline builtinTagWithoutValue
2356: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2357: pushFromStack 1
2358: pushFromStack 4
2359: pushFromStack 2
2360: call with 1 argument
2361: pushConstant inline builtinEquals
2362: pushConstant inline Ok
2363: pushFromStack 1
2364: pushFromStack 1
2365: pushFromStack 4
2366: pushFromStack 6
2367: call with 2 arguments
2368: pushFromStack 7
2369: createFunction with 0 arguments capturing 0 starting at ip-2328
2370: pushConstant inline builtinIfElse
2371: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2372: pushFromStack 1
2373: pushFromStack 5
2374: pushFromStack 4
2375: pushFromStack 3
2376: pushFromStack 12
2377: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
2378: pushFromStack 1
2379: dup by 1
2380: pushFromStack 1
2381: popMultipleBelowTop 2
2382: return
# Core:result:is:1:equals:then
2383: pushFromStack 1
2384: dup by 1
2385: pushConstant inline builtinTagGetValue
2386: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2387: pushFromStack 1
2388: pushFromStack 4
2389: pushFromStack 2
2390: call with 1 argument
2391: pushFromStack 0
2392: createList 1
2393: pushFromStack 0
2394: createTag Match
2395: popMultipleBelowTop 6
2396: return
2397: pushFromStack 1
2398: dup by 2
2399: pushConstant inline builtinTagHasValue
2400: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2401: pushFromStack 1
2402: pushFromStack 4
2403: pushFromStack 2
2404: call with 1 argument
2405: pushConstant inline builtinEquals
2406: pushConstant inline True
2407: pushFromStack 1
2408: pushFromStack 1
2409: pushFromStack 4
2410: pushFromStack 6
2411: call with 2 arguments
2412: pushFromStack 7
2413: createFunction with 0 arguments capturing 0 starting at ip-2383
2414: pushConstant inline builtinIfElse
2415: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2416: pushFromStack 1
2417: pushFromStack 5
2418: pushFromStack 4
2419: pushFromStack 3
2420: pushFromStack 12
2421: tailCall with 12 locals and 3 arguments
2422: pushFromStack 1
2423: dup by 2
2424: pushConstant inline builtinTagWithoutValue
2425: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2426: pushFromStack 1
2427: pushFromStack 4
2428: pushFromStack 2
2429: call with 1 argument
2430: pushConstant inline builtinEquals
2431: pushConstant inline Error
2432: pushFromStack 1
2433: pushFromStack 1
2434: pushFromStack 4
2435: pushFromStack 6
2436: call with 2 arguments
2437: pushFromStack 7
2438: createFunction with 0 arguments capturing 0 starting at ip-2397
2439: pushConstant inline builtinIfElse
2440: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2441: pushFromStack 1
2442: pushFromStack 5
2443: pushFromStack 4
2444: pushFromStack 3
2445: pushFromStack 12
2446: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
2447: pushFromStack 1
2448: dup by 2
2449: pushConstant inline builtinTypeOf
2450: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2451: pushFromStack 1
2452: pushFromStack 4
2453: pushFromStack 2
2454: call with 1 argument
2455: pushConstant inline builtinEquals
2456: pushConstant inline Tag
2457: pushFromStack 1
2458: pushFromStack 1
2459: pushFromStack 4
2460: pushFromStack 6
2461: call with 2 arguments
2462: pushFromStack 7
2463: createFunction with 0 arguments capturing 0 starting at ip-2422
2464: pushConstant inline builtinIfElse
2465: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2466: pushFromStack 1
2467: pushFromStack 5
2468: pushFromStack 4
2469: pushFromStack 3
2470: pushFromStack 12
2471: tailCall with 12 locals and 3 arguments
# Core:result:getValue
2472: pushFromStack 1
2473: dup by 7
2474: pushFromStack 0
2475: dup by 2
2476: pushConstant <replaced address 055673228b46d5b7> Core:result:getValue:2
2477: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
2478: pushFromStack 1
2479: pushFromStack 1
2480: pushFromStack 5
2481: pushFromStack 2
2482: traceCallStarts (1 argument)
2483: pushConstant inline builtinTypeOf
2484: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2485: pushFromStack 1
2486: pushFromStack 6
2487: pushFromStack 2
2488: call with 1 argument
2489: pushConstant inline builtinEquals
2490: pushConstant inline Tag
2491: pushFromStack 1
2492: pushFromStack 1
2493: pushFromStack 4
2494: pushFromStack 6
2495: call with 2 arguments
2496: pushFromStack 9
2497: createFunction with 0 arguments capturing 0 starting at ip-2353
2498: pushConstant inline builtinIfElse
2499: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2500: pushFromStack 1
2501: pushFromStack 5
2502: pushFromStack 4
2503: pushFromStack 3
2504: pushFromStack 12
2505: call with 3 arguments
2506: pushFromStack 0
2507: dup by 1
2508: pushConstant inline builtinTagWithoutValue
2509: pushFromStack 0
2510: pushFromStack 2
2511: pushFromStack 12
2512: call with 1 argument
2513: pushConstant inline Match
2514: pushFromStack 10
2515: pushFromStack 2
2516: pushFromStack 2
2517: pushFromStack 15
2518: call with 2 arguments
2519: pushFromStack 4
2520: createFunction with 0 arguments capturing 0 starting at ip-2378
2521: pushFromStack 10
2522: createFunction with 0 arguments capturing 0 starting at ip-2447
2523: pushFromStack 10
2524: pushFromStack 5
2525: pushFromStack 4
2526: pushFromStack 3
2527: pushFromStack 21
2528: call with 3 arguments
2529: pushFromStack 8
2530: pushFromStack 1
2531: pushFromStack 20
2532: call with 1 argument
2533: pushFromStack 17
2534: pushFromStack 1
2535: pushFromStack 9
2536: pushFromStack 22
2537: call with 2 arguments
2538: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2539: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
2540: pushFromStack 15
2541: pushFromStack 3
2542: pushFromStack 3
2543: pushFromStack 3
2544: pushFromStack 26
2545: call with 3 arguments
2546: pushFromStack 0
2547: dup by 1
2548: traceCallEnds without return value
2549: pushConstant <replaced address a84ff690d98aeae1> Core:result:getValue:4
2550: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2551: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
2552: pushFromStack 2
2553: pushFromStack 2
2554: pushFromStack 5
2555: pushFromStack 3
2556: pushFromStack 34
2557: pushFromStack 4
2558: traceCallStarts (3 arguments)
2559: pushFromStack 1
2560: pushFromStack 4
2561: pushFromStack 2
2562: pushFromStack 33
2563: pushFromStack 6
2564: call with 3 arguments
2565: traceCallEnds without return value
2566: pushConstant <replaced address 1c69e8d7a07a9639> Core:result:getValue:12
2567: pushConstant <replaced address ac68896419d48592> { 1 argument (capturing nothing) → ip-826 }
2568: pushFromStack 1
2569: pushFromStack 1
2570: pushFromStack 15
2571: pushFromStack 2
2572: traceTailCall (1 argument)
2573: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2574: pushFromStack 31
2575: pushFromStack 15
2576: pushFromStack 2
2577: call with 1 argument
2578: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2579: pushFromStack 30
2580: pushFromStack 2
2581: pushFromStack 31
2582: pushFromStack 3
2583: call with 2 arguments
2584: pushFromStack 0
2585: dup by 1
2586: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
2587: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
2588: pushFromStack 1
2589: pushFromStack 11
2590: pushFromStack 4
2591: pushFromStack 3
2592: pushFromStack 11
2593: pushFromStack 4
2594: traceCallStarts (3 arguments)
2595: pushFromStack 10
2596: pushFromStack 3
2597: pushFromStack 2
2598: pushFromStack 10
2599: pushFromStack 5
2600: call with 3 arguments
2601: traceCallEnds without return value
2602: pushConstant inline builtinTagHasValue
2603: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
2604: pushFromStack 1
2605: pushFromStack 23
2606: pushFromStack 2
2607: call with 1 argument
2608: pushFromStack 0
2609: dup by 1
2610: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
2611: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
2612: pushFromStack 1
2613: pushFromStack 17
2614: pushFromStack 4
2615: pushFromStack 3
2616: pushFromStack 17
2617: pushFromStack 4
2618: traceCallStarts (3 arguments)
2619: pushFromStack 16
2620: pushFromStack 3
2621: pushFromStack 2
2622: pushFromStack 16
2623: pushFromStack 5
2624: call with 3 arguments
2625: traceCallEnds without return value
2626: pushConstant inline builtinTagGetValue
2627: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
2628: pushFromStack 17
2629: drop
2630: pushFromStack 8
2631: drop
2632: pushFromStack 2
2633: drop
2634: pushFromStack 1
2635: pushFromStack 29
2636: pushFromStack 2
2637: tailCall with 50 locals and 1 argument
# Core:result:is:1:equals:then
2638: pushFromStack 1
2639: dup by 1
2640: pushConstant inline builtinTagGetValue
2641: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2642: pushFromStack 1
2643: pushFromStack 4
2644: pushFromStack 2
2645: call with 1 argument
2646: pushFromStack 0
2647: createList 1
2648: pushFromStack 0
2649: createTag Match
2650: popMultipleBelowTop 6
2651: return
2652: pushFromStack 1
2653: dup by 2
2654: pushConstant inline builtinTagHasValue
2655: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2656: pushFromStack 1
2657: pushFromStack 4
2658: pushFromStack 2
2659: call with 1 argument
2660: pushConstant inline builtinEquals
2661: pushConstant inline True
2662: pushFromStack 1
2663: pushFromStack 1
2664: pushFromStack 4
2665: pushFromStack 6
2666: call with 2 arguments
2667: pushFromStack 7
2668: createFunction with 0 arguments capturing 0 starting at ip-2638
2669: pushConstant inline builtinIfElse
2670: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2671: pushFromStack 1
2672: pushFromStack 5
2673: pushFromStack 4
2674: pushFromStack 3
2675: pushFromStack 12
2676: tailCall with 12 locals and 3 arguments
2677: pushFromStack 1
2678: dup by 2
2679: pushConstant inline builtinTagWithoutValue
2680: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2681: pushFromStack 1
2682: pushFromStack 4
2683: pushFromStack 2
2684: call with 1 argument
2685: pushConstant inline builtinEquals
2686: pushConstant inline Ok
2687: pushFromStack 1
2688: pushFromStack 1
2689: pushFromStack 4
2690: pushFromStack 6
2691: call with 2 arguments
2692: pushFromStack 7
2693: createFunction with 0 arguments capturing 0 starting at ip-2652
2694: pushConstant inline builtinIfElse
2695: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2696: pushFromStack 1
2697: pushFromStack 5
2698: pushFromStack 4
2699: pushFromStack 3
2700: pushFromStack 12
2701: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
2702: pushFromStack 1
2703: dup by 1
2704: pushFromStack 1
2705: popMultipleBelowTop 2
2706: return
# Core:result:is:1:equals:then
2707: pushFromStack 1
2708: dup by 1
2709: pushConstant inline builtinTagGetValue
2710: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2711: pushFromStack 1
2712: pushFromStack 4
2713: pushFromStack 2
2714: call with 1 argument
2715: pushFromStack 0
2716: createList 1
2717: pushFromStack 0
2718: createTag Match
2719: popMultipleBelowTop 6
2720: return
2721: pushFromStack 1
2722: dup by 2
2723: pushConstant inline builtinTagHasValue
2724: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2725: pushFromStack 1
2726: pushFromStack 4
2727: pushFromStack 2
2728: call with 1 argument
2729: pushConstant inline builtinEquals
2730: pushConstant inline True
2731: pushFromStack 1
2732: pushFromStack 1
2733: pushFromStack 4
2734: pushFromStack 6
2735: call with 2 arguments
2736: pushFromStack 7
2737: createFunction with 0 arguments capturing 0 starting at ip-2707
2738: pushConstant inline builtinIfElse
2739: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2740: pushFromStack 1
2741: pushFromStack 5
2742: pushFromStack 4
2743: pushFromStack 3
2744: pushFromStack 12
2745: tailCall with 12 locals and 3 arguments
2746: pushFromStack 1
2747: dup by 2
2748: pushConstant inline builtinTagWithoutValue
2749: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2750: pushFromStack 1
2751: pushFromStack 4
2752: pushFromStack 2
2753: call with 1 argument
2754: pushConstant inline builtinEquals
2755: pushConstant inline Error
2756: pushFromStack 1
2757: pushFromStack 1
2758: pushFromStack 4
2759: pushFromStack 6
2760: call with 2 arguments
2761: pushFromStack 7
2762: createFunction with 0 arguments capturing 0 starting at ip-2721
2763: pushConstant inline builtinIfElse
2764: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2765: pushFromStack 1
2766: pushFromStack 5
2767: pushFromStack 4
2768: pushFromStack 3
2769: pushFromStack 12
2770: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
2771: pushFromStack 1
2772: dup by 2
2773: pushConstant inline builtinTypeOf
2774: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2775: pushFromStack 1
2776: pushFromStack 4
2777: pushFromStack 2
2778: call with 1 argument
2779: pushConstant inline builtinEquals
2780: pushConstant inline Tag
2781: pushFromStack 1
2782: pushFromStack 1
2783: pushFromStack 4
2784: pushFromStack 6
2785: call with 2 arguments
2786: pushFromStack 7
2787: createFunction with 0 arguments capturing 0 starting at ip-2746
2788: pushConstant inline builtinIfElse
2789: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2790: pushFromStack 1
2791: pushFromStack 5
2792: pushFromStack 4
2793: pushFromStack 3
2794: pushFromStack 12
2795: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
2796: pushFromStack 1
2797: dup by 3
2798: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
2799: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
2800: pushFromStack 1
2801: pushFromStack 1
2802: pushFromStack 5
2803: pushFromStack 2
2804: traceCallStarts (1 argument)
2805: pushConstant inline builtinTypeOf
2806: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2807: pushFromStack 1
2808: pushFromStack 6
2809: pushFromStack 2
2810: call with 1 argument
2811: pushConstant inline builtinEquals
2812: pushConstant inline Function
2813: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2814: pushFromStack 2
2815: pushFromStack 4
2816: pushFromStack 3
2817: pushFromStack 3
2818: call with 2 arguments
2819: pushFromStack 0
2820: dup by 1
2821: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
2822: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2823: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
2824: pushFromStack 2
2825: pushFromStack 2
2826: pushFromStack 5
2827: pushFromStack 3
2828: pushFromStack 15
2829: pushFromStack 4
2830: traceCallStarts (3 arguments)
2831: pushFromStack 1
2832: pushFromStack 4
2833: pushFromStack 2
2834: pushFromStack 14
2835: pushFromStack 6
2836: call with 3 arguments
2837: traceCallEnds without return value
2838: pushConstant inline builtinGetArgumentCount
2839: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
2840: pushFromStack 1
2841: pushFromStack 17
2842: pushFromStack 2
2843: call with 1 argument
2844: traceCallEnds without return value
2845: pushConstant inline 1
2846: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2847: pushFromStack 5
2848: drop
2849: pushFromStack 12
2850: pushFromStack 3
2851: pushFromStack 3
2852: pushFromStack 3
2853: tailCall with 20 locals and 2 arguments
# Core:result:mapOr:18
2854: pushFromStack 2
2855: dup by 1
2856: pushFromStack 1
2857: drop
2858: pushFromStack 2
2859: popMultipleBelowTop 3
2860: return
# Core:result:mapOr
2861: pushFromStack 3
2862: dup by 5
2863: pushFromStack 2
2864: dup by 4
2865: pushFromStack 0
2866: dup by 4
2867: pushConstant <replaced address 017970d57aa05a94> Core:result:mapOr:2
2868: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
2869: pushFromStack 1
2870: pushFromStack 1
2871: pushFromStack 7
2872: pushFromStack 2
2873: traceCallStarts (1 argument)
2874: pushConstant inline builtinTypeOf
2875: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
2876: pushFromStack 1
2877: pushFromStack 8
2878: pushFromStack 2
2879: call with 1 argument
2880: pushConstant inline builtinEquals
2881: pushConstant inline Tag
2882: pushFromStack 1
2883: pushFromStack 1
2884: pushFromStack 4
2885: pushFromStack 6
2886: call with 2 arguments
2887: pushFromStack 11
2888: createFunction with 0 arguments capturing 0 starting at ip-2677
2889: pushConstant inline builtinIfElse
2890: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2891: pushFromStack 1
2892: pushFromStack 5
2893: pushFromStack 4
2894: pushFromStack 3
2895: pushFromStack 12
2896: call with 3 arguments
2897: pushFromStack 0
2898: dup by 1
2899: pushConstant inline builtinTagWithoutValue
2900: pushFromStack 0
2901: pushFromStack 2
2902: pushFromStack 12
2903: call with 1 argument
2904: pushConstant inline Match
2905: pushFromStack 10
2906: pushFromStack 2
2907: pushFromStack 2
2908: pushFromStack 15
2909: call with 2 arguments
2910: pushFromStack 4
2911: createFunction with 0 arguments capturing 0 starting at ip-2702
2912: pushFromStack 10
2913: createFunction with 0 arguments capturing 0 starting at ip-2771
2914: pushFromStack 10
2915: pushFromStack 5
2916: pushFromStack 4
2917: pushFromStack 3
2918: pushFromStack 21
2919: call with 3 arguments
2920: pushFromStack 8
2921: pushFromStack 1
2922: pushFromStack 20
2923: call with 1 argument
2924: pushFromStack 17
2925: pushFromStack 1
2926: pushFromStack 9
2927: pushFromStack 22
2928: call with 2 arguments
2929: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2930: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
2931: pushFromStack 15
2932: pushFromStack 3
2933: pushFromStack 3
2934: pushFromStack 3
2935: pushFromStack 26
2936: call with 3 arguments
2937: pushFromStack 0
2938: dup by 1
2939: traceCallEnds without return value
2940: pushConstant <replaced address 5e7fed672c5c456a> Core:result:mapOr:4
2941: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2942: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
2943: pushFromStack 2
2944: pushFromStack 2
2945: pushFromStack 5
2946: pushFromStack 3
2947: pushFromStack 34
2948: pushFromStack 4
2949: traceCallStarts (3 arguments)
2950: pushFromStack 1
2951: pushFromStack 4
2952: pushFromStack 2
2953: pushFromStack 33
2954: pushFromStack 6
2955: call with 3 arguments
2956: traceCallEnds without return value
2957: pushConstant <replaced address ea65fb20656c9a12> Core:result:mapOr:12
2958: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
2959: pushFromStack 1
2960: pushFromStack 1
2961: pushFromStack 37
2962: pushFromStack 2
2963: traceCallStarts (1 argument)
2964: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
2965: pushFromStack 31
2966: pushFromStack 37
2967: pushFromStack 2
2968: call with 1 argument
2969: pushConstant inline Function
2970: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2971: pushFromStack 31
2972: pushFromStack 3
2973: pushFromStack 3
2974: pushFromStack 3
2975: call with 2 arguments
2976: pushFromStack 0
2977: dup by 1
2978: pushFromStack 40
2979: createFunction with 0 arguments capturing 0 starting at ip-2796
2980: pushFromStack 0
2981: dup by 1
2982: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
2983: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
2984: pushFromStack 1
2985: pushFromStack 1
2986: pushFromStack 6
2987: pushFromStack 5
2988: pushFromStack 20
2989: pushFromStack 4
2990: traceCallStarts (3 arguments)
2991: pushFromStack 0
2992: pushFromStack 5
2993: pushFromStack 4
2994: pushFromStack 19
2995: pushFromStack 5
2996: call with 3 arguments
2997: pushFromStack 0
2998: dup by 1
2999: traceCallEnds without return value
3000: traceCallEnds without return value
3001: pushConstant <replaced address 476c77b2172884e8> Core:result:mapOr:14
3002: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
3003: pushFromStack 1
3004: pushFromStack 17
3005: pushFromStack 4
3006: pushFromStack 3
3007: pushFromStack 49
3008: pushFromStack 4
3009: traceCallStarts (3 arguments)
3010: pushFromStack 16
3011: pushFromStack 3
3012: pushFromStack 2
3013: pushFromStack 48
3014: pushFromStack 5
3015: call with 3 arguments
3016: traceCallEnds without return value
3017: pushFromStack 47
3018: createFunction with 1 argument capturing 0 starting at ip-2854
3019: pushFromStack 0
3020: dup by 1
3021: pushConstant <replaced address 6ac24dff13e30e79> Core:result:mapOr:19
3022: pushConstant <replaced address 18b558216c24f4d7> { 3 arguments (capturing nothing) → ip-2055 }
3023: pushFromStack 1
3024: pushFromStack 1
3025: pushFromStack 32
3026: pushFromStack 14
3027: pushFromStack 6
3028: pushFromStack 4
3029: traceTailCall (3 arguments)
3030: pushFromStack 19
3031: drop
3032: pushFromStack 4
3033: drop
3034: pushFromStack 0
3035: pushFromStack 31
3036: pushFromStack 13
3037: pushFromStack 5
3038: pushFromStack 5
3039: tailCall with 54 locals and 3 arguments
# Core:result:flatMap:17:2:doesTagHaveValue:then
3040: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
3041: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3042: pushFromStack 1
3043: pushFromStack 1
3044: panic
3045: popMultipleBelowTop 3
3046: return
# Core:result:flatMap:17:2:calleeIsFunction:else
3047: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
3048: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3049: pushFromStack 1
3050: pushFromStack 1
3051: panic
3052: popMultipleBelowTop 3
3053: return
# Core:result:is:1:equals:then
3054: pushFromStack 1
3055: dup by 1
3056: pushConstant inline builtinTagGetValue
3057: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3058: pushFromStack 1
3059: pushFromStack 4
3060: pushFromStack 2
3061: call with 1 argument
3062: pushFromStack 0
3063: createList 1
3064: pushFromStack 0
3065: createTag Match
3066: popMultipleBelowTop 6
3067: return
3068: pushFromStack 1
3069: dup by 2
3070: pushConstant inline builtinTagHasValue
3071: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3072: pushFromStack 1
3073: pushFromStack 4
3074: pushFromStack 2
3075: call with 1 argument
3076: pushConstant inline builtinEquals
3077: pushConstant inline True
3078: pushFromStack 1
3079: pushFromStack 1
3080: pushFromStack 4
3081: pushFromStack 6
3082: call with 2 arguments
3083: pushFromStack 7
3084: createFunction with 0 arguments capturing 0 starting at ip-3054
3085: pushConstant inline builtinIfElse
3086: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3087: pushFromStack 1
3088: pushFromStack 5
3089: pushFromStack 4
3090: pushFromStack 3
3091: pushFromStack 12
3092: tailCall with 12 locals and 3 arguments
3093: pushFromStack 1
3094: dup by 2
3095: pushConstant inline builtinTagWithoutValue
3096: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3097: pushFromStack 1
3098: pushFromStack 4
3099: pushFromStack 2
3100: call with 1 argument
3101: pushConstant inline builtinEquals
3102: pushConstant inline Ok
3103: pushFromStack 1
3104: pushFromStack 1
3105: pushFromStack 4
3106: pushFromStack 6
3107: call with 2 arguments
3108: pushFromStack 7
3109: createFunction with 0 arguments capturing 0 starting at ip-3068
3110: pushConstant inline builtinIfElse
3111: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3112: pushFromStack 1
3113: pushFromStack 5
3114: pushFromStack 4
3115: pushFromStack 3
3116: pushFromStack 12
3117: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
3118: pushFromStack 1
3119: dup by 1
3120: pushFromStack 1
3121: popMultipleBelowTop 2
3122: return
# Core:result:is:1:equals:then
3123: pushFromStack 1
3124: dup by 1
3125: pushConstant inline builtinTagGetValue
3126: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3127: pushFromStack 1
3128: pushFromStack 4
3129: pushFromStack 2
3130: call with 1 argument
3131: pushFromStack 0
3132: createList 1
3133: pushFromStack 0
3134: createTag Match
3135: popMultipleBelowTop 6
3136: return
3137: pushFromStack 1
3138: dup by 2
3139: pushConstant inline builtinTagHasValue
3140: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3141: pushFromStack 1
3142: pushFromStack 4
3143: pushFromStack 2
3144: call with 1 argument
3145: pushConstant inline builtinEquals
3146: pushConstant inline True
3147: pushFromStack 1
3148: pushFromStack 1
3149: pushFromStack 4
3150: pushFromStack 6
3151: call with 2 arguments
3152: pushFromStack 7
3153: createFunction with 0 arguments capturing 0 starting at ip-3123
3154: pushConstant inline builtinIfElse
3155: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3156: pushFromStack 1
3157: pushFromStack 5
3158: pushFromStack 4
3159: pushFromStack 3
3160: pushFromStack 12
3161: tailCall with 12 locals and 3 arguments
3162: pushFromStack 1
3163: dup by 2
3164: pushConstant inline builtinTagWithoutValue
3165: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3166: pushFromStack 1
3167: pushFromStack 4
3168: pushFromStack 2
3169: call with 1 argument
3170: pushConstant inline builtinEquals
3171: pushConstant inline Error
3172: pushFromStack 1
3173: pushFromStack 1
3174: pushFromStack 4
3175: pushFromStack 6
3176: call with 2 arguments
3177: pushFromStack 7
3178: createFunction with 0 arguments capturing 0 starting at ip-3137
3179: pushConstant inline builtinIfElse
3180: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3181: pushFromStack 1
3182: pushFromStack 5
3183: pushFromStack 4
3184: pushFromStack 3
3185: pushFromStack 12
3186: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
3187: pushFromStack 1
3188: dup by 2
3189: pushConstant inline builtinTypeOf
3190: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3191: pushFromStack 1
3192: pushFromStack 4
3193: pushFromStack 2
3194: call with 1 argument
3195: pushConstant inline builtinEquals
3196: pushConstant inline Tag
3197: pushFromStack 1
3198: pushFromStack 1
3199: pushFromStack 4
3200: pushFromStack 6
3201: call with 2 arguments
3202: pushFromStack 7
3203: createFunction with 0 arguments capturing 0 starting at ip-3162
3204: pushConstant inline builtinIfElse
3205: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3206: pushFromStack 1
3207: pushFromStack 5
3208: pushFromStack 4
3209: pushFromStack 3
3210: pushFromStack 12
3211: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
3212: pushFromStack 1
3213: dup by 3
3214: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
3215: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
3216: pushFromStack 1
3217: pushFromStack 1
3218: pushFromStack 5
3219: pushFromStack 2
3220: traceCallStarts (1 argument)
3221: pushConstant inline builtinTypeOf
3222: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
3223: pushFromStack 1
3224: pushFromStack 6
3225: pushFromStack 2
3226: call with 1 argument
3227: pushConstant inline builtinEquals
3228: pushConstant inline Function
3229: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
3230: pushFromStack 2
3231: pushFromStack 4
3232: pushFromStack 3
3233: pushFromStack 3
3234: call with 2 arguments
3235: pushFromStack 0
3236: dup by 1
3237: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
3238: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3239: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
3240: pushFromStack 2
3241: pushFromStack 2
3242: pushFromStack 5
3243: pushFromStack 3
3244: pushFromStack 15
3245: pushFromStack 4
3246: traceCallStarts (3 arguments)
3247: pushFromStack 1
3248: pushFromStack 4
3249: pushFromStack 2
3250: pushFromStack 14
3251: pushFromStack 6
3252: call with 3 arguments
3253: traceCallEnds without return value
3254: pushConstant inline builtinGetArgumentCount
3255: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
3256: pushFromStack 1
3257: pushFromStack 17
3258: pushFromStack 2
3259: call with 1 argument
3260: traceCallEnds without return value
3261: pushConstant inline 1
3262: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3263: pushFromStack 5
3264: drop
3265: pushFromStack 12
3266: pushFromStack 3
3267: pushFromStack 3
3268: pushFromStack 3
3269: tailCall with 20 locals and 2 arguments
# Core:result:flatMap:17:2:doesTagHaveValue:else
3270: pushFromStack 2
3271: dup by 1
3272: pushFromStack 1
3273: dup by 1
3274: pushConstant inline builtinTagWithValue
3275: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3276: pushFromStack 1
3277: pushFromStack 5
3278: pushFromStack 5
3279: pushFromStack 3
3280: tailCall with 5 locals and 2 arguments
# Core:result:flatMap:17:2:calleeIsTag:then
3281: pushFromStack 2
3282: dup by 2
3283: pushFromStack 1
3284: dup by 1
3285: pushConstant inline builtinTagHasValue
3286: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3287: pushFromStack 1
3288: pushFromStack 5
3289: pushFromStack 2
3290: call with 1 argument
3291: pushFromStack 5
3292: pushFromStack 5
3293: createFunction with 0 arguments capturing 1, 0 starting at ip-3270
3294: pushConstant inline builtinIfElse
3295: pushConstant <replaced address 5369a8b7c5a7fa9e> { 0 arguments (capturing nothing) → ip-3040 }
3296: pushFromStack 1
3297: pushFromStack 6
3298: pushFromStack 2
3299: pushFromStack 5
3300: pushFromStack 10
3301: tailCall with 11 locals and 3 arguments
# Core:result:flatMap:17:2:hasCorrectNumberOfArguments:then
3302: pushFromStack 2
3303: dup by 2
3304: pushFromStack 1
3305: dup by 2
3306: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3307: pushFromStack 0
3308: pushFromStack 4
3309: pushFromStack 4
3310: pushFromStack 2
3311: traceTailCall (1 argument)
3312: pushFromStack 3
3313: pushFromStack 3
3314: pushFromStack 2
3315: tailCall with 4 locals and 1 argument
# Core:result:flatMap:17:2:hasCorrectNumberOfArguments:else
3316: pushFromStack 1
3317: dup by 1
3318: pushConstant inline builtinToDebugText
3319: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3320: pushFromStack 1
3321: pushFromStack 4
3322: pushFromStack 2
3323: call with 1 argument
3324: pushConstant inline builtinTextConcatenate
3325: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
3326: pushFromStack 1
3327: pushFromStack 1
3328: pushFromStack 4
3329: pushFromStack 6
3330: call with 2 arguments
3331: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
3332: pushFromStack 3
3333: pushFromStack 2
3334: pushFromStack 2
3335: pushFromStack 8
3336: call with 2 arguments
3337: pushFromStack 0
3338: pushFromStack 7
3339: panic
3340: popMultipleBelowTop 10
3341: return
# Core:result:flatMap:17:2:calleeIsFunction:then
3342: pushFromStack 2
3343: dup by 2
3344: pushFromStack 1
3345: dup by 1
3346: pushConstant inline builtinGetArgumentCount
3347: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3348: pushFromStack 1
3349: pushFromStack 5
3350: pushFromStack 2
3351: call with 1 argument
3352: pushFromStack 0
3353: dup by 1
3354: pushConstant inline builtinEquals
3355: pushConstant inline 1
3356: pushFromStack 1
3357: pushFromStack 3
3358: pushFromStack 2
3359: pushFromStack 6
3360: call with 2 arguments
3361: pushFromStack 8
3362: pushFromStack 8
3363: createFunction with 0 arguments capturing 1, 0 starting at ip-3302
3364: pushFromStack 6
3365: createFunction with 0 arguments capturing 0 starting at ip-3316
3366: pushConstant inline builtinIfElse
3367: pushFromStack 0
3368: pushFromStack 7
3369: pushFromStack 5
3370: pushFromStack 4
3371: pushFromStack 14
3372: tailCall with 15 locals and 3 arguments
# Core:result:flatMap:17:2:calleeIsTag:else
3373: pushFromStack 3
3374: dup by 1
3375: pushFromStack 2
3376: dup by 1
3377: pushFromStack 1
3378: dup by 1
3379: pushConstant inline builtinEquals
3380: pushConstant inline Function
3381: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3382: pushFromStack 2
3383: pushFromStack 5
3384: pushFromStack 3
3385: pushFromStack 3
3386: call with 2 arguments
3387: pushFromStack 7
3388: pushFromStack 7
3389: createFunction with 0 arguments capturing 1, 0 starting at ip-3342
3390: pushConstant inline builtinIfElse
3391: pushConstant <replaced address bbf9e02401fdc5b5> { 0 arguments (capturing nothing) → ip-3047 }
3392: pushFromStack 1
3393: pushFromStack 6
3394: pushFromStack 4
3395: pushFromStack 3
3396: pushFromStack 10
3397: tailCall with 13 locals and 3 arguments
# Core:result:flatMap:17
3398: pushFromStack 2
3399: dup by 3
3400: pushFromStack 1
3401: dup by 1
3402: pushConstant inline builtinTypeOf
3403: pushConstant <replaced address f212ba8abcff978b> Core:result:flatMap:17:2
3404: pushFromStack 1
3405: pushFromStack 5
3406: pushFromStack 2
3407: call with 1 argument
3408: pushFromStack 0
3409: dup by 1
3410: pushConstant inline builtinEquals
3411: pushConstant inline Tag
3412: pushFromStack 1
3413: pushFromStack 3
3414: pushFromStack 2
3415: pushFromStack 6
3416: call with 2 arguments
3417: pushFromStack 8
3418: pushFromStack 8
3419: createFunction with 0 arguments capturing 1, 0 starting at ip-3281
3420: pushFromStack 2
3421: pushFromStack 2
3422: pushFromStack 8
3423: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-3373
3424: pushConstant inline builtinIfElse
3425: pushFromStack 0
3426: pushFromStack 9
3427: pushFromStack 7
3428: pushFromStack 4
3429: pushFromStack 16
3430: tailCall with 17 locals and 3 arguments
# Core:result:flatMap
3431: pushFromStack 2
3432: dup by 7
3433: pushFromStack 1
3434: dup by 3
3435: pushFromStack 0
3436: dup by 4
3437: pushConstant <replaced address 05e45b91c25d1055> Core:result:flatMap:2
3438: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
3439: pushFromStack 1
3440: pushFromStack 1
3441: pushFromStack 6
3442: pushFromStack 2
3443: traceCallStarts (1 argument)
3444: pushConstant inline builtinTypeOf
3445: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3446: pushFromStack 1
3447: pushFromStack 7
3448: pushFromStack 2
3449: call with 1 argument
3450: pushConstant inline builtinEquals
3451: pushConstant inline Tag
3452: pushFromStack 1
3453: pushFromStack 1
3454: pushFromStack 4
3455: pushFromStack 6
3456: call with 2 arguments
3457: pushFromStack 10
3458: createFunction with 0 arguments capturing 0 starting at ip-3093
3459: pushConstant inline builtinIfElse
3460: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3461: pushFromStack 1
3462: pushFromStack 5
3463: pushFromStack 4
3464: pushFromStack 3
3465: pushFromStack 12
3466: call with 3 arguments
3467: pushFromStack 0
3468: dup by 1
3469: pushConstant inline builtinTagWithoutValue
3470: pushFromStack 0
3471: pushFromStack 2
3472: pushFromStack 12
3473: call with 1 argument
3474: pushConstant inline Match
3475: pushFromStack 10
3476: pushFromStack 2
3477: pushFromStack 2
3478: pushFromStack 15
3479: call with 2 arguments
3480: pushFromStack 4
3481: createFunction with 0 arguments capturing 0 starting at ip-3118
3482: pushFromStack 10
3483: createFunction with 0 arguments capturing 0 starting at ip-3187
3484: pushFromStack 10
3485: pushFromStack 5
3486: pushFromStack 4
3487: pushFromStack 3
3488: pushFromStack 21
3489: call with 3 arguments
3490: pushFromStack 8
3491: pushFromStack 1
3492: pushFromStack 20
3493: call with 1 argument
3494: pushFromStack 17
3495: pushFromStack 1
3496: pushFromStack 9
3497: pushFromStack 22
3498: call with 2 arguments
3499: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
3500: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
3501: pushFromStack 15
3502: pushFromStack 3
3503: pushFromStack 3
3504: pushFromStack 3
3505: pushFromStack 26
3506: call with 3 arguments
3507: pushFromStack 0
3508: dup by 1
3509: traceCallEnds without return value
3510: pushConstant <replaced address eed0e5dcad294fd3> Core:result:flatMap:4
3511: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3512: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
3513: pushFromStack 2
3514: pushFromStack 2
3515: pushFromStack 5
3516: pushFromStack 3
3517: pushFromStack 34
3518: pushFromStack 4
3519: traceCallStarts (3 arguments)
3520: pushFromStack 1
3521: pushFromStack 4
3522: pushFromStack 2
3523: pushFromStack 33
3524: pushFromStack 6
3525: call with 3 arguments
3526: traceCallEnds without return value
3527: pushConstant <replaced address 7ab6f395e639a47b> Core:result:flatMap:12
3528: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
3529: pushFromStack 1
3530: pushFromStack 1
3531: pushFromStack 36
3532: pushFromStack 2
3533: traceCallStarts (1 argument)
3534: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
3535: pushFromStack 31
3536: pushFromStack 36
3537: pushFromStack 2
3538: call with 1 argument
3539: pushConstant inline Function
3540: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3541: pushFromStack 31
3542: pushFromStack 3
3543: pushFromStack 3
3544: pushFromStack 3
3545: call with 2 arguments
3546: pushFromStack 0
3547: dup by 1
3548: pushFromStack 39
3549: createFunction with 0 arguments capturing 0 starting at ip-3212
3550: pushFromStack 0
3551: dup by 1
3552: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
3553: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
3554: pushFromStack 1
3555: pushFromStack 1
3556: pushFromStack 6
3557: pushFromStack 5
3558: pushFromStack 20
3559: pushFromStack 4
3560: traceCallStarts (3 arguments)
3561: pushFromStack 0
3562: pushFromStack 5
3563: pushFromStack 4
3564: pushFromStack 19
3565: pushFromStack 5
3566: call with 3 arguments
3567: pushFromStack 0
3568: dup by 1
3569: traceCallEnds without return value
3570: traceCallEnds without return value
3571: pushConstant <replaced address d7bd702797f58f51> Core:result:flatMap:14
3572: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
3573: pushFromStack 1
3574: pushFromStack 17
3575: pushFromStack 4
3576: pushFromStack 3
3577: pushFromStack 49
3578: pushFromStack 4
3579: traceCallStarts (3 arguments)
3580: pushFromStack 16
3581: pushFromStack 3
3582: pushFromStack 2
3583: pushFromStack 48
3584: pushFromStack 5
3585: call with 3 arguments
3586: traceCallEnds without return value
3587: pushFromStack 7
3588: createFunction with 1 argument capturing 0 starting at ip-3398
3589: pushFromStack 0
3590: dup by 1
3591: pushConstant <replaced address cc33b54d0d5baf10> Core:result:flatMap:19
3592: pushConstant <replaced address 3d7bd8edde84a365> { 3 arguments (capturing nothing) → ip-2861 }
3593: pushFromStack 1
3594: pushFromStack 1
3595: pushFromStack 32
3596: pushFromStack 5
3597: pushFromStack 1
3598: pushFromStack 4
3599: traceTailCall (3 arguments)
3600: pushFromStack 19
3601: drop
3602: pushFromStack 4
3603: drop
3604: pushFromStack 0
3605: pushFromStack 31
3606: pushFromStack 4
3607: pushFromStack 1
3608: pushFromStack 5
3609: tailCall with 53 locals and 3 arguments
# Core:result:map:17:3:doesTagHaveValue:then
3610: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
3611: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3612: pushFromStack 1
3613: pushFromStack 1
3614: panic
3615: popMultipleBelowTop 3
3616: return
# Core:result:map:17:3:calleeIsFunction:else
3617: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
3618: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3619: pushFromStack 1
3620: pushFromStack 1
3621: panic
3622: popMultipleBelowTop 3
3623: return
# Core:result:is:1:equals:then
3624: pushFromStack 1
3625: dup by 1
3626: pushConstant inline builtinTagGetValue
3627: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3628: pushFromStack 1
3629: pushFromStack 4
3630: pushFromStack 2
3631: call with 1 argument
3632: pushFromStack 0
3633: createList 1
3634: pushFromStack 0
3635: createTag Match
3636: popMultipleBelowTop 6
3637: return
3638: pushFromStack 1
3639: dup by 2
3640: pushConstant inline builtinTagHasValue
3641: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3642: pushFromStack 1
3643: pushFromStack 4
3644: pushFromStack 2
3645: call with 1 argument
3646: pushConstant inline builtinEquals
3647: pushConstant inline True
3648: pushFromStack 1
3649: pushFromStack 1
3650: pushFromStack 4
3651: pushFromStack 6
3652: call with 2 arguments
3653: pushFromStack 7
3654: createFunction with 0 arguments capturing 0 starting at ip-3624
3655: pushConstant inline builtinIfElse
3656: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3657: pushFromStack 1
3658: pushFromStack 5
3659: pushFromStack 4
3660: pushFromStack 3
3661: pushFromStack 12
3662: tailCall with 12 locals and 3 arguments
3663: pushFromStack 1
3664: dup by 2
3665: pushConstant inline builtinTagWithoutValue
3666: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3667: pushFromStack 1
3668: pushFromStack 4
3669: pushFromStack 2
3670: call with 1 argument
3671: pushConstant inline builtinEquals
3672: pushConstant inline Ok
3673: pushFromStack 1
3674: pushFromStack 1
3675: pushFromStack 4
3676: pushFromStack 6
3677: call with 2 arguments
3678: pushFromStack 7
3679: createFunction with 0 arguments capturing 0 starting at ip-3638
3680: pushConstant inline builtinIfElse
3681: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3682: pushFromStack 1
3683: pushFromStack 5
3684: pushFromStack 4
3685: pushFromStack 3
3686: pushFromStack 12
3687: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:then
3688: pushFromStack 1
3689: dup by 1
3690: pushFromStack 1
3691: popMultipleBelowTop 2
3692: return
# Core:result:is:1:equals:then
3693: pushFromStack 1
3694: dup by 1
3695: pushConstant inline builtinTagGetValue
3696: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3697: pushFromStack 1
3698: pushFromStack 4
3699: pushFromStack 2
3700: call with 1 argument
3701: pushFromStack 0
3702: createList 1
3703: pushFromStack 0
3704: createTag Match
3705: popMultipleBelowTop 6
3706: return
3707: pushFromStack 1
3708: dup by 2
3709: pushConstant inline builtinTagHasValue
3710: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3711: pushFromStack 1
3712: pushFromStack 4
3713: pushFromStack 2
3714: call with 1 argument
3715: pushConstant inline builtinEquals
3716: pushConstant inline True
3717: pushFromStack 1
3718: pushFromStack 1
3719: pushFromStack 4
3720: pushFromStack 6
3721: call with 2 arguments
3722: pushFromStack 7
3723: createFunction with 0 arguments capturing 0 starting at ip-3693
3724: pushConstant inline builtinIfElse
3725: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3726: pushFromStack 1
3727: pushFromStack 5
3728: pushFromStack 4
3729: pushFromStack 3
3730: pushFromStack 12
3731: tailCall with 12 locals and 3 arguments
3732: pushFromStack 1
3733: dup by 2
3734: pushConstant inline builtinTagWithoutValue
3735: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3736: pushFromStack 1
3737: pushFromStack 4
3738: pushFromStack 2
3739: call with 1 argument
3740: pushConstant inline builtinEquals
3741: pushConstant inline Error
3742: pushFromStack 1
3743: pushFromStack 1
3744: pushFromStack 4
3745: pushFromStack 6
3746: call with 2 arguments
3747: pushFromStack 7
3748: createFunction with 0 arguments capturing 0 starting at ip-3707
3749: pushConstant inline builtinIfElse
3750: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3751: pushFromStack 1
3752: pushFromStack 5
3753: pushFromStack 4
3754: pushFromStack 3
3755: pushFromStack 12
3756: tailCall with 12 locals and 3 arguments
# Core:result:is:1:isMatch:else
3757: pushFromStack 1
3758: dup by 2
3759: pushConstant inline builtinTypeOf
3760: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
3761: pushFromStack 1
3762: pushFromStack 4
3763: pushFromStack 2
3764: call with 1 argument
3765: pushConstant inline builtinEquals
3766: pushConstant inline Tag
3767: pushFromStack 1
3768: pushFromStack 1
3769: pushFromStack 4
3770: pushFromStack 6
3771: call with 2 arguments
3772: pushFromStack 7
3773: createFunction with 0 arguments capturing 0 starting at ip-3732
3774: pushConstant inline builtinIfElse
3775: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3776: pushFromStack 1
3777: pushFromStack 5
3778: pushFromStack 4
3779: pushFromStack 3
3780: pushFromStack 12
3781: tailCall with 12 locals and 3 arguments
# Core:function:is1:9
3782: pushFromStack 1
3783: dup by 3
3784: pushConstant <replaced address bc3bca1bfe235669> Core:function:is1:9:3
3785: pushConstant <replaced address 8913f50da583553f> { 1 argument (capturing nothing) → ip-115 }
3786: pushFromStack 1
3787: pushFromStack 1
3788: pushFromStack 5
3789: pushFromStack 2
3790: traceCallStarts (1 argument)
3791: pushConstant inline builtinTypeOf
3792: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
3793: pushFromStack 1
3794: pushFromStack 6
3795: pushFromStack 2
3796: call with 1 argument
3797: pushConstant inline builtinEquals
3798: pushConstant inline Function
3799: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
3800: pushFromStack 2
3801: pushFromStack 4
3802: pushFromStack 3
3803: pushFromStack 3
3804: call with 2 arguments
3805: pushFromStack 0
3806: dup by 1
3807: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
3808: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
3809: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
3810: pushFromStack 2
3811: pushFromStack 2
3812: pushFromStack 5
3813: pushFromStack 3
3814: pushFromStack 15
3815: pushFromStack 4
3816: traceCallStarts (3 arguments)
3817: pushFromStack 1
3818: pushFromStack 4
3819: pushFromStack 2
3820: pushFromStack 14
3821: pushFromStack 6
3822: call with 3 arguments
3823: traceCallEnds without return value
3824: pushConstant inline builtinGetArgumentCount
3825: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
3826: pushFromStack 1
3827: pushFromStack 17
3828: pushFromStack 2
3829: call with 1 argument
3830: traceCallEnds without return value
3831: pushConstant inline 1
3832: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3833: pushFromStack 5
3834: drop
3835: pushFromStack 12
3836: pushFromStack 3
3837: pushFromStack 3
3838: pushFromStack 3
3839: tailCall with 20 locals and 2 arguments
# Core:result:map:17:3:doesTagHaveValue:else
3840: pushFromStack 2
3841: dup by 1
3842: pushFromStack 1
3843: dup by 1
3844: pushConstant inline builtinTagWithValue
3845: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3846: pushFromStack 1
3847: pushFromStack 5
3848: pushFromStack 5
3849: pushFromStack 3
3850: tailCall with 5 locals and 2 arguments
# Core:result:map:17:3:calleeIsTag:then
3851: pushFromStack 2
3852: dup by 2
3853: pushFromStack 1
3854: dup by 1
3855: pushConstant inline builtinTagHasValue
3856: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3857: pushFromStack 1
3858: pushFromStack 5
3859: pushFromStack 2
3860: call with 1 argument
3861: pushFromStack 5
3862: pushFromStack 5
3863: createFunction with 0 arguments capturing 1, 0 starting at ip-3840
3864: pushConstant inline builtinIfElse
3865: pushConstant <replaced address 4f1484510fb12c8c> { 0 arguments (capturing nothing) → ip-3610 }
3866: pushFromStack 1
3867: pushFromStack 6
3868: pushFromStack 2
3869: pushFromStack 5
3870: pushFromStack 10
3871: tailCall with 11 locals and 3 arguments
# Core:result:map:17:3:hasCorrectNumberOfArguments:then
3872: pushFromStack 2
3873: dup by 2
3874: pushFromStack 1
3875: dup by 2
3876: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3877: pushFromStack 0
3878: pushFromStack 4
3879: pushFromStack 4
3880: pushFromStack 2
3881: traceTailCall (1 argument)
3882: pushFromStack 3
3883: pushFromStack 3
3884: pushFromStack 2
3885: tailCall with 4 locals and 1 argument
# Core:result:map:17:3:hasCorrectNumberOfArguments:else
3886: pushFromStack 1
3887: dup by 1
3888: pushConstant inline builtinToDebugText
3889: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3890: pushFromStack 1
3891: pushFromStack 4
3892: pushFromStack 2
3893: call with 1 argument
3894: pushConstant inline builtinTextConcatenate
3895: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
3896: pushFromStack 1
3897: pushFromStack 1
3898: pushFromStack 4
3899: pushFromStack 6
3900: call with 2 arguments
3901: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
3902: pushFromStack 3
3903: pushFromStack 2
3904: pushFromStack 2
3905: pushFromStack 8
3906: call with 2 arguments
3907: pushFromStack 0
3908: pushFromStack 7
3909: panic
3910: popMultipleBelowTop 10
3911: return
# Core:result:map:17:3:calleeIsFunction:then
3912: pushFromStack 2
3913: dup by 2
3914: pushFromStack 1
3915: dup by 1
3916: pushConstant inline builtinGetArgumentCount
3917: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3918: pushFromStack 1
3919: pushFromStack 5
3920: pushFromStack 2
3921: call with 1 argument
3922: pushFromStack 0
3923: dup by 1
3924: pushConstant inline builtinEquals
3925: pushConstant inline 1
3926: pushFromStack 1
3927: pushFromStack 3
3928: pushFromStack 2
3929: pushFromStack 6
3930: call with 2 arguments
3931: pushFromStack 8
3932: pushFromStack 8
3933: createFunction with 0 arguments capturing 1, 0 starting at ip-3872
3934: pushFromStack 6
3935: createFunction with 0 arguments capturing 0 starting at ip-3886
3936: pushConstant inline builtinIfElse
3937: pushFromStack 0
3938: pushFromStack 7
3939: pushFromStack 5
3940: pushFromStack 4
3941: pushFromStack 14
3942: tailCall with 15 locals and 3 arguments
# Core:result:map:17:3:calleeIsTag:else
3943: pushFromStack 3
3944: dup by 1
3945: pushFromStack 2
3946: dup by 1
3947: pushFromStack 1
3948: dup by 1
3949: pushConstant inline builtinEquals
3950: pushConstant inline Function
3951: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3952: pushFromStack 2
3953: pushFromStack 5
3954: pushFromStack 3
3955: pushFromStack 3
3956: call with 2 arguments
3957: pushFromStack 7
3958: pushFromStack 7
3959: createFunction with 0 arguments capturing 1, 0 starting at ip-3912
3960: pushConstant inline builtinIfElse
3961: pushConstant <replaced address cf70d72fbe27a0f3> { 0 arguments (capturing nothing) → ip-3617 }
3962: pushFromStack 1
3963: pushFromStack 6
3964: pushFromStack 4
3965: pushFromStack 3
3966: pushFromStack 10
3967: tailCall with 13 locals and 3 arguments
# Core:result:map:17
3968: pushFromStack 2
3969: dup by 3
3970: pushFromStack 1
3971: dup by 1
3972: pushConstant inline builtinTypeOf
3973: pushConstant <replaced address bfd21c3590621a95> Core:result:map:17:3
3974: pushFromStack 1
3975: pushFromStack 5
3976: pushFromStack 2
3977: call with 1 argument
3978: pushFromStack 0
3979: dup by 1
3980: pushConstant inline builtinEquals
3981: pushConstant inline Tag
3982: pushFromStack 1
3983: pushFromStack 3
3984: pushFromStack 2
3985: pushFromStack 6
3986: call with 2 arguments
3987: pushFromStack 8
3988: pushFromStack 8
3989: createFunction with 0 arguments capturing 1, 0 starting at ip-3851
3990: pushFromStack 2
3991: pushFromStack 2
3992: pushFromStack 8
3993: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-3943
3994: pushConstant inline builtinIfElse
3995: pushFromStack 0
3996: pushFromStack 9
3997: pushFromStack 7
3998: pushFromStack 4
3999: pushFromStack 16
4000: call with 3 arguments
4001: pushFromStack 0
4002: createTag Ok
4003: popMultipleBelowTop 18
4004: return
# Core:result:map
4005: pushFromStack 2
4006: dup by 5
4007: pushFromStack 1
4008: dup by 3
4009: pushFromStack 0
4010: dup by 4
4011: pushConstant <replaced address 0e5dcb874e6dfa57> Core:result:map:2
4012: pushConstant <replaced address 67e62d06f2f1803b> { 1 argument (capturing nothing) → ip-1151 }
4013: pushFromStack 1
4014: pushFromStack 1
4015: pushFromStack 6
4016: pushFromStack 2
4017: traceCallStarts (1 argument)
4018: pushConstant inline builtinTypeOf
4019: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
4020: pushFromStack 1
4021: pushFromStack 7
4022: pushFromStack 2
4023: call with 1 argument
4024: pushConstant inline builtinEquals
4025: pushConstant inline Tag
4026: pushFromStack 1
4027: pushFromStack 1
4028: pushFromStack 4
4029: pushFromStack 6
4030: call with 2 arguments
4031: pushFromStack 10
4032: createFunction with 0 arguments capturing 0 starting at ip-3663
4033: pushConstant inline builtinIfElse
4034: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
4035: pushFromStack 1
4036: pushFromStack 5
4037: pushFromStack 4
4038: pushFromStack 3
4039: pushFromStack 12
4040: call with 3 arguments
4041: pushFromStack 0
4042: dup by 1
4043: pushConstant inline builtinTagWithoutValue
4044: pushFromStack 0
4045: pushFromStack 2
4046: pushFromStack 12
4047: call with 1 argument
4048: pushConstant inline Match
4049: pushFromStack 10
4050: pushFromStack 2
4051: pushFromStack 2
4052: pushFromStack 15
4053: call with 2 arguments
4054: pushFromStack 4
4055: createFunction with 0 arguments capturing 0 starting at ip-3688
4056: pushFromStack 10
4057: createFunction with 0 arguments capturing 0 starting at ip-3757
4058: pushFromStack 10
4059: pushFromStack 5
4060: pushFromStack 4
4061: pushFromStack 3
4062: pushFromStack 21
4063: call with 3 arguments
4064: pushFromStack 8
4065: pushFromStack 1
4066: pushFromStack 20
4067: call with 1 argument
4068: pushFromStack 17
4069: pushFromStack 1
4070: pushFromStack 9
4071: pushFromStack 22
4072: call with 2 arguments
4073: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
4074: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
4075: pushFromStack 15
4076: pushFromStack 3
4077: pushFromStack 3
4078: pushFromStack 3
4079: pushFromStack 26
4080: call with 3 arguments
4081: pushFromStack 0
4082: dup by 1
4083: traceCallEnds without return value
4084: pushConstant <replaced address b1574ef59cb20f81> Core:result:map:4
4085: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4086: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
4087: pushFromStack 2
4088: pushFromStack 2
4089: pushFromStack 5
4090: pushFromStack 3
4091: pushFromStack 34
4092: pushFromStack 4
4093: traceCallStarts (3 arguments)
4094: pushFromStack 1
4095: pushFromStack 4
4096: pushFromStack 2
4097: pushFromStack 33
4098: pushFromStack 6
4099: call with 3 arguments
4100: traceCallEnds without return value
4101: pushConstant <replaced address 2571413c63a1bad9> Core:result:map:12
4102: pushConstant <replaced address 3f846f87aff145a7> { 1 argument (capturing nothing) → ip-955 }
4103: pushFromStack 1
4104: pushFromStack 1
4105: pushFromStack 36
4106: pushFromStack 2
4107: traceCallStarts (1 argument)
4108: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
4109: pushFromStack 31
4110: pushFromStack 36
4111: pushFromStack 2
4112: call with 1 argument
4113: pushConstant inline Function
4114: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
4115: pushFromStack 31
4116: pushFromStack 3
4117: pushFromStack 3
4118: pushFromStack 3
4119: call with 2 arguments
4120: pushFromStack 0
4121: dup by 1
4122: pushFromStack 39
4123: createFunction with 0 arguments capturing 0 starting at ip-3782
4124: pushFromStack 0
4125: dup by 1
4126: pushConstant <replaced address b9594ca6bd52c414> Core:function:is1:11
4127: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
4128: pushFromStack 1
4129: pushFromStack 1
4130: pushFromStack 6
4131: pushFromStack 5
4132: pushFromStack 20
4133: pushFromStack 4
4134: traceCallStarts (3 arguments)
4135: pushFromStack 0
4136: pushFromStack 5
4137: pushFromStack 4
4138: pushFromStack 19
4139: pushFromStack 5
4140: call with 3 arguments
4141: pushFromStack 0
4142: dup by 1
4143: traceCallEnds without return value
4144: traceCallEnds without return value
4145: pushConstant <replaced address c86ac4aab1e5d003> Core:result:map:14
4146: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
4147: pushFromStack 1
4148: pushFromStack 17
4149: pushFromStack 4
4150: pushFromStack 3
4151: pushFromStack 49
4152: pushFromStack 4
4153: traceCallStarts (3 arguments)
4154: pushFromStack 16
4155: pushFromStack 3
4156: pushFromStack 2
4157: pushFromStack 48
4158: pushFromStack 5
4159: call with 3 arguments
4160: traceCallEnds without return value
4161: pushFromStack 7
4162: createFunction with 1 argument capturing 0 starting at ip-3968
4163: pushFromStack 0
4164: dup by 1
4165: pushConstant <replaced address f691b014dc4d5107> Core:result:map:18
4166: pushConstant <replaced address 4ff42d8217d23f19> { 2 arguments (capturing nothing) → ip-3431 }
4167: pushFromStack 1
4168: pushFromStack 1
4169: pushFromStack 32
4170: pushFromStack 5
4171: pushFromStack 3
4172: traceTailCall (2 arguments)
4173: pushFromStack 19
4174: drop
4175: pushFromStack 4
4176: drop
4177: pushFromStack 0
4178: pushFromStack 31
4179: pushFromStack 4
4180: pushFromStack 4
4181: tailCall with 53 locals and 2 arguments
# Examples:fibonacci:recursive:0:0:3:doesTagHaveValue:then
4182: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
4183: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4184: pushFromStack 1
4185: pushFromStack 1
4186: panic
4187: popMultipleBelowTop 3
4188: return
# Examples:fibonacci:recursive:0:0:3:doesTagHaveValue:else
4189: pushConstant <replaced address c55ccd7d548d3a0d> "Tags can only be created with one value."
4190: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4191: pushFromStack 1
4192: pushFromStack 1
4193: panic
4194: popMultipleBelowTop 3
4195: return
# Examples:fibonacci:recursive:0:0:3:calleeIsFunction:else
4196: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
4197: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4198: pushFromStack 1
4199: pushFromStack 1
4200: panic
4201: popMultipleBelowTop 3
4202: return
# Examples:fibonacci:recursive:0:5:doesTagHaveValue:then
4203: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
4204: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4205: pushFromStack 1
4206: pushFromStack 1
4207: panic
4208: popMultipleBelowTop 3
4209: return
# Examples:fibonacci:recursive:0:5:doesTagHaveValue:else
4210: pushConstant <replaced address c55ccd7d548d3a0d> "Tags can only be created with one value."
4211: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4212: pushFromStack 1
4213: pushFromStack 1
4214: panic
4215: popMultipleBelowTop 3
4216: return
# Examples:fibonacci:recursive:0:5:calleeIsFunction:else
4217: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
4218: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4219: pushFromStack 1
4220: pushFromStack 1
4221: panic
4222: popMultipleBelowTop 3
4223: return
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:then
4224: pushFromStack 1
4225: dup by 1
4226: pushConstant inline builtinTagHasValue
4227: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4228: pushFromStack 1
4229: pushFromStack 4
4230: pushFromStack 2
4231: call with 1 argument
4232: pushConstant inline builtinIfElse
4233: pushConstant <replaced address c9b79beae6a92a50> { 0 arguments (capturing nothing) → ip-4182 }
4234: pushConstant <replaced address 4a13eec9951f9eb7> { 0 arguments (capturing nothing) → ip-4189 }
4235: pushFromStack 2
4236: pushFromStack 4
4237: pushFromStack 3
4238: pushFromStack 3
4239: pushFromStack 8
4240: tailCall with 8 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:then
4241: pushFromStack 2
4242: dup by 4
4243: pushFromStack 1
4244: dup by 2
4245: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4246: pushFromStack 0
4247: pushFromStack 4
4248: pushFromStack 0
4249: pushFromStack 5
4250: pushFromStack 3
4251: traceTailCall (2 arguments)
4252: pushFromStack 3
4253: pushFromStack 0
4254: pushFromStack 4
4255: pushFromStack 3
4256: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:else
4257: pushFromStack 1
4258: dup by 1
4259: pushConstant inline builtinToDebugText
4260: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4261: pushFromStack 1
4262: pushFromStack 4
4263: pushFromStack 2
4264: call with 1 argument
4265: pushConstant inline builtinTextConcatenate
4266: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
4267: pushFromStack 1
4268: pushFromStack 1
4269: pushFromStack 4
4270: pushFromStack 6
4271: call with 2 arguments
4272: pushConstant <replaced address 4977ff9b06a0fe0d> " arguments with 2 arguments."
4273: pushFromStack 3
4274: pushFromStack 2
4275: pushFromStack 2
4276: pushFromStack 8
4277: call with 2 arguments
4278: pushFromStack 0
4279: pushFromStack 7
4280: panic
4281: popMultipleBelowTop 10
4282: return
# Examples:fibonacci:recursive:0:0:3:calleeIsFunction:then
4283: pushFromStack 2
4284: dup by 2
4285: pushFromStack 1
4286: dup by 1
4287: pushConstant inline builtinGetArgumentCount
4288: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4289: pushFromStack 1
4290: pushFromStack 5
4291: pushFromStack 2
4292: call with 1 argument
4293: pushFromStack 0
4294: dup by 1
4295: pushConstant inline builtinEquals
4296: pushConstant inline 2
4297: pushFromStack 1
4298: pushFromStack 3
4299: pushFromStack 2
4300: pushFromStack 6
4301: call with 2 arguments
4302: pushFromStack 8
4303: pushFromStack 8
4304: createFunction with 0 arguments capturing 1, 0 starting at ip-4241
4305: pushFromStack 6
4306: createFunction with 0 arguments capturing 0 starting at ip-4257
4307: pushConstant inline builtinIfElse
4308: pushFromStack 0
4309: pushFromStack 7
4310: pushFromStack 5
4311: pushFromStack 4
4312: pushFromStack 14
4313: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:else
4314: pushFromStack 3
4315: dup by 1
4316: pushFromStack 2
4317: dup by 1
4318: pushFromStack 1
4319: dup by 1
4320: pushConstant inline builtinEquals
4321: pushConstant inline Function
4322: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4323: pushFromStack 2
4324: pushFromStack 5
4325: pushFromStack 3
4326: pushFromStack 3
4327: call with 2 arguments
4328: pushFromStack 7
4329: pushFromStack 7
4330: createFunction with 0 arguments capturing 1, 0 starting at ip-4283
4331: pushConstant inline builtinIfElse
4332: pushConstant <replaced address 847d3acba70de8ca> { 0 arguments (capturing nothing) → ip-4196 }
4333: pushFromStack 1
4334: pushFromStack 6
4335: pushFromStack 4
4336: pushFromStack 3
4337: pushFromStack 10
4338: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:recursive:0:0
4339: pushFromStack 2
4340: dup by 3
4341: pushConstant inline builtinTypeOf
4342: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
4343: pushFromStack 1
4344: pushFromStack 5
4345: pushFromStack 2
4346: call with 1 argument
4347: pushFromStack 0
4348: dup by 1
4349: pushConstant inline builtinEquals
4350: pushConstant inline Tag
4351: pushFromStack 1
4352: pushFromStack 3
4353: pushFromStack 2
4354: pushFromStack 6
4355: call with 2 arguments
4356: pushFromStack 8
4357: createFunction with 0 arguments capturing 0 starting at ip-4224
4358: pushFromStack 1
4359: pushFromStack 10
4360: pushFromStack 7
4361: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-4314
4362: pushConstant inline builtinIfElse
4363: pushFromStack 0
4364: pushFromStack 8
4365: pushFromStack 7
4366: pushFromStack 4
4367: pushFromStack 15
4368: tailCall with 16 locals and 3 arguments
# Examples:fibonacci:recursive:0:5:calleeIsTag:then
4369: pushFromStack 1
4370: dup by 1
4371: pushConstant inline builtinTagHasValue
4372: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4373: pushFromStack 1
4374: pushFromStack 4
4375: pushFromStack 2
4376: call with 1 argument
4377: pushConstant inline builtinIfElse
4378: pushConstant <replaced address 04d98daa55845d31> { 0 arguments (capturing nothing) → ip-4203 }
4379: pushConstant <replaced address 3f42d9ac6772a744> { 0 arguments (capturing nothing) → ip-4210 }
4380: pushFromStack 2
4381: pushFromStack 4
4382: pushFromStack 3
4383: pushFromStack 3
4384: pushFromStack 8
4385: tailCall with 8 locals and 3 arguments
# Examples:fibonacci:recursive:0:5:hasCorrectNumberOfArguments:then
4386: pushFromStack 3
4387: dup by 2
4388: pushFromStack 2
4389: dup by 2
4390: pushFromStack 1
4391: dup by 2
4392: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4393: pushFromStack 0
4394: pushFromStack 5
4395: pushFromStack 4
4396: pushFromStack 6
4397: pushFromStack 3
4398: traceTailCall (2 arguments)
4399: pushFromStack 4
4400: pushFromStack 3
4401: pushFromStack 5
4402: pushFromStack 3
4403: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:recursive:0:5:hasCorrectNumberOfArguments:else
4404: pushFromStack 1
4405: dup by 1
4406: pushConstant inline builtinToDebugText
4407: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4408: pushFromStack 1
4409: pushFromStack 4
4410: pushFromStack 2
4411: call with 1 argument
4412: pushConstant inline builtinTextConcatenate
4413: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
4414: pushFromStack 1
4415: pushFromStack 1
4416: pushFromStack 4
4417: pushFromStack 6
4418: call with 2 arguments
4419: pushConstant <replaced address 4977ff9b06a0fe0d> " arguments with 2 arguments."
4420: pushFromStack 3
4421: pushFromStack 2
4422: pushFromStack 2
4423: pushFromStack 8
4424: call with 2 arguments
4425: pushFromStack 0
4426: pushFromStack 7
4427: panic
4428: popMultipleBelowTop 10
4429: return
# Examples:fibonacci:recursive:0:5:calleeIsFunction:then
4430: pushFromStack 3
4431: dup by 2
4432: pushFromStack 2
4433: dup by 1
4434: pushFromStack 1
4435: dup by 1
4436: pushConstant inline builtinGetArgumentCount
4437: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4438: pushFromStack 1
4439: pushFromStack 6
4440: pushFromStack 2
4441: call with 1 argument
4442: pushFromStack 0
4443: dup by 1
4444: pushConstant inline builtinEquals
4445: pushConstant inline 2
4446: pushFromStack 1
4447: pushFromStack 3
4448: pushFromStack 2
4449: pushFromStack 6
4450: call with 2 arguments
4451: pushFromStack 9
4452: pushFromStack 9
4453: pushFromStack 9
4454: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-4386
4455: pushFromStack 7
4456: createFunction with 0 arguments capturing 0 starting at ip-4404
4457: pushConstant inline builtinIfElse
4458: pushFromStack 0
4459: pushFromStack 8
4460: pushFromStack 5
4461: pushFromStack 4
4462: pushFromStack 15
4463: tailCall with 17 locals and 3 arguments
# Examples:fibonacci:recursive:0:5:calleeIsTag:else
4464: pushFromStack 4
4465: dup by 1
4466: pushFromStack 3
4467: dup by 1
4468: pushFromStack 2
4469: dup by 1
4470: pushFromStack 1
4471: dup by 1
4472: pushConstant inline builtinEquals
4473: pushConstant inline Function
4474: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4475: pushFromStack 2
4476: pushFromStack 5
4477: pushFromStack 3
4478: pushFromStack 3
4479: call with 2 arguments
4480: pushFromStack 8
4481: pushFromStack 8
4482: pushFromStack 8
4483: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-4430
4484: pushConstant inline builtinIfElse
4485: pushConstant <replaced address bf9f2c8b15e91bab> { 0 arguments (capturing nothing) → ip-4217 }
4486: pushFromStack 1
4487: pushFromStack 7
4488: pushFromStack 4
4489: pushFromStack 3
4490: pushFromStack 11
4491: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:recursive:0
4492: pushFromStack 3
4493: dup by 3
4494: pushFromStack 2
4495: createFunction with 1 argument capturing 0 starting at ip-4339
4496: pushConstant inline builtinTypeOf
4497: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
4498: pushFromStack 1
4499: pushFromStack 8
4500: pushFromStack 2
4501: call with 1 argument
4502: pushFromStack 0
4503: dup by 1
4504: pushConstant inline builtinEquals
4505: pushConstant inline Tag
4506: pushFromStack 1
4507: pushFromStack 3
4508: pushFromStack 2
4509: pushFromStack 6
4510: call with 2 arguments
4511: pushFromStack 11
4512: createFunction with 0 arguments capturing 0 starting at ip-4369
4513: pushFromStack 1
4514: pushFromStack 12
4515: pushFromStack 10
4516: pushFromStack 8
4517: createFunction with 0 arguments capturing 3, 2, 1, 0 starting at ip-4464
4518: pushConstant inline builtinIfElse
4519: pushFromStack 0
4520: pushFromStack 9
4521: pushFromStack 8
4522: pushFromStack 4
4523: pushFromStack 16
4524: tailCall with 20 locals and 3 arguments
# Examples:fibonacci:recursive
4525: pushFromStack 2
4526: dup by 1
4527: pushFromStack 1
4528: createFunction with 2 arguments capturing 0 starting at ip-4492
4529: pushFromStack 0
4530: dup by 3
4531: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
4532: pushFromStack 0
4533: pushFromStack 2
4534: pushFromStack 0
4535: pushFromStack 8
4536: pushFromStack 3
4537: traceTailCall (2 arguments)
4538: pushFromStack 1
4539: pushFromStack 0
4540: pushFromStack 7
4541: pushFromStack 3
4542: tailCall with 6 locals and 2 arguments
# Examples:fibonacci:compareTo
4543: pushFromStack 2
4544: dup by 2
4545: pushFromStack 1
4546: dup by 2
4547: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
4548: pushConstant <replaced address f7fc1c0fbd2eb7c2> { 2 arguments (capturing nothing) → ip-552 }
4549: pushFromStack 1
4550: pushFromStack 1
4551: pushFromStack 6
4552: pushFromStack 6
4553: pushFromStack 3
4554: traceTailCall (2 arguments)
4555: pushConstant inline builtinTypeOf
4556: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
4557: pushFromStack 1
4558: pushFromStack 7
4559: pushFromStack 2
4560: call with 1 argument
4561: pushConstant inline builtinEquals
4562: pushConstant inline Int
4563: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
4564: pushFromStack 2
4565: pushFromStack 4
4566: pushFromStack 3
4567: pushFromStack 3
4568: call with 2 arguments
4569: pushFromStack 0
4570: dup by 1
4571: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
4572: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4573: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
4574: pushFromStack 2
4575: pushFromStack 2
4576: pushFromStack 5
4577: pushFromStack 3
4578: pushFromStack 15
4579: pushFromStack 4
4580: traceCallStarts (3 arguments)
4581: pushFromStack 1
4582: pushFromStack 4
4583: pushFromStack 2
4584: pushFromStack 14
4585: pushFromStack 6
4586: call with 3 arguments
4587: traceCallEnds without return value
4588: pushFromStack 10
4589: pushFromStack 15
4590: pushFromStack 11
4591: call with 1 argument
4592: pushFromStack 8
4593: pushFromStack 1
4594: pushFromStack 9
4595: pushFromStack 9
4596: call with 2 arguments
4597: pushFromStack 0
4598: dup by 1
4599: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
4600: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
4601: pushFromStack 1
4602: pushFromStack 7
4603: pushFromStack 4
4604: pushFromStack 3
4605: pushFromStack 20
4606: pushFromStack 4
4607: traceCallStarts (3 arguments)
4608: pushFromStack 6
4609: pushFromStack 3
4610: pushFromStack 2
4611: pushFromStack 19
4612: pushFromStack 5
4613: call with 3 arguments
4614: traceCallEnds without return value
4615: pushConstant inline builtinIntCompareTo
4616: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
4617: pushFromStack 7
4618: drop
4619: pushFromStack 2
4620: drop
4621: pushFromStack 1
4622: pushFromStack 23
4623: pushFromStack 23
4624: pushFromStack 3
4625: tailCall with 23 locals and 2 arguments
# Examples:fibonacci:isLessThan
4626: pushFromStack 2
4627: dup by 3
4628: pushFromStack 1
4629: dup by 3
4630: pushConstant <replaced address 7ae5b371ff139a5d> Examples:fibonacci:isLessThan:9
4631: pushConstant <replaced address e260dca1501833b1> { 2 arguments (capturing nothing) → ip-4543 }
4632: pushFromStack 1
4633: pushFromStack 1
4634: pushFromStack 6
4635: pushFromStack 6
4636: pushFromStack 3
4637: traceCallStarts (2 arguments)
4638: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
4639: pushConstant <replaced address f7fc1c0fbd2eb7c2> { 2 arguments (capturing nothing) → ip-552 }
4640: pushFromStack 1
4641: pushFromStack 1
4642: pushFromStack 8
4643: pushFromStack 8
4644: pushFromStack 3
4645: traceCallStarts (2 arguments)
4646: pushConstant inline builtinTypeOf
4647: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
4648: pushFromStack 1
4649: pushFromStack 9
4650: pushFromStack 2
4651: call with 1 argument
4652: pushConstant inline builtinEquals
4653: pushConstant inline Int
4654: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
4655: pushFromStack 2
4656: pushFromStack 4
4657: pushFromStack 3
4658: pushFromStack 3
4659: call with 2 arguments
4660: pushFromStack 0
4661: dup by 1
4662: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
4663: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
4664: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
4665: pushFromStack 2
4666: pushFromStack 2
4667: pushFromStack 5
4668: pushFromStack 3
4669: pushFromStack 15
4670: pushFromStack 4
4671: traceCallStarts (3 arguments)
4672: pushFromStack 1
4673: pushFromStack 4
4674: pushFromStack 2
4675: pushFromStack 14
4676: pushFromStack 6
4677: call with 3 arguments
4678: traceCallEnds without return value
4679: pushFromStack 10
4680: pushFromStack 17
4681: pushFromStack 11
4682: call with 1 argument
4683: pushFromStack 8
4684: pushFromStack 1
4685: pushFromStack 9
4686: pushFromStack 9
4687: call with 2 arguments
4688: pushFromStack 0
4689: dup by 1
4690: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
4691: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
4692: pushFromStack 1
4693: pushFromStack 7
4694: pushFromStack 4
4695: pushFromStack 3
4696: pushFromStack 20
4697: pushFromStack 4
4698: traceCallStarts (3 arguments)
4699: pushFromStack 6
4700: pushFromStack 3
4701: pushFromStack 2
4702: pushFromStack 19
4703: pushFromStack 5
4704: call with 3 arguments
4705: traceCallEnds without return value
4706: pushConstant inline builtinIntCompareTo
4707: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
4708: pushFromStack 1
4709: pushFromStack 25
4710: pushFromStack 25
4711: pushFromStack 3
4712: call with 2 arguments
4713: traceCallEnds without return value
4714: traceCallEnds without return value
4715: pushConstant inline Less
4716: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
4717: pushFromStack 10
4718: drop
4719: pushFromStack 5
4720: drop
4721: pushFromStack 17
4722: pushFromStack 3
4723: pushFromStack 3
4724: pushFromStack 3
4725: tailCall with 28 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:11:10:doesTagHaveValue:then
4726: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
4727: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4728: pushFromStack 1
4729: pushFromStack 1
4730: panic
4731: popMultipleBelowTop 3
4732: return
# Examples:fibonacci:fibonacci:2:11:10:calleeIsFunction:else
4733: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
4734: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4735: pushFromStack 1
4736: pushFromStack 1
4737: panic
4738: popMultipleBelowTop 3
4739: return
# Examples:fibonacci:fibonacci:2:11:27:doesTagHaveValue:then
4740: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
4741: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4742: pushFromStack 1
4743: pushFromStack 1
4744: panic
4745: popMultipleBelowTop 3
4746: return
# Examples:fibonacci:fibonacci:2:11:27:calleeIsFunction:else
4747: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
4748: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4749: pushFromStack 1
4750: pushFromStack 1
4751: panic
4752: popMultipleBelowTop 3
4753: return
# Examples:fibonacci:fibonacci:2:10
4754: pushFromStack 1
4755: dup by 1
4756: pushFromStack 1
4757: popMultipleBelowTop 2
4758: return
# Examples:fibonacci:fibonacci:2:11:10:doesTagHaveValue:else
4759: pushFromStack 2
4760: dup by 1
4761: pushFromStack 1
4762: dup by 1
4763: pushConstant inline builtinTagWithValue
4764: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4765: pushFromStack 1
4766: pushFromStack 5
4767: pushFromStack 5
4768: pushFromStack 3
4769: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:11:10:calleeIsTag:then
4770: pushFromStack 2
4771: dup by 2
4772: pushFromStack 1
4773: dup by 1
4774: pushConstant inline builtinTagHasValue
4775: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4776: pushFromStack 1
4777: pushFromStack 5
4778: pushFromStack 2
4779: call with 1 argument
4780: pushFromStack 5
4781: pushFromStack 5
4782: createFunction with 0 arguments capturing 1, 0 starting at ip-4759
4783: pushConstant inline builtinIfElse
4784: pushConstant <replaced address f2d3411e0effa6f0> { 0 arguments (capturing nothing) → ip-4726 }
4785: pushFromStack 1
4786: pushFromStack 6
4787: pushFromStack 2
4788: pushFromStack 5
4789: pushFromStack 10
4790: tailCall with 11 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:10:hasCorrectNumberOfArguments:then
4791: pushFromStack 2
4792: dup by 2
4793: pushFromStack 1
4794: dup by 2
4795: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4796: pushFromStack 0
4797: pushFromStack 4
4798: pushFromStack 4
4799: pushFromStack 2
4800: traceTailCall (1 argument)
4801: pushFromStack 3
4802: pushFromStack 3
4803: pushFromStack 2
4804: tailCall with 4 locals and 1 argument
# Examples:fibonacci:fibonacci:2:11:10:hasCorrectNumberOfArguments:else
4805: pushFromStack 1
4806: dup by 1
4807: pushConstant inline builtinToDebugText
4808: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4809: pushFromStack 1
4810: pushFromStack 4
4811: pushFromStack 2
4812: call with 1 argument
4813: pushConstant inline builtinTextConcatenate
4814: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
4815: pushFromStack 1
4816: pushFromStack 1
4817: pushFromStack 4
4818: pushFromStack 6
4819: call with 2 arguments
4820: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
4821: pushFromStack 3
4822: pushFromStack 2
4823: pushFromStack 2
4824: pushFromStack 8
4825: call with 2 arguments
4826: pushFromStack 0
4827: pushFromStack 7
4828: panic
4829: popMultipleBelowTop 10
4830: return
# Examples:fibonacci:fibonacci:2:11:10:calleeIsFunction:then
4831: pushFromStack 2
4832: dup by 2
4833: pushFromStack 1
4834: dup by 1
4835: pushConstant inline builtinGetArgumentCount
4836: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4837: pushFromStack 1
4838: pushFromStack 5
4839: pushFromStack 2
4840: call with 1 argument
4841: pushFromStack 0
4842: dup by 1
4843: pushConstant inline builtinEquals
4844: pushConstant inline 1
4845: pushFromStack 1
4846: pushFromStack 3
4847: pushFromStack 2
4848: pushFromStack 6
4849: call with 2 arguments
4850: pushFromStack 8
4851: pushFromStack 8
4852: createFunction with 0 arguments capturing 1, 0 starting at ip-4791
4853: pushFromStack 6
4854: createFunction with 0 arguments capturing 0 starting at ip-4805
4855: pushConstant inline builtinIfElse
4856: pushFromStack 0
4857: pushFromStack 7
4858: pushFromStack 5
4859: pushFromStack 4
4860: pushFromStack 14
4861: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:10:calleeIsTag:else
4862: pushFromStack 3
4863: dup by 1
4864: pushFromStack 2
4865: dup by 1
4866: pushFromStack 1
4867: dup by 1
4868: pushConstant inline builtinEquals
4869: pushConstant inline Function
4870: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
4871: pushFromStack 2
4872: pushFromStack 5
4873: pushFromStack 3
4874: pushFromStack 3
4875: call with 2 arguments
4876: pushFromStack 7
4877: pushFromStack 7
4878: createFunction with 0 arguments capturing 1, 0 starting at ip-4831
4879: pushConstant inline builtinIfElse
4880: pushConstant <replaced address 732f93fcbd761b57> { 0 arguments (capturing nothing) → ip-4733 }
4881: pushFromStack 1
4882: pushFromStack 6
4883: pushFromStack 4
4884: pushFromStack 3
4885: pushFromStack 10
4886: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:27:doesTagHaveValue:else
4887: pushFromStack 2
4888: dup by 1
4889: pushFromStack 1
4890: dup by 1
4891: pushConstant inline builtinTagWithValue
4892: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4893: pushFromStack 1
4894: pushFromStack 5
4895: pushFromStack 5
4896: pushFromStack 3
4897: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:11:27:calleeIsTag:then
4898: pushFromStack 2
4899: dup by 2
4900: pushFromStack 1
4901: dup by 1
4902: pushConstant inline builtinTagHasValue
4903: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4904: pushFromStack 1
4905: pushFromStack 5
4906: pushFromStack 2
4907: call with 1 argument
4908: pushFromStack 5
4909: pushFromStack 5
4910: createFunction with 0 arguments capturing 1, 0 starting at ip-4887
4911: pushConstant inline builtinIfElse
4912: pushConstant <replaced address 6bf9bb926069afea> { 0 arguments (capturing nothing) → ip-4740 }
4913: pushFromStack 1
4914: pushFromStack 6
4915: pushFromStack 2
4916: pushFromStack 5
4917: pushFromStack 10
4918: tailCall with 11 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:27:hasCorrectNumberOfArguments:then
4919: pushFromStack 2
4920: dup by 2
4921: pushFromStack 1
4922: dup by 2
4923: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4924: pushFromStack 0
4925: pushFromStack 4
4926: pushFromStack 4
4927: pushFromStack 2
4928: traceTailCall (1 argument)
4929: pushFromStack 3
4930: pushFromStack 3
4931: pushFromStack 2
4932: tailCall with 4 locals and 1 argument
# Examples:fibonacci:fibonacci:2:11:27:hasCorrectNumberOfArguments:else
4933: pushFromStack 1
4934: dup by 1
4935: pushConstant inline builtinToDebugText
4936: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4937: pushFromStack 1
4938: pushFromStack 4
4939: pushFromStack 2
4940: call with 1 argument
4941: pushConstant inline builtinTextConcatenate
4942: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
4943: pushFromStack 1
4944: pushFromStack 1
4945: pushFromStack 4
4946: pushFromStack 6
4947: call with 2 arguments
4948: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
4949: pushFromStack 3
4950: pushFromStack 2
4951: pushFromStack 2
4952: pushFromStack 8
4953: call with 2 arguments
4954: pushFromStack 0
4955: pushFromStack 7
4956: panic
4957: popMultipleBelowTop 10
4958: return
# Examples:fibonacci:fibonacci:2:11:27:calleeIsFunction:then
4959: pushFromStack 2
4960: dup by 2
4961: pushFromStack 1
4962: dup by 1
4963: pushConstant inline builtinGetArgumentCount
4964: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4965: pushFromStack 1
4966: pushFromStack 5
4967: pushFromStack 2
4968: call with 1 argument
4969: pushFromStack 0
4970: dup by 1
4971: pushConstant inline builtinEquals
4972: pushConstant inline 1
4973: pushFromStack 1
4974: pushFromStack 3
4975: pushFromStack 2
4976: pushFromStack 6
4977: call with 2 arguments
4978: pushFromStack 8
4979: pushFromStack 8
4980: createFunction with 0 arguments capturing 1, 0 starting at ip-4919
4981: pushFromStack 6
4982: createFunction with 0 arguments capturing 0 starting at ip-4933
4983: pushConstant inline builtinIfElse
4984: pushFromStack 0
4985: pushFromStack 7
4986: pushFromStack 5
4987: pushFromStack 4
4988: pushFromStack 14
4989: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11:27:calleeIsTag:else
4990: pushFromStack 3
4991: dup by 1
4992: pushFromStack 2
4993: dup by 1
4994: pushFromStack 1
4995: dup by 1
4996: pushConstant inline builtinEquals
4997: pushConstant inline Function
4998: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
4999: pushFromStack 2
5000: pushFromStack 5
5001: pushFromStack 3
5002: pushFromStack 3
5003: call with 2 arguments
5004: pushFromStack 7
5005: pushFromStack 7
5006: createFunction with 0 arguments capturing 1, 0 starting at ip-4959
5007: pushConstant inline builtinIfElse
5008: pushConstant <replaced address ec560e710ee02451> { 0 arguments (capturing nothing) → ip-4747 }
5009: pushFromStack 1
5010: pushFromStack 6
5011: pushFromStack 4
5012: pushFromStack 3
5013: pushFromStack 10
5014: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:fibonacci:2:11
5015: pushFromStack 2
5016: dup by 6
5017: pushFromStack 1
5018: dup by 5
5019: pushConstant <replaced address 3f287b94ceaa3f9a> Examples:fibonacci:fibonacci:2:11:9
5020: pushConstant <replaced address 877d667bc6df9870> { 2 arguments (capturing nothing) → ip-674 }
5021: pushConstant inline 1
5022: pushFromStack 2
5023: pushFromStack 2
5024: pushFromStack 6
5025: pushFromStack 3
5026: pushFromStack 3
5027: traceCallStarts (2 arguments)
5028: pushConstant inline builtinTypeOf
5029: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
5030: pushFromStack 1
5031: pushFromStack 7
5032: pushFromStack 2
5033: call with 1 argument
5034: pushConstant inline builtinEquals
5035: pushConstant inline Int
5036: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
5037: pushFromStack 2
5038: pushFromStack 4
5039: pushFromStack 3
5040: pushFromStack 3
5041: call with 2 arguments
5042: pushFromStack 0
5043: dup by 3
5044: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
5045: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
5046: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
5047: pushFromStack 2
5048: pushFromStack 2
5049: pushFromStack 5
5050: pushFromStack 3
5051: pushFromStack 16
5052: pushFromStack 4
5053: traceCallStarts (3 arguments)
5054: pushFromStack 1
5055: pushFromStack 4
5056: pushFromStack 2
5057: pushFromStack 15
5058: pushFromStack 6
5059: call with 3 arguments
5060: traceCallEnds without return value
5061: pushConstant inline builtinIntSubtract
5062: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
5063: pushFromStack 1
5064: pushFromStack 18
5065: pushFromStack 15
5066: pushFromStack 3
5067: call with 2 arguments
5068: pushFromStack 0
5069: dup by 1
5070: traceCallEnds without return value
5071: pushConstant <replaced address edabb9dda7883505> Examples:fibonacci:fibonacci:2:11:10
5072: pushFromStack 14
5073: pushFromStack 21
5074: pushFromStack 2
5075: call with 1 argument
5076: pushFromStack 0
5077: dup by 1
5078: pushConstant inline Tag
5079: pushFromStack 13
5080: pushFromStack 2
5081: pushFromStack 2
5082: pushFromStack 5
5083: call with 2 arguments
5084: pushFromStack 23
5085: pushFromStack 5
5086: createFunction with 0 arguments capturing 1, 0 starting at ip-4770
5087: pushFromStack 2
5088: pushFromStack 2
5089: pushFromStack 7
5090: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-4862
5091: pushConstant inline builtinIfElse
5092: pushFromStack 0
5093: pushFromStack 9
5094: pushFromStack 7
5095: pushFromStack 4
5096: pushFromStack 15
5097: call with 3 arguments
5098: pushFromStack 0
5099: dup by 1
5100: pushConstant <replaced address d5df9e6b35678bb5> Examples:fibonacci:fibonacci:2:11:26
5101: pushConstant inline 2
5102: pushFromStack 1
5103: pushFromStack 31
5104: pushFromStack 35
5105: pushFromStack 3
5106: pushFromStack 3
5107: traceCallStarts (2 arguments)
5108: pushFromStack 21
5109: pushFromStack 21
5110: pushFromStack 24
5111: pushFromStack 22
5112: pushFromStack 5
5113: pushFromStack 4
5114: traceCallStarts (3 arguments)
5115: pushFromStack 20
5116: pushFromStack 23
5117: pushFromStack 21
5118: pushFromStack 4
5119: pushFromStack 25
5120: call with 3 arguments
5121: traceCallEnds without return value
5122: pushFromStack 18
5123: pushFromStack 35
5124: pushFromStack 3
5125: pushFromStack 20
5126: call with 2 arguments
5127: pushFromStack 0
5128: dup by 1
5129: traceCallEnds without return value
5130: pushConstant <replaced address 8462dcb40e458120> Examples:fibonacci:fibonacci:2:11:27
5131: pushFromStack 31
5132: pushFromStack 11
5133: pushFromStack 2
5134: call with 1 argument
5135: pushFromStack 0
5136: dup by 1
5137: pushFromStack 29
5138: pushFromStack 1
5139: pushFromStack 18
5140: pushFromStack 4
5141: call with 2 arguments
5142: pushFromStack 12
5143: pushFromStack 4
5144: createFunction with 0 arguments capturing 1, 0 starting at ip-4898
5145: pushFromStack 2
5146: pushFromStack 2
5147: pushFromStack 6
5148: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-4990
5149: pushFromStack 15
5150: pushFromStack 8
5151: pushFromStack 6
5152: pushFromStack 3
5153: pushFromStack 13
5154: call with 3 arguments
5155: pushFromStack 0
5156: dup by 1
5157: pushConstant <replaced address becc28b62033cb33> Examples:fibonacci:fibonacci:2:11:28
5158: pushConstant <replaced address ffea9a3777280bfd> { 2 arguments (capturing nothing) → ip-475 }
5159: pushFromStack 1
5160: pushFromStack 1
5161: pushFromStack 19
5162: pushFromStack 5
5163: pushFromStack 3
5164: traceTailCall (2 arguments)
5165: pushFromStack 33
5166: drop
5167: pushFromStack 14
5168: drop
5169: pushFromStack 0
5170: pushFromStack 18
5171: pushFromStack 4
5172: pushFromStack 4
5173: tailCall with 50 locals and 2 arguments
# Examples:fibonacci:fibonacci:2
5174: pushFromStack 1
5175: dup by 6
5176: pushConstant <replaced address 664bab760ff04a9c> Examples:fibonacci:fibonacci:2:9
5177: pushConstant <replaced address 4dd3ab030021a200> { 2 arguments (capturing nothing) → ip-4626 }
5178: pushConstant inline 2
5179: pushFromStack 2
5180: pushFromStack 2
5181: pushFromStack 6
5182: pushFromStack 3
5183: pushFromStack 3
5184: traceCallStarts (2 arguments)
5185: pushConstant <replaced address 7ae5b371ff139a5d> Examples:fibonacci:isLessThan:9
5186: pushConstant <replaced address e260dca1501833b1> { 2 arguments (capturing nothing) → ip-4543 }
5187: pushFromStack 1
5188: pushFromStack 1
5189: pushFromStack 8
5190: pushFromStack 5
5191: pushFromStack 3
5192: traceCallStarts (2 arguments)
5193: pushConstant <replaced address 8b647556f2e3190d> Examples:fibonacci:compareTo:8
5194: pushConstant <replaced address f7fc1c0fbd2eb7c2> { 2 arguments (capturing nothing) → ip-552 }
5195: pushFromStack 1
5196: pushFromStack 1
5197: pushFromStack 10
5198: pushFromStack 7
5199: pushFromStack 3
5200: traceCallStarts (2 arguments)
5201: pushConstant inline builtinTypeOf
5202: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
5203: pushFromStack 1
5204: pushFromStack 11
5205: pushFromStack 2
5206: call with 1 argument
5207: pushConstant inline builtinEquals
5208: pushConstant inline Int
5209: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
5210: pushFromStack 2
5211: pushFromStack 4
5212: pushFromStack 3
5213: pushFromStack 3
5214: call with 2 arguments
5215: pushFromStack 0
5216: dup by 1
5217: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
5218: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
5219: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
5220: pushFromStack 2
5221: pushFromStack 2
5222: pushFromStack 5
5223: pushFromStack 3
5224: pushFromStack 15
5225: pushFromStack 4
5226: traceCallStarts (3 arguments)
5227: pushFromStack 1
5228: pushFromStack 4
5229: pushFromStack 2
5230: pushFromStack 14
5231: pushFromStack 6
5232: call with 3 arguments
5233: traceCallEnds without return value
5234: pushConstant inline builtinIntCompareTo
5235: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
5236: pushFromStack 1
5237: pushFromStack 22
5238: pushFromStack 19
5239: pushFromStack 3
5240: call with 2 arguments
5241: traceCallEnds without return value
5242: traceCallEnds without return value
5243: pushConstant inline Less
5244: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
5245: pushFromStack 12
5246: pushFromStack 3
5247: pushFromStack 3
5248: pushFromStack 3
5249: call with 2 arguments
5250: pushFromStack 0
5251: dup by 1
5252: traceCallEnds without return value
5253: pushFromStack 25
5254: createFunction with 0 arguments capturing 0 starting at ip-4754
5255: pushFromStack 0
5256: dup by 1
5257: pushFromStack 28
5258: pushFromStack 2
5259: createFunction with 0 arguments capturing 1, 0 starting at ip-5015
5260: pushFromStack 0
5261: dup by 1
5262: pushConstant <replaced address 71d566509a8a2add> Examples:fibonacci:fibonacci:2:12
5263: pushConstant <replaced address be94976d83240c54> { 3 arguments (capturing nothing) → ip-184 }
5264: pushFromStack 1
5265: pushFromStack 1
5266: pushFromStack 9
5267: pushFromStack 8
5268: pushFromStack 6
5269: pushFromStack 4
5270: traceTailCall (3 arguments)
5271: pushFromStack 13
5272: drop
5273: pushFromStack 0
5274: pushFromStack 8
5275: pushFromStack 7
5276: pushFromStack 5
5277: pushFromStack 5
5278: tailCall with 34 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:then
5279: pushFromStack 1
5280: dup by 1
5281: pushConstant inline builtinTagHasValue
5282: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
5283: pushFromStack 1
5284: pushFromStack 4
5285: pushFromStack 2
5286: call with 1 argument
5287: pushConstant inline builtinIfElse
5288: pushConstant <replaced address c9b79beae6a92a50> { 0 arguments (capturing nothing) → ip-4182 }
5289: pushConstant <replaced address 4a13eec9951f9eb7> { 0 arguments (capturing nothing) → ip-4189 }
5290: pushFromStack 2
5291: pushFromStack 4
5292: pushFromStack 3
5293: pushFromStack 3
5294: pushFromStack 8
5295: tailCall with 8 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:then
5296: pushFromStack 2
5297: dup by 4
5298: pushFromStack 1
5299: dup by 2
5300: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
5301: pushFromStack 0
5302: pushFromStack 4
5303: pushFromStack 0
5304: pushFromStack 5
5305: pushFromStack 3
5306: traceTailCall (2 arguments)
5307: pushFromStack 3
5308: pushFromStack 0
5309: pushFromStack 4
5310: pushFromStack 3
5311: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0:0:3:hasCorrectNumberOfArguments:else
5312: pushFromStack 1
5313: dup by 1
5314: pushConstant inline builtinToDebugText
5315: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
5316: pushFromStack 1
5317: pushFromStack 4
5318: pushFromStack 2
5319: call with 1 argument
5320: pushConstant inline builtinTextConcatenate
5321: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
5322: pushFromStack 1
5323: pushFromStack 1
5324: pushFromStack 4
5325: pushFromStack 6
5326: call with 2 arguments
5327: pushConstant <replaced address 4977ff9b06a0fe0d> " arguments with 2 arguments."
5328: pushFromStack 3
5329: pushFromStack 2
5330: pushFromStack 2
5331: pushFromStack 8
5332: call with 2 arguments
5333: pushFromStack 0
5334: pushFromStack 7
5335: panic
5336: popMultipleBelowTop 10
5337: return
# Examples:fibonacci:recursive:0:0:3:calleeIsFunction:then
5338: pushFromStack 2
5339: dup by 2
5340: pushFromStack 1
5341: dup by 1
5342: pushConstant inline builtinGetArgumentCount
5343: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
5344: pushFromStack 1
5345: pushFromStack 5
5346: pushFromStack 2
5347: call with 1 argument
5348: pushFromStack 0
5349: dup by 1
5350: pushConstant inline builtinEquals
5351: pushConstant inline 2
5352: pushFromStack 1
5353: pushFromStack 3
5354: pushFromStack 2
5355: pushFromStack 6
5356: call with 2 arguments
5357: pushFromStack 8
5358: pushFromStack 8
5359: createFunction with 0 arguments capturing 1, 0 starting at ip-5296
5360: pushFromStack 6
5361: createFunction with 0 arguments capturing 0 starting at ip-5312
5362: pushConstant inline builtinIfElse
5363: pushFromStack 0
5364: pushFromStack 7
5365: pushFromStack 5
5366: pushFromStack 4
5367: pushFromStack 14
5368: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:recursive:0:0:3:calleeIsTag:else
5369: pushFromStack 3
5370: dup by 1
5371: pushFromStack 2
5372: dup by 1
5373: pushFromStack 1
5374: dup by 1
5375: pushConstant inline builtinEquals
5376: pushConstant inline Function
5377: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
5378: pushFromStack 2
5379: pushFromStack 5
5380: pushFromStack 3
5381: pushFromStack 3
5382: call with 2 arguments
5383: pushFromStack 7
5384: pushFromStack 7
5385: createFunction with 0 arguments capturing 1, 0 starting at ip-5338
5386: pushConstant inline builtinIfElse
5387: pushConstant <replaced address 847d3acba70de8ca> { 0 arguments (capturing nothing) → ip-4196 }
5388: pushFromStack 1
5389: pushFromStack 6
5390: pushFromStack 4
5391: pushFromStack 3
5392: pushFromStack 10
5393: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:recursive:0:0
5394: pushFromStack 2
5395: dup by 3
5396: pushConstant inline builtinTypeOf
5397: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
5398: pushFromStack 1
5399: pushFromStack 5
5400: pushFromStack 2
5401: call with 1 argument
5402: pushFromStack 0
5403: dup by 1
5404: pushConstant inline builtinEquals
5405: pushConstant inline Tag
5406: pushFromStack 1
5407: pushFromStack 3
5408: pushFromStack 2
5409: pushFromStack 6
5410: call with 2 arguments
5411: pushFromStack 8
5412: createFunction with 0 arguments capturing 0 starting at ip-5279
5413: pushFromStack 1
5414: pushFromStack 10
5415: pushFromStack 7
5416: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-5369
5417: pushConstant inline builtinIfElse
5418: pushFromStack 0
5419: pushFromStack 8
5420: pushFromStack 7
5421: pushFromStack 4
5422: pushFromStack 15
5423: tailCall with 16 locals and 3 arguments
# Examples:fibonacci:recursive:0
5424: pushFromStack 1
5425: dup by 1
5426: pushFromStack 2
5427: createFunction with 1 argument capturing 0 starting at ip-5394
5428: pushFromStack 0
5429: dup by 1
5430: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
5431: pushConstant <replaced address bce25712c50048f4> { 2 arguments (capturing nothing) → ip-5174 }
5432: pushFromStack 1
5433: pushFromStack 1
5434: pushFromStack 4
5435: pushFromStack 8
5436: pushFromStack 3
5437: traceTailCall (2 arguments)
5438: pushFromStack 0
5439: pushFromStack 3
5440: pushFromStack 7
5441: pushFromStack 4
5442: tailCall with 7 locals and 2 arguments
# Examples:fibonacci:fibonacci
5443: pushFromStack 1
5444: dup by 2
5445: pushConstant <replaced address 1315f9b01ba30c9f> Examples:fibonacci:fibonacci:3
5446: pushConstant <replaced address 9d267b82107cf22b> { 2 arguments (capturing nothing) → ip-4525 }
5447: pushConstant <replaced address bce25712c50048f4> { 2 arguments (capturing nothing) → ip-5174 }
5448: pushFromStack 2
5449: pushFromStack 2
5450: pushFromStack 6
5451: pushFromStack 3
5452: pushFromStack 3
5453: traceCallStarts (2 arguments)
5454: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
5455: pushConstant <replaced address 96aa8acb98c6c8ca> { 2 arguments (capturing nothing) → ip-5424 }
5456: pushFromStack 1
5457: pushFromStack 1
5458: pushFromStack 0
5459: pushFromStack 9
5460: pushFromStack 3
5461: traceCallStarts (2 arguments)
5462: pushFromStack 0
5463: pushFromStack 0
5464: pushFromStack 8
5465: pushFromStack 4
5466: call with 2 arguments
5467: traceCallEnds without return value
5468: traceCallEnds without return value
5469: pushFromStack 0
5470: popMultipleBelowTop 8
5471: return
# Examples:fibonacci:23:6:14
5472: pushFromStack 1
5473: dup by 3
5474: pushConstant <replaced address bd82eea49ada30b1> Examples:fibonacci:23:6:14:2
5475: pushConstant <replaced address 9494412f3107182f> { 1 argument (capturing nothing) → ip-5443 }
5476: pushFromStack 1
5477: pushFromStack 1
5478: pushFromStack 5
5479: pushFromStack 2
5480: traceCallStarts (1 argument)
5481: pushConstant <replaced address 1315f9b01ba30c9f> Examples:fibonacci:fibonacci:3
5482: pushConstant <replaced address 9d267b82107cf22b> { 2 arguments (capturing nothing) → ip-4525 }
5483: pushConstant <replaced address bce25712c50048f4> { 2 arguments (capturing nothing) → ip-5174 }
5484: pushFromStack 2
5485: pushFromStack 2
5486: pushFromStack 8
5487: pushFromStack 3
5488: pushFromStack 3
5489: traceCallStarts (2 arguments)
5490: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
5491: pushConstant <replaced address 96aa8acb98c6c8ca> { 2 arguments (capturing nothing) → ip-5424 }
5492: pushFromStack 1
5493: pushFromStack 1
5494: pushFromStack 0
5495: pushFromStack 11
5496: pushFromStack 3
5497: traceCallStarts (2 arguments)
5498: pushFromStack 0
5499: pushFromStack 0
5500: pushFromStack 10
5501: pushFromStack 4
5502: call with 2 arguments
5503: traceCallEnds without return value
5504: traceCallEnds without return value
5505: traceCallEnds without return value
5506: pushConstant inline builtinToDebugText
5507: pushConstant <replaced address 8383f19ea0a5e146> Builtins::toDebugText:5
5508: pushFromStack 1
5509: pushFromStack 3
5510: pushFromStack 2
5511: tailCall with 12 locals and 1 argument
# Examples:fibonacci:23:6:case-0:didNotMatch
5512: pushConstant <replaced address ea9a293534a31de4> "Usage: `cargo run -- run fibonacci.candy -- <number>`"
5513: popMultipleBelowTop 1
5514: return
# Examples:fibonacci:23:13:doesTagHaveValue:then
5515: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
5516: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5517: pushFromStack 1
5518: pushFromStack 1
5519: panic
5520: popMultipleBelowTop 3
5521: return
# Examples:fibonacci:23:13:calleeIsFunction:else
5522: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
5523: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5524: pushFromStack 1
5525: pushFromStack 1
5526: panic
5527: popMultipleBelowTop 3
5528: return
# Examples:fibonacci:23:6:equals:then
5529: pushFromStack 1
5530: dup by 1
5531: pushConstant inline builtinListGet
5532: pushConstant inline 0
5533: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
5534: pushFromStack 2
5535: pushFromStack 5
5536: pushFromStack 3
5537: pushFromStack 3
5538: call with 2 arguments
5539: pushFromStack 0
5540: createList 1
5541: pushFromStack 0
5542: createTag Match
5543: popMultipleBelowTop 7
5544: return
5545: pushFromStack 1
5546: dup by 2
5547: pushConstant inline builtinListLength
5548: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
5549: pushFromStack 1
5550: pushFromStack 4
5551: pushFromStack 2
5552: call with 1 argument
5553: pushConstant inline builtinEquals
5554: pushConstant inline 1
5555: pushFromStack 1
5556: pushFromStack 1
5557: pushFromStack 4
5558: pushFromStack 6
5559: call with 2 arguments
5560: pushFromStack 7
5561: createFunction with 0 arguments capturing 0 starting at ip-5529
5562: pushConstant inline builtinIfElse
5563: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5564: pushFromStack 1
5565: pushFromStack 5
5566: pushFromStack 4
5567: pushFromStack 3
5568: pushFromStack 12
5569: tailCall with 12 locals and 3 arguments
# Examples:fibonacci:23:6:case-0:matched
5570: pushFromStack 1
5571: dup by 1
5572: pushConstant inline builtinTagGetValue
5573: pushConstant <replaced address cdbcb70275304920> Examples:fibonacci:23:6:n
5574: pushFromStack 1
5575: pushFromStack 4
5576: pushFromStack 2
5577: call with 1 argument
5578: pushConstant inline builtinListGet
5579: pushConstant inline 0
5580: pushFromStack 1
5581: pushFromStack 3
5582: pushFromStack 2
5583: pushFromStack 6
5584: call with 2 arguments
5585: pushFromStack 0
5586: dup by 2
5587: pushConstant <replaced address df0fcdbc9cad1521> Examples:fibonacci:23:6:7
5588: pushConstant <replaced address 328a0a2dafb24069> { 1 argument (capturing nothing) → ip-629 }
5589: pushFromStack 1
5590: pushFromStack 1
5591: pushFromStack 4
5592: pushFromStack 2
5593: traceCallStarts (1 argument)
5594: pushConstant inline builtinTypeOf
5595: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
5596: pushFromStack 1
5597: pushFromStack 5
5598: pushFromStack 2
5599: call with 1 argument
5600: pushConstant inline builtinEquals
5601: pushConstant inline Text
5602: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
5603: pushFromStack 2
5604: pushFromStack 4
5605: pushFromStack 3
5606: pushFromStack 3
5607: call with 2 arguments
5608: pushFromStack 0
5609: dup by 1
5610: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
5611: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
5612: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
5613: pushFromStack 2
5614: pushFromStack 2
5615: pushFromStack 5
5616: pushFromStack 3
5617: pushFromStack 15
5618: pushFromStack 4
5619: traceCallStarts (3 arguments)
5620: pushFromStack 1
5621: pushFromStack 4
5622: pushFromStack 2
5623: pushFromStack 14
5624: pushFromStack 6
5625: call with 3 arguments
5626: traceCallEnds without return value
5627: pushConstant inline builtinIntParse
5628: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
5629: pushFromStack 1
5630: pushFromStack 16
5631: pushFromStack 2
5632: call with 1 argument
5633: pushFromStack 0
5634: dup by 1
5635: traceCallEnds without return value
5636: pushConstant <replaced address 5329c003639cc079> Examples:fibonacci:23:6:15
5637: pushConstant <replaced address 4ba18d0872ae2383> { 2 arguments (capturing nothing) → ip-4005 }
5638: pushConstant <replaced address 7085c524d75fa5d0> { 1 argument (capturing nothing) → ip-5472 }
5639: pushFromStack 2
5640: pushFromStack 2
5641: pushFromStack 5
5642: pushFromStack 3
5643: pushFromStack 3
5644: traceCallStarts (2 arguments)
5645: pushFromStack 1
5646: pushFromStack 4
5647: pushFromStack 2
5648: pushFromStack 5
5649: call with 2 arguments
5650: pushFromStack 0
5651: dup by 1
5652: traceCallEnds without return value
5653: pushConstant <replaced address 75c6f093036a613c> Examples:fibonacci:23:6:22
5654: pushConstant <replaced address 764ffae9e06c5138> { 1 argument (capturing nothing) → ip-2472 }
5655: pushFromStack 1
5656: pushFromStack 1
5657: pushFromStack 4
5658: pushFromStack 2
5659: traceTailCall (1 argument)
5660: pushFromStack 9
5661: drop
5662: pushFromStack 0
5663: pushFromStack 3
5664: pushFromStack 3
5665: tailCall with 30 locals and 1 argument
# Examples:fibonacci:23:13:doesTagHaveValue:else
5666: pushFromStack 2
5667: dup by 1
5668: pushFromStack 1
5669: dup by 1
5670: pushConstant inline builtinTagWithValue
5671: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5672: pushFromStack 1
5673: pushFromStack 4
5674: pushFromStack 6
5675: pushFromStack 3
5676: tailCall with 5 locals and 2 arguments
# Examples:fibonacci:23:13:calleeIsTag:then
5677: pushFromStack 2
5678: dup by 1
5679: pushFromStack 1
5680: dup by 2
5681: pushConstant inline builtinTagHasValue
5682: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5683: pushFromStack 1
5684: pushFromStack 4
5685: pushFromStack 2
5686: call with 1 argument
5687: pushFromStack 5
5688: pushFromStack 5
5689: createFunction with 0 arguments capturing 1, 0 starting at ip-5666
5690: pushConstant inline builtinIfElse
5691: pushConstant <replaced address 830a0c5f20961151> { 0 arguments (capturing nothing) → ip-5515 }
5692: pushFromStack 1
5693: pushFromStack 6
5694: pushFromStack 2
5695: pushFromStack 5
5696: pushFromStack 10
5697: tailCall with 11 locals and 3 arguments
# Examples:fibonacci:23:13:hasCorrectNumberOfArguments:then
5698: pushFromStack 2
5699: dup by 2
5700: pushFromStack 1
5701: dup by 2
5702: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5703: pushFromStack 0
5704: pushFromStack 3
5705: pushFromStack 5
5706: pushFromStack 2
5707: traceTailCall (1 argument)
5708: pushFromStack 2
5709: pushFromStack 4
5710: pushFromStack 2
5711: tailCall with 4 locals and 1 argument
# Examples:fibonacci:23:13:hasCorrectNumberOfArguments:else
5712: pushFromStack 1
5713: dup by 1
5714: pushConstant inline builtinToDebugText
5715: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5716: pushFromStack 1
5717: pushFromStack 4
5718: pushFromStack 2
5719: call with 1 argument
5720: pushConstant inline builtinTextConcatenate
5721: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
5722: pushFromStack 1
5723: pushFromStack 1
5724: pushFromStack 4
5725: pushFromStack 6
5726: call with 2 arguments
5727: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
5728: pushFromStack 3
5729: pushFromStack 2
5730: pushFromStack 2
5731: pushFromStack 8
5732: call with 2 arguments
5733: pushFromStack 0
5734: pushFromStack 7
5735: panic
5736: popMultipleBelowTop 10
5737: return
# Examples:fibonacci:23:13:calleeIsFunction:then
5738: pushFromStack 2
5739: dup by 1
5740: pushFromStack 1
5741: dup by 2
5742: pushConstant inline builtinGetArgumentCount
5743: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5744: pushFromStack 1
5745: pushFromStack 4
5746: pushFromStack 2
5747: call with 1 argument
5748: pushFromStack 0
5749: dup by 1
5750: pushConstant inline builtinEquals
5751: pushConstant inline 1
5752: pushFromStack 1
5753: pushFromStack 3
5754: pushFromStack 2
5755: pushFromStack 6
5756: call with 2 arguments
5757: pushFromStack 8
5758: pushFromStack 8
5759: createFunction with 0 arguments capturing 1, 0 starting at ip-5698
5760: pushFromStack 6
5761: createFunction with 0 arguments capturing 0 starting at ip-5712
5762: pushConstant inline builtinIfElse
5763: pushFromStack 0
5764: pushFromStack 7
5765: pushFromStack 5
5766: pushFromStack 4
5767: pushFromStack 14
5768: tailCall with 15 locals and 3 arguments
# Examples:fibonacci:23:13:calleeIsTag:else
5769: pushFromStack 3
5770: dup by 1
5771: pushFromStack 2
5772: dup by 1
5773: pushFromStack 1
5774: dup by 1
5775: pushConstant inline builtinEquals
5776: pushConstant inline Function
5777: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5778: pushFromStack 2
5779: pushFromStack 5
5780: pushFromStack 3
5781: pushFromStack 3
5782: call with 2 arguments
5783: pushFromStack 7
5784: pushFromStack 7
5785: createFunction with 0 arguments capturing 1, 0 starting at ip-5738
5786: pushConstant inline builtinIfElse
5787: pushConstant <replaced address bd73586132845b64> { 0 arguments (capturing nothing) → ip-5522 }
5788: pushFromStack 1
5789: pushFromStack 6
5790: pushFromStack 4
5791: pushFromStack 3
5792: pushFromStack 10
5793: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:23
5794: pushFromStack 1
5795: dup by 6
5796: pushConstant <replaced address 421b7208a9f93281> Examples:fibonacci:23:5
5797: pushConstant <replaced address 0a03aa928c1cc741> { 2 arguments (capturing nothing) → ip-751 }
5798: pushConstant inline Arguments
5799: pushFromStack 2
5800: pushFromStack 2
5801: pushFromStack 6
5802: pushFromStack 3
5803: pushFromStack 3
5804: traceCallStarts (2 arguments)
5805: pushConstant inline builtinTypeOf
5806: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
5807: pushFromStack 1
5808: pushFromStack 7
5809: pushFromStack 2
5810: call with 1 argument
5811: pushConstant inline builtinEquals
5812: pushConstant inline Struct
5813: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
5814: pushFromStack 2
5815: pushFromStack 4
5816: pushFromStack 3
5817: pushFromStack 3
5818: call with 2 arguments
5819: pushFromStack 0
5820: dup by 3
5821: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
5822: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
5823: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
5824: pushFromStack 2
5825: pushFromStack 2
5826: pushFromStack 5
5827: pushFromStack 3
5828: pushFromStack 16
5829: pushFromStack 4
5830: traceCallStarts (3 arguments)
5831: pushFromStack 1
5832: pushFromStack 4
5833: pushFromStack 2
5834: pushFromStack 15
5835: pushFromStack 6
5836: call with 3 arguments
5837: traceCallEnds without return value
5838: pushConstant inline builtinStructHasKey
5839: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
5840: pushFromStack 1
5841: pushFromStack 18
5842: pushFromStack 15
5843: pushFromStack 3
5844: call with 2 arguments
5845: pushFromStack 0
5846: dup by 1
5847: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
5848: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
5849: pushFromStack 1
5850: pushFromStack 8
5851: pushFromStack 4
5852: pushFromStack 3
5853: pushFromStack 22
5854: pushFromStack 4
5855: traceCallStarts (3 arguments)
5856: pushFromStack 7
5857: pushFromStack 3
5858: pushFromStack 2
5859: pushFromStack 21
5860: pushFromStack 5
5861: call with 3 arguments
5862: traceCallEnds without return value
5863: pushConstant inline builtinStructGet
5864: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
5865: pushFromStack 1
5866: pushFromStack 24
5867: pushFromStack 21
5868: pushFromStack 3
5869: call with 2 arguments
5870: pushFromStack 0
5871: dup by 1
5872: traceCallEnds without return value
5873: pushConstant <replaced address 939833bfd11b3d16> Examples:fibonacci:23:6
5874: pushFromStack 20
5875: pushFromStack 2
5876: pushFromStack 2
5877: call with 1 argument
5878: pushConstant inline List
5879: pushFromStack 19
5880: pushFromStack 1
5881: pushFromStack 3
5882: pushFromStack 5
5883: call with 2 arguments
5884: pushFromStack 4
5885: createFunction with 0 arguments capturing 0 starting at ip-5545
5886: pushConstant inline builtinIfElse
5887: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
5888: pushFromStack 1
5889: pushFromStack 5
5890: pushFromStack 4
5891: pushFromStack 3
5892: pushFromStack 11
5893: call with 3 arguments
5894: pushFromStack 0
5895: dup by 1
5896: pushConstant inline builtinTagWithoutValue
5897: pushFromStack 0
5898: pushFromStack 2
5899: pushFromStack 11
5900: call with 1 argument
5901: pushConstant inline Match
5902: pushFromStack 28
5903: pushFromStack 2
5904: pushFromStack 2
5905: pushFromStack 14
5906: call with 2 arguments
5907: pushFromStack 4
5908: createFunction with 0 arguments capturing 0 starting at ip-5570
5909: pushConstant <replaced address d486ce1647b81be6> { 0 arguments (capturing nothing) → ip-5512 }
5910: pushFromStack 9
5911: pushFromStack 4
5912: pushFromStack 3
5913: pushFromStack 3
5914: pushFromStack 19
5915: call with 3 arguments
5916: pushFromStack 0
5917: dup by 1
5918: pushConstant <replaced address 64b8a29849c6d344> Examples:fibonacci:23:12
5919: pushConstant inline Stdout
5920: pushFromStack 1
5921: pushFromStack 41
5922: pushFromStack 45
5923: pushFromStack 3
5924: pushFromStack 3
5925: traceCallStarts (2 arguments)
5926: pushFromStack 31
5927: pushFromStack 31
5928: pushFromStack 34
5929: pushFromStack 32
5930: pushFromStack 5
5931: pushFromStack 4
5932: traceCallStarts (3 arguments)
5933: pushFromStack 30
5934: pushFromStack 33
5935: pushFromStack 31
5936: pushFromStack 4
5937: pushFromStack 35
5938: call with 3 arguments
5939: traceCallEnds without return value
5940: pushFromStack 28
5941: pushFromStack 45
5942: pushFromStack 3
5943: pushFromStack 30
5944: call with 2 arguments
5945: pushFromStack 0
5946: dup by 1
5947: pushFromStack 26
5948: pushFromStack 33
5949: pushFromStack 2
5950: pushFromStack 28
5951: pushFromStack 7
5952: pushFromStack 4
5953: traceCallStarts (3 arguments)
5954: pushFromStack 32
5955: pushFromStack 1
5956: pushFromStack 27
5957: pushFromStack 6
5958: pushFromStack 30
5959: call with 3 arguments
5960: traceCallEnds without return value
5961: pushFromStack 24
5962: pushFromStack 47
5963: pushFromStack 5
5964: pushFromStack 26
5965: call with 2 arguments
5966: pushFromStack 0
5967: dup by 2
5968: traceCallEnds without return value
5969: pushConstant <replaced address b635644f70e8ddd9> Examples:fibonacci:23:13
5970: pushFromStack 43
5971: pushFromStack 2
5972: pushFromStack 2
5973: call with 1 argument
5974: pushFromStack 0
5975: dup by 1
5976: pushConstant inline Tag
5977: pushFromStack 42
5978: pushFromStack 2
5979: pushFromStack 2
5980: pushFromStack 5
5981: call with 2 arguments
5982: pushFromStack 10
5983: pushFromStack 5
5984: createFunction with 0 arguments capturing 1, 0 starting at ip-5677
5985: pushFromStack 2
5986: pushFromStack 2
5987: pushFromStack 7
5988: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-5769
5989: pushFromStack 43
5990: drop
5991: pushFromStack 37
5992: drop
5993: pushFromStack 14
5994: drop
5995: pushFromStack 12
5996: drop
5997: pushFromStack 27
5998: pushFromStack 8
5999: pushFromStack 6
6000: pushFromStack 3
6001: pushFromStack 14
6002: tailCall with 59 locals and 3 arguments
# Examples:fibonacci:
6003: pushConstant <replaced address 378d23a23b1680ba> { 1 argument (capturing nothing) → ip-5794 }
6004: popMultipleBelowTop 1
6005: return
