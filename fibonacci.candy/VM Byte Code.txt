# VM Byte Code for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# Constant heap
<replaced address 017970d57aa05a94>: Core:result:mapOr:2
<replaced address 05251864681a3500>: Builtins::typeOf:5
<replaced address 055673228b46d5b7>: Core:result:getValue:2
<replaced address 056aa7001fbe6a6f>: "`tag | typeIs Tag` was not satisfied"
<replaced address 05cf6ed3a3e1ef22>: "NotUtf8"
<replaced address 05d3c942faefe462>: { 1 argument (capturing nothing) → ip-938 }
<replaced address 05e45b91c25d1055>: Core:result:flatMap:2
<replaced address 07c1052bec280409>: "`then | typeIs Function` was not satisfied"
<replaced address 09452ee45e345fc6>: Examples:fibonacci:fibonacci:2:11
<replaced address 0ab9b0f79d037b64>: Examples:fibonacci:21:8
<replaced address 0e5dcb874e6dfa57>: Core:result:map:2
<replaced address 0eca58389ad22836>: Core:result:mapOrElse:30:2
<replaced address 0f59d2d5f5f1d623>: Core:result:mapOrElse:4
<replaced address 0fea7d5fa5afcc30>: Builtins::typeIs:25
<replaced address 1013dd11bb18c965>: { 3 arguments (capturing nothing) → ip-1325 }
<replaced address 1076a7c75d895c72>: "NotAnInteger"
<replaced address 13077cf4fbb4e55a>: Builtins::tagGetValue:5
<replaced address 13bae94f69b93dec>: Builtins::ifElse:11
<replaced address 13bbc38331a2c1a7>: Builtins::intSubtract:18
<replaced address 14cee9bee8ce4007>: Examples:fibonacci:fibonacci:2:14
<replaced address 165fc9386f0eaeea>: Core:function:is1:13
<replaced address 18dc4adab2c8e8df>: "`struct | ✨.structHasKey key` was not satisfied"
<replaced address 1f44a429f4531e2d>: Builtins::ifElse:14
<replaced address 1f92019f89733a43>: Builtins::structGet:12
<replaced address 216d199efe6cdff8>: Builtins::intAdd:18
<replaced address 2289adb8e393b29d>: { 2 arguments (capturing nothing) → ip-1531 }
<replaced address 255d07f7c5e32c69>: "Expected Error, got "
<replaced address 266d488b0b2596a5>: Core:result:mapOrElse:2
<replaced address 2749496cbbd972e7>: "`b | typeIs Int` was not satisfied"
<replaced address 2a8be7103eabae0e>: "Ok"
<replaced address 2ace5f047eecfe6e>: Builtins::ifElse:1
<replaced address 2db459441af47a3a>: Builtins::intParse:11
<replaced address 2ded061b072e15be>: { 0 arguments (capturing nothing) → ip-0 }
<replaced address 2e5df8c541272e37>: Examples:fibonacci:compareTo:10
<replaced address 36eebe9168aef0b0>: "The `reason` must be a text."
<replaced address 3dcd25f189b573e4>: Examples:fibonacci:fibonacci:2:13:11
<replaced address 3eca0e872d043602>: Builtins::typeIs:19
<replaced address 406b106bdb596f26>: "Expected False, got "
<replaced address 41e70e1c83094f2c>: Builtins::tagGetValue:11
<replaced address 41fcadf3280286e7>: Builtins::intCompareTo:18
<replaced address 422f322f2940db06>: Builtins::structGet:21
<replaced address 4302703a6cd3fa75>: Builtins::getArgumentCount:5
<replaced address 440a4a2e9e3a80bb>: Builtins::intAdd:5
<replaced address 446ed9866aa91731>: { 2 arguments (capturing nothing) → ip-1855 }
<replaced address 4522fcf9aef1c577>: Examples:fibonacci:21:7
<replaced address 4672d383c7509a9f>: "`then | getArgumentCount | equals 0` was not satisfied"
<replaced address 4726a72499ec84f0>: { 0 arguments (capturing nothing) → ip-2166 }
<replaced address 476c77b2172884e8>: Core:result:mapOr:14
<replaced address 4ac82c46ce2925c1>: Examples:fibonacci:fibonacci:2:13:34
<replaced address 4ba19bf7dddc0462>: "Expected a Tag, got `"
<replaced address 4d094d47213a5655>: "Equal"
<replaced address 4fc1284a2ffbaf9e>: Core:result:flatMap:19:2
<replaced address 4fd190ed4a0ecdb3>: { 0 arguments (capturing nothing) → ip-97 }
<replaced address 51f524ae63c4af0b>: "Tag"
<replaced address 53982ca68e093bdd>: Core:result:map:16
<replaced address 568420a2a5125080>: "GetNextRequest"
<replaced address 5696024af887004c>: { 1 argument (capturing nothing) → ip-2028 }
<replaced address 56cefe855ac72448>: "`function.is1 okMapper` was not satisfied"
<replaced address 59fb4da19b618456>: Builtins::structGet:5
<replaced address 5b10e82ed1489edf>: { 3 arguments (capturing nothing) → ip-31 }
<replaced address 5c93ea6ba248e40c>: Builtins::intParse:5
<replaced address 5daeb472a61ff7f8>: "False"
<replaced address 5e7fed672c5c456a>: Core:result:mapOr:4
<replaced address 614077b0f92cd7f0>: "Struct"
<replaced address 65869b7b7c4defee>: "`a | typeIs Int` was not satisfied"
<replaced address 67317fa1011ddaa1>: "Expected a List, got `"
<replaced address 6732a87eefdda5c6>: "Nothing"
<replaced address 6912ed2aef33db36>: Core:result:mapOrElse:30:value#1
<replaced address 6b24044ae391e0b7>: "Int"
<replaced address 6cdccd509afc921c>: "Text"
<replaced address 6d46f30442b470ad>: (Match,)
<replaced address 6fe1fdb2563c07ad>: "Arguments"
<replaced address 7008c023be883ff4>: Builtins::ifElse:19
<replaced address 70a2d1d7839b24a4>: Examples:fibonacci:
<replaced address 7421c808ee3a61d5>: Examples:fibonacci:21:8:28
<replaced address 775a8fa4d727f34d>: Core:result:mapOrElse:30:5
<replaced address 7b5c0ed7f870b37f>: "`conditionIsBool` was not satisfied"
<replaced address 7bcd4928d5463b0f>: { 0 arguments (capturing nothing) → ip-1877 }
<replaced address 7c65f9f539f0d0fa>: Builtins::intCompareTo:11
<replaced address 7c987e313b2f2519>: Builtins::structGet:14
<replaced address 7d04a0accae5758c>: Builtins::intSubtract:5
<replaced address 7dd5e7b8b509ae51>: Examples:fibonacci:21:8:n
<replaced address 7ed3a33e63f326bc>: Examples:fibonacci:21:16
<replaced address 806428a0d5c12ae4>: Examples:fibonacci:21:8:9
<replaced address 807d7368f1a4edd6>: "Builtin"
<replaced address 80f4eaa53f4876cd>: anonymous:$generated::needs
<replaced address 8305a580432558f8>: { 0 arguments (capturing nothing) → ip-606 }
<replaced address 834388196300f4fb>: "`function | typeIs Function` was not satisfied"
<replaced address 8373c51cbce1817b>: Core:result:mapOrElse:28
<replaced address 8383f19ea0a5e146>: Builtins::toDebugText:5
<replaced address 8569f4e46fac8013>: "Expected tag to have a value, but it doesn't have any."
<replaced address 859014e38a16c47f>: "HttpServer"
<replaced address 871c35d8d3bc0076>: Builtins::ifElse:41
<replaced address 89823731ff102ef8>: { 0 arguments (capturing nothing) → ip-94 }
<replaced address 89be9cdfac8d8517>: Examples:fibonacci:recursive:0:5
<replaced address 8dbb18a7278b48a0>: "`."
<replaced address 8e445bc6862a7d85>: { 3 arguments (capturing nothing) → ip-397 }
<replaced address 91bca86c00256cf1>: Examples:fibonacci:recursive:5
<replaced address 91ccd4b75c545de9>: "The `condition` must be either `True` or `False`."
<replaced address 921784a50cc37e2a>: (NoMatch, "Expected tag to have a value, but it doesn't have any.")
<replaced address 92aa0d19152d9fd3>: "`text | typeIs Text` was not satisfied"
<replaced address 94de2b63568838d2>: Core:function:is1:11:3
<replaced address 957eb8ad35ecdba0>: "`else | getArgumentCount | equals 0` was not satisfied"
<replaced address 97779e55eaf4eb66>: Examples:fibonacci:21:8:19
<replaced address 996cc5f08093ac25>: "`struct | typeIs Struct` was not satisfied"
<replaced address 998b33832a916631>: Core:result:map:20
<replaced address 999eaa115035be18>: "Expected True, got "
<replaced address 9a411ed2de02bbfd>: "`else | typeIs Function` was not satisfied"
<replaced address 9a873ad1d21541fd>: Core:result:mapOrElse:26
<replaced address 9aa3c3ae7117a223>: "Expected 1 item, got "
<replaced address 9b692663aeb40da7>: "SendResponse"
<replaced address 9beb0cb1b775254c>: "Close"
<replaced address 9c44edfdf54b3056>: Examples:fibonacci:fibonacci:2:13:33
<replaced address 9c61ef87641ba65d>: "NoMatch"
<replaced address 9e34e4f0d7d85134>: Builtins::tagGetValue:19
<replaced address 9ee8514b45dca9c6>: Builtins::ifElse:25
<replaced address 9eed8aae34c53a02>: Builtins::tagGetValue:13
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a2c03f1a6f3f5683>: { 0 arguments (capturing nothing) → ip-1009 }
<replaced address a2f6d53168c96b64>: "GetRandomBytes"
<replaced address a84ff690d98aeae1>: Core:result:getValue:4
<replaced address aa720c25d0768a07>: Builtins::ifElse:28
<replaced address ab458b1cc1453acc>: Builtins::intCompareTo:5
<replaced address b1086454c3fcc390>: "`is result` was not satisfied"
<replaced address b1574ef59cb20f81>: Core:result:map:4
<replaced address b19ab086e749027f>: Core:result:mapOrElse:16
<replaced address b22db74f013bcc02>: { 1 argument (capturing nothing) → ip-650 }
<replaced address b5203f97f827ee8e>: Core:result:flatMap:21
<replaced address b66aa5e8eefa60de>: "Function"
<replaced address b7d5083e90b08e9b>: Builtins::getArgumentCount:11
<replaced address ba8faee21655e5cb>: Core:result:mapOrElse:30:value
<replaced address bbcfa9d6e3f11acf>: "Greater"
<replaced address bc3f0fb63b05190e>: Core:result:mapOr:16
<replaced address bd7e643bf52790f0>: "Stdout"
<replaced address bf636c45eebeab63>: Core:result:getValue:14
<replaced address c0a9fa7282c1cecf>: Core:result:flatMap:16
<replaced address c4f0291b7762e5a8>: "`minuend | typeIs Int` was not satisfied"
<replaced address c7c8ca90c59ef94f>: Core:result:mapOr:21
<replaced address c841b45ecc45bd33>: "True"
<replaced address c86ac4aab1e5d003>: Core:result:map:14
<replaced address c92756745a9e6460>: "Expected Ok, got "
<replaced address cf37b22a7a5dec95>: Builtins::intAdd:11
<replaced address d05064f58b153151>: Examples:fibonacci:21:17
<replaced address d7629bf6e871f5e8>: "Error"
<replaced address d7bd702797f58f51>: Core:result:flatMap:14
<replaced address d962951e9f7283f6>: "`function.is1 errorMapper` was not satisfied"
<replaced address dbdea21a2e534c1a>: { 2 arguments (capturing nothing) → ip-1824 }
<replaced address dc704463e00c0b29>: { 0 arguments (capturing nothing) → ip-3 }
<replaced address e07a41ae6e9d6c51>: Core:result:mapOrElse:30
<replaced address e128eb82cb40fae3>: Core:result:is:1
<replaced address e13459ee6346ab5d>: "List"
<replaced address e1d6728501bc6b89>: Builtins::equals:6
<replaced address e2ca64edcf3c85fe>: Core:result:map:19:3
<replaced address e4db5827e264d41a>: Builtins::ifElse:5
<replaced address e8c2dfb7598c479d>: "`tag | ✨.tagHasValue` was not satisfied"
<replaced address ea9a293534a31de4>: "Usage: `cargo run -- run fibonacci.candy -- <number>`"
<replaced address eaff3e6d4bab56cb>: "Expected tag to not have a value, but it has one: `"
<replaced address ec50643a6293694f>: Examples:fibonacci:fibonacci:2:13:12
<replaced address edc1afb51c6d3aeb>: Examples:fibonacci:fibonacci:2:13:32
<replaced address ee78a67daaae8b1b>: "."
<replaced address eed0e5dcad294fd3>: Core:result:flatMap:4
<replaced address ef0df736712a6b95>: "Request"
<replaced address ef5d2e500159f5dd>: "No case matched the given expression."
<replaced address f2debbb68786f674>: "Less"
<replaced address f8465d20e0be15a1>: Core:result:mapOrElse:14
<replaced address f8a743cca2278691>: Examples:fibonacci:recursive:0:0:3
<replaced address f8b6a4bee6b9a66d>: { 2 arguments (capturing nothing) → ip-1643 }
<replaced address f8bed0fc3ef0a4f6>: "Stdin"
<replaced address fb36281f9aababce>: Builtins::ifElse:33
<replaced address fc72bda9feb3654d>: { 1 argument (capturing nothing) → ip-1577 }
<replaced address fdc28bf12cff5770>: { 2 arguments (capturing nothing) → ip-1442 }
<replaced address fe9c0de6d1457318>: { 1 argument (capturing nothing) → ip-1864 }

# Instructions
# Builtins::ifElse:1:case-0:matched, Core:result:is:1:case-0:matched, Core:check:check:1:case-0:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:not:6:case-1:matched, Builtins::not:1:case-1:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, anonymous:$generated::needs:isConditionTrue:then, Core:bool:is:1:case-0:matched, Builtins::isNonNegative:13:case-0:matched
   0: pushConstant inline True
   1: popMultipleBelowTop 1
   2: return
# Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:text:29:isMatch:then, Core:int:29:isMatch:then, Core:iterable:map:19:11:1:isMatch:then, Core::30:isMatch:then, Core:list:29:isMatch:then, Core:iterable:withIndex:11:1:isMatch:then, Examples:fibonacci:19:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:controlFlow:50:isMatch:then, Core::41:isMatch:then, Core:iterable:19:isMatch:then, Core:iterable:84:2:11:1:isMatch:then, Core:iterable:take:33:1:isMatch:then, Core:bool:9:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:iterable:82:11:1:isMatch:then, Core:iterable:reduceLeft:38:1:isMatch:then, Core:iterable:takeWhile:2:11:1:isMatch:then, Core::102:isMatch:then, Core::164:isMatch:then, Core:check:9:isMatch:then, Core:type:19:isMatch:then, Core:result:30:isMatch:then, Core:list:40:isMatch:then, Core:iterable:84:2:11:7:15:1:isMatch:then, Core::153:isMatch:then, Core:iterable:generateWithState:14:0:11:1:isMatch:then, Core:iterable:30:isMatch:then, anonymous:$generated::needs:condition:then, Core:controlFlow:if:27, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:int:40:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Examples:fibonacci:then, Core::19:isMatch:then, anonymous:$generated::needs:isReasonText:then, Core:result:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:iterable:withIndex:11:14:1:isMatch:then, Core:fixedDecimal:30:isMatch:then, anonymous:$generated::needs:isConditionBool:then, Core:list:generate:59:1:isMatch:then, Core:text:40:isMatch:then, Core:tag:29:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:struct:19:isMatch:then, Core:function:19:isMatch:then, Core:controlFlow:29:isMatch:then
   3: pushConstant inline Nothing
   4: popMultipleBelowTop 1
   5: return
# anonymous:$generated::needs:isConditionTrue:else
   6: pushConstant inline builtinEquals
   7: pushConstant inline False
   8: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
   9: pushFromStack 2
  10: pushFromStack 5
  11: pushFromStack 3
  12: pushFromStack 3
  13: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
  14: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
  15: pushFromStack 0
  16: pushFromStack 3
  17: panic
  18: popMultipleBelowTop 3
  19: return
# anonymous:$generated::needs:isReasonText:else
  20: pushConstant <replaced address 36eebe9168aef0b0> "The `reason` must be a text."
  21: pushFromStack 0
  22: pushFromStack 3
  23: panic
  24: popMultipleBelowTop 3
  25: return
# anonymous:$generated::needs:condition:else
  26: pushFromStack 2
  27: pushFromStack 2
  28: panic
  29: popMultipleBelowTop 3
  30: return
# anonymous:$generated::needs
  31: pushFromStack 3
  32: dup by 2
  33: pushFromStack 2
  34: dup by 1
  35: pushConstant inline builtinEquals
  36: pushConstant inline True
  37: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  38: pushFromStack 2
  39: pushFromStack 7
  40: pushFromStack 3
  41: pushFromStack 3
  42: call with 2 arguments
  43: pushFromStack 7
  44: createFunction with 0 arguments capturing 0 starting at ip-6
  45: pushConstant inline builtinIfElse
  46: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
  47: pushFromStack 1
  48: pushFromStack 5
  49: pushFromStack 2
  50: pushFromStack 5
  51: pushFromStack 9
  52: call with 3 arguments
  53: pushFromStack 9
  54: createFunction with 0 arguments capturing 0 starting at ip-14
  55: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
  56: pushFromStack 5
  57: pushFromStack 4
  58: pushFromStack 2
  59: pushFromStack 4
  60: pushFromStack 13
  61: call with 3 arguments
  62: pushConstant inline builtinTypeOf
  63: pushFromStack 0
  64: pushFromStack 17
  65: pushFromStack 6
  66: call with 1 argument
  67: pushConstant inline Text
  68: pushFromStack 15
  69: pushFromStack 2
  70: pushFromStack 2
  71: pushFromStack 9
  72: call with 2 arguments
  73: pushFromStack 7
  74: createFunction with 0 arguments capturing 0 starting at ip-20
  75: pushFromStack 12
  76: pushFromStack 3
  77: pushFromStack 9
  78: pushFromStack 3
  79: pushFromStack 20
  80: call with 3 arguments
  81: pushFromStack 22
  82: pushFromStack 22
  83: createFunction with 0 arguments capturing 1, 0 starting at ip-26
  84: pushFromStack 10
  85: drop
  86: pushFromStack 3
  87: drop
  88: pushFromStack 16
  89: pushFromStack 19
  90: pushFromStack 13
  91: pushFromStack 3
  92: pushFromStack 24
  93: tailCall with 27 locals and 3 arguments
# Core:list:first:6:equals:then, Core:check:check:1:equals:then, Builtins::not:1:equals:then, Core:bool:not:6:equals:then, Core:bool:lazyAnd:18:equals:then, Builtins::ifElse:1:equals:then, Core:bool:is:1:equals:then, Builtins::isNonNegative:13:equals:then, Core:int:pow:21:4:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Core:list:single:6:equals:then, Core:bool:lazyOr:18:equals:then
  94: pushConstant <replaced address 6d46f30442b470ad> (Match,)
  95: popMultipleBelowTop 1
  96: return
# Core:list:isValidInsertIndex:21, Core:function:is1:12, Core:function:is3:12, Core:check:check:1:case-0:didNotMatch, Core:function:is2:12, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::ifElse:1:case-0:didNotMatch, anonymous:$generated::needs:isConditionTrue:else, Core:function:is5:12, Core:fixedDecimal:is:1:case-0:didNotMatch, Builtins::isNonNegative:13:case-1:matched, Core:bool:not:6:case-0:matched, Core:bool:is:1:case-0:didNotMatch, Core:list:isValidIndex:21, Builtins::not:1:case-0:matched, Core:result:is:1:case-0:didNotMatch, Core:function:is4:12, Core:function:is0:12, Core:bool:lazyAnd:18:case-1:matched
  97: pushConstant inline False
  98: popMultipleBelowTop 1
  99: return
# Builtins::ifElse:1:equals:else
 100: pushConstant inline builtinTagGetValue
 101: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 102: pushFromStack 1
 103: pushFromStack 4
 104: pushFromStack 2
 105: call with 1 argument
 106: pushConstant inline builtinToDebugText
 107: pushFromStack 0
 108: pushFromStack 2
 109: pushFromStack 4
 110: call with 1 argument
 111: pushConstant inline builtinTextConcatenate
 112: pushConstant <replaced address eaff3e6d4bab56cb> "Expected tag to not have a value, but it has one: `"
 113: pushFromStack 1
 114: pushFromStack 1
 115: pushFromStack 4
 116: pushFromStack 8
 117: call with 2 arguments
 118: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 119: pushFromStack 3
 120: pushFromStack 2
 121: pushFromStack 2
 122: pushFromStack 10
 123: call with 2 arguments
 124: pushConstant inline NoMatch
 125: pushFromStack 0
 126: pushFromStack 2
 127: createList 2
 128: popMultipleBelowTop 13
 129: return
# Builtins::ifElse:1:equals:then
 130: pushFromStack 1
 131: dup by 1
 132: pushConstant inline builtinTagHasValue
 133: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 134: pushFromStack 1
 135: pushFromStack 4
 136: pushFromStack 2
 137: call with 1 argument
 138: pushConstant inline builtinEquals
 139: pushConstant inline False
 140: pushFromStack 1
 141: pushFromStack 1
 142: pushFromStack 4
 143: pushFromStack 6
 144: call with 2 arguments
 145: pushFromStack 7
 146: createFunction with 0 arguments capturing 0 starting at ip-100
 147: pushConstant inline builtinIfElse
 148: pushConstant <replaced address 89823731ff102ef8> { 0 arguments (capturing nothing) → ip-94 }
 149: pushFromStack 1
 150: pushFromStack 5
 151: pushFromStack 2
 152: pushFromStack 5
 153: pushFromStack 12
 154: tailCall with 12 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 155: pushConstant inline builtinToDebugText
 156: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 157: pushFromStack 1
 158: pushFromStack 4
 159: pushFromStack 2
 160: call with 1 argument
 161: pushConstant inline builtinTextConcatenate
 162: pushConstant <replaced address 999eaa115035be18> "Expected True, got "
 163: pushFromStack 1
 164: pushFromStack 1
 165: pushFromStack 4
 166: pushFromStack 6
 167: call with 2 arguments
 168: pushConstant <replaced address ee78a67daaae8b1b> "."
 169: pushFromStack 3
 170: pushFromStack 2
 171: pushFromStack 2
 172: pushFromStack 8
 173: call with 2 arguments
 174: pushConstant inline NoMatch
 175: pushFromStack 0
 176: pushFromStack 2
 177: createList 2
 178: popMultipleBelowTop 11
 179: return
# Builtins::ifElse:1:equals:then
 180: pushFromStack 1
 181: dup by 1
 182: pushConstant inline builtinTagWithoutValue
 183: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 184: pushFromStack 1
 185: pushFromStack 4
 186: pushFromStack 2
 187: call with 1 argument
 188: pushFromStack 0
 189: dup by 1
 190: pushConstant inline builtinEquals
 191: pushConstant inline True
 192: pushFromStack 1
 193: pushFromStack 1
 194: pushFromStack 4
 195: pushFromStack 6
 196: call with 2 arguments
 197: pushFromStack 7
 198: createFunction with 0 arguments capturing 0 starting at ip-130
 199: pushFromStack 5
 200: createFunction with 0 arguments capturing 0 starting at ip-155
 201: pushConstant inline builtinIfElse
 202: pushFromStack 0
 203: pushFromStack 6
 204: pushFromStack 5
 205: pushFromStack 4
 206: pushFromStack 13
 207: tailCall with 13 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 208: pushConstant inline builtinToDebugText
 209: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 210: pushFromStack 1
 211: pushFromStack 4
 212: pushFromStack 2
 213: call with 1 argument
 214: pushConstant inline builtinTextConcatenate
 215: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 216: pushFromStack 1
 217: pushFromStack 1
 218: pushFromStack 4
 219: pushFromStack 6
 220: call with 2 arguments
 221: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 222: pushFromStack 3
 223: pushFromStack 2
 224: pushFromStack 2
 225: pushFromStack 8
 226: call with 2 arguments
 227: pushConstant inline NoMatch
 228: pushFromStack 0
 229: pushFromStack 2
 230: createList 2
 231: popMultipleBelowTop 11
 232: return
# Builtins::ifElse:1:isMatch:then
 233: pushFromStack 1
 234: popMultipleBelowTop 2
 235: return
# Builtins::ifElse:1:equals:else
 236: pushConstant inline builtinTagGetValue
 237: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 238: pushFromStack 1
 239: pushFromStack 4
 240: pushFromStack 2
 241: call with 1 argument
 242: pushConstant inline builtinToDebugText
 243: pushFromStack 0
 244: pushFromStack 2
 245: pushFromStack 4
 246: call with 1 argument
 247: pushConstant inline builtinTextConcatenate
 248: pushConstant <replaced address eaff3e6d4bab56cb> "Expected tag to not have a value, but it has one: `"
 249: pushFromStack 1
 250: pushFromStack 1
 251: pushFromStack 4
 252: pushFromStack 8
 253: call with 2 arguments
 254: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 255: pushFromStack 3
 256: pushFromStack 2
 257: pushFromStack 2
 258: pushFromStack 10
 259: call with 2 arguments
 260: pushConstant inline NoMatch
 261: pushFromStack 0
 262: pushFromStack 2
 263: createList 2
 264: popMultipleBelowTop 13
 265: return
# Builtins::ifElse:1:equals:then
 266: pushFromStack 1
 267: dup by 1
 268: pushConstant inline builtinTagHasValue
 269: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 270: pushFromStack 1
 271: pushFromStack 4
 272: pushFromStack 2
 273: call with 1 argument
 274: pushConstant inline builtinEquals
 275: pushConstant inline False
 276: pushFromStack 1
 277: pushFromStack 1
 278: pushFromStack 4
 279: pushFromStack 6
 280: call with 2 arguments
 281: pushFromStack 7
 282: createFunction with 0 arguments capturing 0 starting at ip-236
 283: pushConstant inline builtinIfElse
 284: pushConstant <replaced address 89823731ff102ef8> { 0 arguments (capturing nothing) → ip-94 }
 285: pushFromStack 1
 286: pushFromStack 5
 287: pushFromStack 2
 288: pushFromStack 5
 289: pushFromStack 12
 290: tailCall with 12 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 291: pushConstant inline builtinToDebugText
 292: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 293: pushFromStack 1
 294: pushFromStack 4
 295: pushFromStack 2
 296: call with 1 argument
 297: pushConstant inline builtinTextConcatenate
 298: pushConstant <replaced address 406b106bdb596f26> "Expected False, got "
 299: pushFromStack 1
 300: pushFromStack 1
 301: pushFromStack 4
 302: pushFromStack 6
 303: call with 2 arguments
 304: pushConstant <replaced address ee78a67daaae8b1b> "."
 305: pushFromStack 3
 306: pushFromStack 2
 307: pushFromStack 2
 308: pushFromStack 8
 309: call with 2 arguments
 310: pushConstant inline NoMatch
 311: pushFromStack 0
 312: pushFromStack 2
 313: createList 2
 314: popMultipleBelowTop 11
 315: return
# Builtins::ifElse:1:equals:then
 316: pushFromStack 1
 317: dup by 1
 318: pushConstant inline builtinTagWithoutValue
 319: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 320: pushFromStack 1
 321: pushFromStack 4
 322: pushFromStack 2
 323: call with 1 argument
 324: pushFromStack 0
 325: dup by 1
 326: pushConstant inline builtinEquals
 327: pushConstant inline False
 328: pushFromStack 1
 329: pushFromStack 1
 330: pushFromStack 4
 331: pushFromStack 6
 332: call with 2 arguments
 333: pushFromStack 7
 334: createFunction with 0 arguments capturing 0 starting at ip-266
 335: pushFromStack 5
 336: createFunction with 0 arguments capturing 0 starting at ip-291
 337: pushConstant inline builtinIfElse
 338: pushFromStack 0
 339: pushFromStack 6
 340: pushFromStack 5
 341: pushFromStack 4
 342: pushFromStack 13
 343: tailCall with 13 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 344: pushConstant inline builtinToDebugText
 345: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 346: pushFromStack 1
 347: pushFromStack 4
 348: pushFromStack 2
 349: call with 1 argument
 350: pushConstant inline builtinTextConcatenate
 351: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 352: pushFromStack 1
 353: pushFromStack 1
 354: pushFromStack 4
 355: pushFromStack 6
 356: call with 2 arguments
 357: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 358: pushFromStack 3
 359: pushFromStack 2
 360: pushFromStack 2
 361: pushFromStack 8
 362: call with 2 arguments
 363: pushConstant inline NoMatch
 364: pushFromStack 0
 365: pushFromStack 2
 366: createList 2
 367: popMultipleBelowTop 11
 368: return
# Builtins::ifElse:1:isMatch:else
 369: pushFromStack 1
 370: dup by 1
 371: pushConstant inline builtinTypeOf
 372: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 373: pushFromStack 1
 374: pushFromStack 4
 375: pushFromStack 2
 376: call with 1 argument
 377: pushFromStack 0
 378: dup by 1
 379: pushConstant inline builtinEquals
 380: pushConstant inline Tag
 381: pushFromStack 1
 382: pushFromStack 1
 383: pushFromStack 4
 384: pushFromStack 6
 385: call with 2 arguments
 386: pushFromStack 7
 387: createFunction with 0 arguments capturing 0 starting at ip-316
 388: pushFromStack 5
 389: createFunction with 0 arguments capturing 0 starting at ip-344
 390: pushConstant inline builtinIfElse
 391: pushFromStack 0
 392: pushFromStack 6
 393: pushFromStack 5
 394: pushFromStack 4
 395: pushFromStack 13
 396: tailCall with 13 locals and 3 arguments
# Builtins::ifElse
 397: pushFromStack 3
 398: dup by 3
 399: pushFromStack 2
 400: dup by 2
 401: pushFromStack 1
 402: dup by 2
 403: pushConstant inline builtinTypeOf
 404: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 405: pushFromStack 1
 406: pushFromStack 6
 407: pushFromStack 2
 408: call with 1 argument
 409: pushFromStack 0
 410: dup by 1
 411: pushConstant inline builtinEquals
 412: pushConstant inline Tag
 413: pushFromStack 1
 414: pushFromStack 1
 415: pushFromStack 4
 416: pushFromStack 6
 417: call with 2 arguments
 418: pushFromStack 9
 419: createFunction with 0 arguments capturing 0 starting at ip-180
 420: pushFromStack 5
 421: createFunction with 0 arguments capturing 0 starting at ip-208
 422: pushConstant inline builtinIfElse
 423: pushFromStack 0
 424: pushFromStack 6
 425: pushFromStack 5
 426: pushFromStack 4
 427: pushFromStack 13
 428: call with 3 arguments
 429: pushFromStack 0
 430: dup by 1
 431: pushConstant inline builtinListGet
 432: pushConstant inline 0
 433: pushFromStack 1
 434: pushFromStack 3
 435: pushFromStack 2
 436: pushFromStack 15
 437: call with 2 arguments
 438: pushConstant inline Match
 439: pushFromStack 12
 440: pushFromStack 2
 441: pushFromStack 2
 442: pushFromStack 17
 443: call with 2 arguments
 444: pushFromStack 5
 445: createFunction with 0 arguments capturing 0 starting at ip-233
 446: pushFromStack 12
 447: createFunction with 0 arguments capturing 0 starting at ip-369
 448: pushFromStack 10
 449: pushFromStack 5
 450: pushFromStack 4
 451: pushFromStack 3
 452: pushFromStack 23
 453: call with 3 arguments
 454: pushFromStack 9
 455: pushFromStack 1
 456: pushFromStack 10
 457: pushFromStack 23
 458: call with 2 arguments
 459: pushFromStack 19
 460: pushFromStack 1
 461: pushFromStack 9
 462: pushFromStack 24
 463: call with 2 arguments
 464: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 465: pushConstant <replaced address 4fd190ed4a0ecdb3> { 0 arguments (capturing nothing) → ip-97 }
 466: pushFromStack 15
 467: pushFromStack 3
 468: pushFromStack 3
 469: pushFromStack 3
 470: pushFromStack 28
 471: call with 3 arguments
 472: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
 473: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 474: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 475: pushFromStack 2
 476: pushFromStack 4
 477: pushFromStack 3
 478: pushFromStack 33
 479: pushFromStack 4
 480: call with 3 arguments
 481: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 482: pushFromStack 31
 483: pushFromStack 35
 484: pushFromStack 2
 485: call with 1 argument
 486: pushFromStack 0
 487: dup by 1
 488: pushConstant inline Function
 489: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 490: pushFromStack 31
 491: pushFromStack 3
 492: pushFromStack 3
 493: pushFromStack 3
 494: call with 2 arguments
 495: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 496: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 497: pushFromStack 10
 498: pushFromStack 3
 499: pushFromStack 3
 500: pushFromStack 41
 501: pushFromStack 4
 502: call with 3 arguments
 503: pushFromStack 35
 504: pushFromStack 7
 505: pushFromStack 7
 506: pushFromStack 7
 507: call with 2 arguments
 508: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 509: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 510: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 511: pushFromStack 15
 512: pushFromStack 4
 513: pushFromStack 4
 514: pushFromStack 4
 515: pushFromStack 4
 516: call with 3 arguments
 517: pushConstant inline builtinGetArgumentCount
 518: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 519: pushFromStack 1
 520: pushFromStack 49
 521: pushFromStack 2
 522: call with 1 argument
 523: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 524: pushFromStack 44
 525: pushFromStack 2
 526: pushFromStack 36
 527: pushFromStack 3
 528: call with 2 arguments
 529: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 530: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 531: pushFromStack 23
 532: pushFromStack 3
 533: pushFromStack 3
 534: pushFromStack 54
 535: pushFromStack 4
 536: call with 3 arguments
 537: pushFromStack 51
 538: pushFromStack 54
 539: pushFromStack 22
 540: call with 1 argument
 541: pushFromStack 0
 542: dup by 1
 543: pushFromStack 49
 544: pushFromStack 1
 545: pushFromStack 21
 546: pushFromStack 21
 547: call with 2 arguments
 548: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 549: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 550: pushFromStack 28
 551: pushFromStack 3
 552: pushFromStack 3
 553: pushFromStack 59
 554: pushFromStack 4
 555: call with 3 arguments
 556: pushFromStack 53
 557: pushFromStack 5
 558: pushFromStack 25
 559: pushFromStack 25
 560: call with 2 arguments
 561: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 562: pushFromStack 31
 563: pushFromStack 2
 564: pushFromStack 20
 565: pushFromStack 3
 566: pushFromStack 20
 567: call with 3 arguments
 568: pushFromStack 15
 569: pushFromStack 62
 570: pushFromStack 16
 571: call with 1 argument
 572: pushFromStack 57
 573: pushFromStack 1
 574: pushFromStack 49
 575: pushFromStack 16
 576: call with 2 arguments
 577: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 578: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 579: pushFromStack 36
 580: pushFromStack 3
 581: pushFromStack 3
 582: pushFromStack 67
 583: pushFromStack 4
 584: call with 3 arguments
 585: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
 586: pushFromStack 35
 587: drop
 588: pushFromStack 27
 589: drop
 590: pushFromStack 22
 591: drop
 592: pushFromStack 14
 593: drop
 594: pushFromStack 9
 595: drop
 596: pushFromStack 6
 597: drop
 598: pushFromStack 1
 599: drop
 600: pushFromStack 55
 601: pushFromStack 47
 602: pushFromStack 70
 603: pushFromStack 70
 604: pushFromStack 4
 605: tailCall with 70 locals and 3 arguments
# Core:result:is:1:equals:else, Core:result:mapOrElse:30:equals:else, Core:fixedDecimal:is:1:equals:else
 606: pushConstant <replaced address 921784a50cc37e2a> (NoMatch, "Expected tag to have a value, but it doesn't have any.")
 607: popMultipleBelowTop 1
 608: return
# Core:function:is1:11
 609: pushFromStack 1
 610: dup by 1
 611: pushConstant inline builtinTypeOf
 612: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 613: pushFromStack 1
 614: pushFromStack 4
 615: pushFromStack 2
 616: call with 1 argument
 617: pushConstant inline builtinEquals
 618: pushConstant inline Function
 619: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 620: pushFromStack 2
 621: pushFromStack 4
 622: pushFromStack 3
 623: pushFromStack 3
 624: call with 2 arguments
 625: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
 626: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 627: pushConstant <replaced address 94de2b63568838d2> Core:function:is1:11:3
 628: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 629: pushFromStack 3
 630: pushFromStack 5
 631: pushFromStack 4
 632: pushFromStack 4
 633: pushFromStack 4
 634: call with 3 arguments
 635: pushConstant inline builtinGetArgumentCount
 636: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 637: pushFromStack 1
 638: pushFromStack 16
 639: pushFromStack 2
 640: call with 1 argument
 641: pushConstant inline 1
 642: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 643: pushFromStack 5
 644: drop
 645: pushFromStack 13
 646: pushFromStack 3
 647: pushFromStack 3
 648: pushFromStack 3
 649: tailCall with 19 locals and 2 arguments
# Core:function:is1
 650: pushFromStack 1
 651: dup by 1
 652: pushConstant inline builtinTypeOf
 653: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
 654: pushFromStack 1
 655: pushFromStack 4
 656: pushFromStack 2
 657: call with 1 argument
 658: pushConstant inline builtinEquals
 659: pushConstant inline Function
 660: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 661: pushFromStack 2
 662: pushFromStack 4
 663: pushFromStack 3
 664: pushFromStack 3
 665: call with 2 arguments
 666: pushFromStack 8
 667: createFunction with 0 arguments capturing 0 starting at ip-609
 668: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
 669: pushConstant <replaced address 4fd190ed4a0ecdb3> { 0 arguments (capturing nothing) → ip-97 }
 670: pushConstant <replaced address 165fc9386f0eaeea> Core:function:is1:13
 671: pushFromStack 2
 672: pushFromStack 6
 673: pushFromStack 5
 674: pushFromStack 4
 675: pushFromStack 4
 676: tailCall with 14 locals and 3 arguments
# Core:result:is:1:equals:then
 677: pushConstant inline builtinTagGetValue
 678: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 679: pushFromStack 1
 680: pushFromStack 4
 681: pushFromStack 2
 682: call with 1 argument
 683: pushConstant inline Match
 684: pushFromStack 0
 685: pushFromStack 2
 686: createList 2
 687: popMultipleBelowTop 6
 688: return
 689: pushFromStack 1
 690: dup by 1
 691: pushConstant inline builtinTagHasValue
 692: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 693: pushFromStack 1
 694: pushFromStack 4
 695: pushFromStack 2
 696: call with 1 argument
 697: pushConstant inline builtinEquals
 698: pushConstant inline True
 699: pushFromStack 1
 700: pushFromStack 1
 701: pushFromStack 4
 702: pushFromStack 6
 703: call with 2 arguments
 704: pushFromStack 7
 705: createFunction with 0 arguments capturing 0 starting at ip-677
 706: pushConstant inline builtinIfElse
 707: pushConstant <replaced address 8305a580432558f8> { 0 arguments (capturing nothing) → ip-606 }
 708: pushFromStack 1
 709: pushFromStack 5
 710: pushFromStack 4
 711: pushFromStack 3
 712: pushFromStack 12
 713: tailCall with 12 locals and 3 arguments
# Core:result:is:1:equals:else
 714: pushConstant inline builtinToDebugText
 715: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 716: pushFromStack 1
 717: pushFromStack 4
 718: pushFromStack 2
 719: call with 1 argument
 720: pushConstant inline builtinTextConcatenate
 721: pushConstant <replaced address c92756745a9e6460> "Expected Ok, got "
 722: pushFromStack 1
 723: pushFromStack 1
 724: pushFromStack 4
 725: pushFromStack 6
 726: call with 2 arguments
 727: pushConstant <replaced address ee78a67daaae8b1b> "."
 728: pushFromStack 3
 729: pushFromStack 2
 730: pushFromStack 2
 731: pushFromStack 8
 732: call with 2 arguments
 733: pushConstant inline NoMatch
 734: pushFromStack 0
 735: pushFromStack 2
 736: createList 2
 737: popMultipleBelowTop 11
 738: return
# Core:result:is:1:equals:then
 739: pushFromStack 1
 740: dup by 1
 741: pushConstant inline builtinTagWithoutValue
 742: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 743: pushFromStack 1
 744: pushFromStack 4
 745: pushFromStack 2
 746: call with 1 argument
 747: pushFromStack 0
 748: dup by 1
 749: pushConstant inline builtinEquals
 750: pushConstant inline Ok
 751: pushFromStack 1
 752: pushFromStack 1
 753: pushFromStack 4
 754: pushFromStack 6
 755: call with 2 arguments
 756: pushFromStack 7
 757: createFunction with 0 arguments capturing 0 starting at ip-689
 758: pushFromStack 5
 759: createFunction with 0 arguments capturing 0 starting at ip-714
 760: pushConstant inline builtinIfElse
 761: pushFromStack 0
 762: pushFromStack 6
 763: pushFromStack 5
 764: pushFromStack 4
 765: pushFromStack 13
 766: tailCall with 13 locals and 3 arguments
# Core:result:is:1:equals:else
 767: pushConstant inline builtinToDebugText
 768: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 769: pushFromStack 1
 770: pushFromStack 4
 771: pushFromStack 2
 772: call with 1 argument
 773: pushConstant inline builtinTextConcatenate
 774: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 775: pushFromStack 1
 776: pushFromStack 1
 777: pushFromStack 4
 778: pushFromStack 6
 779: call with 2 arguments
 780: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 781: pushFromStack 3
 782: pushFromStack 2
 783: pushFromStack 2
 784: pushFromStack 8
 785: call with 2 arguments
 786: pushConstant inline NoMatch
 787: pushFromStack 0
 788: pushFromStack 2
 789: createList 2
 790: popMultipleBelowTop 11
 791: return
# Core:result:is:1:isMatch:then
 792: pushFromStack 1
 793: popMultipleBelowTop 2
 794: return
# Core:result:is:1:equals:then
 795: pushConstant inline builtinTagGetValue
 796: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 797: pushFromStack 1
 798: pushFromStack 4
 799: pushFromStack 2
 800: call with 1 argument
 801: pushConstant inline Match
 802: pushFromStack 0
 803: pushFromStack 2
 804: createList 2
 805: popMultipleBelowTop 6
 806: return
 807: pushFromStack 1
 808: dup by 1
 809: pushConstant inline builtinTagHasValue
 810: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 811: pushFromStack 1
 812: pushFromStack 4
 813: pushFromStack 2
 814: call with 1 argument
 815: pushConstant inline builtinEquals
 816: pushConstant inline True
 817: pushFromStack 1
 818: pushFromStack 1
 819: pushFromStack 4
 820: pushFromStack 6
 821: call with 2 arguments
 822: pushFromStack 7
 823: createFunction with 0 arguments capturing 0 starting at ip-795
 824: pushConstant inline builtinIfElse
 825: pushConstant <replaced address 8305a580432558f8> { 0 arguments (capturing nothing) → ip-606 }
 826: pushFromStack 1
 827: pushFromStack 5
 828: pushFromStack 4
 829: pushFromStack 3
 830: pushFromStack 12
 831: tailCall with 12 locals and 3 arguments
# Core:result:is:1:equals:else
 832: pushConstant inline builtinToDebugText
 833: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 834: pushFromStack 1
 835: pushFromStack 4
 836: pushFromStack 2
 837: call with 1 argument
 838: pushConstant inline builtinTextConcatenate
 839: pushConstant <replaced address 255d07f7c5e32c69> "Expected Error, got "
 840: pushFromStack 1
 841: pushFromStack 1
 842: pushFromStack 4
 843: pushFromStack 6
 844: call with 2 arguments
 845: pushConstant <replaced address ee78a67daaae8b1b> "."
 846: pushFromStack 3
 847: pushFromStack 2
 848: pushFromStack 2
 849: pushFromStack 8
 850: call with 2 arguments
 851: pushConstant inline NoMatch
 852: pushFromStack 0
 853: pushFromStack 2
 854: createList 2
 855: popMultipleBelowTop 11
 856: return
# Core:result:is:1:equals:then
 857: pushFromStack 1
 858: dup by 1
 859: pushConstant inline builtinTagWithoutValue
 860: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 861: pushFromStack 1
 862: pushFromStack 4
 863: pushFromStack 2
 864: call with 1 argument
 865: pushFromStack 0
 866: dup by 1
 867: pushConstant inline builtinEquals
 868: pushConstant inline Error
 869: pushFromStack 1
 870: pushFromStack 1
 871: pushFromStack 4
 872: pushFromStack 6
 873: call with 2 arguments
 874: pushFromStack 7
 875: createFunction with 0 arguments capturing 0 starting at ip-807
 876: pushFromStack 5
 877: createFunction with 0 arguments capturing 0 starting at ip-832
 878: pushConstant inline builtinIfElse
 879: pushFromStack 0
 880: pushFromStack 6
 881: pushFromStack 5
 882: pushFromStack 4
 883: pushFromStack 13
 884: tailCall with 13 locals and 3 arguments
# Core:result:is:1:equals:else
 885: pushConstant inline builtinToDebugText
 886: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 887: pushFromStack 1
 888: pushFromStack 4
 889: pushFromStack 2
 890: call with 1 argument
 891: pushConstant inline builtinTextConcatenate
 892: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 893: pushFromStack 1
 894: pushFromStack 1
 895: pushFromStack 4
 896: pushFromStack 6
 897: call with 2 arguments
 898: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 899: pushFromStack 3
 900: pushFromStack 2
 901: pushFromStack 2
 902: pushFromStack 8
 903: call with 2 arguments
 904: pushConstant inline NoMatch
 905: pushFromStack 0
 906: pushFromStack 2
 907: createList 2
 908: popMultipleBelowTop 11
 909: return
# Core:result:is:1:isMatch:else
 910: pushFromStack 1
 911: dup by 1
 912: pushConstant inline builtinTypeOf
 913: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 914: pushFromStack 1
 915: pushFromStack 4
 916: pushFromStack 2
 917: call with 1 argument
 918: pushFromStack 0
 919: dup by 1
 920: pushConstant inline builtinEquals
 921: pushConstant inline Tag
 922: pushFromStack 1
 923: pushFromStack 1
 924: pushFromStack 4
 925: pushFromStack 6
 926: call with 2 arguments
 927: pushFromStack 7
 928: createFunction with 0 arguments capturing 0 starting at ip-857
 929: pushFromStack 5
 930: createFunction with 0 arguments capturing 0 starting at ip-885
 931: pushConstant inline builtinIfElse
 932: pushFromStack 0
 933: pushFromStack 6
 934: pushFromStack 5
 935: pushFromStack 4
 936: pushFromStack 13
 937: tailCall with 13 locals and 3 arguments
# Core:result:is
 938: pushFromStack 1
 939: dup by 2
 940: pushConstant inline builtinTypeOf
 941: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 942: pushFromStack 1
 943: pushFromStack 4
 944: pushFromStack 2
 945: call with 1 argument
 946: pushFromStack 0
 947: dup by 1
 948: pushConstant inline builtinEquals
 949: pushConstant inline Tag
 950: pushFromStack 1
 951: pushFromStack 1
 952: pushFromStack 4
 953: pushFromStack 6
 954: call with 2 arguments
 955: pushFromStack 7
 956: createFunction with 0 arguments capturing 0 starting at ip-739
 957: pushFromStack 5
 958: createFunction with 0 arguments capturing 0 starting at ip-767
 959: pushConstant inline builtinIfElse
 960: pushFromStack 0
 961: pushFromStack 6
 962: pushFromStack 5
 963: pushFromStack 4
 964: pushFromStack 13
 965: call with 3 arguments
 966: pushFromStack 0
 967: dup by 1
 968: pushConstant inline builtinListGet
 969: pushConstant inline 0
 970: pushFromStack 1
 971: pushFromStack 3
 972: pushFromStack 2
 973: pushFromStack 15
 974: call with 2 arguments
 975: pushConstant inline Match
 976: pushFromStack 12
 977: pushFromStack 2
 978: pushFromStack 2
 979: pushFromStack 17
 980: call with 2 arguments
 981: pushFromStack 5
 982: createFunction with 0 arguments capturing 0 starting at ip-792
 983: pushFromStack 12
 984: createFunction with 0 arguments capturing 0 starting at ip-910
 985: pushFromStack 10
 986: pushFromStack 5
 987: pushFromStack 4
 988: pushFromStack 3
 989: pushFromStack 23
 990: call with 3 arguments
 991: pushFromStack 9
 992: pushFromStack 1
 993: pushFromStack 10
 994: pushFromStack 23
 995: call with 2 arguments
 996: pushFromStack 19
 997: pushFromStack 1
 998: pushFromStack 9
 999: pushFromStack 24
1000: call with 2 arguments
1001: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1002: pushConstant <replaced address 4fd190ed4a0ecdb3> { 0 arguments (capturing nothing) → ip-97 }
1003: pushFromStack 15
1004: pushFromStack 3
1005: pushFromStack 3
1006: pushFromStack 3
1007: pushFromStack 28
1008: tailCall with 28 locals and 3 arguments
# Core:result:mapOrElse:30:case-1:didNotMatch
1009: pushConstant <replaced address ef5d2e500159f5dd> "No case matched the given expression."
1010: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1011: pushFromStack 1
1012: pushFromStack 1
1013: panic
1014: popMultipleBelowTop 3
1015: return
# Core:result:mapOrElse:30:equals:then
1016: pushConstant inline builtinTagGetValue
1017: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1018: pushFromStack 1
1019: pushFromStack 4
1020: pushFromStack 2
1021: call with 1 argument
1022: pushConstant inline Match
1023: pushFromStack 0
1024: pushFromStack 2
1025: createList 2
1026: popMultipleBelowTop 6
1027: return
1028: pushFromStack 1
1029: dup by 1
1030: pushConstant inline builtinTagHasValue
1031: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1032: pushFromStack 1
1033: pushFromStack 4
1034: pushFromStack 2
1035: call with 1 argument
1036: pushConstant inline builtinEquals
1037: pushConstant inline True
1038: pushFromStack 1
1039: pushFromStack 1
1040: pushFromStack 4
1041: pushFromStack 6
1042: call with 2 arguments
1043: pushFromStack 7
1044: createFunction with 0 arguments capturing 0 starting at ip-1016
1045: pushConstant inline builtinIfElse
1046: pushConstant <replaced address 8305a580432558f8> { 0 arguments (capturing nothing) → ip-606 }
1047: pushFromStack 1
1048: pushFromStack 5
1049: pushFromStack 4
1050: pushFromStack 3
1051: pushFromStack 12
1052: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1053: pushConstant inline builtinToDebugText
1054: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1055: pushFromStack 1
1056: pushFromStack 4
1057: pushFromStack 2
1058: call with 1 argument
1059: pushConstant inline builtinTextConcatenate
1060: pushConstant <replaced address c92756745a9e6460> "Expected Ok, got "
1061: pushFromStack 1
1062: pushFromStack 1
1063: pushFromStack 4
1064: pushFromStack 6
1065: call with 2 arguments
1066: pushConstant <replaced address ee78a67daaae8b1b> "."
1067: pushFromStack 3
1068: pushFromStack 2
1069: pushFromStack 2
1070: pushFromStack 8
1071: call with 2 arguments
1072: pushConstant inline NoMatch
1073: pushFromStack 0
1074: pushFromStack 2
1075: createList 2
1076: popMultipleBelowTop 11
1077: return
# Core:result:mapOrElse:30:equals:then
1078: pushFromStack 1
1079: dup by 1
1080: pushConstant inline builtinTagWithoutValue
1081: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1082: pushFromStack 1
1083: pushFromStack 4
1084: pushFromStack 2
1085: call with 1 argument
1086: pushFromStack 0
1087: dup by 1
1088: pushConstant inline builtinEquals
1089: pushConstant inline Ok
1090: pushFromStack 1
1091: pushFromStack 1
1092: pushFromStack 4
1093: pushFromStack 6
1094: call with 2 arguments
1095: pushFromStack 7
1096: createFunction with 0 arguments capturing 0 starting at ip-1028
1097: pushFromStack 5
1098: createFunction with 0 arguments capturing 0 starting at ip-1053
1099: pushConstant inline builtinIfElse
1100: pushFromStack 0
1101: pushFromStack 6
1102: pushFromStack 5
1103: pushFromStack 4
1104: pushFromStack 13
1105: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1106: pushConstant inline builtinToDebugText
1107: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1108: pushFromStack 1
1109: pushFromStack 4
1110: pushFromStack 2
1111: call with 1 argument
1112: pushConstant inline builtinTextConcatenate
1113: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
1114: pushFromStack 1
1115: pushFromStack 1
1116: pushFromStack 4
1117: pushFromStack 6
1118: call with 2 arguments
1119: pushConstant <replaced address 8dbb18a7278b48a0> "`."
1120: pushFromStack 3
1121: pushFromStack 2
1122: pushFromStack 2
1123: pushFromStack 8
1124: call with 2 arguments
1125: pushConstant inline NoMatch
1126: pushFromStack 0
1127: pushFromStack 2
1128: createList 2
1129: popMultipleBelowTop 11
1130: return
# Core:result:mapOrElse:30:case-0:matched
1131: pushConstant inline builtinListGet
1132: pushConstant inline 1
1133: pushConstant <replaced address ba8faee21655e5cb> Core:result:mapOrElse:30:value
1134: pushFromStack 2
1135: pushFromStack 5
1136: pushFromStack 3
1137: pushFromStack 3
1138: call with 2 arguments
1139: pushConstant <replaced address 0eca58389ad22836> Core:result:mapOrElse:30:2
1140: pushFromStack 7
1141: pushFromStack 2
1142: pushFromStack 2
1143: tailCall with 8 locals and 1 argument
# Core:result:mapOrElse:30:equals:then
1144: pushConstant inline builtinTagGetValue
1145: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1146: pushFromStack 1
1147: pushFromStack 4
1148: pushFromStack 2
1149: call with 1 argument
1150: pushConstant inline Match
1151: pushFromStack 0
1152: pushFromStack 2
1153: createList 2
1154: popMultipleBelowTop 6
1155: return
1156: pushFromStack 1
1157: dup by 1
1158: pushConstant inline builtinTagHasValue
1159: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1160: pushFromStack 1
1161: pushFromStack 4
1162: pushFromStack 2
1163: call with 1 argument
1164: pushConstant inline builtinEquals
1165: pushConstant inline True
1166: pushFromStack 1
1167: pushFromStack 1
1168: pushFromStack 4
1169: pushFromStack 6
1170: call with 2 arguments
1171: pushFromStack 7
1172: createFunction with 0 arguments capturing 0 starting at ip-1144
1173: pushConstant inline builtinIfElse
1174: pushConstant <replaced address 8305a580432558f8> { 0 arguments (capturing nothing) → ip-606 }
1175: pushFromStack 1
1176: pushFromStack 5
1177: pushFromStack 4
1178: pushFromStack 3
1179: pushFromStack 12
1180: tailCall with 12 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1181: pushConstant inline builtinToDebugText
1182: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1183: pushFromStack 1
1184: pushFromStack 4
1185: pushFromStack 2
1186: call with 1 argument
1187: pushConstant inline builtinTextConcatenate
1188: pushConstant <replaced address 255d07f7c5e32c69> "Expected Error, got "
1189: pushFromStack 1
1190: pushFromStack 1
1191: pushFromStack 4
1192: pushFromStack 6
1193: call with 2 arguments
1194: pushConstant <replaced address ee78a67daaae8b1b> "."
1195: pushFromStack 3
1196: pushFromStack 2
1197: pushFromStack 2
1198: pushFromStack 8
1199: call with 2 arguments
1200: pushConstant inline NoMatch
1201: pushFromStack 0
1202: pushFromStack 2
1203: createList 2
1204: popMultipleBelowTop 11
1205: return
# Core:result:mapOrElse:30:equals:then
1206: pushFromStack 1
1207: dup by 1
1208: pushConstant inline builtinTagWithoutValue
1209: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1210: pushFromStack 1
1211: pushFromStack 4
1212: pushFromStack 2
1213: call with 1 argument
1214: pushFromStack 0
1215: dup by 1
1216: pushConstant inline builtinEquals
1217: pushConstant inline Error
1218: pushFromStack 1
1219: pushFromStack 1
1220: pushFromStack 4
1221: pushFromStack 6
1222: call with 2 arguments
1223: pushFromStack 7
1224: createFunction with 0 arguments capturing 0 starting at ip-1156
1225: pushFromStack 5
1226: createFunction with 0 arguments capturing 0 starting at ip-1181
1227: pushConstant inline builtinIfElse
1228: pushFromStack 0
1229: pushFromStack 6
1230: pushFromStack 5
1231: pushFromStack 4
1232: pushFromStack 13
1233: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1234: pushConstant inline builtinToDebugText
1235: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1236: pushFromStack 1
1237: pushFromStack 4
1238: pushFromStack 2
1239: call with 1 argument
1240: pushConstant inline builtinTextConcatenate
1241: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
1242: pushFromStack 1
1243: pushFromStack 1
1244: pushFromStack 4
1245: pushFromStack 6
1246: call with 2 arguments
1247: pushConstant <replaced address 8dbb18a7278b48a0> "`."
1248: pushFromStack 3
1249: pushFromStack 2
1250: pushFromStack 2
1251: pushFromStack 8
1252: call with 2 arguments
1253: pushConstant inline NoMatch
1254: pushFromStack 0
1255: pushFromStack 2
1256: createList 2
1257: popMultipleBelowTop 11
1258: return
# Core:result:mapOrElse:30:case-1:matched
1259: pushConstant inline builtinListGet
1260: pushConstant inline 1
1261: pushConstant <replaced address 6912ed2aef33db36> Core:result:mapOrElse:30:value#1
1262: pushFromStack 2
1263: pushFromStack 5
1264: pushFromStack 3
1265: pushFromStack 3
1266: call with 2 arguments
1267: pushConstant <replaced address 775a8fa4d727f34d> Core:result:mapOrElse:30:5
1268: pushFromStack 7
1269: pushFromStack 2
1270: pushFromStack 2
1271: tailCall with 8 locals and 1 argument
# Core:result:mapOrElse:30:case-0:didNotMatch
1272: pushFromStack 2
1273: dup by 1
1274: pushConstant inline builtinTypeOf
1275: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1276: pushFromStack 1
1277: pushFromStack 5
1278: pushFromStack 2
1279: call with 1 argument
1280: pushFromStack 0
1281: dup by 1
1282: pushConstant inline builtinEquals
1283: pushConstant inline Tag
1284: pushFromStack 1
1285: pushFromStack 1
1286: pushFromStack 4
1287: pushFromStack 6
1288: call with 2 arguments
1289: pushFromStack 8
1290: createFunction with 0 arguments capturing 0 starting at ip-1206
1291: pushFromStack 5
1292: createFunction with 0 arguments capturing 0 starting at ip-1234
1293: pushConstant inline builtinIfElse
1294: pushFromStack 0
1295: pushFromStack 6
1296: pushFromStack 5
1297: pushFromStack 4
1298: pushFromStack 13
1299: call with 3 arguments
1300: pushFromStack 0
1301: dup by 1
1302: pushConstant inline builtinListGet
1303: pushConstant inline 0
1304: pushFromStack 1
1305: pushFromStack 3
1306: pushFromStack 2
1307: pushFromStack 15
1308: call with 2 arguments
1309: pushConstant inline Match
1310: pushFromStack 12
1311: pushFromStack 2
1312: pushFromStack 2
1313: pushFromStack 17
1314: call with 2 arguments
1315: pushFromStack 18
1316: pushFromStack 6
1317: createFunction with 0 arguments capturing 1, 0 starting at ip-1259
1318: pushConstant <replaced address a2c03f1a6f3f5683> { 0 arguments (capturing nothing) → ip-1009 }
1319: pushFromStack 10
1320: pushFromStack 5
1321: pushFromStack 3
1322: pushFromStack 3
1323: pushFromStack 23
1324: tailCall with 24 locals and 3 arguments
# Core:result:mapOrElse
1325: pushFromStack 3
1326: dup by 3
1327: pushFromStack 2
1328: dup by 1
1329: pushFromStack 1
1330: dup by 1
1331: pushConstant <replaced address 05d3c942faefe462> { 1 argument (capturing nothing) → ip-938 }
1332: pushConstant <replaced address 266d488b0b2596a5> Core:result:mapOrElse:2
1333: pushFromStack 1
1334: pushFromStack 6
1335: pushFromStack 2
1336: call with 1 argument
1337: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1338: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1339: pushConstant <replaced address 0f59d2d5f5f1d623> Core:result:mapOrElse:4
1340: pushFromStack 2
1341: pushFromStack 4
1342: pushFromStack 3
1343: pushFromStack 9
1344: pushFromStack 4
1345: call with 3 arguments
1346: pushConstant <replaced address b22db74f013bcc02> { 1 argument (capturing nothing) → ip-650 }
1347: pushConstant <replaced address f8465d20e0be15a1> Core:result:mapOrElse:14
1348: pushFromStack 1
1349: pushFromStack 12
1350: pushFromStack 2
1351: call with 1 argument
1352: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
1353: pushConstant <replaced address b19ab086e749027f> Core:result:mapOrElse:16
1354: pushFromStack 8
1355: pushFromStack 3
1356: pushFromStack 3
1357: pushFromStack 15
1358: pushFromStack 4
1359: call with 3 arguments
1360: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1361: pushFromStack 6
1362: pushFromStack 16
1363: pushFromStack 2
1364: call with 1 argument
1365: pushConstant <replaced address d962951e9f7283f6> "`function.is1 errorMapper` was not satisfied"
1366: pushConstant <replaced address 8373c51cbce1817b> Core:result:mapOrElse:28
1367: pushFromStack 13
1368: pushFromStack 3
1369: pushFromStack 3
1370: pushFromStack 20
1371: pushFromStack 4
1372: call with 3 arguments
1373: pushConstant inline builtinTypeOf
1374: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1375: pushFromStack 1
1376: pushFromStack 24
1377: pushFromStack 2
1378: call with 1 argument
1379: pushFromStack 0
1380: dup by 1
1381: pushConstant inline builtinEquals
1382: pushConstant inline Tag
1383: pushFromStack 1
1384: pushFromStack 1
1385: pushFromStack 4
1386: pushFromStack 6
1387: call with 2 arguments
1388: pushFromStack 27
1389: createFunction with 0 arguments capturing 0 starting at ip-1078
1390: pushFromStack 5
1391: createFunction with 0 arguments capturing 0 starting at ip-1106
1392: pushConstant inline builtinIfElse
1393: pushFromStack 0
1394: pushFromStack 6
1395: pushFromStack 5
1396: pushFromStack 4
1397: pushFromStack 13
1398: call with 3 arguments
1399: pushFromStack 0
1400: dup by 1
1401: pushConstant inline builtinListGet
1402: pushConstant inline 0
1403: pushFromStack 1
1404: pushFromStack 3
1405: pushFromStack 2
1406: pushFromStack 15
1407: call with 2 arguments
1408: pushConstant inline Match
1409: pushFromStack 12
1410: pushFromStack 2
1411: pushFromStack 2
1412: pushFromStack 17
1413: call with 2 arguments
1414: pushFromStack 37
1415: pushFromStack 6
1416: createFunction with 0 arguments capturing 1, 0 starting at ip-1131
1417: pushFromStack 13
1418: pushFromStack 40
1419: createFunction with 0 arguments capturing 1, 0 starting at ip-1272
1420: pushFromStack 34
1421: drop
1422: pushFromStack 28
1423: drop
1424: pushFromStack 23
1425: drop
1426: pushFromStack 12
1427: pushFromStack 7
1428: pushFromStack 5
1429: pushFromStack 3
1430: pushFromStack 25
1431: tailCall with 45 locals and 3 arguments
# Core:result:flatMap:19
1432: pushConstant <replaced address 4fc1284a2ffbaf9e> Core:result:flatMap:19:2
1433: pushFromStack 3
1434: pushFromStack 3
1435: pushFromStack 2
1436: tailCall with 4 locals and 1 argument
# Core:result:mapOr:20
1437: pushFromStack 1
1438: drop
1439: pushFromStack 2
1440: popMultipleBelowTop 3
1441: return
# Core:result:flatMap
1442: pushFromStack 2
1443: dup by 3
1444: pushFromStack 1
1445: dup by 1
1446: pushConstant <replaced address 05d3c942faefe462> { 1 argument (capturing nothing) → ip-938 }
1447: pushConstant <replaced address 05e45b91c25d1055> Core:result:flatMap:2
1448: pushFromStack 1
1449: pushFromStack 5
1450: pushFromStack 2
1451: call with 1 argument
1452: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1453: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1454: pushConstant <replaced address eed0e5dcad294fd3> Core:result:flatMap:4
1455: pushFromStack 2
1456: pushFromStack 4
1457: pushFromStack 3
1458: pushFromStack 9
1459: pushFromStack 4
1460: call with 3 arguments
1461: pushConstant <replaced address b22db74f013bcc02> { 1 argument (capturing nothing) → ip-650 }
1462: pushConstant <replaced address d7bd702797f58f51> Core:result:flatMap:14
1463: pushFromStack 1
1464: pushFromStack 11
1465: pushFromStack 2
1466: call with 1 argument
1467: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
1468: pushConstant <replaced address c0a9fa7282c1cecf> Core:result:flatMap:16
1469: pushFromStack 8
1470: pushFromStack 3
1471: pushFromStack 3
1472: pushFromStack 15
1473: pushFromStack 4
1474: call with 3 arguments
1475: pushFromStack 14
1476: createFunction with 1 argument capturing 0 starting at ip-1432
1477: pushFromStack 0
1478: dup by 1
1479: pushConstant <replaced address 017970d57aa05a94> Core:result:mapOr:2
1480: pushFromStack 15
1481: pushFromStack 19
1482: pushFromStack 2
1483: call with 1 argument
1484: pushConstant <replaced address b5203f97f827ee8e> Core:result:flatMap:21
1485: pushConstant <replaced address 5e7fed672c5c456a> Core:result:mapOr:4
1486: pushFromStack 15
1487: pushFromStack 3
1488: pushFromStack 16
1489: pushFromStack 4
1490: pushFromStack 4
1491: call with 3 arguments
1492: pushConstant <replaced address 476c77b2172884e8> Core:result:mapOr:14
1493: pushFromStack 13
1494: pushFromStack 7
1495: pushFromStack 2
1496: call with 1 argument
1497: pushConstant <replaced address bc3f0fb63b05190e> Core:result:mapOr:16
1498: pushFromStack 19
1499: pushFromStack 2
1500: pushFromStack 14
1501: pushFromStack 8
1502: pushFromStack 4
1503: call with 3 arguments
1504: pushFromStack 26
1505: createFunction with 1 argument capturing 0 starting at ip-1437
1506: pushConstant <replaced address 1013dd11bb18c965> { 3 arguments (capturing nothing) → ip-1325 }
1507: pushConstant <replaced address c7c8ca90c59ef94f> Core:result:mapOr:21
1508: pushFromStack 21
1509: drop
1510: pushFromStack 15
1511: drop
1512: pushFromStack 8
1513: drop
1514: pushFromStack 4
1515: drop
1516: pushFromStack 1
1517: pushFromStack 4
1518: pushFromStack 15
1519: pushFromStack 5
1520: pushFromStack 4
1521: tailCall with 31 locals and 3 arguments
# Core:result:map:19
1522: pushConstant <replaced address e2ca64edcf3c85fe> Core:result:map:19:3
1523: pushFromStack 3
1524: pushFromStack 3
1525: pushFromStack 2
1526: call with 1 argument
1527: pushFromStack 0
1528: createTag Ok
1529: popMultipleBelowTop 5
1530: return
# Core:result:map
1531: pushFromStack 2
1532: dup by 1
1533: pushFromStack 1
1534: dup by 1
1535: pushConstant <replaced address 05d3c942faefe462> { 1 argument (capturing nothing) → ip-938 }
1536: pushConstant <replaced address 0e5dcb874e6dfa57> Core:result:map:2
1537: pushFromStack 1
1538: pushFromStack 5
1539: pushFromStack 2
1540: call with 1 argument
1541: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1542: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1543: pushConstant <replaced address b1574ef59cb20f81> Core:result:map:4
1544: pushFromStack 2
1545: pushFromStack 4
1546: pushFromStack 3
1547: pushFromStack 9
1548: pushFromStack 4
1549: call with 3 arguments
1550: pushConstant <replaced address b22db74f013bcc02> { 1 argument (capturing nothing) → ip-650 }
1551: pushConstant <replaced address c86ac4aab1e5d003> Core:result:map:14
1552: pushFromStack 1
1553: pushFromStack 11
1554: pushFromStack 2
1555: call with 1 argument
1556: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
1557: pushConstant <replaced address 53982ca68e093bdd> Core:result:map:16
1558: pushFromStack 8
1559: pushFromStack 3
1560: pushFromStack 3
1561: pushFromStack 15
1562: pushFromStack 4
1563: call with 3 arguments
1564: pushFromStack 14
1565: createFunction with 1 argument capturing 0 starting at ip-1522
1566: pushConstant <replaced address fdc28bf12cff5770> { 2 arguments (capturing nothing) → ip-1442 }
1567: pushConstant <replaced address 998b33832a916631> Core:result:map:20
1568: pushFromStack 10
1569: drop
1570: pushFromStack 4
1571: drop
1572: pushFromStack 1
1573: pushFromStack 20
1574: pushFromStack 4
1575: pushFromStack 3
1576: tailCall with 20 locals and 2 arguments
# Core:result:getValue
1577: pushFromStack 1
1578: dup by 3
1579: pushConstant <replaced address 05d3c942faefe462> { 1 argument (capturing nothing) → ip-938 }
1580: pushConstant <replaced address 055673228b46d5b7> Core:result:getValue:2
1581: pushFromStack 1
1582: pushFromStack 4
1583: pushFromStack 2
1584: call with 1 argument
1585: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1586: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1587: pushConstant <replaced address a84ff690d98aeae1> Core:result:getValue:4
1588: pushFromStack 2
1589: pushFromStack 4
1590: pushFromStack 3
1591: pushFromStack 9
1592: pushFromStack 4
1593: call with 3 arguments
1594: pushConstant inline builtinTypeOf
1595: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1596: pushFromStack 1
1597: pushFromStack 11
1598: pushFromStack 2
1599: call with 1 argument
1600: pushConstant inline builtinEquals
1601: pushConstant inline Tag
1602: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1603: pushFromStack 2
1604: pushFromStack 4
1605: pushFromStack 3
1606: pushFromStack 3
1607: call with 2 arguments
1608: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
1609: pushConstant <replaced address bf636c45eebeab63> Core:result:getValue:14
1610: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
1611: pushFromStack 13
1612: pushFromStack 4
1613: pushFromStack 4
1614: pushFromStack 4
1615: pushFromStack 4
1616: call with 3 arguments
1617: pushConstant inline builtinTagHasValue
1618: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
1619: pushFromStack 1
1620: pushFromStack 22
1621: pushFromStack 2
1622: call with 1 argument
1623: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
1624: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
1625: pushFromStack 19
1626: pushFromStack 3
1627: pushFromStack 3
1628: pushFromStack 10
1629: pushFromStack 4
1630: call with 3 arguments
1631: pushConstant inline builtinTagGetValue
1632: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
1633: pushFromStack 19
1634: drop
1635: pushFromStack 8
1636: drop
1637: pushFromStack 2
1638: drop
1639: pushFromStack 1
1640: pushFromStack 28
1641: pushFromStack 2
1642: tailCall with 28 locals and 1 argument
# Examples:fibonacci:isLessThan
1643: pushFromStack 2
1644: dup by 1
1645: pushFromStack 1
1646: dup by 1
1647: pushConstant inline builtinTypeOf
1648: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1649: pushFromStack 1
1650: pushFromStack 5
1651: pushFromStack 2
1652: call with 1 argument
1653: pushConstant inline builtinEquals
1654: pushConstant inline Int
1655: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1656: pushFromStack 2
1657: pushFromStack 4
1658: pushFromStack 3
1659: pushFromStack 3
1660: call with 2 arguments
1661: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1662: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
1663: pushConstant <replaced address 2e5df8c541272e37> Examples:fibonacci:compareTo:10
1664: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
1665: pushFromStack 3
1666: pushFromStack 5
1667: pushFromStack 4
1668: pushFromStack 4
1669: pushFromStack 4
1670: call with 3 arguments
1671: pushFromStack 11
1672: pushFromStack 14
1673: pushFromStack 12
1674: call with 1 argument
1675: pushFromStack 9
1676: pushFromStack 1
1677: pushFromStack 10
1678: pushFromStack 10
1679: call with 2 arguments
1680: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
1681: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
1682: pushFromStack 8
1683: pushFromStack 3
1684: pushFromStack 3
1685: pushFromStack 9
1686: pushFromStack 4
1687: call with 3 arguments
1688: pushConstant inline builtinIntCompareTo
1689: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
1690: pushFromStack 1
1691: pushFromStack 22
1692: pushFromStack 22
1693: pushFromStack 3
1694: call with 2 arguments
1695: pushConstant inline Less
1696: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1697: pushFromStack 10
1698: drop
1699: pushFromStack 5
1700: drop
1701: pushFromStack 18
1702: pushFromStack 3
1703: pushFromStack 3
1704: pushFromStack 3
1705: tailCall with 25 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:12
1706: pushFromStack 1
1707: popMultipleBelowTop 2
1708: return
# Examples:fibonacci:fibonacci:2:13
1709: pushFromStack 2
1710: dup by 1
1711: pushFromStack 1
1712: dup by 2
1713: pushConstant inline builtinTypeOf
1714: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1715: pushFromStack 1
1716: pushFromStack 4
1717: pushFromStack 2
1718: call with 1 argument
1719: pushConstant inline builtinEquals
1720: pushConstant inline Int
1721: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1722: pushFromStack 2
1723: pushFromStack 4
1724: pushFromStack 3
1725: pushFromStack 3
1726: call with 2 arguments
1727: pushFromStack 0
1728: dup by 1
1729: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1730: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
1731: pushConstant <replaced address 3dcd25f189b573e4> Examples:fibonacci:fibonacci:2:13:11
1732: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
1733: pushFromStack 3
1734: pushFromStack 5
1735: pushFromStack 4
1736: pushFromStack 4
1737: pushFromStack 4
1738: call with 3 arguments
1739: pushConstant inline builtinIntSubtract
1740: pushConstant inline 1
1741: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
1742: pushFromStack 2
1743: pushFromStack 17
1744: pushFromStack 3
1745: pushFromStack 3
1746: call with 2 arguments
1747: pushConstant <replaced address ec50643a6293694f> Examples:fibonacci:fibonacci:2:13:12
1748: pushFromStack 19
1749: pushFromStack 2
1750: pushFromStack 2
1751: call with 1 argument
1752: pushFromStack 0
1753: dup by 1
1754: pushConstant <replaced address edc1afb51c6d3aeb> Examples:fibonacci:fibonacci:2:13:32
1755: pushFromStack 11
1756: pushFromStack 13
1757: pushFromStack 12
1758: pushFromStack 3
1759: pushFromStack 12
1760: call with 3 arguments
1761: pushConstant inline 2
1762: pushFromStack 8
1763: pushFromStack 23
1764: pushFromStack 2
1765: pushFromStack 9
1766: call with 2 arguments
1767: pushConstant <replaced address 9c44edfdf54b3056> Examples:fibonacci:fibonacci:2:13:33
1768: pushFromStack 25
1769: pushFromStack 2
1770: pushFromStack 2
1771: call with 1 argument
1772: pushFromStack 0
1773: dup by 1
1774: pushFromStack 23
1775: pushFromStack 7
1776: pushFromStack 24
1777: call with 1 argument
1778: pushFromStack 21
1779: pushFromStack 1
1780: pushFromStack 22
1781: pushFromStack 22
1782: call with 2 arguments
1783: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
1784: pushConstant <replaced address 4ac82c46ce2925c1> Examples:fibonacci:fibonacci:2:13:34
1785: pushConstant <replaced address 440a4a2e9e3a80bb> Builtins::intAdd:5
1786: pushFromStack 21
1787: pushFromStack 4
1788: pushFromStack 4
1789: pushFromStack 4
1790: pushFromStack 4
1791: call with 3 arguments
1792: pushFromStack 29
1793: pushFromStack 7
1794: pushFromStack 30
1795: call with 1 argument
1796: pushFromStack 27
1797: pushFromStack 1
1798: pushFromStack 28
1799: pushFromStack 28
1800: call with 2 arguments
1801: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
1802: pushConstant <replaced address cf37b22a7a5dec95> Builtins::intAdd:11
1803: pushFromStack 26
1804: pushFromStack 3
1805: pushFromStack 3
1806: pushFromStack 9
1807: pushFromStack 4
1808: call with 3 arguments
1809: pushConstant inline builtinIntAdd
1810: pushConstant <replaced address 216d199efe6cdff8> Builtins::intAdd:18
1811: pushFromStack 25
1812: drop
1813: pushFromStack 17
1814: drop
1815: pushFromStack 7
1816: drop
1817: pushFromStack 2
1818: drop
1819: pushFromStack 1
1820: pushFromStack 20
1821: pushFromStack 15
1822: pushFromStack 3
1823: tailCall with 40 locals and 2 arguments
# Examples:fibonacci:fibonacci:2
1824: pushFromStack 1
1825: dup by 2
1826: pushConstant <replaced address f8b6a4bee6b9a66d> { 2 arguments (capturing nothing) → ip-1643 }
1827: pushConstant inline 2
1828: pushConstant <replaced address 09452ee45e345fc6> Examples:fibonacci:fibonacci:2:11
1829: pushFromStack 2
1830: pushFromStack 5
1831: pushFromStack 3
1832: pushFromStack 3
1833: call with 2 arguments
1834: pushFromStack 5
1835: createFunction with 0 arguments capturing 0 starting at ip-1706
1836: pushFromStack 8
1837: pushFromStack 2
1838: createFunction with 0 arguments capturing 1, 0 starting at ip-1709
1839: pushConstant <replaced address 8e445bc6862a7d85> { 3 arguments (capturing nothing) → ip-397 }
1840: pushConstant <replaced address 14cee9bee8ce4007> Examples:fibonacci:fibonacci:2:14
1841: pushFromStack 1
1842: pushFromStack 8
1843: pushFromStack 7
1844: pushFromStack 5
1845: pushFromStack 4
1846: tailCall with 14 locals and 3 arguments
# Examples:fibonacci:recursive:0:0
1847: pushFromStack 2
1848: dup by 1
1849: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
1850: pushFromStack 3
1851: pushFromStack 0
1852: pushFromStack 4
1853: pushFromStack 3
1854: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0
1855: pushFromStack 2
1856: createFunction with 1 argument capturing 0 starting at ip-1847
1857: pushConstant <replaced address dbdea21a2e534c1a> { 2 arguments (capturing nothing) → ip-1824 }
1858: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
1859: pushFromStack 1
1860: pushFromStack 3
1861: pushFromStack 7
1862: pushFromStack 3
1863: tailCall with 7 locals and 2 arguments
# Examples:fibonacci:21:8:18
1864: pushConstant <replaced address 446ed9866aa91731> { 2 arguments (capturing nothing) → ip-1855 }
1865: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
1866: pushFromStack 1
1867: pushFromStack 0
1868: pushFromStack 5
1869: pushFromStack 3
1870: call with 2 arguments
1871: pushConstant inline builtinToDebugText
1872: pushConstant <replaced address 8383f19ea0a5e146> Builtins::toDebugText:5
1873: pushFromStack 1
1874: pushFromStack 3
1875: pushFromStack 2
1876: tailCall with 7 locals and 1 argument
# Examples:fibonacci:21:8:case-0:didNotMatch
1877: pushConstant <replaced address ea9a293534a31de4> "Usage: `cargo run -- run fibonacci.candy -- <number>`"
1878: popMultipleBelowTop 1
1879: return
# Examples:fibonacci:21:8:equals:then
1880: pushConstant inline builtinListGet
1881: pushConstant inline 0
1882: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
1883: pushFromStack 2
1884: pushFromStack 5
1885: pushFromStack 3
1886: pushFromStack 3
1887: call with 2 arguments
1888: pushConstant inline Match
1889: pushFromStack 0
1890: pushFromStack 2
1891: createList 2
1892: popMultipleBelowTop 7
1893: return
# Examples:fibonacci:21:8:equals:else
1894: pushConstant inline builtinToDebugText
1895: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
1896: pushFromStack 1
1897: pushFromStack 4
1898: pushFromStack 2
1899: call with 1 argument
1900: pushConstant inline builtinTextConcatenate
1901: pushConstant <replaced address 9aa3c3ae7117a223> "Expected 1 item, got "
1902: pushFromStack 1
1903: pushFromStack 1
1904: pushFromStack 4
1905: pushFromStack 6
1906: call with 2 arguments
1907: pushConstant <replaced address ee78a67daaae8b1b> "."
1908: pushFromStack 3
1909: pushFromStack 2
1910: pushFromStack 2
1911: pushFromStack 8
1912: call with 2 arguments
1913: pushConstant inline NoMatch
1914: pushFromStack 0
1915: pushFromStack 2
1916: createList 2
1917: popMultipleBelowTop 11
1918: return
# Examples:fibonacci:21:8:equals:then
1919: pushFromStack 1
1920: dup by 1
1921: pushConstant inline builtinListLength
1922: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
1923: pushFromStack 1
1924: pushFromStack 4
1925: pushFromStack 2
1926: call with 1 argument
1927: pushFromStack 0
1928: dup by 1
1929: pushConstant inline builtinEquals
1930: pushConstant inline 1
1931: pushFromStack 1
1932: pushFromStack 1
1933: pushFromStack 4
1934: pushFromStack 6
1935: call with 2 arguments
1936: pushFromStack 7
1937: createFunction with 0 arguments capturing 0 starting at ip-1880
1938: pushFromStack 5
1939: createFunction with 0 arguments capturing 0 starting at ip-1894
1940: pushConstant inline builtinIfElse
1941: pushFromStack 0
1942: pushFromStack 6
1943: pushFromStack 5
1944: pushFromStack 4
1945: pushFromStack 13
1946: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:21:8:equals:else
1947: pushConstant inline builtinToDebugText
1948: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
1949: pushFromStack 1
1950: pushFromStack 4
1951: pushFromStack 2
1952: call with 1 argument
1953: pushConstant inline builtinTextConcatenate
1954: pushConstant <replaced address 67317fa1011ddaa1> "Expected a List, got `"
1955: pushFromStack 1
1956: pushFromStack 1
1957: pushFromStack 4
1958: pushFromStack 6
1959: call with 2 arguments
1960: pushConstant <replaced address 8dbb18a7278b48a0> "`."
1961: pushFromStack 3
1962: pushFromStack 2
1963: pushFromStack 2
1964: pushFromStack 8
1965: call with 2 arguments
1966: pushConstant inline NoMatch
1967: pushFromStack 0
1968: pushFromStack 2
1969: createList 2
1970: popMultipleBelowTop 11
1971: return
# Examples:fibonacci:21:8:case-0:matched
1972: pushConstant inline builtinListGet
1973: pushConstant inline 1
1974: pushConstant <replaced address 7dd5e7b8b509ae51> Examples:fibonacci:21:8:n
1975: pushFromStack 2
1976: pushFromStack 5
1977: pushFromStack 3
1978: pushFromStack 3
1979: call with 2 arguments
1980: pushFromStack 0
1981: dup by 1
1982: pushConstant inline builtinTypeOf
1983: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1984: pushFromStack 1
1985: pushFromStack 3
1986: pushFromStack 2
1987: call with 1 argument
1988: pushConstant inline builtinEquals
1989: pushConstant inline Text
1990: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1991: pushFromStack 2
1992: pushFromStack 4
1993: pushFromStack 3
1994: pushFromStack 3
1995: call with 2 arguments
1996: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1997: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
1998: pushConstant <replaced address 806428a0d5c12ae4> Examples:fibonacci:21:8:9
1999: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
2000: pushFromStack 3
2001: pushFromStack 5
2002: pushFromStack 4
2003: pushFromStack 4
2004: pushFromStack 4
2005: call with 3 arguments
2006: pushConstant inline builtinIntParse
2007: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
2008: pushFromStack 1
2009: pushFromStack 15
2010: pushFromStack 2
2011: call with 1 argument
2012: pushConstant <replaced address 2289adb8e393b29d> { 2 arguments (capturing nothing) → ip-1531 }
2013: pushConstant <replaced address fe9c0de6d1457318> { 1 argument (capturing nothing) → ip-1864 }
2014: pushConstant <replaced address 97779e55eaf4eb66> Examples:fibonacci:21:8:19
2015: pushFromStack 2
2016: pushFromStack 4
2017: pushFromStack 3
2018: pushFromStack 3
2019: call with 2 arguments
2020: pushConstant <replaced address fc72bda9feb3654d> { 1 argument (capturing nothing) → ip-1577 }
2021: pushConstant <replaced address 7421c808ee3a61d5> Examples:fibonacci:21:8:28
2022: pushFromStack 9
2023: drop
2024: pushFromStack 1
2025: pushFromStack 3
2026: pushFromStack 2
2027: tailCall with 27 locals and 1 argument
# Examples:fibonacci:21
2028: pushFromStack 1
2029: dup by 4
2030: pushConstant inline builtinTypeOf
2031: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2032: pushFromStack 1
2033: pushFromStack 4
2034: pushFromStack 2
2035: call with 1 argument
2036: pushConstant inline builtinEquals
2037: pushConstant inline Struct
2038: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2039: pushFromStack 2
2040: pushFromStack 4
2041: pushFromStack 3
2042: pushFromStack 3
2043: call with 2 arguments
2044: pushFromStack 0
2045: dup by 1
2046: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
2047: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
2048: pushConstant <replaced address 4522fcf9aef1c577> Examples:fibonacci:21:7
2049: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
2050: pushFromStack 3
2051: pushFromStack 5
2052: pushFromStack 4
2053: pushFromStack 4
2054: pushFromStack 4
2055: call with 3 arguments
2056: pushConstant inline builtinStructHasKey
2057: pushConstant inline Arguments
2058: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
2059: pushFromStack 2
2060: pushFromStack 17
2061: pushFromStack 3
2062: pushFromStack 3
2063: call with 2 arguments
2064: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
2065: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
2066: pushFromStack 10
2067: pushFromStack 3
2068: pushFromStack 3
2069: pushFromStack 11
2070: pushFromStack 4
2071: call with 3 arguments
2072: pushConstant inline builtinStructGet
2073: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
2074: pushFromStack 1
2075: pushFromStack 23
2076: pushFromStack 9
2077: pushFromStack 3
2078: call with 2 arguments
2079: pushFromStack 0
2080: dup by 1
2081: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
2082: pushFromStack 22
2083: pushFromStack 2
2084: pushFromStack 2
2085: call with 1 argument
2086: pushFromStack 0
2087: dup by 1
2088: pushConstant inline List
2089: pushFromStack 21
2090: pushFromStack 1
2091: pushFromStack 3
2092: pushFromStack 5
2093: call with 2 arguments
2094: pushFromStack 4
2095: createFunction with 0 arguments capturing 0 starting at ip-1919
2096: pushFromStack 4
2097: createFunction with 0 arguments capturing 0 starting at ip-1947
2098: pushConstant inline builtinIfElse
2099: pushFromStack 0
2100: pushFromStack 6
2101: pushFromStack 5
2102: pushFromStack 4
2103: pushFromStack 12
2104: call with 3 arguments
2105: pushFromStack 0
2106: dup by 1
2107: pushConstant inline builtinListGet
2108: pushConstant inline 0
2109: pushFromStack 1
2110: pushFromStack 3
2111: pushFromStack 2
2112: pushFromStack 14
2113: call with 2 arguments
2114: pushConstant inline Match
2115: pushFromStack 32
2116: pushFromStack 2
2117: pushFromStack 2
2118: pushFromStack 16
2119: call with 2 arguments
2120: pushFromStack 5
2121: createFunction with 0 arguments capturing 0 starting at ip-1972
2122: pushConstant <replaced address 7bcd4928d5463b0f> { 0 arguments (capturing nothing) → ip-1877 }
2123: pushFromStack 9
2124: pushFromStack 4
2125: pushFromStack 3
2126: pushFromStack 3
2127: pushFromStack 21
2128: call with 3 arguments
2129: pushConstant <replaced address 7ed3a33e63f326bc> Examples:fibonacci:21:16
2130: pushFromStack 34
2131: pushFromStack 36
2132: pushFromStack 35
2133: pushFromStack 3
2134: pushFromStack 35
2135: call with 3 arguments
2136: pushConstant inline Stdout
2137: pushFromStack 31
2138: pushFromStack 46
2139: pushFromStack 2
2140: pushFromStack 32
2141: call with 2 arguments
2142: pushFromStack 37
2143: pushFromStack 1
2144: pushFromStack 30
2145: pushFromStack 6
2146: pushFromStack 31
2147: call with 3 arguments
2148: pushFromStack 26
2149: pushFromStack 48
2150: pushFromStack 4
2151: pushFromStack 28
2152: call with 2 arguments
2153: pushConstant <replaced address d05064f58b153151> Examples:fibonacci:21:17
2154: pushFromStack 36
2155: drop
2156: pushFromStack 29
2157: drop
2158: pushFromStack 5
2159: drop
2160: pushFromStack 2
2161: drop
2162: pushFromStack 1
2163: pushFromStack 8
2164: pushFromStack 2
2165: tailCall with 50 locals and 1 argument
# Examples:fibonacci:
2166: pushConstant <replaced address 5696024af887004c> { 1 argument (capturing nothing) → ip-2028 }
2167: popMultipleBelowTop 1
2168: return
