# VM Byte Code for module Examples:fibonacci
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# Constant heap
<replaced address 017970d57aa05a94>: Core:result:mapOr:2
<replaced address 05251864681a3500>: Builtins::typeOf:5
<replaced address 055673228b46d5b7>: Core:result:getValue:2
<replaced address 056aa7001fbe6a6f>: "`tag | typeIs Tag` was not satisfied"
<replaced address 05cf6ed3a3e1ef22>: "NotUtf8"
<replaced address 05e45b91c25d1055>: Core:result:flatMap:2
<replaced address 07c1052bec280409>: "`then | typeIs Function` was not satisfied"
<replaced address 09452ee45e345fc6>: Examples:fibonacci:fibonacci:2:11
<replaced address 0ab9b0f79d037b64>: Examples:fibonacci:21:8
<replaced address 0d2f632a7ac72050>: { 3 arguments (capturing nothing) → ip-428 }
<replaced address 0e5dcb874e6dfa57>: Core:result:map:2
<replaced address 0eca58389ad22836>: Core:result:mapOrElse:30:2
<replaced address 0f1215b1e3352ac0>: { 2 arguments (capturing nothing) → ip-2002 }
<replaced address 0f59d2d5f5f1d623>: Core:result:mapOrElse:4
<replaced address 0fea7d5fa5afcc30>: Builtins::typeIs:25
<replaced address 1076a7c75d895c72>: "NotAnInteger"
<replaced address 13077cf4fbb4e55a>: Builtins::tagGetValue:5
<replaced address 13bae94f69b93dec>: Builtins::ifElse:11
<replaced address 13bbc38331a2c1a7>: Builtins::intSubtract:18
<replaced address 14cee9bee8ce4007>: Examples:fibonacci:fibonacci:2:14
<replaced address 165fc9386f0eaeea>: Core:function:is1:13
<replaced address 18dc4adab2c8e8df>: "`struct | ✨.structHasKey key` was not satisfied"
<replaced address 1ce55c0643859f07>: { 1 argument (capturing nothing) → ip-2011 }
<replaced address 1d52fd2f58ddcc21>: { 0 arguments (capturing nothing) → ip-2331 }
<replaced address 1f44a429f4531e2d>: Builtins::ifElse:14
<replaced address 1f92019f89733a43>: Builtins::structGet:12
<replaced address 216d199efe6cdff8>: Builtins::intAdd:18
<replaced address 255d07f7c5e32c69>: "Expected Error, got "
<replaced address 266d488b0b2596a5>: Core:result:mapOrElse:2
<replaced address 2749496cbbd972e7>: "`b | typeIs Int` was not satisfied"
<replaced address 2a8be7103eabae0e>: "Ok"
<replaced address 2ace5f047eecfe6e>: Builtins::ifElse:1
<replaced address 2db459441af47a3a>: Builtins::intParse:11
<replaced address 2ded061b072e15be>: { 0 arguments (capturing nothing) → ip-0 }
<replaced address 2e5d2b312d58f554>: { 3 arguments (capturing nothing) → ip-1464 }
<replaced address 2e5df8c541272e37>: Examples:fibonacci:compareTo:10
<replaced address 30f6a0842615e2b5>: { 2 arguments (capturing nothing) → ip-1971 }
<replaced address 36eebe9168aef0b0>: "The `reason` must be a text."
<replaced address 3ca1d8923c3da26f>: { 1 argument (capturing nothing) → ip-1027 }
<replaced address 3dcd25f189b573e4>: Examples:fibonacci:fibonacci:2:13:11
<replaced address 3eca0e872d043602>: Builtins::typeIs:19
<replaced address 406b106bdb596f26>: "Expected False, got "
<replaced address 41e70e1c83094f2c>: Builtins::tagGetValue:11
<replaced address 41fcadf3280286e7>: Builtins::intCompareTo:18
<replaced address 422f322f2940db06>: Builtins::structGet:21
<replaced address 4302703a6cd3fa75>: Builtins::getArgumentCount:5
<replaced address 440a4a2e9e3a80bb>: Builtins::intAdd:5
<replaced address 4522fcf9aef1c577>: Examples:fibonacci:21:7
<replaced address 4672d383c7509a9f>: "`then | getArgumentCount | equals 0` was not satisfied"
<replaced address 476c77b2172884e8>: Core:result:mapOr:14
<replaced address 4ac82c46ce2925c1>: Examples:fibonacci:fibonacci:2:13:34
<replaced address 4ba19bf7dddc0462>: "Expected a Tag, got `"
<replaced address 4d094d47213a5655>: "Equal"
<replaced address 4fc1284a2ffbaf9e>: Core:result:flatMap:19:2
<replaced address 4fd190ed4a0ecdb3>: { 0 arguments (capturing nothing) → ip-97 }
<replaced address 51f524ae63c4af0b>: "Tag"
<replaced address 53982ca68e093bdd>: Core:result:map:16
<replaced address 56cefe855ac72448>: "`function.is1 okMapper` was not satisfied"
<replaced address 59585e0369161d49>: { 2 arguments (capturing nothing) → ip-1783 }
<replaced address 59fb4da19b618456>: Builtins::structGet:5
<replaced address 5b10e82ed1489edf>: { 3 arguments (capturing nothing) → ip-31 }
<replaced address 5c93ea6ba248e40c>: Builtins::intParse:5
<replaced address 5daeb472a61ff7f8>: "False"
<replaced address 5e7fed672c5c456a>: Core:result:mapOr:4
<replaced address 614077b0f92cd7f0>: "Struct"
<replaced address 65869b7b7c4defee>: "`a | typeIs Int` was not satisfied"
<replaced address 67317fa1011ddaa1>: "Expected a List, got `"
<replaced address 6732a87eefdda5c6>: "Nothing"
<replaced address 6912ed2aef33db36>: Core:result:mapOrElse:30:value#1
<replaced address 6b24044ae391e0b7>: "Int"
<replaced address 6cdccd509afc921c>: "Text"
<replaced address 6d46f30442b470ad>: (Match,)
<replaced address 6fe1fdb2563c07ad>: "Arguments"
<replaced address 7008c023be883ff4>: Builtins::ifElse:19
<replaced address 70a2d1d7839b24a4>: Examples:fibonacci:
<replaced address 7421c808ee3a61d5>: Examples:fibonacci:21:8:28
<replaced address 7426aaad0dda436d>: { 1 argument (capturing nothing) → ip-2185 }
<replaced address 770bc58f92609921>: { 1 argument (capturing nothing) → ip-685 }
<replaced address 775a8fa4d727f34d>: Core:result:mapOrElse:30:5
<replaced address 7b5c0ed7f870b37f>: "`conditionIsBool` was not satisfied"
<replaced address 7c65f9f539f0d0fa>: Builtins::intCompareTo:11
<replaced address 7c987e313b2f2519>: Builtins::structGet:14
<replaced address 7d04a0accae5758c>: Builtins::intSubtract:5
<replaced address 7dd5e7b8b509ae51>: Examples:fibonacci:21:8:n
<replaced address 7ed3a33e63f326bc>: Examples:fibonacci:21:16
<replaced address 806428a0d5c12ae4>: Examples:fibonacci:21:8:9
<replaced address 807d7368f1a4edd6>: "Builtin"
<replaced address 80f4eaa53f4876cd>: anonymous:$generated::needs
<replaced address 834388196300f4fb>: "`function | typeIs Function` was not satisfied"
<replaced address 8373c51cbce1817b>: Core:result:mapOrElse:28
<replaced address 8383f19ea0a5e146>: Builtins::toDebugText:5
<replaced address 8569f4e46fac8013>: "Expected tag to have a value, but it doesn't have any."
<replaced address 871c35d8d3bc0076>: Builtins::ifElse:41
<replaced address 89823731ff102ef8>: { 0 arguments (capturing nothing) → ip-94 }
<replaced address 89be9cdfac8d8517>: Examples:fibonacci:recursive:0:5
<replaced address 8dbb18a7278b48a0>: "`."
<replaced address 8dfc7c1a939d20ec>: { 2 arguments (capturing nothing) → ip-1582 }
<replaced address 91bca86c00256cf1>: Examples:fibonacci:recursive:5
<replaced address 91ccd4b75c545de9>: "The `condition` must be either `True` or `False`."
<replaced address 921784a50cc37e2a>: (NoMatch, "Expected tag to have a value, but it doesn't have any.")
<replaced address 92aa0d19152d9fd3>: "`text | typeIs Text` was not satisfied"
<replaced address 94de2b63568838d2>: Core:function:is1:11:3
<replaced address 957eb8ad35ecdba0>: "`else | getArgumentCount | equals 0` was not satisfied"
<replaced address 97779e55eaf4eb66>: Examples:fibonacci:21:8:19
<replaced address 996cc5f08093ac25>: "`struct | typeIs Struct` was not satisfied"
<replaced address 998b33832a916631>: Core:result:map:20
<replaced address 999eaa115035be18>: "Expected True, got "
<replaced address 9a411ed2de02bbfd>: "`else | typeIs Function` was not satisfied"
<replaced address 9a873ad1d21541fd>: Core:result:mapOrElse:26
<replaced address 9aa3c3ae7117a223>: "Expected 1 item, got "
<replaced address 9c44edfdf54b3056>: Examples:fibonacci:fibonacci:2:13:33
<replaced address 9c61ef87641ba65d>: "NoMatch"
<replaced address 9e34e4f0d7d85134>: Builtins::tagGetValue:19
<replaced address 9ee8514b45dca9c6>: Builtins::ifElse:25
<replaced address 9eed8aae34c53a02>: Builtins::tagGetValue:13
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a2f6d53168c96b64>: "GetRandomBytes"
<replaced address a84ff690d98aeae1>: Core:result:getValue:4
<replaced address aa720c25d0768a07>: Builtins::ifElse:28
<replaced address ab458b1cc1453acc>: Builtins::intCompareTo:5
<replaced address b1086454c3fcc390>: "`is result` was not satisfied"
<replaced address b1574ef59cb20f81>: Core:result:map:4
<replaced address b19ab086e749027f>: Core:result:mapOrElse:16
<replaced address b5203f97f827ee8e>: Core:result:flatMap:21
<replaced address b66aa5e8eefa60de>: "Function"
<replaced address b7d5083e90b08e9b>: Builtins::getArgumentCount:11
<replaced address ba8faee21655e5cb>: Core:result:mapOrElse:30:value
<replaced address bbcfa9d6e3f11acf>: "Greater"
<replaced address bc3f0fb63b05190e>: Core:result:mapOr:16
<replaced address bd7e643bf52790f0>: "Stdout"
<replaced address bf636c45eebeab63>: Core:result:getValue:14
<replaced address c0a9fa7282c1cecf>: Core:result:flatMap:16
<replaced address c4f0291b7762e5a8>: "`minuend | typeIs Int` was not satisfied"
<replaced address c7c8ca90c59ef94f>: Core:result:mapOr:21
<replaced address c841b45ecc45bd33>: "True"
<replaced address c86ac4aab1e5d003>: Core:result:map:14
<replaced address c92756745a9e6460>: "Expected Ok, got "
<replaced address cf37b22a7a5dec95>: Builtins::intAdd:11
<replaced address d05064f58b153151>: Examples:fibonacci:21:17
<replaced address d7629bf6e871f5e8>: "Error"
<replaced address d7bd702797f58f51>: Core:result:flatMap:14
<replaced address d962951e9f7283f6>: "`function.is1 errorMapper` was not satisfied"
<replaced address dc704463e00c0b29>: { 0 arguments (capturing nothing) → ip-3 }
<replaced address e052bfc75f054729>: { 1 argument (capturing nothing) → ip-1717 }
<replaced address e07a41ae6e9d6c51>: Core:result:mapOrElse:30
<replaced address e128eb82cb40fae3>: Core:result:is:1
<replaced address e13459ee6346ab5d>: "List"
<replaced address e1d6728501bc6b89>: Builtins::equals:6
<replaced address e25bd4c72e72ceb9>: { 2 arguments (capturing nothing) → ip-1671 }
<replaced address e2ca64edcf3c85fe>: Core:result:map:19:3
<replaced address e4db5827e264d41a>: Builtins::ifElse:5
<replaced address e8c2dfb7598c479d>: "`tag | ✨.tagHasValue` was not satisfied"
<replaced address ea9a293534a31de4>: "Usage: `cargo run -- run fibonacci.candy -- <number>`"
<replaced address eaff3e6d4bab56cb>: "Expected tag to not have a value, but it has one: `"
<replaced address ec50643a6293694f>: Examples:fibonacci:fibonacci:2:13:12
<replaced address edc1afb51c6d3aeb>: Examples:fibonacci:fibonacci:2:13:32
<replaced address ee78a67daaae8b1b>: "."
<replaced address eed0e5dcad294fd3>: Core:result:flatMap:4
<replaced address ef5d2e500159f5dd>: "No case matched the given expression."
<replaced address f2debbb68786f674>: "Less"
<replaced address f5c06b692130fe48>: Core:result:is:1:_
<replaced address f8465d20e0be15a1>: Core:result:mapOrElse:14
<replaced address f8a743cca2278691>: Examples:fibonacci:recursive:0:0:3
<replaced address f8bed0fc3ef0a4f6>: "Stdin"
<replaced address fb36281f9aababce>: Builtins::ifElse:33

# Instructions
# Builtins::ifElse:1:case-0:matched, Core:bool:not:6:case-1:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:is:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, anonymous:$generated::needs:isConditionTrue:then, Builtins::not:1:case-1:matched, Builtins::isNonNegative:13:case-0:matched
   0: pushConstant inline True
   1: popMultipleBelowTop 1
   2: return
# Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:text:29:isMatch:then, Core:int:29:isMatch:then, Core:iterable:map:19:11:1:isMatch:then, Core::30:isMatch:then, Core:list:29:isMatch:then, Core:iterable:withIndex:11:1:isMatch:then, Examples:fibonacci:19:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:controlFlow:50:isMatch:then, Core::41:isMatch:then, Core:iterable:19:isMatch:then, Core:iterable:84:2:11:1:isMatch:then, Core:iterable:take:33:1:isMatch:then, Core:bool:9:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:iterable:82:11:1:isMatch:then, Core:iterable:reduceLeft:38:1:isMatch:then, Core:iterable:takeWhile:2:11:1:isMatch:then, Core::102:isMatch:then, Core::164:isMatch:then, Core:result:30:isMatch:then, Core:type:19:isMatch:then, Core::153:isMatch:then, Core:list:40:isMatch:then, Core:iterable:30:isMatch:then, Core:int:40:isMatch:then, Core:iterable:generateWithState:14:0:11:1:isMatch:then, Core:iterable:86:6:21, anonymous:$generated::needs:condition:then, Core:controlFlow:if:27, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:int:51:isMatch:then, Examples:fibonacci:then, Core::19:isMatch:then, anonymous:$generated::needs:isReasonText:then, Core:result:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:iterable:withIndex:11:14:1:isMatch:then, Core:fixedDecimal:30:isMatch:then, anonymous:$generated::needs:isConditionBool:then, Core:list:generate:59:1:isMatch:then, Core:text:40:isMatch:then, Core:tag:29:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:check:19:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:struct:19:isMatch:then, Core:function:19:isMatch:then, Core:controlFlow:29:isMatch:then
   3: pushConstant inline Nothing
   4: popMultipleBelowTop 1
   5: return
# anonymous:$generated::needs:isConditionTrue:else
   6: pushConstant inline builtinEquals
   7: pushConstant inline False
   8: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
   9: pushFromStack 2
  10: pushFromStack 5
  11: pushFromStack 3
  12: pushFromStack 3
  13: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
  14: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
  15: pushFromStack 0
  16: pushFromStack 3
  17: panic
  18: popMultipleBelowTop 3
  19: return
# anonymous:$generated::needs:isReasonText:else
  20: pushConstant <replaced address 36eebe9168aef0b0> "The `reason` must be a text."
  21: pushFromStack 0
  22: pushFromStack 3
  23: panic
  24: popMultipleBelowTop 3
  25: return
# anonymous:$generated::needs:condition:else
  26: pushFromStack 2
  27: pushFromStack 2
  28: panic
  29: popMultipleBelowTop 3
  30: return
# anonymous:$generated::needs
  31: pushFromStack 3
  32: dup by 2
  33: pushFromStack 2
  34: dup by 1
  35: pushConstant inline builtinEquals
  36: pushConstant inline True
  37: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  38: pushFromStack 2
  39: pushFromStack 7
  40: pushFromStack 3
  41: pushFromStack 3
  42: call with 2 arguments
  43: pushFromStack 7
  44: createFunction with 0 arguments capturing 0 starting at ip-6
  45: pushConstant inline builtinIfElse
  46: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
  47: pushFromStack 1
  48: pushFromStack 5
  49: pushFromStack 2
  50: pushFromStack 5
  51: pushFromStack 9
  52: call with 3 arguments
  53: pushFromStack 9
  54: createFunction with 0 arguments capturing 0 starting at ip-14
  55: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
  56: pushFromStack 5
  57: pushFromStack 4
  58: pushFromStack 2
  59: pushFromStack 4
  60: pushFromStack 13
  61: call with 3 arguments
  62: pushConstant inline builtinTypeOf
  63: pushFromStack 0
  64: pushFromStack 17
  65: pushFromStack 6
  66: call with 1 argument
  67: pushConstant inline Text
  68: pushFromStack 15
  69: pushFromStack 2
  70: pushFromStack 2
  71: pushFromStack 9
  72: call with 2 arguments
  73: pushFromStack 7
  74: createFunction with 0 arguments capturing 0 starting at ip-20
  75: pushFromStack 12
  76: pushFromStack 3
  77: pushFromStack 9
  78: pushFromStack 3
  79: pushFromStack 20
  80: call with 3 arguments
  81: pushFromStack 22
  82: pushFromStack 22
  83: createFunction with 0 arguments capturing 1, 0 starting at ip-26
  84: pushFromStack 10
  85: drop
  86: pushFromStack 3
  87: drop
  88: pushFromStack 16
  89: pushFromStack 19
  90: pushFromStack 13
  91: pushFromStack 3
  92: pushFromStack 24
  93: tailCall with 27 locals and 3 arguments
# Core:list:first:6:equals:then, Core:bool:not:6:equals:then, Builtins::not:1:equals:then, Core:bool:lazyAnd:18:equals:then, Builtins::ifElse:1:equals:then, Core:bool:is:1:equals:then, Builtins::isNonNegative:13:equals:then, Core:list:single:6:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Core:int:pow:21:4:equals:then, Core:bool:lazyOr:18:equals:then
  94: pushConstant <replaced address 6d46f30442b470ad> (Match,)
  95: popMultipleBelowTop 1
  96: return
# Core:list:isValidInsertIndex:21, Core:function:is1:12, Builtins::isNonNegative:13:case-1:matched, Core:function:is3:12, Core:function:is2:12, Core:bool:not:6:case-0:matched, Core:list:isValidIndex:21, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::not:1:case-0:matched, anonymous:$generated::needs:isConditionTrue:else, Core:function:is5:12, Core:function:is0:12, Core:function:is4:12, Core:bool:lazyAnd:18:case-1:matched
  97: pushConstant inline False
  98: popMultipleBelowTop 1
  99: return
# Builtins::ifElse:1:equals:else
 100: pushConstant inline builtinToDebugText
 101: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 102: pushFromStack 1
 103: pushFromStack 4
 104: pushFromStack 2
 105: call with 1 argument
 106: pushConstant inline builtinTagGetValue
 107: pushFromStack 0
 108: pushFromStack 7
 109: pushFromStack 4
 110: call with 1 argument
 111: pushFromStack 4
 112: pushFromStack 1
 113: pushFromStack 5
 114: call with 1 argument
 115: pushConstant inline builtinTextConcatenate
 116: pushConstant <replaced address eaff3e6d4bab56cb> "Expected tag to not have a value, but it has one: `"
 117: pushFromStack 1
 118: pushFromStack 1
 119: pushFromStack 4
 120: pushFromStack 9
 121: call with 2 arguments
 122: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 123: pushFromStack 3
 124: pushFromStack 2
 125: pushFromStack 2
 126: pushFromStack 11
 127: call with 2 arguments
 128: pushConstant inline NoMatch
 129: pushFromStack 9
 130: drop
 131: pushFromStack 0
 132: pushFromStack 2
 133: createList 2
 134: popMultipleBelowTop 15
 135: return
# Builtins::ifElse:1:equals:then
 136: pushFromStack 1
 137: dup by 1
 138: pushConstant inline builtinTagHasValue
 139: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 140: pushFromStack 1
 141: pushFromStack 4
 142: pushFromStack 2
 143: call with 1 argument
 144: pushFromStack 0
 145: dup by 1
 146: pushConstant inline builtinEquals
 147: pushConstant inline False
 148: pushFromStack 1
 149: pushFromStack 1
 150: pushFromStack 4
 151: pushFromStack 6
 152: call with 2 arguments
 153: pushFromStack 7
 154: pushFromStack 4
 155: createFunction with 0 arguments capturing 1, 0 starting at ip-100
 156: pushConstant inline builtinIfElse
 157: pushConstant <replaced address 89823731ff102ef8> { 0 arguments (capturing nothing) → ip-94 }
 158: pushFromStack 1
 159: pushFromStack 6
 160: pushFromStack 2
 161: pushFromStack 5
 162: pushFromStack 13
 163: tailCall with 13 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 164: pushConstant inline builtinToDebugText
 165: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 166: pushFromStack 1
 167: pushFromStack 4
 168: pushFromStack 2
 169: call with 1 argument
 170: pushConstant inline builtinTextConcatenate
 171: pushConstant <replaced address 999eaa115035be18> "Expected True, got "
 172: pushFromStack 1
 173: pushFromStack 1
 174: pushFromStack 4
 175: pushFromStack 6
 176: call with 2 arguments
 177: pushConstant <replaced address ee78a67daaae8b1b> "."
 178: pushFromStack 3
 179: pushFromStack 2
 180: pushFromStack 2
 181: pushFromStack 8
 182: call with 2 arguments
 183: pushConstant inline NoMatch
 184: pushFromStack 0
 185: pushFromStack 2
 186: createList 2
 187: popMultipleBelowTop 11
 188: return
# Builtins::ifElse:1:equals:then
 189: pushFromStack 1
 190: dup by 1
 191: pushConstant inline builtinTagWithoutValue
 192: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 193: pushFromStack 1
 194: pushFromStack 4
 195: pushFromStack 2
 196: call with 1 argument
 197: pushFromStack 0
 198: dup by 1
 199: pushConstant inline builtinEquals
 200: pushConstant inline True
 201: pushFromStack 1
 202: pushFromStack 1
 203: pushFromStack 4
 204: pushFromStack 6
 205: call with 2 arguments
 206: pushFromStack 7
 207: createFunction with 0 arguments capturing 0 starting at ip-136
 208: pushFromStack 5
 209: createFunction with 0 arguments capturing 0 starting at ip-164
 210: pushConstant inline builtinIfElse
 211: pushFromStack 0
 212: pushFromStack 6
 213: pushFromStack 5
 214: pushFromStack 4
 215: pushFromStack 13
 216: tailCall with 13 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 217: pushConstant inline builtinToDebugText
 218: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 219: pushFromStack 1
 220: pushFromStack 4
 221: pushFromStack 2
 222: call with 1 argument
 223: pushConstant inline builtinTextConcatenate
 224: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 225: pushFromStack 1
 226: pushFromStack 1
 227: pushFromStack 4
 228: pushFromStack 6
 229: call with 2 arguments
 230: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 231: pushFromStack 3
 232: pushFromStack 2
 233: pushFromStack 2
 234: pushFromStack 8
 235: call with 2 arguments
 236: pushConstant inline NoMatch
 237: pushFromStack 0
 238: pushFromStack 2
 239: createList 2
 240: popMultipleBelowTop 11
 241: return
# Builtins::ifElse:1:isMatch:then
 242: pushFromStack 1
 243: popMultipleBelowTop 2
 244: return
# Builtins::ifElse:1:equals:else
 245: pushConstant inline builtinToDebugText
 246: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 247: pushFromStack 1
 248: pushFromStack 4
 249: pushFromStack 2
 250: call with 1 argument
 251: pushConstant inline builtinTagGetValue
 252: pushFromStack 0
 253: pushFromStack 7
 254: pushFromStack 4
 255: call with 1 argument
 256: pushFromStack 4
 257: pushFromStack 1
 258: pushFromStack 5
 259: call with 1 argument
 260: pushConstant inline builtinTextConcatenate
 261: pushConstant <replaced address eaff3e6d4bab56cb> "Expected tag to not have a value, but it has one: `"
 262: pushFromStack 1
 263: pushFromStack 1
 264: pushFromStack 4
 265: pushFromStack 9
 266: call with 2 arguments
 267: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 268: pushFromStack 3
 269: pushFromStack 2
 270: pushFromStack 2
 271: pushFromStack 11
 272: call with 2 arguments
 273: pushConstant inline NoMatch
 274: pushFromStack 9
 275: drop
 276: pushFromStack 0
 277: pushFromStack 2
 278: createList 2
 279: popMultipleBelowTop 15
 280: return
# Builtins::ifElse:1:equals:then
 281: pushFromStack 1
 282: dup by 1
 283: pushConstant inline builtinTagHasValue
 284: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 285: pushFromStack 1
 286: pushFromStack 4
 287: pushFromStack 2
 288: call with 1 argument
 289: pushFromStack 0
 290: dup by 1
 291: pushConstant inline builtinEquals
 292: pushConstant inline False
 293: pushFromStack 1
 294: pushFromStack 1
 295: pushFromStack 4
 296: pushFromStack 6
 297: call with 2 arguments
 298: pushFromStack 7
 299: pushFromStack 4
 300: createFunction with 0 arguments capturing 1, 0 starting at ip-245
 301: pushConstant inline builtinIfElse
 302: pushConstant <replaced address 89823731ff102ef8> { 0 arguments (capturing nothing) → ip-94 }
 303: pushFromStack 1
 304: pushFromStack 6
 305: pushFromStack 2
 306: pushFromStack 5
 307: pushFromStack 13
 308: tailCall with 13 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 309: pushConstant inline builtinToDebugText
 310: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 311: pushFromStack 1
 312: pushFromStack 4
 313: pushFromStack 2
 314: call with 1 argument
 315: pushConstant inline builtinTextConcatenate
 316: pushConstant <replaced address 406b106bdb596f26> "Expected False, got "
 317: pushFromStack 1
 318: pushFromStack 1
 319: pushFromStack 4
 320: pushFromStack 6
 321: call with 2 arguments
 322: pushConstant <replaced address ee78a67daaae8b1b> "."
 323: pushFromStack 3
 324: pushFromStack 2
 325: pushFromStack 2
 326: pushFromStack 8
 327: call with 2 arguments
 328: pushConstant inline NoMatch
 329: pushFromStack 0
 330: pushFromStack 2
 331: createList 2
 332: popMultipleBelowTop 11
 333: return
# Builtins::ifElse:1:equals:then
 334: pushFromStack 1
 335: dup by 1
 336: pushConstant inline builtinTagWithoutValue
 337: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 338: pushFromStack 1
 339: pushFromStack 4
 340: pushFromStack 2
 341: call with 1 argument
 342: pushFromStack 0
 343: dup by 1
 344: pushConstant inline builtinEquals
 345: pushConstant inline False
 346: pushFromStack 1
 347: pushFromStack 1
 348: pushFromStack 4
 349: pushFromStack 6
 350: call with 2 arguments
 351: pushFromStack 7
 352: createFunction with 0 arguments capturing 0 starting at ip-281
 353: pushFromStack 5
 354: createFunction with 0 arguments capturing 0 starting at ip-309
 355: pushConstant inline builtinIfElse
 356: pushFromStack 0
 357: pushFromStack 6
 358: pushFromStack 5
 359: pushFromStack 4
 360: pushFromStack 13
 361: tailCall with 13 locals and 3 arguments
# Builtins::ifElse:1:equals:else
 362: pushConstant inline builtinToDebugText
 363: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 364: pushFromStack 1
 365: pushFromStack 4
 366: pushFromStack 2
 367: call with 1 argument
 368: pushConstant inline builtinTextConcatenate
 369: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 370: pushFromStack 1
 371: pushFromStack 1
 372: pushFromStack 4
 373: pushFromStack 6
 374: call with 2 arguments
 375: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 376: pushFromStack 3
 377: pushFromStack 2
 378: pushFromStack 2
 379: pushFromStack 8
 380: call with 2 arguments
 381: pushConstant inline NoMatch
 382: pushFromStack 0
 383: pushFromStack 2
 384: createList 2
 385: popMultipleBelowTop 11
 386: return
# Builtins::ifElse:1:isMatch:else
 387: pushFromStack 1
 388: dup by 1
 389: pushConstant inline builtinTypeOf
 390: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 391: pushFromStack 1
 392: pushFromStack 4
 393: pushFromStack 2
 394: call with 1 argument
 395: pushFromStack 0
 396: dup by 1
 397: pushConstant inline builtinEquals
 398: pushConstant inline Tag
 399: pushFromStack 1
 400: pushFromStack 1
 401: pushFromStack 4
 402: pushFromStack 6
 403: call with 2 arguments
 404: pushFromStack 7
 405: createFunction with 0 arguments capturing 0 starting at ip-334
 406: pushFromStack 5
 407: createFunction with 0 arguments capturing 0 starting at ip-362
 408: pushConstant inline builtinIfElse
 409: pushFromStack 0
 410: pushFromStack 6
 411: pushFromStack 5
 412: pushFromStack 4
 413: pushFromStack 13
 414: tailCall with 13 locals and 3 arguments
# Builtins::ifElse:1:case-0:didNotMatch
 415: pushConstant inline builtinListGet
 416: pushConstant inline 1
 417: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 418: pushFromStack 2
 419: pushFromStack 5
 420: pushFromStack 3
 421: pushFromStack 3
 422: call with 2 arguments
 423: pushFromStack 0
 424: drop
 425: pushConstant inline False
 426: popMultipleBelowTop 6
 427: return
# Builtins::ifElse
 428: pushFromStack 3
 429: dup by 3
 430: pushFromStack 2
 431: dup by 3
 432: pushFromStack 1
 433: dup by 3
 434: pushConstant inline builtinTypeOf
 435: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 436: pushFromStack 1
 437: pushFromStack 6
 438: pushFromStack 2
 439: call with 1 argument
 440: pushFromStack 0
 441: dup by 1
 442: pushConstant inline builtinEquals
 443: pushConstant inline Tag
 444: pushFromStack 1
 445: pushFromStack 1
 446: pushFromStack 4
 447: pushFromStack 6
 448: call with 2 arguments
 449: pushFromStack 9
 450: createFunction with 0 arguments capturing 0 starting at ip-189
 451: pushFromStack 5
 452: createFunction with 0 arguments capturing 0 starting at ip-217
 453: pushConstant inline builtinIfElse
 454: pushFromStack 0
 455: pushFromStack 6
 456: pushFromStack 5
 457: pushFromStack 4
 458: pushFromStack 13
 459: call with 3 arguments
 460: pushFromStack 0
 461: dup by 1
 462: pushConstant inline builtinListGet
 463: pushConstant inline 0
 464: pushFromStack 1
 465: pushFromStack 3
 466: pushFromStack 2
 467: pushFromStack 15
 468: call with 2 arguments
 469: pushConstant inline Match
 470: pushFromStack 12
 471: pushFromStack 2
 472: pushFromStack 2
 473: pushFromStack 17
 474: call with 2 arguments
 475: pushFromStack 5
 476: createFunction with 0 arguments capturing 0 starting at ip-242
 477: pushFromStack 12
 478: createFunction with 0 arguments capturing 0 starting at ip-387
 479: pushFromStack 10
 480: pushFromStack 5
 481: pushFromStack 4
 482: pushFromStack 3
 483: pushFromStack 23
 484: call with 3 arguments
 485: pushFromStack 0
 486: dup by 1
 487: pushFromStack 9
 488: pushFromStack 1
 489: pushFromStack 10
 490: pushFromStack 23
 491: call with 2 arguments
 492: pushFromStack 19
 493: pushFromStack 1
 494: pushFromStack 9
 495: pushFromStack 24
 496: call with 2 arguments
 497: pushFromStack 2
 498: createFunction with 0 arguments capturing 0 starting at ip-415
 499: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 500: pushFromStack 16
 501: pushFromStack 4
 502: pushFromStack 2
 503: pushFromStack 4
 504: pushFromStack 29
 505: call with 3 arguments
 506: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
 507: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 508: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 509: pushFromStack 2
 510: pushFromStack 4
 511: pushFromStack 3
 512: pushFromStack 34
 513: pushFromStack 4
 514: call with 3 arguments
 515: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 516: pushFromStack 32
 517: pushFromStack 36
 518: pushFromStack 2
 519: call with 1 argument
 520: pushConstant inline Function
 521: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 522: pushFromStack 32
 523: pushFromStack 3
 524: pushFromStack 3
 525: pushFromStack 3
 526: call with 2 arguments
 527: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 528: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 529: pushFromStack 10
 530: pushFromStack 3
 531: pushFromStack 3
 532: pushFromStack 42
 533: pushFromStack 4
 534: call with 3 arguments
 535: pushFromStack 39
 536: pushFromStack 43
 537: pushFromStack 9
 538: call with 1 argument
 539: pushFromStack 37
 540: pushFromStack 1
 541: pushFromStack 8
 542: pushFromStack 8
 543: call with 2 arguments
 544: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 545: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 546: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 547: pushFromStack 16
 548: pushFromStack 4
 549: pushFromStack 4
 550: pushFromStack 4
 551: pushFromStack 4
 552: call with 3 arguments
 553: pushConstant inline builtinGetArgumentCount
 554: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 555: pushFromStack 1
 556: pushFromStack 51
 557: pushFromStack 2
 558: call with 1 argument
 559: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 560: pushFromStack 46
 561: pushFromStack 2
 562: pushFromStack 38
 563: pushFromStack 3
 564: call with 2 arguments
 565: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 566: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 567: pushFromStack 24
 568: pushFromStack 3
 569: pushFromStack 3
 570: pushFromStack 56
 571: pushFromStack 4
 572: call with 3 arguments
 573: pushFromStack 53
 574: pushFromStack 56
 575: pushFromStack 23
 576: call with 1 argument
 577: pushFromStack 51
 578: pushFromStack 1
 579: pushFromStack 22
 580: pushFromStack 22
 581: call with 2 arguments
 582: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 583: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 584: pushFromStack 29
 585: pushFromStack 3
 586: pushFromStack 3
 587: pushFromStack 61
 588: pushFromStack 4
 589: call with 3 arguments
 590: pushFromStack 58
 591: pushFromStack 61
 592: pushFromStack 28
 593: call with 1 argument
 594: pushFromStack 56
 595: pushFromStack 1
 596: pushFromStack 27
 597: pushFromStack 27
 598: call with 2 arguments
 599: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 600: pushFromStack 33
 601: pushFromStack 2
 602: pushFromStack 21
 603: pushFromStack 3
 604: pushFromStack 21
 605: call with 3 arguments
 606: pushFromStack 16
 607: pushFromStack 65
 608: pushFromStack 17
 609: call with 1 argument
 610: pushFromStack 60
 611: pushFromStack 1
 612: pushFromStack 52
 613: pushFromStack 17
 614: call with 2 arguments
 615: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 616: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 617: pushFromStack 38
 618: pushFromStack 3
 619: pushFromStack 3
 620: pushFromStack 70
 621: pushFromStack 4
 622: call with 3 arguments
 623: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
 624: pushFromStack 37
 625: drop
 626: pushFromStack 29
 627: drop
 628: pushFromStack 23
 629: drop
 630: pushFromStack 15
 631: drop
 632: pushFromStack 10
 633: drop
 634: pushFromStack 6
 635: drop
 636: pushFromStack 1
 637: drop
 638: pushFromStack 58
 639: pushFromStack 50
 640: pushFromStack 73
 641: pushFromStack 73
 642: pushFromStack 4
 643: tailCall with 73 locals and 3 arguments
# Core:function:is1:11
 644: pushFromStack 1
 645: dup by 1
 646: pushConstant inline builtinTypeOf
 647: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 648: pushFromStack 1
 649: pushFromStack 4
 650: pushFromStack 2
 651: call with 1 argument
 652: pushConstant inline builtinEquals
 653: pushConstant inline Function
 654: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 655: pushFromStack 2
 656: pushFromStack 4
 657: pushFromStack 3
 658: pushFromStack 3
 659: call with 2 arguments
 660: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
 661: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 662: pushConstant <replaced address 94de2b63568838d2> Core:function:is1:11:3
 663: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 664: pushFromStack 3
 665: pushFromStack 5
 666: pushFromStack 4
 667: pushFromStack 4
 668: pushFromStack 4
 669: call with 3 arguments
 670: pushConstant inline builtinGetArgumentCount
 671: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 672: pushFromStack 1
 673: pushFromStack 16
 674: pushFromStack 2
 675: call with 1 argument
 676: pushConstant inline 1
 677: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 678: pushFromStack 5
 679: drop
 680: pushFromStack 13
 681: pushFromStack 3
 682: pushFromStack 3
 683: pushFromStack 3
 684: tailCall with 19 locals and 2 arguments
# Core:function:is1
 685: pushFromStack 1
 686: dup by 1
 687: pushConstant inline builtinTypeOf
 688: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
 689: pushFromStack 1
 690: pushFromStack 4
 691: pushFromStack 2
 692: call with 1 argument
 693: pushConstant inline builtinEquals
 694: pushConstant inline Function
 695: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 696: pushFromStack 2
 697: pushFromStack 4
 698: pushFromStack 3
 699: pushFromStack 3
 700: call with 2 arguments
 701: pushFromStack 8
 702: createFunction with 0 arguments capturing 0 starting at ip-644
 703: pushConstant <replaced address 0d2f632a7ac72050> { 3 arguments (capturing nothing) → ip-428 }
 704: pushConstant <replaced address 4fd190ed4a0ecdb3> { 0 arguments (capturing nothing) → ip-97 }
 705: pushConstant <replaced address 165fc9386f0eaeea> Core:function:is1:13
 706: pushFromStack 2
 707: pushFromStack 6
 708: pushFromStack 5
 709: pushFromStack 4
 710: pushFromStack 4
 711: tailCall with 14 locals and 3 arguments
# Core:result:is:1:equals:then
 712: pushConstant inline builtinTagGetValue
 713: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 714: pushFromStack 1
 715: pushFromStack 4
 716: pushFromStack 2
 717: call with 1 argument
 718: pushConstant inline Match
 719: pushFromStack 0
 720: pushFromStack 2
 721: createList 2
 722: popMultipleBelowTop 6
 723: return
# Core:result:is:1:equals:else
 724: pushConstant inline builtinToDebugText
 725: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 726: pushFromStack 1
 727: pushFromStack 4
 728: pushFromStack 2
 729: call with 1 argument
 730: pushFromStack 0
 731: drop
 732: pushConstant <replaced address 921784a50cc37e2a> (NoMatch, "Expected tag to have a value, but it doesn't have any.")
 733: popMultipleBelowTop 5
 734: return
# Core:result:is:1:equals:then
 735: pushFromStack 1
 736: dup by 1
 737: pushConstant inline builtinTagHasValue
 738: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 739: pushFromStack 1
 740: pushFromStack 4
 741: pushFromStack 2
 742: call with 1 argument
 743: pushFromStack 0
 744: dup by 1
 745: pushConstant inline builtinEquals
 746: pushConstant inline True
 747: pushFromStack 1
 748: pushFromStack 1
 749: pushFromStack 4
 750: pushFromStack 6
 751: call with 2 arguments
 752: pushFromStack 7
 753: createFunction with 0 arguments capturing 0 starting at ip-712
 754: pushFromStack 5
 755: createFunction with 0 arguments capturing 0 starting at ip-724
 756: pushConstant inline builtinIfElse
 757: pushFromStack 0
 758: pushFromStack 6
 759: pushFromStack 5
 760: pushFromStack 4
 761: pushFromStack 13
 762: tailCall with 13 locals and 3 arguments
# Core:result:is:1:equals:else
 763: pushConstant inline builtinToDebugText
 764: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 765: pushFromStack 1
 766: pushFromStack 4
 767: pushFromStack 2
 768: call with 1 argument
 769: pushConstant inline builtinTextConcatenate
 770: pushConstant <replaced address c92756745a9e6460> "Expected Ok, got "
 771: pushFromStack 1
 772: pushFromStack 1
 773: pushFromStack 4
 774: pushFromStack 6
 775: call with 2 arguments
 776: pushConstant <replaced address ee78a67daaae8b1b> "."
 777: pushFromStack 3
 778: pushFromStack 2
 779: pushFromStack 2
 780: pushFromStack 8
 781: call with 2 arguments
 782: pushConstant inline NoMatch
 783: pushFromStack 0
 784: pushFromStack 2
 785: createList 2
 786: popMultipleBelowTop 11
 787: return
# Core:result:is:1:equals:then
 788: pushFromStack 1
 789: dup by 1
 790: pushConstant inline builtinTagWithoutValue
 791: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 792: pushFromStack 1
 793: pushFromStack 4
 794: pushFromStack 2
 795: call with 1 argument
 796: pushFromStack 0
 797: dup by 1
 798: pushConstant inline builtinEquals
 799: pushConstant inline Ok
 800: pushFromStack 1
 801: pushFromStack 1
 802: pushFromStack 4
 803: pushFromStack 6
 804: call with 2 arguments
 805: pushFromStack 7
 806: createFunction with 0 arguments capturing 0 starting at ip-735
 807: pushFromStack 5
 808: createFunction with 0 arguments capturing 0 starting at ip-763
 809: pushConstant inline builtinIfElse
 810: pushFromStack 0
 811: pushFromStack 6
 812: pushFromStack 5
 813: pushFromStack 4
 814: pushFromStack 13
 815: tailCall with 13 locals and 3 arguments
# Core:result:is:1:equals:else
 816: pushConstant inline builtinToDebugText
 817: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 818: pushFromStack 1
 819: pushFromStack 4
 820: pushFromStack 2
 821: call with 1 argument
 822: pushConstant inline builtinTextConcatenate
 823: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 824: pushFromStack 1
 825: pushFromStack 1
 826: pushFromStack 4
 827: pushFromStack 6
 828: call with 2 arguments
 829: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 830: pushFromStack 3
 831: pushFromStack 2
 832: pushFromStack 2
 833: pushFromStack 8
 834: call with 2 arguments
 835: pushConstant inline NoMatch
 836: pushFromStack 0
 837: pushFromStack 2
 838: createList 2
 839: popMultipleBelowTop 11
 840: return
# Core:result:is:1:isMatch:then
 841: pushFromStack 1
 842: popMultipleBelowTop 2
 843: return
# Core:result:is:1:equals:then
 844: pushConstant inline builtinTagGetValue
 845: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 846: pushFromStack 1
 847: pushFromStack 4
 848: pushFromStack 2
 849: call with 1 argument
 850: pushConstant inline Match
 851: pushFromStack 0
 852: pushFromStack 2
 853: createList 2
 854: popMultipleBelowTop 6
 855: return
# Core:result:is:1:equals:else
 856: pushConstant inline builtinToDebugText
 857: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 858: pushFromStack 1
 859: pushFromStack 4
 860: pushFromStack 2
 861: call with 1 argument
 862: pushFromStack 0
 863: drop
 864: pushConstant <replaced address 921784a50cc37e2a> (NoMatch, "Expected tag to have a value, but it doesn't have any.")
 865: popMultipleBelowTop 5
 866: return
# Core:result:is:1:equals:then
 867: pushFromStack 1
 868: dup by 1
 869: pushConstant inline builtinTagHasValue
 870: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 871: pushFromStack 1
 872: pushFromStack 4
 873: pushFromStack 2
 874: call with 1 argument
 875: pushFromStack 0
 876: dup by 1
 877: pushConstant inline builtinEquals
 878: pushConstant inline True
 879: pushFromStack 1
 880: pushFromStack 1
 881: pushFromStack 4
 882: pushFromStack 6
 883: call with 2 arguments
 884: pushFromStack 7
 885: createFunction with 0 arguments capturing 0 starting at ip-844
 886: pushFromStack 5
 887: createFunction with 0 arguments capturing 0 starting at ip-856
 888: pushConstant inline builtinIfElse
 889: pushFromStack 0
 890: pushFromStack 6
 891: pushFromStack 5
 892: pushFromStack 4
 893: pushFromStack 13
 894: tailCall with 13 locals and 3 arguments
# Core:result:is:1:equals:else
 895: pushConstant inline builtinToDebugText
 896: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 897: pushFromStack 1
 898: pushFromStack 4
 899: pushFromStack 2
 900: call with 1 argument
 901: pushConstant inline builtinTextConcatenate
 902: pushConstant <replaced address 255d07f7c5e32c69> "Expected Error, got "
 903: pushFromStack 1
 904: pushFromStack 1
 905: pushFromStack 4
 906: pushFromStack 6
 907: call with 2 arguments
 908: pushConstant <replaced address ee78a67daaae8b1b> "."
 909: pushFromStack 3
 910: pushFromStack 2
 911: pushFromStack 2
 912: pushFromStack 8
 913: call with 2 arguments
 914: pushConstant inline NoMatch
 915: pushFromStack 0
 916: pushFromStack 2
 917: createList 2
 918: popMultipleBelowTop 11
 919: return
# Core:result:is:1:equals:then
 920: pushFromStack 1
 921: dup by 1
 922: pushConstant inline builtinTagWithoutValue
 923: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 924: pushFromStack 1
 925: pushFromStack 4
 926: pushFromStack 2
 927: call with 1 argument
 928: pushFromStack 0
 929: dup by 1
 930: pushConstant inline builtinEquals
 931: pushConstant inline Error
 932: pushFromStack 1
 933: pushFromStack 1
 934: pushFromStack 4
 935: pushFromStack 6
 936: call with 2 arguments
 937: pushFromStack 7
 938: createFunction with 0 arguments capturing 0 starting at ip-867
 939: pushFromStack 5
 940: createFunction with 0 arguments capturing 0 starting at ip-895
 941: pushConstant inline builtinIfElse
 942: pushFromStack 0
 943: pushFromStack 6
 944: pushFromStack 5
 945: pushFromStack 4
 946: pushFromStack 13
 947: tailCall with 13 locals and 3 arguments
# Core:result:is:1:equals:else
 948: pushConstant inline builtinToDebugText
 949: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 950: pushFromStack 1
 951: pushFromStack 4
 952: pushFromStack 2
 953: call with 1 argument
 954: pushConstant inline builtinTextConcatenate
 955: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
 956: pushFromStack 1
 957: pushFromStack 1
 958: pushFromStack 4
 959: pushFromStack 6
 960: call with 2 arguments
 961: pushConstant <replaced address 8dbb18a7278b48a0> "`."
 962: pushFromStack 3
 963: pushFromStack 2
 964: pushFromStack 2
 965: pushFromStack 8
 966: call with 2 arguments
 967: pushConstant inline NoMatch
 968: pushFromStack 0
 969: pushFromStack 2
 970: createList 2
 971: popMultipleBelowTop 11
 972: return
# Core:result:is:1:isMatch:else
 973: pushFromStack 1
 974: dup by 1
 975: pushConstant inline builtinTypeOf
 976: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
 977: pushFromStack 1
 978: pushFromStack 4
 979: pushFromStack 2
 980: call with 1 argument
 981: pushFromStack 0
 982: dup by 1
 983: pushConstant inline builtinEquals
 984: pushConstant inline Tag
 985: pushFromStack 1
 986: pushFromStack 1
 987: pushFromStack 4
 988: pushFromStack 6
 989: call with 2 arguments
 990: pushFromStack 7
 991: createFunction with 0 arguments capturing 0 starting at ip-920
 992: pushFromStack 5
 993: createFunction with 0 arguments capturing 0 starting at ip-948
 994: pushConstant inline builtinIfElse
 995: pushFromStack 0
 996: pushFromStack 6
 997: pushFromStack 5
 998: pushFromStack 4
 999: pushFromStack 13
1000: tailCall with 13 locals and 3 arguments
# Core:result:is:1:case-0:matched
1001: pushConstant inline builtinListGet
1002: pushConstant inline 1
1003: pushConstant <replaced address f5c06b692130fe48> Core:result:is:1:_
1004: pushFromStack 2
1005: pushFromStack 5
1006: pushFromStack 3
1007: pushFromStack 3
1008: call with 2 arguments
1009: pushFromStack 0
1010: drop
1011: pushConstant inline True
1012: popMultipleBelowTop 6
1013: return
# Core:result:is:1:case-0:didNotMatch
1014: pushConstant inline builtinListGet
1015: pushConstant inline 1
1016: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1017: pushFromStack 2
1018: pushFromStack 5
1019: pushFromStack 3
1020: pushFromStack 3
1021: call with 2 arguments
1022: pushFromStack 0
1023: drop
1024: pushConstant inline False
1025: popMultipleBelowTop 6
1026: return
# Core:result:is
1027: pushFromStack 1
1028: dup by 2
1029: pushConstant inline builtinTypeOf
1030: pushConstant <replaced address e128eb82cb40fae3> Core:result:is:1
1031: pushFromStack 1
1032: pushFromStack 4
1033: pushFromStack 2
1034: call with 1 argument
1035: pushFromStack 0
1036: dup by 1
1037: pushConstant inline builtinEquals
1038: pushConstant inline Tag
1039: pushFromStack 1
1040: pushFromStack 1
1041: pushFromStack 4
1042: pushFromStack 6
1043: call with 2 arguments
1044: pushFromStack 7
1045: createFunction with 0 arguments capturing 0 starting at ip-788
1046: pushFromStack 5
1047: createFunction with 0 arguments capturing 0 starting at ip-816
1048: pushConstant inline builtinIfElse
1049: pushFromStack 0
1050: pushFromStack 6
1051: pushFromStack 5
1052: pushFromStack 4
1053: pushFromStack 13
1054: call with 3 arguments
1055: pushFromStack 0
1056: dup by 1
1057: pushConstant inline builtinListGet
1058: pushConstant inline 0
1059: pushFromStack 1
1060: pushFromStack 3
1061: pushFromStack 2
1062: pushFromStack 15
1063: call with 2 arguments
1064: pushConstant inline Match
1065: pushFromStack 12
1066: pushFromStack 2
1067: pushFromStack 2
1068: pushFromStack 17
1069: call with 2 arguments
1070: pushFromStack 5
1071: createFunction with 0 arguments capturing 0 starting at ip-841
1072: pushFromStack 12
1073: createFunction with 0 arguments capturing 0 starting at ip-973
1074: pushFromStack 10
1075: pushFromStack 5
1076: pushFromStack 4
1077: pushFromStack 3
1078: pushFromStack 23
1079: call with 3 arguments
1080: pushFromStack 0
1081: dup by 2
1082: pushFromStack 9
1083: pushFromStack 1
1084: pushFromStack 10
1085: pushFromStack 23
1086: call with 2 arguments
1087: pushFromStack 19
1088: pushFromStack 1
1089: pushFromStack 9
1090: pushFromStack 24
1091: call with 2 arguments
1092: pushFromStack 2
1093: createFunction with 0 arguments capturing 0 starting at ip-1001
1094: pushFromStack 1
1095: createFunction with 0 arguments capturing 0 starting at ip-1014
1096: pushFromStack 17
1097: pushFromStack 5
1098: pushFromStack 4
1099: pushFromStack 3
1100: pushFromStack 30
1101: tailCall with 30 locals and 3 arguments
# Core:result:mapOrElse:30:equals:then
1102: pushConstant inline builtinTagGetValue
1103: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1104: pushFromStack 1
1105: pushFromStack 4
1106: pushFromStack 2
1107: call with 1 argument
1108: pushConstant inline Match
1109: pushFromStack 0
1110: pushFromStack 2
1111: createList 2
1112: popMultipleBelowTop 6
1113: return
# Core:result:mapOrElse:30:equals:else
1114: pushConstant inline builtinToDebugText
1115: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1116: pushFromStack 1
1117: pushFromStack 4
1118: pushFromStack 2
1119: call with 1 argument
1120: pushFromStack 0
1121: drop
1122: pushConstant <replaced address 921784a50cc37e2a> (NoMatch, "Expected tag to have a value, but it doesn't have any.")
1123: popMultipleBelowTop 5
1124: return
# Core:result:mapOrElse:30:equals:then
1125: pushFromStack 1
1126: dup by 1
1127: pushConstant inline builtinTagHasValue
1128: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1129: pushFromStack 1
1130: pushFromStack 4
1131: pushFromStack 2
1132: call with 1 argument
1133: pushFromStack 0
1134: dup by 1
1135: pushConstant inline builtinEquals
1136: pushConstant inline True
1137: pushFromStack 1
1138: pushFromStack 1
1139: pushFromStack 4
1140: pushFromStack 6
1141: call with 2 arguments
1142: pushFromStack 7
1143: createFunction with 0 arguments capturing 0 starting at ip-1102
1144: pushFromStack 5
1145: createFunction with 0 arguments capturing 0 starting at ip-1114
1146: pushConstant inline builtinIfElse
1147: pushFromStack 0
1148: pushFromStack 6
1149: pushFromStack 5
1150: pushFromStack 4
1151: pushFromStack 13
1152: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1153: pushConstant inline builtinToDebugText
1154: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1155: pushFromStack 1
1156: pushFromStack 4
1157: pushFromStack 2
1158: call with 1 argument
1159: pushConstant inline builtinTextConcatenate
1160: pushConstant <replaced address c92756745a9e6460> "Expected Ok, got "
1161: pushFromStack 1
1162: pushFromStack 1
1163: pushFromStack 4
1164: pushFromStack 6
1165: call with 2 arguments
1166: pushConstant <replaced address ee78a67daaae8b1b> "."
1167: pushFromStack 3
1168: pushFromStack 2
1169: pushFromStack 2
1170: pushFromStack 8
1171: call with 2 arguments
1172: pushConstant inline NoMatch
1173: pushFromStack 0
1174: pushFromStack 2
1175: createList 2
1176: popMultipleBelowTop 11
1177: return
# Core:result:mapOrElse:30:equals:then
1178: pushFromStack 1
1179: dup by 1
1180: pushConstant inline builtinTagWithoutValue
1181: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1182: pushFromStack 1
1183: pushFromStack 4
1184: pushFromStack 2
1185: call with 1 argument
1186: pushFromStack 0
1187: dup by 1
1188: pushConstant inline builtinEquals
1189: pushConstant inline Ok
1190: pushFromStack 1
1191: pushFromStack 1
1192: pushFromStack 4
1193: pushFromStack 6
1194: call with 2 arguments
1195: pushFromStack 7
1196: createFunction with 0 arguments capturing 0 starting at ip-1125
1197: pushFromStack 5
1198: createFunction with 0 arguments capturing 0 starting at ip-1153
1199: pushConstant inline builtinIfElse
1200: pushFromStack 0
1201: pushFromStack 6
1202: pushFromStack 5
1203: pushFromStack 4
1204: pushFromStack 13
1205: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1206: pushConstant inline builtinToDebugText
1207: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1208: pushFromStack 1
1209: pushFromStack 4
1210: pushFromStack 2
1211: call with 1 argument
1212: pushConstant inline builtinTextConcatenate
1213: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
1214: pushFromStack 1
1215: pushFromStack 1
1216: pushFromStack 4
1217: pushFromStack 6
1218: call with 2 arguments
1219: pushConstant <replaced address 8dbb18a7278b48a0> "`."
1220: pushFromStack 3
1221: pushFromStack 2
1222: pushFromStack 2
1223: pushFromStack 8
1224: call with 2 arguments
1225: pushConstant inline NoMatch
1226: pushFromStack 0
1227: pushFromStack 2
1228: createList 2
1229: popMultipleBelowTop 11
1230: return
# Core:result:mapOrElse:30:case-0:matched
1231: pushConstant inline builtinListGet
1232: pushConstant inline 1
1233: pushConstant <replaced address ba8faee21655e5cb> Core:result:mapOrElse:30:value
1234: pushFromStack 2
1235: pushFromStack 5
1236: pushFromStack 3
1237: pushFromStack 3
1238: call with 2 arguments
1239: pushConstant <replaced address 0eca58389ad22836> Core:result:mapOrElse:30:2
1240: pushFromStack 7
1241: pushFromStack 2
1242: pushFromStack 2
1243: tailCall with 8 locals and 1 argument
# Core:result:mapOrElse:30:equals:then
1244: pushConstant inline builtinTagGetValue
1245: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1246: pushFromStack 1
1247: pushFromStack 4
1248: pushFromStack 2
1249: call with 1 argument
1250: pushConstant inline Match
1251: pushFromStack 0
1252: pushFromStack 2
1253: createList 2
1254: popMultipleBelowTop 6
1255: return
# Core:result:mapOrElse:30:equals:else
1256: pushConstant inline builtinToDebugText
1257: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1258: pushFromStack 1
1259: pushFromStack 4
1260: pushFromStack 2
1261: call with 1 argument
1262: pushFromStack 0
1263: drop
1264: pushConstant <replaced address 921784a50cc37e2a> (NoMatch, "Expected tag to have a value, but it doesn't have any.")
1265: popMultipleBelowTop 5
1266: return
# Core:result:mapOrElse:30:equals:then
1267: pushFromStack 1
1268: dup by 1
1269: pushConstant inline builtinTagHasValue
1270: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1271: pushFromStack 1
1272: pushFromStack 4
1273: pushFromStack 2
1274: call with 1 argument
1275: pushFromStack 0
1276: dup by 1
1277: pushConstant inline builtinEquals
1278: pushConstant inline True
1279: pushFromStack 1
1280: pushFromStack 1
1281: pushFromStack 4
1282: pushFromStack 6
1283: call with 2 arguments
1284: pushFromStack 7
1285: createFunction with 0 arguments capturing 0 starting at ip-1244
1286: pushFromStack 5
1287: createFunction with 0 arguments capturing 0 starting at ip-1256
1288: pushConstant inline builtinIfElse
1289: pushFromStack 0
1290: pushFromStack 6
1291: pushFromStack 5
1292: pushFromStack 4
1293: pushFromStack 13
1294: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1295: pushConstant inline builtinToDebugText
1296: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1297: pushFromStack 1
1298: pushFromStack 4
1299: pushFromStack 2
1300: call with 1 argument
1301: pushConstant inline builtinTextConcatenate
1302: pushConstant <replaced address 255d07f7c5e32c69> "Expected Error, got "
1303: pushFromStack 1
1304: pushFromStack 1
1305: pushFromStack 4
1306: pushFromStack 6
1307: call with 2 arguments
1308: pushConstant <replaced address ee78a67daaae8b1b> "."
1309: pushFromStack 3
1310: pushFromStack 2
1311: pushFromStack 2
1312: pushFromStack 8
1313: call with 2 arguments
1314: pushConstant inline NoMatch
1315: pushFromStack 0
1316: pushFromStack 2
1317: createList 2
1318: popMultipleBelowTop 11
1319: return
# Core:result:mapOrElse:30:equals:then
1320: pushFromStack 1
1321: dup by 1
1322: pushConstant inline builtinTagWithoutValue
1323: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1324: pushFromStack 1
1325: pushFromStack 4
1326: pushFromStack 2
1327: call with 1 argument
1328: pushFromStack 0
1329: dup by 1
1330: pushConstant inline builtinEquals
1331: pushConstant inline Error
1332: pushFromStack 1
1333: pushFromStack 1
1334: pushFromStack 4
1335: pushFromStack 6
1336: call with 2 arguments
1337: pushFromStack 7
1338: createFunction with 0 arguments capturing 0 starting at ip-1267
1339: pushFromStack 5
1340: createFunction with 0 arguments capturing 0 starting at ip-1295
1341: pushConstant inline builtinIfElse
1342: pushFromStack 0
1343: pushFromStack 6
1344: pushFromStack 5
1345: pushFromStack 4
1346: pushFromStack 13
1347: tailCall with 13 locals and 3 arguments
# Core:result:mapOrElse:30:equals:else
1348: pushConstant inline builtinToDebugText
1349: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1350: pushFromStack 1
1351: pushFromStack 4
1352: pushFromStack 2
1353: call with 1 argument
1354: pushConstant inline builtinTextConcatenate
1355: pushConstant <replaced address 4ba19bf7dddc0462> "Expected a Tag, got `"
1356: pushFromStack 1
1357: pushFromStack 1
1358: pushFromStack 4
1359: pushFromStack 6
1360: call with 2 arguments
1361: pushConstant <replaced address 8dbb18a7278b48a0> "`."
1362: pushFromStack 3
1363: pushFromStack 2
1364: pushFromStack 2
1365: pushFromStack 8
1366: call with 2 arguments
1367: pushConstant inline NoMatch
1368: pushFromStack 0
1369: pushFromStack 2
1370: createList 2
1371: popMultipleBelowTop 11
1372: return
# Core:result:mapOrElse:30:case-1:matched
1373: pushConstant inline builtinListGet
1374: pushConstant inline 1
1375: pushConstant <replaced address 6912ed2aef33db36> Core:result:mapOrElse:30:value#1
1376: pushFromStack 2
1377: pushFromStack 5
1378: pushFromStack 3
1379: pushFromStack 3
1380: call with 2 arguments
1381: pushConstant <replaced address 775a8fa4d727f34d> Core:result:mapOrElse:30:5
1382: pushFromStack 7
1383: pushFromStack 2
1384: pushFromStack 2
1385: tailCall with 8 locals and 1 argument
# Core:result:mapOrElse:30:case-1:didNotMatch
1386: pushConstant inline builtinListGet
1387: pushConstant inline 1
1388: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1389: pushFromStack 2
1390: pushFromStack 5
1391: pushFromStack 3
1392: pushFromStack 3
1393: call with 2 arguments
1394: pushConstant <replaced address ef5d2e500159f5dd> "No case matched the given expression."
1395: pushFromStack 1
1396: drop
1397: pushFromStack 0
1398: pushFromStack 3
1399: panic
1400: popMultipleBelowTop 7
1401: return
# Core:result:mapOrElse:30:case-0:didNotMatch
1402: pushFromStack 3
1403: dup by 1
1404: pushConstant inline builtinListGet
1405: pushConstant inline 1
1406: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1407: pushFromStack 2
1408: pushFromStack 5
1409: pushFromStack 3
1410: pushFromStack 3
1411: call with 2 arguments
1412: pushConstant inline builtinTypeOf
1413: pushFromStack 0
1414: pushFromStack 9
1415: pushFromStack 4
1416: call with 1 argument
1417: pushFromStack 0
1418: dup by 1
1419: pushConstant inline builtinEquals
1420: pushConstant inline Tag
1421: pushFromStack 1
1422: pushFromStack 1
1423: pushFromStack 4
1424: pushFromStack 8
1425: call with 2 arguments
1426: pushFromStack 12
1427: createFunction with 0 arguments capturing 0 starting at ip-1320
1428: pushFromStack 5
1429: createFunction with 0 arguments capturing 0 starting at ip-1348
1430: pushConstant inline builtinIfElse
1431: pushFromStack 0
1432: pushFromStack 6
1433: pushFromStack 5
1434: pushFromStack 4
1435: pushFromStack 15
1436: call with 3 arguments
1437: pushFromStack 0
1438: dup by 2
1439: pushConstant inline 0
1440: pushFromStack 15
1441: pushFromStack 2
1442: pushFromStack 2
1443: pushFromStack 16
1444: call with 2 arguments
1445: pushConstant inline Match
1446: pushFromStack 11
1447: pushFromStack 2
1448: pushFromStack 2
1449: pushFromStack 18
1450: call with 2 arguments
1451: pushFromStack 21
1452: pushFromStack 5
1453: createFunction with 0 arguments capturing 1, 0 starting at ip-1373
1454: pushFromStack 1
1455: createFunction with 0 arguments capturing 0 starting at ip-1386
1456: pushFromStack 20
1457: drop
1458: pushFromStack 10
1459: pushFromStack 6
1460: pushFromStack 4
1461: pushFromStack 3
1462: pushFromStack 25
1463: tailCall with 28 locals and 3 arguments
# Core:result:mapOrElse
1464: pushFromStack 3
1465: dup by 3
1466: pushFromStack 2
1467: dup by 1
1468: pushFromStack 1
1469: dup by 1
1470: pushConstant <replaced address 3ca1d8923c3da26f> { 1 argument (capturing nothing) → ip-1027 }
1471: pushConstant <replaced address 266d488b0b2596a5> Core:result:mapOrElse:2
1472: pushFromStack 1
1473: pushFromStack 6
1474: pushFromStack 2
1475: call with 1 argument
1476: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1477: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1478: pushConstant <replaced address 0f59d2d5f5f1d623> Core:result:mapOrElse:4
1479: pushFromStack 2
1480: pushFromStack 4
1481: pushFromStack 3
1482: pushFromStack 9
1483: pushFromStack 4
1484: call with 3 arguments
1485: pushConstant <replaced address 770bc58f92609921> { 1 argument (capturing nothing) → ip-685 }
1486: pushConstant <replaced address f8465d20e0be15a1> Core:result:mapOrElse:14
1487: pushFromStack 1
1488: pushFromStack 12
1489: pushFromStack 2
1490: call with 1 argument
1491: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
1492: pushConstant <replaced address b19ab086e749027f> Core:result:mapOrElse:16
1493: pushFromStack 8
1494: pushFromStack 3
1495: pushFromStack 3
1496: pushFromStack 15
1497: pushFromStack 4
1498: call with 3 arguments
1499: pushConstant <replaced address 9a873ad1d21541fd> Core:result:mapOrElse:26
1500: pushFromStack 6
1501: pushFromStack 16
1502: pushFromStack 2
1503: call with 1 argument
1504: pushConstant <replaced address d962951e9f7283f6> "`function.is1 errorMapper` was not satisfied"
1505: pushConstant <replaced address 8373c51cbce1817b> Core:result:mapOrElse:28
1506: pushFromStack 13
1507: pushFromStack 3
1508: pushFromStack 3
1509: pushFromStack 20
1510: pushFromStack 4
1511: call with 3 arguments
1512: pushConstant inline builtinTypeOf
1513: pushConstant <replaced address e07a41ae6e9d6c51> Core:result:mapOrElse:30
1514: pushFromStack 1
1515: pushFromStack 24
1516: pushFromStack 2
1517: call with 1 argument
1518: pushFromStack 0
1519: dup by 1
1520: pushConstant inline builtinEquals
1521: pushConstant inline Tag
1522: pushFromStack 1
1523: pushFromStack 1
1524: pushFromStack 4
1525: pushFromStack 6
1526: call with 2 arguments
1527: pushFromStack 27
1528: createFunction with 0 arguments capturing 0 starting at ip-1178
1529: pushFromStack 5
1530: createFunction with 0 arguments capturing 0 starting at ip-1206
1531: pushConstant inline builtinIfElse
1532: pushFromStack 0
1533: pushFromStack 6
1534: pushFromStack 5
1535: pushFromStack 4
1536: pushFromStack 13
1537: call with 3 arguments
1538: pushFromStack 0
1539: dup by 2
1540: pushConstant inline builtinListGet
1541: pushConstant inline 0
1542: pushFromStack 1
1543: pushFromStack 3
1544: pushFromStack 2
1545: pushFromStack 15
1546: call with 2 arguments
1547: pushConstant inline Match
1548: pushFromStack 12
1549: pushFromStack 2
1550: pushFromStack 2
1551: pushFromStack 17
1552: call with 2 arguments
1553: pushFromStack 37
1554: pushFromStack 6
1555: createFunction with 0 arguments capturing 1, 0 starting at ip-1231
1556: pushFromStack 13
1557: pushFromStack 40
1558: pushFromStack 3
1559: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-1402
1560: pushFromStack 35
1561: drop
1562: pushFromStack 29
1563: drop
1564: pushFromStack 24
1565: drop
1566: pushFromStack 13
1567: pushFromStack 8
1568: pushFromStack 6
1569: pushFromStack 3
1570: pushFromStack 26
1571: tailCall with 46 locals and 3 arguments
# Core:result:flatMap:19
1572: pushConstant <replaced address 4fc1284a2ffbaf9e> Core:result:flatMap:19:2
1573: pushFromStack 3
1574: pushFromStack 3
1575: pushFromStack 2
1576: tailCall with 4 locals and 1 argument
# Core:result:mapOr:20
1577: pushFromStack 1
1578: drop
1579: pushFromStack 2
1580: popMultipleBelowTop 3
1581: return
# Core:result:flatMap
1582: pushFromStack 2
1583: dup by 3
1584: pushFromStack 1
1585: dup by 1
1586: pushConstant <replaced address 3ca1d8923c3da26f> { 1 argument (capturing nothing) → ip-1027 }
1587: pushConstant <replaced address 05e45b91c25d1055> Core:result:flatMap:2
1588: pushFromStack 1
1589: pushFromStack 5
1590: pushFromStack 2
1591: call with 1 argument
1592: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1593: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1594: pushConstant <replaced address eed0e5dcad294fd3> Core:result:flatMap:4
1595: pushFromStack 2
1596: pushFromStack 4
1597: pushFromStack 3
1598: pushFromStack 9
1599: pushFromStack 4
1600: call with 3 arguments
1601: pushConstant <replaced address 770bc58f92609921> { 1 argument (capturing nothing) → ip-685 }
1602: pushConstant <replaced address d7bd702797f58f51> Core:result:flatMap:14
1603: pushFromStack 1
1604: pushFromStack 11
1605: pushFromStack 2
1606: call with 1 argument
1607: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
1608: pushConstant <replaced address c0a9fa7282c1cecf> Core:result:flatMap:16
1609: pushFromStack 8
1610: pushFromStack 3
1611: pushFromStack 3
1612: pushFromStack 15
1613: pushFromStack 4
1614: call with 3 arguments
1615: pushFromStack 14
1616: createFunction with 1 argument capturing 0 starting at ip-1572
1617: pushFromStack 0
1618: dup by 1
1619: pushConstant <replaced address 017970d57aa05a94> Core:result:mapOr:2
1620: pushFromStack 15
1621: pushFromStack 19
1622: pushFromStack 2
1623: call with 1 argument
1624: pushConstant <replaced address b5203f97f827ee8e> Core:result:flatMap:21
1625: pushConstant <replaced address 5e7fed672c5c456a> Core:result:mapOr:4
1626: pushFromStack 15
1627: pushFromStack 3
1628: pushFromStack 16
1629: pushFromStack 4
1630: pushFromStack 4
1631: call with 3 arguments
1632: pushConstant <replaced address 476c77b2172884e8> Core:result:mapOr:14
1633: pushFromStack 13
1634: pushFromStack 7
1635: pushFromStack 2
1636: call with 1 argument
1637: pushConstant <replaced address bc3f0fb63b05190e> Core:result:mapOr:16
1638: pushFromStack 19
1639: pushFromStack 2
1640: pushFromStack 14
1641: pushFromStack 8
1642: pushFromStack 4
1643: call with 3 arguments
1644: pushFromStack 26
1645: createFunction with 1 argument capturing 0 starting at ip-1577
1646: pushConstant <replaced address 2e5d2b312d58f554> { 3 arguments (capturing nothing) → ip-1464 }
1647: pushConstant <replaced address c7c8ca90c59ef94f> Core:result:mapOr:21
1648: pushFromStack 21
1649: drop
1650: pushFromStack 15
1651: drop
1652: pushFromStack 8
1653: drop
1654: pushFromStack 4
1655: drop
1656: pushFromStack 1
1657: pushFromStack 4
1658: pushFromStack 15
1659: pushFromStack 5
1660: pushFromStack 4
1661: tailCall with 31 locals and 3 arguments
# Core:result:map:19
1662: pushConstant <replaced address e2ca64edcf3c85fe> Core:result:map:19:3
1663: pushFromStack 3
1664: pushFromStack 3
1665: pushFromStack 2
1666: call with 1 argument
1667: pushFromStack 0
1668: createTag Ok
1669: popMultipleBelowTop 5
1670: return
# Core:result:map
1671: pushFromStack 2
1672: dup by 1
1673: pushFromStack 1
1674: dup by 1
1675: pushConstant <replaced address 3ca1d8923c3da26f> { 1 argument (capturing nothing) → ip-1027 }
1676: pushConstant <replaced address 0e5dcb874e6dfa57> Core:result:map:2
1677: pushFromStack 1
1678: pushFromStack 5
1679: pushFromStack 2
1680: call with 1 argument
1681: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1682: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1683: pushConstant <replaced address b1574ef59cb20f81> Core:result:map:4
1684: pushFromStack 2
1685: pushFromStack 4
1686: pushFromStack 3
1687: pushFromStack 9
1688: pushFromStack 4
1689: call with 3 arguments
1690: pushConstant <replaced address 770bc58f92609921> { 1 argument (capturing nothing) → ip-685 }
1691: pushConstant <replaced address c86ac4aab1e5d003> Core:result:map:14
1692: pushFromStack 1
1693: pushFromStack 11
1694: pushFromStack 2
1695: call with 1 argument
1696: pushConstant <replaced address 56cefe855ac72448> "`function.is1 okMapper` was not satisfied"
1697: pushConstant <replaced address 53982ca68e093bdd> Core:result:map:16
1698: pushFromStack 8
1699: pushFromStack 3
1700: pushFromStack 3
1701: pushFromStack 15
1702: pushFromStack 4
1703: call with 3 arguments
1704: pushFromStack 14
1705: createFunction with 1 argument capturing 0 starting at ip-1662
1706: pushConstant <replaced address 8dfc7c1a939d20ec> { 2 arguments (capturing nothing) → ip-1582 }
1707: pushConstant <replaced address 998b33832a916631> Core:result:map:20
1708: pushFromStack 10
1709: drop
1710: pushFromStack 4
1711: drop
1712: pushFromStack 1
1713: pushFromStack 20
1714: pushFromStack 4
1715: pushFromStack 3
1716: tailCall with 20 locals and 2 arguments
# Core:result:getValue
1717: pushFromStack 1
1718: dup by 3
1719: pushConstant <replaced address 3ca1d8923c3da26f> { 1 argument (capturing nothing) → ip-1027 }
1720: pushConstant <replaced address 055673228b46d5b7> Core:result:getValue:2
1721: pushFromStack 1
1722: pushFromStack 4
1723: pushFromStack 2
1724: call with 1 argument
1725: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1726: pushConstant <replaced address b1086454c3fcc390> "`is result` was not satisfied"
1727: pushConstant <replaced address a84ff690d98aeae1> Core:result:getValue:4
1728: pushFromStack 2
1729: pushFromStack 4
1730: pushFromStack 3
1731: pushFromStack 9
1732: pushFromStack 4
1733: call with 3 arguments
1734: pushConstant inline builtinTypeOf
1735: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1736: pushFromStack 1
1737: pushFromStack 11
1738: pushFromStack 2
1739: call with 1 argument
1740: pushConstant inline builtinEquals
1741: pushConstant inline Tag
1742: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1743: pushFromStack 2
1744: pushFromStack 4
1745: pushFromStack 3
1746: pushFromStack 3
1747: call with 2 arguments
1748: pushConstant <replaced address 056aa7001fbe6a6f> "`tag | typeIs Tag` was not satisfied"
1749: pushConstant <replaced address bf636c45eebeab63> Core:result:getValue:14
1750: pushConstant <replaced address 13077cf4fbb4e55a> Builtins::tagGetValue:5
1751: pushFromStack 13
1752: pushFromStack 4
1753: pushFromStack 4
1754: pushFromStack 4
1755: pushFromStack 4
1756: call with 3 arguments
1757: pushConstant inline builtinTagHasValue
1758: pushConstant <replaced address 41e70e1c83094f2c> Builtins::tagGetValue:11
1759: pushFromStack 1
1760: pushFromStack 22
1761: pushFromStack 2
1762: call with 1 argument
1763: pushConstant <replaced address e8c2dfb7598c479d> "`tag | ✨.tagHasValue` was not satisfied"
1764: pushConstant <replaced address 9eed8aae34c53a02> Builtins::tagGetValue:13
1765: pushFromStack 19
1766: pushFromStack 3
1767: pushFromStack 3
1768: pushFromStack 10
1769: pushFromStack 4
1770: call with 3 arguments
1771: pushConstant inline builtinTagGetValue
1772: pushConstant <replaced address 9e34e4f0d7d85134> Builtins::tagGetValue:19
1773: pushFromStack 19
1774: drop
1775: pushFromStack 8
1776: drop
1777: pushFromStack 2
1778: drop
1779: pushFromStack 1
1780: pushFromStack 28
1781: pushFromStack 2
1782: tailCall with 28 locals and 1 argument
# Examples:fibonacci:isLessThan
1783: pushFromStack 2
1784: dup by 1
1785: pushFromStack 1
1786: dup by 1
1787: pushConstant inline builtinTypeOf
1788: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1789: pushFromStack 1
1790: pushFromStack 5
1791: pushFromStack 2
1792: call with 1 argument
1793: pushConstant inline builtinEquals
1794: pushConstant inline Int
1795: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1796: pushFromStack 2
1797: pushFromStack 4
1798: pushFromStack 3
1799: pushFromStack 3
1800: call with 2 arguments
1801: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1802: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
1803: pushConstant <replaced address 2e5df8c541272e37> Examples:fibonacci:compareTo:10
1804: pushConstant <replaced address ab458b1cc1453acc> Builtins::intCompareTo:5
1805: pushFromStack 3
1806: pushFromStack 5
1807: pushFromStack 4
1808: pushFromStack 4
1809: pushFromStack 4
1810: call with 3 arguments
1811: pushFromStack 11
1812: pushFromStack 14
1813: pushFromStack 12
1814: call with 1 argument
1815: pushFromStack 9
1816: pushFromStack 1
1817: pushFromStack 10
1818: pushFromStack 10
1819: call with 2 arguments
1820: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
1821: pushConstant <replaced address 7c65f9f539f0d0fa> Builtins::intCompareTo:11
1822: pushFromStack 8
1823: pushFromStack 3
1824: pushFromStack 3
1825: pushFromStack 9
1826: pushFromStack 4
1827: call with 3 arguments
1828: pushConstant inline builtinIntCompareTo
1829: pushConstant <replaced address 41fcadf3280286e7> Builtins::intCompareTo:18
1830: pushFromStack 1
1831: pushFromStack 22
1832: pushFromStack 22
1833: pushFromStack 3
1834: call with 2 arguments
1835: pushConstant inline Less
1836: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1837: pushFromStack 10
1838: drop
1839: pushFromStack 5
1840: drop
1841: pushFromStack 18
1842: pushFromStack 3
1843: pushFromStack 3
1844: pushFromStack 3
1845: tailCall with 25 locals and 2 arguments
# Examples:fibonacci:fibonacci:2:12
1846: pushFromStack 1
1847: popMultipleBelowTop 2
1848: return
# Examples:fibonacci:fibonacci:2:13
1849: pushFromStack 2
1850: dup by 1
1851: pushFromStack 1
1852: dup by 3
1853: pushConstant inline builtinTypeOf
1854: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1855: pushFromStack 1
1856: pushFromStack 4
1857: pushFromStack 2
1858: call with 1 argument
1859: pushConstant inline builtinEquals
1860: pushConstant inline Int
1861: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1862: pushFromStack 2
1863: pushFromStack 4
1864: pushFromStack 3
1865: pushFromStack 3
1866: call with 2 arguments
1867: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
1868: pushConstant <replaced address c4f0291b7762e5a8> "`minuend | typeIs Int` was not satisfied"
1869: pushConstant <replaced address 3dcd25f189b573e4> Examples:fibonacci:fibonacci:2:13:11
1870: pushConstant <replaced address 7d04a0accae5758c> Builtins::intSubtract:5
1871: pushFromStack 3
1872: pushFromStack 5
1873: pushFromStack 4
1874: pushFromStack 4
1875: pushFromStack 4
1876: call with 3 arguments
1877: pushConstant inline builtinIntSubtract
1878: pushConstant inline 1
1879: pushConstant <replaced address 13bbc38331a2c1a7> Builtins::intSubtract:18
1880: pushFromStack 2
1881: pushFromStack 17
1882: pushFromStack 3
1883: pushFromStack 3
1884: call with 2 arguments
1885: pushConstant <replaced address ec50643a6293694f> Examples:fibonacci:fibonacci:2:13:12
1886: pushFromStack 19
1887: pushFromStack 2
1888: pushFromStack 2
1889: call with 1 argument
1890: pushFromStack 0
1891: dup by 1
1892: pushFromStack 17
1893: pushFromStack 20
1894: pushFromStack 18
1895: call with 1 argument
1896: pushFromStack 15
1897: pushFromStack 1
1898: pushFromStack 16
1899: pushFromStack 16
1900: call with 2 arguments
1901: pushConstant <replaced address edc1afb51c6d3aeb> Examples:fibonacci:fibonacci:2:13:32
1902: pushFromStack 13
1903: pushFromStack 2
1904: pushFromStack 14
1905: pushFromStack 3
1906: pushFromStack 14
1907: call with 3 arguments
1908: pushConstant inline 2
1909: pushFromStack 10
1910: pushFromStack 25
1911: pushFromStack 2
1912: pushFromStack 11
1913: call with 2 arguments
1914: pushConstant <replaced address 9c44edfdf54b3056> Examples:fibonacci:fibonacci:2:13:33
1915: pushFromStack 27
1916: pushFromStack 2
1917: pushFromStack 2
1918: call with 1 argument
1919: pushFromStack 0
1920: dup by 1
1921: pushFromStack 25
1922: pushFromStack 9
1923: pushFromStack 26
1924: call with 1 argument
1925: pushFromStack 23
1926: pushFromStack 1
1927: pushFromStack 24
1928: pushFromStack 24
1929: call with 2 arguments
1930: pushConstant <replaced address 65869b7b7c4defee> "`a | typeIs Int` was not satisfied"
1931: pushConstant <replaced address 4ac82c46ce2925c1> Examples:fibonacci:fibonacci:2:13:34
1932: pushConstant <replaced address 440a4a2e9e3a80bb> Builtins::intAdd:5
1933: pushFromStack 23
1934: pushFromStack 4
1935: pushFromStack 4
1936: pushFromStack 4
1937: pushFromStack 4
1938: call with 3 arguments
1939: pushFromStack 31
1940: pushFromStack 7
1941: pushFromStack 32
1942: call with 1 argument
1943: pushFromStack 29
1944: pushFromStack 1
1945: pushFromStack 30
1946: pushFromStack 30
1947: call with 2 arguments
1948: pushConstant <replaced address 2749496cbbd972e7> "`b | typeIs Int` was not satisfied"
1949: pushConstant <replaced address cf37b22a7a5dec95> Builtins::intAdd:11
1950: pushFromStack 28
1951: pushFromStack 3
1952: pushFromStack 3
1953: pushFromStack 9
1954: pushFromStack 4
1955: call with 3 arguments
1956: pushConstant inline builtinIntAdd
1957: pushConstant <replaced address 216d199efe6cdff8> Builtins::intAdd:18
1958: pushFromStack 27
1959: drop
1960: pushFromStack 17
1961: drop
1962: pushFromStack 7
1963: drop
1964: pushFromStack 2
1965: drop
1966: pushFromStack 1
1967: pushFromStack 22
1968: pushFromStack 15
1969: pushFromStack 3
1970: tailCall with 42 locals and 2 arguments
# Examples:fibonacci:fibonacci:2
1971: pushFromStack 1
1972: dup by 2
1973: pushConstant <replaced address 59585e0369161d49> { 2 arguments (capturing nothing) → ip-1783 }
1974: pushConstant inline 2
1975: pushConstant <replaced address 09452ee45e345fc6> Examples:fibonacci:fibonacci:2:11
1976: pushFromStack 2
1977: pushFromStack 5
1978: pushFromStack 3
1979: pushFromStack 3
1980: call with 2 arguments
1981: pushFromStack 5
1982: createFunction with 0 arguments capturing 0 starting at ip-1846
1983: pushFromStack 8
1984: pushFromStack 2
1985: createFunction with 0 arguments capturing 1, 0 starting at ip-1849
1986: pushConstant <replaced address 0d2f632a7ac72050> { 3 arguments (capturing nothing) → ip-428 }
1987: pushConstant <replaced address 14cee9bee8ce4007> Examples:fibonacci:fibonacci:2:14
1988: pushFromStack 1
1989: pushFromStack 8
1990: pushFromStack 7
1991: pushFromStack 5
1992: pushFromStack 4
1993: tailCall with 14 locals and 3 arguments
# Examples:fibonacci:recursive:0:0
1994: pushFromStack 2
1995: dup by 1
1996: pushConstant <replaced address f8a743cca2278691> Examples:fibonacci:recursive:0:0:3
1997: pushFromStack 3
1998: pushFromStack 0
1999: pushFromStack 4
2000: pushFromStack 3
2001: tailCall with 4 locals and 2 arguments
# Examples:fibonacci:recursive:0
2002: pushFromStack 2
2003: createFunction with 1 argument capturing 0 starting at ip-1994
2004: pushConstant <replaced address 30f6a0842615e2b5> { 2 arguments (capturing nothing) → ip-1971 }
2005: pushConstant <replaced address 89be9cdfac8d8517> Examples:fibonacci:recursive:0:5
2006: pushFromStack 1
2007: pushFromStack 3
2008: pushFromStack 7
2009: pushFromStack 3
2010: tailCall with 7 locals and 2 arguments
# Examples:fibonacci:21:8:18
2011: pushConstant <replaced address 0f1215b1e3352ac0> { 2 arguments (capturing nothing) → ip-2002 }
2012: pushConstant <replaced address 91bca86c00256cf1> Examples:fibonacci:recursive:5
2013: pushFromStack 1
2014: pushFromStack 0
2015: pushFromStack 5
2016: pushFromStack 3
2017: call with 2 arguments
2018: pushConstant inline builtinToDebugText
2019: pushConstant <replaced address 8383f19ea0a5e146> Builtins::toDebugText:5
2020: pushFromStack 1
2021: pushFromStack 3
2022: pushFromStack 2
2023: tailCall with 7 locals and 1 argument
# Examples:fibonacci:21:8:equals:then
2024: pushConstant inline builtinListGet
2025: pushConstant inline 0
2026: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
2027: pushFromStack 2
2028: pushFromStack 5
2029: pushFromStack 3
2030: pushFromStack 3
2031: call with 2 arguments
2032: pushConstant inline Match
2033: pushFromStack 0
2034: pushFromStack 2
2035: createList 2
2036: popMultipleBelowTop 7
2037: return
# Examples:fibonacci:21:8:equals:else
2038: pushConstant inline builtinToDebugText
2039: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
2040: pushFromStack 1
2041: pushFromStack 4
2042: pushFromStack 2
2043: call with 1 argument
2044: pushConstant inline builtinTextConcatenate
2045: pushConstant <replaced address 9aa3c3ae7117a223> "Expected 1 item, got "
2046: pushFromStack 1
2047: pushFromStack 1
2048: pushFromStack 4
2049: pushFromStack 6
2050: call with 2 arguments
2051: pushConstant <replaced address ee78a67daaae8b1b> "."
2052: pushFromStack 3
2053: pushFromStack 2
2054: pushFromStack 2
2055: pushFromStack 8
2056: call with 2 arguments
2057: pushConstant inline NoMatch
2058: pushFromStack 0
2059: pushFromStack 2
2060: createList 2
2061: popMultipleBelowTop 11
2062: return
# Examples:fibonacci:21:8:equals:then
2063: pushFromStack 1
2064: dup by 1
2065: pushConstant inline builtinListLength
2066: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
2067: pushFromStack 1
2068: pushFromStack 4
2069: pushFromStack 2
2070: call with 1 argument
2071: pushFromStack 0
2072: dup by 1
2073: pushConstant inline builtinEquals
2074: pushConstant inline 1
2075: pushFromStack 1
2076: pushFromStack 1
2077: pushFromStack 4
2078: pushFromStack 6
2079: call with 2 arguments
2080: pushFromStack 7
2081: createFunction with 0 arguments capturing 0 starting at ip-2024
2082: pushFromStack 5
2083: createFunction with 0 arguments capturing 0 starting at ip-2038
2084: pushConstant inline builtinIfElse
2085: pushFromStack 0
2086: pushFromStack 6
2087: pushFromStack 5
2088: pushFromStack 4
2089: pushFromStack 13
2090: tailCall with 13 locals and 3 arguments
# Examples:fibonacci:21:8:equals:else
2091: pushConstant inline builtinToDebugText
2092: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
2093: pushFromStack 1
2094: pushFromStack 4
2095: pushFromStack 2
2096: call with 1 argument
2097: pushConstant inline builtinTextConcatenate
2098: pushConstant <replaced address 67317fa1011ddaa1> "Expected a List, got `"
2099: pushFromStack 1
2100: pushFromStack 1
2101: pushFromStack 4
2102: pushFromStack 6
2103: call with 2 arguments
2104: pushConstant <replaced address 8dbb18a7278b48a0> "`."
2105: pushFromStack 3
2106: pushFromStack 2
2107: pushFromStack 2
2108: pushFromStack 8
2109: call with 2 arguments
2110: pushConstant inline NoMatch
2111: pushFromStack 0
2112: pushFromStack 2
2113: createList 2
2114: popMultipleBelowTop 11
2115: return
# Examples:fibonacci:21:8:case-0:matched
2116: pushConstant inline builtinListGet
2117: pushConstant inline 1
2118: pushConstant <replaced address 7dd5e7b8b509ae51> Examples:fibonacci:21:8:n
2119: pushFromStack 2
2120: pushFromStack 5
2121: pushFromStack 3
2122: pushFromStack 3
2123: call with 2 arguments
2124: pushFromStack 0
2125: dup by 1
2126: pushConstant inline builtinTypeOf
2127: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2128: pushFromStack 1
2129: pushFromStack 3
2130: pushFromStack 2
2131: call with 1 argument
2132: pushConstant inline builtinEquals
2133: pushConstant inline Text
2134: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2135: pushFromStack 2
2136: pushFromStack 4
2137: pushFromStack 3
2138: pushFromStack 3
2139: call with 2 arguments
2140: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
2141: pushConstant <replaced address 92aa0d19152d9fd3> "`text | typeIs Text` was not satisfied"
2142: pushConstant <replaced address 806428a0d5c12ae4> Examples:fibonacci:21:8:9
2143: pushConstant <replaced address 5c93ea6ba248e40c> Builtins::intParse:5
2144: pushFromStack 3
2145: pushFromStack 5
2146: pushFromStack 4
2147: pushFromStack 4
2148: pushFromStack 4
2149: call with 3 arguments
2150: pushConstant inline builtinIntParse
2151: pushConstant <replaced address 2db459441af47a3a> Builtins::intParse:11
2152: pushFromStack 1
2153: pushFromStack 15
2154: pushFromStack 2
2155: call with 1 argument
2156: pushConstant <replaced address e25bd4c72e72ceb9> { 2 arguments (capturing nothing) → ip-1671 }
2157: pushConstant <replaced address 1ce55c0643859f07> { 1 argument (capturing nothing) → ip-2011 }
2158: pushConstant <replaced address 97779e55eaf4eb66> Examples:fibonacci:21:8:19
2159: pushFromStack 2
2160: pushFromStack 4
2161: pushFromStack 3
2162: pushFromStack 3
2163: call with 2 arguments
2164: pushConstant <replaced address e052bfc75f054729> { 1 argument (capturing nothing) → ip-1717 }
2165: pushConstant <replaced address 7421c808ee3a61d5> Examples:fibonacci:21:8:28
2166: pushFromStack 9
2167: drop
2168: pushFromStack 1
2169: pushFromStack 3
2170: pushFromStack 2
2171: tailCall with 27 locals and 1 argument
# Examples:fibonacci:21:8:case-0:didNotMatch
2172: pushConstant inline builtinListGet
2173: pushConstant inline 1
2174: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
2175: pushFromStack 2
2176: pushFromStack 5
2177: pushFromStack 3
2178: pushFromStack 3
2179: call with 2 arguments
2180: pushFromStack 0
2181: drop
2182: pushConstant <replaced address ea9a293534a31de4> "Usage: `cargo run -- run fibonacci.candy -- <number>`"
2183: popMultipleBelowTop 6
2184: return
# Examples:fibonacci:21
2185: pushFromStack 1
2186: dup by 5
2187: pushConstant inline builtinTypeOf
2188: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2189: pushFromStack 1
2190: pushFromStack 4
2191: pushFromStack 2
2192: call with 1 argument
2193: pushConstant inline builtinEquals
2194: pushConstant inline Struct
2195: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2196: pushFromStack 2
2197: pushFromStack 4
2198: pushFromStack 3
2199: pushFromStack 3
2200: call with 2 arguments
2201: pushConstant <replaced address 5b10e82ed1489edf> { 3 arguments (capturing nothing) → ip-31 }
2202: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
2203: pushConstant <replaced address 4522fcf9aef1c577> Examples:fibonacci:21:7
2204: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
2205: pushFromStack 3
2206: pushFromStack 5
2207: pushFromStack 4
2208: pushFromStack 4
2209: pushFromStack 4
2210: call with 3 arguments
2211: pushConstant inline builtinStructHasKey
2212: pushConstant inline Arguments
2213: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
2214: pushFromStack 2
2215: pushFromStack 17
2216: pushFromStack 3
2217: pushFromStack 3
2218: call with 2 arguments
2219: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
2220: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
2221: pushFromStack 10
2222: pushFromStack 3
2223: pushFromStack 3
2224: pushFromStack 11
2225: pushFromStack 4
2226: call with 3 arguments
2227: pushConstant inline builtinStructGet
2228: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
2229: pushFromStack 1
2230: pushFromStack 23
2231: pushFromStack 9
2232: pushFromStack 3
2233: call with 2 arguments
2234: pushFromStack 0
2235: dup by 1
2236: pushConstant <replaced address 0ab9b0f79d037b64> Examples:fibonacci:21:8
2237: pushFromStack 22
2238: pushFromStack 2
2239: pushFromStack 2
2240: call with 1 argument
2241: pushFromStack 0
2242: dup by 1
2243: pushConstant inline List
2244: pushFromStack 21
2245: pushFromStack 1
2246: pushFromStack 3
2247: pushFromStack 5
2248: call with 2 arguments
2249: pushFromStack 4
2250: createFunction with 0 arguments capturing 0 starting at ip-2063
2251: pushFromStack 4
2252: createFunction with 0 arguments capturing 0 starting at ip-2091
2253: pushConstant inline builtinIfElse
2254: pushFromStack 0
2255: pushFromStack 6
2256: pushFromStack 5
2257: pushFromStack 4
2258: pushFromStack 12
2259: call with 3 arguments
2260: pushFromStack 0
2261: dup by 2
2262: pushConstant inline builtinListGet
2263: pushConstant inline 0
2264: pushFromStack 1
2265: pushFromStack 3
2266: pushFromStack 2
2267: pushFromStack 14
2268: call with 2 arguments
2269: pushConstant inline Match
2270: pushFromStack 32
2271: pushFromStack 2
2272: pushFromStack 2
2273: pushFromStack 16
2274: call with 2 arguments
2275: pushFromStack 5
2276: createFunction with 0 arguments capturing 0 starting at ip-2116
2277: pushFromStack 1
2278: createFunction with 0 arguments capturing 0 starting at ip-2172
2279: pushFromStack 10
2280: pushFromStack 5
2281: pushFromStack 4
2282: pushFromStack 3
2283: pushFromStack 22
2284: call with 3 arguments
2285: pushFromStack 41
2286: pushFromStack 44
2287: pushFromStack 42
2288: call with 1 argument
2289: pushFromStack 39
2290: pushFromStack 1
2291: pushFromStack 40
2292: pushFromStack 40
2293: call with 2 arguments
2294: pushConstant <replaced address 7ed3a33e63f326bc> Examples:fibonacci:21:16
2295: pushFromStack 37
2296: pushFromStack 2
2297: pushFromStack 38
2298: pushFromStack 3
2299: pushFromStack 38
2300: call with 3 arguments
2301: pushConstant inline Stdout
2302: pushFromStack 34
2303: pushFromStack 49
2304: pushFromStack 2
2305: pushFromStack 35
2306: call with 2 arguments
2307: pushFromStack 40
2308: pushFromStack 1
2309: pushFromStack 33
2310: pushFromStack 6
2311: pushFromStack 34
2312: call with 3 arguments
2313: pushFromStack 29
2314: pushFromStack 51
2315: pushFromStack 4
2316: pushFromStack 31
2317: call with 2 arguments
2318: pushConstant <replaced address d05064f58b153151> Examples:fibonacci:21:17
2319: pushFromStack 39
2320: drop
2321: pushFromStack 32
2322: drop
2323: pushFromStack 5
2324: drop
2325: pushFromStack 2
2326: drop
2327: pushFromStack 1
2328: pushFromStack 10
2329: pushFromStack 2
2330: tailCall with 53 locals and 1 argument
# Examples:fibonacci:
2331: pushConstant <replaced address 7426aaad0dda436d> { 1 argument (capturing nothing) → ip-2185 }
2332: popMultipleBelowTop 1
2333: return
