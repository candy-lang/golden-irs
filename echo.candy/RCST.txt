# RCST for module Examples:echo
Comment:
  octothorpe: Octothorpe
  comment: " Echoes whatever you send to it on stdin."
Newline "\n"
Newline "\n"
Assignment:
  left: TrailingWhitespace:
    child: Struct:
      opening_bracket: OpeningBracket
      fields:
        TrailingWhitespace:
          child: StructField:
            key_and_colon: None
            value: Identifier "function"
            comma: Comma
          whitespace:
            Whitespace " "
        StructField:
          key_and_colon: None
          value: Identifier "text"
          comma: None
      closing_bracket: ClosingBracket
    whitespace:
      Whitespace " "
  assignment_sign: TrailingWhitespace:
    child: EqualsSign
    whitespace:
      Whitespace " "
  body:
    Call:
      receiver: TrailingWhitespace:
        child: Identifier "use"
        whitespace:
          Whitespace " "
      arguments:
        Text:
          opening: OpeningText:
            opening_single_quotes:
            opening_double_quote: DoubleQuote
          parts:
            TextPart "Core"
          closing: ClosingText:
            closing_double_quote: DoubleQuote
            closing_single_quotes:
Newline "\n"
Newline "\n"
Assignment:
  left: TrailingWhitespace:
    child: Identifier "main"
    whitespace:
      Whitespace " "
  assignment_sign: TrailingWhitespace:
    child: ColonEqualsSign
    whitespace:
      Whitespace " "
  body:
    Function:
      opening_curly_brace: TrailingWhitespace:
        child: OpeningCurlyBrace
        whitespace:
          Whitespace " "
      parameters_and_arrow:
        parameters:
          TrailingWhitespace:
            child: Identifier "environment"
            whitespace:
              Whitespace " "
        arrow: TrailingWhitespace:
          child: Arrow
          whitespace:
            Newline "\n"
            Whitespace "  "
      body:
        Assignment:
          left: TrailingWhitespace:
            child: Call:
              receiver: TrailingWhitespace:
                child: Identifier "print"
                whitespace:
                  Whitespace " "
              arguments:
                Identifier "message"
            whitespace:
              Whitespace " "
          assignment_sign: TrailingWhitespace:
            child: EqualsSign
            whitespace:
              Whitespace " "
          body:
            Call:
              receiver: TrailingWhitespace:
                child: StructAccess:
                  struct: Identifier "environment"
                  dot: Dot
                  key: Identifier "stdout"
                whitespace:
                  Whitespace " "
              arguments:
                Identifier "message"
        Newline "\n"
        Whitespace "  "
        Assignment:
          left: TrailingWhitespace:
            child: Identifier "read"
            whitespace:
              Whitespace " "
          assignment_sign: TrailingWhitespace:
            child: EqualsSign
            whitespace:
              Whitespace " "
          body:
            StructAccess:
              struct: Identifier "environment"
              dot: Dot
              key: Identifier "stdin"
        Newline "\n"
        Newline "\n"
        Whitespace "  "
        Call:
          receiver: TrailingWhitespace:
            child: Identifier "print"
            whitespace:
              Whitespace " "
          arguments:
            Text:
              opening: OpeningText:
                opening_single_quotes:
                opening_double_quote: DoubleQuote
              parts:
                TextPart "Hello, world!"
              closing: ClosingText:
                closing_double_quote: DoubleQuote
                closing_single_quotes:
        Newline "\n"
        Whitespace "  "
        Assignment:
          left: TrailingWhitespace:
            child: Identifier "foo"
            whitespace:
              Whitespace " "
          assignment_sign: TrailingWhitespace:
            child: EqualsSign
            whitespace:
              Whitespace " "
          body:
            Call:
              receiver: TrailingWhitespace:
                child: StructAccess:
                  struct: Identifier "function"
                  dot: Dot
                  key: Identifier "run"
                whitespace:
                  Whitespace " "
              arguments:
                Identifier "read"
        Newline "\n"
        Whitespace "  "
        Call:
          receiver: TrailingWhitespace:
            child: Identifier "print"
            whitespace:
              Whitespace " "
          arguments:
            Text:
              opening: OpeningText:
                opening_single_quotes:
                opening_double_quote: DoubleQuote
              parts:
                TextPart "Echo:"
              closing: ClosingText:
                closing_double_quote: DoubleQuote
                closing_single_quotes:
        Newline "\n"
        Whitespace "  "
        Call:
          receiver: TrailingWhitespace:
            child: Identifier "print"
            whitespace:
              Whitespace " "
          arguments:
            Identifier "foo"
        Newline "\n"
      closing_curly_brace: ClosingCurlyBrace
Newline "\n"
