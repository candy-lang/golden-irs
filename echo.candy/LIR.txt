# LIR for module Examples:echo
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::equals:6
%1 = Builtins::functionRun:11
%2 = Builtins::functionRun:16
%3 = Builtins::functionRun:22
%4 = Builtins::functionRun:5
%5 = Builtins::getArgumentCount:11
%6 = Builtins::getArgumentCount:5
%7 = Builtins::ifElse:1
%8 = Builtins::ifElse:11
%9 = Builtins::ifElse:14
%10 = Builtins::ifElse:19
%11 = Builtins::ifElse:25
%12 = Builtins::ifElse:28
%13 = Builtins::ifElse:33
%14 = Builtins::ifElse:41
%15 = Builtins::ifElse:5
%16 = Builtins::structGet:12
%17 = Builtins::structGet:14
%18 = Builtins::structGet:21
%19 = Builtins::structGet:5
%20 = Builtins::typeIs:19
%21 = Builtins::typeIs:25
%22 = Builtins::typeOf:5
%23 = Core:function:is0:11
%24 = Core:function:is0:9:3
%25 = Core:function:run:12
%26 = Core:function:run:2
%27 = Core:function:run:4
%28 = Examples:echo:13:15
%29 = Examples:echo:13:23
%30 = Examples:echo:13:33
%31 = Examples:echo:13:36
%32 = Examples:echo:13:5
%33 = Examples:echo:13:print:5
%34 = Examples:echo:13:print:7
%35 = anonymous:$generated::needs
%36 = builtinEquals
%37 = builtinFunctionRun
%38 = builtinGetArgumentCount
%39 = builtinIfElse
%40 = builtinStructGet
%41 = builtinStructHasKey
%42 = builtinTagWithoutValue
%43 = builtinTypeOf
%44 = False
%45 = Function
%46 = Match
%47 = NoMatch
%48 = Nothing
%49 = Stdin
%50 = Stdout
%51 = Struct
%52 = Text
%53 = True
%54 = 0
%55 = "Echo:"
%56 = "Hello, world!"
%57 = "The `condition` must be either `True` or `False`."
%58 = "The `reason` must be a text."
%59 = "`conditionIsBool` was not satisfied"
%60 = "`else | getArgumentCount | equals 0` was not satisfied"
%61 = "`else | typeIs Function` was not satisfied"
%62 = "`function | typeIs Function` was not satisfied"
%63 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
%64 = "`is0 body` was not satisfied"
%65 = "`struct | typeIs Struct` was not satisfied"
%66 = "`struct | ✨.structHasKey key` was not satisfied"
%67 = "`then | getArgumentCount | equals 0` was not satisfied"
%68 = "`then | typeIs Function` was not satisfied"
%69 = { body_0 }
%70 = { body_1 }
%71 = { body_6 }
%72 = (,)
%73 = Match %72<(,)>
%74 = { body_7 }
%75 = { body_8 }
%76 = { body_9 }
%77 = { body_10 }
%78 = { body_11 }
%79 = { body_14 }
%80 = { body_15 }
%81 = { body_17 }
%82 = { body_19 }
%83 = { body_21 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:result:is:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %53<True>
body_1 (responsible $0) =
  # Original HIR IDs: Core::21:isMatch:then, Core::32:isMatch:then, Core::43:isMatch:then, Core::104:isMatch:then, Core::155:isMatch:then, Core::166:isMatch:then, Core:bool:11:isMatch:then, Core:check:11:isMatch:then, Core:controlFlow:if:23, Core:controlFlow:31:isMatch:then, Core:controlFlow:52:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:function:21:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:31:isMatch:then, Core:int:42:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:32:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core:list:31:isMatch:then, Core:list:42:isMatch:then, Core:result:21:isMatch:then, Core:result:32:isMatch:then, Core:struct:21:isMatch:then, Core:tag:31:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:text:31:isMatch:then, Core:text:42:isMatch:then, Core:type:21:isMatch:then, Examples:echo:then, Examples:echo:11:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %48<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %36<builtinEquals>
  $3 = dup $0 by 1
  $4 = %44<False>
  $5 = %35<anonymous:$generated::needs>
  $6 = call $2<%36<builtinEquals>> with $0 $4<%44<False>> ($5<%35<anonymous:$generated::needs>> is responsible)
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = %57<"The `condition` must be either `True` or `False`.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%57<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = %58<"The `reason` must be a text.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%58<"The `reason` must be a text.">> ($0 is at fault)
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = %36<builtinEquals>
  $5 = dup $0 by 1
  $6 = %53<True>
  $7 = %35<anonymous:$generated::needs>
  $8 = call $4<%36<builtinEquals>> with $0 $6<%53<True>> ($7<%35<anonymous:$generated::needs>> is responsible)
  $9 = dup $0 by 1
  $10 = { body_2 capturing $0 }
  $11 = %39<builtinIfElse>
  $12 = dup $8 by 1
  $13 = %69<{ body_0 }>
  $14 = dup $10 by 1
  $15 = call $11<%39<builtinIfElse>> with $8 $13<%69<{ body_0 }>> $10 ($7<%35<anonymous:$generated::needs>> is responsible)
  $16 = dup $3 by 1
  $17 = { body_3 capturing $3 }
  $18 = dup $15 by 1
  $19 = %70<{ body_1 }>
  $20 = dup $17 by 1
  $21 = call $11<%39<builtinIfElse>> with $15 $19<%70<{ body_1 }>> $17 ($7<%35<anonymous:$generated::needs>> is responsible)
  $22 = %43<builtinTypeOf>
  $23 = dup $1 by 1
  $24 = call $22<%43<builtinTypeOf>> with $1 ($3 is responsible)
  $25 = dup $24 by 1
  $26 = %52<Text>
  $27 = call $4<%36<builtinEquals>> with $24 $26<%52<Text>> ($3 is responsible)
  $28 = dup $3 by 1
  $29 = { body_4 capturing $3 }
  $30 = dup $27 by 1
  $31 = dup $29 by 1
  $32 = call $11<%39<builtinIfElse>> with $27 $19<%70<{ body_1 }>> $29 ($7<%35<anonymous:$generated::needs>> is responsible)
  $33 = dup $1 by 1
  $34 = dup $2 by 1
  $35 = { body_5 capturing $1, $2 }
  $36 = dup $0 by 1
  $37 = dup $35 by 1
  $38 = call $11<%39<builtinIfElse>> with $0 $19<%70<{ body_1 }>> $35 ($7<%35<anonymous:$generated::needs>> is responsible)
  $39 = drop $35
  $40 = drop $32
  $41 = drop $29
  $42 = drop $27
  $43 = drop $24
  $44 = drop $21
  $45 = drop $17
  $46 = drop $15
  $47 = drop $10
  $48 = drop $8
  $49 = drop $2
  $50 = drop $1
  $51 = drop $0
  $52 = $38
body_7 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:16:equals:then, Core:bool:lazyOr:16:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:iterator:generateWithState:12:1:3:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:reduceLeft:16:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:17:2:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:19:equals:then, Core:list:lastWhere:19:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
  # Captured IDs: none
  $1 = %73<Match %72<(,)>>
body_8 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::isNonNegative:13:equals:else, Builtins::not:1:equals:else, Core::21:equals:else, Core::32:equals:else, Core::43:equals:else, Core::104:equals:else, Core::155:equals:else, Core::166:equals:else, Core:bool:is:1:equals:else, Core:bool:lazyAnd:16:equals:else, Core:bool:lazyOr:16:equals:else, Core:bool:not:6:equals:else, Core:bool:11:equals:else, Core:check:check:1:equals:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:controlFlow:52:equals:else, Core:fixedDecimal:is:1:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:fixedDecimal:21:equals:else, Core:fixedDecimal:32:equals:else, Core:fixedDecimal:43:equals:else, Core:fixedDecimal:54:equals:else, Core:fixedDecimal:105:equals:else, Core:function:21:equals:else, Core:int:pow:21:1:equals:else, Core:int:pow:21:1:hasKey:else, Core:int:pow:21:4:equals:else, Core:int:31:equals:else, Core:int:42:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:map:17:3:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:next:6:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core:iterator:skip:26:6:1:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:iterator:skip:26:6:8:3:equals:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:iterator:take:27:1:equals:else, Core:iterator:take:27:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:iterator:where:17:2:3:equals:else, Core:iterator:where:17:2:3:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:withIndex:11:5:hasKey:else, Core:iterator:wrapSafe:14:1:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:21:equals:else, Core:iterator:32:equals:else, Core:list:first:6:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:list:firstWhere:19:equals:else, Core:list:generate:51:1:equals:else, Core:list:generate:51:1:hasKey:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:list:lastWhere:19:equals:else, Core:list:single:6:equals:else, Core:list:31:equals:else, Core:list:42:equals:else, Core:result:is:1:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:21:equals:else, Core:result:32:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:text:repeat:30:1:equals:else, Core:text:31:equals:else, Core:text:42:equals:else, Examples:echo:11:equals:else
  # Captured IDs: none
  $1 = %47<NoMatch>
body_9 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:didNotMatch, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:is:1:case-0:didNotMatch, Core:bool:lazyAnd:16:case-1:matched, Core:bool:not:6:case-0:matched, Core:check:check:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:function:is0:10, Core:function:is1:10, Core:function:is2:10, Core:function:is3:10, Core:function:is4:10, Core:function:is5:10, Core:list:isValidIndex:19, Core:list:isValidInsertIndex:19, Core:result:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: none
  $1 = %44<False>
body_10 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::functionRun
  # Captured IDs: none
  $2 = %43<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %20<Builtins::typeIs:19>
  $5 = call $2<%43<builtinTypeOf>> with $0 ($4<%20<Builtins::typeIs:19>> is responsible)
  $6 = %36<builtinEquals>
  $7 = dup $5 by 1
  $8 = %45<Function>
  $9 = %21<Builtins::typeIs:25>
  $10 = call $6<%36<builtinEquals>> with $5 $8<%45<Function>> ($9<%21<Builtins::typeIs:25>> is responsible)
  $11 = %4<Builtins::functionRun:5>
  $12 = %71<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %62<"`function | typeIs Function` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($11<%4<Builtins::functionRun:5>> is responsible, code is at $11<%4<Builtins::functionRun:5>>)
  $17 = dup $10 by 1
  $18 = dup $1 by 1
  $19 = call $12<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($11<%4<Builtins::functionRun:5>> is responsible)
  $20 = trace: end of call
  $21 = %38<builtinGetArgumentCount>
  $22 = dup $0 by 1
  $23 = %1<Builtins::functionRun:11>
  $24 = call $21<%38<builtinGetArgumentCount>> with $0 ($23<%1<Builtins::functionRun:11>> is responsible)
  $25 = dup $24 by 1
  $26 = %54<0>
  $27 = %0<Builtins::equals:6>
  $28 = call $6<%36<builtinEquals>> with $24 $26<%54<0>> ($27<%0<Builtins::equals:6>> is responsible)
  $29 = %2<Builtins::functionRun:16>
  $30 = dup $28 by 1
  $31 = %63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $32 = dup $1 by 1
  $33 = trace: start of call of $12<%71<{ body_6 }>> with $28 $31<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($29<%2<Builtins::functionRun:16>> is responsible, code is at $29<%2<Builtins::functionRun:16>>)
  $34 = dup $28 by 1
  $35 = dup $1 by 1
  $36 = call $12<%71<{ body_6 }>> with $28 $31<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($29<%2<Builtins::functionRun:16>> is responsible)
  $37 = trace: end of call
  $38 = %3<Builtins::functionRun:22>
  $39 = %37<builtinFunctionRun>
  $40 = dup $0 by 1
  $41 = trace: tail call of $39<%37<builtinFunctionRun>> with $0 ($38<%3<Builtins::functionRun:22>> is responsible, code is at $38<%3<Builtins::functionRun:22>>)
  $42 = dup $0 by 1
  $43 = call $0 with no arguments ($38<%3<Builtins::functionRun:22>> is responsible)
  $44 = drop $36
  $45 = drop $28
  $46 = drop $24
  $47 = drop $19
  $48 = drop $10
  $49 = drop $5
  $50 = drop $0
  $51 = $43
body_11 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::getArgumentCount
  # Captured IDs: none
  $2 = %43<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %20<Builtins::typeIs:19>
  $5 = call $2<%43<builtinTypeOf>> with $0 ($4<%20<Builtins::typeIs:19>> is responsible)
  $6 = %36<builtinEquals>
  $7 = dup $5 by 1
  $8 = %45<Function>
  $9 = %21<Builtins::typeIs:25>
  $10 = call $6<%36<builtinEquals>> with $5 $8<%45<Function>> ($9<%21<Builtins::typeIs:25>> is responsible)
  $11 = %6<Builtins::getArgumentCount:5>
  $12 = %71<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %62<"`function | typeIs Function` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($11<%6<Builtins::getArgumentCount:5>> is responsible, code is at $11<%6<Builtins::getArgumentCount:5>>)
  $17 = dup $10 by 1
  $18 = dup $1 by 1
  $19 = call $12<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($11<%6<Builtins::getArgumentCount:5>> is responsible)
  $20 = trace: end of call
  $21 = %38<builtinGetArgumentCount>
  $22 = dup $0 by 1
  $23 = %5<Builtins::getArgumentCount:11>
  $24 = call $21<%38<builtinGetArgumentCount>> with $0 ($23<%5<Builtins::getArgumentCount:11>> is responsible)
  $25 = drop $19
  $26 = drop $10
  $27 = drop $5
  $28 = drop $0
  $29 = $24
body_12 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_13 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %36<builtinEquals>
  $3 = %44<False>
  $4 = dup $0 by 1
  $5 = %7<Builtins::ifElse:1>
  $6 = call $2<%36<builtinEquals>> with $3<%44<False>> $0 ($5<%7<Builtins::ifElse:1>> is responsible)
  $7 = %39<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %74<{ body_7 }>
  $10 = %75<{ body_8 }>
  $11 = call $7<%39<builtinIfElse>> with $6 $9<%74<{ body_7 }>> $10<%75<{ body_8 }>> ($5<%7<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_14 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Builtins::ifElse
  # Captured IDs: none
  $4 = %36<builtinEquals>
  $5 = %53<True>
  $6 = dup $0 by 1
  $7 = %7<Builtins::ifElse:1>
  $8 = call $4<%36<builtinEquals>> with $5<%53<True>> $0 ($7<%7<Builtins::ifElse:1>> is responsible)
  $9 = %39<builtinIfElse>
  $10 = dup $8 by 1
  $11 = %74<{ body_7 }>
  $12 = %75<{ body_8 }>
  $13 = call $9<%39<builtinIfElse>> with $8 $11<%74<{ body_7 }>> $12<%75<{ body_8 }>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $14 = %42<builtinTagWithoutValue>
  $15 = dup $13 by 1
  $16 = call $14<%42<builtinTagWithoutValue>> with $13 ($7<%7<Builtins::ifElse:1>> is responsible)
  $17 = dup $16 by 1
  $18 = %46<Match>
  $19 = call $4<%36<builtinEquals>> with $16 $18<%46<Match>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $20 = dup $13 by 1
  $21 = { body_12 capturing $13 }
  $22 = dup $0 by 1
  $23 = { body_13 capturing $0 }
  $24 = dup $19 by 1
  $25 = dup $21 by 1
  $26 = dup $23 by 1
  $27 = call $9<%39<builtinIfElse>> with $19 $21 $23 ($7<%7<Builtins::ifElse:1>> is responsible)
  $28 = dup $27 by 1
  $29 = call $14<%42<builtinTagWithoutValue>> with $27 ($7<%7<Builtins::ifElse:1>> is responsible)
  $30 = dup $29 by 1
  $31 = call $4<%36<builtinEquals>> with $29 $18<%46<Match>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $32 = dup $31 by 1
  $33 = %69<{ body_0 }>
  $34 = %76<{ body_9 }>
  $35 = call $9<%39<builtinIfElse>> with $31 $33<%69<{ body_0 }>> $34<%76<{ body_9 }>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $36 = %15<Builtins::ifElse:5>
  $37 = %71<{ body_6 }>
  $38 = dup $35 by 1
  $39 = %59<"`conditionIsBool` was not satisfied">
  $40 = dup $3 by 1
  $41 = trace: start of call of $37<%71<{ body_6 }>> with $35 $39<%59<"`conditionIsBool` was not satisfied">> $3 ($36<%15<Builtins::ifElse:5>> is responsible, code is at $36<%15<Builtins::ifElse:5>>)
  $42 = dup $35 by 1
  $43 = dup $3 by 1
  $44 = call $37<%71<{ body_6 }>> with $35 $39<%59<"`conditionIsBool` was not satisfied">> $3 ($36<%15<Builtins::ifElse:5>> is responsible)
  $45 = trace: end of call
  $46 = %43<builtinTypeOf>
  $47 = dup $1 by 1
  $48 = %20<Builtins::typeIs:19>
  $49 = call $46<%43<builtinTypeOf>> with $1 ($48<%20<Builtins::typeIs:19>> is responsible)
  $50 = dup $49 by 1
  $51 = %45<Function>
  $52 = %21<Builtins::typeIs:25>
  $53 = call $4<%36<builtinEquals>> with $49 $51<%45<Function>> ($52<%21<Builtins::typeIs:25>> is responsible)
  $54 = %8<Builtins::ifElse:11>
  $55 = dup $53 by 1
  $56 = %68<"`then | typeIs Function` was not satisfied">
  $57 = dup $3 by 1
  $58 = trace: start of call of $37<%71<{ body_6 }>> with $53 $56<%68<"`then | typeIs Function` was not satisfied">> $3 ($54<%8<Builtins::ifElse:11>> is responsible, code is at $54<%8<Builtins::ifElse:11>>)
  $59 = dup $53 by 1
  $60 = dup $3 by 1
  $61 = call $37<%71<{ body_6 }>> with $53 $56<%68<"`then | typeIs Function` was not satisfied">> $3 ($54<%8<Builtins::ifElse:11>> is responsible)
  $62 = trace: end of call
  $63 = %9<Builtins::ifElse:14>
  $64 = %78<{ body_11 }>
  $65 = dup $1 by 1
  $66 = trace: start of call of $64<%78<{ body_11 }>> with $1 ($63<%9<Builtins::ifElse:14>> is responsible, code is at $63<%9<Builtins::ifElse:14>>)
  $67 = dup $49 by 1
  $68 = call $4<%36<builtinEquals>> with $49 $51<%45<Function>> ($52<%21<Builtins::typeIs:25>> is responsible)
  $69 = %6<Builtins::getArgumentCount:5>
  $70 = dup $68 by 1
  $71 = %62<"`function | typeIs Function` was not satisfied">
  $72 = trace: start of call of $37<%71<{ body_6 }>> with $68 $71<%62<"`function | typeIs Function` was not satisfied">> $63<%9<Builtins::ifElse:14>> ($69<%6<Builtins::getArgumentCount:5>> is responsible, code is at $69<%6<Builtins::getArgumentCount:5>>)
  $73 = dup $68 by 1
  $74 = call $37<%71<{ body_6 }>> with $68 $71<%62<"`function | typeIs Function` was not satisfied">> $63<%9<Builtins::ifElse:14>> ($69<%6<Builtins::getArgumentCount:5>> is responsible)
  $75 = trace: end of call
  $76 = %38<builtinGetArgumentCount>
  $77 = dup $1 by 1
  $78 = %5<Builtins::getArgumentCount:11>
  $79 = call $76<%38<builtinGetArgumentCount>> with $1 ($78<%5<Builtins::getArgumentCount:11>> is responsible)
  $80 = trace: end of call
  $81 = dup $79 by 1
  $82 = %54<0>
  $83 = %0<Builtins::equals:6>
  $84 = call $4<%36<builtinEquals>> with $79 $82<%54<0>> ($83<%0<Builtins::equals:6>> is responsible)
  $85 = %10<Builtins::ifElse:19>
  $86 = dup $84 by 1
  $87 = %67<"`then | getArgumentCount | equals 0` was not satisfied">
  $88 = dup $3 by 1
  $89 = trace: start of call of $37<%71<{ body_6 }>> with $84 $87<%67<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($85<%10<Builtins::ifElse:19>> is responsible, code is at $85<%10<Builtins::ifElse:19>>)
  $90 = dup $84 by 1
  $91 = dup $3 by 1
  $92 = call $37<%71<{ body_6 }>> with $84 $87<%67<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($85<%10<Builtins::ifElse:19>> is responsible)
  $93 = trace: end of call
  $94 = dup $2 by 1
  $95 = call $46<%43<builtinTypeOf>> with $2 ($48<%20<Builtins::typeIs:19>> is responsible)
  $96 = dup $95 by 1
  $97 = call $4<%36<builtinEquals>> with $95 $51<%45<Function>> ($52<%21<Builtins::typeIs:25>> is responsible)
  $98 = %11<Builtins::ifElse:25>
  $99 = dup $97 by 1
  $100 = %61<"`else | typeIs Function` was not satisfied">
  $101 = dup $3 by 1
  $102 = trace: start of call of $37<%71<{ body_6 }>> with $97 $100<%61<"`else | typeIs Function` was not satisfied">> $3 ($98<%11<Builtins::ifElse:25>> is responsible, code is at $98<%11<Builtins::ifElse:25>>)
  $103 = dup $97 by 1
  $104 = dup $3 by 1
  $105 = call $37<%71<{ body_6 }>> with $97 $100<%61<"`else | typeIs Function` was not satisfied">> $3 ($98<%11<Builtins::ifElse:25>> is responsible)
  $106 = trace: end of call
  $107 = %12<Builtins::ifElse:28>
  $108 = dup $2 by 1
  $109 = trace: start of call of $64<%78<{ body_11 }>> with $2 ($107<%12<Builtins::ifElse:28>> is responsible, code is at $107<%12<Builtins::ifElse:28>>)
  $110 = dup $95 by 1
  $111 = call $4<%36<builtinEquals>> with $95 $51<%45<Function>> ($52<%21<Builtins::typeIs:25>> is responsible)
  $112 = dup $111 by 1
  $113 = trace: start of call of $37<%71<{ body_6 }>> with $111 $71<%62<"`function | typeIs Function` was not satisfied">> $107<%12<Builtins::ifElse:28>> ($69<%6<Builtins::getArgumentCount:5>> is responsible, code is at $69<%6<Builtins::getArgumentCount:5>>)
  $114 = dup $111 by 1
  $115 = call $37<%71<{ body_6 }>> with $111 $71<%62<"`function | typeIs Function` was not satisfied">> $107<%12<Builtins::ifElse:28>> ($69<%6<Builtins::getArgumentCount:5>> is responsible)
  $116 = trace: end of call
  $117 = dup $2 by 1
  $118 = call $76<%38<builtinGetArgumentCount>> with $2 ($78<%5<Builtins::getArgumentCount:11>> is responsible)
  $119 = trace: end of call
  $120 = dup $118 by 1
  $121 = call $4<%36<builtinEquals>> with $118 $82<%54<0>> ($83<%0<Builtins::equals:6>> is responsible)
  $122 = %13<Builtins::ifElse:33>
  $123 = dup $121 by 1
  $124 = %60<"`else | getArgumentCount | equals 0` was not satisfied">
  $125 = dup $3 by 1
  $126 = trace: start of call of $37<%71<{ body_6 }>> with $121 $124<%60<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($122<%13<Builtins::ifElse:33>> is responsible, code is at $122<%13<Builtins::ifElse:33>>)
  $127 = dup $121 by 1
  $128 = dup $3 by 1
  $129 = call $37<%71<{ body_6 }>> with $121 $124<%60<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($122<%13<Builtins::ifElse:33>> is responsible)
  $130 = trace: end of call
  $131 = %14<Builtins::ifElse:41>
  $132 = dup $0 by 1
  $133 = dup $1 by 1
  $134 = dup $2 by 1
  $135 = trace: tail call of $9<%39<builtinIfElse>> with $0 $1 $2 ($131<%14<Builtins::ifElse:41>> is responsible, code is at $131<%14<Builtins::ifElse:41>>)
  $136 = dup $0 by 1
  $137 = dup $1 by 1
  $138 = dup $2 by 1
  $139 = call $9<%39<builtinIfElse>> with $0 $1 $2 ($131<%14<Builtins::ifElse:41>> is responsible)
  $140 = drop $129
  $141 = drop $121
  $142 = drop $118
  $143 = drop $115
  $144 = drop $111
  $145 = drop $105
  $146 = drop $97
  $147 = drop $95
  $148 = drop $92
  $149 = drop $84
  $150 = drop $79
  $151 = drop $74
  $152 = drop $68
  $153 = drop $61
  $154 = drop $53
  $155 = drop $49
  $156 = drop $44
  $157 = drop $35
  $158 = drop $31
  $159 = drop $29
  $160 = drop $27
  $161 = drop $23
  $162 = drop $21
  $163 = drop $19
  $164 = drop $16
  $165 = drop $13
  $166 = drop $8
  $167 = drop $2
  $168 = drop $1
  $169 = drop $0
  $170 = $139
body_15 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::structGet
  # Captured IDs: none
  $3 = %43<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %20<Builtins::typeIs:19>
  $6 = call $3<%43<builtinTypeOf>> with $0 ($5<%20<Builtins::typeIs:19>> is responsible)
  $7 = %36<builtinEquals>
  $8 = dup $6 by 1
  $9 = %51<Struct>
  $10 = %21<Builtins::typeIs:25>
  $11 = call $7<%36<builtinEquals>> with $6 $9<%51<Struct>> ($10<%21<Builtins::typeIs:25>> is responsible)
  $12 = %19<Builtins::structGet:5>
  $13 = %71<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %65<"`struct | typeIs Struct` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%71<{ body_6 }>> with $11 $15<%65<"`struct | typeIs Struct` was not satisfied">> $2 ($12<%19<Builtins::structGet:5>> is responsible, code is at $12<%19<Builtins::structGet:5>>)
  $18 = dup $11 by 1
  $19 = dup $2 by 1
  $20 = call $13<%71<{ body_6 }>> with $11 $15<%65<"`struct | typeIs Struct` was not satisfied">> $2 ($12<%19<Builtins::structGet:5>> is responsible)
  $21 = trace: end of call
  $22 = %41<builtinStructHasKey>
  $23 = dup $0 by 1
  $24 = dup $1 by 1
  $25 = %16<Builtins::structGet:12>
  $26 = call $22<%41<builtinStructHasKey>> with $0 $1 ($25<%16<Builtins::structGet:12>> is responsible)
  $27 = %17<Builtins::structGet:14>
  $28 = dup $26 by 1
  $29 = %66<"`struct | ✨.structHasKey key` was not satisfied">
  $30 = dup $2 by 1
  $31 = trace: start of call of $13<%71<{ body_6 }>> with $26 $29<%66<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($27<%17<Builtins::structGet:14>> is responsible, code is at $27<%17<Builtins::structGet:14>>)
  $32 = dup $26 by 1
  $33 = dup $2 by 1
  $34 = call $13<%71<{ body_6 }>> with $26 $29<%66<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($27<%17<Builtins::structGet:14>> is responsible)
  $35 = trace: end of call
  $36 = %40<builtinStructGet>
  $37 = dup $0 by 1
  $38 = dup $1 by 1
  $39 = %18<Builtins::structGet:21>
  $40 = call $36<%40<builtinStructGet>> with $0 $1 ($39<%18<Builtins::structGet:21>> is responsible)
  $41 = drop $34
  $42 = drop $26
  $43 = drop $20
  $44 = drop $11
  $45 = drop $6
  $46 = drop $1
  $47 = drop $0
  $48 = $40
body_16 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %24<Core:function:is0:9:3>
  $3 = %78<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%78<{ body_11 }>> with $0 ($2<%24<Core:function:is0:9:3>> is responsible, code is at $2<%24<Core:function:is0:9:3>>)
  $6 = %43<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %20<Builtins::typeIs:19>
  $9 = call $6<%43<builtinTypeOf>> with $0 ($8<%20<Builtins::typeIs:19>> is responsible)
  $10 = %36<builtinEquals>
  $11 = dup $9 by 1
  $12 = %45<Function>
  $13 = %21<Builtins::typeIs:25>
  $14 = call $10<%36<builtinEquals>> with $9 $12<%45<Function>> ($13<%21<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %71<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %62<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%71<{ body_6 }>> with $14 $18<%62<"`function | typeIs Function` was not satisfied">> $2<%24<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%71<{ body_6 }>> with $14 $18<%62<"`function | typeIs Function` was not satisfied">> $2<%24<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %38<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%38<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %54<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%36<builtinEquals>> with $26 $29<%54<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_17 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is0
  # Captured IDs: none
  $2 = %43<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %22<Builtins::typeOf:5>
  $5 = call $2<%43<builtinTypeOf>> with $0 ($4<%22<Builtins::typeOf:5>> is responsible)
  $6 = %36<builtinEquals>
  $7 = dup $5 by 1
  $8 = %45<Function>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%36<builtinEquals>> with $5 $8<%45<Function>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_16 capturing $0 }
  $13 = %23<Core:function:is0:11>
  $14 = %79<{ body_14 }>
  $15 = dup $10 by 1
  $16 = dup $12 by 1
  $17 = %76<{ body_9 }>
  $18 = trace: tail call of $14<%79<{ body_14 }>> with $10 $12 $17<%76<{ body_9 }>> ($13<%23<Core:function:is0:11>> is responsible, code is at $13<%23<Core:function:is0:11>>)
  $19 = dup $10 by 1
  $20 = dup $12 by 1
  $21 = call $14<%79<{ body_14 }>> with $10 $12 $17<%76<{ body_9 }>> ($13<%23<Core:function:is0:11>> is responsible)
  $22 = drop $12
  $23 = drop $10
  $24 = drop $5
  $25 = drop $0
  $26 = $21
body_18 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %24<Core:function:is0:9:3>
  $3 = %78<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%78<{ body_11 }>> with $0 ($2<%24<Core:function:is0:9:3>> is responsible, code is at $2<%24<Core:function:is0:9:3>>)
  $6 = %43<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %20<Builtins::typeIs:19>
  $9 = call $6<%43<builtinTypeOf>> with $0 ($8<%20<Builtins::typeIs:19>> is responsible)
  $10 = %36<builtinEquals>
  $11 = dup $9 by 1
  $12 = %45<Function>
  $13 = %21<Builtins::typeIs:25>
  $14 = call $10<%36<builtinEquals>> with $9 $12<%45<Function>> ($13<%21<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %71<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %62<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%71<{ body_6 }>> with $14 $18<%62<"`function | typeIs Function` was not satisfied">> $2<%24<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%71<{ body_6 }>> with $14 $18<%62<"`function | typeIs Function` was not satisfied">> $2<%24<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %38<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%38<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %54<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%36<builtinEquals>> with $26 $29<%54<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_19 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:run
  # Captured IDs: none
  $2 = %26<Core:function:run:2>
  $3 = %81<{ body_17 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%81<{ body_17 }>> with $0 ($2<%26<Core:function:run:2>> is responsible, code is at $2<%26<Core:function:run:2>>)
  $6 = %43<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %22<Builtins::typeOf:5>
  $9 = call $6<%43<builtinTypeOf>> with $0 ($8<%22<Builtins::typeOf:5>> is responsible)
  $10 = %36<builtinEquals>
  $11 = dup $9 by 1
  $12 = %45<Function>
  $13 = %0<Builtins::equals:6>
  $14 = call $10<%36<builtinEquals>> with $9 $12<%45<Function>> ($13<%0<Builtins::equals:6>> is responsible)
  $15 = dup $0 by 1
  $16 = { body_18 capturing $0 }
  $17 = %23<Core:function:is0:11>
  $18 = %79<{ body_14 }>
  $19 = dup $14 by 1
  $20 = dup $16 by 1
  $21 = %76<{ body_9 }>
  $22 = trace: start of call of $18<%79<{ body_14 }>> with $14 $16 $21<%76<{ body_9 }>> ($17<%23<Core:function:is0:11>> is responsible, code is at $17<%23<Core:function:is0:11>>)
  $23 = dup $14 by 1
  $24 = dup $16 by 1
  $25 = call $18<%79<{ body_14 }>> with $14 $16 $21<%76<{ body_9 }>> ($17<%23<Core:function:is0:11>> is responsible)
  $26 = trace: end of call
  $27 = trace: end of call
  $28 = %27<Core:function:run:4>
  $29 = %71<{ body_6 }>
  $30 = dup $25 by 1
  $31 = %64<"`is0 body` was not satisfied">
  $32 = dup $1 by 1
  $33 = trace: start of call of $29<%71<{ body_6 }>> with $25 $31<%64<"`is0 body` was not satisfied">> $1 ($28<%27<Core:function:run:4>> is responsible, code is at $28<%27<Core:function:run:4>>)
  $34 = dup $25 by 1
  $35 = dup $1 by 1
  $36 = call $29<%71<{ body_6 }>> with $25 $31<%64<"`is0 body` was not satisfied">> $1 ($28<%27<Core:function:run:4>> is responsible)
  $37 = trace: end of call
  $38 = %25<Core:function:run:12>
  $39 = %77<{ body_10 }>
  $40 = dup $0 by 1
  $41 = trace: start of call of $39<%77<{ body_10 }>> with $0 ($38<%25<Core:function:run:12>> is responsible, code is at $38<%25<Core:function:run:12>>)
  $42 = dup $0 by 1
  $43 = %20<Builtins::typeIs:19>
  $44 = call $6<%43<builtinTypeOf>> with $0 ($43<%20<Builtins::typeIs:19>> is responsible)
  $45 = dup $44 by 1
  $46 = %21<Builtins::typeIs:25>
  $47 = call $10<%36<builtinEquals>> with $44 $12<%45<Function>> ($46<%21<Builtins::typeIs:25>> is responsible)
  $48 = %4<Builtins::functionRun:5>
  $49 = dup $47 by 1
  $50 = %62<"`function | typeIs Function` was not satisfied">
  $51 = trace: start of call of $29<%71<{ body_6 }>> with $47 $50<%62<"`function | typeIs Function` was not satisfied">> $38<%25<Core:function:run:12>> ($48<%4<Builtins::functionRun:5>> is responsible, code is at $48<%4<Builtins::functionRun:5>>)
  $52 = dup $47 by 1
  $53 = call $29<%71<{ body_6 }>> with $47 $50<%62<"`function | typeIs Function` was not satisfied">> $38<%25<Core:function:run:12>> ($48<%4<Builtins::functionRun:5>> is responsible)
  $54 = trace: end of call
  $55 = %38<builtinGetArgumentCount>
  $56 = dup $0 by 1
  $57 = %1<Builtins::functionRun:11>
  $58 = call $55<%38<builtinGetArgumentCount>> with $0 ($57<%1<Builtins::functionRun:11>> is responsible)
  $59 = dup $58 by 1
  $60 = %54<0>
  $61 = call $10<%36<builtinEquals>> with $58 $60<%54<0>> ($13<%0<Builtins::equals:6>> is responsible)
  $62 = %2<Builtins::functionRun:16>
  $63 = dup $61 by 1
  $64 = %63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $65 = trace: start of call of $29<%71<{ body_6 }>> with $61 $64<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $38<%25<Core:function:run:12>> ($62<%2<Builtins::functionRun:16>> is responsible, code is at $62<%2<Builtins::functionRun:16>>)
  $66 = dup $61 by 1
  $67 = call $29<%71<{ body_6 }>> with $61 $64<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $38<%25<Core:function:run:12>> ($62<%2<Builtins::functionRun:16>> is responsible)
  $68 = trace: end of call
  $69 = %3<Builtins::functionRun:22>
  $70 = %37<builtinFunctionRun>
  $71 = dup $0 by 1
  $72 = trace: start of call of $70<%37<builtinFunctionRun>> with $0 ($69<%3<Builtins::functionRun:22>> is responsible, code is at $69<%3<Builtins::functionRun:22>>)
  $73 = dup $0 by 1
  $74 = call $0 with no arguments ($69<%3<Builtins::functionRun:22>> is responsible)
  $75 = trace: end of call
  $76 = trace: end of call
  $77 = dup $74 by 1
  $78 = $74
  $79 = drop $74
  $80 = drop $67
  $81 = drop $61
  $82 = drop $58
  $83 = drop $53
  $84 = drop $47
  $85 = drop $44
  $86 = drop $36
  $87 = drop $25
  $88 = drop $16
  $89 = drop $14
  $90 = drop $9
  $91 = drop $0
  $92 = $78
body_20 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:echo:13:print
  # Captured IDs: $0
  $3 = %33<Examples:echo:13:print:5>
  $4 = %80<{ body_15 }>
  $5 = dup $0 by 1
  $6 = %50<Stdout>
  $7 = trace: start of call of $4<%80<{ body_15 }>> with $0 $6<%50<Stdout>> ($3<%33<Examples:echo:13:print:5>> is responsible, code is at $3<%33<Examples:echo:13:print:5>>)
  $8 = %43<builtinTypeOf>
  $9 = dup $0 by 1
  $10 = %20<Builtins::typeIs:19>
  $11 = call $8<%43<builtinTypeOf>> with $0 ($10<%20<Builtins::typeIs:19>> is responsible)
  $12 = %36<builtinEquals>
  $13 = dup $11 by 1
  $14 = %51<Struct>
  $15 = %21<Builtins::typeIs:25>
  $16 = call $12<%36<builtinEquals>> with $11 $14<%51<Struct>> ($15<%21<Builtins::typeIs:25>> is responsible)
  $17 = %19<Builtins::structGet:5>
  $18 = %71<{ body_6 }>
  $19 = dup $16 by 1
  $20 = %65<"`struct | typeIs Struct` was not satisfied">
  $21 = trace: start of call of $18<%71<{ body_6 }>> with $16 $20<%65<"`struct | typeIs Struct` was not satisfied">> $3<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible, code is at $17<%19<Builtins::structGet:5>>)
  $22 = dup $16 by 1
  $23 = call $18<%71<{ body_6 }>> with $16 $20<%65<"`struct | typeIs Struct` was not satisfied">> $3<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible)
  $24 = trace: end of call
  $25 = %41<builtinStructHasKey>
  $26 = dup $0 by 1
  $27 = %16<Builtins::structGet:12>
  $28 = call $25<%41<builtinStructHasKey>> with $0 $6<%50<Stdout>> ($27<%16<Builtins::structGet:12>> is responsible)
  $29 = %17<Builtins::structGet:14>
  $30 = dup $28 by 1
  $31 = %66<"`struct | ✨.structHasKey key` was not satisfied">
  $32 = trace: start of call of $18<%71<{ body_6 }>> with $28 $31<%66<"`struct | ✨.structHasKey key` was not satisfied">> $3<%33<Examples:echo:13:print:5>> ($29<%17<Builtins::structGet:14>> is responsible, code is at $29<%17<Builtins::structGet:14>>)
  $33 = dup $28 by 1
  $34 = call $18<%71<{ body_6 }>> with $28 $31<%66<"`struct | ✨.structHasKey key` was not satisfied">> $3<%33<Examples:echo:13:print:5>> ($29<%17<Builtins::structGet:14>> is responsible)
  $35 = trace: end of call
  $36 = %40<builtinStructGet>
  $37 = dup $0 by 1
  $38 = %18<Builtins::structGet:21>
  $39 = call $36<%40<builtinStructGet>> with $0 $6<%50<Stdout>> ($38<%18<Builtins::structGet:21>> is responsible)
  $40 = trace: end of call
  $41 = %34<Examples:echo:13:print:7>
  $42 = dup $39 by 1
  $43 = dup $1 by 1
  $44 = trace: tail call of $39 with $1 ($41<%34<Examples:echo:13:print:7>> is responsible, code is at $41<%34<Examples:echo:13:print:7>>)
  $45 = dup $39 by 1
  $46 = dup $1 by 1
  $47 = call $39 with $1 ($41<%34<Examples:echo:13:print:7>> is responsible)
  $48 = drop $39
  $49 = drop $34
  $50 = drop $28
  $51 = drop $23
  $52 = drop $16
  $53 = drop $11
  $54 = drop $1
  $55 = $47
body_21 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:echo:13
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = { body_20 capturing $0 }
  $4 = %32<Examples:echo:13:5>
  $5 = %80<{ body_15 }>
  $6 = dup $0 by 1
  $7 = %49<Stdin>
  $8 = trace: start of call of $5<%80<{ body_15 }>> with $0 $7<%49<Stdin>> ($4<%32<Examples:echo:13:5>> is responsible, code is at $4<%32<Examples:echo:13:5>>)
  $9 = %43<builtinTypeOf>
  $10 = dup $0 by 1
  $11 = %20<Builtins::typeIs:19>
  $12 = call $9<%43<builtinTypeOf>> with $0 ($11<%20<Builtins::typeIs:19>> is responsible)
  $13 = %36<builtinEquals>
  $14 = dup $12 by 1
  $15 = %51<Struct>
  $16 = %21<Builtins::typeIs:25>
  $17 = call $13<%36<builtinEquals>> with $12 $15<%51<Struct>> ($16<%21<Builtins::typeIs:25>> is responsible)
  $18 = %19<Builtins::structGet:5>
  $19 = %71<{ body_6 }>
  $20 = dup $17 by 1
  $21 = %65<"`struct | typeIs Struct` was not satisfied">
  $22 = trace: start of call of $19<%71<{ body_6 }>> with $17 $21<%65<"`struct | typeIs Struct` was not satisfied">> $4<%32<Examples:echo:13:5>> ($18<%19<Builtins::structGet:5>> is responsible, code is at $18<%19<Builtins::structGet:5>>)
  $23 = dup $17 by 1
  $24 = call $19<%71<{ body_6 }>> with $17 $21<%65<"`struct | typeIs Struct` was not satisfied">> $4<%32<Examples:echo:13:5>> ($18<%19<Builtins::structGet:5>> is responsible)
  $25 = trace: end of call
  $26 = %41<builtinStructHasKey>
  $27 = dup $0 by 1
  $28 = %16<Builtins::structGet:12>
  $29 = call $26<%41<builtinStructHasKey>> with $0 $7<%49<Stdin>> ($28<%16<Builtins::structGet:12>> is responsible)
  $30 = %17<Builtins::structGet:14>
  $31 = dup $29 by 1
  $32 = %66<"`struct | ✨.structHasKey key` was not satisfied">
  $33 = trace: start of call of $19<%71<{ body_6 }>> with $29 $32<%66<"`struct | ✨.structHasKey key` was not satisfied">> $4<%32<Examples:echo:13:5>> ($30<%17<Builtins::structGet:14>> is responsible, code is at $30<%17<Builtins::structGet:14>>)
  $34 = dup $29 by 1
  $35 = call $19<%71<{ body_6 }>> with $29 $32<%66<"`struct | ✨.structHasKey key` was not satisfied">> $4<%32<Examples:echo:13:5>> ($30<%17<Builtins::structGet:14>> is responsible)
  $36 = trace: end of call
  $37 = %40<builtinStructGet>
  $38 = dup $0 by 1
  $39 = %18<Builtins::structGet:21>
  $40 = call $37<%40<builtinStructGet>> with $0 $7<%49<Stdin>> ($39<%18<Builtins::structGet:21>> is responsible)
  $41 = trace: end of call
  $42 = %28<Examples:echo:13:15>
  $43 = dup $3 by 1
  $44 = %56<"Hello, world!">
  $45 = trace: start of call of $3 with $44<%56<"Hello, world!">> ($42<%28<Examples:echo:13:15>> is responsible, code is at $42<%28<Examples:echo:13:15>>)
  $46 = %33<Examples:echo:13:print:5>
  $47 = dup $0 by 1
  $48 = %50<Stdout>
  $49 = trace: start of call of $5<%80<{ body_15 }>> with $0 $48<%50<Stdout>> ($46<%33<Examples:echo:13:print:5>> is responsible, code is at $46<%33<Examples:echo:13:print:5>>)
  $50 = dup $17 by 1
  $51 = trace: start of call of $19<%71<{ body_6 }>> with $17 $21<%65<"`struct | typeIs Struct` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($18<%19<Builtins::structGet:5>> is responsible, code is at $18<%19<Builtins::structGet:5>>)
  $52 = dup $17 by 1
  $53 = call $19<%71<{ body_6 }>> with $17 $21<%65<"`struct | typeIs Struct` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($18<%19<Builtins::structGet:5>> is responsible)
  $54 = trace: end of call
  $55 = dup $0 by 1
  $56 = call $26<%41<builtinStructHasKey>> with $0 $48<%50<Stdout>> ($28<%16<Builtins::structGet:12>> is responsible)
  $57 = dup $56 by 1
  $58 = trace: start of call of $19<%71<{ body_6 }>> with $56 $32<%66<"`struct | ✨.structHasKey key` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($30<%17<Builtins::structGet:14>> is responsible, code is at $30<%17<Builtins::structGet:14>>)
  $59 = dup $56 by 1
  $60 = call $19<%71<{ body_6 }>> with $56 $32<%66<"`struct | ✨.structHasKey key` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($30<%17<Builtins::structGet:14>> is responsible)
  $61 = trace: end of call
  $62 = dup $0 by 1
  $63 = call $37<%40<builtinStructGet>> with $0 $48<%50<Stdout>> ($39<%18<Builtins::structGet:21>> is responsible)
  $64 = trace: end of call
  $65 = %34<Examples:echo:13:print:7>
  $66 = dup $63 by 1
  $67 = trace: start of call of $63 with $44<%56<"Hello, world!">> ($65<%34<Examples:echo:13:print:7>> is responsible, code is at $65<%34<Examples:echo:13:print:7>>)
  $68 = dup $63 by 1
  $69 = call $63 with $44<%56<"Hello, world!">> ($65<%34<Examples:echo:13:print:7>> is responsible)
  $70 = trace: end of call
  $71 = trace: end of call
  $72 = %29<Examples:echo:13:23>
  $73 = %82<{ body_19 }>
  $74 = dup $40 by 1
  $75 = trace: start of call of $73<%82<{ body_19 }>> with $40 ($72<%29<Examples:echo:13:23>> is responsible, code is at $72<%29<Examples:echo:13:23>>)
  $76 = dup $40 by 1
  $77 = call $73<%82<{ body_19 }>> with $40 ($72<%29<Examples:echo:13:23>> is responsible)
  $78 = trace: end of call
  $79 = %30<Examples:echo:13:33>
  $80 = dup $3 by 1
  $81 = %55<"Echo:">
  $82 = trace: start of call of $3 with $81<%55<"Echo:">> ($79<%30<Examples:echo:13:33>> is responsible, code is at $79<%30<Examples:echo:13:33>>)
  $83 = dup $0 by 1
  $84 = trace: start of call of $5<%80<{ body_15 }>> with $0 $48<%50<Stdout>> ($46<%33<Examples:echo:13:print:5>> is responsible, code is at $46<%33<Examples:echo:13:print:5>>)
  $85 = dup $17 by 1
  $86 = trace: start of call of $19<%71<{ body_6 }>> with $17 $21<%65<"`struct | typeIs Struct` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($18<%19<Builtins::structGet:5>> is responsible, code is at $18<%19<Builtins::structGet:5>>)
  $87 = dup $17 by 1
  $88 = call $19<%71<{ body_6 }>> with $17 $21<%65<"`struct | typeIs Struct` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($18<%19<Builtins::structGet:5>> is responsible)
  $89 = trace: end of call
  $90 = dup $56 by 1
  $91 = trace: start of call of $19<%71<{ body_6 }>> with $56 $32<%66<"`struct | ✨.structHasKey key` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($30<%17<Builtins::structGet:14>> is responsible, code is at $30<%17<Builtins::structGet:14>>)
  $92 = dup $56 by 1
  $93 = call $19<%71<{ body_6 }>> with $56 $32<%66<"`struct | ✨.structHasKey key` was not satisfied">> $46<%33<Examples:echo:13:print:5>> ($30<%17<Builtins::structGet:14>> is responsible)
  $94 = trace: end of call
  $95 = trace: end of call
  $96 = dup $63 by 1
  $97 = trace: start of call of $63 with $81<%55<"Echo:">> ($65<%34<Examples:echo:13:print:7>> is responsible, code is at $65<%34<Examples:echo:13:print:7>>)
  $98 = dup $63 by 1
  $99 = call $63 with $81<%55<"Echo:">> ($65<%34<Examples:echo:13:print:7>> is responsible)
  $100 = trace: end of call
  $101 = trace: end of call
  $102 = %31<Examples:echo:13:36>
  $103 = dup $3 by 1
  $104 = dup $77 by 1
  $105 = trace: tail call of $3 with $77 ($102<%31<Examples:echo:13:36>> is responsible, code is at $102<%31<Examples:echo:13:36>>)
  $106 = dup $3 by 1
  $107 = dup $77 by 1
  $108 = call $3 with $77 ($102<%31<Examples:echo:13:36>> is responsible)
  $109 = drop $99
  $110 = drop $93
  $111 = drop $88
  $112 = drop $77
  $113 = drop $69
  $114 = drop $63
  $115 = drop $60
  $116 = drop $56
  $117 = drop $53
  $118 = drop $40
  $119 = drop $35
  $120 = drop $29
  $121 = drop $24
  $122 = drop $17
  $123 = drop $12
  $124 = drop $3
  $125 = drop $0
  $126 = $108
body_22 (responsible $0) =
  # Original HIR IDs: Examples:echo:
  # Captured IDs: none
  $1 = %83<{ body_21 }>
