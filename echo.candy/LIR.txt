# LIR for module Examples:echo
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::equals:6
%1 = Builtins::functionRun:11
%2 = Builtins::functionRun:16
%3 = Builtins::functionRun:22
%4 = Builtins::functionRun:5
%5 = Builtins::getArgumentCount:11
%6 = Builtins::getArgumentCount:5
%7 = Builtins::ifElse:1
%8 = Builtins::ifElse:11
%9 = Builtins::ifElse:14
%10 = Builtins::ifElse:19
%11 = Builtins::ifElse:25
%12 = Builtins::ifElse:28
%13 = Builtins::ifElse:33
%14 = Builtins::ifElse:41
%15 = Builtins::ifElse:5
%16 = Builtins::structGet:12
%17 = Builtins::structGet:14
%18 = Builtins::structGet:21
%19 = Builtins::structGet:5
%20 = Builtins::typeIs:19
%21 = Builtins::typeIs:25
%22 = Builtins::typeOf:5
%23 = Core:function:is0:11:3
%24 = Core:function:is0:13
%25 = Core:function:run:14
%26 = Core:function:run:4
%27 = Examples:echo:11:27
%28 = Examples:echo:11:7
%29 = Examples:echo:11:print:7
%30 = Examples:echo:11:print:9
%31 = anonymous:$generated::needs
%32 = builtinEquals
%33 = builtinGetArgumentCount
%34 = builtinIfElse
%35 = builtinListGet
%36 = builtinStructGet
%37 = builtinStructHasKey
%38 = builtinTagGetValue
%39 = builtinTagHasValue
%40 = builtinTagWithoutValue
%41 = builtinTextConcatenate
%42 = builtinToDebugText
%43 = builtinTypeOf
%44 = False
%45 = Function
%46 = Match
%47 = NoMatch
%48 = Nothing
%49 = Stdin
%50 = Stdout
%51 = Struct
%52 = Tag
%53 = Text
%54 = True
%55 = 0
%56 = "."
%57 = "Echo:"
%58 = "Expected False, got "
%59 = "Expected True, got "
%60 = "Expected a Tag, got `"
%61 = "Expected tag to not have a value, but it has one: `"
%62 = "Hello, world!"
%63 = "The `condition` must be either `True` or `False`."
%64 = "The `reason` must be a text."
%65 = "`."
%66 = "`conditionIsBool` was not satisfied"
%67 = "`else | getArgumentCount | equals 0` was not satisfied"
%68 = "`else | typeIs Function` was not satisfied"
%69 = "`function | typeIs Function` was not satisfied"
%70 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
%71 = "`is0 body` was not satisfied"
%72 = "`struct | typeIs Struct` was not satisfied"
%73 = "`struct | ✨.structHasKey key` was not satisfied"
%74 = "`then | getArgumentCount | equals 0` was not satisfied"
%75 = "`then | typeIs Function` was not satisfied"
%76 = { body_0 }
%77 = { body_1 }
%78 = { body_6 }
%79 = (%46<Match>,)
%80 = { body_7 }
%81 = { body_8 }
%82 = { body_21 }
%83 = { body_23 }
%84 = { body_24 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:result:is:1:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %54<True>
body_1 (responsible $0) =
  # Original HIR IDs: Core::19:isMatch:then, Core::30:isMatch:then, Core::41:isMatch:then, Core::102:isMatch:then, Core::153:isMatch:then, Core::164:isMatch:then, Core:bool:9:isMatch:then, Core:check:9:isMatch:then, Core:controlFlow:if:27, Core:controlFlow:29:isMatch:then, Core:controlFlow:50:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:fixedDecimal:30:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:function:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:29:isMatch:then, Core:int:40:isMatch:then, Core:iterable:generateWithState:14:0:11:1:isMatch:then, Core:iterable:map:19:11:1:isMatch:then, Core:iterable:reduceLeft:38:1:isMatch:then, Core:iterable:take:33:1:isMatch:then, Core:iterable:takeWhile:2:11:1:isMatch:then, Core:iterable:withIndex:11:1:isMatch:then, Core:iterable:withIndex:11:14:1:isMatch:then, Core:iterable:19:isMatch:then, Core:iterable:30:isMatch:then, Core:iterable:82:11:1:isMatch:then, Core:iterable:84:2:11:1:isMatch:then, Core:iterable:84:2:11:7:15:1:isMatch:then, Core:list:generate:59:1:isMatch:then, Core:list:29:isMatch:then, Core:list:40:isMatch:then, Core:result:19:isMatch:then, Core:result:30:isMatch:then, Core:struct:19:isMatch:then, Core:tag:29:isMatch:then, Core:text:29:isMatch:then, Core:text:40:isMatch:then, Core:type:19:isMatch:then, Examples:echo:then, Examples:echo:9:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %48<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %32<builtinEquals>
  $3 = dup $0 by 1
  $4 = %44<False>
  $5 = %31<anonymous:$generated::needs>
  $6 = call $2<%32<builtinEquals>> with $0 $4<%44<False>> ($5<%31<anonymous:$generated::needs>> is responsible)
  $7 = drop $0
  $8 = $6
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = %63<"The `condition` must be either `True` or `False`.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%63<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
  $5 = drop $0
  $6 = $4
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = %64<"The `reason` must be a text.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%64<"The `reason` must be a text.">> ($0 is at fault)
  $5 = drop $0
  $6 = $4
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
  $6 = drop $1
  $7 = drop $0
  $8 = $5
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = %32<builtinEquals>
  $5 = dup $0 by 1
  $6 = %54<True>
  $7 = %31<anonymous:$generated::needs>
  $8 = call $4<%32<builtinEquals>> with $0 $6<%54<True>> ($7<%31<anonymous:$generated::needs>> is responsible)
  $9 = dup $0 by 1
  $10 = { body_2 capturing $0 }
  $11 = %34<builtinIfElse>
  $12 = dup $8 by 1
  $13 = %76<{ body_0 }>
  $14 = dup $10 by 1
  $15 = call $11<%34<builtinIfElse>> with $8 $13<%76<{ body_0 }>> $10 ($7<%31<anonymous:$generated::needs>> is responsible)
  $16 = { body_3 capturing $3 }
  $17 = dup $15 by 1
  $18 = %77<{ body_1 }>
  $19 = dup $16 by 1
  $20 = call $11<%34<builtinIfElse>> with $15 $18<%77<{ body_1 }>> $16 ($7<%31<anonymous:$generated::needs>> is responsible)
  $21 = %43<builtinTypeOf>
  $22 = dup $1 by 1
  $23 = call $21<%43<builtinTypeOf>> with $1 ($3 is responsible)
  $24 = dup $23 by 1
  $25 = %53<Text>
  $26 = call $4<%32<builtinEquals>> with $23 $25<%53<Text>> ($3 is responsible)
  $27 = { body_4 capturing $3 }
  $28 = dup $26 by 1
  $29 = dup $27 by 1
  $30 = call $11<%34<builtinIfElse>> with $26 $18<%77<{ body_1 }>> $27 ($7<%31<anonymous:$generated::needs>> is responsible)
  $31 = dup $1 by 1
  $32 = dup $2 by 1
  $33 = { body_5 capturing $1, $2 }
  $34 = dup $0 by 1
  $35 = dup $33 by 1
  $36 = call $11<%34<builtinIfElse>> with $0 $18<%77<{ body_1 }>> $33 ($7<%31<anonymous:$generated::needs>> is responsible)
  $37 = drop $33
  $38 = drop $30
  $39 = drop $27
  $40 = drop $26
  $41 = drop $23
  $42 = drop $20
  $43 = drop $16
  $44 = drop $15
  $45 = drop $10
  $46 = drop $8
  $47 = drop $2
  $48 = drop $1
  $49 = drop $0
  $50 = $36
body_7 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:18:equals:then, Core:bool:lazyOr:18:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:list:first:6:equals:then, Core:list:single:6:equals:then
  # Captured IDs: none
  $1 = %79<(%46<Match>,)>
body_8 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:didNotMatch, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:is:1:case-0:didNotMatch, Core:bool:lazyAnd:18:case-1:matched, Core:bool:not:6:case-0:matched, Core:check:check:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:function:is0:12, Core:function:is1:12, Core:function:is2:12, Core:function:is3:12, Core:function:is4:12, Core:function:is5:12, Core:list:isValidIndex:21, Core:list:isValidInsertIndex:21, Core:result:is:1:case-0:didNotMatch, anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: none
  $1 = %44<False>
body_9 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %38<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%38<builtinTagGetValue>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %42<builtinToDebugText>
  $7 = dup $5 by 1
  $8 = call $6<%42<builtinToDebugText>> with $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $9 = %41<builtinTextConcatenate>
  $10 = %61<"Expected tag to not have a value, but it has one: `">
  $11 = dup $8 by 1
  $12 = call $9<%41<builtinTextConcatenate>> with $10<%61<"Expected tag to not have a value, but it has one: `">> $8 ($4<%7<Builtins::ifElse:1>> is responsible)
  $13 = dup $12 by 1
  $14 = %65<"`.">
  $15 = call $9<%41<builtinTextConcatenate>> with $12 $14<%65<"`.">> ($4<%7<Builtins::ifElse:1>> is responsible)
  $16 = %47<NoMatch>
  $17 = dup $15 by 1
  $18 = ($16<%47<NoMatch>>, $15)
  $19 = drop $15
  $20 = drop $12
  $21 = drop $8
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_10 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %39<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%39<builtinTagHasValue>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %32<builtinEquals>
  $7 = %44<False>
  $8 = dup $5 by 1
  $9 = call $6<%32<builtinEquals>> with $7<%44<False>> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_9 capturing $0 }
  $12 = %34<builtinIfElse>
  $13 = dup $9 by 1
  $14 = %80<{ body_7 }>
  $15 = dup $11 by 1
  $16 = call $12<%34<builtinIfElse>> with $9 $14<%80<{ body_7 }>> $11 ($4<%7<Builtins::ifElse:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = drop $0
  $21 = $16
body_11 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %42<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%42<builtinToDebugText>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %41<builtinTextConcatenate>
  $7 = %59<"Expected True, got ">
  $8 = dup $5 by 1
  $9 = call $6<%41<builtinTextConcatenate>> with $7<%59<"Expected True, got ">> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %56<".">
  $12 = call $6<%41<builtinTextConcatenate>> with $9 $11<%56<".">> ($4<%7<Builtins::ifElse:1>> is responsible)
  $13 = %47<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%47<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_12 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %40<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%40<builtinTagWithoutValue>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %32<builtinEquals>
  $7 = %54<True>
  $8 = dup $5 by 1
  $9 = call $6<%32<builtinEquals>> with $7<%54<True>> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_10 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_11 capturing $5 }
  $14 = %34<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%34<builtinIfElse>> with $9 $11 $13 ($4<%7<Builtins::ifElse:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_13 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %42<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%42<builtinToDebugText>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %41<builtinTextConcatenate>
  $7 = %60<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%41<builtinTextConcatenate>> with $7<%60<"Expected a Tag, got `">> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %65<"`.">
  $12 = call $6<%41<builtinTextConcatenate>> with $9 $11<%65<"`.">> ($4<%7<Builtins::ifElse:1>> is responsible)
  $13 = %47<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%47<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_14 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
  $4 = drop $0
  $5 = $3
body_15 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %38<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%38<builtinTagGetValue>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %42<builtinToDebugText>
  $7 = dup $5 by 1
  $8 = call $6<%42<builtinToDebugText>> with $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $9 = %41<builtinTextConcatenate>
  $10 = %61<"Expected tag to not have a value, but it has one: `">
  $11 = dup $8 by 1
  $12 = call $9<%41<builtinTextConcatenate>> with $10<%61<"Expected tag to not have a value, but it has one: `">> $8 ($4<%7<Builtins::ifElse:1>> is responsible)
  $13 = dup $12 by 1
  $14 = %65<"`.">
  $15 = call $9<%41<builtinTextConcatenate>> with $12 $14<%65<"`.">> ($4<%7<Builtins::ifElse:1>> is responsible)
  $16 = %47<NoMatch>
  $17 = dup $15 by 1
  $18 = ($16<%47<NoMatch>>, $15)
  $19 = drop $15
  $20 = drop $12
  $21 = drop $8
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_16 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %39<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%39<builtinTagHasValue>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %32<builtinEquals>
  $7 = %44<False>
  $8 = dup $5 by 1
  $9 = call $6<%32<builtinEquals>> with $7<%44<False>> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_15 capturing $0 }
  $12 = %34<builtinIfElse>
  $13 = dup $9 by 1
  $14 = %80<{ body_7 }>
  $15 = dup $11 by 1
  $16 = call $12<%34<builtinIfElse>> with $9 $14<%80<{ body_7 }>> $11 ($4<%7<Builtins::ifElse:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = drop $0
  $21 = $16
body_17 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %42<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%42<builtinToDebugText>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %41<builtinTextConcatenate>
  $7 = %58<"Expected False, got ">
  $8 = dup $5 by 1
  $9 = call $6<%41<builtinTextConcatenate>> with $7<%58<"Expected False, got ">> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %56<".">
  $12 = call $6<%41<builtinTextConcatenate>> with $9 $11<%56<".">> ($4<%7<Builtins::ifElse:1>> is responsible)
  $13 = %47<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%47<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_18 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then
  # Captured IDs: $0
  $2 = %40<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%40<builtinTagWithoutValue>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %32<builtinEquals>
  $7 = %44<False>
  $8 = dup $5 by 1
  $9 = call $6<%32<builtinEquals>> with $7<%44<False>> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_16 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_17 capturing $5 }
  $14 = %34<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%34<builtinIfElse>> with $9 $11 $13 ($4<%7<Builtins::ifElse:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_19 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else
  # Captured IDs: $0
  $2 = %42<builtinToDebugText>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%42<builtinToDebugText>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %41<builtinTextConcatenate>
  $7 = %60<"Expected a Tag, got `">
  $8 = dup $5 by 1
  $9 = call $6<%41<builtinTextConcatenate>> with $7<%60<"Expected a Tag, got `">> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $9 by 1
  $11 = %65<"`.">
  $12 = call $6<%41<builtinTextConcatenate>> with $9 $11<%65<"`.">> ($4<%7<Builtins::ifElse:1>> is responsible)
  $13 = %47<NoMatch>
  $14 = dup $12 by 1
  $15 = ($13<%47<NoMatch>>, $12)
  $16 = drop $12
  $17 = drop $9
  $18 = drop $5
  $19 = drop $0
  $20 = $15
body_20 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %43<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %7<Builtins::ifElse:1>
  $5 = call $2<%43<builtinTypeOf>> with $0 ($4<%7<Builtins::ifElse:1>> is responsible)
  $6 = %32<builtinEquals>
  $7 = %52<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%32<builtinEquals>> with $7<%52<Tag>> $5 ($4<%7<Builtins::ifElse:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_18 capturing $0 }
  $12 = dup $5 by 1
  $13 = { body_19 capturing $5 }
  $14 = %34<builtinIfElse>
  $15 = dup $9 by 1
  $16 = dup $11 by 1
  $17 = dup $13 by 1
  $18 = call $14<%34<builtinIfElse>> with $9 $11 $13 ($4<%7<Builtins::ifElse:1>> is responsible)
  $19 = drop $13
  $20 = drop $11
  $21 = drop $9
  $22 = drop $5
  $23 = drop $0
  $24 = $18
body_21 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Builtins::ifElse
  # Captured IDs: none
  $4 = %43<builtinTypeOf>
  $5 = dup $0 by 1
  $6 = %7<Builtins::ifElse:1>
  $7 = call $4<%43<builtinTypeOf>> with $0 ($6<%7<Builtins::ifElse:1>> is responsible)
  $8 = %32<builtinEquals>
  $9 = %52<Tag>
  $10 = dup $7 by 1
  $11 = call $8<%32<builtinEquals>> with $9<%52<Tag>> $7 ($6<%7<Builtins::ifElse:1>> is responsible)
  $12 = dup $0 by 1
  $13 = { body_12 capturing $0 }
  $14 = dup $7 by 1
  $15 = { body_13 capturing $7 }
  $16 = %34<builtinIfElse>
  $17 = dup $11 by 1
  $18 = dup $13 by 1
  $19 = dup $15 by 1
  $20 = call $16<%34<builtinIfElse>> with $11 $13 $15 ($6<%7<Builtins::ifElse:1>> is responsible)
  $21 = %35<builtinListGet>
  $22 = dup $20 by 1
  $23 = %55<0>
  $24 = call $21<%35<builtinListGet>> with $20 $23<%55<0>> ($6<%7<Builtins::ifElse:1>> is responsible)
  $25 = dup $24 by 1
  $26 = %46<Match>
  $27 = call $8<%32<builtinEquals>> with $24 $26<%46<Match>> ($6<%7<Builtins::ifElse:1>> is responsible)
  $28 = dup $20 by 1
  $29 = { body_14 capturing $20 }
  $30 = dup $0 by 1
  $31 = { body_20 capturing $0 }
  $32 = dup $27 by 1
  $33 = dup $29 by 1
  $34 = dup $31 by 1
  $35 = call $16<%34<builtinIfElse>> with $27 $29 $31 ($6<%7<Builtins::ifElse:1>> is responsible)
  $36 = dup $35 by 1
  $37 = call $21<%35<builtinListGet>> with $35 $23<%55<0>> ($6<%7<Builtins::ifElse:1>> is responsible)
  $38 = dup $37 by 1
  $39 = call $8<%32<builtinEquals>> with $37 $26<%46<Match>> ($6<%7<Builtins::ifElse:1>> is responsible)
  $40 = dup $39 by 1
  $41 = %76<{ body_0 }>
  $42 = %81<{ body_8 }>
  $43 = call $16<%34<builtinIfElse>> with $39 $41<%76<{ body_0 }>> $42<%81<{ body_8 }>> ($6<%7<Builtins::ifElse:1>> is responsible)
  $44 = %78<{ body_6 }>
  $45 = dup $43 by 1
  $46 = %66<"`conditionIsBool` was not satisfied">
  $47 = %15<Builtins::ifElse:5>
  $48 = call $44<%78<{ body_6 }>> with $43 $46<%66<"`conditionIsBool` was not satisfied">> $3 ($47<%15<Builtins::ifElse:5>> is responsible)
  $49 = dup $1 by 1
  $50 = %20<Builtins::typeIs:19>
  $51 = call $4<%43<builtinTypeOf>> with $1 ($50<%20<Builtins::typeIs:19>> is responsible)
  $52 = dup $51 by 1
  $53 = %45<Function>
  $54 = %21<Builtins::typeIs:25>
  $55 = call $8<%32<builtinEquals>> with $51 $53<%45<Function>> ($54<%21<Builtins::typeIs:25>> is responsible)
  $56 = dup $55 by 1
  $57 = %75<"`then | typeIs Function` was not satisfied">
  $58 = %8<Builtins::ifElse:11>
  $59 = call $44<%78<{ body_6 }>> with $55 $57<%75<"`then | typeIs Function` was not satisfied">> $3 ($58<%8<Builtins::ifElse:11>> is responsible)
  $60 = dup $51 by 1
  $61 = call $8<%32<builtinEquals>> with $51 $53<%45<Function>> ($54<%21<Builtins::typeIs:25>> is responsible)
  $62 = dup $61 by 1
  $63 = %69<"`function | typeIs Function` was not satisfied">
  $64 = %9<Builtins::ifElse:14>
  $65 = %6<Builtins::getArgumentCount:5>
  $66 = call $44<%78<{ body_6 }>> with $61 $63<%69<"`function | typeIs Function` was not satisfied">> $64<%9<Builtins::ifElse:14>> ($65<%6<Builtins::getArgumentCount:5>> is responsible)
  $67 = %33<builtinGetArgumentCount>
  $68 = dup $1 by 1
  $69 = %5<Builtins::getArgumentCount:11>
  $70 = call $67<%33<builtinGetArgumentCount>> with $1 ($69<%5<Builtins::getArgumentCount:11>> is responsible)
  $71 = dup $70 by 1
  $72 = %0<Builtins::equals:6>
  $73 = call $8<%32<builtinEquals>> with $70 $23<%55<0>> ($72<%0<Builtins::equals:6>> is responsible)
  $74 = dup $73 by 1
  $75 = %74<"`then | getArgumentCount | equals 0` was not satisfied">
  $76 = %10<Builtins::ifElse:19>
  $77 = call $44<%78<{ body_6 }>> with $73 $75<%74<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($76<%10<Builtins::ifElse:19>> is responsible)
  $78 = dup $2 by 1
  $79 = call $4<%43<builtinTypeOf>> with $2 ($50<%20<Builtins::typeIs:19>> is responsible)
  $80 = dup $79 by 1
  $81 = call $8<%32<builtinEquals>> with $79 $53<%45<Function>> ($54<%21<Builtins::typeIs:25>> is responsible)
  $82 = dup $81 by 1
  $83 = %68<"`else | typeIs Function` was not satisfied">
  $84 = %11<Builtins::ifElse:25>
  $85 = call $44<%78<{ body_6 }>> with $81 $83<%68<"`else | typeIs Function` was not satisfied">> $3 ($84<%11<Builtins::ifElse:25>> is responsible)
  $86 = dup $79 by 1
  $87 = call $8<%32<builtinEquals>> with $79 $53<%45<Function>> ($54<%21<Builtins::typeIs:25>> is responsible)
  $88 = dup $87 by 1
  $89 = %12<Builtins::ifElse:28>
  $90 = call $44<%78<{ body_6 }>> with $87 $63<%69<"`function | typeIs Function` was not satisfied">> $89<%12<Builtins::ifElse:28>> ($65<%6<Builtins::getArgumentCount:5>> is responsible)
  $91 = dup $2 by 1
  $92 = call $67<%33<builtinGetArgumentCount>> with $2 ($69<%5<Builtins::getArgumentCount:11>> is responsible)
  $93 = dup $92 by 1
  $94 = call $8<%32<builtinEquals>> with $92 $23<%55<0>> ($72<%0<Builtins::equals:6>> is responsible)
  $95 = dup $94 by 1
  $96 = %67<"`else | getArgumentCount | equals 0` was not satisfied">
  $97 = %13<Builtins::ifElse:33>
  $98 = call $44<%78<{ body_6 }>> with $94 $96<%67<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($97<%13<Builtins::ifElse:33>> is responsible)
  $99 = dup $0 by 1
  $100 = dup $1 by 1
  $101 = dup $2 by 1
  $102 = %14<Builtins::ifElse:41>
  $103 = call $16<%34<builtinIfElse>> with $0 $1 $2 ($102<%14<Builtins::ifElse:41>> is responsible)
  $104 = drop $98
  $105 = drop $94
  $106 = drop $92
  $107 = drop $90
  $108 = drop $87
  $109 = drop $85
  $110 = drop $81
  $111 = drop $79
  $112 = drop $77
  $113 = drop $73
  $114 = drop $70
  $115 = drop $66
  $116 = drop $61
  $117 = drop $59
  $118 = drop $55
  $119 = drop $51
  $120 = drop $48
  $121 = drop $43
  $122 = drop $39
  $123 = drop $37
  $124 = drop $35
  $125 = drop $31
  $126 = drop $29
  $127 = drop $27
  $128 = drop $24
  $129 = drop $20
  $130 = drop $15
  $131 = drop $13
  $132 = drop $11
  $133 = drop $7
  $134 = drop $2
  $135 = drop $1
  $136 = drop $0
  $137 = $103
body_22 (responsible $1) =
  # Original HIR IDs: Core:function:is0:11
  # Captured IDs: $0
  $2 = %43<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %20<Builtins::typeIs:19>
  $5 = call $2<%43<builtinTypeOf>> with $0 ($4<%20<Builtins::typeIs:19>> is responsible)
  $6 = %32<builtinEquals>
  $7 = dup $5 by 1
  $8 = %45<Function>
  $9 = %21<Builtins::typeIs:25>
  $10 = call $6<%32<builtinEquals>> with $5 $8<%45<Function>> ($9<%21<Builtins::typeIs:25>> is responsible)
  $11 = %78<{ body_6 }>
  $12 = dup $10 by 1
  $13 = %69<"`function | typeIs Function` was not satisfied">
  $14 = %23<Core:function:is0:11:3>
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = call $11<%78<{ body_6 }>> with $10 $13<%69<"`function | typeIs Function` was not satisfied">> $14<%23<Core:function:is0:11:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $17 = %33<builtinGetArgumentCount>
  $18 = dup $0 by 1
  $19 = %5<Builtins::getArgumentCount:11>
  $20 = call $17<%33<builtinGetArgumentCount>> with $0 ($19<%5<Builtins::getArgumentCount:11>> is responsible)
  $21 = dup $20 by 1
  $22 = %55<0>
  $23 = %0<Builtins::equals:6>
  $24 = call $6<%32<builtinEquals>> with $20 $22<%55<0>> ($23<%0<Builtins::equals:6>> is responsible)
  $25 = drop $20
  $26 = drop $16
  $27 = drop $10
  $28 = drop $5
  $29 = drop $0
  $30 = $24
body_23 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:run
  # Captured IDs: none
  $2 = %43<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %22<Builtins::typeOf:5>
  $5 = call $2<%43<builtinTypeOf>> with $0 ($4<%22<Builtins::typeOf:5>> is responsible)
  $6 = %32<builtinEquals>
  $7 = dup $5 by 1
  $8 = %45<Function>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%32<builtinEquals>> with $5 $8<%45<Function>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_22 capturing $0 }
  $13 = %82<{ body_21 }>
  $14 = dup $10 by 1
  $15 = dup $12 by 1
  $16 = %81<{ body_8 }>
  $17 = %24<Core:function:is0:13>
  $18 = call $13<%82<{ body_21 }>> with $10 $12 $16<%81<{ body_8 }>> ($17<%24<Core:function:is0:13>> is responsible)
  $19 = %78<{ body_6 }>
  $20 = dup $18 by 1
  $21 = %71<"`is0 body` was not satisfied">
  $22 = %26<Core:function:run:4>
  $23 = call $19<%78<{ body_6 }>> with $18 $21<%71<"`is0 body` was not satisfied">> $1 ($22<%26<Core:function:run:4>> is responsible)
  $24 = dup $0 by 1
  $25 = %20<Builtins::typeIs:19>
  $26 = call $2<%43<builtinTypeOf>> with $0 ($25<%20<Builtins::typeIs:19>> is responsible)
  $27 = dup $26 by 1
  $28 = %21<Builtins::typeIs:25>
  $29 = call $6<%32<builtinEquals>> with $26 $8<%45<Function>> ($28<%21<Builtins::typeIs:25>> is responsible)
  $30 = dup $29 by 1
  $31 = %69<"`function | typeIs Function` was not satisfied">
  $32 = %25<Core:function:run:14>
  $33 = %4<Builtins::functionRun:5>
  $34 = call $19<%78<{ body_6 }>> with $29 $31<%69<"`function | typeIs Function` was not satisfied">> $32<%25<Core:function:run:14>> ($33<%4<Builtins::functionRun:5>> is responsible)
  $35 = %33<builtinGetArgumentCount>
  $36 = dup $0 by 1
  $37 = %1<Builtins::functionRun:11>
  $38 = call $35<%33<builtinGetArgumentCount>> with $0 ($37<%1<Builtins::functionRun:11>> is responsible)
  $39 = dup $38 by 1
  $40 = %55<0>
  $41 = call $6<%32<builtinEquals>> with $38 $40<%55<0>> ($9<%0<Builtins::equals:6>> is responsible)
  $42 = dup $41 by 1
  $43 = %70<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $44 = %2<Builtins::functionRun:16>
  $45 = call $19<%78<{ body_6 }>> with $41 $43<%70<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $32<%25<Core:function:run:14>> ($44<%2<Builtins::functionRun:16>> is responsible)
  $46 = dup $0 by 1
  $47 = %3<Builtins::functionRun:22>
  $48 = call $0 with no arguments ($47<%3<Builtins::functionRun:22>> is responsible)
  $49 = drop $45
  $50 = drop $41
  $51 = drop $38
  $52 = drop $34
  $53 = drop $29
  $54 = drop $26
  $55 = drop $23
  $56 = drop $18
  $57 = drop $12
  $58 = drop $10
  $59 = drop $5
  $60 = drop $0
  $61 = $48
body_24 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:echo:11
  # Captured IDs: none
  $2 = %43<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %20<Builtins::typeIs:19>
  $5 = call $2<%43<builtinTypeOf>> with $0 ($4<%20<Builtins::typeIs:19>> is responsible)
  $6 = %32<builtinEquals>
  $7 = dup $5 by 1
  $8 = %51<Struct>
  $9 = %21<Builtins::typeIs:25>
  $10 = call $6<%32<builtinEquals>> with $5 $8<%51<Struct>> ($9<%21<Builtins::typeIs:25>> is responsible)
  $11 = %78<{ body_6 }>
  $12 = dup $10 by 1
  $13 = %72<"`struct | typeIs Struct` was not satisfied">
  $14 = %28<Examples:echo:11:7>
  $15 = %19<Builtins::structGet:5>
  $16 = call $11<%78<{ body_6 }>> with $10 $13<%72<"`struct | typeIs Struct` was not satisfied">> $14<%28<Examples:echo:11:7>> ($15<%19<Builtins::structGet:5>> is responsible)
  $17 = %37<builtinStructHasKey>
  $18 = dup $0 by 1
  $19 = %49<Stdin>
  $20 = %16<Builtins::structGet:12>
  $21 = call $17<%37<builtinStructHasKey>> with $0 $19<%49<Stdin>> ($20<%16<Builtins::structGet:12>> is responsible)
  $22 = dup $21 by 1
  $23 = %73<"`struct | ✨.structHasKey key` was not satisfied">
  $24 = %17<Builtins::structGet:14>
  $25 = call $11<%78<{ body_6 }>> with $21 $23<%73<"`struct | ✨.structHasKey key` was not satisfied">> $14<%28<Examples:echo:11:7>> ($24<%17<Builtins::structGet:14>> is responsible)
  $26 = %36<builtinStructGet>
  $27 = dup $0 by 1
  $28 = %18<Builtins::structGet:21>
  $29 = call $26<%36<builtinStructGet>> with $0 $19<%49<Stdin>> ($28<%18<Builtins::structGet:21>> is responsible)
  $30 = dup $10 by 1
  $31 = %29<Examples:echo:11:print:7>
  $32 = call $11<%78<{ body_6 }>> with $10 $13<%72<"`struct | typeIs Struct` was not satisfied">> $31<%29<Examples:echo:11:print:7>> ($15<%19<Builtins::structGet:5>> is responsible)
  $33 = dup $0 by 1
  $34 = %50<Stdout>
  $35 = call $17<%37<builtinStructHasKey>> with $0 $34<%50<Stdout>> ($20<%16<Builtins::structGet:12>> is responsible)
  $36 = dup $35 by 1
  $37 = call $11<%78<{ body_6 }>> with $35 $23<%73<"`struct | ✨.structHasKey key` was not satisfied">> $31<%29<Examples:echo:11:print:7>> ($24<%17<Builtins::structGet:14>> is responsible)
  $38 = dup $0 by 1
  $39 = call $26<%36<builtinStructGet>> with $0 $34<%50<Stdout>> ($28<%18<Builtins::structGet:21>> is responsible)
  $40 = dup $39 by 1
  $41 = %62<"Hello, world!">
  $42 = %30<Examples:echo:11:print:9>
  $43 = call $39 with $41<%62<"Hello, world!">> ($42<%30<Examples:echo:11:print:9>> is responsible)
  $44 = %83<{ body_23 }>
  $45 = dup $29 by 1
  $46 = %27<Examples:echo:11:27>
  $47 = call $44<%83<{ body_23 }>> with $29 ($46<%27<Examples:echo:11:27>> is responsible)
  $48 = dup $10 by 1
  $49 = call $11<%78<{ body_6 }>> with $10 $13<%72<"`struct | typeIs Struct` was not satisfied">> $31<%29<Examples:echo:11:print:7>> ($15<%19<Builtins::structGet:5>> is responsible)
  $50 = dup $35 by 1
  $51 = call $11<%78<{ body_6 }>> with $35 $23<%73<"`struct | ✨.structHasKey key` was not satisfied">> $31<%29<Examples:echo:11:print:7>> ($24<%17<Builtins::structGet:14>> is responsible)
  $52 = dup $39 by 1
  $53 = %57<"Echo:">
  $54 = call $39 with $53<%57<"Echo:">> ($42<%30<Examples:echo:11:print:9>> is responsible)
  $55 = dup $10 by 1
  $56 = call $11<%78<{ body_6 }>> with $10 $13<%72<"`struct | typeIs Struct` was not satisfied">> $31<%29<Examples:echo:11:print:7>> ($15<%19<Builtins::structGet:5>> is responsible)
  $57 = dup $35 by 1
  $58 = call $11<%78<{ body_6 }>> with $35 $23<%73<"`struct | ✨.structHasKey key` was not satisfied">> $31<%29<Examples:echo:11:print:7>> ($24<%17<Builtins::structGet:14>> is responsible)
  $59 = dup $39 by 1
  $60 = dup $47 by 1
  $61 = call $39 with $47 ($42<%30<Examples:echo:11:print:9>> is responsible)
  $62 = drop $58
  $63 = drop $56
  $64 = drop $54
  $65 = drop $51
  $66 = drop $49
  $67 = drop $47
  $68 = drop $43
  $69 = drop $39
  $70 = drop $37
  $71 = drop $35
  $72 = drop $32
  $73 = drop $29
  $74 = drop $25
  $75 = drop $21
  $76 = drop $16
  $77 = drop $10
  $78 = drop $5
  $79 = drop $0
  $80 = $61
body_25 (responsible $0) =
  # Original HIR IDs: Examples:echo:
  # Captured IDs: none
  $1 = %84<{ body_24 }>
