# VM Byte Code for module Examples:echo
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constant heap
<replaced address 05251864681a3500>: Builtins::typeOf:5
<replaced address 05cf6ed3a3e1ef22>: "NotUtf8"
<replaced address 079d177054a20e79>: "`is0 body` was not satisfied"
<replaced address 07c1052bec280409>: "`then | typeIs Function` was not satisfied"
<replaced address 0a7bac382389bce1>: "ReadToEnd"
<replaced address 0d4569ee47d3c0f2>: (,)
<replaced address 0fea7d5fa5afcc30>: Builtins::typeIs:25
<replaced address 1076a7c75d895c72>: "NotAnInteger"
<replaced address 12f34f1ed9c50d82>: { 3 arguments (capturing nothing) → ip-582 }
<replaced address 13bae94f69b93dec>: Builtins::ifElse:11
<replaced address 13f6f9707e46b204>: { 0 arguments (capturing nothing) → ip-434 }
<replaced address 1620eaa8950d6c6e>: { 0 arguments (capturing nothing) → ip-112 }
<replaced address 18dc4adab2c8e8df>: "`struct | ✨.structHasKey key` was not satisfied"
<replaced address 19beba0e7e49ddcc>: Match ((,))
<replaced address 1ec80e8dabf3a977>: { 0 arguments (capturing nothing) → ip-413 }
<replaced address 1f44a429f4531e2d>: Builtins::ifElse:14
<replaced address 1f92019f89733a43>: Builtins::structGet:12
<replaced address 1ffedbdb2de9475b>: Examples:echo:13:print:5
<replaced address 21f03b3ca28e0378>: "You called a tag that already has a value."
<replaced address 26b68cb565ecfdb2>: { 0 arguments (capturing nothing) → ip-300 }
<replaced address 29f9db9855e50da6>: "You called a function that expects "
<replaced address 2a8be7103eabae0e>: "Ok"
<replaced address 2ace5f047eecfe6e>: Builtins::ifElse:1
<replaced address 2cc529e2abd4637b>: " arguments with 1 arguments."
<replaced address 2ded061b072e15be>: { 0 arguments (capturing nothing) → ip-0 }
<replaced address 2ea7161ec96fbd8a>: Examples:echo:13:36
<replaced address 3012662547e8aef0>: "Echo:"
<replaced address 30cbd72ce1a5ad3c>: { 0 arguments (capturing nothing) → ip-2058 }
<replaced address 35d9a150f489641c>: { 0 arguments (capturing nothing) → ip-1514 }
<replaced address 36eebe9168aef0b0>: "The `reason` must be a text."
<replaced address 39782b3bf71cb4fd>: Examples:echo:13:15
<replaced address 3eca0e872d043602>: Builtins::typeIs:19
<replaced address 422f322f2940db06>: Builtins::structGet:21
<replaced address 4302703a6cd3fa75>: Builtins::getArgumentCount:5
<replaced address 4672d383c7509a9f>: "`then | getArgumentCount | equals 0` was not satisfied"
<replaced address 4d094d47213a5655>: "Equal"
<replaced address 4f60c7964b632b1f>: Core:function:run:2
<replaced address 508ba0f10c50757f>: Examples:echo:13:5
<replaced address 51f524ae63c4af0b>: "Tag"
<replaced address 52b244f0f1246b0e>: { 0 arguments (capturing nothing) → ip-1040 }
<replaced address 5421ad79de6036cd>: { 0 arguments (capturing nothing) → ip-2079 }
<replaced address 568420a2a5125080>: "GetNextRequest"
<replaced address 572a3664aca7a63d>: Core:function:is0:11
<replaced address 59315a8fbde1f38a>: { 0 arguments (capturing nothing) → ip-420 }
<replaced address 59d6aae2417bc61d>: "Hello, world!"
<replaced address 59fb4da19b618456>: Builtins::structGet:5
<replaced address 5daeb472a61ff7f8>: "False"
<replaced address 5e797bdd915d3c29>: Examples:echo:
<replaced address 614077b0f92cd7f0>: "Struct"
<replaced address 64026faceb8eeafd>: { 0 arguments (capturing nothing) → ip-399 }
<replaced address 642c742827aec9ac>: "File"
<replaced address 6671bca3e4104f84>: { 1 argument (capturing nothing) → ip-2948 }
<replaced address 6732a87eefdda5c6>: "Nothing"
<replaced address 67e46f1286cabf9b>: Core:function:is0:9:3
<replaced address 69c65ba14a8cd82f>: { 0 arguments (capturing nothing) → ip-2037 }
<replaced address 6b24044ae391e0b7>: "Int"
<replaced address 6cdccd509afc921c>: "Text"
<replaced address 6fe1fdb2563c07ad>: "Arguments"
<replaced address 7008c023be883ff4>: Builtins::ifElse:19
<replaced address 777966b8a7b8c63b>: { 0 arguments (capturing nothing) → ip-1225 }
<replaced address 7b5c0ed7f870b37f>: "`conditionIsBool` was not satisfied"
<replaced address 7c987e313b2f2519>: Builtins::structGet:14
<replaced address 7d05586cdfa53231>: Examples:echo:13:print:7
<replaced address 7d540cc672165a12>: Builtins::functionRun:11
<replaced address 7e4058bdd2b794f1>: Core:function:run:12
<replaced address 807d7368f1a4edd6>: "Builtin"
<replaced address 80f4eaa53f4876cd>: anonymous:$generated::needs
<replaced address 834388196300f4fb>: "`function | typeIs Function` was not satisfied"
<replaced address 859014e38a16c47f>: "HttpServer"
<replaced address 871c35d8d3bc0076>: Builtins::ifElse:41
<replaced address 91ccd4b75c545de9>: "The `condition` must be either `True` or `False`."
<replaced address 94534c4f2cbd266b>: { 0 arguments (capturing nothing) → ip-441 }
<replaced address 9467827b874a1a94>: Builtins::functionRun:5
<replaced address 957eb8ad35ecdba0>: "`else | getArgumentCount | equals 0` was not satisfied"
<replaced address 95c497c9e696f807>: { 0 arguments (capturing nothing) → ip-109 }
<replaced address 996cc5f08093ac25>: "`struct | typeIs Struct` was not satisfied"
<replaced address 9a411ed2de02bbfd>: "`else | typeIs Function` was not satisfied"
<replaced address 9b051d74ed814f94>: "Open"
<replaced address 9b185ea81f6a05a3>: { 1 argument (capturing nothing) → ip-1703 }
<replaced address 9b692663aeb40da7>: "SendResponse"
<replaced address 9beb0cb1b775254c>: "Close"
<replaced address 9c61ef87641ba65d>: "NoMatch"
<replaced address 9e6bbbaefd7d3510>: { 0 arguments (capturing nothing) → ip-406 }
<replaced address 9ee8514b45dca9c6>: Builtins::ifElse:25
<replaced address a0a9e3136ed0e3a3>: Builtins::functionRun:22
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a0b2414b5ce980d4>: "Match"
<replaced address a2f6d53168c96b64>: "GetRandomBytes"
<replaced address a42fa7a35c7b2242>: { 0 arguments (capturing nothing) → ip-2044 }
<replaced address aa720c25d0768a07>: Builtins::ifElse:28
<replaced address b1282a0b901c21a3>: { 0 arguments (capturing nothing) → ip-2065 }
<replaced address b635f42fa2ffd883>: { 0 arguments (capturing nothing) → ip-1521 }
<replaced address b66aa5e8eefa60de>: "Function"
<replaced address b7bd58c88404a425>: Builtins::functionRun:16
<replaced address b7d5083e90b08e9b>: Builtins::getArgumentCount:11
<replaced address bb427c5d2d7a3625>: { 0 arguments (capturing nothing) → ip-1047 }
<replaced address bbcfa9d6e3f11acf>: "Greater"
<replaced address bd7e643bf52790f0>: "Stdout"
<replaced address c1be25f0a730ee0f>: "You can only call tags or functions."
<replaced address c4a428f16deb61d9>: { 0 arguments (capturing nothing) → ip-115 }
<replaced address c55e38f5302d09a5>: Examples:echo:13:23
<replaced address c616deb28d19f273>: Examples:echo:13:33
<replaced address c841b45ecc45bd33>: "True"
<replaced address d7629bf6e871f5e8>: "Error"
<replaced address d98dad6e6c5867f1>: { 0 arguments (capturing nothing) → ip-427 }
<replaced address dc704463e00c0b29>: { 0 arguments (capturing nothing) → ip-3 }
<replaced address e13459ee6346ab5d>: "List"
<replaced address e1d6728501bc6b89>: Builtins::equals:6
<replaced address e20e5f8b7e376a93>: "FileSystem"
<replaced address e4a926249d656e79>: { 1 argument (capturing nothing) → ip-165 }
<replaced address e4db5827e264d41a>: Builtins::ifElse:5
<replaced address e63e502aad6c0ab9>: { 3 arguments (capturing nothing) → ip-41 }
<replaced address e74159810db9029c>: { 0 arguments (capturing nothing) → ip-106 }
<replaced address eb91760da20a6bb6>: { 0 arguments (capturing nothing) → ip-2072 }
<replaced address ef0df736712a6b95>: "Request"
<replaced address f09f4031b4ee2296>: { 0 arguments (capturing nothing) → ip-1528 }
<replaced address f238301b5e30ca90>: { 2 arguments (capturing nothing) → ip-1090 }
<replaced address f25a4b0499a74049>: Core:function:run:4
<replaced address f2debbb68786f674>: "Less"
<replaced address f5a944722e95cdbc>: { 0 arguments (capturing nothing) → ip-3722 }
<replaced address f6628b2acfb76329>: { 0 arguments (capturing nothing) → ip-2051 }
<replaced address f6b013ac281ed159>: { 1 argument (capturing nothing) → ip-325 }
<replaced address f71d13d9f94251d4>: { 0 arguments (capturing nothing) → ip-1218 }
<replaced address f766d677b86db44a>: { 1 argument (capturing nothing) → ip-1362 }
<replaced address f8bed0fc3ef0a4f6>: "Stdin"
<replaced address f921b2be2e6a74f5>: "`function | ✨.getArgumentCount | equals 0` was not satisfied"
<replaced address fa8cdeec1123ecd3>: "SystemClock"
<replaced address fb36281f9aababce>: Builtins::ifElse:33
<replaced address ff0d74f37fd9abec>: { 0 arguments (capturing nothing) → ip-122 }

# Instructions
# Builtins::ifElse:1:case-0:matched, Core:result:is:1:case-0:matched, Core:check:check:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, anonymous:$generated::needs:isConditionTrue:then, Builtins::isNonNegative:13:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched
   0: pushConstant inline True
   1: popMultipleBelowTop 1
   2: return
# Core:iterator:withIndex:11:1:isMatch:then, Core:text:31:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:text:charFromAsciiCode:36:isMatch:then, Core:controlFlow:31:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core::155:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:result:also:16:case-0:didNotMatch, Core:struct:21:isMatch:then, Core:list:generate:51:1:isMatch:then, Examples:echo:then, Core:check:11:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:controlFlow:if:23, Core:list:42:isMatch:then, Core:tag:31:isMatch:then, Core:int:42:isMatch:then, Core::43:isMatch:then, Core::166:isMatch:then, Core::21:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isReasonText:then, Core:text:42:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:type:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:bool:11:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:controlFlow:52:isMatch:then, Core::32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core::104:isMatch:then, Core:function:21:isMatch:then, anonymous:$generated::needs:isConditionBool:then, Core:result:21:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:list:31:isMatch:then, Examples:echo:11:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:result:32:isMatch:then, Core:iterator:32:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:int:31:isMatch:then
   3: pushConstant inline Nothing
   4: popMultipleBelowTop 1
   5: return
# anonymous:$generated::needs:isConditionTrue:else
   6: pushFromStack 1
   7: dup by 1
   8: pushConstant inline builtinEquals
   9: pushConstant inline False
  10: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  11: pushFromStack 2
  12: pushFromStack 5
  13: pushFromStack 3
  14: pushFromStack 3
  15: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:isConditionBool:else
  16: pushFromStack 1
  17: dup by 1
  18: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
  19: pushFromStack 0
  20: pushFromStack 3
  21: panic
  22: popMultipleBelowTop 3
  23: return
# anonymous:$generated::needs:isReasonText:else
  24: pushFromStack 1
  25: dup by 1
  26: pushConstant <replaced address 36eebe9168aef0b0> "The `reason` must be a text."
  27: pushFromStack 0
  28: pushFromStack 3
  29: panic
  30: popMultipleBelowTop 3
  31: return
# anonymous:$generated::needs:condition:else
  32: pushFromStack 2
  33: dup by 1
  34: pushFromStack 1
  35: dup by 1
  36: pushFromStack 2
  37: pushFromStack 2
  38: panic
  39: popMultipleBelowTop 3
  40: return
# anonymous:$generated::needs
  41: pushFromStack 3
  42: dup by 2
  43: pushFromStack 2
  44: dup by 1
  45: pushFromStack 0
  46: dup by 2
  47: pushConstant inline builtinEquals
  48: pushConstant inline True
  49: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
  50: pushFromStack 2
  51: pushFromStack 7
  52: pushFromStack 3
  53: pushFromStack 3
  54: call with 2 arguments
  55: pushFromStack 7
  56: createFunction with 0 arguments capturing 0 starting at ip-6
  57: pushConstant inline builtinIfElse
  58: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
  59: pushFromStack 1
  60: pushFromStack 5
  61: pushFromStack 2
  62: pushFromStack 5
  63: pushFromStack 9
  64: call with 3 arguments
  65: pushFromStack 9
  66: createFunction with 0 arguments capturing 0 starting at ip-16
  67: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
  68: pushFromStack 5
  69: pushFromStack 4
  70: pushFromStack 2
  71: pushFromStack 4
  72: pushFromStack 13
  73: call with 3 arguments
  74: pushConstant inline builtinTypeOf
  75: pushFromStack 0
  76: pushFromStack 17
  77: pushFromStack 6
  78: call with 1 argument
  79: pushConstant inline Text
  80: pushFromStack 15
  81: pushFromStack 2
  82: pushFromStack 2
  83: pushFromStack 9
  84: call with 2 arguments
  85: pushFromStack 7
  86: createFunction with 0 arguments capturing 0 starting at ip-24
  87: pushFromStack 12
  88: pushFromStack 3
  89: pushFromStack 9
  90: pushFromStack 3
  91: pushFromStack 20
  92: call with 3 arguments
  93: pushFromStack 22
  94: pushFromStack 22
  95: createFunction with 0 arguments capturing 1, 0 starting at ip-32
  96: pushFromStack 10
  97: drop
  98: pushFromStack 3
  99: drop
 100: pushFromStack 16
 101: pushFromStack 19
 102: pushFromStack 13
 103: pushFromStack 3
 104: pushFromStack 24
 105: tailCall with 27 locals and 3 arguments
# Core:iterator:generateWithState:12:1:3:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:bool:lazyAnd:16:equals:then, Core:list:firstWhere:19:equals:then, Core:bool:is:1:equals:then, Core:iterator:where:17:2:3:equals:then, Core:bool:lazyOr:16:equals:then, Core:list:single:6:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:text:isAsciiDigit:14:equals:then, Core:list:first:6:equals:then, Builtins::not:1:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Builtins::ifElse:1:equals:then, Core:list:lastWhere:19:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Builtins::isNonNegative:13:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:bool:not:6:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Core:check:check:1:equals:then, Core:iterator:reduceLeft:16:equals:then
 106: pushConstant <replaced address 19beba0e7e49ddcc> Match ((,))
 107: popMultipleBelowTop 1
 108: return
# Builtins::isNonNegative:13:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:bool:is:1:equals:else, Core:fixedDecimal:105:equals:else, Core:int:pow:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core::21:equals:else, Core:text:42:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:list:42:equals:else, Core:iterator:where:17:2:3:equals:else, Core:bool:11:equals:else, Core:result:21:equals:else, Core::43:equals:else, Core:list:lastWhere:19:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:wrapSafe:14:1:equals:else, Core:text:charFromAsciiCode:36:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:int:pow:21:4:equals:else, Core:iterator:32:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:where:17:2:3:hasKey:else, Builtins::not:1:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:generate:51:1:hasKey:else, Core:iterator:take:27:1:hasKey:else, Core:fixedDecimal:54:equals:else, Core:result:32:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::ifElse:1:equals:else, Core:result:is:1:equals:else, Core:list:firstWhere:19:equals:else, Core::166:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:fixedDecimal:32:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:also:16:equals:else, Core:text:repeat:30:1:equals:else, Core:iterator:skip:26:6:8:3:equals:else, Core:bool:lazyAnd:16:equals:else, Core:iterator:21:equals:else, Core:iterator:skip:26:6:1:equals:else, Core::32:equals:else, Examples:echo:11:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core::104:equals:else, Core:iterator:next:6:equals:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:bool:not:6:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:withIndex:11:5:hasKey:else, Core:function:21:equals:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:31:equals:else, Core:iterator:take:27:1:equals:else, Core:list:generate:51:1:equals:else, Core:text:31:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:controlFlow:52:equals:else, Core:check:check:1:equals:else, Core:bool:lazyOr:16:equals:else, Core:int:31:equals:else, Core:list:single:6:equals:else, Core:fixedDecimal:43:equals:else, Core:list:first:6:equals:else, Core:fixedDecimal:21:equals:else, Core:int:pow:21:1:equals:else, Core:fixedDecimal:is:1:equals:else, Core::155:equals:else, Core:int:42:equals:else, Core:iterator:map:17:3:equals:else
 109: pushConstant inline NoMatch
 110: popMultipleBelowTop 1
 111: return
# Core:function:is1:10, Core:check:check:1:case-0:didNotMatch, Core:function:is2:10, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::ifElse:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, Core:function:is0:10, Core:function:is4:10, Builtins::isNonNegative:13:case-1:matched, Core:function:is5:10, Core:bool:is:1:case-0:didNotMatch, Core:bool:not:6:case-0:matched, Core:bool:lazyAnd:16:case-1:matched, Core:list:isValidIndex:19, Builtins::not:1:case-0:matched, Core:function:is3:10, Core:result:is:1:case-0:didNotMatch, Core:list:isValidInsertIndex:19
 112: pushConstant inline False
 113: popMultipleBelowTop 1
 114: return
# anonymous:$generated::needs:isConditionBool:else
 115: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 116: pushConstant <replaced address 9467827b874a1a94> Builtins::functionRun:5
 117: pushFromStack 1
 118: pushFromStack 1
 119: panic
 120: popMultipleBelowTop 3
 121: return
 122: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 123: pushConstant <replaced address b7bd58c88404a425> Builtins::functionRun:16
 124: pushFromStack 1
 125: pushFromStack 1
 126: panic
 127: popMultipleBelowTop 3
 128: return
# anonymous:$generated::needs:isConditionTrue:else
 129: pushFromStack 1
 130: dup by 1
 131: pushConstant inline builtinEquals
 132: pushConstant inline False
 133: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 134: pushFromStack 2
 135: pushFromStack 5
 136: pushFromStack 3
 137: pushFromStack 3
 138: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 139: pushFromStack 1
 140: dup by 1
 141: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 142: pushFromStack 0
 143: pushFromStack 3
 144: panic
 145: popMultipleBelowTop 3
 146: return
# anonymous:$generated::needs:isConditionTrue:else
 147: pushFromStack 1
 148: dup by 1
 149: pushConstant inline builtinEquals
 150: pushConstant inline False
 151: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 152: pushFromStack 2
 153: pushFromStack 5
 154: pushFromStack 3
 155: pushFromStack 3
 156: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 157: pushFromStack 1
 158: dup by 1
 159: pushConstant <replaced address f921b2be2e6a74f5> "`function | ✨.getArgumentCount | equals 0` was not satisfied"
 160: pushFromStack 0
 161: pushFromStack 3
 162: panic
 163: popMultipleBelowTop 3
 164: return
# Builtins::functionRun
 165: pushFromStack 1
 166: dup by 3
 167: pushFromStack 0
 168: dup by 4
 169: pushConstant inline builtinTypeOf
 170: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 171: pushFromStack 1
 172: pushFromStack 4
 173: pushFromStack 2
 174: call with 1 argument
 175: pushConstant inline builtinEquals
 176: pushConstant inline Function
 177: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 178: pushFromStack 2
 179: pushFromStack 4
 180: pushFromStack 3
 181: pushFromStack 3
 182: call with 2 arguments
 183: pushFromStack 0
 184: dup by 3
 185: pushConstant <replaced address 9467827b874a1a94> Builtins::functionRun:5
 186: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 187: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 188: pushFromStack 2
 189: pushFromStack 2
 190: pushFromStack 5
 191: pushFromStack 3
 192: pushFromStack 14
 193: pushFromStack 4
 194: traceCallStarts (3 arguments)
 195: pushConstant inline True
 196: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 197: pushFromStack 8
 198: pushFromStack 6
 199: pushFromStack 3
 200: pushFromStack 3
 201: call with 2 arguments
 202: pushFromStack 6
 203: createFunction with 0 arguments capturing 0 starting at ip-129
 204: pushConstant inline builtinIfElse
 205: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 206: pushFromStack 1
 207: pushFromStack 5
 208: pushFromStack 2
 209: pushFromStack 5
 210: pushFromStack 9
 211: call with 3 arguments
 212: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
 213: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
 214: pushFromStack 4
 215: pushFromStack 3
 216: pushFromStack 3
 217: pushFromStack 3
 218: pushFromStack 12
 219: call with 3 arguments
 220: pushFromStack 21
 221: createFunction with 0 arguments capturing 0 starting at ip-139
 222: pushFromStack 7
 223: pushFromStack 10
 224: pushFromStack 6
 225: pushFromStack 3
 226: pushFromStack 15
 227: call with 3 arguments
 228: traceCallEnds without return value
 229: pushConstant inline builtinGetArgumentCount
 230: pushConstant <replaced address 7d540cc672165a12> Builtins::functionRun:11
 231: pushFromStack 1
 232: pushFromStack 28
 233: pushFromStack 2
 234: call with 1 argument
 235: pushConstant inline 0
 236: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 237: pushFromStack 25
 238: pushFromStack 3
 239: pushFromStack 3
 240: pushFromStack 3
 241: call with 2 arguments
 242: pushFromStack 0
 243: dup by 3
 244: pushConstant <replaced address b7bd58c88404a425> Builtins::functionRun:16
 245: pushConstant <replaced address f921b2be2e6a74f5> "`function | ✨.getArgumentCount | equals 0` was not satisfied"
 246: pushFromStack 1
 247: pushFromStack 24
 248: pushFromStack 4
 249: pushFromStack 3
 250: pushFromStack 14
 251: pushFromStack 4
 252: traceCallStarts (3 arguments)
 253: pushFromStack 28
 254: pushFromStack 3
 255: pushFromStack 23
 256: pushFromStack 23
 257: call with 2 arguments
 258: pushFromStack 3
 259: createFunction with 0 arguments capturing 0 starting at ip-147
 260: pushFromStack 19
 261: pushFromStack 3
 262: pushFromStack 20
 263: pushFromStack 3
 264: pushFromStack 27
 265: call with 3 arguments
 266: pushConstant <replaced address ff0d74f37fd9abec> { 0 arguments (capturing nothing) → ip-122 }
 267: pushFromStack 21
 268: pushFromStack 2
 269: pushFromStack 20
 270: pushFromStack 3
 271: pushFromStack 29
 272: call with 3 arguments
 273: pushFromStack 16
 274: createFunction with 0 arguments capturing 0 starting at ip-157
 275: pushFromStack 24
 276: pushFromStack 7
 277: pushFromStack 23
 278: pushFromStack 3
 279: pushFromStack 32
 280: call with 3 arguments
 281: traceCallEnds without return value
 282: pushConstant <replaced address a0a9e3136ed0e3a3> Builtins::functionRun:22
 283: pushConstant inline builtinFunctionRun
 284: pushFromStack 1
 285: pushFromStack 1
 286: pushFromStack 46
 287: pushFromStack 2
 288: traceTailCall (1 argument)
 289: pushFromStack 22
 290: drop
 291: pushFromStack 19
 292: drop
 293: pushFromStack 5
 294: drop
 295: pushFromStack 2
 296: drop
 297: pushFromStack 44
 298: pushFromStack 2
 299: tailCall with 45 locals and 0 arguments
# anonymous:$generated::needs:isConditionBool:else
 300: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 301: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 302: pushFromStack 1
 303: pushFromStack 1
 304: panic
 305: popMultipleBelowTop 3
 306: return
# anonymous:$generated::needs:isConditionTrue:else
 307: pushFromStack 1
 308: dup by 1
 309: pushConstant inline builtinEquals
 310: pushConstant inline False
 311: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 312: pushFromStack 2
 313: pushFromStack 5
 314: pushFromStack 3
 315: pushFromStack 3
 316: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 317: pushFromStack 1
 318: dup by 1
 319: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 320: pushFromStack 0
 321: pushFromStack 3
 322: panic
 323: popMultipleBelowTop 3
 324: return
# Builtins::getArgumentCount
 325: pushFromStack 1
 326: dup by 1
 327: pushFromStack 0
 328: dup by 2
 329: pushConstant inline builtinTypeOf
 330: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 331: pushFromStack 1
 332: pushFromStack 4
 333: pushFromStack 2
 334: call with 1 argument
 335: pushConstant inline builtinEquals
 336: pushConstant inline Function
 337: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 338: pushFromStack 2
 339: pushFromStack 4
 340: pushFromStack 3
 341: pushFromStack 3
 342: call with 2 arguments
 343: pushFromStack 0
 344: dup by 3
 345: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 346: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 347: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 348: pushFromStack 2
 349: pushFromStack 2
 350: pushFromStack 5
 351: pushFromStack 3
 352: pushFromStack 14
 353: pushFromStack 4
 354: traceCallStarts (3 arguments)
 355: pushConstant inline True
 356: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 357: pushFromStack 8
 358: pushFromStack 6
 359: pushFromStack 3
 360: pushFromStack 3
 361: call with 2 arguments
 362: pushFromStack 6
 363: createFunction with 0 arguments capturing 0 starting at ip-307
 364: pushConstant inline builtinIfElse
 365: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 366: pushFromStack 1
 367: pushFromStack 5
 368: pushFromStack 2
 369: pushFromStack 5
 370: pushFromStack 9
 371: call with 3 arguments
 372: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
 373: pushConstant <replaced address 26b68cb565ecfdb2> { 0 arguments (capturing nothing) → ip-300 }
 374: pushFromStack 4
 375: pushFromStack 3
 376: pushFromStack 3
 377: pushFromStack 3
 378: pushFromStack 12
 379: call with 3 arguments
 380: pushFromStack 21
 381: createFunction with 0 arguments capturing 0 starting at ip-317
 382: pushFromStack 7
 383: pushFromStack 10
 384: pushFromStack 6
 385: pushFromStack 3
 386: pushFromStack 15
 387: call with 3 arguments
 388: traceCallEnds without return value
 389: pushConstant inline builtinGetArgumentCount
 390: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 391: pushFromStack 5
 392: drop
 393: pushFromStack 2
 394: drop
 395: pushFromStack 1
 396: pushFromStack 28
 397: pushFromStack 2
 398: tailCall with 28 locals and 1 argument
# anonymous:$generated::needs:isConditionBool:else
 399: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 400: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 401: pushFromStack 1
 402: pushFromStack 1
 403: panic
 404: popMultipleBelowTop 3
 405: return
 406: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 407: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 408: pushFromStack 1
 409: pushFromStack 1
 410: panic
 411: popMultipleBelowTop 3
 412: return
# anonymous:$generated::needs:condition:else
 413: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 414: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 415: pushFromStack 1
 416: pushFromStack 1
 417: panic
 418: popMultipleBelowTop 3
 419: return
# anonymous:$generated::needs:isConditionBool:else
 420: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 421: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 422: pushFromStack 1
 423: pushFromStack 1
 424: panic
 425: popMultipleBelowTop 3
 426: return
 427: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 428: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 429: pushFromStack 1
 430: pushFromStack 1
 431: panic
 432: popMultipleBelowTop 3
 433: return
# anonymous:$generated::needs:condition:else
 434: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 435: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 436: pushFromStack 1
 437: pushFromStack 1
 438: panic
 439: popMultipleBelowTop 3
 440: return
# anonymous:$generated::needs:isConditionBool:else
 441: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
 442: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 443: pushFromStack 1
 444: pushFromStack 1
 445: panic
 446: popMultipleBelowTop 3
 447: return
# Builtins::ifElse:1:isMatch:then
 448: pushFromStack 1
 449: dup by 1
 450: pushFromStack 1
 451: popMultipleBelowTop 2
 452: return
# Builtins::ifElse:1:isMatch:else
 453: pushFromStack 1
 454: dup by 1
 455: pushConstant inline builtinEquals
 456: pushConstant inline False
 457: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 458: pushFromStack 2
 459: pushFromStack 2
 460: pushFromStack 6
 461: pushFromStack 3
 462: call with 2 arguments
 463: pushConstant inline builtinIfElse
 464: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 465: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 466: pushFromStack 2
 467: pushFromStack 4
 468: pushFromStack 3
 469: pushFromStack 3
 470: pushFromStack 8
 471: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
 472: pushFromStack 1
 473: dup by 1
 474: pushConstant inline builtinEquals
 475: pushConstant inline False
 476: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 477: pushFromStack 2
 478: pushFromStack 5
 479: pushFromStack 3
 480: pushFromStack 3
 481: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 482: pushFromStack 1
 483: dup by 1
 484: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 485: pushFromStack 0
 486: pushFromStack 3
 487: panic
 488: popMultipleBelowTop 3
 489: return
# anonymous:$generated::needs:isConditionTrue:else
 490: pushFromStack 1
 491: dup by 1
 492: pushConstant inline builtinEquals
 493: pushConstant inline False
 494: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 495: pushFromStack 2
 496: pushFromStack 5
 497: pushFromStack 3
 498: pushFromStack 3
 499: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 500: pushFromStack 1
 501: dup by 1
 502: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 503: pushFromStack 0
 504: pushFromStack 3
 505: panic
 506: popMultipleBelowTop 3
 507: return
# anonymous:$generated::needs:isConditionTrue:else
 508: pushFromStack 1
 509: dup by 1
 510: pushConstant inline builtinEquals
 511: pushConstant inline False
 512: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 513: pushFromStack 2
 514: pushFromStack 5
 515: pushFromStack 3
 516: pushFromStack 3
 517: tailCall with 5 locals and 2 arguments
 518: pushFromStack 1
 519: dup by 1
 520: pushConstant inline builtinEquals
 521: pushConstant inline False
 522: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 523: pushFromStack 2
 524: pushFromStack 5
 525: pushFromStack 3
 526: pushFromStack 3
 527: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 528: pushFromStack 1
 529: dup by 1
 530: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 531: pushFromStack 0
 532: pushFromStack 3
 533: panic
 534: popMultipleBelowTop 3
 535: return
# anonymous:$generated::needs:isConditionTrue:else
 536: pushFromStack 1
 537: dup by 1
 538: pushConstant inline builtinEquals
 539: pushConstant inline False
 540: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 541: pushFromStack 2
 542: pushFromStack 5
 543: pushFromStack 3
 544: pushFromStack 3
 545: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 546: pushFromStack 1
 547: dup by 1
 548: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 549: pushFromStack 0
 550: pushFromStack 3
 551: panic
 552: popMultipleBelowTop 3
 553: return
# anonymous:$generated::needs:isConditionTrue:else
 554: pushFromStack 1
 555: dup by 1
 556: pushConstant inline builtinEquals
 557: pushConstant inline False
 558: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 559: pushFromStack 2
 560: pushFromStack 5
 561: pushFromStack 3
 562: pushFromStack 3
 563: tailCall with 5 locals and 2 arguments
 564: pushFromStack 1
 565: dup by 1
 566: pushConstant inline builtinEquals
 567: pushConstant inline False
 568: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 569: pushFromStack 2
 570: pushFromStack 5
 571: pushFromStack 3
 572: pushFromStack 3
 573: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
 574: pushFromStack 1
 575: dup by 1
 576: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 577: pushFromStack 0
 578: pushFromStack 3
 579: panic
 580: popMultipleBelowTop 3
 581: return
# Builtins::ifElse
 582: pushFromStack 3
 583: dup by 3
 584: pushFromStack 2
 585: dup by 4
 586: pushFromStack 1
 587: dup by 4
 588: pushFromStack 0
 589: dup by 10
 590: pushConstant inline builtinEquals
 591: pushConstant inline True
 592: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
 593: pushFromStack 2
 594: pushFromStack 2
 595: pushFromStack 8
 596: pushFromStack 3
 597: call with 2 arguments
 598: pushConstant inline builtinIfElse
 599: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
 600: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
 601: pushFromStack 2
 602: pushFromStack 4
 603: pushFromStack 3
 604: pushFromStack 3
 605: pushFromStack 8
 606: call with 3 arguments
 607: pushFromStack 0
 608: dup by 1
 609: pushConstant inline builtinTagWithoutValue
 610: pushFromStack 0
 611: pushFromStack 2
 612: pushFromStack 8
 613: call with 1 argument
 614: pushConstant inline Match
 615: pushFromStack 10
 616: pushFromStack 2
 617: pushFromStack 2
 618: pushFromStack 11
 619: call with 2 arguments
 620: pushFromStack 4
 621: createFunction with 0 arguments capturing 0 starting at ip-448
 622: pushFromStack 17
 623: createFunction with 0 arguments capturing 0 starting at ip-453
 624: pushFromStack 11
 625: pushFromStack 5
 626: pushFromStack 4
 627: pushFromStack 3
 628: pushFromStack 17
 629: call with 3 arguments
 630: pushFromStack 8
 631: pushFromStack 1
 632: pushFromStack 16
 633: call with 1 argument
 634: pushFromStack 17
 635: pushFromStack 1
 636: pushFromStack 9
 637: pushFromStack 18
 638: call with 2 arguments
 639: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
 640: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
 641: pushFromStack 16
 642: pushFromStack 3
 643: pushFromStack 3
 644: pushFromStack 3
 645: pushFromStack 22
 646: call with 3 arguments
 647: pushFromStack 0
 648: dup by 3
 649: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
 650: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
 651: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
 652: pushFromStack 2
 653: pushFromStack 2
 654: pushFromStack 5
 655: pushFromStack 3
 656: pushFromStack 29
 657: pushFromStack 4
 658: traceCallStarts (3 arguments)
 659: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
 660: pushFromStack 25
 661: pushFromStack 5
 662: pushFromStack 26
 663: pushFromStack 3
 664: call with 2 arguments
 665: pushFromStack 5
 666: createFunction with 0 arguments capturing 0 starting at ip-472
 667: pushFromStack 24
 668: pushFromStack 3
 669: pushFromStack 11
 670: pushFromStack 3
 671: pushFromStack 7
 672: call with 3 arguments
 673: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
 674: pushConstant <replaced address 64026faceb8eeafd> { 0 arguments (capturing nothing) → ip-399 }
 675: pushFromStack 27
 676: pushFromStack 3
 677: pushFromStack 3
 678: pushFromStack 3
 679: pushFromStack 10
 680: call with 3 arguments
 681: pushFromStack 33
 682: createFunction with 0 arguments capturing 0 starting at ip-482
 683: pushFromStack 30
 684: pushFromStack 8
 685: pushFromStack 6
 686: pushFromStack 3
 687: pushFromStack 13
 688: call with 3 arguments
 689: traceCallEnds without return value
 690: pushConstant inline builtinTypeOf
 691: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
 692: pushFromStack 1
 693: pushFromStack 41
 694: pushFromStack 2
 695: call with 1 argument
 696: pushFromStack 0
 697: dup by 1
 698: pushConstant inline Function
 699: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
 700: pushFromStack 40
 701: pushFromStack 3
 702: pushFromStack 3
 703: pushFromStack 3
 704: call with 2 arguments
 705: pushFromStack 0
 706: dup by 3
 707: pushConstant <replaced address 13bae94f69b93dec> Builtins::ifElse:11
 708: pushConstant <replaced address 07c1052bec280409> "`then | typeIs Function` was not satisfied"
 709: pushFromStack 1
 710: pushFromStack 21
 711: pushFromStack 4
 712: pushFromStack 3
 713: pushFromStack 14
 714: pushFromStack 4
 715: traceCallStarts (3 arguments)
 716: pushFromStack 43
 717: pushFromStack 3
 718: pushFromStack 44
 719: pushFromStack 21
 720: call with 2 arguments
 721: pushFromStack 3
 722: createFunction with 0 arguments capturing 0 starting at ip-490
 723: pushFromStack 42
 724: pushFromStack 3
 725: pushFromStack 29
 726: pushFromStack 3
 727: pushFromStack 25
 728: call with 3 arguments
 729: pushConstant <replaced address 9e6bbbaefd7d3510> { 0 arguments (capturing nothing) → ip-406 }
 730: pushFromStack 44
 731: pushFromStack 2
 732: pushFromStack 20
 733: pushFromStack 3
 734: pushFromStack 27
 735: call with 3 arguments
 736: pushFromStack 16
 737: createFunction with 0 arguments capturing 0 starting at ip-500
 738: pushFromStack 47
 739: pushFromStack 7
 740: pushFromStack 23
 741: pushFromStack 3
 742: pushFromStack 30
 743: call with 3 arguments
 744: traceCallEnds without return value
 745: pushConstant <replaced address 1f44a429f4531e2d> Builtins::ifElse:14
 746: pushConstant <replaced address f6b013ac281ed159> { 1 argument (capturing nothing) → ip-325 }
 747: pushFromStack 1
 748: pushFromStack 1
 749: pushFromStack 59
 750: pushFromStack 2
 751: traceCallStarts (1 argument)
 752: pushFromStack 54
 753: pushFromStack 17
 754: pushFromStack 17
 755: pushFromStack 17
 756: call with 2 arguments
 757: pushFromStack 0
 758: dup by 3
 759: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
 760: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
 761: pushFromStack 1
 762: pushFromStack 35
 763: pushFromStack 4
 764: pushFromStack 3
 765: pushFromStack 8
 766: pushFromStack 4
 767: traceCallStarts (3 arguments)
 768: pushFromStack 57
 769: pushFromStack 3
 770: pushFromStack 58
 771: pushFromStack 35
 772: call with 2 arguments
 773: pushFromStack 3
 774: createFunction with 0 arguments capturing 0 starting at ip-508
 775: pushFromStack 56
 776: pushFromStack 3
 777: pushFromStack 43
 778: pushFromStack 3
 779: pushFromStack 39
 780: call with 3 arguments
 781: pushConstant <replaced address 26b68cb565ecfdb2> { 0 arguments (capturing nothing) → ip-300 }
 782: pushFromStack 58
 783: pushFromStack 2
 784: pushFromStack 34
 785: pushFromStack 3
 786: pushFromStack 41
 787: call with 3 arguments
 788: pushConstant <replaced address 1ec80e8dabf3a977> { 0 arguments (capturing nothing) → ip-413 }
 789: pushFromStack 60
 790: pushFromStack 6
 791: pushFromStack 36
 792: pushFromStack 3
 793: pushFromStack 43
 794: call with 3 arguments
 795: traceCallEnds without return value
 796: pushConstant inline builtinGetArgumentCount
 797: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
 798: pushFromStack 1
 799: pushFromStack 71
 800: pushFromStack 2
 801: call with 1 argument
 802: traceCallEnds without return value
 803: pushConstant inline 0
 804: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
 805: pushFromStack 70
 806: pushFromStack 3
 807: pushFromStack 3
 808: pushFromStack 3
 809: call with 2 arguments
 810: pushFromStack 0
 811: dup by 3
 812: pushConstant <replaced address 7008c023be883ff4> Builtins::ifElse:19
 813: pushConstant <replaced address 4672d383c7509a9f> "`then | getArgumentCount | equals 0` was not satisfied"
 814: pushFromStack 1
 815: pushFromStack 51
 816: pushFromStack 4
 817: pushFromStack 3
 818: pushFromStack 27
 819: pushFromStack 4
 820: traceCallStarts (3 arguments)
 821: pushFromStack 73
 822: pushFromStack 3
 823: pushFromStack 74
 824: pushFromStack 51
 825: call with 2 arguments
 826: pushFromStack 3
 827: createFunction with 0 arguments capturing 0 starting at ip-518
 828: pushFromStack 72
 829: pushFromStack 3
 830: pushFromStack 59
 831: pushFromStack 3
 832: pushFromStack 55
 833: call with 3 arguments
 834: pushConstant <replaced address 59315a8fbde1f38a> { 0 arguments (capturing nothing) → ip-420 }
 835: pushFromStack 74
 836: pushFromStack 2
 837: pushFromStack 50
 838: pushFromStack 3
 839: pushFromStack 57
 840: call with 3 arguments
 841: pushFromStack 29
 842: createFunction with 0 arguments capturing 0 starting at ip-528
 843: pushFromStack 77
 844: pushFromStack 7
 845: pushFromStack 53
 846: pushFromStack 3
 847: pushFromStack 60
 848: call with 3 arguments
 849: traceCallEnds without return value
 850: pushFromStack 46
 851: pushFromStack 85
 852: pushFromStack 47
 853: call with 1 argument
 854: pushFromStack 0
 855: dup by 1
 856: pushFromStack 83
 857: pushFromStack 1
 858: pushFromStack 46
 859: pushFromStack 46
 860: call with 2 arguments
 861: pushFromStack 0
 862: dup by 3
 863: pushConstant <replaced address 9ee8514b45dca9c6> Builtins::ifElse:25
 864: pushConstant <replaced address 9a411ed2de02bbfd> "`else | typeIs Function` was not satisfied"
 865: pushFromStack 1
 866: pushFromStack 64
 867: pushFromStack 4
 868: pushFromStack 3
 869: pushFromStack 10
 870: pushFromStack 4
 871: traceCallStarts (3 arguments)
 872: pushFromStack 86
 873: pushFromStack 3
 874: pushFromStack 87
 875: pushFromStack 64
 876: call with 2 arguments
 877: pushFromStack 3
 878: createFunction with 0 arguments capturing 0 starting at ip-536
 879: pushFromStack 85
 880: pushFromStack 3
 881: pushFromStack 72
 882: pushFromStack 3
 883: pushFromStack 68
 884: call with 3 arguments
 885: pushConstant <replaced address d98dad6e6c5867f1> { 0 arguments (capturing nothing) → ip-427 }
 886: pushFromStack 87
 887: pushFromStack 2
 888: pushFromStack 63
 889: pushFromStack 3
 890: pushFromStack 70
 891: call with 3 arguments
 892: pushFromStack 12
 893: createFunction with 0 arguments capturing 0 starting at ip-546
 894: pushFromStack 90
 895: pushFromStack 7
 896: pushFromStack 66
 897: pushFromStack 3
 898: pushFromStack 73
 899: call with 3 arguments
 900: traceCallEnds without return value
 901: pushConstant <replaced address aa720c25d0768a07> Builtins::ifElse:28
 902: pushFromStack 0
 903: pushFromStack 43
 904: pushFromStack 100
 905: pushFromStack 2
 906: traceCallStarts (1 argument)
 907: pushFromStack 96
 908: pushFromStack 14
 909: pushFromStack 59
 910: pushFromStack 59
 911: call with 2 arguments
 912: pushFromStack 0
 913: dup by 3
 914: pushFromStack 41
 915: pushFromStack 75
 916: pushFromStack 2
 917: pushFromStack 43
 918: pushFromStack 5
 919: pushFromStack 4
 920: traceCallStarts (3 arguments)
 921: pushFromStack 97
 922: pushFromStack 1
 923: pushFromStack 98
 924: pushFromStack 75
 925: call with 2 arguments
 926: pushFromStack 1
 927: createFunction with 0 arguments capturing 0 starting at ip-554
 928: pushFromStack 96
 929: pushFromStack 3
 930: pushFromStack 83
 931: pushFromStack 3
 932: pushFromStack 79
 933: call with 3 arguments
 934: pushFromStack 97
 935: pushFromStack 1
 936: pushFromStack 73
 937: pushFromStack 42
 938: pushFromStack 80
 939: call with 3 arguments
 940: pushConstant <replaced address 13f6f9707e46b204> { 0 arguments (capturing nothing) → ip-434 }
 941: pushFromStack 99
 942: pushFromStack 5
 943: pushFromStack 75
 944: pushFromStack 3
 945: pushFromStack 82
 946: call with 3 arguments
 947: traceCallEnds without return value
 948: pushFromStack 38
 949: pushFromStack 107
 950: pushFromStack 39
 951: call with 1 argument
 952: traceCallEnds without return value
 953: pushFromStack 105
 954: pushFromStack 1
 955: pushFromStack 38
 956: pushFromStack 38
 957: call with 2 arguments
 958: pushFromStack 0
 959: dup by 3
 960: pushConstant <replaced address fb36281f9aababce> Builtins::ifElse:33
 961: pushConstant <replaced address 957eb8ad35ecdba0> "`else | getArgumentCount | equals 0` was not satisfied"
 962: pushFromStack 1
 963: pushFromStack 86
 964: pushFromStack 4
 965: pushFromStack 3
 966: pushFromStack 19
 967: pushFromStack 4
 968: traceCallStarts (3 arguments)
 969: pushFromStack 108
 970: pushFromStack 3
 971: pushFromStack 109
 972: pushFromStack 86
 973: call with 2 arguments
 974: pushFromStack 3
 975: createFunction with 0 arguments capturing 0 starting at ip-564
 976: pushFromStack 107
 977: pushFromStack 3
 978: pushFromStack 94
 979: pushFromStack 3
 980: pushFromStack 90
 981: call with 3 arguments
 982: pushConstant <replaced address 94534c4f2cbd266b> { 0 arguments (capturing nothing) → ip-441 }
 983: pushFromStack 109
 984: pushFromStack 2
 985: pushFromStack 85
 986: pushFromStack 3
 987: pushFromStack 92
 988: call with 3 arguments
 989: pushFromStack 21
 990: createFunction with 0 arguments capturing 0 starting at ip-574
 991: pushFromStack 112
 992: pushFromStack 7
 993: pushFromStack 88
 994: pushFromStack 3
 995: pushFromStack 95
 996: call with 3 arguments
 997: traceCallEnds without return value
 998: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
 999: pushFromStack 0
1000: pushFromStack 115
1001: pushFromStack 106
1002: pushFromStack 124
1003: pushFromStack 124
1004: pushFromStack 4
1005: traceTailCall (3 arguments)
1006: pushFromStack 86
1007: drop
1008: pushFromStack 83
1009: drop
1010: pushFromStack 69
1011: drop
1012: pushFromStack 66
1013: drop
1014: pushFromStack 55
1015: drop
1016: pushFromStack 53
1017: drop
1018: pushFromStack 39
1019: drop
1020: pushFromStack 36
1021: drop
1022: pushFromStack 26
1023: drop
1024: pushFromStack 23
1025: drop
1026: pushFromStack 16
1027: drop
1028: pushFromStack 14
1029: drop
1030: pushFromStack 4
1031: drop
1032: pushFromStack 1
1033: drop
1034: pushFromStack 114
1035: pushFromStack 105
1036: pushFromStack 123
1037: pushFromStack 123
1038: pushFromStack 4
1039: tailCall with 123 locals and 3 arguments
# anonymous:$generated::needs:isConditionBool:else
1040: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1041: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
1042: pushFromStack 1
1043: pushFromStack 1
1044: panic
1045: popMultipleBelowTop 3
1046: return
1047: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1048: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
1049: pushFromStack 1
1050: pushFromStack 1
1051: panic
1052: popMultipleBelowTop 3
1053: return
# anonymous:$generated::needs:isConditionTrue:else
1054: pushFromStack 1
1055: dup by 1
1056: pushConstant inline builtinEquals
1057: pushConstant inline False
1058: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1059: pushFromStack 2
1060: pushFromStack 5
1061: pushFromStack 3
1062: pushFromStack 3
1063: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1064: pushFromStack 1
1065: dup by 1
1066: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
1067: pushFromStack 0
1068: pushFromStack 3
1069: panic
1070: popMultipleBelowTop 3
1071: return
# anonymous:$generated::needs:isConditionTrue:else
1072: pushFromStack 1
1073: dup by 1
1074: pushConstant inline builtinEquals
1075: pushConstant inline False
1076: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1077: pushFromStack 2
1078: pushFromStack 5
1079: pushFromStack 3
1080: pushFromStack 3
1081: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1082: pushFromStack 1
1083: dup by 1
1084: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
1085: pushFromStack 0
1086: pushFromStack 3
1087: panic
1088: popMultipleBelowTop 3
1089: return
# Builtins::structGet
1090: pushFromStack 2
1091: dup by 2
1092: pushFromStack 1
1093: dup by 1
1094: pushFromStack 0
1095: dup by 4
1096: pushConstant inline builtinTypeOf
1097: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1098: pushFromStack 1
1099: pushFromStack 5
1100: pushFromStack 2
1101: call with 1 argument
1102: pushConstant inline builtinEquals
1103: pushConstant inline Struct
1104: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1105: pushFromStack 2
1106: pushFromStack 4
1107: pushFromStack 3
1108: pushFromStack 3
1109: call with 2 arguments
1110: pushFromStack 0
1111: dup by 3
1112: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
1113: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1114: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
1115: pushFromStack 2
1116: pushFromStack 2
1117: pushFromStack 5
1118: pushFromStack 3
1119: pushFromStack 14
1120: pushFromStack 4
1121: traceCallStarts (3 arguments)
1122: pushConstant inline True
1123: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1124: pushFromStack 8
1125: pushFromStack 6
1126: pushFromStack 3
1127: pushFromStack 3
1128: call with 2 arguments
1129: pushFromStack 6
1130: createFunction with 0 arguments capturing 0 starting at ip-1054
1131: pushConstant inline builtinIfElse
1132: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1133: pushFromStack 1
1134: pushFromStack 5
1135: pushFromStack 2
1136: pushFromStack 5
1137: pushFromStack 9
1138: call with 3 arguments
1139: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1140: pushConstant <replaced address 52b244f0f1246b0e> { 0 arguments (capturing nothing) → ip-1040 }
1141: pushFromStack 4
1142: pushFromStack 3
1143: pushFromStack 3
1144: pushFromStack 3
1145: pushFromStack 12
1146: call with 3 arguments
1147: pushFromStack 21
1148: createFunction with 0 arguments capturing 0 starting at ip-1064
1149: pushFromStack 7
1150: pushFromStack 10
1151: pushFromStack 6
1152: pushFromStack 3
1153: pushFromStack 15
1154: call with 3 arguments
1155: traceCallEnds without return value
1156: pushConstant inline builtinStructHasKey
1157: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
1158: pushFromStack 1
1159: pushFromStack 29
1160: pushFromStack 29
1161: pushFromStack 3
1162: call with 2 arguments
1163: pushFromStack 0
1164: dup by 3
1165: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
1166: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
1167: pushFromStack 1
1168: pushFromStack 21
1169: pushFromStack 4
1170: pushFromStack 3
1171: pushFromStack 11
1172: pushFromStack 4
1173: traceCallStarts (3 arguments)
1174: pushFromStack 25
1175: pushFromStack 3
1176: pushFromStack 20
1177: pushFromStack 20
1178: call with 2 arguments
1179: pushFromStack 3
1180: createFunction with 0 arguments capturing 0 starting at ip-1072
1181: pushFromStack 16
1182: pushFromStack 3
1183: pushFromStack 17
1184: pushFromStack 3
1185: pushFromStack 24
1186: call with 3 arguments
1187: pushConstant <replaced address bb427c5d2d7a3625> { 0 arguments (capturing nothing) → ip-1047 }
1188: pushFromStack 18
1189: pushFromStack 2
1190: pushFromStack 17
1191: pushFromStack 3
1192: pushFromStack 26
1193: call with 3 arguments
1194: pushFromStack 13
1195: createFunction with 0 arguments capturing 0 starting at ip-1082
1196: pushFromStack 21
1197: pushFromStack 7
1198: pushFromStack 20
1199: pushFromStack 3
1200: pushFromStack 29
1201: call with 3 arguments
1202: traceCallEnds without return value
1203: pushConstant inline builtinStructGet
1204: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
1205: pushFromStack 19
1206: drop
1207: pushFromStack 16
1208: drop
1209: pushFromStack 5
1210: drop
1211: pushFromStack 2
1212: drop
1213: pushFromStack 1
1214: pushFromStack 43
1215: pushFromStack 43
1216: pushFromStack 3
1217: tailCall with 43 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1218: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1219: pushConstant <replaced address 67e46f1286cabf9b> Core:function:is0:9:3
1220: pushFromStack 1
1221: pushFromStack 1
1222: panic
1223: popMultipleBelowTop 3
1224: return
1225: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
1226: pushConstant <replaced address 572a3664aca7a63d> Core:function:is0:11
1227: pushFromStack 1
1228: pushFromStack 1
1229: panic
1230: popMultipleBelowTop 3
1231: return
# anonymous:$generated::needs:isConditionTrue:else
1232: pushFromStack 1
1233: dup by 1
1234: pushConstant inline builtinEquals
1235: pushConstant inline False
1236: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1237: pushFromStack 2
1238: pushFromStack 5
1239: pushFromStack 3
1240: pushFromStack 3
1241: tailCall with 5 locals and 2 arguments
# Core:function:is0:9
1242: pushFromStack 1
1243: dup by 3
1244: pushConstant <replaced address 67e46f1286cabf9b> Core:function:is0:9:3
1245: pushConstant <replaced address f6b013ac281ed159> { 1 argument (capturing nothing) → ip-325 }
1246: pushFromStack 1
1247: pushFromStack 1
1248: pushFromStack 5
1249: pushFromStack 2
1250: traceCallStarts (1 argument)
1251: pushConstant inline builtinTypeOf
1252: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1253: pushFromStack 1
1254: pushFromStack 6
1255: pushFromStack 2
1256: call with 1 argument
1257: pushConstant inline builtinEquals
1258: pushConstant inline Function
1259: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1260: pushFromStack 2
1261: pushFromStack 4
1262: pushFromStack 3
1263: pushFromStack 3
1264: call with 2 arguments
1265: pushFromStack 0
1266: dup by 3
1267: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
1268: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1269: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1270: pushFromStack 2
1271: pushFromStack 2
1272: pushFromStack 5
1273: pushFromStack 3
1274: pushFromStack 15
1275: pushFromStack 4
1276: traceCallStarts (3 arguments)
1277: pushConstant inline True
1278: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1279: pushFromStack 8
1280: pushFromStack 6
1281: pushFromStack 3
1282: pushFromStack 3
1283: call with 2 arguments
1284: pushFromStack 6
1285: createFunction with 0 arguments capturing 0 starting at ip-1232
1286: pushConstant inline builtinIfElse
1287: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1288: pushFromStack 1
1289: pushFromStack 5
1290: pushFromStack 2
1291: pushFromStack 5
1292: pushFromStack 9
1293: call with 3 arguments
1294: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1295: pushConstant <replaced address 26b68cb565ecfdb2> { 0 arguments (capturing nothing) → ip-300 }
1296: pushFromStack 4
1297: pushFromStack 3
1298: pushFromStack 3
1299: pushFromStack 3
1300: pushFromStack 12
1301: call with 3 arguments
1302: pushConstant <replaced address f71d13d9f94251d4> { 0 arguments (capturing nothing) → ip-1218 }
1303: pushFromStack 6
1304: pushFromStack 9
1305: pushFromStack 5
1306: pushFromStack 3
1307: pushFromStack 14
1308: call with 3 arguments
1309: traceCallEnds without return value
1310: pushConstant inline builtinGetArgumentCount
1311: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
1312: pushFromStack 1
1313: pushFromStack 29
1314: pushFromStack 2
1315: call with 1 argument
1316: traceCallEnds without return value
1317: pushConstant inline 0
1318: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1319: pushFromStack 7
1320: drop
1321: pushFromStack 5
1322: drop
1323: pushFromStack 24
1324: pushFromStack 3
1325: pushFromStack 3
1326: pushFromStack 3
1327: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
1328: pushFromStack 1
1329: dup by 1
1330: pushFromStack 1
1331: popMultipleBelowTop 2
1332: return
# Builtins::ifElse:1:isMatch:else
1333: pushFromStack 1
1334: dup by 1
1335: pushConstant inline builtinEquals
1336: pushConstant inline False
1337: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
1338: pushFromStack 2
1339: pushFromStack 2
1340: pushFromStack 6
1341: pushFromStack 3
1342: call with 2 arguments
1343: pushConstant inline builtinIfElse
1344: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
1345: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1346: pushFromStack 2
1347: pushFromStack 4
1348: pushFromStack 3
1349: pushFromStack 3
1350: pushFromStack 8
1351: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
1352: pushFromStack 1
1353: dup by 1
1354: pushConstant inline builtinEquals
1355: pushConstant inline False
1356: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1357: pushFromStack 2
1358: pushFromStack 5
1359: pushFromStack 3
1360: pushFromStack 3
1361: tailCall with 5 locals and 2 arguments
# Core:function:is0
1362: pushFromStack 1
1363: dup by 1
1364: pushConstant inline builtinTypeOf
1365: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
1366: pushFromStack 1
1367: pushFromStack 4
1368: pushFromStack 2
1369: call with 1 argument
1370: pushConstant inline builtinEquals
1371: pushConstant inline Function
1372: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1373: pushFromStack 2
1374: pushFromStack 4
1375: pushFromStack 3
1376: pushFromStack 3
1377: call with 2 arguments
1378: pushFromStack 0
1379: dup by 4
1380: pushFromStack 8
1381: createFunction with 0 arguments capturing 0 starting at ip-1242
1382: pushFromStack 0
1383: dup by 2
1384: pushConstant <replaced address 572a3664aca7a63d> Core:function:is0:11
1385: pushConstant <replaced address 12f34f1ed9c50d82> { 3 arguments (capturing nothing) → ip-582 }
1386: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
1387: pushFromStack 2
1388: pushFromStack 2
1389: pushFromStack 7
1390: pushFromStack 6
1391: pushFromStack 4
1392: pushFromStack 4
1393: traceCallStarts (3 arguments)
1394: pushConstant inline True
1395: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
1396: pushFromStack 10
1397: pushFromStack 2
1398: pushFromStack 9
1399: pushFromStack 3
1400: call with 2 arguments
1401: pushConstant inline builtinIfElse
1402: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
1403: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1404: pushFromStack 2
1405: pushFromStack 4
1406: pushFromStack 3
1407: pushFromStack 3
1408: pushFromStack 8
1409: call with 3 arguments
1410: pushFromStack 0
1411: dup by 1
1412: pushConstant inline builtinTagWithoutValue
1413: pushFromStack 0
1414: pushFromStack 2
1415: pushFromStack 8
1416: call with 1 argument
1417: pushConstant inline Match
1418: pushFromStack 18
1419: pushFromStack 2
1420: pushFromStack 2
1421: pushFromStack 11
1422: call with 2 arguments
1423: pushFromStack 4
1424: createFunction with 0 arguments capturing 0 starting at ip-1328
1425: pushFromStack 18
1426: createFunction with 0 arguments capturing 0 starting at ip-1333
1427: pushFromStack 11
1428: pushFromStack 5
1429: pushFromStack 4
1430: pushFromStack 3
1431: pushFromStack 17
1432: call with 3 arguments
1433: pushFromStack 8
1434: pushFromStack 1
1435: pushFromStack 16
1436: call with 1 argument
1437: pushFromStack 25
1438: pushFromStack 1
1439: pushFromStack 9
1440: pushFromStack 18
1441: call with 2 arguments
1442: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1443: pushFromStack 15
1444: pushFromStack 2
1445: pushFromStack 2
1446: pushFromStack 22
1447: pushFromStack 21
1448: call with 3 arguments
1449: pushFromStack 0
1450: dup by 3
1451: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
1452: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1453: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
1454: pushFromStack 2
1455: pushFromStack 2
1456: pushFromStack 5
1457: pushFromStack 3
1458: pushFromStack 29
1459: pushFromStack 4
1460: traceCallStarts (3 arguments)
1461: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1462: pushFromStack 32
1463: pushFromStack 5
1464: pushFromStack 25
1465: pushFromStack 3
1466: call with 2 arguments
1467: pushFromStack 5
1468: createFunction with 0 arguments capturing 0 starting at ip-1352
1469: pushFromStack 23
1470: pushFromStack 3
1471: pushFromStack 10
1472: pushFromStack 3
1473: pushFromStack 7
1474: call with 3 arguments
1475: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1476: pushConstant <replaced address 64026faceb8eeafd> { 0 arguments (capturing nothing) → ip-399 }
1477: pushFromStack 26
1478: pushFromStack 3
1479: pushFromStack 3
1480: pushFromStack 3
1481: pushFromStack 10
1482: call with 3 arguments
1483: pushConstant <replaced address 777966b8a7b8c63b> { 0 arguments (capturing nothing) → ip-1225 }
1484: pushFromStack 28
1485: pushFromStack 7
1486: pushFromStack 5
1487: pushFromStack 3
1488: pushFromStack 12
1489: call with 3 arguments
1490: traceCallEnds without return value
1491: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
1492: pushFromStack 0
1493: pushFromStack 31
1494: pushFromStack 22
1495: pushFromStack 40
1496: pushFromStack 38
1497: pushFromStack 4
1498: traceCallStarts (3 arguments)
1499: pushFromStack 30
1500: pushFromStack 21
1501: pushFromStack 39
1502: pushFromStack 37
1503: pushFromStack 4
1504: call with 3 arguments
1505: traceCallEnds without return value
1506: traceCallEnds without return value
1507: pushFromStack 4
1508: drop
1509: pushFromStack 2
1510: drop
1511: pushFromStack 0
1512: popMultipleBelowTop 49
1513: return
# anonymous:$generated::needs:isConditionBool:else
1514: pushConstant <replaced address 91ccd4b75c545de9> "The `condition` must be either `True` or `False`."
1515: pushConstant <replaced address f25a4b0499a74049> Core:function:run:4
1516: pushFromStack 1
1517: pushFromStack 1
1518: panic
1519: popMultipleBelowTop 3
1520: return
# anonymous:$generated::needs:condition:else
1521: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1522: pushConstant <replaced address 7e4058bdd2b794f1> Core:function:run:12
1523: pushFromStack 1
1524: pushFromStack 1
1525: panic
1526: popMultipleBelowTop 3
1527: return
1528: pushConstant <replaced address f921b2be2e6a74f5> "`function | ✨.getArgumentCount | equals 0` was not satisfied"
1529: pushConstant <replaced address 7e4058bdd2b794f1> Core:function:run:12
1530: pushFromStack 1
1531: pushFromStack 1
1532: panic
1533: popMultipleBelowTop 3
1534: return
# anonymous:$generated::needs:isConditionTrue:else
1535: pushFromStack 1
1536: dup by 1
1537: pushConstant inline builtinEquals
1538: pushConstant inline False
1539: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1540: pushFromStack 2
1541: pushFromStack 5
1542: pushFromStack 3
1543: pushFromStack 3
1544: tailCall with 5 locals and 2 arguments
# Core:function:is0:9
1545: pushFromStack 1
1546: dup by 3
1547: pushConstant <replaced address 67e46f1286cabf9b> Core:function:is0:9:3
1548: pushConstant <replaced address f6b013ac281ed159> { 1 argument (capturing nothing) → ip-325 }
1549: pushFromStack 1
1550: pushFromStack 1
1551: pushFromStack 5
1552: pushFromStack 2
1553: traceCallStarts (1 argument)
1554: pushConstant inline builtinTypeOf
1555: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1556: pushFromStack 1
1557: pushFromStack 6
1558: pushFromStack 2
1559: call with 1 argument
1560: pushConstant inline builtinEquals
1561: pushConstant inline Function
1562: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1563: pushFromStack 2
1564: pushFromStack 4
1565: pushFromStack 3
1566: pushFromStack 3
1567: call with 2 arguments
1568: pushFromStack 0
1569: dup by 3
1570: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
1571: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1572: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1573: pushFromStack 2
1574: pushFromStack 2
1575: pushFromStack 5
1576: pushFromStack 3
1577: pushFromStack 15
1578: pushFromStack 4
1579: traceCallStarts (3 arguments)
1580: pushConstant inline True
1581: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1582: pushFromStack 8
1583: pushFromStack 6
1584: pushFromStack 3
1585: pushFromStack 3
1586: call with 2 arguments
1587: pushFromStack 6
1588: createFunction with 0 arguments capturing 0 starting at ip-1535
1589: pushConstant inline builtinIfElse
1590: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1591: pushFromStack 1
1592: pushFromStack 5
1593: pushFromStack 2
1594: pushFromStack 5
1595: pushFromStack 9
1596: call with 3 arguments
1597: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1598: pushConstant <replaced address 26b68cb565ecfdb2> { 0 arguments (capturing nothing) → ip-300 }
1599: pushFromStack 4
1600: pushFromStack 3
1601: pushFromStack 3
1602: pushFromStack 3
1603: pushFromStack 12
1604: call with 3 arguments
1605: pushConstant <replaced address f71d13d9f94251d4> { 0 arguments (capturing nothing) → ip-1218 }
1606: pushFromStack 6
1607: pushFromStack 9
1608: pushFromStack 5
1609: pushFromStack 3
1610: pushFromStack 14
1611: call with 3 arguments
1612: traceCallEnds without return value
1613: pushConstant inline builtinGetArgumentCount
1614: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
1615: pushFromStack 1
1616: pushFromStack 29
1617: pushFromStack 2
1618: call with 1 argument
1619: traceCallEnds without return value
1620: pushConstant inline 0
1621: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1622: pushFromStack 7
1623: drop
1624: pushFromStack 5
1625: drop
1626: pushFromStack 24
1627: pushFromStack 3
1628: pushFromStack 3
1629: pushFromStack 3
1630: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
1631: pushFromStack 1
1632: dup by 1
1633: pushFromStack 1
1634: popMultipleBelowTop 2
1635: return
# Builtins::ifElse:1:isMatch:else
1636: pushFromStack 1
1637: dup by 1
1638: pushConstant inline builtinEquals
1639: pushConstant inline False
1640: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
1641: pushFromStack 2
1642: pushFromStack 2
1643: pushFromStack 6
1644: pushFromStack 3
1645: call with 2 arguments
1646: pushConstant inline builtinIfElse
1647: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
1648: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1649: pushFromStack 2
1650: pushFromStack 4
1651: pushFromStack 3
1652: pushFromStack 3
1653: pushFromStack 8
1654: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
1655: pushFromStack 1
1656: dup by 1
1657: pushConstant inline builtinEquals
1658: pushConstant inline False
1659: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1660: pushFromStack 2
1661: pushFromStack 5
1662: pushFromStack 3
1663: pushFromStack 3
1664: tailCall with 5 locals and 2 arguments
1665: pushFromStack 1
1666: dup by 1
1667: pushConstant inline builtinEquals
1668: pushConstant inline False
1669: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1670: pushFromStack 2
1671: pushFromStack 5
1672: pushFromStack 3
1673: pushFromStack 3
1674: tailCall with 5 locals and 2 arguments
# anonymous:$generated::needs:condition:else
1675: pushFromStack 1
1676: dup by 1
1677: pushConstant <replaced address 079d177054a20e79> "`is0 body` was not satisfied"
1678: pushFromStack 0
1679: pushFromStack 3
1680: panic
1681: popMultipleBelowTop 3
1682: return
# anonymous:$generated::needs:isConditionTrue:else
1683: pushFromStack 1
1684: dup by 1
1685: pushConstant inline builtinEquals
1686: pushConstant inline False
1687: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1688: pushFromStack 2
1689: pushFromStack 5
1690: pushFromStack 3
1691: pushFromStack 3
1692: tailCall with 5 locals and 2 arguments
1693: pushFromStack 1
1694: dup by 1
1695: pushConstant inline builtinEquals
1696: pushConstant inline False
1697: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1698: pushFromStack 2
1699: pushFromStack 5
1700: pushFromStack 3
1701: pushFromStack 3
1702: tailCall with 5 locals and 2 arguments
# Core:function:run
1703: pushFromStack 1
1704: dup by 7
1705: pushFromStack 0
1706: dup by 2
1707: pushConstant <replaced address 4f60c7964b632b1f> Core:function:run:2
1708: pushConstant <replaced address f766d677b86db44a> { 1 argument (capturing nothing) → ip-1362 }
1709: pushFromStack 1
1710: pushFromStack 1
1711: pushFromStack 5
1712: pushFromStack 2
1713: traceCallStarts (1 argument)
1714: pushConstant inline builtinTypeOf
1715: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
1716: pushFromStack 1
1717: pushFromStack 6
1718: pushFromStack 2
1719: call with 1 argument
1720: pushConstant inline builtinEquals
1721: pushConstant inline Function
1722: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
1723: pushFromStack 2
1724: pushFromStack 4
1725: pushFromStack 3
1726: pushFromStack 3
1727: call with 2 arguments
1728: pushFromStack 0
1729: dup by 4
1730: pushFromStack 10
1731: createFunction with 0 arguments capturing 0 starting at ip-1545
1732: pushFromStack 0
1733: dup by 2
1734: pushConstant <replaced address 572a3664aca7a63d> Core:function:is0:11
1735: pushConstant <replaced address 12f34f1ed9c50d82> { 3 arguments (capturing nothing) → ip-582 }
1736: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
1737: pushFromStack 2
1738: pushFromStack 2
1739: pushFromStack 7
1740: pushFromStack 6
1741: pushFromStack 4
1742: pushFromStack 4
1743: traceCallStarts (3 arguments)
1744: pushConstant inline True
1745: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
1746: pushFromStack 10
1747: pushFromStack 2
1748: pushFromStack 9
1749: pushFromStack 3
1750: call with 2 arguments
1751: pushConstant inline builtinIfElse
1752: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
1753: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
1754: pushFromStack 2
1755: pushFromStack 4
1756: pushFromStack 3
1757: pushFromStack 3
1758: pushFromStack 8
1759: call with 3 arguments
1760: pushFromStack 0
1761: dup by 1
1762: pushConstant inline builtinTagWithoutValue
1763: pushFromStack 0
1764: pushFromStack 2
1765: pushFromStack 8
1766: call with 1 argument
1767: pushConstant inline Match
1768: pushFromStack 18
1769: pushFromStack 2
1770: pushFromStack 2
1771: pushFromStack 11
1772: call with 2 arguments
1773: pushFromStack 4
1774: createFunction with 0 arguments capturing 0 starting at ip-1631
1775: pushFromStack 18
1776: createFunction with 0 arguments capturing 0 starting at ip-1636
1777: pushFromStack 11
1778: pushFromStack 5
1779: pushFromStack 4
1780: pushFromStack 3
1781: pushFromStack 17
1782: call with 3 arguments
1783: pushFromStack 8
1784: pushFromStack 1
1785: pushFromStack 16
1786: call with 1 argument
1787: pushFromStack 25
1788: pushFromStack 1
1789: pushFromStack 9
1790: pushFromStack 18
1791: call with 2 arguments
1792: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
1793: pushFromStack 15
1794: pushFromStack 2
1795: pushFromStack 2
1796: pushFromStack 22
1797: pushFromStack 21
1798: call with 3 arguments
1799: pushFromStack 0
1800: dup by 3
1801: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
1802: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
1803: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
1804: pushFromStack 2
1805: pushFromStack 2
1806: pushFromStack 5
1807: pushFromStack 3
1808: pushFromStack 29
1809: pushFromStack 4
1810: traceCallStarts (3 arguments)
1811: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
1812: pushFromStack 32
1813: pushFromStack 5
1814: pushFromStack 25
1815: pushFromStack 3
1816: call with 2 arguments
1817: pushFromStack 5
1818: createFunction with 0 arguments capturing 0 starting at ip-1655
1819: pushFromStack 23
1820: pushFromStack 3
1821: pushFromStack 10
1822: pushFromStack 3
1823: pushFromStack 7
1824: call with 3 arguments
1825: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
1826: pushConstant <replaced address 64026faceb8eeafd> { 0 arguments (capturing nothing) → ip-399 }
1827: pushFromStack 26
1828: pushFromStack 3
1829: pushFromStack 3
1830: pushFromStack 3
1831: pushFromStack 10
1832: call with 3 arguments
1833: pushConstant <replaced address 777966b8a7b8c63b> { 0 arguments (capturing nothing) → ip-1225 }
1834: pushFromStack 28
1835: pushFromStack 7
1836: pushFromStack 5
1837: pushFromStack 3
1838: pushFromStack 12
1839: call with 3 arguments
1840: traceCallEnds without return value
1841: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
1842: pushFromStack 0
1843: pushFromStack 31
1844: pushFromStack 22
1845: pushFromStack 40
1846: pushFromStack 38
1847: pushFromStack 4
1848: traceCallStarts (3 arguments)
1849: pushFromStack 30
1850: pushFromStack 21
1851: pushFromStack 39
1852: pushFromStack 37
1853: pushFromStack 4
1854: call with 3 arguments
1855: pushFromStack 0
1856: dup by 3
1857: traceCallEnds without return value
1858: traceCallEnds without return value
1859: traceCallEnds without return value
1860: pushConstant <replaced address f25a4b0499a74049> Core:function:run:4
1861: pushConstant <replaced address 079d177054a20e79> "`is0 body` was not satisfied"
1862: pushFromStack 1
1863: pushFromStack 16
1864: pushFromStack 4
1865: pushFromStack 3
1866: pushFromStack 55
1867: pushFromStack 4
1868: traceCallStarts (3 arguments)
1869: pushFromStack 45
1870: pushFromStack 3
1871: pushFromStack 38
1872: pushFromStack 16
1873: call with 2 arguments
1874: pushFromStack 3
1875: createFunction with 0 arguments capturing 0 starting at ip-1665
1876: pushFromStack 36
1877: pushFromStack 3
1878: pushFromStack 23
1879: pushFromStack 3
1880: pushFromStack 20
1881: call with 3 arguments
1882: pushConstant <replaced address 35d9a150f489641c> { 0 arguments (capturing nothing) → ip-1514 }
1883: pushFromStack 38
1884: pushFromStack 2
1885: pushFromStack 15
1886: pushFromStack 3
1887: pushFromStack 22
1888: call with 3 arguments
1889: pushFromStack 57
1890: createFunction with 0 arguments capturing 0 starting at ip-1675
1891: pushFromStack 41
1892: pushFromStack 7
1893: pushFromStack 18
1894: pushFromStack 3
1895: pushFromStack 25
1896: call with 3 arguments
1897: traceCallEnds without return value
1898: pushConstant <replaced address 7e4058bdd2b794f1> Core:function:run:12
1899: pushConstant <replaced address e4a926249d656e79> { 1 argument (capturing nothing) → ip-165 }
1900: pushFromStack 1
1901: pushFromStack 1
1902: pushFromStack 54
1903: pushFromStack 2
1904: traceCallStarts (1 argument)
1905: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
1906: pushFromStack 60
1907: pushFromStack 54
1908: pushFromStack 2
1909: call with 1 argument
1910: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
1911: pushFromStack 59
1912: pushFromStack 2
1913: pushFromStack 60
1914: pushFromStack 3
1915: call with 2 arguments
1916: pushFromStack 0
1917: dup by 3
1918: pushConstant <replaced address 9467827b874a1a94> Builtins::functionRun:5
1919: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
1920: pushFromStack 1
1921: pushFromStack 33
1922: pushFromStack 4
1923: pushFromStack 3
1924: pushFromStack 11
1925: pushFromStack 4
1926: traceCallStarts (3 arguments)
1927: pushFromStack 62
1928: pushFromStack 3
1929: pushFromStack 55
1930: pushFromStack 33
1931: call with 2 arguments
1932: pushFromStack 3
1933: createFunction with 0 arguments capturing 0 starting at ip-1683
1934: pushFromStack 53
1935: pushFromStack 3
1936: pushFromStack 40
1937: pushFromStack 3
1938: pushFromStack 37
1939: call with 3 arguments
1940: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
1941: pushFromStack 55
1942: pushFromStack 2
1943: pushFromStack 32
1944: pushFromStack 3
1945: pushFromStack 39
1946: call with 3 arguments
1947: pushConstant <replaced address b635f42fa2ffd883> { 0 arguments (capturing nothing) → ip-1521 }
1948: pushFromStack 57
1949: pushFromStack 6
1950: pushFromStack 34
1951: pushFromStack 3
1952: pushFromStack 41
1953: call with 3 arguments
1954: traceCallEnds without return value
1955: pushConstant inline builtinGetArgumentCount
1956: pushConstant <replaced address 7d540cc672165a12> Builtins::functionRun:11
1957: pushFromStack 1
1958: pushFromStack 69
1959: pushFromStack 2
1960: call with 1 argument
1961: pushConstant inline 0
1962: pushFromStack 74
1963: pushFromStack 2
1964: pushFromStack 2
1965: pushFromStack 75
1966: call with 2 arguments
1967: pushFromStack 0
1968: dup by 3
1969: pushConstant <replaced address b7bd58c88404a425> Builtins::functionRun:16
1970: pushConstant <replaced address f921b2be2e6a74f5> "`function | ✨.getArgumentCount | equals 0` was not satisfied"
1971: pushFromStack 1
1972: pushFromStack 48
1973: pushFromStack 4
1974: pushFromStack 3
1975: pushFromStack 26
1976: pushFromStack 4
1977: traceCallStarts (3 arguments)
1978: pushFromStack 77
1979: pushFromStack 3
1980: pushFromStack 70
1981: pushFromStack 48
1982: call with 2 arguments
1983: pushFromStack 3
1984: createFunction with 0 arguments capturing 0 starting at ip-1693
1985: pushFromStack 68
1986: pushFromStack 3
1987: pushFromStack 55
1988: pushFromStack 3
1989: pushFromStack 52
1990: call with 3 arguments
1991: pushConstant <replaced address ff0d74f37fd9abec> { 0 arguments (capturing nothing) → ip-122 }
1992: pushFromStack 70
1993: pushFromStack 2
1994: pushFromStack 47
1995: pushFromStack 3
1996: pushFromStack 54
1997: call with 3 arguments
1998: pushConstant <replaced address f09f4031b4ee2296> { 0 arguments (capturing nothing) → ip-1528 }
1999: pushFromStack 72
2000: pushFromStack 6
2001: pushFromStack 49
2002: pushFromStack 3
2003: pushFromStack 56
2004: call with 3 arguments
2005: traceCallEnds without return value
2006: pushConstant <replaced address a0a9e3136ed0e3a3> Builtins::functionRun:22
2007: pushConstant inline builtinFunctionRun
2008: pushFromStack 1
2009: pushFromStack 1
2010: pushFromStack 85
2011: pushFromStack 2
2012: traceCallStarts (1 argument)
2013: pushFromStack 83
2014: pushFromStack 2
2015: call with 0 arguments
2016: traceCallEnds without return value
2017: traceCallEnds without return value
2018: pushFromStack 49
2019: drop
2020: pushFromStack 47
2021: drop
2022: pushFromStack 37
2023: drop
2024: pushFromStack 34
2025: drop
2026: pushFromStack 20
2027: drop
2028: pushFromStack 18
2029: drop
2030: pushFromStack 5
2031: drop
2032: pushFromStack 3
2033: drop
2034: pushFromStack 0
2035: popMultipleBelowTop 96
2036: return
# anonymous:$generated::needs:condition:else
2037: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
2038: pushConstant <replaced address 1ffedbdb2de9475b> Examples:echo:13:print:5
2039: pushFromStack 1
2040: pushFromStack 1
2041: panic
2042: popMultipleBelowTop 3
2043: return
2044: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
2045: pushConstant <replaced address 1ffedbdb2de9475b> Examples:echo:13:print:5
2046: pushFromStack 1
2047: pushFromStack 1
2048: panic
2049: popMultipleBelowTop 3
2050: return
# Examples:echo:13:print:7:doesTagHaveValue:then
2051: pushConstant <replaced address 21f03b3ca28e0378> "You called a tag that already has a value."
2052: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2053: pushFromStack 1
2054: pushFromStack 1
2055: panic
2056: popMultipleBelowTop 3
2057: return
# Examples:echo:13:print:7:calleeIsFunction:else
2058: pushConstant <replaced address c1be25f0a730ee0f> "You can only call tags or functions."
2059: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2060: pushFromStack 1
2061: pushFromStack 1
2062: panic
2063: popMultipleBelowTop 3
2064: return
# anonymous:$generated::needs:condition:else
2065: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
2066: pushConstant <replaced address 508ba0f10c50757f> Examples:echo:13:5
2067: pushFromStack 1
2068: pushFromStack 1
2069: panic
2070: popMultipleBelowTop 3
2071: return
2072: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
2073: pushConstant <replaced address 508ba0f10c50757f> Examples:echo:13:5
2074: pushFromStack 1
2075: pushFromStack 1
2076: panic
2077: popMultipleBelowTop 3
2078: return
2079: pushConstant <replaced address 079d177054a20e79> "`is0 body` was not satisfied"
2080: pushConstant <replaced address c55e38f5302d09a5> Examples:echo:13:23
2081: pushFromStack 1
2082: pushFromStack 1
2083: panic
2084: popMultipleBelowTop 3
2085: return
# anonymous:$generated::needs:isConditionTrue:else
2086: pushFromStack 1
2087: dup by 1
2088: pushConstant inline builtinEquals
2089: pushConstant inline False
2090: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2091: pushFromStack 2
2092: pushFromStack 5
2093: pushFromStack 3
2094: pushFromStack 3
2095: tailCall with 5 locals and 2 arguments
2096: pushFromStack 1
2097: dup by 1
2098: pushConstant inline builtinEquals
2099: pushConstant inline False
2100: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2101: pushFromStack 2
2102: pushFromStack 5
2103: pushFromStack 3
2104: pushFromStack 3
2105: tailCall with 5 locals and 2 arguments
# Examples:echo:13:print:7:doesTagHaveValue:else
2106: pushFromStack 2
2107: dup by 1
2108: pushFromStack 1
2109: dup by 1
2110: pushConstant inline builtinTagWithValue
2111: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2112: pushFromStack 1
2113: pushFromStack 4
2114: pushFromStack 6
2115: pushFromStack 3
2116: tailCall with 5 locals and 2 arguments
# Examples:echo:13:print:7:calleeIsTag:then
2117: pushFromStack 2
2118: dup by 1
2119: pushFromStack 1
2120: dup by 2
2121: pushConstant inline builtinTagHasValue
2122: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2123: pushFromStack 1
2124: pushFromStack 4
2125: pushFromStack 2
2126: call with 1 argument
2127: pushFromStack 5
2128: pushFromStack 5
2129: createFunction with 0 arguments capturing 1, 0 starting at ip-2106
2130: pushConstant inline builtinIfElse
2131: pushConstant <replaced address f6628b2acfb76329> { 0 arguments (capturing nothing) → ip-2051 }
2132: pushFromStack 1
2133: pushFromStack 6
2134: pushFromStack 2
2135: pushFromStack 5
2136: pushFromStack 10
2137: tailCall with 11 locals and 3 arguments
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:then
2138: pushFromStack 2
2139: dup by 2
2140: pushFromStack 1
2141: dup by 2
2142: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2143: pushFromStack 0
2144: pushFromStack 3
2145: pushFromStack 5
2146: pushFromStack 2
2147: traceTailCall (1 argument)
2148: pushFromStack 2
2149: pushFromStack 4
2150: pushFromStack 2
2151: tailCall with 4 locals and 1 argument
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:else
2152: pushFromStack 1
2153: dup by 1
2154: pushConstant inline builtinToDebugText
2155: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2156: pushFromStack 1
2157: pushFromStack 4
2158: pushFromStack 2
2159: call with 1 argument
2160: pushConstant inline builtinTextConcatenate
2161: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
2162: pushFromStack 1
2163: pushFromStack 1
2164: pushFromStack 4
2165: pushFromStack 6
2166: call with 2 arguments
2167: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
2168: pushFromStack 3
2169: pushFromStack 2
2170: pushFromStack 2
2171: pushFromStack 8
2172: call with 2 arguments
2173: pushFromStack 0
2174: pushFromStack 7
2175: panic
2176: popMultipleBelowTop 10
2177: return
# Examples:echo:13:print:7:calleeIsFunction:then
2178: pushFromStack 2
2179: dup by 1
2180: pushFromStack 1
2181: dup by 2
2182: pushConstant inline builtinGetArgumentCount
2183: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2184: pushFromStack 1
2185: pushFromStack 4
2186: pushFromStack 2
2187: call with 1 argument
2188: pushFromStack 0
2189: dup by 1
2190: pushConstant inline builtinEquals
2191: pushConstant inline 1
2192: pushFromStack 1
2193: pushFromStack 3
2194: pushFromStack 2
2195: pushFromStack 6
2196: call with 2 arguments
2197: pushFromStack 8
2198: pushFromStack 8
2199: createFunction with 0 arguments capturing 1, 0 starting at ip-2138
2200: pushFromStack 6
2201: createFunction with 0 arguments capturing 0 starting at ip-2152
2202: pushConstant inline builtinIfElse
2203: pushFromStack 0
2204: pushFromStack 7
2205: pushFromStack 5
2206: pushFromStack 4
2207: pushFromStack 14
2208: tailCall with 15 locals and 3 arguments
# Examples:echo:13:print:7:calleeIsTag:else
2209: pushFromStack 3
2210: dup by 1
2211: pushFromStack 2
2212: dup by 1
2213: pushFromStack 1
2214: dup by 1
2215: pushConstant inline builtinEquals
2216: pushConstant inline Function
2217: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2218: pushFromStack 2
2219: pushFromStack 5
2220: pushFromStack 3
2221: pushFromStack 3
2222: call with 2 arguments
2223: pushFromStack 7
2224: pushFromStack 7
2225: createFunction with 0 arguments capturing 1, 0 starting at ip-2178
2226: pushConstant inline builtinIfElse
2227: pushConstant <replaced address 30cbd72ce1a5ad3c> { 0 arguments (capturing nothing) → ip-2058 }
2228: pushFromStack 1
2229: pushFromStack 6
2230: pushFromStack 4
2231: pushFromStack 3
2232: pushFromStack 10
2233: tailCall with 13 locals and 3 arguments
# Examples:echo:13:print
2234: pushFromStack 2
2235: dup by 4
2236: pushFromStack 1
2237: dup by 1
2238: pushConstant <replaced address 1ffedbdb2de9475b> Examples:echo:13:print:5
2239: pushConstant <replaced address f238301b5e30ca90> { 2 arguments (capturing nothing) → ip-1090 }
2240: pushConstant inline Stdout
2241: pushFromStack 2
2242: pushFromStack 2
2243: pushFromStack 7
2244: pushFromStack 3
2245: pushFromStack 3
2246: traceCallStarts (2 arguments)
2247: pushConstant inline builtinTypeOf
2248: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2249: pushFromStack 1
2250: pushFromStack 8
2251: pushFromStack 2
2252: call with 1 argument
2253: pushConstant inline builtinEquals
2254: pushConstant inline Struct
2255: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2256: pushFromStack 2
2257: pushFromStack 4
2258: pushFromStack 3
2259: pushFromStack 3
2260: call with 2 arguments
2261: pushFromStack 0
2262: dup by 3
2263: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
2264: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2265: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
2266: pushFromStack 2
2267: pushFromStack 2
2268: pushFromStack 5
2269: pushFromStack 3
2270: pushFromStack 16
2271: pushFromStack 4
2272: traceCallStarts (3 arguments)
2273: pushConstant inline True
2274: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2275: pushFromStack 8
2276: pushFromStack 6
2277: pushFromStack 3
2278: pushFromStack 3
2279: call with 2 arguments
2280: pushFromStack 6
2281: createFunction with 0 arguments capturing 0 starting at ip-2086
2282: pushConstant inline builtinIfElse
2283: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2284: pushFromStack 1
2285: pushFromStack 5
2286: pushFromStack 2
2287: pushFromStack 5
2288: pushFromStack 9
2289: call with 3 arguments
2290: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
2291: pushConstant <replaced address 52b244f0f1246b0e> { 0 arguments (capturing nothing) → ip-1040 }
2292: pushFromStack 4
2293: pushFromStack 3
2294: pushFromStack 3
2295: pushFromStack 3
2296: pushFromStack 12
2297: call with 3 arguments
2298: pushConstant <replaced address 69c65ba14a8cd82f> { 0 arguments (capturing nothing) → ip-2037 }
2299: pushFromStack 6
2300: pushFromStack 9
2301: pushFromStack 5
2302: pushFromStack 3
2303: pushFromStack 14
2304: call with 3 arguments
2305: traceCallEnds without return value
2306: pushConstant inline builtinStructHasKey
2307: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
2308: pushFromStack 1
2309: pushFromStack 31
2310: pushFromStack 27
2311: pushFromStack 3
2312: call with 2 arguments
2313: pushFromStack 0
2314: dup by 3
2315: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
2316: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
2317: pushFromStack 1
2318: pushFromStack 20
2319: pushFromStack 4
2320: pushFromStack 3
2321: pushFromStack 34
2322: pushFromStack 4
2323: traceCallStarts (3 arguments)
2324: pushFromStack 24
2325: pushFromStack 3
2326: pushFromStack 19
2327: pushFromStack 19
2328: call with 2 arguments
2329: pushFromStack 3
2330: createFunction with 0 arguments capturing 0 starting at ip-2096
2331: pushFromStack 15
2332: pushFromStack 3
2333: pushFromStack 16
2334: pushFromStack 3
2335: pushFromStack 23
2336: call with 3 arguments
2337: pushConstant <replaced address bb427c5d2d7a3625> { 0 arguments (capturing nothing) → ip-1047 }
2338: pushFromStack 17
2339: pushFromStack 2
2340: pushFromStack 16
2341: pushFromStack 3
2342: pushFromStack 25
2343: call with 3 arguments
2344: pushConstant <replaced address a42fa7a35c7b2242> { 0 arguments (capturing nothing) → ip-2044 }
2345: pushFromStack 19
2346: pushFromStack 6
2347: pushFromStack 18
2348: pushFromStack 3
2349: pushFromStack 27
2350: call with 3 arguments
2351: traceCallEnds without return value
2352: pushConstant inline builtinStructGet
2353: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
2354: pushFromStack 1
2355: pushFromStack 44
2356: pushFromStack 40
2357: pushFromStack 3
2358: call with 2 arguments
2359: pushFromStack 0
2360: dup by 2
2361: traceCallEnds without return value
2362: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2363: pushFromStack 39
2364: pushFromStack 2
2365: pushFromStack 2
2366: call with 1 argument
2367: pushFromStack 0
2368: dup by 1
2369: pushConstant inline Tag
2370: pushFromStack 38
2371: pushFromStack 2
2372: pushFromStack 2
2373: pushFromStack 5
2374: call with 2 arguments
2375: pushFromStack 47
2376: pushFromStack 5
2377: createFunction with 0 arguments capturing 1, 0 starting at ip-2117
2378: pushFromStack 2
2379: pushFromStack 2
2380: pushFromStack 7
2381: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-2209
2382: pushFromStack 29
2383: drop
2384: pushFromStack 27
2385: drop
2386: pushFromStack 16
2387: drop
2388: pushFromStack 14
2389: drop
2390: pushFromStack 34
2391: pushFromStack 8
2392: pushFromStack 6
2393: pushFromStack 3
2394: pushFromStack 14
2395: tailCall with 56 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
2396: pushFromStack 1
2397: dup by 1
2398: pushConstant inline builtinEquals
2399: pushConstant inline False
2400: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2401: pushFromStack 2
2402: pushFromStack 5
2403: pushFromStack 3
2404: pushFromStack 3
2405: tailCall with 5 locals and 2 arguments
2406: pushFromStack 1
2407: dup by 1
2408: pushConstant inline builtinEquals
2409: pushConstant inline False
2410: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2411: pushFromStack 2
2412: pushFromStack 5
2413: pushFromStack 3
2414: pushFromStack 3
2415: tailCall with 5 locals and 2 arguments
2416: pushFromStack 1
2417: dup by 1
2418: pushConstant inline builtinEquals
2419: pushConstant inline False
2420: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2421: pushFromStack 2
2422: pushFromStack 5
2423: pushFromStack 3
2424: pushFromStack 3
2425: tailCall with 5 locals and 2 arguments
# Examples:echo:13:print:7:doesTagHaveValue:else
2426: pushFromStack 1
2427: dup by 1
2428: pushConstant inline builtinTagWithValue
2429: pushConstant <replaced address 59d6aae2417bc61d> "Hello, world!"
2430: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2431: pushFromStack 2
2432: pushFromStack 5
2433: pushFromStack 3
2434: pushFromStack 3
2435: tailCall with 5 locals and 2 arguments
# Examples:echo:13:print:7:calleeIsTag:then
2436: pushFromStack 1
2437: dup by 2
2438: pushConstant inline builtinTagHasValue
2439: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2440: pushFromStack 1
2441: pushFromStack 4
2442: pushFromStack 2
2443: call with 1 argument
2444: pushFromStack 4
2445: createFunction with 0 arguments capturing 0 starting at ip-2426
2446: pushConstant inline builtinIfElse
2447: pushConstant <replaced address f6628b2acfb76329> { 0 arguments (capturing nothing) → ip-2051 }
2448: pushFromStack 1
2449: pushFromStack 5
2450: pushFromStack 2
2451: pushFromStack 5
2452: pushFromStack 9
2453: tailCall with 9 locals and 3 arguments
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:then
2454: pushFromStack 1
2455: dup by 2
2456: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2457: pushConstant <replaced address 59d6aae2417bc61d> "Hello, world!"
2458: pushFromStack 1
2459: pushFromStack 4
2460: pushFromStack 2
2461: pushFromStack 2
2462: traceTailCall (1 argument)
2463: pushFromStack 3
2464: pushFromStack 1
2465: pushFromStack 3
2466: tailCall with 4 locals and 1 argument
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:else
2467: pushFromStack 1
2468: dup by 1
2469: pushConstant inline builtinToDebugText
2470: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2471: pushFromStack 1
2472: pushFromStack 4
2473: pushFromStack 2
2474: call with 1 argument
2475: pushConstant inline builtinTextConcatenate
2476: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
2477: pushFromStack 1
2478: pushFromStack 1
2479: pushFromStack 4
2480: pushFromStack 6
2481: call with 2 arguments
2482: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
2483: pushFromStack 3
2484: pushFromStack 2
2485: pushFromStack 2
2486: pushFromStack 8
2487: call with 2 arguments
2488: pushFromStack 0
2489: pushFromStack 7
2490: panic
2491: popMultipleBelowTop 10
2492: return
# Examples:echo:13:print:7:calleeIsFunction:then
2493: pushFromStack 1
2494: dup by 2
2495: pushConstant inline builtinGetArgumentCount
2496: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2497: pushFromStack 1
2498: pushFromStack 4
2499: pushFromStack 2
2500: call with 1 argument
2501: pushFromStack 0
2502: dup by 1
2503: pushConstant inline builtinEquals
2504: pushConstant inline 1
2505: pushFromStack 1
2506: pushFromStack 3
2507: pushFromStack 2
2508: pushFromStack 6
2509: call with 2 arguments
2510: pushFromStack 7
2511: createFunction with 0 arguments capturing 0 starting at ip-2454
2512: pushFromStack 5
2513: createFunction with 0 arguments capturing 0 starting at ip-2467
2514: pushConstant inline builtinIfElse
2515: pushFromStack 0
2516: pushFromStack 6
2517: pushFromStack 5
2518: pushFromStack 4
2519: pushFromStack 13
2520: tailCall with 13 locals and 3 arguments
# Examples:echo:13:print:7:calleeIsTag:else
2521: pushFromStack 2
2522: dup by 1
2523: pushFromStack 1
2524: dup by 1
2525: pushConstant inline builtinEquals
2526: pushConstant inline Function
2527: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2528: pushFromStack 2
2529: pushFromStack 5
2530: pushFromStack 3
2531: pushFromStack 3
2532: call with 2 arguments
2533: pushFromStack 6
2534: createFunction with 0 arguments capturing 0 starting at ip-2493
2535: pushConstant inline builtinIfElse
2536: pushConstant <replaced address 30cbd72ce1a5ad3c> { 0 arguments (capturing nothing) → ip-2058 }
2537: pushFromStack 1
2538: pushFromStack 5
2539: pushFromStack 4
2540: pushFromStack 3
2541: pushFromStack 9
2542: tailCall with 11 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
2543: pushFromStack 1
2544: dup by 1
2545: pushConstant inline builtinEquals
2546: pushConstant inline False
2547: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2548: pushFromStack 2
2549: pushFromStack 5
2550: pushFromStack 3
2551: pushFromStack 3
2552: tailCall with 5 locals and 2 arguments
# Core:function:is0:9
2553: pushFromStack 1
2554: dup by 3
2555: pushConstant <replaced address 67e46f1286cabf9b> Core:function:is0:9:3
2556: pushConstant <replaced address f6b013ac281ed159> { 1 argument (capturing nothing) → ip-325 }
2557: pushFromStack 1
2558: pushFromStack 1
2559: pushFromStack 5
2560: pushFromStack 2
2561: traceCallStarts (1 argument)
2562: pushConstant inline builtinTypeOf
2563: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2564: pushFromStack 1
2565: pushFromStack 6
2566: pushFromStack 2
2567: call with 1 argument
2568: pushConstant inline builtinEquals
2569: pushConstant inline Function
2570: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2571: pushFromStack 2
2572: pushFromStack 4
2573: pushFromStack 3
2574: pushFromStack 3
2575: call with 2 arguments
2576: pushFromStack 0
2577: dup by 3
2578: pushConstant <replaced address 4302703a6cd3fa75> Builtins::getArgumentCount:5
2579: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2580: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
2581: pushFromStack 2
2582: pushFromStack 2
2583: pushFromStack 5
2584: pushFromStack 3
2585: pushFromStack 15
2586: pushFromStack 4
2587: traceCallStarts (3 arguments)
2588: pushConstant inline True
2589: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2590: pushFromStack 8
2591: pushFromStack 6
2592: pushFromStack 3
2593: pushFromStack 3
2594: call with 2 arguments
2595: pushFromStack 6
2596: createFunction with 0 arguments capturing 0 starting at ip-2543
2597: pushConstant inline builtinIfElse
2598: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
2599: pushFromStack 1
2600: pushFromStack 5
2601: pushFromStack 2
2602: pushFromStack 5
2603: pushFromStack 9
2604: call with 3 arguments
2605: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
2606: pushConstant <replaced address 26b68cb565ecfdb2> { 0 arguments (capturing nothing) → ip-300 }
2607: pushFromStack 4
2608: pushFromStack 3
2609: pushFromStack 3
2610: pushFromStack 3
2611: pushFromStack 12
2612: call with 3 arguments
2613: pushConstant <replaced address f71d13d9f94251d4> { 0 arguments (capturing nothing) → ip-1218 }
2614: pushFromStack 6
2615: pushFromStack 9
2616: pushFromStack 5
2617: pushFromStack 3
2618: pushFromStack 14
2619: call with 3 arguments
2620: traceCallEnds without return value
2621: pushConstant inline builtinGetArgumentCount
2622: pushConstant <replaced address b7d5083e90b08e9b> Builtins::getArgumentCount:11
2623: pushFromStack 1
2624: pushFromStack 29
2625: pushFromStack 2
2626: call with 1 argument
2627: traceCallEnds without return value
2628: pushConstant inline 0
2629: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
2630: pushFromStack 7
2631: drop
2632: pushFromStack 5
2633: drop
2634: pushFromStack 24
2635: pushFromStack 3
2636: pushFromStack 3
2637: pushFromStack 3
2638: tailCall with 32 locals and 2 arguments
# Builtins::ifElse:1:isMatch:then
2639: pushFromStack 1
2640: dup by 1
2641: pushFromStack 1
2642: popMultipleBelowTop 2
2643: return
# Builtins::ifElse:1:isMatch:else
2644: pushFromStack 1
2645: dup by 1
2646: pushConstant inline builtinEquals
2647: pushConstant inline False
2648: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
2649: pushFromStack 2
2650: pushFromStack 2
2651: pushFromStack 6
2652: pushFromStack 3
2653: call with 2 arguments
2654: pushConstant inline builtinIfElse
2655: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
2656: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
2657: pushFromStack 2
2658: pushFromStack 4
2659: pushFromStack 3
2660: pushFromStack 3
2661: pushFromStack 8
2662: tailCall with 9 locals and 3 arguments
# anonymous:$generated::needs:isConditionTrue:else
2663: pushFromStack 1
2664: dup by 1
2665: pushConstant inline builtinEquals
2666: pushConstant inline False
2667: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2668: pushFromStack 2
2669: pushFromStack 5
2670: pushFromStack 3
2671: pushFromStack 3
2672: tailCall with 5 locals and 2 arguments
2673: pushFromStack 1
2674: dup by 1
2675: pushConstant inline builtinEquals
2676: pushConstant inline False
2677: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2678: pushFromStack 2
2679: pushFromStack 5
2680: pushFromStack 3
2681: pushFromStack 3
2682: tailCall with 5 locals and 2 arguments
2683: pushFromStack 1
2684: dup by 1
2685: pushConstant inline builtinEquals
2686: pushConstant inline False
2687: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2688: pushFromStack 2
2689: pushFromStack 5
2690: pushFromStack 3
2691: pushFromStack 3
2692: tailCall with 5 locals and 2 arguments
2693: pushFromStack 1
2694: dup by 1
2695: pushConstant inline builtinEquals
2696: pushConstant inline False
2697: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2698: pushFromStack 2
2699: pushFromStack 5
2700: pushFromStack 3
2701: pushFromStack 3
2702: tailCall with 5 locals and 2 arguments
# Examples:echo:13:print:7:doesTagHaveValue:else
2703: pushFromStack 1
2704: dup by 1
2705: pushConstant inline builtinTagWithValue
2706: pushConstant <replaced address 3012662547e8aef0> "Echo:"
2707: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2708: pushFromStack 2
2709: pushFromStack 5
2710: pushFromStack 3
2711: pushFromStack 3
2712: tailCall with 5 locals and 2 arguments
# Examples:echo:13:print:7:calleeIsTag:then
2713: pushFromStack 1
2714: dup by 2
2715: pushConstant inline builtinTagHasValue
2716: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2717: pushFromStack 1
2718: pushFromStack 4
2719: pushFromStack 2
2720: call with 1 argument
2721: pushFromStack 4
2722: createFunction with 0 arguments capturing 0 starting at ip-2703
2723: pushConstant inline builtinIfElse
2724: pushConstant <replaced address f6628b2acfb76329> { 0 arguments (capturing nothing) → ip-2051 }
2725: pushFromStack 1
2726: pushFromStack 5
2727: pushFromStack 2
2728: pushFromStack 5
2729: pushFromStack 9
2730: tailCall with 9 locals and 3 arguments
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:then
2731: pushFromStack 1
2732: dup by 2
2733: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2734: pushConstant <replaced address 3012662547e8aef0> "Echo:"
2735: pushFromStack 1
2736: pushFromStack 4
2737: pushFromStack 2
2738: pushFromStack 2
2739: traceTailCall (1 argument)
2740: pushFromStack 3
2741: pushFromStack 1
2742: pushFromStack 3
2743: tailCall with 4 locals and 1 argument
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:else
2744: pushFromStack 1
2745: dup by 1
2746: pushConstant inline builtinToDebugText
2747: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2748: pushFromStack 1
2749: pushFromStack 4
2750: pushFromStack 2
2751: call with 1 argument
2752: pushConstant inline builtinTextConcatenate
2753: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
2754: pushFromStack 1
2755: pushFromStack 1
2756: pushFromStack 4
2757: pushFromStack 6
2758: call with 2 arguments
2759: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
2760: pushFromStack 3
2761: pushFromStack 2
2762: pushFromStack 2
2763: pushFromStack 8
2764: call with 2 arguments
2765: pushFromStack 0
2766: pushFromStack 7
2767: panic
2768: popMultipleBelowTop 10
2769: return
# Examples:echo:13:print:7:calleeIsFunction:then
2770: pushFromStack 1
2771: dup by 2
2772: pushConstant inline builtinGetArgumentCount
2773: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2774: pushFromStack 1
2775: pushFromStack 4
2776: pushFromStack 2
2777: call with 1 argument
2778: pushFromStack 0
2779: dup by 1
2780: pushConstant inline builtinEquals
2781: pushConstant inline 1
2782: pushFromStack 1
2783: pushFromStack 3
2784: pushFromStack 2
2785: pushFromStack 6
2786: call with 2 arguments
2787: pushFromStack 7
2788: createFunction with 0 arguments capturing 0 starting at ip-2731
2789: pushFromStack 5
2790: createFunction with 0 arguments capturing 0 starting at ip-2744
2791: pushConstant inline builtinIfElse
2792: pushFromStack 0
2793: pushFromStack 6
2794: pushFromStack 5
2795: pushFromStack 4
2796: pushFromStack 13
2797: tailCall with 13 locals and 3 arguments
# Examples:echo:13:print:7:calleeIsTag:else
2798: pushFromStack 2
2799: dup by 1
2800: pushFromStack 1
2801: dup by 1
2802: pushConstant inline builtinEquals
2803: pushConstant inline Function
2804: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2805: pushFromStack 2
2806: pushFromStack 5
2807: pushFromStack 3
2808: pushFromStack 3
2809: call with 2 arguments
2810: pushFromStack 6
2811: createFunction with 0 arguments capturing 0 starting at ip-2770
2812: pushConstant inline builtinIfElse
2813: pushConstant <replaced address 30cbd72ce1a5ad3c> { 0 arguments (capturing nothing) → ip-2058 }
2814: pushFromStack 1
2815: pushFromStack 5
2816: pushFromStack 4
2817: pushFromStack 3
2818: pushFromStack 9
2819: tailCall with 11 locals and 3 arguments
# Examples:echo:13:print:7:doesTagHaveValue:else
2820: pushFromStack 2
2821: dup by 1
2822: pushFromStack 1
2823: dup by 1
2824: pushConstant inline builtinTagWithValue
2825: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2826: pushFromStack 1
2827: pushFromStack 5
2828: pushFromStack 5
2829: pushFromStack 3
2830: tailCall with 5 locals and 2 arguments
# Examples:echo:13:print:7:calleeIsTag:then
2831: pushFromStack 2
2832: dup by 2
2833: pushFromStack 1
2834: dup by 1
2835: pushConstant inline builtinTagHasValue
2836: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2837: pushFromStack 1
2838: pushFromStack 5
2839: pushFromStack 2
2840: call with 1 argument
2841: pushFromStack 5
2842: pushFromStack 5
2843: createFunction with 0 arguments capturing 1, 0 starting at ip-2820
2844: pushConstant inline builtinIfElse
2845: pushConstant <replaced address f6628b2acfb76329> { 0 arguments (capturing nothing) → ip-2051 }
2846: pushFromStack 1
2847: pushFromStack 6
2848: pushFromStack 2
2849: pushFromStack 5
2850: pushFromStack 10
2851: tailCall with 11 locals and 3 arguments
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:then
2852: pushFromStack 2
2853: dup by 2
2854: pushFromStack 1
2855: dup by 2
2856: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2857: pushFromStack 0
2858: pushFromStack 4
2859: pushFromStack 4
2860: pushFromStack 2
2861: traceTailCall (1 argument)
2862: pushFromStack 3
2863: pushFromStack 3
2864: pushFromStack 2
2865: tailCall with 4 locals and 1 argument
# Examples:echo:13:print:7:hasCorrectNumberOfArguments:else
2866: pushFromStack 1
2867: dup by 1
2868: pushConstant inline builtinToDebugText
2869: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2870: pushFromStack 1
2871: pushFromStack 4
2872: pushFromStack 2
2873: call with 1 argument
2874: pushConstant inline builtinTextConcatenate
2875: pushConstant <replaced address 29f9db9855e50da6> "You called a function that expects "
2876: pushFromStack 1
2877: pushFromStack 1
2878: pushFromStack 4
2879: pushFromStack 6
2880: call with 2 arguments
2881: pushConstant <replaced address 2cc529e2abd4637b> " arguments with 1 arguments."
2882: pushFromStack 3
2883: pushFromStack 2
2884: pushFromStack 2
2885: pushFromStack 8
2886: call with 2 arguments
2887: pushFromStack 0
2888: pushFromStack 7
2889: panic
2890: popMultipleBelowTop 10
2891: return
# Examples:echo:13:print:7:calleeIsFunction:then
2892: pushFromStack 2
2893: dup by 2
2894: pushFromStack 1
2895: dup by 1
2896: pushConstant inline builtinGetArgumentCount
2897: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2898: pushFromStack 1
2899: pushFromStack 5
2900: pushFromStack 2
2901: call with 1 argument
2902: pushFromStack 0
2903: dup by 1
2904: pushConstant inline builtinEquals
2905: pushConstant inline 1
2906: pushFromStack 1
2907: pushFromStack 3
2908: pushFromStack 2
2909: pushFromStack 6
2910: call with 2 arguments
2911: pushFromStack 8
2912: pushFromStack 8
2913: createFunction with 0 arguments capturing 1, 0 starting at ip-2852
2914: pushFromStack 6
2915: createFunction with 0 arguments capturing 0 starting at ip-2866
2916: pushConstant inline builtinIfElse
2917: pushFromStack 0
2918: pushFromStack 7
2919: pushFromStack 5
2920: pushFromStack 4
2921: pushFromStack 14
2922: tailCall with 15 locals and 3 arguments
# Examples:echo:13:print:7:calleeIsTag:else
2923: pushFromStack 3
2924: dup by 1
2925: pushFromStack 2
2926: dup by 1
2927: pushFromStack 1
2928: dup by 1
2929: pushConstant inline builtinEquals
2930: pushConstant inline Function
2931: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
2932: pushFromStack 2
2933: pushFromStack 6
2934: pushFromStack 3
2935: pushFromStack 3
2936: call with 2 arguments
2937: pushFromStack 7
2938: pushFromStack 6
2939: createFunction with 0 arguments capturing 1, 0 starting at ip-2892
2940: pushConstant inline builtinIfElse
2941: pushConstant <replaced address 30cbd72ce1a5ad3c> { 0 arguments (capturing nothing) → ip-2058 }
2942: pushFromStack 1
2943: pushFromStack 6
2944: pushFromStack 4
2945: pushFromStack 3
2946: pushFromStack 10
2947: tailCall with 13 locals and 3 arguments
# Examples:echo:13
2948: pushFromStack 1
2949: dup by 9
2950: pushFromStack 1
2951: createFunction with 1 argument capturing 0 starting at ip-2234
2952: pushFromStack 0
2953: dup by 2
2954: pushConstant <replaced address 508ba0f10c50757f> Examples:echo:13:5
2955: pushConstant <replaced address f238301b5e30ca90> { 2 arguments (capturing nothing) → ip-1090 }
2956: pushConstant inline Stdin
2957: pushFromStack 2
2958: pushFromStack 2
2959: pushFromStack 6
2960: pushFromStack 3
2961: pushFromStack 3
2962: traceCallStarts (2 arguments)
2963: pushConstant inline builtinTypeOf
2964: pushConstant <replaced address 3eca0e872d043602> Builtins::typeIs:19
2965: pushFromStack 1
2966: pushFromStack 7
2967: pushFromStack 2
2968: call with 1 argument
2969: pushConstant inline builtinEquals
2970: pushConstant inline Struct
2971: pushConstant <replaced address 0fea7d5fa5afcc30> Builtins::typeIs:25
2972: pushFromStack 2
2973: pushFromStack 4
2974: pushFromStack 3
2975: pushFromStack 3
2976: call with 2 arguments
2977: pushFromStack 0
2978: dup by 9
2979: pushConstant <replaced address 59fb4da19b618456> Builtins::structGet:5
2980: pushConstant <replaced address e63e502aad6c0ab9> { 3 arguments (capturing nothing) → ip-41 }
2981: pushConstant <replaced address 996cc5f08093ac25> "`struct | typeIs Struct` was not satisfied"
2982: pushFromStack 2
2983: pushFromStack 2
2984: pushFromStack 5
2985: pushFromStack 3
2986: pushFromStack 16
2987: pushFromStack 4
2988: traceCallStarts (3 arguments)
2989: pushConstant inline True
2990: pushConstant <replaced address 80f4eaa53f4876cd> anonymous:$generated::needs
2991: pushFromStack 8
2992: pushFromStack 6
2993: pushFromStack 3
2994: pushFromStack 3
2995: call with 2 arguments
2996: pushFromStack 0
2997: dup by 3
2998: pushFromStack 6
2999: createFunction with 0 arguments capturing 0 starting at ip-2396
3000: pushFromStack 0
3001: dup by 3
3002: pushConstant inline builtinIfElse
3003: pushConstant <replaced address 2ded061b072e15be> { 0 arguments (capturing nothing) → ip-0 }
3004: pushFromStack 1
3005: pushFromStack 5
3006: pushFromStack 2
3007: pushFromStack 5
3008: pushFromStack 9
3009: call with 3 arguments
3010: pushConstant <replaced address dc704463e00c0b29> { 0 arguments (capturing nothing) → ip-3 }
3011: pushConstant <replaced address 52b244f0f1246b0e> { 0 arguments (capturing nothing) → ip-1040 }
3012: pushFromStack 4
3013: pushFromStack 3
3014: pushFromStack 3
3015: pushFromStack 3
3016: pushFromStack 12
3017: call with 3 arguments
3018: pushConstant <replaced address b1282a0b901c21a3> { 0 arguments (capturing nothing) → ip-2065 }
3019: pushFromStack 6
3020: pushFromStack 9
3021: pushFromStack 5
3022: pushFromStack 3
3023: pushFromStack 14
3024: call with 3 arguments
3025: traceCallEnds without return value
3026: pushConstant inline builtinStructHasKey
3027: pushConstant <replaced address 1f92019f89733a43> Builtins::structGet:12
3028: pushFromStack 1
3029: pushFromStack 30
3030: pushFromStack 27
3031: pushFromStack 3
3032: call with 2 arguments
3033: pushFromStack 0
3034: dup by 3
3035: pushConstant <replaced address 7c987e313b2f2519> Builtins::structGet:14
3036: pushConstant <replaced address 18dc4adab2c8e8df> "`struct | ✨.structHasKey key` was not satisfied"
3037: pushFromStack 1
3038: pushFromStack 20
3039: pushFromStack 4
3040: pushFromStack 3
3041: pushFromStack 34
3042: pushFromStack 4
3043: traceCallStarts (3 arguments)
3044: pushFromStack 24
3045: pushFromStack 3
3046: pushFromStack 19
3047: pushFromStack 19
3048: call with 2 arguments
3049: pushFromStack 3
3050: createFunction with 0 arguments capturing 0 starting at ip-2406
3051: pushFromStack 15
3052: pushFromStack 3
3053: pushFromStack 16
3054: pushFromStack 3
3055: pushFromStack 23
3056: call with 3 arguments
3057: pushConstant <replaced address bb427c5d2d7a3625> { 0 arguments (capturing nothing) → ip-1047 }
3058: pushFromStack 17
3059: pushFromStack 2
3060: pushFromStack 16
3061: pushFromStack 3
3062: pushFromStack 25
3063: call with 3 arguments
3064: pushConstant <replaced address eb91760da20a6bb6> { 0 arguments (capturing nothing) → ip-2072 }
3065: pushFromStack 19
3066: pushFromStack 6
3067: pushFromStack 18
3068: pushFromStack 3
3069: pushFromStack 27
3070: call with 3 arguments
3071: traceCallEnds without return value
3072: pushConstant inline builtinStructGet
3073: pushConstant <replaced address 422f322f2940db06> Builtins::structGet:21
3074: pushFromStack 1
3075: pushFromStack 43
3076: pushFromStack 40
3077: pushFromStack 3
3078: call with 2 arguments
3079: pushFromStack 0
3080: dup by 8
3081: traceCallEnds without return value
3082: pushConstant <replaced address 39782b3bf71cb4fd> Examples:echo:13:15
3083: pushConstant <replaced address 59d6aae2417bc61d> "Hello, world!"
3084: pushFromStack 1
3085: pushFromStack 45
3086: pushFromStack 2
3087: pushFromStack 2
3088: traceCallStarts (1 argument)
3089: pushConstant <replaced address 1ffedbdb2de9475b> Examples:echo:13:print:5
3090: pushConstant inline Stdout
3091: pushFromStack 1
3092: pushFromStack 45
3093: pushFromStack 49
3094: pushFromStack 3
3095: pushFromStack 3
3096: traceCallStarts (2 arguments)
3097: pushFromStack 35
3098: pushFromStack 35
3099: pushFromStack 31
3100: pushFromStack 36
3101: pushFromStack 5
3102: pushFromStack 4
3103: traceCallStarts (3 arguments)
3104: pushFromStack 27
3105: pushFromStack 31
3106: pushFromStack 28
3107: pushFromStack 31
3108: pushFromStack 35
3109: call with 3 arguments
3110: pushFromStack 28
3111: pushFromStack 1
3112: pushFromStack 27
3113: pushFromStack 27
3114: pushFromStack 36
3115: call with 3 arguments
3116: pushConstant <replaced address 69c65ba14a8cd82f> { 0 arguments (capturing nothing) → ip-2037 }
3117: pushFromStack 30
3118: pushFromStack 33
3119: pushFromStack 29
3120: pushFromStack 3
3121: pushFromStack 38
3122: call with 3 arguments
3123: traceCallEnds without return value
3124: pushFromStack 23
3125: pushFromStack 52
3126: pushFromStack 6
3127: pushFromStack 25
3128: call with 2 arguments
3129: pushFromStack 0
3130: dup by 7
3131: pushFromStack 21
3132: pushFromStack 40
3133: pushFromStack 2
3134: pushFromStack 23
3135: pushFromStack 10
3136: pushFromStack 4
3137: traceCallStarts (3 arguments)
3138: pushFromStack 44
3139: pushFromStack 1
3140: pushFromStack 39
3141: pushFromStack 39
3142: call with 2 arguments
3143: pushFromStack 0
3144: dup by 2
3145: pushFromStack 1
3146: createFunction with 0 arguments capturing 0 starting at ip-2416
3147: pushFromStack 0
3148: dup by 2
3149: pushFromStack 35
3150: pushFromStack 3
3151: pushFromStack 36
3152: pushFromStack 3
3153: pushFromStack 43
3154: call with 3 arguments
3155: pushFromStack 36
3156: pushFromStack 1
3157: pushFromStack 35
3158: pushFromStack 22
3159: pushFromStack 44
3160: call with 3 arguments
3161: pushConstant <replaced address a42fa7a35c7b2242> { 0 arguments (capturing nothing) → ip-2044 }
3162: pushFromStack 38
3163: pushFromStack 5
3164: pushFromStack 37
3165: pushFromStack 3
3166: pushFromStack 46
3167: call with 3 arguments
3168: traceCallEnds without return value
3169: pushFromStack 18
3170: pushFromStack 60
3171: pushFromStack 14
3172: pushFromStack 20
3173: call with 2 arguments
3174: pushFromStack 0
3175: dup by 6
3176: traceCallEnds without return value
3177: pushConstant <replaced address 7d05586cdfa53231> Examples:echo:13:print:7
3178: pushFromStack 56
3179: pushFromStack 2
3180: pushFromStack 2
3181: call with 1 argument
3182: pushFromStack 0
3183: dup by 3
3184: pushConstant inline Tag
3185: pushFromStack 55
3186: pushFromStack 2
3187: pushFromStack 2
3188: pushFromStack 5
3189: call with 2 arguments
3190: pushFromStack 0
3191: dup by 2
3192: pushFromStack 4
3193: createFunction with 0 arguments capturing 0 starting at ip-2436
3194: pushFromStack 1
3195: pushFromStack 5
3196: createFunction with 0 arguments capturing 1, 0 starting at ip-2521
3197: pushFromStack 49
3198: pushFromStack 6
3199: pushFromStack 5
3200: pushFromStack 3
3201: pushFromStack 12
3202: call with 3 arguments
3203: traceCallEnds without return value
3204: pushConstant <replaced address c55e38f5302d09a5> Examples:echo:13:23
3205: pushConstant <replaced address 9b185ea81f6a05a3> { 1 argument (capturing nothing) → ip-1703 }
3206: pushFromStack 1
3207: pushFromStack 1
3208: pushFromStack 31
3209: pushFromStack 2
3210: traceCallStarts (1 argument)
3211: pushConstant <replaced address 4f60c7964b632b1f> Core:function:run:2
3212: pushConstant <replaced address f766d677b86db44a> { 1 argument (capturing nothing) → ip-1362 }
3213: pushFromStack 1
3214: pushFromStack 1
3215: pushFromStack 33
3216: pushFromStack 2
3217: traceCallStarts (1 argument)
3218: pushConstant <replaced address 05251864681a3500> Builtins::typeOf:5
3219: pushFromStack 70
3220: pushFromStack 33
3221: pushFromStack 2
3222: call with 1 argument
3223: pushConstant inline Function
3224: pushConstant <replaced address e1d6728501bc6b89> Builtins::equals:6
3225: pushFromStack 70
3226: pushFromStack 3
3227: pushFromStack 3
3228: pushFromStack 3
3229: call with 2 arguments
3230: pushFromStack 0
3231: dup by 4
3232: pushFromStack 36
3233: createFunction with 0 arguments capturing 0 starting at ip-2553
3234: pushFromStack 0
3235: dup by 2
3236: pushConstant <replaced address 572a3664aca7a63d> Core:function:is0:11
3237: pushConstant <replaced address 12f34f1ed9c50d82> { 3 arguments (capturing nothing) → ip-582 }
3238: pushConstant <replaced address 1620eaa8950d6c6e> { 0 arguments (capturing nothing) → ip-112 }
3239: pushFromStack 2
3240: pushFromStack 2
3241: pushFromStack 7
3242: pushFromStack 6
3243: pushFromStack 4
3244: pushFromStack 4
3245: traceCallStarts (3 arguments)
3246: pushConstant <replaced address 2ace5f047eecfe6e> Builtins::ifElse:1
3247: pushFromStack 77
3248: pushFromStack 71
3249: pushFromStack 8
3250: pushFromStack 3
3251: call with 2 arguments
3252: pushConstant <replaced address e74159810db9029c> { 0 arguments (capturing nothing) → ip-106 }
3253: pushConstant <replaced address 95c497c9e696f807> { 0 arguments (capturing nothing) → ip-109 }
3254: pushFromStack 68
3255: pushFromStack 3
3256: pushFromStack 3
3257: pushFromStack 3
3258: pushFromStack 7
3259: call with 3 arguments
3260: pushFromStack 0
3261: dup by 1
3262: pushConstant inline builtinTagWithoutValue
3263: pushFromStack 0
3264: pushFromStack 2
3265: pushFromStack 7
3266: call with 1 argument
3267: pushConstant inline Match
3268: pushFromStack 84
3269: pushFromStack 2
3270: pushFromStack 2
3271: pushFromStack 10
3272: call with 2 arguments
3273: pushFromStack 4
3274: createFunction with 0 arguments capturing 0 starting at ip-2639
3275: pushFromStack 16
3276: createFunction with 0 arguments capturing 0 starting at ip-2644
3277: pushFromStack 77
3278: pushFromStack 5
3279: pushFromStack 4
3280: pushFromStack 3
3281: pushFromStack 16
3282: call with 3 arguments
3283: pushFromStack 8
3284: pushFromStack 1
3285: pushFromStack 15
3286: call with 1 argument
3287: pushFromStack 91
3288: pushFromStack 1
3289: pushFromStack 9
3290: pushFromStack 17
3291: call with 2 arguments
3292: pushFromStack 80
3293: pushFromStack 1
3294: pushFromStack 81
3295: pushFromStack 19
3296: pushFromStack 19
3297: call with 3 arguments
3298: pushFromStack 0
3299: dup by 3
3300: pushConstant <replaced address e4db5827e264d41a> Builtins::ifElse:5
3301: pushConstant <replaced address 7b5c0ed7f870b37f> "`conditionIsBool` was not satisfied"
3302: pushFromStack 1
3303: pushFromStack 91
3304: pushFromStack 4
3305: pushFromStack 3
3306: pushFromStack 25
3307: pushFromStack 4
3308: traceCallStarts (3 arguments)
3309: pushFromStack 95
3310: pushFromStack 3
3311: pushFromStack 90
3312: pushFromStack 90
3313: call with 2 arguments
3314: pushFromStack 3
3315: createFunction with 0 arguments capturing 0 starting at ip-2663
3316: pushFromStack 86
3317: pushFromStack 3
3318: pushFromStack 87
3319: pushFromStack 3
3320: pushFromStack 94
3321: call with 3 arguments
3322: pushConstant <replaced address 64026faceb8eeafd> { 0 arguments (capturing nothing) → ip-399 }
3323: pushFromStack 88
3324: pushFromStack 2
3325: pushFromStack 87
3326: pushFromStack 3
3327: pushFromStack 96
3328: call with 3 arguments
3329: pushConstant <replaced address 777966b8a7b8c63b> { 0 arguments (capturing nothing) → ip-1225 }
3330: pushFromStack 90
3331: pushFromStack 6
3332: pushFromStack 89
3333: pushFromStack 3
3334: pushFromStack 98
3335: call with 3 arguments
3336: traceCallEnds without return value
3337: pushConstant <replaced address 871c35d8d3bc0076> Builtins::ifElse:41
3338: pushFromStack 0
3339: pushFromStack 93
3340: pushFromStack 18
3341: pushFromStack 34
3342: pushFromStack 32
3343: pushFromStack 4
3344: traceCallStarts (3 arguments)
3345: pushFromStack 92
3346: pushFromStack 17
3347: pushFromStack 33
3348: pushFromStack 31
3349: pushFromStack 4
3350: call with 3 arguments
3351: pushFromStack 0
3352: dup by 3
3353: traceCallEnds without return value
3354: traceCallEnds without return value
3355: traceCallEnds without return value
3356: pushConstant <replaced address f25a4b0499a74049> Core:function:run:4
3357: pushConstant <replaced address 079d177054a20e79> "`is0 body` was not satisfied"
3358: pushFromStack 1
3359: pushFromStack 103
3360: pushFromStack 4
3361: pushFromStack 3
3362: pushFromStack 48
3363: pushFromStack 4
3364: traceCallStarts (3 arguments)
3365: pushFromStack 107
3366: pushFromStack 3
3367: pushFromStack 102
3368: pushFromStack 102
3369: call with 2 arguments
3370: pushFromStack 3
3371: createFunction with 0 arguments capturing 0 starting at ip-2673
3372: pushFromStack 98
3373: pushFromStack 3
3374: pushFromStack 99
3375: pushFromStack 3
3376: pushFromStack 106
3377: call with 3 arguments
3378: pushConstant <replaced address 35d9a150f489641c> { 0 arguments (capturing nothing) → ip-1514 }
3379: pushFromStack 100
3380: pushFromStack 2
3381: pushFromStack 99
3382: pushFromStack 3
3383: pushFromStack 108
3384: call with 3 arguments
3385: pushConstant <replaced address 5421ad79de6036cd> { 0 arguments (capturing nothing) → ip-2079 }
3386: pushFromStack 102
3387: pushFromStack 6
3388: pushFromStack 101
3389: pushFromStack 3
3390: pushFromStack 110
3391: call with 3 arguments
3392: traceCallEnds without return value
3393: pushConstant <replaced address 7e4058bdd2b794f1> Core:function:run:12
3394: pushConstant <replaced address e4a926249d656e79> { 1 argument (capturing nothing) → ip-165 }
3395: pushFromStack 1
3396: pushFromStack 1
3397: pushFromStack 47
3398: pushFromStack 2
3399: traceCallStarts (1 argument)
3400: pushFromStack 120
3401: pushFromStack 46
3402: pushFromStack 121
3403: call with 1 argument
3404: pushFromStack 118
3405: pushFromStack 1
3406: pushFromStack 51
3407: pushFromStack 119
3408: call with 2 arguments
3409: pushFromStack 0
3410: dup by 3
3411: pushConstant <replaced address 9467827b874a1a94> Builtins::functionRun:5
3412: pushConstant <replaced address 834388196300f4fb> "`function | typeIs Function` was not satisfied"
3413: pushFromStack 1
3414: pushFromStack 117
3415: pushFromStack 4
3416: pushFromStack 3
3417: pushFromStack 9
3418: pushFromStack 4
3419: traceCallStarts (3 arguments)
3420: pushFromStack 121
3421: pushFromStack 3
3422: pushFromStack 116
3423: pushFromStack 116
3424: call with 2 arguments
3425: pushFromStack 3
3426: createFunction with 0 arguments capturing 0 starting at ip-2683
3427: pushFromStack 112
3428: pushFromStack 3
3429: pushFromStack 113
3430: pushFromStack 3
3431: pushFromStack 120
3432: call with 3 arguments
3433: pushConstant <replaced address c4a428f16deb61d9> { 0 arguments (capturing nothing) → ip-115 }
3434: pushFromStack 114
3435: pushFromStack 2
3436: pushFromStack 113
3437: pushFromStack 3
3438: pushFromStack 122
3439: call with 3 arguments
3440: pushConstant <replaced address b635f42fa2ffd883> { 0 arguments (capturing nothing) → ip-1521 }
3441: pushFromStack 116
3442: pushFromStack 6
3443: pushFromStack 115
3444: pushFromStack 3
3445: pushFromStack 124
3446: call with 3 arguments
3447: traceCallEnds without return value
3448: pushConstant inline builtinGetArgumentCount
3449: pushConstant <replaced address 7d540cc672165a12> Builtins::functionRun:11
3450: pushFromStack 1
3451: pushFromStack 60
3452: pushFromStack 2
3453: call with 1 argument
3454: pushConstant inline 0
3455: pushFromStack 133
3456: pushFromStack 2
3457: pushFromStack 2
3458: pushFromStack 66
3459: call with 2 arguments
3460: pushFromStack 0
3461: dup by 3
3462: pushConstant <replaced address b7bd58c88404a425> Builtins::functionRun:16
3463: pushConstant <replaced address f921b2be2e6a74f5> "`function | ✨.getArgumentCount | equals 0` was not satisfied"
3464: pushFromStack 1
3465: pushFromStack 132
3466: pushFromStack 4
3467: pushFromStack 3
3468: pushFromStack 24
3469: pushFromStack 4
3470: traceCallStarts (3 arguments)
3471: pushFromStack 136
3472: pushFromStack 3
3473: pushFromStack 131
3474: pushFromStack 131
3475: call with 2 arguments
3476: pushFromStack 3
3477: createFunction with 0 arguments capturing 0 starting at ip-2693
3478: pushFromStack 127
3479: pushFromStack 3
3480: pushFromStack 128
3481: pushFromStack 3
3482: pushFromStack 135
3483: call with 3 arguments
3484: pushConstant <replaced address ff0d74f37fd9abec> { 0 arguments (capturing nothing) → ip-122 }
3485: pushFromStack 129
3486: pushFromStack 2
3487: pushFromStack 128
3488: pushFromStack 3
3489: pushFromStack 137
3490: call with 3 arguments
3491: pushConstant <replaced address f09f4031b4ee2296> { 0 arguments (capturing nothing) → ip-1528 }
3492: pushFromStack 131
3493: pushFromStack 6
3494: pushFromStack 130
3495: pushFromStack 3
3496: pushFromStack 139
3497: call with 3 arguments
3498: traceCallEnds without return value
3499: pushConstant <replaced address a0a9e3136ed0e3a3> Builtins::functionRun:22
3500: pushConstant inline builtinFunctionRun
3501: pushFromStack 1
3502: pushFromStack 1
3503: pushFromStack 76
3504: pushFromStack 2
3505: traceCallStarts (1 argument)
3506: pushFromStack 74
3507: pushFromStack 2
3508: call with 0 arguments
3509: pushFromStack 0
3510: dup by 2
3511: traceCallEnds without return value
3512: traceCallEnds without return value
3513: traceCallEnds without return value
3514: pushConstant <replaced address c616deb28d19f273> Examples:echo:13:33
3515: pushConstant <replaced address 3012662547e8aef0> "Echo:"
3516: pushFromStack 1
3517: pushFromStack 157
3518: pushFromStack 2
3519: pushFromStack 2
3520: traceCallStarts (1 argument)
3521: pushFromStack 111
3522: pushFromStack 155
3523: pushFromStack 159
3524: pushFromStack 113
3525: pushFromStack 3
3526: traceCallStarts (2 arguments)
3527: pushFromStack 145
3528: pushFromStack 145
3529: pushFromStack 141
3530: pushFromStack 146
3531: pushFromStack 115
3532: pushFromStack 4
3533: traceCallStarts (3 arguments)
3534: pushFromStack 137
3535: pushFromStack 141
3536: pushFromStack 138
3537: pushFromStack 141
3538: pushFromStack 145
3539: call with 3 arguments
3540: pushFromStack 138
3541: pushFromStack 1
3542: pushFromStack 137
3543: pushFromStack 137
3544: pushFromStack 146
3545: call with 3 arguments
3546: pushFromStack 139
3547: pushFromStack 142
3548: pushFromStack 138
3549: pushFromStack 112
3550: pushFromStack 147
3551: call with 3 arguments
3552: traceCallEnds without return value
3553: pushFromStack 129
3554: pushFromStack 148
3555: pushFromStack 108
3556: pushFromStack 131
3557: pushFromStack 118
3558: pushFromStack 4
3559: traceCallStarts (3 arguments)
3560: pushFromStack 140
3561: pushFromStack 108
3562: pushFromStack 141
3563: pushFromStack 108
3564: pushFromStack 148
3565: call with 3 arguments
3566: pushFromStack 141
3567: pushFromStack 1
3568: pushFromStack 140
3569: pushFromStack 127
3570: pushFromStack 149
3571: call with 3 arguments
3572: pushFromStack 142
3573: pushFromStack 109
3574: pushFromStack 141
3575: pushFromStack 107
3576: pushFromStack 150
3577: call with 3 arguments
3578: traceCallEnds without return value
3579: traceCallEnds without return value
3580: pushFromStack 96
3581: createFunction with 0 arguments capturing 0 starting at ip-2713
3582: pushFromStack 1
3583: pushFromStack 98
3584: createFunction with 0 arguments capturing 1, 0 starting at ip-2798
3585: pushFromStack 148
3586: pushFromStack 105
3587: pushFromStack 5
3588: pushFromStack 3
3589: pushFromStack 111
3590: call with 3 arguments
3591: traceCallEnds without return value
3592: pushConstant <replaced address 2ea7161ec96fbd8a> Examples:echo:13:36
3593: pushFromStack 0
3594: pushFromStack 170
3595: pushFromStack 17
3596: pushFromStack 2
3597: traceTailCall (1 argument)
3598: pushFromStack 124
3599: pushFromStack 168
3600: pushFromStack 172
3601: pushFromStack 126
3602: pushFromStack 3
3603: traceCallStarts (2 arguments)
3604: pushFromStack 158
3605: pushFromStack 158
3606: pushFromStack 154
3607: pushFromStack 159
3608: pushFromStack 128
3609: pushFromStack 4
3610: traceCallStarts (3 arguments)
3611: pushFromStack 150
3612: pushFromStack 154
3613: pushFromStack 151
3614: pushFromStack 154
3615: pushFromStack 158
3616: call with 3 arguments
3617: pushFromStack 151
3618: pushFromStack 1
3619: pushFromStack 150
3620: pushFromStack 150
3621: pushFromStack 159
3622: call with 3 arguments
3623: pushFromStack 152
3624: pushFromStack 155
3625: pushFromStack 151
3626: pushFromStack 125
3627: pushFromStack 160
3628: call with 3 arguments
3629: traceCallEnds without return value
3630: pushFromStack 142
3631: pushFromStack 161
3632: pushFromStack 121
3633: pushFromStack 144
3634: pushFromStack 131
3635: pushFromStack 4
3636: traceCallStarts (3 arguments)
3637: pushFromStack 153
3638: pushFromStack 121
3639: pushFromStack 154
3640: pushFromStack 121
3641: pushFromStack 161
3642: call with 3 arguments
3643: pushFromStack 154
3644: pushFromStack 1
3645: pushFromStack 153
3646: pushFromStack 140
3647: pushFromStack 162
3648: call with 3 arguments
3649: pushFromStack 155
3650: pushFromStack 122
3651: pushFromStack 154
3652: pushFromStack 120
3653: pushFromStack 163
3654: call with 3 arguments
3655: traceCallEnds without return value
3656: traceCallEnds without return value
3657: pushFromStack 10
3658: pushFromStack 22
3659: createFunction with 0 arguments capturing 1, 0 starting at ip-2831
3660: pushFromStack 2
3661: pushFromStack 13
3662: pushFromStack 3
3663: createFunction with 0 arguments capturing 2, 1, 0 starting at ip-2923
3664: pushFromStack 158
3665: drop
3666: pushFromStack 156
3667: drop
3668: pushFromStack 145
3669: drop
3670: pushFromStack 143
3671: drop
3672: pushFromStack 134
3673: drop
3674: pushFromStack 132
3675: drop
3676: pushFromStack 126
3677: drop
3678: pushFromStack 124
3679: drop
3680: pushFromStack 113
3681: drop
3682: pushFromStack 74
3683: drop
3684: pushFromStack 72
3685: drop
3686: pushFromStack 62
3687: drop
3688: pushFromStack 60
3689: drop
3690: pushFromStack 48
3691: drop
3692: pushFromStack 46
3693: drop
3694: pushFromStack 33
3695: drop
3696: pushFromStack 31
3697: drop
3698: pushFromStack 24
3699: drop
3700: pushFromStack 23
3701: drop
3702: pushFromStack 21
3703: drop
3704: pushFromStack 20
3705: drop
3706: pushFromStack 14
3707: drop
3708: pushFromStack 11
3709: drop
3710: pushFromStack 10
3711: drop
3712: pushFromStack 8
3713: drop
3714: pushFromStack 7
3715: drop
3716: pushFromStack 163
3717: pushFromStack 120
3718: pushFromStack 6
3719: pushFromStack 3
3720: pushFromStack 126
3721: tailCall with 186 locals and 3 arguments
# Examples:echo:
3722: pushConstant <replaced address 6671bca3e4104f84> { 1 argument (capturing nothing) → ip-2948 }
3723: popMultipleBelowTop 1
3724: return
