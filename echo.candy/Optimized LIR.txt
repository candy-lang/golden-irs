# Optimized LIR for module Examples:echo
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::equals:6
%1 = Builtins::functionRun:11
%2 = Builtins::functionRun:16
%3 = Builtins::functionRun:22
%4 = Builtins::functionRun:5
%5 = Builtins::getArgumentCount:11
%6 = Builtins::getArgumentCount:5
%7 = Builtins::ifElse:1
%8 = Builtins::ifElse:11
%9 = Builtins::ifElse:14
%10 = Builtins::ifElse:19
%11 = Builtins::ifElse:25
%12 = Builtins::ifElse:28
%13 = Builtins::ifElse:33
%14 = Builtins::ifElse:41
%15 = Builtins::ifElse:5
%16 = Builtins::structGet:12
%17 = Builtins::structGet:14
%18 = Builtins::structGet:21
%19 = Builtins::structGet:5
%20 = Builtins::typeIs:19
%21 = Builtins::typeIs:25
%22 = Builtins::typeOf:5
%23 = Core:function:is0:11
%24 = Core:function:is0:9:3
%25 = Core:function:run:12
%26 = Core:function:run:2
%27 = Core:function:run:4
%28 = Examples:echo:13:15
%29 = Examples:echo:13:23
%30 = Examples:echo:13:33
%31 = Examples:echo:13:36
%32 = Examples:echo:13:5
%33 = Examples:echo:13:print:5
%34 = Examples:echo:13:print:7
%35 = anonymous:$generated::needs
%36 = builtinEquals
%37 = builtinFunctionRun
%38 = builtinGetArgumentCount
%39 = builtinIfElse
%40 = builtinStructGet
%41 = builtinStructHasKey
%42 = builtinTagWithoutValue
%43 = builtinTypeOf
%44 = False
%45 = Function
%46 = Match
%47 = NoMatch
%48 = Nothing
%49 = Stdin
%50 = Stdout
%51 = Struct
%52 = Text
%53 = True
%54 = 0
%55 = "Echo:"
%56 = "Hello, world!"
%57 = "The `condition` must be either `True` or `False`."
%58 = "The `reason` must be a text."
%59 = "`conditionIsBool` was not satisfied"
%60 = "`else | getArgumentCount | equals 0` was not satisfied"
%61 = "`else | typeIs Function` was not satisfied"
%62 = "`function | typeIs Function` was not satisfied"
%63 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
%64 = "`is0 body` was not satisfied"
%65 = "`struct | typeIs Struct` was not satisfied"
%66 = "`struct | ✨.structHasKey key` was not satisfied"
%67 = "`then | getArgumentCount | equals 0` was not satisfied"
%68 = "`then | typeIs Function` was not satisfied"
%69 = { body_0 }
%70 = { body_1 }
%71 = { body_6 }
%72 = (,)
%73 = Match %72<(,)>
%74 = { body_7 }
%75 = { body_8 }
%76 = { body_9 }
%77 = { body_10 }
%78 = { body_11 }
%79 = { body_14 }
%80 = { body_15 }
%81 = { body_17 }
%82 = { body_19 }
%83 = { body_21 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:result:is:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %53<True>
body_1 (responsible $0) =
  # Original HIR IDs: Core::21:isMatch:then, Core::32:isMatch:then, Core::43:isMatch:then, Core::104:isMatch:then, Core::155:isMatch:then, Core::166:isMatch:then, Core:bool:11:isMatch:then, Core:check:11:isMatch:then, Core:controlFlow:if:23, Core:controlFlow:31:isMatch:then, Core:controlFlow:52:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:function:21:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:31:isMatch:then, Core:int:42:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:32:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core:list:31:isMatch:then, Core:list:42:isMatch:then, Core:result:21:isMatch:then, Core:result:32:isMatch:then, Core:struct:21:isMatch:then, Core:tag:31:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:text:31:isMatch:then, Core:text:42:isMatch:then, Core:type:21:isMatch:then, Examples:echo:then, Examples:echo:11:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %48<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %36<builtinEquals>
  $4 = %44<False>
  $5 = %35<anonymous:$generated::needs>
  $6 = call $3<%36<builtinEquals>> with $0 $4<%44<False>> ($5<%35<anonymous:$generated::needs>> is responsible)
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %57<"The `condition` must be either `True` or `False`.">
  $4 = panicking because $3<%57<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %58<"The `reason` must be a text.">
  $4 = panicking because $3<%58<"The `reason` must be a text.">> ($0 is at fault)
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = dup $0 by 2
  $5 = dup $1 by 1
  $6 = dup $3 by 2
  $7 = %36<builtinEquals>
  $8 = %53<True>
  $9 = %35<anonymous:$generated::needs>
  $10 = call $7<%36<builtinEquals>> with $0 $8<%53<True>> ($9<%35<anonymous:$generated::needs>> is responsible)
  $11 = { body_2 capturing $0 }
  $12 = %39<builtinIfElse>
  $13 = %69<{ body_0 }>
  $14 = call $12<%39<builtinIfElse>> with $10 $13<%69<{ body_0 }>> $11 ($9<%35<anonymous:$generated::needs>> is responsible)
  $15 = { body_3 capturing $3 }
  $16 = %70<{ body_1 }>
  $17 = call $12<%39<builtinIfElse>> with $14 $16<%70<{ body_1 }>> $15 ($9<%35<anonymous:$generated::needs>> is responsible)
  $18 = %43<builtinTypeOf>
  $19 = call $18<%43<builtinTypeOf>> with $1 ($3 is responsible)
  $20 = %52<Text>
  $21 = call $7<%36<builtinEquals>> with $19 $20<%52<Text>> ($3 is responsible)
  $22 = { body_4 capturing $3 }
  $23 = call $12<%39<builtinIfElse>> with $21 $16<%70<{ body_1 }>> $22 ($9<%35<anonymous:$generated::needs>> is responsible)
  $24 = { body_5 capturing $1, $2 }
  $25 = drop $17
  $26 = drop $23
  $27 = call $12<%39<builtinIfElse>> with $0 $16<%70<{ body_1 }>> $24 ($9<%35<anonymous:$generated::needs>> is responsible)
body_7 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:16:equals:then, Core:bool:lazyOr:16:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:iterator:generateWithState:12:1:3:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:reduceLeft:16:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:17:2:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:19:equals:then, Core:list:lastWhere:19:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
  # Captured IDs: none
  $1 = %73<Match %72<(,)>>
body_8 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::isNonNegative:13:equals:else, Builtins::not:1:equals:else, Core::21:equals:else, Core::32:equals:else, Core::43:equals:else, Core::104:equals:else, Core::155:equals:else, Core::166:equals:else, Core:bool:is:1:equals:else, Core:bool:lazyAnd:16:equals:else, Core:bool:lazyOr:16:equals:else, Core:bool:not:6:equals:else, Core:bool:11:equals:else, Core:check:check:1:equals:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:controlFlow:52:equals:else, Core:fixedDecimal:is:1:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:fixedDecimal:21:equals:else, Core:fixedDecimal:32:equals:else, Core:fixedDecimal:43:equals:else, Core:fixedDecimal:54:equals:else, Core:fixedDecimal:105:equals:else, Core:function:21:equals:else, Core:int:pow:21:1:equals:else, Core:int:pow:21:1:hasKey:else, Core:int:pow:21:4:equals:else, Core:int:31:equals:else, Core:int:42:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:map:17:3:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:next:6:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core:iterator:skip:26:6:1:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:iterator:skip:26:6:8:3:equals:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:iterator:take:27:1:equals:else, Core:iterator:take:27:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:iterator:where:17:2:3:equals:else, Core:iterator:where:17:2:3:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:withIndex:11:5:hasKey:else, Core:iterator:wrapSafe:14:1:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:21:equals:else, Core:iterator:32:equals:else, Core:list:first:6:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:list:firstWhere:19:equals:else, Core:list:generate:51:1:equals:else, Core:list:generate:51:1:hasKey:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:list:lastWhere:19:equals:else, Core:list:single:6:equals:else, Core:list:31:equals:else, Core:list:42:equals:else, Core:result:is:1:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:21:equals:else, Core:result:32:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:text:repeat:30:1:equals:else, Core:text:31:equals:else, Core:text:42:equals:else, Examples:echo:11:equals:else
  # Captured IDs: none
  $1 = %47<NoMatch>
body_9 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:didNotMatch, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:is:1:case-0:didNotMatch, Core:bool:lazyAnd:16:case-1:matched, Core:bool:not:6:case-0:matched, Core:check:check:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:function:is0:10, Core:function:is1:10, Core:function:is2:10, Core:function:is3:10, Core:function:is4:10, Core:function:is5:10, Core:list:isValidIndex:19, Core:list:isValidInsertIndex:19, Core:result:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: none
  $1 = %44<False>
body_10 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::functionRun
  # Captured IDs: none
  $2 = dup $0 by 3
  $3 = dup $1 by 4
  $4 = %43<builtinTypeOf>
  $5 = %20<Builtins::typeIs:19>
  $6 = call $4<%43<builtinTypeOf>> with $0 ($5<%20<Builtins::typeIs:19>> is responsible)
  $7 = %36<builtinEquals>
  $8 = %45<Function>
  $9 = %21<Builtins::typeIs:25>
  $10 = call $7<%36<builtinEquals>> with $6 $8<%45<Function>> ($9<%21<Builtins::typeIs:25>> is responsible)
  $11 = dup $10 by 1
  $12 = %4<Builtins::functionRun:5>
  $13 = %71<{ body_6 }>
  $14 = %62<"`function | typeIs Function` was not satisfied">
  $15 = trace: start of call of $13<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($12<%4<Builtins::functionRun:5>> is responsible, code is at $12<%4<Builtins::functionRun:5>>)
  $16 = call $13<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($12<%4<Builtins::functionRun:5>> is responsible)
  $17 = trace: end of call
  $18 = %38<builtinGetArgumentCount>
  $19 = %1<Builtins::functionRun:11>
  $20 = call $18<%38<builtinGetArgumentCount>> with $0 ($19<%1<Builtins::functionRun:11>> is responsible)
  $21 = %54<0>
  $22 = %0<Builtins::equals:6>
  $23 = call $7<%36<builtinEquals>> with $20 $21<%54<0>> ($22<%0<Builtins::equals:6>> is responsible)
  $24 = dup $23 by 1
  $25 = %2<Builtins::functionRun:16>
  $26 = %63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $27 = trace: start of call of $13<%71<{ body_6 }>> with $23 $26<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($25<%2<Builtins::functionRun:16>> is responsible, code is at $25<%2<Builtins::functionRun:16>>)
  $28 = call $13<%71<{ body_6 }>> with $23 $26<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($25<%2<Builtins::functionRun:16>> is responsible)
  $29 = trace: end of call
  $30 = %3<Builtins::functionRun:22>
  $31 = %37<builtinFunctionRun>
  $32 = trace: tail call of $31<%37<builtinFunctionRun>> with $0 ($30<%3<Builtins::functionRun:22>> is responsible, code is at $30<%3<Builtins::functionRun:22>>)
  $33 = drop $16
  $34 = drop $28
  $35 = call $0 with no arguments ($30<%3<Builtins::functionRun:22>> is responsible)
body_11 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::getArgumentCount
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = dup $1 by 2
  $4 = %43<builtinTypeOf>
  $5 = %20<Builtins::typeIs:19>
  $6 = call $4<%43<builtinTypeOf>> with $0 ($5<%20<Builtins::typeIs:19>> is responsible)
  $7 = %36<builtinEquals>
  $8 = %45<Function>
  $9 = %21<Builtins::typeIs:25>
  $10 = call $7<%36<builtinEquals>> with $6 $8<%45<Function>> ($9<%21<Builtins::typeIs:25>> is responsible)
  $11 = dup $10 by 1
  $12 = %6<Builtins::getArgumentCount:5>
  $13 = %71<{ body_6 }>
  $14 = %62<"`function | typeIs Function` was not satisfied">
  $15 = trace: start of call of $13<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($12<%6<Builtins::getArgumentCount:5>> is responsible, code is at $12<%6<Builtins::getArgumentCount:5>>)
  $16 = call $13<%71<{ body_6 }>> with $10 $14<%62<"`function | typeIs Function` was not satisfied">> $1 ($12<%6<Builtins::getArgumentCount:5>> is responsible)
  $17 = trace: end of call
  $18 = %38<builtinGetArgumentCount>
  $19 = %5<Builtins::getArgumentCount:11>
  $20 = drop $16
  $21 = call $18<%38<builtinGetArgumentCount>> with $0 ($19<%5<Builtins::getArgumentCount:11>> is responsible)
body_12 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_13 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %36<builtinEquals>
  $4 = %44<False>
  $5 = %7<Builtins::ifElse:1>
  $6 = call $3<%36<builtinEquals>> with $4<%44<False>> $0 ($5<%7<Builtins::ifElse:1>> is responsible)
  $7 = %39<builtinIfElse>
  $8 = %74<{ body_7 }>
  $9 = %75<{ body_8 }>
  $10 = call $7<%39<builtinIfElse>> with $6 $8<%74<{ body_7 }>> $9<%75<{ body_8 }>> ($5<%7<Builtins::ifElse:1>> is responsible)
body_14 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Builtins::ifElse
  # Captured IDs: none
  $4 = dup $0 by 3
  $5 = dup $1 by 4
  $6 = dup $2 by 4
  $7 = dup $3 by 10
  $8 = %36<builtinEquals>
  $9 = %53<True>
  $10 = %7<Builtins::ifElse:1>
  $11 = call $8<%36<builtinEquals>> with $9<%53<True>> $0 ($10<%7<Builtins::ifElse:1>> is responsible)
  $12 = %39<builtinIfElse>
  $13 = %74<{ body_7 }>
  $14 = %75<{ body_8 }>
  $15 = call $12<%39<builtinIfElse>> with $11 $13<%74<{ body_7 }>> $14<%75<{ body_8 }>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $16 = dup $15 by 1
  $17 = %42<builtinTagWithoutValue>
  $18 = call $17<%42<builtinTagWithoutValue>> with $15 ($10<%7<Builtins::ifElse:1>> is responsible)
  $19 = %46<Match>
  $20 = call $8<%36<builtinEquals>> with $18 $19<%46<Match>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $21 = { body_12 capturing $15 }
  $22 = { body_13 capturing $0 }
  $23 = call $12<%39<builtinIfElse>> with $20 $21 $22 ($10<%7<Builtins::ifElse:1>> is responsible)
  $24 = call $17<%42<builtinTagWithoutValue>> with $23 ($10<%7<Builtins::ifElse:1>> is responsible)
  $25 = call $8<%36<builtinEquals>> with $24 $19<%46<Match>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $26 = %69<{ body_0 }>
  $27 = %76<{ body_9 }>
  $28 = call $12<%39<builtinIfElse>> with $25 $26<%69<{ body_0 }>> $27<%76<{ body_9 }>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $29 = dup $28 by 1
  $30 = %15<Builtins::ifElse:5>
  $31 = %71<{ body_6 }>
  $32 = %59<"`conditionIsBool` was not satisfied">
  $33 = trace: start of call of $31<%71<{ body_6 }>> with $28 $32<%59<"`conditionIsBool` was not satisfied">> $3 ($30<%15<Builtins::ifElse:5>> is responsible, code is at $30<%15<Builtins::ifElse:5>>)
  $34 = call $31<%71<{ body_6 }>> with $28 $32<%59<"`conditionIsBool` was not satisfied">> $3 ($30<%15<Builtins::ifElse:5>> is responsible)
  $35 = trace: end of call
  $36 = %43<builtinTypeOf>
  $37 = %20<Builtins::typeIs:19>
  $38 = call $36<%43<builtinTypeOf>> with $1 ($37<%20<Builtins::typeIs:19>> is responsible)
  $39 = dup $38 by 1
  $40 = %45<Function>
  $41 = %21<Builtins::typeIs:25>
  $42 = call $8<%36<builtinEquals>> with $38 $40<%45<Function>> ($41<%21<Builtins::typeIs:25>> is responsible)
  $43 = dup $42 by 1
  $44 = %8<Builtins::ifElse:11>
  $45 = %68<"`then | typeIs Function` was not satisfied">
  $46 = trace: start of call of $31<%71<{ body_6 }>> with $42 $45<%68<"`then | typeIs Function` was not satisfied">> $3 ($44<%8<Builtins::ifElse:11>> is responsible, code is at $44<%8<Builtins::ifElse:11>>)
  $47 = call $31<%71<{ body_6 }>> with $42 $45<%68<"`then | typeIs Function` was not satisfied">> $3 ($44<%8<Builtins::ifElse:11>> is responsible)
  $48 = trace: end of call
  $49 = %9<Builtins::ifElse:14>
  $50 = %78<{ body_11 }>
  $51 = trace: start of call of $50<%78<{ body_11 }>> with $1 ($49<%9<Builtins::ifElse:14>> is responsible, code is at $49<%9<Builtins::ifElse:14>>)
  $52 = call $8<%36<builtinEquals>> with $38 $40<%45<Function>> ($41<%21<Builtins::typeIs:25>> is responsible)
  $53 = dup $52 by 1
  $54 = %6<Builtins::getArgumentCount:5>
  $55 = %62<"`function | typeIs Function` was not satisfied">
  $56 = trace: start of call of $31<%71<{ body_6 }>> with $52 $55<%62<"`function | typeIs Function` was not satisfied">> $49<%9<Builtins::ifElse:14>> ($54<%6<Builtins::getArgumentCount:5>> is responsible, code is at $54<%6<Builtins::getArgumentCount:5>>)
  $57 = call $31<%71<{ body_6 }>> with $52 $55<%62<"`function | typeIs Function` was not satisfied">> $49<%9<Builtins::ifElse:14>> ($54<%6<Builtins::getArgumentCount:5>> is responsible)
  $58 = trace: end of call
  $59 = %38<builtinGetArgumentCount>
  $60 = %5<Builtins::getArgumentCount:11>
  $61 = call $59<%38<builtinGetArgumentCount>> with $1 ($60<%5<Builtins::getArgumentCount:11>> is responsible)
  $62 = trace: end of call
  $63 = %54<0>
  $64 = %0<Builtins::equals:6>
  $65 = call $8<%36<builtinEquals>> with $61 $63<%54<0>> ($64<%0<Builtins::equals:6>> is responsible)
  $66 = dup $65 by 1
  $67 = %10<Builtins::ifElse:19>
  $68 = %67<"`then | getArgumentCount | equals 0` was not satisfied">
  $69 = trace: start of call of $31<%71<{ body_6 }>> with $65 $68<%67<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($67<%10<Builtins::ifElse:19>> is responsible, code is at $67<%10<Builtins::ifElse:19>>)
  $70 = call $31<%71<{ body_6 }>> with $65 $68<%67<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($67<%10<Builtins::ifElse:19>> is responsible)
  $71 = trace: end of call
  $72 = call $36<%43<builtinTypeOf>> with $2 ($37<%20<Builtins::typeIs:19>> is responsible)
  $73 = dup $72 by 1
  $74 = call $8<%36<builtinEquals>> with $72 $40<%45<Function>> ($41<%21<Builtins::typeIs:25>> is responsible)
  $75 = dup $74 by 1
  $76 = %11<Builtins::ifElse:25>
  $77 = %61<"`else | typeIs Function` was not satisfied">
  $78 = trace: start of call of $31<%71<{ body_6 }>> with $74 $77<%61<"`else | typeIs Function` was not satisfied">> $3 ($76<%11<Builtins::ifElse:25>> is responsible, code is at $76<%11<Builtins::ifElse:25>>)
  $79 = call $31<%71<{ body_6 }>> with $74 $77<%61<"`else | typeIs Function` was not satisfied">> $3 ($76<%11<Builtins::ifElse:25>> is responsible)
  $80 = trace: end of call
  $81 = %12<Builtins::ifElse:28>
  $82 = trace: start of call of $50<%78<{ body_11 }>> with $2 ($81<%12<Builtins::ifElse:28>> is responsible, code is at $81<%12<Builtins::ifElse:28>>)
  $83 = call $8<%36<builtinEquals>> with $72 $40<%45<Function>> ($41<%21<Builtins::typeIs:25>> is responsible)
  $84 = dup $83 by 1
  $85 = trace: start of call of $31<%71<{ body_6 }>> with $83 $55<%62<"`function | typeIs Function` was not satisfied">> $81<%12<Builtins::ifElse:28>> ($54<%6<Builtins::getArgumentCount:5>> is responsible, code is at $54<%6<Builtins::getArgumentCount:5>>)
  $86 = call $31<%71<{ body_6 }>> with $83 $55<%62<"`function | typeIs Function` was not satisfied">> $81<%12<Builtins::ifElse:28>> ($54<%6<Builtins::getArgumentCount:5>> is responsible)
  $87 = trace: end of call
  $88 = call $59<%38<builtinGetArgumentCount>> with $2 ($60<%5<Builtins::getArgumentCount:11>> is responsible)
  $89 = trace: end of call
  $90 = call $8<%36<builtinEquals>> with $88 $63<%54<0>> ($64<%0<Builtins::equals:6>> is responsible)
  $91 = dup $90 by 1
  $92 = %13<Builtins::ifElse:33>
  $93 = %60<"`else | getArgumentCount | equals 0` was not satisfied">
  $94 = trace: start of call of $31<%71<{ body_6 }>> with $90 $93<%60<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($92<%13<Builtins::ifElse:33>> is responsible, code is at $92<%13<Builtins::ifElse:33>>)
  $95 = call $31<%71<{ body_6 }>> with $90 $93<%60<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($92<%13<Builtins::ifElse:33>> is responsible)
  $96 = trace: end of call
  $97 = %14<Builtins::ifElse:41>
  $98 = trace: tail call of $12<%39<builtinIfElse>> with $0 $1 $2 ($97<%14<Builtins::ifElse:41>> is responsible, code is at $97<%14<Builtins::ifElse:41>>)
  $99 = drop $34
  $100 = drop $47
  $101 = drop $57
  $102 = drop $70
  $103 = drop $79
  $104 = drop $86
  $105 = drop $95
  $106 = call $12<%39<builtinIfElse>> with $0 $1 $2 ($97<%14<Builtins::ifElse:41>> is responsible)
body_15 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::structGet
  # Captured IDs: none
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = dup $2 by 4
  $6 = %43<builtinTypeOf>
  $7 = %20<Builtins::typeIs:19>
  $8 = call $6<%43<builtinTypeOf>> with $0 ($7<%20<Builtins::typeIs:19>> is responsible)
  $9 = %36<builtinEquals>
  $10 = %51<Struct>
  $11 = %21<Builtins::typeIs:25>
  $12 = call $9<%36<builtinEquals>> with $8 $10<%51<Struct>> ($11<%21<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %19<Builtins::structGet:5>
  $15 = %71<{ body_6 }>
  $16 = %65<"`struct | typeIs Struct` was not satisfied">
  $17 = trace: start of call of $15<%71<{ body_6 }>> with $12 $16<%65<"`struct | typeIs Struct` was not satisfied">> $2 ($14<%19<Builtins::structGet:5>> is responsible, code is at $14<%19<Builtins::structGet:5>>)
  $18 = call $15<%71<{ body_6 }>> with $12 $16<%65<"`struct | typeIs Struct` was not satisfied">> $2 ($14<%19<Builtins::structGet:5>> is responsible)
  $19 = trace: end of call
  $20 = %41<builtinStructHasKey>
  $21 = %16<Builtins::structGet:12>
  $22 = call $20<%41<builtinStructHasKey>> with $0 $1 ($21<%16<Builtins::structGet:12>> is responsible)
  $23 = dup $22 by 1
  $24 = %17<Builtins::structGet:14>
  $25 = %66<"`struct | ✨.structHasKey key` was not satisfied">
  $26 = trace: start of call of $15<%71<{ body_6 }>> with $22 $25<%66<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($24<%17<Builtins::structGet:14>> is responsible, code is at $24<%17<Builtins::structGet:14>>)
  $27 = call $15<%71<{ body_6 }>> with $22 $25<%66<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($24<%17<Builtins::structGet:14>> is responsible)
  $28 = trace: end of call
  $29 = %40<builtinStructGet>
  $30 = %18<Builtins::structGet:21>
  $31 = drop $18
  $32 = drop $27
  $33 = call $29<%40<builtinStructGet>> with $0 $1 ($30<%18<Builtins::structGet:21>> is responsible)
body_16 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %24<Core:function:is0:9:3>
  $4 = %78<{ body_11 }>
  $5 = trace: start of call of $4<%78<{ body_11 }>> with $0 ($3<%24<Core:function:is0:9:3>> is responsible, code is at $3<%24<Core:function:is0:9:3>>)
  $6 = %43<builtinTypeOf>
  $7 = %20<Builtins::typeIs:19>
  $8 = call $6<%43<builtinTypeOf>> with $0 ($7<%20<Builtins::typeIs:19>> is responsible)
  $9 = %36<builtinEquals>
  $10 = %45<Function>
  $11 = %21<Builtins::typeIs:25>
  $12 = call $9<%36<builtinEquals>> with $8 $10<%45<Function>> ($11<%21<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %71<{ body_6 }>
  $16 = %62<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%71<{ body_6 }>> with $12 $16<%62<"`function | typeIs Function` was not satisfied">> $3<%24<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%71<{ body_6 }>> with $12 $16<%62<"`function | typeIs Function` was not satisfied">> $3<%24<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %38<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%38<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %54<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%36<builtinEquals>> with $22 $24<%54<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_17 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is0
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = %43<builtinTypeOf>
  $4 = %22<Builtins::typeOf:5>
  $5 = call $3<%43<builtinTypeOf>> with $0 ($4<%22<Builtins::typeOf:5>> is responsible)
  $6 = %36<builtinEquals>
  $7 = %45<Function>
  $8 = %0<Builtins::equals:6>
  $9 = call $6<%36<builtinEquals>> with $5 $7<%45<Function>> ($8<%0<Builtins::equals:6>> is responsible)
  $10 = dup $9 by 1
  $11 = { body_16 capturing $0 }
  $12 = dup $11 by 1
  $13 = %23<Core:function:is0:11>
  $14 = %79<{ body_14 }>
  $15 = %76<{ body_9 }>
  $16 = trace: tail call of $14<%79<{ body_14 }>> with $9 $11 $15<%76<{ body_9 }>> ($13<%23<Core:function:is0:11>> is responsible, code is at $13<%23<Core:function:is0:11>>)
  $17 = call $14<%79<{ body_14 }>> with $9 $11 $15<%76<{ body_9 }>> ($13<%23<Core:function:is0:11>> is responsible)
body_18 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %24<Core:function:is0:9:3>
  $4 = %78<{ body_11 }>
  $5 = trace: start of call of $4<%78<{ body_11 }>> with $0 ($3<%24<Core:function:is0:9:3>> is responsible, code is at $3<%24<Core:function:is0:9:3>>)
  $6 = %43<builtinTypeOf>
  $7 = %20<Builtins::typeIs:19>
  $8 = call $6<%43<builtinTypeOf>> with $0 ($7<%20<Builtins::typeIs:19>> is responsible)
  $9 = %36<builtinEquals>
  $10 = %45<Function>
  $11 = %21<Builtins::typeIs:25>
  $12 = call $9<%36<builtinEquals>> with $8 $10<%45<Function>> ($11<%21<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %71<{ body_6 }>
  $16 = %62<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%71<{ body_6 }>> with $12 $16<%62<"`function | typeIs Function` was not satisfied">> $3<%24<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%71<{ body_6 }>> with $12 $16<%62<"`function | typeIs Function` was not satisfied">> $3<%24<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %38<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%38<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %54<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%36<builtinEquals>> with $22 $24<%54<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_19 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:run
  # Captured IDs: none
  $2 = dup $0 by 7
  $3 = dup $1 by 2
  $4 = %26<Core:function:run:2>
  $5 = %81<{ body_17 }>
  $6 = trace: start of call of $5<%81<{ body_17 }>> with $0 ($4<%26<Core:function:run:2>> is responsible, code is at $4<%26<Core:function:run:2>>)
  $7 = %43<builtinTypeOf>
  $8 = %22<Builtins::typeOf:5>
  $9 = call $7<%43<builtinTypeOf>> with $0 ($8<%22<Builtins::typeOf:5>> is responsible)
  $10 = %36<builtinEquals>
  $11 = %45<Function>
  $12 = %0<Builtins::equals:6>
  $13 = call $10<%36<builtinEquals>> with $9 $11<%45<Function>> ($12<%0<Builtins::equals:6>> is responsible)
  $14 = dup $13 by 1
  $15 = { body_18 capturing $0 }
  $16 = dup $15 by 1
  $17 = %23<Core:function:is0:11>
  $18 = %79<{ body_14 }>
  $19 = %76<{ body_9 }>
  $20 = trace: start of call of $18<%79<{ body_14 }>> with $13 $15 $19<%76<{ body_9 }>> ($17<%23<Core:function:is0:11>> is responsible, code is at $17<%23<Core:function:is0:11>>)
  $21 = call $18<%79<{ body_14 }>> with $13 $15 $19<%76<{ body_9 }>> ($17<%23<Core:function:is0:11>> is responsible)
  $22 = dup $21 by 1
  $23 = trace: end of call
  $24 = trace: end of call
  $25 = %27<Core:function:run:4>
  $26 = %71<{ body_6 }>
  $27 = %64<"`is0 body` was not satisfied">
  $28 = trace: start of call of $26<%71<{ body_6 }>> with $21 $27<%64<"`is0 body` was not satisfied">> $1 ($25<%27<Core:function:run:4>> is responsible, code is at $25<%27<Core:function:run:4>>)
  $29 = call $26<%71<{ body_6 }>> with $21 $27<%64<"`is0 body` was not satisfied">> $1 ($25<%27<Core:function:run:4>> is responsible)
  $30 = trace: end of call
  $31 = %25<Core:function:run:12>
  $32 = %77<{ body_10 }>
  $33 = trace: start of call of $32<%77<{ body_10 }>> with $0 ($31<%25<Core:function:run:12>> is responsible, code is at $31<%25<Core:function:run:12>>)
  $34 = %20<Builtins::typeIs:19>
  $35 = call $7<%43<builtinTypeOf>> with $0 ($34<%20<Builtins::typeIs:19>> is responsible)
  $36 = %21<Builtins::typeIs:25>
  $37 = call $10<%36<builtinEquals>> with $35 $11<%45<Function>> ($36<%21<Builtins::typeIs:25>> is responsible)
  $38 = dup $37 by 1
  $39 = %4<Builtins::functionRun:5>
  $40 = %62<"`function | typeIs Function` was not satisfied">
  $41 = trace: start of call of $26<%71<{ body_6 }>> with $37 $40<%62<"`function | typeIs Function` was not satisfied">> $31<%25<Core:function:run:12>> ($39<%4<Builtins::functionRun:5>> is responsible, code is at $39<%4<Builtins::functionRun:5>>)
  $42 = call $26<%71<{ body_6 }>> with $37 $40<%62<"`function | typeIs Function` was not satisfied">> $31<%25<Core:function:run:12>> ($39<%4<Builtins::functionRun:5>> is responsible)
  $43 = trace: end of call
  $44 = %38<builtinGetArgumentCount>
  $45 = %1<Builtins::functionRun:11>
  $46 = call $44<%38<builtinGetArgumentCount>> with $0 ($45<%1<Builtins::functionRun:11>> is responsible)
  $47 = %54<0>
  $48 = call $10<%36<builtinEquals>> with $46 $47<%54<0>> ($12<%0<Builtins::equals:6>> is responsible)
  $49 = dup $48 by 1
  $50 = %2<Builtins::functionRun:16>
  $51 = %63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $52 = trace: start of call of $26<%71<{ body_6 }>> with $48 $51<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $31<%25<Core:function:run:12>> ($50<%2<Builtins::functionRun:16>> is responsible, code is at $50<%2<Builtins::functionRun:16>>)
  $53 = call $26<%71<{ body_6 }>> with $48 $51<%63<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $31<%25<Core:function:run:12>> ($50<%2<Builtins::functionRun:16>> is responsible)
  $54 = trace: end of call
  $55 = %3<Builtins::functionRun:22>
  $56 = %37<builtinFunctionRun>
  $57 = trace: start of call of $56<%37<builtinFunctionRun>> with $0 ($55<%3<Builtins::functionRun:22>> is responsible, code is at $55<%3<Builtins::functionRun:22>>)
  $58 = call $0 with no arguments ($55<%3<Builtins::functionRun:22>> is responsible)
  $59 = trace: end of call
  $60 = trace: end of call
  $61 = drop $29
  $62 = drop $42
  $63 = drop $53
  $64 = $58
body_20 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:echo:13:print
  # Captured IDs: $0
  $3 = dup $0 by 4
  $4 = dup $1 by 1
  $5 = %33<Examples:echo:13:print:5>
  $6 = %80<{ body_15 }>
  $7 = %50<Stdout>
  $8 = trace: start of call of $6<%80<{ body_15 }>> with $0 $7<%50<Stdout>> ($5<%33<Examples:echo:13:print:5>> is responsible, code is at $5<%33<Examples:echo:13:print:5>>)
  $9 = %43<builtinTypeOf>
  $10 = %20<Builtins::typeIs:19>
  $11 = call $9<%43<builtinTypeOf>> with $0 ($10<%20<Builtins::typeIs:19>> is responsible)
  $12 = %36<builtinEquals>
  $13 = %51<Struct>
  $14 = %21<Builtins::typeIs:25>
  $15 = call $12<%36<builtinEquals>> with $11 $13<%51<Struct>> ($14<%21<Builtins::typeIs:25>> is responsible)
  $16 = dup $15 by 1
  $17 = %19<Builtins::structGet:5>
  $18 = %71<{ body_6 }>
  $19 = %65<"`struct | typeIs Struct` was not satisfied">
  $20 = trace: start of call of $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $5<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible, code is at $17<%19<Builtins::structGet:5>>)
  $21 = call $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $5<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible)
  $22 = trace: end of call
  $23 = %41<builtinStructHasKey>
  $24 = %16<Builtins::structGet:12>
  $25 = call $23<%41<builtinStructHasKey>> with $0 $7<%50<Stdout>> ($24<%16<Builtins::structGet:12>> is responsible)
  $26 = dup $25 by 1
  $27 = %17<Builtins::structGet:14>
  $28 = %66<"`struct | ✨.structHasKey key` was not satisfied">
  $29 = trace: start of call of $18<%71<{ body_6 }>> with $25 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $5<%33<Examples:echo:13:print:5>> ($27<%17<Builtins::structGet:14>> is responsible, code is at $27<%17<Builtins::structGet:14>>)
  $30 = call $18<%71<{ body_6 }>> with $25 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $5<%33<Examples:echo:13:print:5>> ($27<%17<Builtins::structGet:14>> is responsible)
  $31 = trace: end of call
  $32 = %40<builtinStructGet>
  $33 = %18<Builtins::structGet:21>
  $34 = call $32<%40<builtinStructGet>> with $0 $7<%50<Stdout>> ($33<%18<Builtins::structGet:21>> is responsible)
  $35 = dup $34 by 1
  $36 = trace: end of call
  $37 = %34<Examples:echo:13:print:7>
  $38 = trace: tail call of $34 with $1 ($37<%34<Examples:echo:13:print:7>> is responsible, code is at $37<%34<Examples:echo:13:print:7>>)
  $39 = drop $21
  $40 = drop $30
  $41 = call $34 with $1 ($37<%34<Examples:echo:13:print:7>> is responsible)
body_21 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:echo:13
  # Captured IDs: none
  $2 = dup $0 by 8
  $3 = { body_20 capturing $0 }
  $4 = dup $3 by 3
  $5 = %32<Examples:echo:13:5>
  $6 = %80<{ body_15 }>
  $7 = %49<Stdin>
  $8 = trace: start of call of $6<%80<{ body_15 }>> with $0 $7<%49<Stdin>> ($5<%32<Examples:echo:13:5>> is responsible, code is at $5<%32<Examples:echo:13:5>>)
  $9 = %43<builtinTypeOf>
  $10 = %20<Builtins::typeIs:19>
  $11 = call $9<%43<builtinTypeOf>> with $0 ($10<%20<Builtins::typeIs:19>> is responsible)
  $12 = %36<builtinEquals>
  $13 = %51<Struct>
  $14 = %21<Builtins::typeIs:25>
  $15 = call $12<%36<builtinEquals>> with $11 $13<%51<Struct>> ($14<%21<Builtins::typeIs:25>> is responsible)
  $16 = dup $15 by 5
  $17 = %19<Builtins::structGet:5>
  $18 = %71<{ body_6 }>
  $19 = %65<"`struct | typeIs Struct` was not satisfied">
  $20 = trace: start of call of $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $5<%32<Examples:echo:13:5>> ($17<%19<Builtins::structGet:5>> is responsible, code is at $17<%19<Builtins::structGet:5>>)
  $21 = call $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $5<%32<Examples:echo:13:5>> ($17<%19<Builtins::structGet:5>> is responsible)
  $22 = trace: end of call
  $23 = %41<builtinStructHasKey>
  $24 = %16<Builtins::structGet:12>
  $25 = call $23<%41<builtinStructHasKey>> with $0 $7<%49<Stdin>> ($24<%16<Builtins::structGet:12>> is responsible)
  $26 = dup $25 by 1
  $27 = %17<Builtins::structGet:14>
  $28 = %66<"`struct | ✨.structHasKey key` was not satisfied">
  $29 = trace: start of call of $18<%71<{ body_6 }>> with $25 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $5<%32<Examples:echo:13:5>> ($27<%17<Builtins::structGet:14>> is responsible, code is at $27<%17<Builtins::structGet:14>>)
  $30 = call $18<%71<{ body_6 }>> with $25 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $5<%32<Examples:echo:13:5>> ($27<%17<Builtins::structGet:14>> is responsible)
  $31 = trace: end of call
  $32 = %40<builtinStructGet>
  $33 = %18<Builtins::structGet:21>
  $34 = call $32<%40<builtinStructGet>> with $0 $7<%49<Stdin>> ($33<%18<Builtins::structGet:21>> is responsible)
  $35 = dup $34 by 1
  $36 = trace: end of call
  $37 = %28<Examples:echo:13:15>
  $38 = %56<"Hello, world!">
  $39 = trace: start of call of $3 with $38<%56<"Hello, world!">> ($37<%28<Examples:echo:13:15>> is responsible, code is at $37<%28<Examples:echo:13:15>>)
  $40 = %33<Examples:echo:13:print:5>
  $41 = %50<Stdout>
  $42 = trace: start of call of $6<%80<{ body_15 }>> with $0 $41<%50<Stdout>> ($40<%33<Examples:echo:13:print:5>> is responsible, code is at $40<%33<Examples:echo:13:print:5>>)
  $43 = trace: start of call of $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible, code is at $17<%19<Builtins::structGet:5>>)
  $44 = call $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible)
  $45 = trace: end of call
  $46 = call $23<%41<builtinStructHasKey>> with $0 $41<%50<Stdout>> ($24<%16<Builtins::structGet:12>> is responsible)
  $47 = dup $46 by 3
  $48 = trace: start of call of $18<%71<{ body_6 }>> with $46 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($27<%17<Builtins::structGet:14>> is responsible, code is at $27<%17<Builtins::structGet:14>>)
  $49 = call $18<%71<{ body_6 }>> with $46 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($27<%17<Builtins::structGet:14>> is responsible)
  $50 = trace: end of call
  $51 = call $32<%40<builtinStructGet>> with $0 $41<%50<Stdout>> ($33<%18<Builtins::structGet:21>> is responsible)
  $52 = dup $51 by 3
  $53 = trace: end of call
  $54 = %34<Examples:echo:13:print:7>
  $55 = trace: start of call of $51 with $38<%56<"Hello, world!">> ($54<%34<Examples:echo:13:print:7>> is responsible, code is at $54<%34<Examples:echo:13:print:7>>)
  $56 = call $51 with $38<%56<"Hello, world!">> ($54<%34<Examples:echo:13:print:7>> is responsible)
  $57 = trace: end of call
  $58 = trace: end of call
  $59 = %29<Examples:echo:13:23>
  $60 = %82<{ body_19 }>
  $61 = trace: start of call of $60<%82<{ body_19 }>> with $34 ($59<%29<Examples:echo:13:23>> is responsible, code is at $59<%29<Examples:echo:13:23>>)
  $62 = call $60<%82<{ body_19 }>> with $34 ($59<%29<Examples:echo:13:23>> is responsible)
  $63 = dup $62 by 1
  $64 = trace: end of call
  $65 = %30<Examples:echo:13:33>
  $66 = %55<"Echo:">
  $67 = trace: start of call of $3 with $66<%55<"Echo:">> ($65<%30<Examples:echo:13:33>> is responsible, code is at $65<%30<Examples:echo:13:33>>)
  $68 = trace: start of call of $6<%80<{ body_15 }>> with $0 $41<%50<Stdout>> ($40<%33<Examples:echo:13:print:5>> is responsible, code is at $40<%33<Examples:echo:13:print:5>>)
  $69 = trace: start of call of $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible, code is at $17<%19<Builtins::structGet:5>>)
  $70 = call $18<%71<{ body_6 }>> with $15 $19<%65<"`struct | typeIs Struct` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($17<%19<Builtins::structGet:5>> is responsible)
  $71 = trace: end of call
  $72 = trace: start of call of $18<%71<{ body_6 }>> with $46 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($27<%17<Builtins::structGet:14>> is responsible, code is at $27<%17<Builtins::structGet:14>>)
  $73 = call $18<%71<{ body_6 }>> with $46 $28<%66<"`struct | ✨.structHasKey key` was not satisfied">> $40<%33<Examples:echo:13:print:5>> ($27<%17<Builtins::structGet:14>> is responsible)
  $74 = trace: end of call
  $75 = trace: end of call
  $76 = trace: start of call of $51 with $66<%55<"Echo:">> ($54<%34<Examples:echo:13:print:7>> is responsible, code is at $54<%34<Examples:echo:13:print:7>>)
  $77 = call $51 with $66<%55<"Echo:">> ($54<%34<Examples:echo:13:print:7>> is responsible)
  $78 = trace: end of call
  $79 = trace: end of call
  $80 = %31<Examples:echo:13:36>
  $81 = trace: tail call of $3 with $62 ($80<%31<Examples:echo:13:36>> is responsible, code is at $80<%31<Examples:echo:13:36>>)
  $82 = drop $21
  $83 = drop $30
  $84 = drop $44
  $85 = drop $49
  $86 = drop $56
  $87 = drop $70
  $88 = drop $73
  $89 = drop $77
  $90 = call $3 with $62 ($80<%31<Examples:echo:13:36>> is responsible)
body_22 (responsible $0) =
  # Original HIR IDs: Examples:echo:
  # Captured IDs: none
  $1 = %83<{ body_21 }>
