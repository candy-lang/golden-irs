# AST for module Examples:echo
assignment: struct
  identifier $6@"function"
  identifier $8@"text" = 
  call identifier $0@"use" with these arguments:
    text
      textPart $2@"Core"
assignment: identifier $60@"main" := 
  function (non-fuzzable) { identifier $12@"environment" ->
    assignment: $21@"print" = function (fuzzable) { identifier $22@"message" ->
      call struct access identifier $14@"environment".$16@"Stdout" with these arguments:
        identifier $18@"message"
    }
    assignment: identifier $29@"read" = 
      struct access identifier $25@"environment".$27@"Stdin"
    call identifier $32@"print" with these arguments:
      text
        textPart $34@"Hello, world!"
    assignment: identifier $45@"foo" = 
      call struct access identifier $38@"function".$40@"Run" with these arguments:
        identifier $42@"read"
    call identifier $48@"print" with these arguments:
      text
        textPart $50@"Echo:"
    call identifier $54@"print" with these arguments:
      identifier $56@"foo"
  }
