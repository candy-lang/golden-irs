; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::fitsInRustU128:10" = global ptr null
@"Builtins::fitsInRustU128:16" = global ptr null
@"Builtins::fitsInRustU128:5" = global ptr null
@"Builtins::fitsInRustU128:8" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitLength:11" = global ptr null
@"Builtins::intBitLength:5" = global ptr null
@"Builtins::intBitwiseAnd:11" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intBitwiseOr:11" = global ptr null
@"Builtins::intBitwiseOr:18" = global ptr null
@"Builtins::intBitwiseOr:5" = global ptr null
@"Builtins::intBitwiseXor:11" = global ptr null
@"Builtins::intBitwiseXor:18" = global ptr null
@"Builtins::intBitwiseXor:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intDivideTruncating:11" = global ptr null
@"Builtins::intDivideTruncating:17" = global ptr null
@"Builtins::intDivideTruncating:25" = global ptr null
@"Builtins::intDivideTruncating:32" = global ptr null
@"Builtins::intDivideTruncating:5" = global ptr null
@"Builtins::intModulo:11" = global ptr null
@"Builtins::intModulo:17" = global ptr null
@"Builtins::intModulo:25" = global ptr null
@"Builtins::intModulo:32" = global ptr null
@"Builtins::intModulo:5" = global ptr null
@"Builtins::intMultiply:11" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intParse:11" = global ptr null
@"Builtins::intParse:5" = global ptr null
@"Builtins::intRemainder:11" = global ptr null
@"Builtins::intRemainder:17" = global ptr null
@"Builtins::intRemainder:25" = global ptr null
@"Builtins::intRemainder:32" = global ptr null
@"Builtins::intRemainder:5" = global ptr null
@"Builtins::intShiftLeft:11" = global ptr null
@"Builtins::intShiftLeft:14" = global ptr null
@"Builtins::intShiftLeft:23" = global ptr null
@"Builtins::intShiftLeft:24" = global ptr null
@"Builtins::intShiftLeft:26:0" = global ptr null
@"Builtins::intShiftLeft:27" = global ptr null
@"Builtins::intShiftLeft:29" = global ptr null
@"Builtins::intShiftLeft:30" = global ptr null
@"Builtins::intShiftLeft:31" = global ptr null
@"Builtins::intShiftLeft:34" = global ptr null
@"Builtins::intShiftLeft:42" = global ptr null
@"Builtins::intShiftLeft:49" = global ptr null
@"Builtins::intShiftLeft:5" = global ptr null
@"Builtins::intShiftRight:11" = global ptr null
@"Builtins::intShiftRight:14" = global ptr null
@"Builtins::intShiftRight:23" = global ptr null
@"Builtins::intShiftRight:24" = global ptr null
@"Builtins::intShiftRight:26:0" = global ptr null
@"Builtins::intShiftRight:27" = global ptr null
@"Builtins::intShiftRight:29" = global ptr null
@"Builtins::intShiftRight:30" = global ptr null
@"Builtins::intShiftRight:31" = global ptr null
@"Builtins::intShiftRight:34" = global ptr null
@"Builtins::intShiftRight:42" = global ptr null
@"Builtins::intShiftRight:49" = global ptr null
@"Builtins::intShiftRight:5" = global ptr null
@"Builtins::intSubtract:11" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listFilled:10" = global ptr null
@"Builtins::listFilled:17" = global ptr null
@"Builtins::listFilled:5" = global ptr null
@"Builtins::listFilled:8" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::listRemoveAt:11" = global ptr null
@"Builtins::listRemoveAt:14" = global ptr null
@"Builtins::listRemoveAt:16" = global ptr null
@"Builtins::listRemoveAt:21" = global ptr null
@"Builtins::listRemoveAt:22" = global ptr null
@"Builtins::listRemoveAt:27" = global ptr null
@"Builtins::listRemoveAt:34" = global ptr null
@"Builtins::listRemoveAt:5" = global ptr null
@"Builtins::listReplace:11" = global ptr null
@"Builtins::listReplace:14" = global ptr null
@"Builtins::listReplace:16" = global ptr null
@"Builtins::listReplace:21" = global ptr null
@"Builtins::listReplace:22" = global ptr null
@"Builtins::listReplace:27" = global ptr null
@"Builtins::listReplace:35" = global ptr null
@"Builtins::listReplace:5" = global ptr null
@"Builtins::not:1" = global ptr null
@"Builtins::print:11" = global ptr null
@"Builtins::print:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:22" = global ptr null
@"Builtins::structGet:24:0" = global ptr null
@"Builtins::structGet:25" = global ptr null
@"Builtins::structGet:28" = global ptr null
@"Builtins::structGet:29" = global ptr null
@"Builtins::structGet:31:0" = global ptr null
@"Builtins::structGet:32" = global ptr null
@"Builtins::structGet:34" = global ptr null
@"Builtins::structGet:35" = global ptr null
@"Builtins::structGet:36" = global ptr null
@"Builtins::structGet:37" = global ptr null
@"Builtins::structGet:38" = global ptr null
@"Builtins::structGet:45" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::structGetKeys:11" = global ptr null
@"Builtins::structGetKeys:5" = global ptr null
@"Builtins::structHasKey:12" = global ptr null
@"Builtins::structHasKey:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::tagHasValue:11" = global ptr null
@"Builtins::tagHasValue:5" = global ptr null
@"Builtins::tagWithoutValue:11" = global ptr null
@"Builtins::tagWithoutValue:5" = global ptr null
@"Builtins::textCharacters:11" = global ptr null
@"Builtins::textCharacters:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Builtins::textContains:11" = global ptr null
@"Builtins::textContains:18" = global ptr null
@"Builtins::textContains:5" = global ptr null
@"Builtins::textEndsWith:11" = global ptr null
@"Builtins::textEndsWith:18" = global ptr null
@"Builtins::textEndsWith:5" = global ptr null
@"Builtins::textFromUtf8:11" = global ptr null
@"Builtins::textFromUtf8:5" = global ptr null
@"Builtins::textGetRange:11" = global ptr null
@"Builtins::textGetRange:14" = global ptr null
@"Builtins::textGetRange:16" = global ptr null
@"Builtins::textGetRange:24" = global ptr null
@"Builtins::textGetRange:25" = global ptr null
@"Builtins::textGetRange:27" = global ptr null
@"Builtins::textGetRange:33" = global ptr null
@"Builtins::textGetRange:36" = global ptr null
@"Builtins::textGetRange:38" = global ptr null
@"Builtins::textGetRange:46" = global ptr null
@"Builtins::textGetRange:47" = global ptr null
@"Builtins::textGetRange:49" = global ptr null
@"Builtins::textGetRange:5" = global ptr null
@"Builtins::textGetRange:53" = global ptr null
@"Builtins::textGetRange:55" = global ptr null
@"Builtins::textGetRange:63" = global ptr null
@"Builtins::textIsEmpty:11" = global ptr null
@"Builtins::textIsEmpty:5" = global ptr null
@"Builtins::textLength:11" = global ptr null
@"Builtins::textLength:5" = global ptr null
@"Builtins::textStartsWith:11" = global ptr null
@"Builtins::textStartsWith:18" = global ptr null
@"Builtins::textStartsWith:5" = global ptr null
@"Builtins::textTrimEnd:11" = global ptr null
@"Builtins::textTrimEnd:5" = global ptr null
@"Builtins::textTrimStart:11" = global ptr null
@"Builtins::textTrimStart:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:equality:17" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bit_length = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_bitwise_or = global ptr null
@fun_candy_builtin_int_bitwise_xor = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_divide_truncating = global ptr null
@fun_candy_builtin_int_modulo = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_parse = global ptr null
@fun_candy_builtin_int_remainder = global ptr null
@fun_candy_builtin_int_shift_left = global ptr null
@fun_candy_builtin_int_shift_right = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_filled = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_list_remove_at = global ptr null
@fun_candy_builtin_list_replace = global ptr null
@fun_candy_builtin_print = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_get_keys = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_characters = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_text_contains = global ptr null
@fun_candy_builtin_text_ends_with = global ptr null
@fun_candy_builtin_text_from_utf8 = global ptr null
@fun_candy_builtin_text_get_range = global ptr null
@fun_candy_builtin_text_is_empty = global ptr null
@fun_candy_builtin_text_length = global ptr null
@fun_candy_builtin_text_starts_with = global ptr null
@fun_candy_builtin_text_trim_end = global ptr null
@fun_candy_builtin_text_trim_start = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Equal = global ptr null
@tag_Equals = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_FunctionRun = global ptr null
@tag_GetArgumentCount = global ptr null
@tag_Greater = global ptr null
@tag_IfElse = global ptr null
@tag_Int = global ptr null
@tag_IntAdd = global ptr null
@tag_IntBitLength = global ptr null
@tag_IntBitwiseAnd = global ptr null
@tag_IntBitwiseOr = global ptr null
@tag_IntBitwiseXor = global ptr null
@tag_IntCompareTo = global ptr null
@tag_IntDivideTruncating = global ptr null
@tag_IntModulo = global ptr null
@tag_IntMultiply = global ptr null
@tag_IntParse = global ptr null
@tag_IntRemainder = global ptr null
@tag_IntShiftLeft = global ptr null
@tag_IntShiftRight = global ptr null
@tag_IntSubtract = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_ListFilled = global ptr null
@tag_ListGet = global ptr null
@tag_ListInsert = global ptr null
@tag_ListLength = global ptr null
@tag_ListRemoveAt = global ptr null
@tag_ListReplace = global ptr null
@tag_Match = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Print = global ptr null
@tag_Struct = global ptr null
@tag_StructGet = global ptr null
@tag_StructGetKeys = global ptr null
@tag_StructHasKey = global ptr null
@tag_Tag = global ptr null
@tag_TagGetValue = global ptr null
@tag_TagHasValue = global ptr null
@tag_TagWithoutValue = global ptr null
@tag_Text = global ptr null
@tag_TextCharacters = global ptr null
@tag_TextConcatenate = global ptr null
@tag_TextContains = global ptr null
@tag_TextEndsWith = global ptr null
@tag_TextFromUtf8 = global ptr null
@tag_TextGetRange = global ptr null
@tag_TextIsEmpty = global ptr null
@tag_TextLength = global ptr null
@tag_TextStartsWith = global ptr null
@tag_TextTrimEnd = global ptr null
@tag_TextTrimStart = global ptr null
@tag_ToDebugText = global ptr null
@tag_True = global ptr null
@tag_TypeOf = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_340282366920938463463374607431768211455 = global ptr null
@text_. = global ptr null
@"text_. You might want to call `shiftLeft` instead." = global ptr null
@"text_. You might want to call `shiftRight` instead." = global ptr null
@"text_Expected Equal, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected Greater, got " = global ptr null
@"text_Expected Less, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_Shifts by that much are not yet supported." = global ptr null
@"text_Struct `" = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_The shift `amount` is negative: " = global ptr null
@"text_You can't divide by zero." = global ptr null
@"text_` is missing the key `" = global ptr null
@"text_`." = global ptr null
@"text_`False` was not satisfied" = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`amount | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`bytes | typeIs List` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`dividend | typeIs Int` was not satisfied" = global ptr null
@"text_`divisor | typeIs Int` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`endExclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`endExclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`factorB | typeIs Int` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`length | isNonNegative` was not satisfied" = global ptr null
@"text_`length | typeIs Int` was not satisfied" = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`message | typeIs Text` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`pattern | typeIs Text` was not satisfied" = global ptr null
@"text_`prefix | typeIs Text` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied" = global ptr null
@"text_`startInclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`startInclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`subtrahend | typeIs Int` was not satisfied" = global ptr null
@"text_`suffix | typeIs Text` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"text_`value | isNonNegative` was not satisfied" = global ptr null
@"text_`value | typeIs Int` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then" = global ptr null
@"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__not = global ptr null
@fun_Builtins__not_1_equals_then = global ptr null
@fun_Builtins__not_1_equals_then.3 = global ptr null
@fun_Builtins__not_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__not_1_equals_else.5 = global ptr null
@2 = global ptr null
@fun_Builtins__not_1_equals_else.7 = global ptr null
@3 = global ptr null
@fun_Builtins__not_1_case-0_didNotMatch = global ptr null
@fun_Builtins__not_1_equals_then.9 = global ptr null
@fun_Builtins__not_1_equals_then.11 = global ptr null
@fun_Builtins__not_1_equals_else.13 = global ptr null
@4 = global ptr null
@fun_Builtins__not_1_equals_else.15 = global ptr null
@5 = global ptr null
@fun_Builtins__not_1_equals_else.17 = global ptr null
@6 = global ptr null
@fun_Builtins__not_1_case-1_didNotMatch = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_then = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.19 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@7 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.21 = global ptr null
@8 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.23 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.25 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.27 = global ptr null
@9 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.29 = global ptr null
@10 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.31 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.33 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.35 = global ptr null
@11 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.37 = global ptr null
@12 = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.39 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@13 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.41 = global ptr null
@14 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.43 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.45 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.47 = global ptr null
@15 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.49 = global ptr null
@16 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.51 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.53 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.55 = global ptr null
@17 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.57 = global ptr null
@18 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__equals = global ptr null
@fun_Builtins__functionRun = global ptr null
@fun_Builtins__getArgumentCount = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.59 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@19 = global ptr null
@fun_Builtins__ifElse_1_equals_else.61 = global ptr null
@20 = global ptr null
@fun_Builtins__ifElse_1_equals_else.63 = global ptr null
@21 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.65 = global ptr null
@fun_Builtins__ifElse_1_equals_then.67 = global ptr null
@fun_Builtins__ifElse_1_equals_else.69 = global ptr null
@22 = global ptr null
@fun_Builtins__ifElse_1_equals_else.71 = global ptr null
@23 = global ptr null
@fun_Builtins__ifElse_1_equals_else.73 = global ptr null
@24 = global ptr null
@fun_Builtins__ifElse_1_case-0_didNotMatch = global ptr null
@fun_Builtins__intAdd = global ptr null
@fun_Builtins__intBitLength = global ptr null
@fun_Builtins__intBitwiseAnd = global ptr null
@fun_Builtins__intBitwiseOr = global ptr null
@fun_Builtins__intBitwiseXor = global ptr null
@fun_Builtins__intCompareTo = global ptr null
@fun_Builtins__intDivideTruncating = global ptr null
@fun_Builtins__intModulo = global ptr null
@fun_Builtins__intMultiply = global ptr null
@fun_Builtins__intParse = global ptr null
@fun_Builtins__intRemainder = global ptr null
@fun_Builtins__intShiftLeft = global ptr null
@fun_Builtins__intShiftLeft_25 = global ptr null
@fun_Builtins__intShiftLeft_26 = global ptr null
@fun_Builtins__intShiftRight = global ptr null
@fun_Builtins__intShiftRight_25 = global ptr null
@fun_Builtins__intShiftRight_26 = global ptr null
@fun_Builtins__intSubtract = global ptr null
@fun_Builtins__listFilled = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Builtins__listInsert = global ptr null
@fun_Builtins__listLength = global ptr null
@fun_Builtins__listRemoveAt = global ptr null
@fun_Builtins__listReplace = global ptr null
@fun_Builtins__print = global ptr null
@fun_Builtins__structGet = global ptr null
@fun_Builtins__structGet_23 = global ptr null
@fun_Builtins__structGet_24 = global ptr null
@fun_Builtins__structGet_30 = global ptr null
@fun_Builtins__structGet_31 = global ptr null
@fun_Builtins__structGetKeys = global ptr null
@fun_Builtins__structHasKey = global ptr null
@fun_Builtins__tagGetValue = global ptr null
@fun_Builtins__tagHasValue = global ptr null
@fun_Builtins__tagWithoutValue = global ptr null
@fun_Builtins__textCharacters = global ptr null
@fun_Builtins__textConcatenate = global ptr null
@fun_Builtins__textContains = global ptr null
@fun_Builtins__textEndsWith = global ptr null
@fun_Builtins__textFromUtf8 = global ptr null
@fun_Builtins__textGetRange = global ptr null
@fun_Builtins__textIsEmpty = global ptr null
@fun_Builtins__textLength = global ptr null
@fun_Builtins__textStartsWith = global ptr null
@fun_Builtins__textTrimEnd = global ptr null
@fun_Builtins__textTrimStart = global ptr null
@fun_Builtins__toDebugText = global ptr null
@fun_Builtins__typeOf = global ptr null
@"Core:type:28" = global ptr null
@"Core:type:is:2" = global ptr null
@"Core:type:is:5" = global ptr null
@"text_`typeOf type | equals Tag` was not satisfied" = global ptr null
@"Core:type:is:7" = global ptr null
@"Core:type:is:11" = global ptr null
@"Core:type:is:13" = global ptr null
@tag_Is = global ptr null
@"Core:function:is:7" = global ptr null
@"Core:function:is:10" = global ptr null
@"Core:function:38" = global ptr null
@"Core:function:is0:7" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:11:5" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is1:7" = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:11:5" = global ptr null
@"Core:function:is1:13" = global ptr null
@"Core:function:is2:7" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@num_2 = global ptr null
@"Core:function:is2:11:5" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:is3:7" = global ptr null
@"Core:function:is3:11:3" = global ptr null
@num_3 = global ptr null
@"Core:function:is3:11:5" = global ptr null
@"Core:function:is3:13" = global ptr null
@"Core:function:is4:7" = global ptr null
@"Core:function:is4:11:3" = global ptr null
@num_4 = global ptr null
@"Core:function:is4:11:5" = global ptr null
@"Core:function:is4:13" = global ptr null
@"Core:function:is5:7" = global ptr null
@"Core:function:is5:11:3" = global ptr null
@num_5 = global ptr null
@"Core:function:is5:11:5" = global ptr null
@"Core:function:is5:13" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:function:run:12" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:doNotRun:4" = global ptr null
@tag_DoNotRun = global ptr null
@tag_Is4 = global ptr null
@tag_Is1 = global ptr null
@tag_Run = global ptr null
@tag_Is0 = global ptr null
@tag_Is3 = global ptr null
@tag_Is2 = global ptr null
@tag_Is5 = global ptr null
@"Core:controlFlow:59" = global ptr null
@"Core:int:72" = global ptr null
@"Core:int:81" = global ptr null
@"Core:int:90" = global ptr null
@"Core:int:99" = global ptr null
@"Core:int:108" = global ptr null
@"Core:int:117" = global ptr null
@"Core:int:126" = global ptr null
@"Core:int:135" = global ptr null
@"Core:int:144" = global ptr null
@"Core:int:153" = global ptr null
@"Core:int:162" = global ptr null
@"Core:int:171" = global ptr null
@"Core:int:180" = global ptr null
@"Core:tag:48" = global ptr null
@"Core:tag:57" = global ptr null
@"Core:tag:66" = global ptr null
@"Core:list:89" = global ptr null
@"Core:list:98" = global ptr null
@"Core:list:107" = global ptr null
@"Core:list:116" = global ptr null
@"Core:list:125" = global ptr null
@"Core:list:134" = global ptr null
@"Core:text:341" = global ptr null
@"Core:text:350" = global ptr null
@"Core:text:359" = global ptr null
@"Core:text:368" = global ptr null
@"Core:text:377" = global ptr null
@"Core:text:386" = global ptr null
@"Core:text:395" = global ptr null
@"Core:text:404" = global ptr null
@"Core:text:413" = global ptr null
@"Core:text:422" = global ptr null
@"Core:text:431" = global ptr null
@fun_Core_type_is = global ptr null
@fun_Core_function_is = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Core_function_is3 = global ptr null
@fun_Core_function_is3_11 = global ptr null
@fun_Core_function_is4 = global ptr null
@fun_Core_function_is4_11 = global ptr null
@fun_Core_function_is5 = global ptr null
@fun_Core_function_is5_11 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_function_is0_11.75 = global ptr null
@fun_Core_function_doNotRun = global ptr null
@fun_Core_function_is0_11.77 = global ptr null
@tag_Stdout = global ptr null
@"Examples:echo:11:print:7" = global ptr null
@"Examples:echo:11:print:9" = global ptr null
@tag_Stdin = global ptr null
@"Examples:echo:11:7" = global ptr null
@"text_Hello, world!" = global ptr null
@"Examples:echo:11:25" = global ptr null
@"Examples:echo:11:27" = global ptr null
@"text_Echo:" = global ptr null
@fun_Examples_echo_11 = global ptr null
@tag_Main = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:10\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::fitsInRustU128:10", align 8
  %4 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::fitsInRustU128:16", align 8
  %6 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:5\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::fitsInRustU128:5", align 8
  %8 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:8\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::fitsInRustU128:8", align 8
  %10 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::functionRun:11", align 8
  %12 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::functionRun:16", align 8
  %14 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::functionRun:22", align 8
  %16 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::functionRun:5", align 8
  %18 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::getArgumentCount:11", align 8
  %20 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::getArgumentCount:5", align 8
  %22 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:1", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:11", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:14", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:19", align 8
  %30 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:25", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::ifElse:28", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::ifElse:33", align 8
  %36 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::ifElse:41", align 8
  %38 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::ifElse:5", align 8
  %40 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intAdd:11", align 8
  %42 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intAdd:18", align 8
  %44 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intAdd:5", align 8
  %46 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitLength:11\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intBitLength:11", align 8
  %48 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intBitLength:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intBitLength:5", align 8
  %50 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intBitwiseAnd:11", align 8
  %52 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intBitwiseAnd:18", align 8
  %54 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intBitwiseAnd:5", align 8
  %56 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseOr:11\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::intBitwiseOr:11", align 8
  %58 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseOr:18\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::intBitwiseOr:18", align 8
  %60 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intBitwiseOr:5\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::intBitwiseOr:5", align 8
  %62 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseXor:11\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::intBitwiseXor:11", align 8
  %64 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseXor:18\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::intBitwiseXor:18", align 8
  %66 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseXor:5\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::intBitwiseXor:5", align 8
  %68 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::intCompareTo:11", align 8
  %70 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::intCompareTo:18", align 8
  %72 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::intCompareTo:5", align 8
  %74 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:11\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::intDivideTruncating:11", align 8
  %76 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:17\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::intDivideTruncating:17", align 8
  %78 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:25\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::intDivideTruncating:25", align 8
  %80 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:32\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::intDivideTruncating:32", align 8
  %82 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::intDivideTruncating:5\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::intDivideTruncating:5", align 8
  %84 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:11\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::intModulo:11", align 8
  %86 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:17\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::intModulo:17", align 8
  %88 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:25\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::intModulo:25", align 8
  %90 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::intModulo:32\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::intModulo:32", align 8
  %92 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intModulo:5\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::intModulo:5", align 8
  %94 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:11\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::intMultiply:11", align 8
  %96 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::intMultiply:18", align 8
  %98 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::intMultiply:5", align 8
  %100 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intParse:11\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::intParse:11", align 8
  %102 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::intParse:5\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::intParse:5", align 8
  %104 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:11\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::intRemainder:11", align 8
  %106 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:17\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::intRemainder:17", align 8
  %108 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:25\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::intRemainder:25", align 8
  %110 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:32\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::intRemainder:32", align 8
  %112 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intRemainder:5\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::intRemainder:5", align 8
  %114 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:11\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::intShiftLeft:11", align 8
  %116 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:14\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::intShiftLeft:14", align 8
  %118 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:23\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::intShiftLeft:23", align 8
  %120 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:24\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::intShiftLeft:24", align 8
  %122 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::intShiftLeft:26:0\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::intShiftLeft:26:0", align 8
  %124 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:27\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::intShiftLeft:27", align 8
  %126 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:29\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::intShiftLeft:29", align 8
  %128 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:30\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Builtins::intShiftLeft:30", align 8
  %130 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:31\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Builtins::intShiftLeft:31", align 8
  %132 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:34\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Builtins::intShiftLeft:34", align 8
  %134 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:42\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Builtins::intShiftLeft:42", align 8
  %136 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftLeft:49\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Builtins::intShiftLeft:49", align 8
  %138 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intShiftLeft:5\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Builtins::intShiftLeft:5", align 8
  %140 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:11\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Builtins::intShiftRight:11", align 8
  %142 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:14\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Builtins::intShiftRight:14", align 8
  %144 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:23\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Builtins::intShiftRight:23", align 8
  %146 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:24\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Builtins::intShiftRight:24", align 8
  %148 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::intShiftRight:26:0\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Builtins::intShiftRight:26:0", align 8
  %150 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:27\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Builtins::intShiftRight:27", align 8
  %152 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:29\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Builtins::intShiftRight:29", align 8
  %154 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:30\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Builtins::intShiftRight:30", align 8
  %156 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:31\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Builtins::intShiftRight:31", align 8
  %158 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:34\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Builtins::intShiftRight:34", align 8
  %160 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:42\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Builtins::intShiftRight:42", align 8
  %162 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:49\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Builtins::intShiftRight:49", align 8
  %164 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftRight:5\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Builtins::intShiftRight:5", align 8
  %166 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:11\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Builtins::intSubtract:11", align 8
  %168 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Builtins::intSubtract:18", align 8
  %170 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Builtins::intSubtract:5", align 8
  %172 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %174 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %176 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %178 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %180 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Builtins::isNonNegative:12", align 8
  %182 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Builtins::isNonNegative:13", align 8
  %184 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Builtins::isNonNegative:5", align 8
  %186 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listFilled:10\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Builtins::listFilled:10", align 8
  %188 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listFilled:17\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Builtins::listFilled:17", align 8
  %190 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listFilled:5\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Builtins::listFilled:5", align 8
  %192 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listFilled:8\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Builtins::listFilled:8", align 8
  %194 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Builtins::listGet:11", align 8
  %196 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Builtins::listGet:14", align 8
  %198 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Builtins::listGet:16", align 8
  %200 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Builtins::listGet:24", align 8
  %202 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Builtins::listGet:25", align 8
  %204 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Builtins::listGet:30", align 8
  %206 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Builtins::listGet:37", align 8
  %208 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Builtins::listGet:5", align 8
  %210 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Builtins::listInsert:11", align 8
  %212 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Builtins::listInsert:14", align 8
  %214 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Builtins::listInsert:16", align 8
  %216 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Builtins::listInsert:24", align 8
  %218 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Builtins::listInsert:25", align 8
  %220 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Builtins::listInsert:27", align 8
  %222 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Builtins::listInsert:35", align 8
  %224 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Builtins::listInsert:5", align 8
  %226 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Builtins::listLength:11", align 8
  %228 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Builtins::listLength:5", align 8
  %230 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:11\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Builtins::listRemoveAt:11", align 8
  %232 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:14\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Builtins::listRemoveAt:14", align 8
  %234 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:16\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Builtins::listRemoveAt:16", align 8
  %236 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:21\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Builtins::listRemoveAt:21", align 8
  %238 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:22\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Builtins::listRemoveAt:22", align 8
  %240 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:27\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Builtins::listRemoveAt:27", align 8
  %242 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::listRemoveAt:34\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Builtins::listRemoveAt:34", align 8
  %244 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listRemoveAt:5\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Builtins::listRemoveAt:5", align 8
  %246 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:11\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Builtins::listReplace:11", align 8
  %248 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:14\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Builtins::listReplace:14", align 8
  %250 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:16\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Builtins::listReplace:16", align 8
  %252 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:21\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Builtins::listReplace:21", align 8
  %254 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:22\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Builtins::listReplace:22", align 8
  %256 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:27\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Builtins::listReplace:27", align 8
  %258 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::listReplace:35\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Builtins::listReplace:35", align 8
  %260 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listReplace:5\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Builtins::listReplace:5", align 8
  %262 = alloca i8, i64 16, align 1
  store [16 x i8] c"Builtins::not:1\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Builtins::not:1", align 8
  %264 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::print:11\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Builtins::print:11", align 8
  %266 = alloca i8, i64 18, align 1
  store [18 x i8] c"Builtins::print:5\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Builtins::print:5", align 8
  %268 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Builtins::structGet:12", align 8
  %270 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Builtins::structGet:21", align 8
  %272 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:22\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Builtins::structGet:22", align 8
  %274 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structGet:24:0\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Builtins::structGet:24:0", align 8
  %276 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:25\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Builtins::structGet:25", align 8
  %278 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:28\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Builtins::structGet:28", align 8
  %280 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:29\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Builtins::structGet:29", align 8
  %282 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structGet:31:0\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Builtins::structGet:31:0", align 8
  %284 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:32\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Builtins::structGet:32", align 8
  %286 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:34\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Builtins::structGet:34", align 8
  %288 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:35\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Builtins::structGet:35", align 8
  %290 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:36\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Builtins::structGet:36", align 8
  %292 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:37\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Builtins::structGet:37", align 8
  %294 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:38\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Builtins::structGet:38", align 8
  %296 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:45\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Builtins::structGet:45", align 8
  %298 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"Builtins::structGet:5", align 8
  %300 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::structGetKeys:11\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"Builtins::structGetKeys:11", align 8
  %302 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::structGetKeys:5\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"Builtins::structGetKeys:5", align 8
  %304 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::structHasKey:12\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"Builtins::structHasKey:12", align 8
  %306 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::structHasKey:5\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"Builtins::structHasKey:5", align 8
  %308 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"Builtins::tagGetValue:11", align 8
  %310 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"Builtins::tagGetValue:13", align 8
  %312 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"Builtins::tagGetValue:19", align 8
  %314 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"Builtins::tagGetValue:5", align 8
  %316 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagHasValue:11\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"Builtins::tagHasValue:11", align 8
  %318 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagHasValue:5\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"Builtins::tagHasValue:5", align 8
  %320 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::tagWithoutValue:11\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"Builtins::tagWithoutValue:11", align 8
  %322 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::tagWithoutValue:5\00", ptr %322, align 1
  %323 = call ptr @make_candy_text(ptr %322)
  store ptr %323, ptr @"Builtins::tagWithoutValue:5", align 8
  %324 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textCharacters:11\00", ptr %324, align 1
  %325 = call ptr @make_candy_text(ptr %324)
  store ptr %325, ptr @"Builtins::textCharacters:11", align 8
  %326 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textCharacters:5\00", ptr %326, align 1
  %327 = call ptr @make_candy_text(ptr %326)
  store ptr %327, ptr @"Builtins::textCharacters:5", align 8
  %328 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %328, align 1
  %329 = call ptr @make_candy_text(ptr %328)
  store ptr %329, ptr @"Builtins::textConcatenate:11", align 8
  %330 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %330, align 1
  %331 = call ptr @make_candy_text(ptr %330)
  store ptr %331, ptr @"Builtins::textConcatenate:18", align 8
  %332 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %332, align 1
  %333 = call ptr @make_candy_text(ptr %332)
  store ptr %333, ptr @"Builtins::textConcatenate:5", align 8
  %334 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textContains:11\00", ptr %334, align 1
  %335 = call ptr @make_candy_text(ptr %334)
  store ptr %335, ptr @"Builtins::textContains:11", align 8
  %336 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textContains:18\00", ptr %336, align 1
  %337 = call ptr @make_candy_text(ptr %336)
  store ptr %337, ptr @"Builtins::textContains:18", align 8
  %338 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textContains:5\00", ptr %338, align 1
  %339 = call ptr @make_candy_text(ptr %338)
  store ptr %339, ptr @"Builtins::textContains:5", align 8
  %340 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textEndsWith:11\00", ptr %340, align 1
  %341 = call ptr @make_candy_text(ptr %340)
  store ptr %341, ptr @"Builtins::textEndsWith:11", align 8
  %342 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textEndsWith:18\00", ptr %342, align 1
  %343 = call ptr @make_candy_text(ptr %342)
  store ptr %343, ptr @"Builtins::textEndsWith:18", align 8
  %344 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textEndsWith:5\00", ptr %344, align 1
  %345 = call ptr @make_candy_text(ptr %344)
  store ptr %345, ptr @"Builtins::textEndsWith:5", align 8
  %346 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textFromUtf8:11\00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"Builtins::textFromUtf8:11", align 8
  %348 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textFromUtf8:5\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @"Builtins::textFromUtf8:5", align 8
  %350 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:11\00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"Builtins::textGetRange:11", align 8
  %352 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:14\00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"Builtins::textGetRange:14", align 8
  %354 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:16\00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"Builtins::textGetRange:16", align 8
  %356 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:24\00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"Builtins::textGetRange:24", align 8
  %358 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:25\00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"Builtins::textGetRange:25", align 8
  %360 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:27\00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"Builtins::textGetRange:27", align 8
  %362 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:33\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"Builtins::textGetRange:33", align 8
  %364 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:36\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"Builtins::textGetRange:36", align 8
  %366 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:38\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"Builtins::textGetRange:38", align 8
  %368 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:46\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"Builtins::textGetRange:46", align 8
  %370 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:47\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"Builtins::textGetRange:47", align 8
  %372 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:49\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"Builtins::textGetRange:49", align 8
  %374 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textGetRange:5\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"Builtins::textGetRange:5", align 8
  %376 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:53\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"Builtins::textGetRange:53", align 8
  %378 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:55\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"Builtins::textGetRange:55", align 8
  %380 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:63\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"Builtins::textGetRange:63", align 8
  %382 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textIsEmpty:11\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"Builtins::textIsEmpty:11", align 8
  %384 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textIsEmpty:5\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"Builtins::textIsEmpty:5", align 8
  %386 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textLength:11\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"Builtins::textLength:11", align 8
  %388 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::textLength:5\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"Builtins::textLength:5", align 8
  %390 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:11\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"Builtins::textStartsWith:11", align 8
  %392 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:18\00", ptr %392, align 1
  %393 = call ptr @make_candy_text(ptr %392)
  store ptr %393, ptr @"Builtins::textStartsWith:18", align 8
  %394 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textStartsWith:5\00", ptr %394, align 1
  %395 = call ptr @make_candy_text(ptr %394)
  store ptr %395, ptr @"Builtins::textStartsWith:5", align 8
  %396 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textTrimEnd:11\00", ptr %396, align 1
  %397 = call ptr @make_candy_text(ptr %396)
  store ptr %397, ptr @"Builtins::textTrimEnd:11", align 8
  %398 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textTrimEnd:5\00", ptr %398, align 1
  %399 = call ptr @make_candy_text(ptr %398)
  store ptr %399, ptr @"Builtins::textTrimEnd:5", align 8
  %400 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textTrimStart:11\00", ptr %400, align 1
  %401 = call ptr @make_candy_text(ptr %400)
  store ptr %401, ptr @"Builtins::textTrimStart:11", align 8
  %402 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textTrimStart:5\00", ptr %402, align 1
  %403 = call ptr @make_candy_text(ptr %402)
  store ptr %403, ptr @"Builtins::textTrimStart:5", align 8
  %404 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %404, align 1
  %405 = call ptr @make_candy_text(ptr %404)
  store ptr %405, ptr @"Builtins::toDebugText:5", align 8
  %406 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %406, align 1
  %407 = call ptr @make_candy_text(ptr %406)
  store ptr %407, ptr @"Builtins::typeIs:19", align 8
  %408 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %408, align 1
  %409 = call ptr @make_candy_text(ptr %408)
  store ptr %409, ptr @"Builtins::typeIs:25", align 8
  %410 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %410, align 1
  %411 = call ptr @make_candy_text(ptr %410)
  store ptr %411, ptr @"Builtins::typeOf:5", align 8
  %412 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:equality:17\00", ptr %412, align 1
  %413 = call ptr @make_candy_text(ptr %412)
  store ptr %413, ptr @"Core:equality:17", align 8
  %414 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %414, align 1
  %415 = call ptr @make_candy_text(ptr %414)
  store ptr %415, ptr @"anonymous:$generated::needs", align 8
  %416 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %416, ptr @fun_candy_builtin_equals, align 8
  %417 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %417, ptr @fun_candy_builtin_get_argument_count, align 8
  %418 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %418, ptr @fun_candy_builtin_if_else, align 8
  %419 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %419, ptr @fun_candy_builtin_int_add, align 8
  %420 = call ptr @make_candy_function(ptr @candy_builtin_int_bit_length, ptr null, i64 0)
  store ptr %420, ptr @fun_candy_builtin_int_bit_length, align 8
  %421 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %421, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %422 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_or, ptr null, i64 0)
  store ptr %422, ptr @fun_candy_builtin_int_bitwise_or, align 8
  %423 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_xor, ptr null, i64 0)
  store ptr %423, ptr @fun_candy_builtin_int_bitwise_xor, align 8
  %424 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %424, ptr @fun_candy_builtin_int_compare_to, align 8
  %425 = call ptr @make_candy_function(ptr @candy_builtin_int_divide_truncating, ptr null, i64 0)
  store ptr %425, ptr @fun_candy_builtin_int_divide_truncating, align 8
  %426 = call ptr @make_candy_function(ptr @candy_builtin_int_modulo, ptr null, i64 0)
  store ptr %426, ptr @fun_candy_builtin_int_modulo, align 8
  %427 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %427, ptr @fun_candy_builtin_int_multiply, align 8
  %428 = call ptr @make_candy_function(ptr @candy_builtin_int_parse, ptr null, i64 0)
  store ptr %428, ptr @fun_candy_builtin_int_parse, align 8
  %429 = call ptr @make_candy_function(ptr @candy_builtin_int_remainder, ptr null, i64 0)
  store ptr %429, ptr @fun_candy_builtin_int_remainder, align 8
  %430 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_left, ptr null, i64 0)
  store ptr %430, ptr @fun_candy_builtin_int_shift_left, align 8
  %431 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_right, ptr null, i64 0)
  store ptr %431, ptr @fun_candy_builtin_int_shift_right, align 8
  %432 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %432, ptr @fun_candy_builtin_int_subtract, align 8
  %433 = call ptr @make_candy_function(ptr @candy_builtin_list_filled, ptr null, i64 0)
  store ptr %433, ptr @fun_candy_builtin_list_filled, align 8
  %434 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %434, ptr @fun_candy_builtin_list_get, align 8
  %435 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %435, ptr @fun_candy_builtin_list_insert, align 8
  %436 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %436, ptr @fun_candy_builtin_list_length, align 8
  %437 = call ptr @make_candy_function(ptr @candy_builtin_list_remove_at, ptr null, i64 0)
  store ptr %437, ptr @fun_candy_builtin_list_remove_at, align 8
  %438 = call ptr @make_candy_function(ptr @candy_builtin_list_replace, ptr null, i64 0)
  store ptr %438, ptr @fun_candy_builtin_list_replace, align 8
  %439 = call ptr @make_candy_function(ptr @candy_builtin_print, ptr null, i64 0)
  store ptr %439, ptr @fun_candy_builtin_print, align 8
  %440 = call ptr @make_candy_function(ptr @candy_builtin_struct_get.1, ptr null, i64 0)
  store ptr %440, ptr @fun_candy_builtin_struct_get, align 8
  %441 = call ptr @make_candy_function(ptr @candy_builtin_struct_get_keys, ptr null, i64 0)
  store ptr %441, ptr @fun_candy_builtin_struct_get_keys, align 8
  %442 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %442, ptr @fun_candy_builtin_struct_has_key, align 8
  %443 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %443, ptr @fun_candy_builtin_tag_get_value, align 8
  %444 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %444, ptr @fun_candy_builtin_tag_has_value, align 8
  %445 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %445, ptr @fun_candy_builtin_tag_without_value, align 8
  %446 = call ptr @make_candy_function(ptr @candy_builtin_text_characters, ptr null, i64 0)
  store ptr %446, ptr @fun_candy_builtin_text_characters, align 8
  %447 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %447, ptr @fun_candy_builtin_text_concatenate, align 8
  %448 = call ptr @make_candy_function(ptr @candy_builtin_text_contains, ptr null, i64 0)
  store ptr %448, ptr @fun_candy_builtin_text_contains, align 8
  %449 = call ptr @make_candy_function(ptr @candy_builtin_text_ends_with, ptr null, i64 0)
  store ptr %449, ptr @fun_candy_builtin_text_ends_with, align 8
  %450 = call ptr @make_candy_function(ptr @candy_builtin_text_from_utf8, ptr null, i64 0)
  store ptr %450, ptr @fun_candy_builtin_text_from_utf8, align 8
  %451 = call ptr @make_candy_function(ptr @candy_builtin_text_get_range, ptr null, i64 0)
  store ptr %451, ptr @fun_candy_builtin_text_get_range, align 8
  %452 = call ptr @make_candy_function(ptr @candy_builtin_text_is_empty, ptr null, i64 0)
  store ptr %452, ptr @fun_candy_builtin_text_is_empty, align 8
  %453 = call ptr @make_candy_function(ptr @candy_builtin_text_length, ptr null, i64 0)
  store ptr %453, ptr @fun_candy_builtin_text_length, align 8
  %454 = call ptr @make_candy_function(ptr @candy_builtin_text_starts_with, ptr null, i64 0)
  store ptr %454, ptr @fun_candy_builtin_text_starts_with, align 8
  %455 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_end, ptr null, i64 0)
  store ptr %455, ptr @fun_candy_builtin_text_trim_end, align 8
  %456 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_start, ptr null, i64 0)
  store ptr %456, ptr @fun_candy_builtin_text_trim_start, align 8
  %457 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %457, ptr @fun_candy_builtin_to_debug_text, align 8
  %458 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %458, ptr @fun_candy_builtin_type_of, align 8
  %459 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %459, align 1
  %460 = call ptr @make_candy_tag(ptr %459, ptr null)
  store ptr %460, ptr @tag_Equal, align 8
  %461 = alloca i8, i64 7, align 1
  store [7 x i8] c"Equals\00", ptr %461, align 1
  %462 = call ptr @make_candy_tag(ptr %461, ptr null)
  store ptr %462, ptr @tag_Equals, align 8
  %463 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %463, align 1
  %464 = call ptr @make_candy_tag(ptr %463, ptr null)
  store ptr %464, ptr @tag_False, align 8
  %465 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %465, align 1
  %466 = call ptr @make_candy_tag(ptr %465, ptr null)
  store ptr %466, ptr @tag_Function, align 8
  %467 = alloca i8, i64 12, align 1
  store [12 x i8] c"FunctionRun\00", ptr %467, align 1
  %468 = call ptr @make_candy_tag(ptr %467, ptr null)
  store ptr %468, ptr @tag_FunctionRun, align 8
  %469 = alloca i8, i64 17, align 1
  store [17 x i8] c"GetArgumentCount\00", ptr %469, align 1
  %470 = call ptr @make_candy_tag(ptr %469, ptr null)
  store ptr %470, ptr @tag_GetArgumentCount, align 8
  %471 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %471, align 1
  %472 = call ptr @make_candy_tag(ptr %471, ptr null)
  store ptr %472, ptr @tag_Greater, align 8
  %473 = alloca i8, i64 7, align 1
  store [7 x i8] c"IfElse\00", ptr %473, align 1
  %474 = call ptr @make_candy_tag(ptr %473, ptr null)
  store ptr %474, ptr @tag_IfElse, align 8
  %475 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %475, align 1
  %476 = call ptr @make_candy_tag(ptr %475, ptr null)
  store ptr %476, ptr @tag_Int, align 8
  %477 = alloca i8, i64 7, align 1
  store [7 x i8] c"IntAdd\00", ptr %477, align 1
  %478 = call ptr @make_candy_tag(ptr %477, ptr null)
  store ptr %478, ptr @tag_IntAdd, align 8
  %479 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntBitLength\00", ptr %479, align 1
  %480 = call ptr @make_candy_tag(ptr %479, ptr null)
  store ptr %480, ptr @tag_IntBitLength, align 8
  %481 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntBitwiseAnd\00", ptr %481, align 1
  %482 = call ptr @make_candy_tag(ptr %481, ptr null)
  store ptr %482, ptr @tag_IntBitwiseAnd, align 8
  %483 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntBitwiseOr\00", ptr %483, align 1
  %484 = call ptr @make_candy_tag(ptr %483, ptr null)
  store ptr %484, ptr @tag_IntBitwiseOr, align 8
  %485 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntBitwiseXor\00", ptr %485, align 1
  %486 = call ptr @make_candy_tag(ptr %485, ptr null)
  store ptr %486, ptr @tag_IntBitwiseXor, align 8
  %487 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntCompareTo\00", ptr %487, align 1
  %488 = call ptr @make_candy_tag(ptr %487, ptr null)
  store ptr %488, ptr @tag_IntCompareTo, align 8
  %489 = alloca i8, i64 20, align 1
  store [20 x i8] c"IntDivideTruncating\00", ptr %489, align 1
  %490 = call ptr @make_candy_tag(ptr %489, ptr null)
  store ptr %490, ptr @tag_IntDivideTruncating, align 8
  %491 = alloca i8, i64 10, align 1
  store [10 x i8] c"IntModulo\00", ptr %491, align 1
  %492 = call ptr @make_candy_tag(ptr %491, ptr null)
  store ptr %492, ptr @tag_IntModulo, align 8
  %493 = alloca i8, i64 12, align 1
  store [12 x i8] c"IntMultiply\00", ptr %493, align 1
  %494 = call ptr @make_candy_tag(ptr %493, ptr null)
  store ptr %494, ptr @tag_IntMultiply, align 8
  %495 = alloca i8, i64 9, align 1
  store [9 x i8] c"IntParse\00", ptr %495, align 1
  %496 = call ptr @make_candy_tag(ptr %495, ptr null)
  store ptr %496, ptr @tag_IntParse, align 8
  %497 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntRemainder\00", ptr %497, align 1
  %498 = call ptr @make_candy_tag(ptr %497, ptr null)
  store ptr %498, ptr @tag_IntRemainder, align 8
  %499 = alloca i8, i64 13, align 1
  store [13 x i8] c"IntShiftLeft\00", ptr %499, align 1
  %500 = call ptr @make_candy_tag(ptr %499, ptr null)
  store ptr %500, ptr @tag_IntShiftLeft, align 8
  %501 = alloca i8, i64 14, align 1
  store [14 x i8] c"IntShiftRight\00", ptr %501, align 1
  %502 = call ptr @make_candy_tag(ptr %501, ptr null)
  store ptr %502, ptr @tag_IntShiftRight, align 8
  %503 = alloca i8, i64 12, align 1
  store [12 x i8] c"IntSubtract\00", ptr %503, align 1
  %504 = call ptr @make_candy_tag(ptr %503, ptr null)
  store ptr %504, ptr @tag_IntSubtract, align 8
  %505 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %505, align 1
  %506 = call ptr @make_candy_tag(ptr %505, ptr null)
  store ptr %506, ptr @tag_Less, align 8
  %507 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %507, align 1
  %508 = call ptr @make_candy_tag(ptr %507, ptr null)
  store ptr %508, ptr @tag_List, align 8
  %509 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListFilled\00", ptr %509, align 1
  %510 = call ptr @make_candy_tag(ptr %509, ptr null)
  store ptr %510, ptr @tag_ListFilled, align 8
  %511 = alloca i8, i64 8, align 1
  store [8 x i8] c"ListGet\00", ptr %511, align 1
  %512 = call ptr @make_candy_tag(ptr %511, ptr null)
  store ptr %512, ptr @tag_ListGet, align 8
  %513 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListInsert\00", ptr %513, align 1
  %514 = call ptr @make_candy_tag(ptr %513, ptr null)
  store ptr %514, ptr @tag_ListInsert, align 8
  %515 = alloca i8, i64 11, align 1
  store [11 x i8] c"ListLength\00", ptr %515, align 1
  %516 = call ptr @make_candy_tag(ptr %515, ptr null)
  store ptr %516, ptr @tag_ListLength, align 8
  %517 = alloca i8, i64 13, align 1
  store [13 x i8] c"ListRemoveAt\00", ptr %517, align 1
  %518 = call ptr @make_candy_tag(ptr %517, ptr null)
  store ptr %518, ptr @tag_ListRemoveAt, align 8
  %519 = alloca i8, i64 12, align 1
  store [12 x i8] c"ListReplace\00", ptr %519, align 1
  %520 = call ptr @make_candy_tag(ptr %519, ptr null)
  store ptr %520, ptr @tag_ListReplace, align 8
  %521 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %521, align 1
  %522 = call ptr @make_candy_tag(ptr %521, ptr null)
  store ptr %522, ptr @tag_Match, align 8
  %523 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %523, align 1
  %524 = call ptr @make_candy_tag(ptr %523, ptr null)
  store ptr %524, ptr @tag_NoMatch, align 8
  %525 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %525, align 1
  %526 = call ptr @make_candy_tag(ptr %525, ptr null)
  store ptr %526, ptr @tag_Nothing, align 8
  %527 = alloca i8, i64 6, align 1
  store [6 x i8] c"Print\00", ptr %527, align 1
  %528 = call ptr @make_candy_tag(ptr %527, ptr null)
  store ptr %528, ptr @tag_Print, align 8
  %529 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %529, align 1
  %530 = call ptr @make_candy_tag(ptr %529, ptr null)
  store ptr %530, ptr @tag_Struct, align 8
  %531 = alloca i8, i64 10, align 1
  store [10 x i8] c"StructGet\00", ptr %531, align 1
  %532 = call ptr @make_candy_tag(ptr %531, ptr null)
  store ptr %532, ptr @tag_StructGet, align 8
  %533 = alloca i8, i64 14, align 1
  store [14 x i8] c"StructGetKeys\00", ptr %533, align 1
  %534 = call ptr @make_candy_tag(ptr %533, ptr null)
  store ptr %534, ptr @tag_StructGetKeys, align 8
  %535 = alloca i8, i64 13, align 1
  store [13 x i8] c"StructHasKey\00", ptr %535, align 1
  %536 = call ptr @make_candy_tag(ptr %535, ptr null)
  store ptr %536, ptr @tag_StructHasKey, align 8
  %537 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %537, align 1
  %538 = call ptr @make_candy_tag(ptr %537, ptr null)
  store ptr %538, ptr @tag_Tag, align 8
  %539 = alloca i8, i64 12, align 1
  store [12 x i8] c"TagGetValue\00", ptr %539, align 1
  %540 = call ptr @make_candy_tag(ptr %539, ptr null)
  store ptr %540, ptr @tag_TagGetValue, align 8
  %541 = alloca i8, i64 12, align 1
  store [12 x i8] c"TagHasValue\00", ptr %541, align 1
  %542 = call ptr @make_candy_tag(ptr %541, ptr null)
  store ptr %542, ptr @tag_TagHasValue, align 8
  %543 = alloca i8, i64 16, align 1
  store [16 x i8] c"TagWithoutValue\00", ptr %543, align 1
  %544 = call ptr @make_candy_tag(ptr %543, ptr null)
  store ptr %544, ptr @tag_TagWithoutValue, align 8
  %545 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %545, align 1
  %546 = call ptr @make_candy_tag(ptr %545, ptr null)
  store ptr %546, ptr @tag_Text, align 8
  %547 = alloca i8, i64 15, align 1
  store [15 x i8] c"TextCharacters\00", ptr %547, align 1
  %548 = call ptr @make_candy_tag(ptr %547, ptr null)
  store ptr %548, ptr @tag_TextCharacters, align 8
  %549 = alloca i8, i64 16, align 1
  store [16 x i8] c"TextConcatenate\00", ptr %549, align 1
  %550 = call ptr @make_candy_tag(ptr %549, ptr null)
  store ptr %550, ptr @tag_TextConcatenate, align 8
  %551 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextContains\00", ptr %551, align 1
  %552 = call ptr @make_candy_tag(ptr %551, ptr null)
  store ptr %552, ptr @tag_TextContains, align 8
  %553 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextEndsWith\00", ptr %553, align 1
  %554 = call ptr @make_candy_tag(ptr %553, ptr null)
  store ptr %554, ptr @tag_TextEndsWith, align 8
  %555 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextFromUtf8\00", ptr %555, align 1
  %556 = call ptr @make_candy_tag(ptr %555, ptr null)
  store ptr %556, ptr @tag_TextFromUtf8, align 8
  %557 = alloca i8, i64 13, align 1
  store [13 x i8] c"TextGetRange\00", ptr %557, align 1
  %558 = call ptr @make_candy_tag(ptr %557, ptr null)
  store ptr %558, ptr @tag_TextGetRange, align 8
  %559 = alloca i8, i64 12, align 1
  store [12 x i8] c"TextIsEmpty\00", ptr %559, align 1
  %560 = call ptr @make_candy_tag(ptr %559, ptr null)
  store ptr %560, ptr @tag_TextIsEmpty, align 8
  %561 = alloca i8, i64 11, align 1
  store [11 x i8] c"TextLength\00", ptr %561, align 1
  %562 = call ptr @make_candy_tag(ptr %561, ptr null)
  store ptr %562, ptr @tag_TextLength, align 8
  %563 = alloca i8, i64 15, align 1
  store [15 x i8] c"TextStartsWith\00", ptr %563, align 1
  %564 = call ptr @make_candy_tag(ptr %563, ptr null)
  store ptr %564, ptr @tag_TextStartsWith, align 8
  %565 = alloca i8, i64 12, align 1
  store [12 x i8] c"TextTrimEnd\00", ptr %565, align 1
  %566 = call ptr @make_candy_tag(ptr %565, ptr null)
  store ptr %566, ptr @tag_TextTrimEnd, align 8
  %567 = alloca i8, i64 14, align 1
  store [14 x i8] c"TextTrimStart\00", ptr %567, align 1
  %568 = call ptr @make_candy_tag(ptr %567, ptr null)
  store ptr %568, ptr @tag_TextTrimStart, align 8
  %569 = alloca i8, i64 12, align 1
  store [12 x i8] c"ToDebugText\00", ptr %569, align 1
  %570 = call ptr @make_candy_tag(ptr %569, ptr null)
  store ptr %570, ptr @tag_ToDebugText, align 8
  %571 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %571, align 1
  %572 = call ptr @make_candy_tag(ptr %571, ptr null)
  store ptr %572, ptr @tag_True, align 8
  %573 = alloca i8, i64 7, align 1
  store [7 x i8] c"TypeOf\00", ptr %573, align 1
  %574 = call ptr @make_candy_tag(ptr %573, ptr null)
  store ptr %574, ptr @tag_TypeOf, align 8
  %575 = call ptr @make_candy_int(i64 0)
  store ptr %575, ptr @num_0, align 8
  %576 = call ptr @make_candy_int(i64 1)
  store ptr %576, ptr @num_1, align 8
  %577 = call ptr @make_candy_int(i64 9223372036854775807)
  store ptr %577, ptr @num_340282366920938463463374607431768211455, align 8
  %578 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %578, align 1
  %579 = call ptr @make_candy_text(ptr %578)
  store ptr %579, ptr @text_., align 8
  %580 = alloca i8, i64 46, align 1
  store [46 x i8] c". You might want to call `shiftLeft` instead.\00", ptr %580, align 1
  %581 = call ptr @make_candy_text(ptr %580)
  store ptr %581, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %582 = alloca i8, i64 47, align 1
  store [47 x i8] c". You might want to call `shiftRight` instead.\00", ptr %582, align 1
  %583 = call ptr @make_candy_text(ptr %582)
  store ptr %583, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  %584 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Equal, got \00", ptr %584, align 1
  %585 = call ptr @make_candy_text(ptr %584)
  store ptr %585, ptr @"text_Expected Equal, got ", align 8
  %586 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %586, align 1
  %587 = call ptr @make_candy_text(ptr %586)
  store ptr %587, ptr @"text_Expected False, got ", align 8
  %588 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Greater, got \00", ptr %588, align 1
  %589 = call ptr @make_candy_text(ptr %588)
  store ptr %589, ptr @"text_Expected Greater, got ", align 8
  %590 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected Less, got \00", ptr %590, align 1
  %591 = call ptr @make_candy_text(ptr %590)
  store ptr %591, ptr @"text_Expected Less, got ", align 8
  %592 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %592, align 1
  %593 = call ptr @make_candy_text(ptr %592)
  store ptr %593, ptr @"text_Expected True, got ", align 8
  %594 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %594, align 1
  %595 = call ptr @make_candy_text(ptr %594)
  store ptr %595, ptr @"text_Expected a Tag, got `", align 8
  %596 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %596, align 1
  %597 = call ptr @make_candy_text(ptr %596)
  store ptr %597, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %598 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %598, align 1
  %599 = call ptr @make_candy_text(ptr %598)
  store ptr %599, ptr @"text_No case matched the given expression.", align 8
  %600 = alloca i8, i64 43, align 1
  store [43 x i8] c"Shifts by that much are not yet supported.\00", ptr %600, align 1
  %601 = call ptr @make_candy_text(ptr %600)
  store ptr %601, ptr @"text_Shifts by that much are not yet supported.", align 8
  %602 = alloca i8, i64 9, align 1
  store [9 x i8] c"Struct `\00", ptr %602, align 1
  %603 = call ptr @make_candy_text(ptr %602)
  store ptr %603, ptr @"text_Struct `", align 8
  %604 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %604, align 1
  %605 = call ptr @make_candy_text(ptr %604)
  store ptr %605, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %606 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %606, align 1
  %607 = call ptr @make_candy_text(ptr %606)
  store ptr %607, ptr @"text_The `reason` must be a text.", align 8
  %608 = alloca i8, i64 33, align 1
  store [33 x i8] c"The shift `amount` is negative: \00", ptr %608, align 1
  %609 = call ptr @make_candy_text(ptr %608)
  store ptr %609, ptr @"text_The shift `amount` is negative: ", align 8
  %610 = alloca i8, i64 26, align 1
  store [26 x i8] c"You can't divide by zero.\00", ptr %610, align 1
  %611 = call ptr @make_candy_text(ptr %610)
  store ptr %611, ptr @"text_You can't divide by zero.", align 8
  %612 = alloca i8, i64 23, align 1
  store [23 x i8] c"` is missing the key `\00", ptr %612, align 1
  %613 = call ptr @make_candy_text(ptr %612)
  store ptr %613, ptr @"text_` is missing the key `", align 8
  %614 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %614, align 1
  %615 = call ptr @make_candy_text(ptr %614)
  store ptr %615, ptr @"text_`.", align 8
  %616 = alloca i8, i64 26, align 1
  store [26 x i8] c"`False` was not satisfied\00", ptr %616, align 1
  %617 = call ptr @make_candy_text(ptr %616)
  store ptr %617, ptr @"text_`False` was not satisfied", align 8
  %618 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %618, align 1
  %619 = call ptr @make_candy_text(ptr %618)
  store ptr %619, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %620 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %620, align 1
  %621 = call ptr @make_candy_text(ptr %620)
  store ptr %621, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %622 = alloca i8, i64 40, align 1
  store [40 x i8] c"`amount | typeIs Int` was not satisfied\00", ptr %622, align 1
  %623 = call ptr @make_candy_text(ptr %622)
  store ptr %623, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %624 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %624, align 1
  %625 = call ptr @make_candy_text(ptr %624)
  store ptr %625, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %626 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %626, align 1
  %627 = call ptr @make_candy_text(ptr %626)
  store ptr %627, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %628 = alloca i8, i64 40, align 1
  store [40 x i8] c"`bytes | typeIs List` was not satisfied\00", ptr %628, align 1
  %629 = call ptr @make_candy_text(ptr %628)
  store ptr %629, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  %630 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %630, align 1
  %631 = call ptr @make_candy_text(ptr %630)
  store ptr %631, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %632 = alloca i8, i64 42, align 1
  store [42 x i8] c"`dividend | typeIs Int` was not satisfied\00", ptr %632, align 1
  %633 = call ptr @make_candy_text(ptr %632)
  store ptr %633, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %634 = alloca i8, i64 41, align 1
  store [41 x i8] c"`divisor | typeIs Int` was not satisfied\00", ptr %634, align 1
  %635 = call ptr @make_candy_text(ptr %634)
  store ptr %635, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %636 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %636, align 1
  %637 = call ptr @make_candy_text(ptr %636)
  store ptr %637, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %638 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %638, align 1
  %639 = call ptr @make_candy_text(ptr %638)
  store ptr %639, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %640 = alloca i8, i64 79, align 1
  store [77 x i8] c"`endExclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %640, align 1
  %641 = call ptr @make_candy_text(ptr %640)
  store ptr %641, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %642 = alloca i8, i64 49, align 1
  store [49 x i8] c"`endExclusive | isNonNegative` was not satisfied\00", ptr %642, align 1
  %643 = call ptr @make_candy_text(ptr %642)
  store ptr %643, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %644 = alloca i8, i64 46, align 1
  store [46 x i8] c"`endExclusive | typeIs Int` was not satisfied\00", ptr %644, align 1
  %645 = call ptr @make_candy_text(ptr %644)
  store ptr %645, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %646 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %646, align 1
  %647 = call ptr @make_candy_text(ptr %646)
  store ptr %647, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %648 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorB | typeIs Int` was not satisfied\00", ptr %648, align 1
  %649 = call ptr @make_candy_text(ptr %648)
  store ptr %649, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %650 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %650, align 1
  %651 = call ptr @make_candy_text(ptr %650)
  store ptr %651, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %652 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %652, align 1
  %653 = call ptr @make_candy_text(ptr %652)
  store ptr %653, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %654 = alloca i8, i64 75, align 1
  store [75 x i8] c"`index | intCompareTo (list | listLength) | equals Less` was not satisfied\00", ptr %654, align 1
  %655 = call ptr @make_candy_text(ptr %654)
  store ptr %655, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %656 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %656, align 1
  %657 = call ptr @make_candy_text(ptr %656)
  store ptr %657, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %658 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %658, align 1
  %659 = call ptr @make_candy_text(ptr %658)
  store ptr %659, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %660 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %660, align 1
  %661 = call ptr @make_candy_text(ptr %660)
  store ptr %661, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %662 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %662, align 1
  %663 = call ptr @make_candy_text(ptr %662)
  store ptr %663, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %664 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %664, align 1
  %665 = call ptr @make_candy_text(ptr %664)
  store ptr %665, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %666 = alloca i8, i64 43, align 1
  store [43 x i8] c"`length | isNonNegative` was not satisfied\00", ptr %666, align 1
  %667 = call ptr @make_candy_text(ptr %666)
  store ptr %667, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  %668 = alloca i8, i64 40, align 1
  store [40 x i8] c"`length | typeIs Int` was not satisfied\00", ptr %668, align 1
  %669 = call ptr @make_candy_text(ptr %668)
  store ptr %669, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  %670 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %670, align 1
  %671 = call ptr @make_candy_text(ptr %670)
  store ptr %671, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %672 = alloca i8, i64 42, align 1
  store [42 x i8] c"`message | typeIs Text` was not satisfied\00", ptr %672, align 1
  %673 = call ptr @make_candy_text(ptr %672)
  store ptr %673, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  %674 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %674, align 1
  %675 = call ptr @make_candy_text(ptr %674)
  store ptr %675, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %676 = alloca i8, i64 42, align 1
  store [42 x i8] c"`pattern | typeIs Text` was not satisfied\00", ptr %676, align 1
  %677 = call ptr @make_candy_text(ptr %676)
  store ptr %677, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  %678 = alloca i8, i64 41, align 1
  store [41 x i8] c"`prefix | typeIs Text` was not satisfied\00", ptr %678, align 1
  %679 = call ptr @make_candy_text(ptr %678)
  store ptr %679, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %680 = alloca i8, i64 81, align 1
  store [79 x i8] c"`startInclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %680, align 1
  %681 = call ptr @make_candy_text(ptr %680)
  store ptr %681, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %682 = alloca i8, i64 70, align 1
  store [70 x i8] c"`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied\00", ptr %682, align 1
  %683 = call ptr @make_candy_text(ptr %682)
  store ptr %683, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %684 = alloca i8, i64 51, align 1
  store [51 x i8] c"`startInclusive | isNonNegative` was not satisfied\00", ptr %684, align 1
  %685 = call ptr @make_candy_text(ptr %684)
  store ptr %685, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %686 = alloca i8, i64 48, align 1
  store [48 x i8] c"`startInclusive | typeIs Int` was not satisfied\00", ptr %686, align 1
  %687 = call ptr @make_candy_text(ptr %686)
  store ptr %687, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %688 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %688, align 1
  %689 = call ptr @make_candy_text(ptr %688)
  store ptr %689, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %690 = alloca i8, i64 44, align 1
  store [44 x i8] c"`subtrahend | typeIs Int` was not satisfied\00", ptr %690, align 1
  %691 = call ptr @make_candy_text(ptr %690)
  store ptr %691, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %692 = alloca i8, i64 41, align 1
  store [41 x i8] c"`suffix | typeIs Text` was not satisfied\00", ptr %692, align 1
  %693 = call ptr @make_candy_text(ptr %692)
  store ptr %693, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  %694 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %694, align 1
  %695 = call ptr @make_candy_text(ptr %694)
  store ptr %695, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %696 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %696, align 1
  %697 = call ptr @make_candy_text(ptr %696)
  store ptr %697, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %698 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %698, align 1
  %699 = call ptr @make_candy_text(ptr %698)
  store ptr %699, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %700 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %700, align 1
  %701 = call ptr @make_candy_text(ptr %700)
  store ptr %701, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %702 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %702, align 1
  %703 = call ptr @make_candy_text(ptr %702)
  store ptr %703, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %704 = alloca i8, i64 42, align 1
  store [42 x i8] c"`value | isNonNegative` was not satisfied\00", ptr %704, align 1
  %705 = call ptr @make_candy_text(ptr %704)
  store ptr %705, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %706 = alloca i8, i64 39, align 1
  store [39 x i8] c"`value | typeIs Int` was not satisfied\00", ptr %706, align 1
  %707 = call ptr @make_candy_text(ptr %706)
  store ptr %707, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %708 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %709 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", ptr %708, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %709, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %710 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %711 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %710, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %711, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %712 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %713 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %712, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %713, ptr @"fun_anonymous_$generated__needs", align 8
  %714 = alloca ptr, i64 2, align 8
  %715 = load ptr, ptr @tag_Match, align 8
  %716 = getelementptr ptr, ptr %714, i64 0
  store ptr %715, ptr %716, align 8
  %717 = getelementptr ptr, ptr %714, i64 1
  store ptr null, ptr %717, align 8
  %718 = call ptr @make_candy_list(ptr %714)
  store ptr %718, ptr @0, align 8
  %719 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %720 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", ptr %719, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %720, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %721 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %722 = call ptr @make_candy_function(ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", ptr %721, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %722, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %723 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %724 = call ptr @make_candy_function(ptr @Builtins__not, ptr %723, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %724, ptr @fun_Builtins__not, align 8
  %725 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %726 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %725, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %726, ptr @fun_Builtins__isNonNegative, align 8
  %727 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %728 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %727, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %728, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %729 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %730 = call ptr @make_candy_function(ptr @Builtins__equals, ptr %729, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %730, ptr @fun_Builtins__equals, align 8
  %731 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %732 = call ptr @make_candy_function(ptr @Builtins__functionRun, ptr %731, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %732, ptr @fun_Builtins__functionRun, align 8
  %733 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %734 = call ptr @make_candy_function(ptr @Builtins__getArgumentCount, ptr %733, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %734, ptr @fun_Builtins__getArgumentCount, align 8
  %735 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %736 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %735, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %736, ptr @fun_Builtins__ifElse, align 8
  %737 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %738 = call ptr @make_candy_function(ptr @Builtins__intAdd, ptr %737, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %738, ptr @fun_Builtins__intAdd, align 8
  %739 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %740 = call ptr @make_candy_function(ptr @Builtins__intBitLength, ptr %739, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %740, ptr @fun_Builtins__intBitLength, align 8
  %741 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %742 = call ptr @make_candy_function(ptr @Builtins__intBitwiseAnd, ptr %741, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %742, ptr @fun_Builtins__intBitwiseAnd, align 8
  %743 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %744 = call ptr @make_candy_function(ptr @Builtins__intBitwiseOr, ptr %743, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %744, ptr @fun_Builtins__intBitwiseOr, align 8
  %745 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %746 = call ptr @make_candy_function(ptr @Builtins__intBitwiseXor, ptr %745, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %746, ptr @fun_Builtins__intBitwiseXor, align 8
  %747 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %748 = call ptr @make_candy_function(ptr @Builtins__intCompareTo, ptr %747, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %748, ptr @fun_Builtins__intCompareTo, align 8
  %749 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %750 = call ptr @make_candy_function(ptr @Builtins__intDivideTruncating, ptr %749, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %750, ptr @fun_Builtins__intDivideTruncating, align 8
  %751 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %752 = call ptr @make_candy_function(ptr @Builtins__intModulo, ptr %751, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %752, ptr @fun_Builtins__intModulo, align 8
  %753 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %754 = call ptr @make_candy_function(ptr @Builtins__intMultiply, ptr %753, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %754, ptr @fun_Builtins__intMultiply, align 8
  %755 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %756 = call ptr @make_candy_function(ptr @Builtins__intParse, ptr %755, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %756, ptr @fun_Builtins__intParse, align 8
  %757 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %758 = call ptr @make_candy_function(ptr @Builtins__intRemainder, ptr %757, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %758, ptr @fun_Builtins__intRemainder, align 8
  %759 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %760 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft, ptr %759, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %760, ptr @fun_Builtins__intShiftLeft, align 8
  %761 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %762 = call ptr @make_candy_function(ptr @Builtins__intShiftRight, ptr %761, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %762, ptr @fun_Builtins__intShiftRight, align 8
  %763 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %764 = call ptr @make_candy_function(ptr @Builtins__intSubtract, ptr %763, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %764, ptr @fun_Builtins__intSubtract, align 8
  %765 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %766 = call ptr @make_candy_function(ptr @Builtins__listFilled, ptr %765, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %766, ptr @fun_Builtins__listFilled, align 8
  %767 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %768 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %767, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %768, ptr @fun_Builtins__listGet, align 8
  %769 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %770 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %769, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %770, ptr @fun_Builtins__listInsert, align 8
  %771 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %772 = call ptr @make_candy_function(ptr @Builtins__listLength, ptr %771, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %772, ptr @fun_Builtins__listLength, align 8
  %773 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %774 = call ptr @make_candy_function(ptr @Builtins__listRemoveAt, ptr %773, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %774, ptr @fun_Builtins__listRemoveAt, align 8
  %775 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %776 = call ptr @make_candy_function(ptr @Builtins__listReplace, ptr %775, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %776, ptr @fun_Builtins__listReplace, align 8
  %777 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %778 = call ptr @make_candy_function(ptr @Builtins__print, ptr %777, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %778, ptr @fun_Builtins__print, align 8
  %779 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %780 = call ptr @make_candy_function(ptr @Builtins__structGet, ptr %779, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %780, ptr @fun_Builtins__structGet, align 8
  %781 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %782 = call ptr @make_candy_function(ptr @Builtins__structGetKeys, ptr %781, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %782, ptr @fun_Builtins__structGetKeys, align 8
  %783 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %784 = call ptr @make_candy_function(ptr @Builtins__structHasKey, ptr %783, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %784, ptr @fun_Builtins__structHasKey, align 8
  %785 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %786 = call ptr @make_candy_function(ptr @Builtins__tagGetValue, ptr %785, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %786, ptr @fun_Builtins__tagGetValue, align 8
  %787 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %788 = call ptr @make_candy_function(ptr @Builtins__tagHasValue, ptr %787, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %788, ptr @fun_Builtins__tagHasValue, align 8
  %789 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %790 = call ptr @make_candy_function(ptr @Builtins__tagWithoutValue, ptr %789, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %790, ptr @fun_Builtins__tagWithoutValue, align 8
  %791 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %792 = call ptr @make_candy_function(ptr @Builtins__textCharacters, ptr %791, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %792, ptr @fun_Builtins__textCharacters, align 8
  %793 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %794 = call ptr @make_candy_function(ptr @Builtins__textConcatenate, ptr %793, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %794, ptr @fun_Builtins__textConcatenate, align 8
  %795 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %796 = call ptr @make_candy_function(ptr @Builtins__textContains, ptr %795, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %796, ptr @fun_Builtins__textContains, align 8
  %797 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %798 = call ptr @make_candy_function(ptr @Builtins__textEndsWith, ptr %797, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %798, ptr @fun_Builtins__textEndsWith, align 8
  %799 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %800 = call ptr @make_candy_function(ptr @Builtins__textFromUtf8, ptr %799, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %800, ptr @fun_Builtins__textFromUtf8, align 8
  %801 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %802 = call ptr @make_candy_function(ptr @Builtins__textGetRange, ptr %801, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %802, ptr @fun_Builtins__textGetRange, align 8
  %803 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %804 = call ptr @make_candy_function(ptr @Builtins__textIsEmpty, ptr %803, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %804, ptr @fun_Builtins__textIsEmpty, align 8
  %805 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %806 = call ptr @make_candy_function(ptr @Builtins__textLength, ptr %805, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %806, ptr @fun_Builtins__textLength, align 8
  %807 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %808 = call ptr @make_candy_function(ptr @Builtins__textStartsWith, ptr %807, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %808, ptr @fun_Builtins__textStartsWith, align 8
  %809 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %810 = call ptr @make_candy_function(ptr @Builtins__textTrimEnd, ptr %809, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %810, ptr @fun_Builtins__textTrimEnd, align 8
  %811 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %812 = call ptr @make_candy_function(ptr @Builtins__textTrimStart, ptr %811, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %812, ptr @fun_Builtins__textTrimStart, align 8
  %813 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %814 = call ptr @make_candy_function(ptr @Builtins__toDebugText, ptr %813, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %814, ptr @fun_Builtins__toDebugText, align 8
  %815 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %816 = call ptr @make_candy_function(ptr @Builtins__typeOf, ptr %815, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %816, ptr @fun_Builtins__typeOf, align 8
  %817 = alloca ptr, i64 45, align 8
  %818 = alloca ptr, i64 45, align 8
  %819 = load ptr, ptr @tag_ListRemoveAt, align 8
  %820 = load ptr, ptr @fun_Builtins__listRemoveAt, align 8
  %821 = getelementptr ptr, ptr %817, i64 0
  store ptr %819, ptr %821, align 8
  %822 = getelementptr ptr, ptr %818, i64 0
  store ptr %820, ptr %822, align 8
  %823 = load ptr, ptr @tag_IfElse, align 8
  %824 = load ptr, ptr @fun_Builtins__ifElse, align 8
  %825 = getelementptr ptr, ptr %817, i64 1
  store ptr %823, ptr %825, align 8
  %826 = getelementptr ptr, ptr %818, i64 1
  store ptr %824, ptr %826, align 8
  %827 = load ptr, ptr @tag_StructHasKey, align 8
  %828 = load ptr, ptr @fun_Builtins__structHasKey, align 8
  %829 = getelementptr ptr, ptr %817, i64 2
  store ptr %827, ptr %829, align 8
  %830 = getelementptr ptr, ptr %818, i64 2
  store ptr %828, ptr %830, align 8
  %831 = load ptr, ptr @tag_IntBitLength, align 8
  %832 = load ptr, ptr @fun_Builtins__intBitLength, align 8
  %833 = getelementptr ptr, ptr %817, i64 3
  store ptr %831, ptr %833, align 8
  %834 = getelementptr ptr, ptr %818, i64 3
  store ptr %832, ptr %834, align 8
  %835 = load ptr, ptr @tag_Print, align 8
  %836 = load ptr, ptr @fun_Builtins__print, align 8
  %837 = getelementptr ptr, ptr %817, i64 4
  store ptr %835, ptr %837, align 8
  %838 = getelementptr ptr, ptr %818, i64 4
  store ptr %836, ptr %838, align 8
  %839 = load ptr, ptr @tag_TextStartsWith, align 8
  %840 = load ptr, ptr @fun_Builtins__textStartsWith, align 8
  %841 = getelementptr ptr, ptr %817, i64 5
  store ptr %839, ptr %841, align 8
  %842 = getelementptr ptr, ptr %818, i64 5
  store ptr %840, ptr %842, align 8
  %843 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %844 = load ptr, ptr @fun_Builtins__intBitwiseXor, align 8
  %845 = getelementptr ptr, ptr %817, i64 6
  store ptr %843, ptr %845, align 8
  %846 = getelementptr ptr, ptr %818, i64 6
  store ptr %844, ptr %846, align 8
  %847 = load ptr, ptr @tag_TextIsEmpty, align 8
  %848 = load ptr, ptr @fun_Builtins__textIsEmpty, align 8
  %849 = getelementptr ptr, ptr %817, i64 7
  store ptr %847, ptr %849, align 8
  %850 = getelementptr ptr, ptr %818, i64 7
  store ptr %848, ptr %850, align 8
  %851 = load ptr, ptr @tag_IntAdd, align 8
  %852 = load ptr, ptr @fun_Builtins__intAdd, align 8
  %853 = getelementptr ptr, ptr %817, i64 8
  store ptr %851, ptr %853, align 8
  %854 = getelementptr ptr, ptr %818, i64 8
  store ptr %852, ptr %854, align 8
  %855 = load ptr, ptr @tag_TextLength, align 8
  %856 = load ptr, ptr @fun_Builtins__textLength, align 8
  %857 = getelementptr ptr, ptr %817, i64 9
  store ptr %855, ptr %857, align 8
  %858 = getelementptr ptr, ptr %818, i64 9
  store ptr %856, ptr %858, align 8
  %859 = load ptr, ptr @tag_TagWithoutValue, align 8
  %860 = load ptr, ptr @fun_Builtins__tagWithoutValue, align 8
  %861 = getelementptr ptr, ptr %817, i64 10
  store ptr %859, ptr %861, align 8
  %862 = getelementptr ptr, ptr %818, i64 10
  store ptr %860, ptr %862, align 8
  %863 = load ptr, ptr @tag_TextCharacters, align 8
  %864 = load ptr, ptr @fun_Builtins__textCharacters, align 8
  %865 = getelementptr ptr, ptr %817, i64 11
  store ptr %863, ptr %865, align 8
  %866 = getelementptr ptr, ptr %818, i64 11
  store ptr %864, ptr %866, align 8
  %867 = load ptr, ptr @tag_TextEndsWith, align 8
  %868 = load ptr, ptr @fun_Builtins__textEndsWith, align 8
  %869 = getelementptr ptr, ptr %817, i64 12
  store ptr %867, ptr %869, align 8
  %870 = getelementptr ptr, ptr %818, i64 12
  store ptr %868, ptr %870, align 8
  %871 = load ptr, ptr @tag_IntModulo, align 8
  %872 = load ptr, ptr @fun_Builtins__intModulo, align 8
  %873 = getelementptr ptr, ptr %817, i64 13
  store ptr %871, ptr %873, align 8
  %874 = getelementptr ptr, ptr %818, i64 13
  store ptr %872, ptr %874, align 8
  %875 = load ptr, ptr @tag_ListInsert, align 8
  %876 = load ptr, ptr @fun_Builtins__listInsert, align 8
  %877 = getelementptr ptr, ptr %817, i64 14
  store ptr %875, ptr %877, align 8
  %878 = getelementptr ptr, ptr %818, i64 14
  store ptr %876, ptr %878, align 8
  %879 = load ptr, ptr @tag_StructGet, align 8
  %880 = load ptr, ptr @fun_Builtins__structGet, align 8
  %881 = getelementptr ptr, ptr %817, i64 15
  store ptr %879, ptr %881, align 8
  %882 = getelementptr ptr, ptr %818, i64 15
  store ptr %880, ptr %882, align 8
  %883 = load ptr, ptr @tag_ListGet, align 8
  %884 = load ptr, ptr @fun_Builtins__listGet, align 8
  %885 = getelementptr ptr, ptr %817, i64 16
  store ptr %883, ptr %885, align 8
  %886 = getelementptr ptr, ptr %818, i64 16
  store ptr %884, ptr %886, align 8
  %887 = load ptr, ptr @tag_TextConcatenate, align 8
  %888 = load ptr, ptr @fun_Builtins__textConcatenate, align 8
  %889 = getelementptr ptr, ptr %817, i64 17
  store ptr %887, ptr %889, align 8
  %890 = getelementptr ptr, ptr %818, i64 17
  store ptr %888, ptr %890, align 8
  %891 = load ptr, ptr @tag_IntShiftRight, align 8
  %892 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  %893 = getelementptr ptr, ptr %817, i64 18
  store ptr %891, ptr %893, align 8
  %894 = getelementptr ptr, ptr %818, i64 18
  store ptr %892, ptr %894, align 8
  %895 = load ptr, ptr @tag_TextTrimStart, align 8
  %896 = load ptr, ptr @fun_Builtins__textTrimStart, align 8
  %897 = getelementptr ptr, ptr %817, i64 19
  store ptr %895, ptr %897, align 8
  %898 = getelementptr ptr, ptr %818, i64 19
  store ptr %896, ptr %898, align 8
  %899 = load ptr, ptr @tag_TextTrimEnd, align 8
  %900 = load ptr, ptr @fun_Builtins__textTrimEnd, align 8
  %901 = getelementptr ptr, ptr %817, i64 20
  store ptr %899, ptr %901, align 8
  %902 = getelementptr ptr, ptr %818, i64 20
  store ptr %900, ptr %902, align 8
  %903 = load ptr, ptr @tag_IntShiftLeft, align 8
  %904 = load ptr, ptr @fun_Builtins__intShiftLeft, align 8
  %905 = getelementptr ptr, ptr %817, i64 21
  store ptr %903, ptr %905, align 8
  %906 = getelementptr ptr, ptr %818, i64 21
  store ptr %904, ptr %906, align 8
  %907 = load ptr, ptr @tag_ListLength, align 8
  %908 = load ptr, ptr @fun_Builtins__listLength, align 8
  %909 = getelementptr ptr, ptr %817, i64 22
  store ptr %907, ptr %909, align 8
  %910 = getelementptr ptr, ptr %818, i64 22
  store ptr %908, ptr %910, align 8
  %911 = load ptr, ptr @tag_StructGetKeys, align 8
  %912 = load ptr, ptr @fun_Builtins__structGetKeys, align 8
  %913 = getelementptr ptr, ptr %817, i64 23
  store ptr %911, ptr %913, align 8
  %914 = getelementptr ptr, ptr %818, i64 23
  store ptr %912, ptr %914, align 8
  %915 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %916 = load ptr, ptr @fun_Builtins__intBitwiseAnd, align 8
  %917 = getelementptr ptr, ptr %817, i64 24
  store ptr %915, ptr %917, align 8
  %918 = getelementptr ptr, ptr %818, i64 24
  store ptr %916, ptr %918, align 8
  %919 = load ptr, ptr @tag_IntSubtract, align 8
  %920 = load ptr, ptr @fun_Builtins__intSubtract, align 8
  %921 = getelementptr ptr, ptr %817, i64 25
  store ptr %919, ptr %921, align 8
  %922 = getelementptr ptr, ptr %818, i64 25
  store ptr %920, ptr %922, align 8
  %923 = load ptr, ptr @tag_TextFromUtf8, align 8
  %924 = load ptr, ptr @fun_Builtins__textFromUtf8, align 8
  %925 = getelementptr ptr, ptr %817, i64 26
  store ptr %923, ptr %925, align 8
  %926 = getelementptr ptr, ptr %818, i64 26
  store ptr %924, ptr %926, align 8
  %927 = load ptr, ptr @tag_ListReplace, align 8
  %928 = load ptr, ptr @fun_Builtins__listReplace, align 8
  %929 = getelementptr ptr, ptr %817, i64 27
  store ptr %927, ptr %929, align 8
  %930 = getelementptr ptr, ptr %818, i64 27
  store ptr %928, ptr %930, align 8
  %931 = load ptr, ptr @tag_GetArgumentCount, align 8
  %932 = load ptr, ptr @fun_Builtins__getArgumentCount, align 8
  %933 = getelementptr ptr, ptr %817, i64 28
  store ptr %931, ptr %933, align 8
  %934 = getelementptr ptr, ptr %818, i64 28
  store ptr %932, ptr %934, align 8
  %935 = load ptr, ptr @tag_IntRemainder, align 8
  %936 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  %937 = getelementptr ptr, ptr %817, i64 29
  store ptr %935, ptr %937, align 8
  %938 = getelementptr ptr, ptr %818, i64 29
  store ptr %936, ptr %938, align 8
  %939 = load ptr, ptr @tag_ToDebugText, align 8
  %940 = load ptr, ptr @fun_Builtins__toDebugText, align 8
  %941 = getelementptr ptr, ptr %817, i64 30
  store ptr %939, ptr %941, align 8
  %942 = getelementptr ptr, ptr %818, i64 30
  store ptr %940, ptr %942, align 8
  %943 = load ptr, ptr @tag_ListFilled, align 8
  %944 = load ptr, ptr @fun_Builtins__listFilled, align 8
  %945 = getelementptr ptr, ptr %817, i64 31
  store ptr %943, ptr %945, align 8
  %946 = getelementptr ptr, ptr %818, i64 31
  store ptr %944, ptr %946, align 8
  %947 = load ptr, ptr @tag_FunctionRun, align 8
  %948 = load ptr, ptr @fun_Builtins__functionRun, align 8
  %949 = getelementptr ptr, ptr %817, i64 32
  store ptr %947, ptr %949, align 8
  %950 = getelementptr ptr, ptr %818, i64 32
  store ptr %948, ptr %950, align 8
  %951 = load ptr, ptr @tag_IntParse, align 8
  %952 = load ptr, ptr @fun_Builtins__intParse, align 8
  %953 = getelementptr ptr, ptr %817, i64 33
  store ptr %951, ptr %953, align 8
  %954 = getelementptr ptr, ptr %818, i64 33
  store ptr %952, ptr %954, align 8
  %955 = load ptr, ptr @tag_TypeOf, align 8
  %956 = load ptr, ptr @fun_Builtins__typeOf, align 8
  %957 = getelementptr ptr, ptr %817, i64 34
  store ptr %955, ptr %957, align 8
  %958 = getelementptr ptr, ptr %818, i64 34
  store ptr %956, ptr %958, align 8
  %959 = load ptr, ptr @tag_TextContains, align 8
  %960 = load ptr, ptr @fun_Builtins__textContains, align 8
  %961 = getelementptr ptr, ptr %817, i64 35
  store ptr %959, ptr %961, align 8
  %962 = getelementptr ptr, ptr %818, i64 35
  store ptr %960, ptr %962, align 8
  %963 = load ptr, ptr @tag_TagHasValue, align 8
  %964 = load ptr, ptr @fun_Builtins__tagHasValue, align 8
  %965 = getelementptr ptr, ptr %817, i64 36
  store ptr %963, ptr %965, align 8
  %966 = getelementptr ptr, ptr %818, i64 36
  store ptr %964, ptr %966, align 8
  %967 = load ptr, ptr @tag_Equals, align 8
  %968 = load ptr, ptr @fun_Builtins__equals, align 8
  %969 = getelementptr ptr, ptr %817, i64 37
  store ptr %967, ptr %969, align 8
  %970 = getelementptr ptr, ptr %818, i64 37
  store ptr %968, ptr %970, align 8
  %971 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %972 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  %973 = getelementptr ptr, ptr %817, i64 38
  store ptr %971, ptr %973, align 8
  %974 = getelementptr ptr, ptr %818, i64 38
  store ptr %972, ptr %974, align 8
  %975 = load ptr, ptr @tag_TextGetRange, align 8
  %976 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  %977 = getelementptr ptr, ptr %817, i64 39
  store ptr %975, ptr %977, align 8
  %978 = getelementptr ptr, ptr %818, i64 39
  store ptr %976, ptr %978, align 8
  %979 = load ptr, ptr @tag_IntMultiply, align 8
  %980 = load ptr, ptr @fun_Builtins__intMultiply, align 8
  %981 = getelementptr ptr, ptr %817, i64 40
  store ptr %979, ptr %981, align 8
  %982 = getelementptr ptr, ptr %818, i64 40
  store ptr %980, ptr %982, align 8
  %983 = load ptr, ptr @tag_IntCompareTo, align 8
  %984 = load ptr, ptr @fun_Builtins__intCompareTo, align 8
  %985 = getelementptr ptr, ptr %817, i64 41
  store ptr %983, ptr %985, align 8
  %986 = getelementptr ptr, ptr %818, i64 41
  store ptr %984, ptr %986, align 8
  %987 = load ptr, ptr @tag_TagGetValue, align 8
  %988 = load ptr, ptr @fun_Builtins__tagGetValue, align 8
  %989 = getelementptr ptr, ptr %817, i64 42
  store ptr %987, ptr %989, align 8
  %990 = getelementptr ptr, ptr %818, i64 42
  store ptr %988, ptr %990, align 8
  %991 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %992 = load ptr, ptr @fun_Builtins__intBitwiseOr, align 8
  %993 = getelementptr ptr, ptr %817, i64 43
  store ptr %991, ptr %993, align 8
  %994 = getelementptr ptr, ptr %818, i64 43
  store ptr %992, ptr %994, align 8
  %995 = getelementptr ptr, ptr %817, i64 44
  store ptr null, ptr %995, align 8
  %996 = getelementptr ptr, ptr %818, i64 44
  store ptr null, ptr %996, align 8
  %997 = call ptr @make_candy_struct(ptr %817, ptr %818)
  %998 = load ptr, ptr @tag_Equals, align 8
  %999 = call ptr @Builtins__structGet(ptr %997, ptr %998)
  %1000 = load ptr, ptr @tag_Equals, align 8
  %1001 = call ptr @Builtins__structGet(ptr %997, ptr %1000)
  %1002 = load ptr, ptr @tag_Equals, align 8
  %1003 = call ptr @Builtins__structGet(ptr %997, ptr %1002)
  %1004 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:type:28\00", ptr %1004, align 1
  %1005 = call ptr @make_candy_text(ptr %1004)
  store ptr %1005, ptr @"Core:type:28", align 8
  %1006 = load ptr, ptr @tag_TypeOf, align 8
  %1007 = call ptr @Builtins__structGet(ptr %997, ptr %1006)
  %1008 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:2\00", ptr %1008, align 1
  %1009 = call ptr @make_candy_text(ptr %1008)
  store ptr %1009, ptr @"Core:type:is:2", align 8
  %1010 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:5\00", ptr %1010, align 1
  %1011 = call ptr @make_candy_text(ptr %1010)
  store ptr %1011, ptr @"Core:type:is:5", align 8
  %1012 = alloca i8, i64 45, align 1
  store [45 x i8] c"`typeOf type | equals Tag` was not satisfied\00", ptr %1012, align 1
  %1013 = call ptr @make_candy_text(ptr %1012)
  store ptr %1013, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %1014 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:type:is:7\00", ptr %1014, align 1
  %1015 = call ptr @make_candy_text(ptr %1014)
  store ptr %1015, ptr @"Core:type:is:7", align 8
  %1016 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:type:is:11\00", ptr %1016, align 1
  %1017 = call ptr @make_candy_text(ptr %1016)
  store ptr %1017, ptr @"Core:type:is:11", align 8
  %1018 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:type:is:13\00", ptr %1018, align 1
  %1019 = call ptr @make_candy_text(ptr %1018)
  store ptr %1019, ptr @"Core:type:is:13", align 8
  %1020 = alloca i8, i64 3, align 1
  store [3 x i8] c"Is\00", ptr %1020, align 1
  %1021 = call ptr @make_candy_tag(ptr %1020, ptr null)
  store ptr %1021, ptr @tag_Is, align 8
  %1022 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:function:is:7\00", ptr %1022, align 1
  %1023 = call ptr @make_candy_text(ptr %1022)
  store ptr %1023, ptr @"Core:function:is:7", align 8
  %1024 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is:10\00", ptr %1024, align 1
  %1025 = call ptr @make_candy_text(ptr %1024)
  store ptr %1025, ptr @"Core:function:is:10", align 8
  %1026 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:function:38\00", ptr %1026, align 1
  %1027 = call ptr @make_candy_text(ptr %1026)
  store ptr %1027, ptr @"Core:function:38", align 8
  %1028 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1029 = call ptr @Builtins__structGet(ptr %997, ptr %1028)
  %1030 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is0:7\00", ptr %1030, align 1
  %1031 = call ptr @make_candy_text(ptr %1030)
  store ptr %1031, ptr @"Core:function:is0:7", align 8
  %1032 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %1032, align 1
  %1033 = call ptr @make_candy_text(ptr %1032)
  store ptr %1033, ptr @"Core:function:is0:11:3", align 8
  %1034 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:5\00", ptr %1034, align 1
  %1035 = call ptr @make_candy_text(ptr %1034)
  store ptr %1035, ptr @"Core:function:is0:11:5", align 8
  %1036 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %1036, align 1
  %1037 = call ptr @make_candy_text(ptr %1036)
  store ptr %1037, ptr @"Core:function:is0:13", align 8
  %1038 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is1:7\00", ptr %1038, align 1
  %1039 = call ptr @make_candy_text(ptr %1038)
  store ptr %1039, ptr @"Core:function:is1:7", align 8
  %1040 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %1040, align 1
  %1041 = call ptr @make_candy_text(ptr %1040)
  store ptr %1041, ptr @"Core:function:is1:11:3", align 8
  %1042 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:5\00", ptr %1042, align 1
  %1043 = call ptr @make_candy_text(ptr %1042)
  store ptr %1043, ptr @"Core:function:is1:11:5", align 8
  %1044 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %1044, align 1
  %1045 = call ptr @make_candy_text(ptr %1044)
  store ptr %1045, ptr @"Core:function:is1:13", align 8
  %1046 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is2:7\00", ptr %1046, align 1
  %1047 = call ptr @make_candy_text(ptr %1046)
  store ptr %1047, ptr @"Core:function:is2:7", align 8
  %1048 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %1048, align 1
  %1049 = call ptr @make_candy_text(ptr %1048)
  store ptr %1049, ptr @"Core:function:is2:11:3", align 8
  %1050 = call ptr @make_candy_int(i64 2)
  store ptr %1050, ptr @num_2, align 8
  %1051 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:5\00", ptr %1051, align 1
  %1052 = call ptr @make_candy_text(ptr %1051)
  store ptr %1052, ptr @"Core:function:is2:11:5", align 8
  %1053 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %1053, align 1
  %1054 = call ptr @make_candy_text(ptr %1053)
  store ptr %1054, ptr @"Core:function:is2:13", align 8
  %1055 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is3:7\00", ptr %1055, align 1
  %1056 = call ptr @make_candy_text(ptr %1055)
  store ptr %1056, ptr @"Core:function:is3:7", align 8
  %1057 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is3:11:3\00", ptr %1057, align 1
  %1058 = call ptr @make_candy_text(ptr %1057)
  store ptr %1058, ptr @"Core:function:is3:11:3", align 8
  %1059 = call ptr @make_candy_int(i64 3)
  store ptr %1059, ptr @num_3, align 8
  %1060 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is3:11:5\00", ptr %1060, align 1
  %1061 = call ptr @make_candy_text(ptr %1060)
  store ptr %1061, ptr @"Core:function:is3:11:5", align 8
  %1062 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is3:13\00", ptr %1062, align 1
  %1063 = call ptr @make_candy_text(ptr %1062)
  store ptr %1063, ptr @"Core:function:is3:13", align 8
  %1064 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is4:7\00", ptr %1064, align 1
  %1065 = call ptr @make_candy_text(ptr %1064)
  store ptr %1065, ptr @"Core:function:is4:7", align 8
  %1066 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is4:11:3\00", ptr %1066, align 1
  %1067 = call ptr @make_candy_text(ptr %1066)
  store ptr %1067, ptr @"Core:function:is4:11:3", align 8
  %1068 = call ptr @make_candy_int(i64 4)
  store ptr %1068, ptr @num_4, align 8
  %1069 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is4:11:5\00", ptr %1069, align 1
  %1070 = call ptr @make_candy_text(ptr %1069)
  store ptr %1070, ptr @"Core:function:is4:11:5", align 8
  %1071 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is4:13\00", ptr %1071, align 1
  %1072 = call ptr @make_candy_text(ptr %1071)
  store ptr %1072, ptr @"Core:function:is4:13", align 8
  %1073 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:is5:7\00", ptr %1073, align 1
  %1074 = call ptr @make_candy_text(ptr %1073)
  store ptr %1074, ptr @"Core:function:is5:7", align 8
  %1075 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is5:11:3\00", ptr %1075, align 1
  %1076 = call ptr @make_candy_text(ptr %1075)
  store ptr %1076, ptr @"Core:function:is5:11:3", align 8
  %1077 = call ptr @make_candy_int(i64 5)
  store ptr %1077, ptr @num_5, align 8
  %1078 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is5:11:5\00", ptr %1078, align 1
  %1079 = call ptr @make_candy_text(ptr %1078)
  store ptr %1079, ptr @"Core:function:is5:11:5", align 8
  %1080 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is5:13\00", ptr %1080, align 1
  %1081 = call ptr @make_candy_text(ptr %1080)
  store ptr %1081, ptr @"Core:function:is5:13", align 8
  %1082 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %1082, align 1
  %1083 = call ptr @make_candy_text(ptr %1082)
  store ptr %1083, ptr @"text_`is0 body` was not satisfied", align 8
  %1084 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %1084, align 1
  %1085 = call ptr @make_candy_text(ptr %1084)
  store ptr %1085, ptr @"Core:function:run:4", align 8
  %1086 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:12\00", ptr %1086, align 1
  %1087 = call ptr @make_candy_text(ptr %1086)
  store ptr %1087, ptr @"Core:function:run:12", align 8
  %1088 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %1088, align 1
  %1089 = call ptr @make_candy_text(ptr %1088)
  store ptr %1089, ptr @"Core:function:run:14", align 8
  %1090 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:function:doNotRun:4\00", ptr %1090, align 1
  %1091 = call ptr @make_candy_text(ptr %1090)
  store ptr %1091, ptr @"Core:function:doNotRun:4", align 8
  %1092 = alloca i8, i64 9, align 1
  store [9 x i8] c"DoNotRun\00", ptr %1092, align 1
  %1093 = call ptr @make_candy_tag(ptr %1092, ptr null)
  store ptr %1093, ptr @tag_DoNotRun, align 8
  %1094 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is4\00", ptr %1094, align 1
  %1095 = call ptr @make_candy_tag(ptr %1094, ptr null)
  store ptr %1095, ptr @tag_Is4, align 8
  %1096 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is1\00", ptr %1096, align 1
  %1097 = call ptr @make_candy_tag(ptr %1096, ptr null)
  store ptr %1097, ptr @tag_Is1, align 8
  %1098 = alloca i8, i64 4, align 1
  store [4 x i8] c"Run\00", ptr %1098, align 1
  %1099 = call ptr @make_candy_tag(ptr %1098, ptr null)
  store ptr %1099, ptr @tag_Run, align 8
  %1100 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is0\00", ptr %1100, align 1
  %1101 = call ptr @make_candy_tag(ptr %1100, ptr null)
  store ptr %1101, ptr @tag_Is0, align 8
  %1102 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is3\00", ptr %1102, align 1
  %1103 = call ptr @make_candy_tag(ptr %1102, ptr null)
  store ptr %1103, ptr @tag_Is3, align 8
  %1104 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is2\00", ptr %1104, align 1
  %1105 = call ptr @make_candy_tag(ptr %1104, ptr null)
  store ptr %1105, ptr @tag_Is2, align 8
  %1106 = alloca i8, i64 4, align 1
  store [4 x i8] c"Is5\00", ptr %1106, align 1
  %1107 = call ptr @make_candy_tag(ptr %1106, ptr null)
  store ptr %1107, ptr @tag_Is5, align 8
  %1108 = load ptr, ptr @tag_Equals, align 8
  %1109 = call ptr @Builtins__structGet(ptr %997, ptr %1108)
  %1110 = load ptr, ptr @tag_TypeOf, align 8
  %1111 = call ptr @Builtins__structGet(ptr %997, ptr %1110)
  %1112 = load ptr, ptr @tag_Equals, align 8
  %1113 = call ptr @Builtins__structGet(ptr %997, ptr %1112)
  %1114 = load ptr, ptr @tag_Equals, align 8
  %1115 = call ptr @Builtins__structGet(ptr %997, ptr %1114)
  %1116 = load ptr, ptr @tag_Equals, align 8
  %1117 = call ptr @Builtins__structGet(ptr %997, ptr %1116)
  %1118 = load ptr, ptr @tag_TypeOf, align 8
  %1119 = call ptr @Builtins__structGet(ptr %997, ptr %1118)
  %1120 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1121 = call ptr @Builtins__structGet(ptr %997, ptr %1120)
  %1122 = load ptr, ptr @tag_Equals, align 8
  %1123 = call ptr @Builtins__structGet(ptr %997, ptr %1122)
  %1124 = load ptr, ptr @tag_TypeOf, align 8
  %1125 = call ptr @Builtins__structGet(ptr %997, ptr %1124)
  %1126 = load ptr, ptr @tag_Equals, align 8
  %1127 = call ptr @Builtins__structGet(ptr %997, ptr %1126)
  %1128 = load ptr, ptr @tag_Equals, align 8
  %1129 = call ptr @Builtins__structGet(ptr %997, ptr %1128)
  %1130 = load ptr, ptr @tag_Equals, align 8
  %1131 = call ptr @Builtins__structGet(ptr %997, ptr %1130)
  %1132 = load ptr, ptr @tag_TypeOf, align 8
  %1133 = call ptr @Builtins__structGet(ptr %997, ptr %1132)
  %1134 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1135 = call ptr @Builtins__structGet(ptr %997, ptr %1134)
  %1136 = load ptr, ptr @tag_Equals, align 8
  %1137 = call ptr @Builtins__structGet(ptr %997, ptr %1136)
  %1138 = load ptr, ptr @tag_TypeOf, align 8
  %1139 = call ptr @Builtins__structGet(ptr %997, ptr %1138)
  %1140 = load ptr, ptr @tag_Equals, align 8
  %1141 = call ptr @Builtins__structGet(ptr %997, ptr %1140)
  %1142 = load ptr, ptr @tag_Equals, align 8
  %1143 = call ptr @Builtins__structGet(ptr %997, ptr %1142)
  %1144 = load ptr, ptr @tag_Equals, align 8
  %1145 = call ptr @Builtins__structGet(ptr %997, ptr %1144)
  %1146 = load ptr, ptr @tag_TypeOf, align 8
  %1147 = call ptr @Builtins__structGet(ptr %997, ptr %1146)
  %1148 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1149 = call ptr @Builtins__structGet(ptr %997, ptr %1148)
  %1150 = load ptr, ptr @tag_Equals, align 8
  %1151 = call ptr @Builtins__structGet(ptr %997, ptr %1150)
  %1152 = load ptr, ptr @tag_TypeOf, align 8
  %1153 = call ptr @Builtins__structGet(ptr %997, ptr %1152)
  %1154 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:controlFlow:59\00", ptr %1154, align 1
  %1155 = call ptr @make_candy_text(ptr %1154)
  store ptr %1155, ptr @"Core:controlFlow:59", align 8
  %1156 = load ptr, ptr @tag_IfElse, align 8
  %1157 = call ptr @Builtins__structGet(ptr %997, ptr %1156)
  %1158 = load ptr, ptr @tag_Equals, align 8
  %1159 = call ptr @Builtins__structGet(ptr %997, ptr %1158)
  %1160 = load ptr, ptr @tag_Equals, align 8
  %1161 = call ptr @Builtins__structGet(ptr %997, ptr %1160)
  %1162 = load ptr, ptr @tag_Equals, align 8
  %1163 = call ptr @Builtins__structGet(ptr %997, ptr %1162)
  %1164 = load ptr, ptr @tag_TypeOf, align 8
  %1165 = call ptr @Builtins__structGet(ptr %997, ptr %1164)
  %1166 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1167 = call ptr @Builtins__structGet(ptr %997, ptr %1166)
  %1168 = load ptr, ptr @tag_Equals, align 8
  %1169 = call ptr @Builtins__structGet(ptr %997, ptr %1168)
  %1170 = load ptr, ptr @tag_TypeOf, align 8
  %1171 = call ptr @Builtins__structGet(ptr %997, ptr %1170)
  %1172 = load ptr, ptr @tag_Equals, align 8
  %1173 = call ptr @Builtins__structGet(ptr %997, ptr %1172)
  %1174 = load ptr, ptr @tag_Equals, align 8
  %1175 = call ptr @Builtins__structGet(ptr %997, ptr %1174)
  %1176 = load ptr, ptr @tag_Equals, align 8
  %1177 = call ptr @Builtins__structGet(ptr %997, ptr %1176)
  %1178 = load ptr, ptr @tag_TypeOf, align 8
  %1179 = call ptr @Builtins__structGet(ptr %997, ptr %1178)
  %1180 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1181 = call ptr @Builtins__structGet(ptr %997, ptr %1180)
  %1182 = load ptr, ptr @tag_Equals, align 8
  %1183 = call ptr @Builtins__structGet(ptr %997, ptr %1182)
  %1184 = load ptr, ptr @tag_TypeOf, align 8
  %1185 = call ptr @Builtins__structGet(ptr %997, ptr %1184)
  %1186 = load ptr, ptr @tag_IfElse, align 8
  %1187 = call ptr @Builtins__structGet(ptr %997, ptr %1186)
  %1188 = load ptr, ptr @tag_Equals, align 8
  %1189 = call ptr @Builtins__structGet(ptr %997, ptr %1188)
  %1190 = load ptr, ptr @tag_Equals, align 8
  %1191 = call ptr @Builtins__structGet(ptr %997, ptr %1190)
  %1192 = load ptr, ptr @tag_Equals, align 8
  %1193 = call ptr @Builtins__structGet(ptr %997, ptr %1192)
  %1194 = load ptr, ptr @tag_Equals, align 8
  %1195 = call ptr @Builtins__structGet(ptr %997, ptr %1194)
  %1196 = load ptr, ptr @tag_TypeOf, align 8
  %1197 = call ptr @Builtins__structGet(ptr %997, ptr %1196)
  %1198 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1199 = call ptr @Builtins__structGet(ptr %997, ptr %1198)
  %1200 = load ptr, ptr @tag_Equals, align 8
  %1201 = call ptr @Builtins__structGet(ptr %997, ptr %1200)
  %1202 = load ptr, ptr @tag_TypeOf, align 8
  %1203 = call ptr @Builtins__structGet(ptr %997, ptr %1202)
  %1204 = load ptr, ptr @tag_Equals, align 8
  %1205 = call ptr @Builtins__structGet(ptr %997, ptr %1204)
  %1206 = load ptr, ptr @tag_Equals, align 8
  %1207 = call ptr @Builtins__structGet(ptr %997, ptr %1206)
  %1208 = load ptr, ptr @tag_Equals, align 8
  %1209 = call ptr @Builtins__structGet(ptr %997, ptr %1208)
  %1210 = load ptr, ptr @tag_TypeOf, align 8
  %1211 = call ptr @Builtins__structGet(ptr %997, ptr %1210)
  %1212 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1213 = call ptr @Builtins__structGet(ptr %997, ptr %1212)
  %1214 = load ptr, ptr @tag_Equals, align 8
  %1215 = call ptr @Builtins__structGet(ptr %997, ptr %1214)
  %1216 = load ptr, ptr @tag_TypeOf, align 8
  %1217 = call ptr @Builtins__structGet(ptr %997, ptr %1216)
  %1218 = load ptr, ptr @tag_Equals, align 8
  %1219 = call ptr @Builtins__structGet(ptr %997, ptr %1218)
  %1220 = load ptr, ptr @tag_Equals, align 8
  %1221 = call ptr @Builtins__structGet(ptr %997, ptr %1220)
  %1222 = load ptr, ptr @tag_Equals, align 8
  %1223 = call ptr @Builtins__structGet(ptr %997, ptr %1222)
  %1224 = load ptr, ptr @tag_TypeOf, align 8
  %1225 = call ptr @Builtins__structGet(ptr %997, ptr %1224)
  %1226 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1227 = call ptr @Builtins__structGet(ptr %997, ptr %1226)
  %1228 = load ptr, ptr @tag_Equals, align 8
  %1229 = call ptr @Builtins__structGet(ptr %997, ptr %1228)
  %1230 = load ptr, ptr @tag_TypeOf, align 8
  %1231 = call ptr @Builtins__structGet(ptr %997, ptr %1230)
  %1232 = load ptr, ptr @tag_Equals, align 8
  %1233 = call ptr @Builtins__structGet(ptr %997, ptr %1232)
  %1234 = load ptr, ptr @tag_Equals, align 8
  %1235 = call ptr @Builtins__structGet(ptr %997, ptr %1234)
  %1236 = load ptr, ptr @tag_Equals, align 8
  %1237 = call ptr @Builtins__structGet(ptr %997, ptr %1236)
  %1238 = load ptr, ptr @tag_TypeOf, align 8
  %1239 = call ptr @Builtins__structGet(ptr %997, ptr %1238)
  %1240 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1241 = call ptr @Builtins__structGet(ptr %997, ptr %1240)
  %1242 = load ptr, ptr @tag_Equals, align 8
  %1243 = call ptr @Builtins__structGet(ptr %997, ptr %1242)
  %1244 = load ptr, ptr @tag_TypeOf, align 8
  %1245 = call ptr @Builtins__structGet(ptr %997, ptr %1244)
  %1246 = load ptr, ptr @tag_IfElse, align 8
  %1247 = call ptr @Builtins__structGet(ptr %997, ptr %1246)
  %1248 = load ptr, ptr @tag_Equals, align 8
  %1249 = call ptr @Builtins__structGet(ptr %997, ptr %1248)
  %1250 = load ptr, ptr @tag_Equals, align 8
  %1251 = call ptr @Builtins__structGet(ptr %997, ptr %1250)
  %1252 = load ptr, ptr @tag_Equals, align 8
  %1253 = call ptr @Builtins__structGet(ptr %997, ptr %1252)
  %1254 = load ptr, ptr @tag_TypeOf, align 8
  %1255 = call ptr @Builtins__structGet(ptr %997, ptr %1254)
  %1256 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1257 = call ptr @Builtins__structGet(ptr %997, ptr %1256)
  %1258 = load ptr, ptr @tag_Equals, align 8
  %1259 = call ptr @Builtins__structGet(ptr %997, ptr %1258)
  %1260 = load ptr, ptr @tag_TypeOf, align 8
  %1261 = call ptr @Builtins__structGet(ptr %997, ptr %1260)
  %1262 = load ptr, ptr @tag_Equals, align 8
  %1263 = call ptr @Builtins__structGet(ptr %997, ptr %1262)
  %1264 = load ptr, ptr @tag_Equals, align 8
  %1265 = call ptr @Builtins__structGet(ptr %997, ptr %1264)
  %1266 = load ptr, ptr @tag_Equals, align 8
  %1267 = call ptr @Builtins__structGet(ptr %997, ptr %1266)
  %1268 = load ptr, ptr @tag_TypeOf, align 8
  %1269 = call ptr @Builtins__structGet(ptr %997, ptr %1268)
  %1270 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1271 = call ptr @Builtins__structGet(ptr %997, ptr %1270)
  %1272 = load ptr, ptr @tag_Equals, align 8
  %1273 = call ptr @Builtins__structGet(ptr %997, ptr %1272)
  %1274 = load ptr, ptr @tag_TypeOf, align 8
  %1275 = call ptr @Builtins__structGet(ptr %997, ptr %1274)
  %1276 = load ptr, ptr @tag_IfElse, align 8
  %1277 = call ptr @Builtins__structGet(ptr %997, ptr %1276)
  %1278 = load ptr, ptr @tag_Equals, align 8
  %1279 = call ptr @Builtins__structGet(ptr %997, ptr %1278)
  %1280 = load ptr, ptr @tag_Equals, align 8
  %1281 = call ptr @Builtins__structGet(ptr %997, ptr %1280)
  %1282 = load ptr, ptr @tag_Equals, align 8
  %1283 = call ptr @Builtins__structGet(ptr %997, ptr %1282)
  %1284 = load ptr, ptr @tag_TypeOf, align 8
  %1285 = call ptr @Builtins__structGet(ptr %997, ptr %1284)
  %1286 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1287 = call ptr @Builtins__structGet(ptr %997, ptr %1286)
  %1288 = load ptr, ptr @tag_Equals, align 8
  %1289 = call ptr @Builtins__structGet(ptr %997, ptr %1288)
  %1290 = load ptr, ptr @tag_Equals, align 8
  %1291 = call ptr @Builtins__structGet(ptr %997, ptr %1290)
  %1292 = load ptr, ptr @tag_Equals, align 8
  %1293 = call ptr @Builtins__structGet(ptr %997, ptr %1292)
  %1294 = load ptr, ptr @tag_TypeOf, align 8
  %1295 = call ptr @Builtins__structGet(ptr %997, ptr %1294)
  %1296 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1297 = call ptr @Builtins__structGet(ptr %997, ptr %1296)
  %1298 = load ptr, ptr @tag_Equals, align 8
  %1299 = call ptr @Builtins__structGet(ptr %997, ptr %1298)
  %1300 = load ptr, ptr @tag_TypeOf, align 8
  %1301 = call ptr @Builtins__structGet(ptr %997, ptr %1300)
  %1302 = load ptr, ptr @tag_Equals, align 8
  %1303 = call ptr @Builtins__structGet(ptr %997, ptr %1302)
  %1304 = load ptr, ptr @tag_Equals, align 8
  %1305 = call ptr @Builtins__structGet(ptr %997, ptr %1304)
  %1306 = load ptr, ptr @tag_Equals, align 8
  %1307 = call ptr @Builtins__structGet(ptr %997, ptr %1306)
  %1308 = load ptr, ptr @tag_TypeOf, align 8
  %1309 = call ptr @Builtins__structGet(ptr %997, ptr %1308)
  %1310 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1311 = call ptr @Builtins__structGet(ptr %997, ptr %1310)
  %1312 = load ptr, ptr @tag_Equals, align 8
  %1313 = call ptr @Builtins__structGet(ptr %997, ptr %1312)
  %1314 = load ptr, ptr @tag_TypeOf, align 8
  %1315 = call ptr @Builtins__structGet(ptr %997, ptr %1314)
  %1316 = load ptr, ptr @tag_Equals, align 8
  %1317 = call ptr @Builtins__structGet(ptr %997, ptr %1316)
  %1318 = load ptr, ptr @tag_Equals, align 8
  %1319 = call ptr @Builtins__structGet(ptr %997, ptr %1318)
  %1320 = load ptr, ptr @tag_Equals, align 8
  %1321 = call ptr @Builtins__structGet(ptr %997, ptr %1320)
  %1322 = load ptr, ptr @tag_TypeOf, align 8
  %1323 = call ptr @Builtins__structGet(ptr %997, ptr %1322)
  %1324 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1325 = call ptr @Builtins__structGet(ptr %997, ptr %1324)
  %1326 = load ptr, ptr @tag_Equals, align 8
  %1327 = call ptr @Builtins__structGet(ptr %997, ptr %1326)
  %1328 = load ptr, ptr @tag_TypeOf, align 8
  %1329 = call ptr @Builtins__structGet(ptr %997, ptr %1328)
  %1330 = load ptr, ptr @tag_Equals, align 8
  %1331 = call ptr @Builtins__structGet(ptr %997, ptr %1330)
  %1332 = load ptr, ptr @tag_Equals, align 8
  %1333 = call ptr @Builtins__structGet(ptr %997, ptr %1332)
  %1334 = load ptr, ptr @tag_Equals, align 8
  %1335 = call ptr @Builtins__structGet(ptr %997, ptr %1334)
  %1336 = load ptr, ptr @tag_TypeOf, align 8
  %1337 = call ptr @Builtins__structGet(ptr %997, ptr %1336)
  %1338 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1339 = call ptr @Builtins__structGet(ptr %997, ptr %1338)
  %1340 = load ptr, ptr @tag_Equals, align 8
  %1341 = call ptr @Builtins__structGet(ptr %997, ptr %1340)
  %1342 = load ptr, ptr @tag_TypeOf, align 8
  %1343 = call ptr @Builtins__structGet(ptr %997, ptr %1342)
  %1344 = load ptr, ptr @tag_IfElse, align 8
  %1345 = call ptr @Builtins__structGet(ptr %997, ptr %1344)
  %1346 = load ptr, ptr @tag_Equals, align 8
  %1347 = call ptr @Builtins__structGet(ptr %997, ptr %1346)
  %1348 = load ptr, ptr @tag_Equals, align 8
  %1349 = call ptr @Builtins__structGet(ptr %997, ptr %1348)
  %1350 = load ptr, ptr @tag_Equals, align 8
  %1351 = call ptr @Builtins__structGet(ptr %997, ptr %1350)
  %1352 = load ptr, ptr @tag_TypeOf, align 8
  %1353 = call ptr @Builtins__structGet(ptr %997, ptr %1352)
  %1354 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1355 = call ptr @Builtins__structGet(ptr %997, ptr %1354)
  %1356 = load ptr, ptr @tag_Equals, align 8
  %1357 = call ptr @Builtins__structGet(ptr %997, ptr %1356)
  %1358 = load ptr, ptr @tag_TypeOf, align 8
  %1359 = call ptr @Builtins__structGet(ptr %997, ptr %1358)
  %1360 = load ptr, ptr @tag_Equals, align 8
  %1361 = call ptr @Builtins__structGet(ptr %997, ptr %1360)
  %1362 = load ptr, ptr @tag_Equals, align 8
  %1363 = call ptr @Builtins__structGet(ptr %997, ptr %1362)
  %1364 = load ptr, ptr @tag_Equals, align 8
  %1365 = call ptr @Builtins__structGet(ptr %997, ptr %1364)
  %1366 = load ptr, ptr @tag_TypeOf, align 8
  %1367 = call ptr @Builtins__structGet(ptr %997, ptr %1366)
  %1368 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1369 = call ptr @Builtins__structGet(ptr %997, ptr %1368)
  %1370 = load ptr, ptr @tag_Equals, align 8
  %1371 = call ptr @Builtins__structGet(ptr %997, ptr %1370)
  %1372 = load ptr, ptr @tag_TypeOf, align 8
  %1373 = call ptr @Builtins__structGet(ptr %997, ptr %1372)
  %1374 = load ptr, ptr @tag_IfElse, align 8
  %1375 = call ptr @Builtins__structGet(ptr %997, ptr %1374)
  %1376 = load ptr, ptr @tag_Equals, align 8
  %1377 = call ptr @Builtins__structGet(ptr %997, ptr %1376)
  %1378 = load ptr, ptr @tag_Equals, align 8
  %1379 = call ptr @Builtins__structGet(ptr %997, ptr %1378)
  %1380 = load ptr, ptr @tag_TypeOf, align 8
  %1381 = call ptr @Builtins__structGet(ptr %997, ptr %1380)
  %1382 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:72\00", ptr %1382, align 1
  %1383 = call ptr @make_candy_text(ptr %1382)
  store ptr %1383, ptr @"Core:int:72", align 8
  %1384 = load ptr, ptr @tag_IntAdd, align 8
  %1385 = call ptr @Builtins__structGet(ptr %997, ptr %1384)
  %1386 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:81\00", ptr %1386, align 1
  %1387 = call ptr @make_candy_text(ptr %1386)
  store ptr %1387, ptr @"Core:int:81", align 8
  %1388 = load ptr, ptr @tag_IntSubtract, align 8
  %1389 = call ptr @Builtins__structGet(ptr %997, ptr %1388)
  %1390 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:90\00", ptr %1390, align 1
  %1391 = call ptr @make_candy_text(ptr %1390)
  store ptr %1391, ptr @"Core:int:90", align 8
  %1392 = load ptr, ptr @tag_IntMultiply, align 8
  %1393 = call ptr @Builtins__structGet(ptr %997, ptr %1392)
  %1394 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:int:99\00", ptr %1394, align 1
  %1395 = call ptr @make_candy_text(ptr %1394)
  store ptr %1395, ptr @"Core:int:99", align 8
  %1396 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %1397 = call ptr @Builtins__structGet(ptr %997, ptr %1396)
  %1398 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:108\00", ptr %1398, align 1
  %1399 = call ptr @make_candy_text(ptr %1398)
  store ptr %1399, ptr @"Core:int:108", align 8
  %1400 = load ptr, ptr @tag_IntRemainder, align 8
  %1401 = call ptr @Builtins__structGet(ptr %997, ptr %1400)
  %1402 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:117\00", ptr %1402, align 1
  %1403 = call ptr @make_candy_text(ptr %1402)
  store ptr %1403, ptr @"Core:int:117", align 8
  %1404 = load ptr, ptr @tag_IntModulo, align 8
  %1405 = call ptr @Builtins__structGet(ptr %997, ptr %1404)
  %1406 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:126\00", ptr %1406, align 1
  %1407 = call ptr @make_candy_text(ptr %1406)
  store ptr %1407, ptr @"Core:int:126", align 8
  %1408 = load ptr, ptr @tag_IntShiftLeft, align 8
  %1409 = call ptr @Builtins__structGet(ptr %997, ptr %1408)
  %1410 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:135\00", ptr %1410, align 1
  %1411 = call ptr @make_candy_text(ptr %1410)
  store ptr %1411, ptr @"Core:int:135", align 8
  %1412 = load ptr, ptr @tag_IntShiftRight, align 8
  %1413 = call ptr @Builtins__structGet(ptr %997, ptr %1412)
  %1414 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:144\00", ptr %1414, align 1
  %1415 = call ptr @make_candy_text(ptr %1414)
  store ptr %1415, ptr @"Core:int:144", align 8
  %1416 = load ptr, ptr @tag_IntBitLength, align 8
  %1417 = call ptr @Builtins__structGet(ptr %997, ptr %1416)
  %1418 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:153\00", ptr %1418, align 1
  %1419 = call ptr @make_candy_text(ptr %1418)
  store ptr %1419, ptr @"Core:int:153", align 8
  %1420 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %1421 = call ptr @Builtins__structGet(ptr %997, ptr %1420)
  %1422 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:162\00", ptr %1422, align 1
  %1423 = call ptr @make_candy_text(ptr %1422)
  store ptr %1423, ptr @"Core:int:162", align 8
  %1424 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %1425 = call ptr @Builtins__structGet(ptr %997, ptr %1424)
  %1426 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:171\00", ptr %1426, align 1
  %1427 = call ptr @make_candy_text(ptr %1426)
  store ptr %1427, ptr @"Core:int:171", align 8
  %1428 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %1429 = call ptr @Builtins__structGet(ptr %997, ptr %1428)
  %1430 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:int:180\00", ptr %1430, align 1
  %1431 = call ptr @make_candy_text(ptr %1430)
  store ptr %1431, ptr @"Core:int:180", align 8
  %1432 = load ptr, ptr @tag_IntParse, align 8
  %1433 = call ptr @Builtins__structGet(ptr %997, ptr %1432)
  %1434 = load ptr, ptr @tag_Equals, align 8
  %1435 = call ptr @Builtins__structGet(ptr %997, ptr %1434)
  %1436 = load ptr, ptr @tag_Equals, align 8
  %1437 = call ptr @Builtins__structGet(ptr %997, ptr %1436)
  %1438 = load ptr, ptr @tag_Equals, align 8
  %1439 = call ptr @Builtins__structGet(ptr %997, ptr %1438)
  %1440 = load ptr, ptr @tag_TypeOf, align 8
  %1441 = call ptr @Builtins__structGet(ptr %997, ptr %1440)
  %1442 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1443 = call ptr @Builtins__structGet(ptr %997, ptr %1442)
  %1444 = load ptr, ptr @tag_Equals, align 8
  %1445 = call ptr @Builtins__structGet(ptr %997, ptr %1444)
  %1446 = load ptr, ptr @tag_TypeOf, align 8
  %1447 = call ptr @Builtins__structGet(ptr %997, ptr %1446)
  %1448 = load ptr, ptr @tag_Equals, align 8
  %1449 = call ptr @Builtins__structGet(ptr %997, ptr %1448)
  %1450 = load ptr, ptr @tag_Equals, align 8
  %1451 = call ptr @Builtins__structGet(ptr %997, ptr %1450)
  %1452 = load ptr, ptr @tag_Equals, align 8
  %1453 = call ptr @Builtins__structGet(ptr %997, ptr %1452)
  %1454 = load ptr, ptr @tag_TypeOf, align 8
  %1455 = call ptr @Builtins__structGet(ptr %997, ptr %1454)
  %1456 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1457 = call ptr @Builtins__structGet(ptr %997, ptr %1456)
  %1458 = load ptr, ptr @tag_Equals, align 8
  %1459 = call ptr @Builtins__structGet(ptr %997, ptr %1458)
  %1460 = load ptr, ptr @tag_TypeOf, align 8
  %1461 = call ptr @Builtins__structGet(ptr %997, ptr %1460)
  %1462 = load ptr, ptr @tag_IfElse, align 8
  %1463 = call ptr @Builtins__structGet(ptr %997, ptr %1462)
  %1464 = load ptr, ptr @tag_Equals, align 8
  %1465 = call ptr @Builtins__structGet(ptr %997, ptr %1464)
  %1466 = load ptr, ptr @tag_TypeOf, align 8
  %1467 = call ptr @Builtins__structGet(ptr %997, ptr %1466)
  %1468 = load ptr, ptr @tag_Equals, align 8
  %1469 = call ptr @Builtins__structGet(ptr %997, ptr %1468)
  %1470 = load ptr, ptr @tag_Equals, align 8
  %1471 = call ptr @Builtins__structGet(ptr %997, ptr %1470)
  %1472 = load ptr, ptr @tag_Equals, align 8
  %1473 = call ptr @Builtins__structGet(ptr %997, ptr %1472)
  %1474 = load ptr, ptr @tag_TypeOf, align 8
  %1475 = call ptr @Builtins__structGet(ptr %997, ptr %1474)
  %1476 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1477 = call ptr @Builtins__structGet(ptr %997, ptr %1476)
  %1478 = load ptr, ptr @tag_Equals, align 8
  %1479 = call ptr @Builtins__structGet(ptr %997, ptr %1478)
  %1480 = load ptr, ptr @tag_TypeOf, align 8
  %1481 = call ptr @Builtins__structGet(ptr %997, ptr %1480)
  %1482 = load ptr, ptr @tag_Equals, align 8
  %1483 = call ptr @Builtins__structGet(ptr %997, ptr %1482)
  %1484 = load ptr, ptr @tag_Equals, align 8
  %1485 = call ptr @Builtins__structGet(ptr %997, ptr %1484)
  %1486 = load ptr, ptr @tag_Equals, align 8
  %1487 = call ptr @Builtins__structGet(ptr %997, ptr %1486)
  %1488 = load ptr, ptr @tag_TypeOf, align 8
  %1489 = call ptr @Builtins__structGet(ptr %997, ptr %1488)
  %1490 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1491 = call ptr @Builtins__structGet(ptr %997, ptr %1490)
  %1492 = load ptr, ptr @tag_Equals, align 8
  %1493 = call ptr @Builtins__structGet(ptr %997, ptr %1492)
  %1494 = load ptr, ptr @tag_TypeOf, align 8
  %1495 = call ptr @Builtins__structGet(ptr %997, ptr %1494)
  %1496 = load ptr, ptr @tag_Equals, align 8
  %1497 = call ptr @Builtins__structGet(ptr %997, ptr %1496)
  %1498 = load ptr, ptr @tag_Equals, align 8
  %1499 = call ptr @Builtins__structGet(ptr %997, ptr %1498)
  %1500 = load ptr, ptr @tag_Equals, align 8
  %1501 = call ptr @Builtins__structGet(ptr %997, ptr %1500)
  %1502 = load ptr, ptr @tag_TypeOf, align 8
  %1503 = call ptr @Builtins__structGet(ptr %997, ptr %1502)
  %1504 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1505 = call ptr @Builtins__structGet(ptr %997, ptr %1504)
  %1506 = load ptr, ptr @tag_Equals, align 8
  %1507 = call ptr @Builtins__structGet(ptr %997, ptr %1506)
  %1508 = load ptr, ptr @tag_TypeOf, align 8
  %1509 = call ptr @Builtins__structGet(ptr %997, ptr %1508)
  %1510 = load ptr, ptr @tag_IfElse, align 8
  %1511 = call ptr @Builtins__structGet(ptr %997, ptr %1510)
  %1512 = load ptr, ptr @tag_Equals, align 8
  %1513 = call ptr @Builtins__structGet(ptr %997, ptr %1512)
  %1514 = load ptr, ptr @tag_TypeOf, align 8
  %1515 = call ptr @Builtins__structGet(ptr %997, ptr %1514)
  %1516 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:48\00", ptr %1516, align 1
  %1517 = call ptr @make_candy_text(ptr %1516)
  store ptr %1517, ptr @"Core:tag:48", align 8
  %1518 = load ptr, ptr @tag_TagHasValue, align 8
  %1519 = call ptr @Builtins__structGet(ptr %997, ptr %1518)
  %1520 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:57\00", ptr %1520, align 1
  %1521 = call ptr @make_candy_text(ptr %1520)
  store ptr %1521, ptr @"Core:tag:57", align 8
  %1522 = load ptr, ptr @tag_TagWithoutValue, align 8
  %1523 = call ptr @Builtins__structGet(ptr %997, ptr %1522)
  %1524 = alloca i8, i64 12, align 1
  store [12 x i8] c"Core:tag:66\00", ptr %1524, align 1
  %1525 = call ptr @make_candy_text(ptr %1524)
  store ptr %1525, ptr @"Core:tag:66", align 8
  %1526 = load ptr, ptr @tag_TagGetValue, align 8
  %1527 = call ptr @Builtins__structGet(ptr %997, ptr %1526)
  %1528 = load ptr, ptr @tag_Equals, align 8
  %1529 = call ptr @Builtins__structGet(ptr %997, ptr %1528)
  %1530 = load ptr, ptr @tag_Equals, align 8
  %1531 = call ptr @Builtins__structGet(ptr %997, ptr %1530)
  %1532 = load ptr, ptr @tag_Equals, align 8
  %1533 = call ptr @Builtins__structGet(ptr %997, ptr %1532)
  %1534 = load ptr, ptr @tag_TypeOf, align 8
  %1535 = call ptr @Builtins__structGet(ptr %997, ptr %1534)
  %1536 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1537 = call ptr @Builtins__structGet(ptr %997, ptr %1536)
  %1538 = load ptr, ptr @tag_Equals, align 8
  %1539 = call ptr @Builtins__structGet(ptr %997, ptr %1538)
  %1540 = load ptr, ptr @tag_TypeOf, align 8
  %1541 = call ptr @Builtins__structGet(ptr %997, ptr %1540)
  %1542 = load ptr, ptr @tag_Equals, align 8
  %1543 = call ptr @Builtins__structGet(ptr %997, ptr %1542)
  %1544 = load ptr, ptr @tag_Equals, align 8
  %1545 = call ptr @Builtins__structGet(ptr %997, ptr %1544)
  %1546 = load ptr, ptr @tag_Equals, align 8
  %1547 = call ptr @Builtins__structGet(ptr %997, ptr %1546)
  %1548 = load ptr, ptr @tag_TypeOf, align 8
  %1549 = call ptr @Builtins__structGet(ptr %997, ptr %1548)
  %1550 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1551 = call ptr @Builtins__structGet(ptr %997, ptr %1550)
  %1552 = load ptr, ptr @tag_Equals, align 8
  %1553 = call ptr @Builtins__structGet(ptr %997, ptr %1552)
  %1554 = load ptr, ptr @tag_TypeOf, align 8
  %1555 = call ptr @Builtins__structGet(ptr %997, ptr %1554)
  %1556 = load ptr, ptr @tag_Equals, align 8
  %1557 = call ptr @Builtins__structGet(ptr %997, ptr %1556)
  %1558 = load ptr, ptr @tag_Equals, align 8
  %1559 = call ptr @Builtins__structGet(ptr %997, ptr %1558)
  %1560 = load ptr, ptr @tag_Equals, align 8
  %1561 = call ptr @Builtins__structGet(ptr %997, ptr %1560)
  %1562 = load ptr, ptr @tag_TypeOf, align 8
  %1563 = call ptr @Builtins__structGet(ptr %997, ptr %1562)
  %1564 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1565 = call ptr @Builtins__structGet(ptr %997, ptr %1564)
  %1566 = load ptr, ptr @tag_Equals, align 8
  %1567 = call ptr @Builtins__structGet(ptr %997, ptr %1566)
  %1568 = load ptr, ptr @tag_TypeOf, align 8
  %1569 = call ptr @Builtins__structGet(ptr %997, ptr %1568)
  %1570 = load ptr, ptr @tag_IfElse, align 8
  %1571 = call ptr @Builtins__structGet(ptr %997, ptr %1570)
  %1572 = load ptr, ptr @tag_Equals, align 8
  %1573 = call ptr @Builtins__structGet(ptr %997, ptr %1572)
  %1574 = load ptr, ptr @tag_Equals, align 8
  %1575 = call ptr @Builtins__structGet(ptr %997, ptr %1574)
  %1576 = load ptr, ptr @tag_Equals, align 8
  %1577 = call ptr @Builtins__structGet(ptr %997, ptr %1576)
  %1578 = load ptr, ptr @tag_Equals, align 8
  %1579 = call ptr @Builtins__structGet(ptr %997, ptr %1578)
  %1580 = load ptr, ptr @tag_TypeOf, align 8
  %1581 = call ptr @Builtins__structGet(ptr %997, ptr %1580)
  %1582 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1583 = call ptr @Builtins__structGet(ptr %997, ptr %1582)
  %1584 = load ptr, ptr @tag_Equals, align 8
  %1585 = call ptr @Builtins__structGet(ptr %997, ptr %1584)
  %1586 = load ptr, ptr @tag_TypeOf, align 8
  %1587 = call ptr @Builtins__structGet(ptr %997, ptr %1586)
  %1588 = load ptr, ptr @tag_Equals, align 8
  %1589 = call ptr @Builtins__structGet(ptr %997, ptr %1588)
  %1590 = load ptr, ptr @tag_Equals, align 8
  %1591 = call ptr @Builtins__structGet(ptr %997, ptr %1590)
  %1592 = load ptr, ptr @tag_Equals, align 8
  %1593 = call ptr @Builtins__structGet(ptr %997, ptr %1592)
  %1594 = load ptr, ptr @tag_TypeOf, align 8
  %1595 = call ptr @Builtins__structGet(ptr %997, ptr %1594)
  %1596 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1597 = call ptr @Builtins__structGet(ptr %997, ptr %1596)
  %1598 = load ptr, ptr @tag_Equals, align 8
  %1599 = call ptr @Builtins__structGet(ptr %997, ptr %1598)
  %1600 = load ptr, ptr @tag_TypeOf, align 8
  %1601 = call ptr @Builtins__structGet(ptr %997, ptr %1600)
  %1602 = load ptr, ptr @tag_Equals, align 8
  %1603 = call ptr @Builtins__structGet(ptr %997, ptr %1602)
  %1604 = load ptr, ptr @tag_Equals, align 8
  %1605 = call ptr @Builtins__structGet(ptr %997, ptr %1604)
  %1606 = load ptr, ptr @tag_Equals, align 8
  %1607 = call ptr @Builtins__structGet(ptr %997, ptr %1606)
  %1608 = load ptr, ptr @tag_TypeOf, align 8
  %1609 = call ptr @Builtins__structGet(ptr %997, ptr %1608)
  %1610 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1611 = call ptr @Builtins__structGet(ptr %997, ptr %1610)
  %1612 = load ptr, ptr @tag_Equals, align 8
  %1613 = call ptr @Builtins__structGet(ptr %997, ptr %1612)
  %1614 = load ptr, ptr @tag_TypeOf, align 8
  %1615 = call ptr @Builtins__structGet(ptr %997, ptr %1614)
  %1616 = load ptr, ptr @tag_Equals, align 8
  %1617 = call ptr @Builtins__structGet(ptr %997, ptr %1616)
  %1618 = load ptr, ptr @tag_Equals, align 8
  %1619 = call ptr @Builtins__structGet(ptr %997, ptr %1618)
  %1620 = load ptr, ptr @tag_Equals, align 8
  %1621 = call ptr @Builtins__structGet(ptr %997, ptr %1620)
  %1622 = load ptr, ptr @tag_TypeOf, align 8
  %1623 = call ptr @Builtins__structGet(ptr %997, ptr %1622)
  %1624 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1625 = call ptr @Builtins__structGet(ptr %997, ptr %1624)
  %1626 = load ptr, ptr @tag_Equals, align 8
  %1627 = call ptr @Builtins__structGet(ptr %997, ptr %1626)
  %1628 = load ptr, ptr @tag_TypeOf, align 8
  %1629 = call ptr @Builtins__structGet(ptr %997, ptr %1628)
  %1630 = load ptr, ptr @tag_IfElse, align 8
  %1631 = call ptr @Builtins__structGet(ptr %997, ptr %1630)
  %1632 = load ptr, ptr @tag_Equals, align 8
  %1633 = call ptr @Builtins__structGet(ptr %997, ptr %1632)
  %1634 = load ptr, ptr @tag_Equals, align 8
  %1635 = call ptr @Builtins__structGet(ptr %997, ptr %1634)
  %1636 = load ptr, ptr @tag_Equals, align 8
  %1637 = call ptr @Builtins__structGet(ptr %997, ptr %1636)
  %1638 = load ptr, ptr @tag_TypeOf, align 8
  %1639 = call ptr @Builtins__structGet(ptr %997, ptr %1638)
  %1640 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1641 = call ptr @Builtins__structGet(ptr %997, ptr %1640)
  %1642 = load ptr, ptr @tag_Equals, align 8
  %1643 = call ptr @Builtins__structGet(ptr %997, ptr %1642)
  %1644 = load ptr, ptr @tag_TypeOf, align 8
  %1645 = call ptr @Builtins__structGet(ptr %997, ptr %1644)
  %1646 = load ptr, ptr @tag_Equals, align 8
  %1647 = call ptr @Builtins__structGet(ptr %997, ptr %1646)
  %1648 = load ptr, ptr @tag_Equals, align 8
  %1649 = call ptr @Builtins__structGet(ptr %997, ptr %1648)
  %1650 = load ptr, ptr @tag_Equals, align 8
  %1651 = call ptr @Builtins__structGet(ptr %997, ptr %1650)
  %1652 = load ptr, ptr @tag_TypeOf, align 8
  %1653 = call ptr @Builtins__structGet(ptr %997, ptr %1652)
  %1654 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1655 = call ptr @Builtins__structGet(ptr %997, ptr %1654)
  %1656 = load ptr, ptr @tag_Equals, align 8
  %1657 = call ptr @Builtins__structGet(ptr %997, ptr %1656)
  %1658 = load ptr, ptr @tag_TypeOf, align 8
  %1659 = call ptr @Builtins__structGet(ptr %997, ptr %1658)
  %1660 = load ptr, ptr @tag_IfElse, align 8
  %1661 = call ptr @Builtins__structGet(ptr %997, ptr %1660)
  %1662 = load ptr, ptr @tag_Equals, align 8
  %1663 = call ptr @Builtins__structGet(ptr %997, ptr %1662)
  %1664 = load ptr, ptr @tag_Equals, align 8
  %1665 = call ptr @Builtins__structGet(ptr %997, ptr %1664)
  %1666 = load ptr, ptr @tag_TypeOf, align 8
  %1667 = call ptr @Builtins__structGet(ptr %997, ptr %1666)
  %1668 = load ptr, ptr @tag_IntAdd, align 8
  %1669 = call ptr @Builtins__structGet(ptr %997, ptr %1668)
  %1670 = load ptr, ptr @tag_IntSubtract, align 8
  %1671 = call ptr @Builtins__structGet(ptr %997, ptr %1670)
  %1672 = load ptr, ptr @tag_IntMultiply, align 8
  %1673 = call ptr @Builtins__structGet(ptr %997, ptr %1672)
  %1674 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %1675 = call ptr @Builtins__structGet(ptr %997, ptr %1674)
  %1676 = load ptr, ptr @tag_IntRemainder, align 8
  %1677 = call ptr @Builtins__structGet(ptr %997, ptr %1676)
  %1678 = load ptr, ptr @tag_IntModulo, align 8
  %1679 = call ptr @Builtins__structGet(ptr %997, ptr %1678)
  %1680 = load ptr, ptr @tag_IntShiftLeft, align 8
  %1681 = call ptr @Builtins__structGet(ptr %997, ptr %1680)
  %1682 = load ptr, ptr @tag_IntShiftRight, align 8
  %1683 = call ptr @Builtins__structGet(ptr %997, ptr %1682)
  %1684 = load ptr, ptr @tag_IntBitLength, align 8
  %1685 = call ptr @Builtins__structGet(ptr %997, ptr %1684)
  %1686 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %1687 = call ptr @Builtins__structGet(ptr %997, ptr %1686)
  %1688 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %1689 = call ptr @Builtins__structGet(ptr %997, ptr %1688)
  %1690 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %1691 = call ptr @Builtins__structGet(ptr %997, ptr %1690)
  %1692 = load ptr, ptr @tag_IntParse, align 8
  %1693 = call ptr @Builtins__structGet(ptr %997, ptr %1692)
  %1694 = load ptr, ptr @tag_Equals, align 8
  %1695 = call ptr @Builtins__structGet(ptr %997, ptr %1694)
  %1696 = load ptr, ptr @tag_Equals, align 8
  %1697 = call ptr @Builtins__structGet(ptr %997, ptr %1696)
  %1698 = load ptr, ptr @tag_Equals, align 8
  %1699 = call ptr @Builtins__structGet(ptr %997, ptr %1698)
  %1700 = load ptr, ptr @tag_TypeOf, align 8
  %1701 = call ptr @Builtins__structGet(ptr %997, ptr %1700)
  %1702 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1703 = call ptr @Builtins__structGet(ptr %997, ptr %1702)
  %1704 = load ptr, ptr @tag_Equals, align 8
  %1705 = call ptr @Builtins__structGet(ptr %997, ptr %1704)
  %1706 = load ptr, ptr @tag_TypeOf, align 8
  %1707 = call ptr @Builtins__structGet(ptr %997, ptr %1706)
  %1708 = load ptr, ptr @tag_Equals, align 8
  %1709 = call ptr @Builtins__structGet(ptr %997, ptr %1708)
  %1710 = load ptr, ptr @tag_Equals, align 8
  %1711 = call ptr @Builtins__structGet(ptr %997, ptr %1710)
  %1712 = load ptr, ptr @tag_Equals, align 8
  %1713 = call ptr @Builtins__structGet(ptr %997, ptr %1712)
  %1714 = load ptr, ptr @tag_TypeOf, align 8
  %1715 = call ptr @Builtins__structGet(ptr %997, ptr %1714)
  %1716 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1717 = call ptr @Builtins__structGet(ptr %997, ptr %1716)
  %1718 = load ptr, ptr @tag_Equals, align 8
  %1719 = call ptr @Builtins__structGet(ptr %997, ptr %1718)
  %1720 = load ptr, ptr @tag_TypeOf, align 8
  %1721 = call ptr @Builtins__structGet(ptr %997, ptr %1720)
  %1722 = load ptr, ptr @tag_Equals, align 8
  %1723 = call ptr @Builtins__structGet(ptr %997, ptr %1722)
  %1724 = load ptr, ptr @tag_Equals, align 8
  %1725 = call ptr @Builtins__structGet(ptr %997, ptr %1724)
  %1726 = load ptr, ptr @tag_Equals, align 8
  %1727 = call ptr @Builtins__structGet(ptr %997, ptr %1726)
  %1728 = load ptr, ptr @tag_TypeOf, align 8
  %1729 = call ptr @Builtins__structGet(ptr %997, ptr %1728)
  %1730 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1731 = call ptr @Builtins__structGet(ptr %997, ptr %1730)
  %1732 = load ptr, ptr @tag_Equals, align 8
  %1733 = call ptr @Builtins__structGet(ptr %997, ptr %1732)
  %1734 = load ptr, ptr @tag_TypeOf, align 8
  %1735 = call ptr @Builtins__structGet(ptr %997, ptr %1734)
  %1736 = load ptr, ptr @tag_IfElse, align 8
  %1737 = call ptr @Builtins__structGet(ptr %997, ptr %1736)
  %1738 = load ptr, ptr @tag_Equals, align 8
  %1739 = call ptr @Builtins__structGet(ptr %997, ptr %1738)
  %1740 = load ptr, ptr @tag_Equals, align 8
  %1741 = call ptr @Builtins__structGet(ptr %997, ptr %1740)
  %1742 = load ptr, ptr @tag_Equals, align 8
  %1743 = call ptr @Builtins__structGet(ptr %997, ptr %1742)
  %1744 = load ptr, ptr @tag_TypeOf, align 8
  %1745 = call ptr @Builtins__structGet(ptr %997, ptr %1744)
  %1746 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1747 = call ptr @Builtins__structGet(ptr %997, ptr %1746)
  %1748 = load ptr, ptr @tag_Equals, align 8
  %1749 = call ptr @Builtins__structGet(ptr %997, ptr %1748)
  %1750 = load ptr, ptr @tag_Equals, align 8
  %1751 = call ptr @Builtins__structGet(ptr %997, ptr %1750)
  %1752 = load ptr, ptr @tag_Equals, align 8
  %1753 = call ptr @Builtins__structGet(ptr %997, ptr %1752)
  %1754 = load ptr, ptr @tag_TypeOf, align 8
  %1755 = call ptr @Builtins__structGet(ptr %997, ptr %1754)
  %1756 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1757 = call ptr @Builtins__structGet(ptr %997, ptr %1756)
  %1758 = load ptr, ptr @tag_Equals, align 8
  %1759 = call ptr @Builtins__structGet(ptr %997, ptr %1758)
  %1760 = load ptr, ptr @tag_TypeOf, align 8
  %1761 = call ptr @Builtins__structGet(ptr %997, ptr %1760)
  %1762 = load ptr, ptr @tag_Equals, align 8
  %1763 = call ptr @Builtins__structGet(ptr %997, ptr %1762)
  %1764 = load ptr, ptr @tag_Equals, align 8
  %1765 = call ptr @Builtins__structGet(ptr %997, ptr %1764)
  %1766 = load ptr, ptr @tag_Equals, align 8
  %1767 = call ptr @Builtins__structGet(ptr %997, ptr %1766)
  %1768 = load ptr, ptr @tag_TypeOf, align 8
  %1769 = call ptr @Builtins__structGet(ptr %997, ptr %1768)
  %1770 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1771 = call ptr @Builtins__structGet(ptr %997, ptr %1770)
  %1772 = load ptr, ptr @tag_Equals, align 8
  %1773 = call ptr @Builtins__structGet(ptr %997, ptr %1772)
  %1774 = load ptr, ptr @tag_TypeOf, align 8
  %1775 = call ptr @Builtins__structGet(ptr %997, ptr %1774)
  %1776 = load ptr, ptr @tag_Equals, align 8
  %1777 = call ptr @Builtins__structGet(ptr %997, ptr %1776)
  %1778 = load ptr, ptr @tag_Equals, align 8
  %1779 = call ptr @Builtins__structGet(ptr %997, ptr %1778)
  %1780 = load ptr, ptr @tag_Equals, align 8
  %1781 = call ptr @Builtins__structGet(ptr %997, ptr %1780)
  %1782 = load ptr, ptr @tag_TypeOf, align 8
  %1783 = call ptr @Builtins__structGet(ptr %997, ptr %1782)
  %1784 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1785 = call ptr @Builtins__structGet(ptr %997, ptr %1784)
  %1786 = load ptr, ptr @tag_Equals, align 8
  %1787 = call ptr @Builtins__structGet(ptr %997, ptr %1786)
  %1788 = load ptr, ptr @tag_TypeOf, align 8
  %1789 = call ptr @Builtins__structGet(ptr %997, ptr %1788)
  %1790 = load ptr, ptr @tag_Equals, align 8
  %1791 = call ptr @Builtins__structGet(ptr %997, ptr %1790)
  %1792 = load ptr, ptr @tag_Equals, align 8
  %1793 = call ptr @Builtins__structGet(ptr %997, ptr %1792)
  %1794 = load ptr, ptr @tag_Equals, align 8
  %1795 = call ptr @Builtins__structGet(ptr %997, ptr %1794)
  %1796 = load ptr, ptr @tag_TypeOf, align 8
  %1797 = call ptr @Builtins__structGet(ptr %997, ptr %1796)
  %1798 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1799 = call ptr @Builtins__structGet(ptr %997, ptr %1798)
  %1800 = load ptr, ptr @tag_Equals, align 8
  %1801 = call ptr @Builtins__structGet(ptr %997, ptr %1800)
  %1802 = load ptr, ptr @tag_TypeOf, align 8
  %1803 = call ptr @Builtins__structGet(ptr %997, ptr %1802)
  %1804 = load ptr, ptr @tag_IfElse, align 8
  %1805 = call ptr @Builtins__structGet(ptr %997, ptr %1804)
  %1806 = load ptr, ptr @tag_Equals, align 8
  %1807 = call ptr @Builtins__structGet(ptr %997, ptr %1806)
  %1808 = load ptr, ptr @tag_Equals, align 8
  %1809 = call ptr @Builtins__structGet(ptr %997, ptr %1808)
  %1810 = load ptr, ptr @tag_Equals, align 8
  %1811 = call ptr @Builtins__structGet(ptr %997, ptr %1810)
  %1812 = load ptr, ptr @tag_TypeOf, align 8
  %1813 = call ptr @Builtins__structGet(ptr %997, ptr %1812)
  %1814 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1815 = call ptr @Builtins__structGet(ptr %997, ptr %1814)
  %1816 = load ptr, ptr @tag_Equals, align 8
  %1817 = call ptr @Builtins__structGet(ptr %997, ptr %1816)
  %1818 = load ptr, ptr @tag_TypeOf, align 8
  %1819 = call ptr @Builtins__structGet(ptr %997, ptr %1818)
  %1820 = load ptr, ptr @tag_Equals, align 8
  %1821 = call ptr @Builtins__structGet(ptr %997, ptr %1820)
  %1822 = load ptr, ptr @tag_Equals, align 8
  %1823 = call ptr @Builtins__structGet(ptr %997, ptr %1822)
  %1824 = load ptr, ptr @tag_Equals, align 8
  %1825 = call ptr @Builtins__structGet(ptr %997, ptr %1824)
  %1826 = load ptr, ptr @tag_TypeOf, align 8
  %1827 = call ptr @Builtins__structGet(ptr %997, ptr %1826)
  %1828 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1829 = call ptr @Builtins__structGet(ptr %997, ptr %1828)
  %1830 = load ptr, ptr @tag_Equals, align 8
  %1831 = call ptr @Builtins__structGet(ptr %997, ptr %1830)
  %1832 = load ptr, ptr @tag_TypeOf, align 8
  %1833 = call ptr @Builtins__structGet(ptr %997, ptr %1832)
  %1834 = load ptr, ptr @tag_IfElse, align 8
  %1835 = call ptr @Builtins__structGet(ptr %997, ptr %1834)
  %1836 = load ptr, ptr @tag_Equals, align 8
  %1837 = call ptr @Builtins__structGet(ptr %997, ptr %1836)
  %1838 = load ptr, ptr @tag_Equals, align 8
  %1839 = call ptr @Builtins__structGet(ptr %997, ptr %1838)
  %1840 = load ptr, ptr @tag_TypeOf, align 8
  %1841 = call ptr @Builtins__structGet(ptr %997, ptr %1840)
  %1842 = load ptr, ptr @tag_IntAdd, align 8
  %1843 = call ptr @Builtins__structGet(ptr %997, ptr %1842)
  %1844 = load ptr, ptr @tag_IntSubtract, align 8
  %1845 = call ptr @Builtins__structGet(ptr %997, ptr %1844)
  %1846 = load ptr, ptr @tag_IntMultiply, align 8
  %1847 = call ptr @Builtins__structGet(ptr %997, ptr %1846)
  %1848 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %1849 = call ptr @Builtins__structGet(ptr %997, ptr %1848)
  %1850 = load ptr, ptr @tag_IntRemainder, align 8
  %1851 = call ptr @Builtins__structGet(ptr %997, ptr %1850)
  %1852 = load ptr, ptr @tag_IntModulo, align 8
  %1853 = call ptr @Builtins__structGet(ptr %997, ptr %1852)
  %1854 = load ptr, ptr @tag_IntShiftLeft, align 8
  %1855 = call ptr @Builtins__structGet(ptr %997, ptr %1854)
  %1856 = load ptr, ptr @tag_IntShiftRight, align 8
  %1857 = call ptr @Builtins__structGet(ptr %997, ptr %1856)
  %1858 = load ptr, ptr @tag_IntBitLength, align 8
  %1859 = call ptr @Builtins__structGet(ptr %997, ptr %1858)
  %1860 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %1861 = call ptr @Builtins__structGet(ptr %997, ptr %1860)
  %1862 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %1863 = call ptr @Builtins__structGet(ptr %997, ptr %1862)
  %1864 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %1865 = call ptr @Builtins__structGet(ptr %997, ptr %1864)
  %1866 = load ptr, ptr @tag_IntParse, align 8
  %1867 = call ptr @Builtins__structGet(ptr %997, ptr %1866)
  %1868 = load ptr, ptr @tag_Equals, align 8
  %1869 = call ptr @Builtins__structGet(ptr %997, ptr %1868)
  %1870 = load ptr, ptr @tag_Equals, align 8
  %1871 = call ptr @Builtins__structGet(ptr %997, ptr %1870)
  %1872 = load ptr, ptr @tag_Equals, align 8
  %1873 = call ptr @Builtins__structGet(ptr %997, ptr %1872)
  %1874 = load ptr, ptr @tag_TypeOf, align 8
  %1875 = call ptr @Builtins__structGet(ptr %997, ptr %1874)
  %1876 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1877 = call ptr @Builtins__structGet(ptr %997, ptr %1876)
  %1878 = load ptr, ptr @tag_Equals, align 8
  %1879 = call ptr @Builtins__structGet(ptr %997, ptr %1878)
  %1880 = load ptr, ptr @tag_TypeOf, align 8
  %1881 = call ptr @Builtins__structGet(ptr %997, ptr %1880)
  %1882 = load ptr, ptr @tag_Equals, align 8
  %1883 = call ptr @Builtins__structGet(ptr %997, ptr %1882)
  %1884 = load ptr, ptr @tag_Equals, align 8
  %1885 = call ptr @Builtins__structGet(ptr %997, ptr %1884)
  %1886 = load ptr, ptr @tag_Equals, align 8
  %1887 = call ptr @Builtins__structGet(ptr %997, ptr %1886)
  %1888 = load ptr, ptr @tag_TypeOf, align 8
  %1889 = call ptr @Builtins__structGet(ptr %997, ptr %1888)
  %1890 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1891 = call ptr @Builtins__structGet(ptr %997, ptr %1890)
  %1892 = load ptr, ptr @tag_Equals, align 8
  %1893 = call ptr @Builtins__structGet(ptr %997, ptr %1892)
  %1894 = load ptr, ptr @tag_TypeOf, align 8
  %1895 = call ptr @Builtins__structGet(ptr %997, ptr %1894)
  %1896 = load ptr, ptr @tag_Equals, align 8
  %1897 = call ptr @Builtins__structGet(ptr %997, ptr %1896)
  %1898 = load ptr, ptr @tag_Equals, align 8
  %1899 = call ptr @Builtins__structGet(ptr %997, ptr %1898)
  %1900 = load ptr, ptr @tag_Equals, align 8
  %1901 = call ptr @Builtins__structGet(ptr %997, ptr %1900)
  %1902 = load ptr, ptr @tag_TypeOf, align 8
  %1903 = call ptr @Builtins__structGet(ptr %997, ptr %1902)
  %1904 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1905 = call ptr @Builtins__structGet(ptr %997, ptr %1904)
  %1906 = load ptr, ptr @tag_Equals, align 8
  %1907 = call ptr @Builtins__structGet(ptr %997, ptr %1906)
  %1908 = load ptr, ptr @tag_TypeOf, align 8
  %1909 = call ptr @Builtins__structGet(ptr %997, ptr %1908)
  %1910 = load ptr, ptr @tag_IfElse, align 8
  %1911 = call ptr @Builtins__structGet(ptr %997, ptr %1910)
  %1912 = load ptr, ptr @tag_Equals, align 8
  %1913 = call ptr @Builtins__structGet(ptr %997, ptr %1912)
  %1914 = load ptr, ptr @tag_Equals, align 8
  %1915 = call ptr @Builtins__structGet(ptr %997, ptr %1914)
  %1916 = load ptr, ptr @tag_Equals, align 8
  %1917 = call ptr @Builtins__structGet(ptr %997, ptr %1916)
  %1918 = load ptr, ptr @tag_TypeOf, align 8
  %1919 = call ptr @Builtins__structGet(ptr %997, ptr %1918)
  %1920 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1921 = call ptr @Builtins__structGet(ptr %997, ptr %1920)
  %1922 = load ptr, ptr @tag_Equals, align 8
  %1923 = call ptr @Builtins__structGet(ptr %997, ptr %1922)
  %1924 = load ptr, ptr @tag_Equals, align 8
  %1925 = call ptr @Builtins__structGet(ptr %997, ptr %1924)
  %1926 = load ptr, ptr @tag_Equals, align 8
  %1927 = call ptr @Builtins__structGet(ptr %997, ptr %1926)
  %1928 = load ptr, ptr @tag_TypeOf, align 8
  %1929 = call ptr @Builtins__structGet(ptr %997, ptr %1928)
  %1930 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1931 = call ptr @Builtins__structGet(ptr %997, ptr %1930)
  %1932 = load ptr, ptr @tag_Equals, align 8
  %1933 = call ptr @Builtins__structGet(ptr %997, ptr %1932)
  %1934 = load ptr, ptr @tag_TypeOf, align 8
  %1935 = call ptr @Builtins__structGet(ptr %997, ptr %1934)
  %1936 = load ptr, ptr @tag_Equals, align 8
  %1937 = call ptr @Builtins__structGet(ptr %997, ptr %1936)
  %1938 = load ptr, ptr @tag_Equals, align 8
  %1939 = call ptr @Builtins__structGet(ptr %997, ptr %1938)
  %1940 = load ptr, ptr @tag_Equals, align 8
  %1941 = call ptr @Builtins__structGet(ptr %997, ptr %1940)
  %1942 = load ptr, ptr @tag_TypeOf, align 8
  %1943 = call ptr @Builtins__structGet(ptr %997, ptr %1942)
  %1944 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1945 = call ptr @Builtins__structGet(ptr %997, ptr %1944)
  %1946 = load ptr, ptr @tag_Equals, align 8
  %1947 = call ptr @Builtins__structGet(ptr %997, ptr %1946)
  %1948 = load ptr, ptr @tag_TypeOf, align 8
  %1949 = call ptr @Builtins__structGet(ptr %997, ptr %1948)
  %1950 = load ptr, ptr @tag_IfElse, align 8
  %1951 = call ptr @Builtins__structGet(ptr %997, ptr %1950)
  %1952 = load ptr, ptr @tag_Equals, align 8
  %1953 = call ptr @Builtins__structGet(ptr %997, ptr %1952)
  %1954 = load ptr, ptr @tag_TypeOf, align 8
  %1955 = call ptr @Builtins__structGet(ptr %997, ptr %1954)
  %1956 = load ptr, ptr @tag_Equals, align 8
  %1957 = call ptr @Builtins__structGet(ptr %997, ptr %1956)
  %1958 = load ptr, ptr @tag_Equals, align 8
  %1959 = call ptr @Builtins__structGet(ptr %997, ptr %1958)
  %1960 = load ptr, ptr @tag_Equals, align 8
  %1961 = call ptr @Builtins__structGet(ptr %997, ptr %1960)
  %1962 = load ptr, ptr @tag_TypeOf, align 8
  %1963 = call ptr @Builtins__structGet(ptr %997, ptr %1962)
  %1964 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1965 = call ptr @Builtins__structGet(ptr %997, ptr %1964)
  %1966 = load ptr, ptr @tag_Equals, align 8
  %1967 = call ptr @Builtins__structGet(ptr %997, ptr %1966)
  %1968 = load ptr, ptr @tag_TypeOf, align 8
  %1969 = call ptr @Builtins__structGet(ptr %997, ptr %1968)
  %1970 = load ptr, ptr @tag_Equals, align 8
  %1971 = call ptr @Builtins__structGet(ptr %997, ptr %1970)
  %1972 = load ptr, ptr @tag_Equals, align 8
  %1973 = call ptr @Builtins__structGet(ptr %997, ptr %1972)
  %1974 = load ptr, ptr @tag_Equals, align 8
  %1975 = call ptr @Builtins__structGet(ptr %997, ptr %1974)
  %1976 = load ptr, ptr @tag_TypeOf, align 8
  %1977 = call ptr @Builtins__structGet(ptr %997, ptr %1976)
  %1978 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1979 = call ptr @Builtins__structGet(ptr %997, ptr %1978)
  %1980 = load ptr, ptr @tag_Equals, align 8
  %1981 = call ptr @Builtins__structGet(ptr %997, ptr %1980)
  %1982 = load ptr, ptr @tag_TypeOf, align 8
  %1983 = call ptr @Builtins__structGet(ptr %997, ptr %1982)
  %1984 = load ptr, ptr @tag_Equals, align 8
  %1985 = call ptr @Builtins__structGet(ptr %997, ptr %1984)
  %1986 = load ptr, ptr @tag_Equals, align 8
  %1987 = call ptr @Builtins__structGet(ptr %997, ptr %1986)
  %1988 = load ptr, ptr @tag_Equals, align 8
  %1989 = call ptr @Builtins__structGet(ptr %997, ptr %1988)
  %1990 = load ptr, ptr @tag_TypeOf, align 8
  %1991 = call ptr @Builtins__structGet(ptr %997, ptr %1990)
  %1992 = load ptr, ptr @tag_GetArgumentCount, align 8
  %1993 = call ptr @Builtins__structGet(ptr %997, ptr %1992)
  %1994 = load ptr, ptr @tag_Equals, align 8
  %1995 = call ptr @Builtins__structGet(ptr %997, ptr %1994)
  %1996 = load ptr, ptr @tag_TypeOf, align 8
  %1997 = call ptr @Builtins__structGet(ptr %997, ptr %1996)
  %1998 = load ptr, ptr @tag_IfElse, align 8
  %1999 = call ptr @Builtins__structGet(ptr %997, ptr %1998)
  %2000 = load ptr, ptr @tag_Equals, align 8
  %2001 = call ptr @Builtins__structGet(ptr %997, ptr %2000)
  %2002 = load ptr, ptr @tag_TypeOf, align 8
  %2003 = call ptr @Builtins__structGet(ptr %997, ptr %2002)
  %2004 = load ptr, ptr @tag_TagHasValue, align 8
  %2005 = call ptr @Builtins__structGet(ptr %997, ptr %2004)
  %2006 = load ptr, ptr @tag_TagWithoutValue, align 8
  %2007 = call ptr @Builtins__structGet(ptr %997, ptr %2006)
  %2008 = load ptr, ptr @tag_TagGetValue, align 8
  %2009 = call ptr @Builtins__structGet(ptr %997, ptr %2008)
  %2010 = load ptr, ptr @tag_Equals, align 8
  %2011 = call ptr @Builtins__structGet(ptr %997, ptr %2010)
  %2012 = load ptr, ptr @tag_TypeOf, align 8
  %2013 = call ptr @Builtins__structGet(ptr %997, ptr %2012)
  %2014 = load ptr, ptr @tag_Equals, align 8
  %2015 = call ptr @Builtins__structGet(ptr %997, ptr %2014)
  %2016 = load ptr, ptr @tag_TypeOf, align 8
  %2017 = call ptr @Builtins__structGet(ptr %997, ptr %2016)
  %2018 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:list:89\00", ptr %2018, align 1
  %2019 = call ptr @make_candy_text(ptr %2018)
  store ptr %2019, ptr @"Core:list:89", align 8
  %2020 = load ptr, ptr @tag_ListLength, align 8
  %2021 = call ptr @Builtins__structGet(ptr %997, ptr %2020)
  %2022 = alloca i8, i64 13, align 1
  store [13 x i8] c"Core:list:98\00", ptr %2022, align 1
  %2023 = call ptr @make_candy_text(ptr %2022)
  store ptr %2023, ptr @"Core:list:98", align 8
  %2024 = load ptr, ptr @tag_ListGet, align 8
  %2025 = call ptr @Builtins__structGet(ptr %997, ptr %2024)
  %2026 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:107\00", ptr %2026, align 1
  %2027 = call ptr @make_candy_text(ptr %2026)
  store ptr %2027, ptr @"Core:list:107", align 8
  %2028 = load ptr, ptr @tag_ListInsert, align 8
  %2029 = call ptr @Builtins__structGet(ptr %997, ptr %2028)
  %2030 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:116\00", ptr %2030, align 1
  %2031 = call ptr @make_candy_text(ptr %2030)
  store ptr %2031, ptr @"Core:list:116", align 8
  %2032 = load ptr, ptr @tag_ListReplace, align 8
  %2033 = call ptr @Builtins__structGet(ptr %997, ptr %2032)
  %2034 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:125\00", ptr %2034, align 1
  %2035 = call ptr @make_candy_text(ptr %2034)
  store ptr %2035, ptr @"Core:list:125", align 8
  %2036 = load ptr, ptr @tag_ListRemoveAt, align 8
  %2037 = call ptr @Builtins__structGet(ptr %997, ptr %2036)
  %2038 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:list:134\00", ptr %2038, align 1
  %2039 = call ptr @make_candy_text(ptr %2038)
  store ptr %2039, ptr @"Core:list:134", align 8
  %2040 = load ptr, ptr @tag_ListFilled, align 8
  %2041 = call ptr @Builtins__structGet(ptr %997, ptr %2040)
  %2042 = load ptr, ptr @tag_Equals, align 8
  %2043 = call ptr @Builtins__structGet(ptr %997, ptr %2042)
  %2044 = load ptr, ptr @tag_Equals, align 8
  %2045 = call ptr @Builtins__structGet(ptr %997, ptr %2044)
  %2046 = load ptr, ptr @tag_Equals, align 8
  %2047 = call ptr @Builtins__structGet(ptr %997, ptr %2046)
  %2048 = load ptr, ptr @tag_TypeOf, align 8
  %2049 = call ptr @Builtins__structGet(ptr %997, ptr %2048)
  %2050 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2051 = call ptr @Builtins__structGet(ptr %997, ptr %2050)
  %2052 = load ptr, ptr @tag_Equals, align 8
  %2053 = call ptr @Builtins__structGet(ptr %997, ptr %2052)
  %2054 = load ptr, ptr @tag_TypeOf, align 8
  %2055 = call ptr @Builtins__structGet(ptr %997, ptr %2054)
  %2056 = load ptr, ptr @tag_Equals, align 8
  %2057 = call ptr @Builtins__structGet(ptr %997, ptr %2056)
  %2058 = load ptr, ptr @tag_Equals, align 8
  %2059 = call ptr @Builtins__structGet(ptr %997, ptr %2058)
  %2060 = load ptr, ptr @tag_Equals, align 8
  %2061 = call ptr @Builtins__structGet(ptr %997, ptr %2060)
  %2062 = load ptr, ptr @tag_TypeOf, align 8
  %2063 = call ptr @Builtins__structGet(ptr %997, ptr %2062)
  %2064 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2065 = call ptr @Builtins__structGet(ptr %997, ptr %2064)
  %2066 = load ptr, ptr @tag_Equals, align 8
  %2067 = call ptr @Builtins__structGet(ptr %997, ptr %2066)
  %2068 = load ptr, ptr @tag_TypeOf, align 8
  %2069 = call ptr @Builtins__structGet(ptr %997, ptr %2068)
  %2070 = load ptr, ptr @tag_IfElse, align 8
  %2071 = call ptr @Builtins__structGet(ptr %997, ptr %2070)
  %2072 = load ptr, ptr @tag_Equals, align 8
  %2073 = call ptr @Builtins__structGet(ptr %997, ptr %2072)
  %2074 = load ptr, ptr @tag_TypeOf, align 8
  %2075 = call ptr @Builtins__structGet(ptr %997, ptr %2074)
  %2076 = load ptr, ptr @tag_Equals, align 8
  %2077 = call ptr @Builtins__structGet(ptr %997, ptr %2076)
  %2078 = load ptr, ptr @tag_TypeOf, align 8
  %2079 = call ptr @Builtins__structGet(ptr %997, ptr %2078)
  %2080 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:341\00", ptr %2080, align 1
  %2081 = call ptr @make_candy_text(ptr %2080)
  store ptr %2081, ptr @"Core:text:341", align 8
  %2082 = load ptr, ptr @tag_TextFromUtf8, align 8
  %2083 = call ptr @Builtins__structGet(ptr %997, ptr %2082)
  %2084 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:350\00", ptr %2084, align 1
  %2085 = call ptr @make_candy_text(ptr %2084)
  store ptr %2085, ptr @"Core:text:350", align 8
  %2086 = load ptr, ptr @tag_TextIsEmpty, align 8
  %2087 = call ptr @Builtins__structGet(ptr %997, ptr %2086)
  %2088 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:359\00", ptr %2088, align 1
  %2089 = call ptr @make_candy_text(ptr %2088)
  store ptr %2089, ptr @"Core:text:359", align 8
  %2090 = load ptr, ptr @tag_TextLength, align 8
  %2091 = call ptr @Builtins__structGet(ptr %997, ptr %2090)
  %2092 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:368\00", ptr %2092, align 1
  %2093 = call ptr @make_candy_text(ptr %2092)
  store ptr %2093, ptr @"Core:text:368", align 8
  %2094 = load ptr, ptr @tag_TextCharacters, align 8
  %2095 = call ptr @Builtins__structGet(ptr %997, ptr %2094)
  %2096 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:377\00", ptr %2096, align 1
  %2097 = call ptr @make_candy_text(ptr %2096)
  store ptr %2097, ptr @"Core:text:377", align 8
  %2098 = load ptr, ptr @tag_TextGetRange, align 8
  %2099 = call ptr @Builtins__structGet(ptr %997, ptr %2098)
  %2100 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:386\00", ptr %2100, align 1
  %2101 = call ptr @make_candy_text(ptr %2100)
  store ptr %2101, ptr @"Core:text:386", align 8
  %2102 = load ptr, ptr @tag_TextConcatenate, align 8
  %2103 = call ptr @Builtins__structGet(ptr %997, ptr %2102)
  %2104 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:395\00", ptr %2104, align 1
  %2105 = call ptr @make_candy_text(ptr %2104)
  store ptr %2105, ptr @"Core:text:395", align 8
  %2106 = load ptr, ptr @tag_TextStartsWith, align 8
  %2107 = call ptr @Builtins__structGet(ptr %997, ptr %2106)
  %2108 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:404\00", ptr %2108, align 1
  %2109 = call ptr @make_candy_text(ptr %2108)
  store ptr %2109, ptr @"Core:text:404", align 8
  %2110 = load ptr, ptr @tag_TextEndsWith, align 8
  %2111 = call ptr @Builtins__structGet(ptr %997, ptr %2110)
  %2112 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:413\00", ptr %2112, align 1
  %2113 = call ptr @make_candy_text(ptr %2112)
  store ptr %2113, ptr @"Core:text:413", align 8
  %2114 = load ptr, ptr @tag_TextContains, align 8
  %2115 = call ptr @Builtins__structGet(ptr %997, ptr %2114)
  %2116 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:422\00", ptr %2116, align 1
  %2117 = call ptr @make_candy_text(ptr %2116)
  store ptr %2117, ptr @"Core:text:422", align 8
  %2118 = load ptr, ptr @tag_TextTrimStart, align 8
  %2119 = call ptr @Builtins__structGet(ptr %997, ptr %2118)
  %2120 = alloca i8, i64 14, align 1
  store [14 x i8] c"Core:text:431\00", ptr %2120, align 1
  %2121 = call ptr @make_candy_text(ptr %2120)
  store ptr %2121, ptr @"Core:text:431", align 8
  %2122 = load ptr, ptr @tag_TextTrimEnd, align 8
  %2123 = call ptr @Builtins__structGet(ptr %997, ptr %2122)
  %2124 = load ptr, ptr @tag_Equals, align 8
  %2125 = call ptr @Builtins__structGet(ptr %997, ptr %2124)
  %2126 = load ptr, ptr @tag_Equals, align 8
  %2127 = call ptr @Builtins__structGet(ptr %997, ptr %2126)
  %2128 = load ptr, ptr @tag_TypeOf, align 8
  %2129 = call ptr @Builtins__structGet(ptr %997, ptr %2128)
  %2130 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %2131 = getelementptr inbounds { ptr, ptr }, ptr %2130, i32 0, i32 0
  store ptr %2127, ptr %2131, align 8
  %2132 = getelementptr inbounds { ptr, ptr }, ptr %2130, i32 0, i32 1
  store ptr %2129, ptr %2132, align 8
  %2133 = call ptr @make_candy_function(ptr @Core_type_is, ptr %2130, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2133, ptr @fun_Core_type_is, align 8
  %2134 = alloca ptr, i64 3, align 8
  %2135 = alloca ptr, i64 3, align 8
  %2136 = load ptr, ptr @tag_TypeOf, align 8
  %2137 = getelementptr ptr, ptr %2134, i64 0
  store ptr %2136, ptr %2137, align 8
  %2138 = getelementptr ptr, ptr %2135, i64 0
  store ptr %2129, ptr %2138, align 8
  %2139 = load ptr, ptr @tag_Is, align 8
  %2140 = load ptr, ptr @fun_Core_type_is, align 8
  %2141 = getelementptr ptr, ptr %2134, i64 1
  store ptr %2139, ptr %2141, align 8
  %2142 = getelementptr ptr, ptr %2135, i64 1
  store ptr %2140, ptr %2142, align 8
  %2143 = getelementptr ptr, ptr %2134, i64 2
  store ptr null, ptr %2143, align 8
  %2144 = getelementptr ptr, ptr %2135, i64 2
  store ptr null, ptr %2144, align 8
  %2145 = call ptr @make_candy_struct(ptr %2134, ptr %2135)
  %2146 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2147 = getelementptr inbounds { ptr }, ptr %2146, i32 0, i32 0
  store ptr %2145, ptr %2147, align 8
  %2148 = call ptr @make_candy_function(ptr @Core_function_is, ptr %2146, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2148, ptr @fun_Core_function_is, align 8
  %2149 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2150 = call ptr @Builtins__structGet(ptr %997, ptr %2149)
  %2151 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2152 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2151, i32 0, i32 0
  store ptr %997, ptr %2152, align 8
  %2153 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2151, i32 0, i32 1
  store ptr %2150, ptr %2153, align 8
  %2154 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2151, i32 0, i32 2
  store ptr %2145, ptr %2154, align 8
  %2155 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2151, i32 0, i32 3
  store ptr %2125, ptr %2155, align 8
  %2156 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %2151, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2156, ptr @fun_Core_function_is0, align 8
  %2157 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2158 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2157, i32 0, i32 0
  store ptr %997, ptr %2158, align 8
  %2159 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2157, i32 0, i32 1
  store ptr %2150, ptr %2159, align 8
  %2160 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2157, i32 0, i32 2
  store ptr %2145, ptr %2160, align 8
  %2161 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2157, i32 0, i32 3
  store ptr %2125, ptr %2161, align 8
  %2162 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %2157, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2162, ptr @fun_Core_function_is1, align 8
  %2163 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2164 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2163, i32 0, i32 0
  store ptr %997, ptr %2164, align 8
  %2165 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2163, i32 0, i32 1
  store ptr %2150, ptr %2165, align 8
  %2166 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2163, i32 0, i32 2
  store ptr %2145, ptr %2166, align 8
  %2167 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2163, i32 0, i32 3
  store ptr %2125, ptr %2167, align 8
  %2168 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %2163, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2168, ptr @fun_Core_function_is2, align 8
  %2169 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2170 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2169, i32 0, i32 0
  store ptr %997, ptr %2170, align 8
  %2171 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2169, i32 0, i32 1
  store ptr %2150, ptr %2171, align 8
  %2172 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2169, i32 0, i32 2
  store ptr %2145, ptr %2172, align 8
  %2173 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2169, i32 0, i32 3
  store ptr %2125, ptr %2173, align 8
  %2174 = call ptr @make_candy_function(ptr @Core_function_is3, ptr %2169, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2174, ptr @fun_Core_function_is3, align 8
  %2175 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2176 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2175, i32 0, i32 0
  store ptr %997, ptr %2176, align 8
  %2177 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2175, i32 0, i32 1
  store ptr %2150, ptr %2177, align 8
  %2178 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2175, i32 0, i32 2
  store ptr %2145, ptr %2178, align 8
  %2179 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2175, i32 0, i32 3
  store ptr %2125, ptr %2179, align 8
  %2180 = call ptr @make_candy_function(ptr @Core_function_is4, ptr %2175, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2180, ptr @fun_Core_function_is4, align 8
  %2181 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2182 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2181, i32 0, i32 0
  store ptr %997, ptr %2182, align 8
  %2183 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2181, i32 0, i32 1
  store ptr %2150, ptr %2183, align 8
  %2184 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2181, i32 0, i32 2
  store ptr %2145, ptr %2184, align 8
  %2185 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2181, i32 0, i32 3
  store ptr %2125, ptr %2185, align 8
  %2186 = call ptr @make_candy_function(ptr @Core_function_is5, ptr %2181, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2186, ptr @fun_Core_function_is5, align 8
  %2187 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2188 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2187, i32 0, i32 0
  store ptr %997, ptr %2188, align 8
  %2189 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2187, i32 0, i32 1
  store ptr %2150, ptr %2189, align 8
  %2190 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2187, i32 0, i32 2
  store ptr %2145, ptr %2190, align 8
  %2191 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2187, i32 0, i32 3
  store ptr %2125, ptr %2191, align 8
  %2192 = call ptr @make_candy_function(ptr @Core_function_run, ptr %2187, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2192, ptr @fun_Core_function_run, align 8
  %2193 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %2194 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2193, i32 0, i32 0
  store ptr %997, ptr %2194, align 8
  %2195 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2193, i32 0, i32 1
  store ptr %2150, ptr %2195, align 8
  %2196 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2193, i32 0, i32 2
  store ptr %2145, ptr %2196, align 8
  %2197 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %2193, i32 0, i32 3
  store ptr %2125, ptr %2197, align 8
  %2198 = call ptr @make_candy_function(ptr @Core_function_doNotRun, ptr %2193, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %2198, ptr @fun_Core_function_doNotRun, align 8
  %2199 = alloca ptr, i64 11, align 8
  %2200 = alloca ptr, i64 11, align 8
  %2201 = load ptr, ptr @tag_Is0, align 8
  %2202 = load ptr, ptr @fun_Core_function_is0, align 8
  %2203 = getelementptr ptr, ptr %2199, i64 0
  store ptr %2201, ptr %2203, align 8
  %2204 = getelementptr ptr, ptr %2200, i64 0
  store ptr %2202, ptr %2204, align 8
  %2205 = load ptr, ptr @tag_DoNotRun, align 8
  %2206 = load ptr, ptr @fun_Core_function_doNotRun, align 8
  %2207 = getelementptr ptr, ptr %2199, i64 1
  store ptr %2205, ptr %2207, align 8
  %2208 = getelementptr ptr, ptr %2200, i64 1
  store ptr %2206, ptr %2208, align 8
  %2209 = load ptr, ptr @tag_Is, align 8
  %2210 = load ptr, ptr @fun_Core_function_is, align 8
  %2211 = getelementptr ptr, ptr %2199, i64 2
  store ptr %2209, ptr %2211, align 8
  %2212 = getelementptr ptr, ptr %2200, i64 2
  store ptr %2210, ptr %2212, align 8
  %2213 = load ptr, ptr @tag_Is3, align 8
  %2214 = load ptr, ptr @fun_Core_function_is3, align 8
  %2215 = getelementptr ptr, ptr %2199, i64 3
  store ptr %2213, ptr %2215, align 8
  %2216 = getelementptr ptr, ptr %2200, i64 3
  store ptr %2214, ptr %2216, align 8
  %2217 = load ptr, ptr @tag_Is2, align 8
  %2218 = load ptr, ptr @fun_Core_function_is2, align 8
  %2219 = getelementptr ptr, ptr %2199, i64 4
  store ptr %2217, ptr %2219, align 8
  %2220 = getelementptr ptr, ptr %2200, i64 4
  store ptr %2218, ptr %2220, align 8
  %2221 = load ptr, ptr @tag_Is4, align 8
  %2222 = load ptr, ptr @fun_Core_function_is4, align 8
  %2223 = getelementptr ptr, ptr %2199, i64 5
  store ptr %2221, ptr %2223, align 8
  %2224 = getelementptr ptr, ptr %2200, i64 5
  store ptr %2222, ptr %2224, align 8
  %2225 = load ptr, ptr @tag_Is1, align 8
  %2226 = load ptr, ptr @fun_Core_function_is1, align 8
  %2227 = getelementptr ptr, ptr %2199, i64 6
  store ptr %2225, ptr %2227, align 8
  %2228 = getelementptr ptr, ptr %2200, i64 6
  store ptr %2226, ptr %2228, align 8
  %2229 = load ptr, ptr @tag_Is5, align 8
  %2230 = load ptr, ptr @fun_Core_function_is5, align 8
  %2231 = getelementptr ptr, ptr %2199, i64 7
  store ptr %2229, ptr %2231, align 8
  %2232 = getelementptr ptr, ptr %2200, i64 7
  store ptr %2230, ptr %2232, align 8
  %2233 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2234 = getelementptr ptr, ptr %2199, i64 8
  store ptr %2233, ptr %2234, align 8
  %2235 = getelementptr ptr, ptr %2200, i64 8
  store ptr %2150, ptr %2235, align 8
  %2236 = load ptr, ptr @tag_Run, align 8
  %2237 = load ptr, ptr @fun_Core_function_run, align 8
  %2238 = getelementptr ptr, ptr %2199, i64 9
  store ptr %2236, ptr %2238, align 8
  %2239 = getelementptr ptr, ptr %2200, i64 9
  store ptr %2237, ptr %2239, align 8
  %2240 = getelementptr ptr, ptr %2199, i64 10
  store ptr null, ptr %2240, align 8
  %2241 = getelementptr ptr, ptr %2200, i64 10
  store ptr null, ptr %2241, align 8
  %2242 = call ptr @make_candy_struct(ptr %2199, ptr %2200)
  %2243 = load ptr, ptr @tag_Equals, align 8
  %2244 = call ptr @Builtins__structGet(ptr %997, ptr %2243)
  %2245 = load ptr, ptr @tag_Equals, align 8
  %2246 = call ptr @Builtins__structGet(ptr %997, ptr %2245)
  %2247 = load ptr, ptr @tag_Equals, align 8
  %2248 = call ptr @Builtins__structGet(ptr %997, ptr %2247)
  %2249 = load ptr, ptr @tag_TypeOf, align 8
  %2250 = call ptr @Builtins__structGet(ptr %997, ptr %2249)
  %2251 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2252 = call ptr @Builtins__structGet(ptr %997, ptr %2251)
  %2253 = load ptr, ptr @tag_Equals, align 8
  %2254 = call ptr @Builtins__structGet(ptr %997, ptr %2253)
  %2255 = load ptr, ptr @tag_TypeOf, align 8
  %2256 = call ptr @Builtins__structGet(ptr %997, ptr %2255)
  %2257 = load ptr, ptr @tag_Equals, align 8
  %2258 = call ptr @Builtins__structGet(ptr %997, ptr %2257)
  %2259 = load ptr, ptr @tag_Equals, align 8
  %2260 = call ptr @Builtins__structGet(ptr %997, ptr %2259)
  %2261 = load ptr, ptr @tag_Equals, align 8
  %2262 = call ptr @Builtins__structGet(ptr %997, ptr %2261)
  %2263 = load ptr, ptr @tag_TypeOf, align 8
  %2264 = call ptr @Builtins__structGet(ptr %997, ptr %2263)
  %2265 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2266 = call ptr @Builtins__structGet(ptr %997, ptr %2265)
  %2267 = load ptr, ptr @tag_Equals, align 8
  %2268 = call ptr @Builtins__structGet(ptr %997, ptr %2267)
  %2269 = load ptr, ptr @tag_TypeOf, align 8
  %2270 = call ptr @Builtins__structGet(ptr %997, ptr %2269)
  %2271 = load ptr, ptr @tag_Equals, align 8
  %2272 = call ptr @Builtins__structGet(ptr %997, ptr %2271)
  %2273 = load ptr, ptr @tag_Equals, align 8
  %2274 = call ptr @Builtins__structGet(ptr %997, ptr %2273)
  %2275 = load ptr, ptr @tag_Equals, align 8
  %2276 = call ptr @Builtins__structGet(ptr %997, ptr %2275)
  %2277 = load ptr, ptr @tag_TypeOf, align 8
  %2278 = call ptr @Builtins__structGet(ptr %997, ptr %2277)
  %2279 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2280 = call ptr @Builtins__structGet(ptr %997, ptr %2279)
  %2281 = load ptr, ptr @tag_Equals, align 8
  %2282 = call ptr @Builtins__structGet(ptr %997, ptr %2281)
  %2283 = load ptr, ptr @tag_TypeOf, align 8
  %2284 = call ptr @Builtins__structGet(ptr %997, ptr %2283)
  %2285 = load ptr, ptr @tag_Equals, align 8
  %2286 = call ptr @Builtins__structGet(ptr %997, ptr %2285)
  %2287 = load ptr, ptr @tag_Equals, align 8
  %2288 = call ptr @Builtins__structGet(ptr %997, ptr %2287)
  %2289 = load ptr, ptr @tag_Equals, align 8
  %2290 = call ptr @Builtins__structGet(ptr %997, ptr %2289)
  %2291 = load ptr, ptr @tag_TypeOf, align 8
  %2292 = call ptr @Builtins__structGet(ptr %997, ptr %2291)
  %2293 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2294 = call ptr @Builtins__structGet(ptr %997, ptr %2293)
  %2295 = load ptr, ptr @tag_Equals, align 8
  %2296 = call ptr @Builtins__structGet(ptr %997, ptr %2295)
  %2297 = load ptr, ptr @tag_TypeOf, align 8
  %2298 = call ptr @Builtins__structGet(ptr %997, ptr %2297)
  %2299 = load ptr, ptr @tag_IfElse, align 8
  %2300 = call ptr @Builtins__structGet(ptr %997, ptr %2299)
  %2301 = load ptr, ptr @tag_Equals, align 8
  %2302 = call ptr @Builtins__structGet(ptr %997, ptr %2301)
  %2303 = load ptr, ptr @tag_Equals, align 8
  %2304 = call ptr @Builtins__structGet(ptr %997, ptr %2303)
  %2305 = load ptr, ptr @tag_Equals, align 8
  %2306 = call ptr @Builtins__structGet(ptr %997, ptr %2305)
  %2307 = load ptr, ptr @tag_TypeOf, align 8
  %2308 = call ptr @Builtins__structGet(ptr %997, ptr %2307)
  %2309 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2310 = call ptr @Builtins__structGet(ptr %997, ptr %2309)
  %2311 = load ptr, ptr @tag_Equals, align 8
  %2312 = call ptr @Builtins__structGet(ptr %997, ptr %2311)
  %2313 = load ptr, ptr @tag_TypeOf, align 8
  %2314 = call ptr @Builtins__structGet(ptr %997, ptr %2313)
  %2315 = load ptr, ptr @tag_Equals, align 8
  %2316 = call ptr @Builtins__structGet(ptr %997, ptr %2315)
  %2317 = load ptr, ptr @tag_Equals, align 8
  %2318 = call ptr @Builtins__structGet(ptr %997, ptr %2317)
  %2319 = load ptr, ptr @tag_Equals, align 8
  %2320 = call ptr @Builtins__structGet(ptr %997, ptr %2319)
  %2321 = load ptr, ptr @tag_TypeOf, align 8
  %2322 = call ptr @Builtins__structGet(ptr %997, ptr %2321)
  %2323 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2324 = call ptr @Builtins__structGet(ptr %997, ptr %2323)
  %2325 = load ptr, ptr @tag_Equals, align 8
  %2326 = call ptr @Builtins__structGet(ptr %997, ptr %2325)
  %2327 = load ptr, ptr @tag_TypeOf, align 8
  %2328 = call ptr @Builtins__structGet(ptr %997, ptr %2327)
  %2329 = load ptr, ptr @tag_IfElse, align 8
  %2330 = call ptr @Builtins__structGet(ptr %997, ptr %2329)
  %2331 = load ptr, ptr @tag_Equals, align 8
  %2332 = call ptr @Builtins__structGet(ptr %997, ptr %2331)
  %2333 = load ptr, ptr @tag_Equals, align 8
  %2334 = call ptr @Builtins__structGet(ptr %997, ptr %2333)
  %2335 = load ptr, ptr @tag_TypeOf, align 8
  %2336 = call ptr @Builtins__structGet(ptr %997, ptr %2335)
  %2337 = load ptr, ptr @tag_IntAdd, align 8
  %2338 = call ptr @Builtins__structGet(ptr %997, ptr %2337)
  %2339 = load ptr, ptr @tag_IntSubtract, align 8
  %2340 = call ptr @Builtins__structGet(ptr %997, ptr %2339)
  %2341 = load ptr, ptr @tag_IntMultiply, align 8
  %2342 = call ptr @Builtins__structGet(ptr %997, ptr %2341)
  %2343 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %2344 = call ptr @Builtins__structGet(ptr %997, ptr %2343)
  %2345 = load ptr, ptr @tag_IntRemainder, align 8
  %2346 = call ptr @Builtins__structGet(ptr %997, ptr %2345)
  %2347 = load ptr, ptr @tag_IntModulo, align 8
  %2348 = call ptr @Builtins__structGet(ptr %997, ptr %2347)
  %2349 = load ptr, ptr @tag_IntShiftLeft, align 8
  %2350 = call ptr @Builtins__structGet(ptr %997, ptr %2349)
  %2351 = load ptr, ptr @tag_IntShiftRight, align 8
  %2352 = call ptr @Builtins__structGet(ptr %997, ptr %2351)
  %2353 = load ptr, ptr @tag_IntBitLength, align 8
  %2354 = call ptr @Builtins__structGet(ptr %997, ptr %2353)
  %2355 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %2356 = call ptr @Builtins__structGet(ptr %997, ptr %2355)
  %2357 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %2358 = call ptr @Builtins__structGet(ptr %997, ptr %2357)
  %2359 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %2360 = call ptr @Builtins__structGet(ptr %997, ptr %2359)
  %2361 = load ptr, ptr @tag_IntParse, align 8
  %2362 = call ptr @Builtins__structGet(ptr %997, ptr %2361)
  %2363 = load ptr, ptr @tag_Equals, align 8
  %2364 = call ptr @Builtins__structGet(ptr %997, ptr %2363)
  %2365 = load ptr, ptr @tag_Equals, align 8
  %2366 = call ptr @Builtins__structGet(ptr %997, ptr %2365)
  %2367 = load ptr, ptr @tag_Equals, align 8
  %2368 = call ptr @Builtins__structGet(ptr %997, ptr %2367)
  %2369 = load ptr, ptr @tag_TypeOf, align 8
  %2370 = call ptr @Builtins__structGet(ptr %997, ptr %2369)
  %2371 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2372 = call ptr @Builtins__structGet(ptr %997, ptr %2371)
  %2373 = load ptr, ptr @tag_Equals, align 8
  %2374 = call ptr @Builtins__structGet(ptr %997, ptr %2373)
  %2375 = load ptr, ptr @tag_TypeOf, align 8
  %2376 = call ptr @Builtins__structGet(ptr %997, ptr %2375)
  %2377 = load ptr, ptr @tag_Equals, align 8
  %2378 = call ptr @Builtins__structGet(ptr %997, ptr %2377)
  %2379 = load ptr, ptr @tag_Equals, align 8
  %2380 = call ptr @Builtins__structGet(ptr %997, ptr %2379)
  %2381 = load ptr, ptr @tag_Equals, align 8
  %2382 = call ptr @Builtins__structGet(ptr %997, ptr %2381)
  %2383 = load ptr, ptr @tag_TypeOf, align 8
  %2384 = call ptr @Builtins__structGet(ptr %997, ptr %2383)
  %2385 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2386 = call ptr @Builtins__structGet(ptr %997, ptr %2385)
  %2387 = load ptr, ptr @tag_Equals, align 8
  %2388 = call ptr @Builtins__structGet(ptr %997, ptr %2387)
  %2389 = load ptr, ptr @tag_TypeOf, align 8
  %2390 = call ptr @Builtins__structGet(ptr %997, ptr %2389)
  %2391 = load ptr, ptr @tag_Equals, align 8
  %2392 = call ptr @Builtins__structGet(ptr %997, ptr %2391)
  %2393 = load ptr, ptr @tag_Equals, align 8
  %2394 = call ptr @Builtins__structGet(ptr %997, ptr %2393)
  %2395 = load ptr, ptr @tag_Equals, align 8
  %2396 = call ptr @Builtins__structGet(ptr %997, ptr %2395)
  %2397 = load ptr, ptr @tag_TypeOf, align 8
  %2398 = call ptr @Builtins__structGet(ptr %997, ptr %2397)
  %2399 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2400 = call ptr @Builtins__structGet(ptr %997, ptr %2399)
  %2401 = load ptr, ptr @tag_Equals, align 8
  %2402 = call ptr @Builtins__structGet(ptr %997, ptr %2401)
  %2403 = load ptr, ptr @tag_TypeOf, align 8
  %2404 = call ptr @Builtins__structGet(ptr %997, ptr %2403)
  %2405 = load ptr, ptr @tag_IfElse, align 8
  %2406 = call ptr @Builtins__structGet(ptr %997, ptr %2405)
  %2407 = load ptr, ptr @tag_Equals, align 8
  %2408 = call ptr @Builtins__structGet(ptr %997, ptr %2407)
  %2409 = load ptr, ptr @tag_Equals, align 8
  %2410 = call ptr @Builtins__structGet(ptr %997, ptr %2409)
  %2411 = load ptr, ptr @tag_Equals, align 8
  %2412 = call ptr @Builtins__structGet(ptr %997, ptr %2411)
  %2413 = load ptr, ptr @tag_TypeOf, align 8
  %2414 = call ptr @Builtins__structGet(ptr %997, ptr %2413)
  %2415 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2416 = call ptr @Builtins__structGet(ptr %997, ptr %2415)
  %2417 = load ptr, ptr @tag_Equals, align 8
  %2418 = call ptr @Builtins__structGet(ptr %997, ptr %2417)
  %2419 = load ptr, ptr @tag_Equals, align 8
  %2420 = call ptr @Builtins__structGet(ptr %997, ptr %2419)
  %2421 = load ptr, ptr @tag_Equals, align 8
  %2422 = call ptr @Builtins__structGet(ptr %997, ptr %2421)
  %2423 = load ptr, ptr @tag_TypeOf, align 8
  %2424 = call ptr @Builtins__structGet(ptr %997, ptr %2423)
  %2425 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2426 = call ptr @Builtins__structGet(ptr %997, ptr %2425)
  %2427 = load ptr, ptr @tag_Equals, align 8
  %2428 = call ptr @Builtins__structGet(ptr %997, ptr %2427)
  %2429 = load ptr, ptr @tag_TypeOf, align 8
  %2430 = call ptr @Builtins__structGet(ptr %997, ptr %2429)
  %2431 = load ptr, ptr @tag_Equals, align 8
  %2432 = call ptr @Builtins__structGet(ptr %997, ptr %2431)
  %2433 = load ptr, ptr @tag_Equals, align 8
  %2434 = call ptr @Builtins__structGet(ptr %997, ptr %2433)
  %2435 = load ptr, ptr @tag_Equals, align 8
  %2436 = call ptr @Builtins__structGet(ptr %997, ptr %2435)
  %2437 = load ptr, ptr @tag_TypeOf, align 8
  %2438 = call ptr @Builtins__structGet(ptr %997, ptr %2437)
  %2439 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2440 = call ptr @Builtins__structGet(ptr %997, ptr %2439)
  %2441 = load ptr, ptr @tag_Equals, align 8
  %2442 = call ptr @Builtins__structGet(ptr %997, ptr %2441)
  %2443 = load ptr, ptr @tag_TypeOf, align 8
  %2444 = call ptr @Builtins__structGet(ptr %997, ptr %2443)
  %2445 = load ptr, ptr @tag_Equals, align 8
  %2446 = call ptr @Builtins__structGet(ptr %997, ptr %2445)
  %2447 = load ptr, ptr @tag_Equals, align 8
  %2448 = call ptr @Builtins__structGet(ptr %997, ptr %2447)
  %2449 = load ptr, ptr @tag_Equals, align 8
  %2450 = call ptr @Builtins__structGet(ptr %997, ptr %2449)
  %2451 = load ptr, ptr @tag_TypeOf, align 8
  %2452 = call ptr @Builtins__structGet(ptr %997, ptr %2451)
  %2453 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2454 = call ptr @Builtins__structGet(ptr %997, ptr %2453)
  %2455 = load ptr, ptr @tag_Equals, align 8
  %2456 = call ptr @Builtins__structGet(ptr %997, ptr %2455)
  %2457 = load ptr, ptr @tag_TypeOf, align 8
  %2458 = call ptr @Builtins__structGet(ptr %997, ptr %2457)
  %2459 = load ptr, ptr @tag_Equals, align 8
  %2460 = call ptr @Builtins__structGet(ptr %997, ptr %2459)
  %2461 = load ptr, ptr @tag_Equals, align 8
  %2462 = call ptr @Builtins__structGet(ptr %997, ptr %2461)
  %2463 = load ptr, ptr @tag_Equals, align 8
  %2464 = call ptr @Builtins__structGet(ptr %997, ptr %2463)
  %2465 = load ptr, ptr @tag_TypeOf, align 8
  %2466 = call ptr @Builtins__structGet(ptr %997, ptr %2465)
  %2467 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2468 = call ptr @Builtins__structGet(ptr %997, ptr %2467)
  %2469 = load ptr, ptr @tag_Equals, align 8
  %2470 = call ptr @Builtins__structGet(ptr %997, ptr %2469)
  %2471 = load ptr, ptr @tag_TypeOf, align 8
  %2472 = call ptr @Builtins__structGet(ptr %997, ptr %2471)
  %2473 = load ptr, ptr @tag_IfElse, align 8
  %2474 = call ptr @Builtins__structGet(ptr %997, ptr %2473)
  %2475 = load ptr, ptr @tag_Equals, align 8
  %2476 = call ptr @Builtins__structGet(ptr %997, ptr %2475)
  %2477 = load ptr, ptr @tag_Equals, align 8
  %2478 = call ptr @Builtins__structGet(ptr %997, ptr %2477)
  %2479 = load ptr, ptr @tag_Equals, align 8
  %2480 = call ptr @Builtins__structGet(ptr %997, ptr %2479)
  %2481 = load ptr, ptr @tag_TypeOf, align 8
  %2482 = call ptr @Builtins__structGet(ptr %997, ptr %2481)
  %2483 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2484 = call ptr @Builtins__structGet(ptr %997, ptr %2483)
  %2485 = load ptr, ptr @tag_Equals, align 8
  %2486 = call ptr @Builtins__structGet(ptr %997, ptr %2485)
  %2487 = load ptr, ptr @tag_TypeOf, align 8
  %2488 = call ptr @Builtins__structGet(ptr %997, ptr %2487)
  %2489 = load ptr, ptr @tag_Equals, align 8
  %2490 = call ptr @Builtins__structGet(ptr %997, ptr %2489)
  %2491 = load ptr, ptr @tag_Equals, align 8
  %2492 = call ptr @Builtins__structGet(ptr %997, ptr %2491)
  %2493 = load ptr, ptr @tag_Equals, align 8
  %2494 = call ptr @Builtins__structGet(ptr %997, ptr %2493)
  %2495 = load ptr, ptr @tag_TypeOf, align 8
  %2496 = call ptr @Builtins__structGet(ptr %997, ptr %2495)
  %2497 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2498 = call ptr @Builtins__structGet(ptr %997, ptr %2497)
  %2499 = load ptr, ptr @tag_Equals, align 8
  %2500 = call ptr @Builtins__structGet(ptr %997, ptr %2499)
  %2501 = load ptr, ptr @tag_TypeOf, align 8
  %2502 = call ptr @Builtins__structGet(ptr %997, ptr %2501)
  %2503 = load ptr, ptr @tag_IfElse, align 8
  %2504 = call ptr @Builtins__structGet(ptr %997, ptr %2503)
  %2505 = load ptr, ptr @tag_Equals, align 8
  %2506 = call ptr @Builtins__structGet(ptr %997, ptr %2505)
  %2507 = load ptr, ptr @tag_Equals, align 8
  %2508 = call ptr @Builtins__structGet(ptr %997, ptr %2507)
  %2509 = load ptr, ptr @tag_TypeOf, align 8
  %2510 = call ptr @Builtins__structGet(ptr %997, ptr %2509)
  %2511 = load ptr, ptr @tag_IntAdd, align 8
  %2512 = call ptr @Builtins__structGet(ptr %997, ptr %2511)
  %2513 = load ptr, ptr @tag_IntSubtract, align 8
  %2514 = call ptr @Builtins__structGet(ptr %997, ptr %2513)
  %2515 = load ptr, ptr @tag_IntMultiply, align 8
  %2516 = call ptr @Builtins__structGet(ptr %997, ptr %2515)
  %2517 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %2518 = call ptr @Builtins__structGet(ptr %997, ptr %2517)
  %2519 = load ptr, ptr @tag_IntRemainder, align 8
  %2520 = call ptr @Builtins__structGet(ptr %997, ptr %2519)
  %2521 = load ptr, ptr @tag_IntModulo, align 8
  %2522 = call ptr @Builtins__structGet(ptr %997, ptr %2521)
  %2523 = load ptr, ptr @tag_IntShiftLeft, align 8
  %2524 = call ptr @Builtins__structGet(ptr %997, ptr %2523)
  %2525 = load ptr, ptr @tag_IntShiftRight, align 8
  %2526 = call ptr @Builtins__structGet(ptr %997, ptr %2525)
  %2527 = load ptr, ptr @tag_IntBitLength, align 8
  %2528 = call ptr @Builtins__structGet(ptr %997, ptr %2527)
  %2529 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %2530 = call ptr @Builtins__structGet(ptr %997, ptr %2529)
  %2531 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %2532 = call ptr @Builtins__structGet(ptr %997, ptr %2531)
  %2533 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %2534 = call ptr @Builtins__structGet(ptr %997, ptr %2533)
  %2535 = load ptr, ptr @tag_IntParse, align 8
  %2536 = call ptr @Builtins__structGet(ptr %997, ptr %2535)
  %2537 = load ptr, ptr @tag_Equals, align 8
  %2538 = call ptr @Builtins__structGet(ptr %997, ptr %2537)
  %2539 = load ptr, ptr @tag_Equals, align 8
  %2540 = call ptr @Builtins__structGet(ptr %997, ptr %2539)
  %2541 = load ptr, ptr @tag_Equals, align 8
  %2542 = call ptr @Builtins__structGet(ptr %997, ptr %2541)
  %2543 = load ptr, ptr @tag_TypeOf, align 8
  %2544 = call ptr @Builtins__structGet(ptr %997, ptr %2543)
  %2545 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2546 = call ptr @Builtins__structGet(ptr %997, ptr %2545)
  %2547 = load ptr, ptr @tag_Equals, align 8
  %2548 = call ptr @Builtins__structGet(ptr %997, ptr %2547)
  %2549 = load ptr, ptr @tag_TypeOf, align 8
  %2550 = call ptr @Builtins__structGet(ptr %997, ptr %2549)
  %2551 = load ptr, ptr @tag_Equals, align 8
  %2552 = call ptr @Builtins__structGet(ptr %997, ptr %2551)
  %2553 = load ptr, ptr @tag_Equals, align 8
  %2554 = call ptr @Builtins__structGet(ptr %997, ptr %2553)
  %2555 = load ptr, ptr @tag_Equals, align 8
  %2556 = call ptr @Builtins__structGet(ptr %997, ptr %2555)
  %2557 = load ptr, ptr @tag_TypeOf, align 8
  %2558 = call ptr @Builtins__structGet(ptr %997, ptr %2557)
  %2559 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2560 = call ptr @Builtins__structGet(ptr %997, ptr %2559)
  %2561 = load ptr, ptr @tag_Equals, align 8
  %2562 = call ptr @Builtins__structGet(ptr %997, ptr %2561)
  %2563 = load ptr, ptr @tag_TypeOf, align 8
  %2564 = call ptr @Builtins__structGet(ptr %997, ptr %2563)
  %2565 = load ptr, ptr @tag_Equals, align 8
  %2566 = call ptr @Builtins__structGet(ptr %997, ptr %2565)
  %2567 = load ptr, ptr @tag_Equals, align 8
  %2568 = call ptr @Builtins__structGet(ptr %997, ptr %2567)
  %2569 = load ptr, ptr @tag_Equals, align 8
  %2570 = call ptr @Builtins__structGet(ptr %997, ptr %2569)
  %2571 = load ptr, ptr @tag_TypeOf, align 8
  %2572 = call ptr @Builtins__structGet(ptr %997, ptr %2571)
  %2573 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2574 = call ptr @Builtins__structGet(ptr %997, ptr %2573)
  %2575 = load ptr, ptr @tag_Equals, align 8
  %2576 = call ptr @Builtins__structGet(ptr %997, ptr %2575)
  %2577 = load ptr, ptr @tag_TypeOf, align 8
  %2578 = call ptr @Builtins__structGet(ptr %997, ptr %2577)
  %2579 = load ptr, ptr @tag_IfElse, align 8
  %2580 = call ptr @Builtins__structGet(ptr %997, ptr %2579)
  %2581 = load ptr, ptr @tag_Equals, align 8
  %2582 = call ptr @Builtins__structGet(ptr %997, ptr %2581)
  %2583 = load ptr, ptr @tag_Equals, align 8
  %2584 = call ptr @Builtins__structGet(ptr %997, ptr %2583)
  %2585 = load ptr, ptr @tag_Equals, align 8
  %2586 = call ptr @Builtins__structGet(ptr %997, ptr %2585)
  %2587 = load ptr, ptr @tag_TypeOf, align 8
  %2588 = call ptr @Builtins__structGet(ptr %997, ptr %2587)
  %2589 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2590 = call ptr @Builtins__structGet(ptr %997, ptr %2589)
  %2591 = load ptr, ptr @tag_Equals, align 8
  %2592 = call ptr @Builtins__structGet(ptr %997, ptr %2591)
  %2593 = load ptr, ptr @tag_Equals, align 8
  %2594 = call ptr @Builtins__structGet(ptr %997, ptr %2593)
  %2595 = load ptr, ptr @tag_Equals, align 8
  %2596 = call ptr @Builtins__structGet(ptr %997, ptr %2595)
  %2597 = load ptr, ptr @tag_TypeOf, align 8
  %2598 = call ptr @Builtins__structGet(ptr %997, ptr %2597)
  %2599 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2600 = call ptr @Builtins__structGet(ptr %997, ptr %2599)
  %2601 = load ptr, ptr @tag_Equals, align 8
  %2602 = call ptr @Builtins__structGet(ptr %997, ptr %2601)
  %2603 = load ptr, ptr @tag_TypeOf, align 8
  %2604 = call ptr @Builtins__structGet(ptr %997, ptr %2603)
  %2605 = load ptr, ptr @tag_Equals, align 8
  %2606 = call ptr @Builtins__structGet(ptr %997, ptr %2605)
  %2607 = load ptr, ptr @tag_Equals, align 8
  %2608 = call ptr @Builtins__structGet(ptr %997, ptr %2607)
  %2609 = load ptr, ptr @tag_Equals, align 8
  %2610 = call ptr @Builtins__structGet(ptr %997, ptr %2609)
  %2611 = load ptr, ptr @tag_TypeOf, align 8
  %2612 = call ptr @Builtins__structGet(ptr %997, ptr %2611)
  %2613 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2614 = call ptr @Builtins__structGet(ptr %997, ptr %2613)
  %2615 = load ptr, ptr @tag_Equals, align 8
  %2616 = call ptr @Builtins__structGet(ptr %997, ptr %2615)
  %2617 = load ptr, ptr @tag_TypeOf, align 8
  %2618 = call ptr @Builtins__structGet(ptr %997, ptr %2617)
  %2619 = load ptr, ptr @tag_IfElse, align 8
  %2620 = call ptr @Builtins__structGet(ptr %997, ptr %2619)
  %2621 = load ptr, ptr @tag_Equals, align 8
  %2622 = call ptr @Builtins__structGet(ptr %997, ptr %2621)
  %2623 = load ptr, ptr @tag_TypeOf, align 8
  %2624 = call ptr @Builtins__structGet(ptr %997, ptr %2623)
  %2625 = load ptr, ptr @tag_Equals, align 8
  %2626 = call ptr @Builtins__structGet(ptr %997, ptr %2625)
  %2627 = load ptr, ptr @tag_Equals, align 8
  %2628 = call ptr @Builtins__structGet(ptr %997, ptr %2627)
  %2629 = load ptr, ptr @tag_Equals, align 8
  %2630 = call ptr @Builtins__structGet(ptr %997, ptr %2629)
  %2631 = load ptr, ptr @tag_TypeOf, align 8
  %2632 = call ptr @Builtins__structGet(ptr %997, ptr %2631)
  %2633 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2634 = call ptr @Builtins__structGet(ptr %997, ptr %2633)
  %2635 = load ptr, ptr @tag_Equals, align 8
  %2636 = call ptr @Builtins__structGet(ptr %997, ptr %2635)
  %2637 = load ptr, ptr @tag_TypeOf, align 8
  %2638 = call ptr @Builtins__structGet(ptr %997, ptr %2637)
  %2639 = load ptr, ptr @tag_Equals, align 8
  %2640 = call ptr @Builtins__structGet(ptr %997, ptr %2639)
  %2641 = load ptr, ptr @tag_Equals, align 8
  %2642 = call ptr @Builtins__structGet(ptr %997, ptr %2641)
  %2643 = load ptr, ptr @tag_Equals, align 8
  %2644 = call ptr @Builtins__structGet(ptr %997, ptr %2643)
  %2645 = load ptr, ptr @tag_TypeOf, align 8
  %2646 = call ptr @Builtins__structGet(ptr %997, ptr %2645)
  %2647 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2648 = call ptr @Builtins__structGet(ptr %997, ptr %2647)
  %2649 = load ptr, ptr @tag_Equals, align 8
  %2650 = call ptr @Builtins__structGet(ptr %997, ptr %2649)
  %2651 = load ptr, ptr @tag_TypeOf, align 8
  %2652 = call ptr @Builtins__structGet(ptr %997, ptr %2651)
  %2653 = load ptr, ptr @tag_Equals, align 8
  %2654 = call ptr @Builtins__structGet(ptr %997, ptr %2653)
  %2655 = load ptr, ptr @tag_Equals, align 8
  %2656 = call ptr @Builtins__structGet(ptr %997, ptr %2655)
  %2657 = load ptr, ptr @tag_Equals, align 8
  %2658 = call ptr @Builtins__structGet(ptr %997, ptr %2657)
  %2659 = load ptr, ptr @tag_TypeOf, align 8
  %2660 = call ptr @Builtins__structGet(ptr %997, ptr %2659)
  %2661 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2662 = call ptr @Builtins__structGet(ptr %997, ptr %2661)
  %2663 = load ptr, ptr @tag_Equals, align 8
  %2664 = call ptr @Builtins__structGet(ptr %997, ptr %2663)
  %2665 = load ptr, ptr @tag_TypeOf, align 8
  %2666 = call ptr @Builtins__structGet(ptr %997, ptr %2665)
  %2667 = load ptr, ptr @tag_IfElse, align 8
  %2668 = call ptr @Builtins__structGet(ptr %997, ptr %2667)
  %2669 = load ptr, ptr @tag_Equals, align 8
  %2670 = call ptr @Builtins__structGet(ptr %997, ptr %2669)
  %2671 = load ptr, ptr @tag_TypeOf, align 8
  %2672 = call ptr @Builtins__structGet(ptr %997, ptr %2671)
  %2673 = load ptr, ptr @tag_TagHasValue, align 8
  %2674 = call ptr @Builtins__structGet(ptr %997, ptr %2673)
  %2675 = load ptr, ptr @tag_TagWithoutValue, align 8
  %2676 = call ptr @Builtins__structGet(ptr %997, ptr %2675)
  %2677 = load ptr, ptr @tag_TagGetValue, align 8
  %2678 = call ptr @Builtins__structGet(ptr %997, ptr %2677)
  %2679 = load ptr, ptr @tag_Equals, align 8
  %2680 = call ptr @Builtins__structGet(ptr %997, ptr %2679)
  %2681 = load ptr, ptr @tag_TypeOf, align 8
  %2682 = call ptr @Builtins__structGet(ptr %997, ptr %2681)
  %2683 = load ptr, ptr @tag_Equals, align 8
  %2684 = call ptr @Builtins__structGet(ptr %997, ptr %2683)
  %2685 = load ptr, ptr @tag_Equals, align 8
  %2686 = call ptr @Builtins__structGet(ptr %997, ptr %2685)
  %2687 = load ptr, ptr @tag_Equals, align 8
  %2688 = call ptr @Builtins__structGet(ptr %997, ptr %2687)
  %2689 = load ptr, ptr @tag_TypeOf, align 8
  %2690 = call ptr @Builtins__structGet(ptr %997, ptr %2689)
  %2691 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2692 = call ptr @Builtins__structGet(ptr %997, ptr %2691)
  %2693 = load ptr, ptr @tag_Equals, align 8
  %2694 = call ptr @Builtins__structGet(ptr %997, ptr %2693)
  %2695 = load ptr, ptr @tag_TypeOf, align 8
  %2696 = call ptr @Builtins__structGet(ptr %997, ptr %2695)
  %2697 = load ptr, ptr @tag_Equals, align 8
  %2698 = call ptr @Builtins__structGet(ptr %997, ptr %2697)
  %2699 = load ptr, ptr @tag_Equals, align 8
  %2700 = call ptr @Builtins__structGet(ptr %997, ptr %2699)
  %2701 = load ptr, ptr @tag_Equals, align 8
  %2702 = call ptr @Builtins__structGet(ptr %997, ptr %2701)
  %2703 = load ptr, ptr @tag_TypeOf, align 8
  %2704 = call ptr @Builtins__structGet(ptr %997, ptr %2703)
  %2705 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2706 = call ptr @Builtins__structGet(ptr %997, ptr %2705)
  %2707 = load ptr, ptr @tag_Equals, align 8
  %2708 = call ptr @Builtins__structGet(ptr %997, ptr %2707)
  %2709 = load ptr, ptr @tag_TypeOf, align 8
  %2710 = call ptr @Builtins__structGet(ptr %997, ptr %2709)
  %2711 = load ptr, ptr @tag_Equals, align 8
  %2712 = call ptr @Builtins__structGet(ptr %997, ptr %2711)
  %2713 = load ptr, ptr @tag_Equals, align 8
  %2714 = call ptr @Builtins__structGet(ptr %997, ptr %2713)
  %2715 = load ptr, ptr @tag_Equals, align 8
  %2716 = call ptr @Builtins__structGet(ptr %997, ptr %2715)
  %2717 = load ptr, ptr @tag_TypeOf, align 8
  %2718 = call ptr @Builtins__structGet(ptr %997, ptr %2717)
  %2719 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2720 = call ptr @Builtins__structGet(ptr %997, ptr %2719)
  %2721 = load ptr, ptr @tag_Equals, align 8
  %2722 = call ptr @Builtins__structGet(ptr %997, ptr %2721)
  %2723 = load ptr, ptr @tag_TypeOf, align 8
  %2724 = call ptr @Builtins__structGet(ptr %997, ptr %2723)
  %2725 = load ptr, ptr @tag_IfElse, align 8
  %2726 = call ptr @Builtins__structGet(ptr %997, ptr %2725)
  %2727 = load ptr, ptr @tag_Equals, align 8
  %2728 = call ptr @Builtins__structGet(ptr %997, ptr %2727)
  %2729 = load ptr, ptr @tag_Equals, align 8
  %2730 = call ptr @Builtins__structGet(ptr %997, ptr %2729)
  %2731 = load ptr, ptr @tag_Equals, align 8
  %2732 = call ptr @Builtins__structGet(ptr %997, ptr %2731)
  %2733 = load ptr, ptr @tag_TypeOf, align 8
  %2734 = call ptr @Builtins__structGet(ptr %997, ptr %2733)
  %2735 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2736 = call ptr @Builtins__structGet(ptr %997, ptr %2735)
  %2737 = load ptr, ptr @tag_Equals, align 8
  %2738 = call ptr @Builtins__structGet(ptr %997, ptr %2737)
  %2739 = load ptr, ptr @tag_Equals, align 8
  %2740 = call ptr @Builtins__structGet(ptr %997, ptr %2739)
  %2741 = load ptr, ptr @tag_Equals, align 8
  %2742 = call ptr @Builtins__structGet(ptr %997, ptr %2741)
  %2743 = load ptr, ptr @tag_TypeOf, align 8
  %2744 = call ptr @Builtins__structGet(ptr %997, ptr %2743)
  %2745 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2746 = call ptr @Builtins__structGet(ptr %997, ptr %2745)
  %2747 = load ptr, ptr @tag_Equals, align 8
  %2748 = call ptr @Builtins__structGet(ptr %997, ptr %2747)
  %2749 = load ptr, ptr @tag_TypeOf, align 8
  %2750 = call ptr @Builtins__structGet(ptr %997, ptr %2749)
  %2751 = load ptr, ptr @tag_Equals, align 8
  %2752 = call ptr @Builtins__structGet(ptr %997, ptr %2751)
  %2753 = load ptr, ptr @tag_Equals, align 8
  %2754 = call ptr @Builtins__structGet(ptr %997, ptr %2753)
  %2755 = load ptr, ptr @tag_Equals, align 8
  %2756 = call ptr @Builtins__structGet(ptr %997, ptr %2755)
  %2757 = load ptr, ptr @tag_TypeOf, align 8
  %2758 = call ptr @Builtins__structGet(ptr %997, ptr %2757)
  %2759 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2760 = call ptr @Builtins__structGet(ptr %997, ptr %2759)
  %2761 = load ptr, ptr @tag_Equals, align 8
  %2762 = call ptr @Builtins__structGet(ptr %997, ptr %2761)
  %2763 = load ptr, ptr @tag_TypeOf, align 8
  %2764 = call ptr @Builtins__structGet(ptr %997, ptr %2763)
  %2765 = load ptr, ptr @tag_Equals, align 8
  %2766 = call ptr @Builtins__structGet(ptr %997, ptr %2765)
  %2767 = load ptr, ptr @tag_Equals, align 8
  %2768 = call ptr @Builtins__structGet(ptr %997, ptr %2767)
  %2769 = load ptr, ptr @tag_Equals, align 8
  %2770 = call ptr @Builtins__structGet(ptr %997, ptr %2769)
  %2771 = load ptr, ptr @tag_TypeOf, align 8
  %2772 = call ptr @Builtins__structGet(ptr %997, ptr %2771)
  %2773 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2774 = call ptr @Builtins__structGet(ptr %997, ptr %2773)
  %2775 = load ptr, ptr @tag_Equals, align 8
  %2776 = call ptr @Builtins__structGet(ptr %997, ptr %2775)
  %2777 = load ptr, ptr @tag_TypeOf, align 8
  %2778 = call ptr @Builtins__structGet(ptr %997, ptr %2777)
  %2779 = load ptr, ptr @tag_Equals, align 8
  %2780 = call ptr @Builtins__structGet(ptr %997, ptr %2779)
  %2781 = load ptr, ptr @tag_Equals, align 8
  %2782 = call ptr @Builtins__structGet(ptr %997, ptr %2781)
  %2783 = load ptr, ptr @tag_Equals, align 8
  %2784 = call ptr @Builtins__structGet(ptr %997, ptr %2783)
  %2785 = load ptr, ptr @tag_TypeOf, align 8
  %2786 = call ptr @Builtins__structGet(ptr %997, ptr %2785)
  %2787 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2788 = call ptr @Builtins__structGet(ptr %997, ptr %2787)
  %2789 = load ptr, ptr @tag_Equals, align 8
  %2790 = call ptr @Builtins__structGet(ptr %997, ptr %2789)
  %2791 = load ptr, ptr @tag_TypeOf, align 8
  %2792 = call ptr @Builtins__structGet(ptr %997, ptr %2791)
  %2793 = load ptr, ptr @tag_IfElse, align 8
  %2794 = call ptr @Builtins__structGet(ptr %997, ptr %2793)
  %2795 = load ptr, ptr @tag_Equals, align 8
  %2796 = call ptr @Builtins__structGet(ptr %997, ptr %2795)
  %2797 = load ptr, ptr @tag_Equals, align 8
  %2798 = call ptr @Builtins__structGet(ptr %997, ptr %2797)
  %2799 = load ptr, ptr @tag_Equals, align 8
  %2800 = call ptr @Builtins__structGet(ptr %997, ptr %2799)
  %2801 = load ptr, ptr @tag_TypeOf, align 8
  %2802 = call ptr @Builtins__structGet(ptr %997, ptr %2801)
  %2803 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2804 = call ptr @Builtins__structGet(ptr %997, ptr %2803)
  %2805 = load ptr, ptr @tag_Equals, align 8
  %2806 = call ptr @Builtins__structGet(ptr %997, ptr %2805)
  %2807 = load ptr, ptr @tag_TypeOf, align 8
  %2808 = call ptr @Builtins__structGet(ptr %997, ptr %2807)
  %2809 = load ptr, ptr @tag_Equals, align 8
  %2810 = call ptr @Builtins__structGet(ptr %997, ptr %2809)
  %2811 = load ptr, ptr @tag_Equals, align 8
  %2812 = call ptr @Builtins__structGet(ptr %997, ptr %2811)
  %2813 = load ptr, ptr @tag_Equals, align 8
  %2814 = call ptr @Builtins__structGet(ptr %997, ptr %2813)
  %2815 = load ptr, ptr @tag_TypeOf, align 8
  %2816 = call ptr @Builtins__structGet(ptr %997, ptr %2815)
  %2817 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2818 = call ptr @Builtins__structGet(ptr %997, ptr %2817)
  %2819 = load ptr, ptr @tag_Equals, align 8
  %2820 = call ptr @Builtins__structGet(ptr %997, ptr %2819)
  %2821 = load ptr, ptr @tag_TypeOf, align 8
  %2822 = call ptr @Builtins__structGet(ptr %997, ptr %2821)
  %2823 = load ptr, ptr @tag_IfElse, align 8
  %2824 = call ptr @Builtins__structGet(ptr %997, ptr %2823)
  %2825 = load ptr, ptr @tag_Equals, align 8
  %2826 = call ptr @Builtins__structGet(ptr %997, ptr %2825)
  %2827 = load ptr, ptr @tag_Equals, align 8
  %2828 = call ptr @Builtins__structGet(ptr %997, ptr %2827)
  %2829 = load ptr, ptr @tag_TypeOf, align 8
  %2830 = call ptr @Builtins__structGet(ptr %997, ptr %2829)
  %2831 = load ptr, ptr @tag_IntAdd, align 8
  %2832 = call ptr @Builtins__structGet(ptr %997, ptr %2831)
  %2833 = load ptr, ptr @tag_IntSubtract, align 8
  %2834 = call ptr @Builtins__structGet(ptr %997, ptr %2833)
  %2835 = load ptr, ptr @tag_IntMultiply, align 8
  %2836 = call ptr @Builtins__structGet(ptr %997, ptr %2835)
  %2837 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %2838 = call ptr @Builtins__structGet(ptr %997, ptr %2837)
  %2839 = load ptr, ptr @tag_IntRemainder, align 8
  %2840 = call ptr @Builtins__structGet(ptr %997, ptr %2839)
  %2841 = load ptr, ptr @tag_IntModulo, align 8
  %2842 = call ptr @Builtins__structGet(ptr %997, ptr %2841)
  %2843 = load ptr, ptr @tag_IntShiftLeft, align 8
  %2844 = call ptr @Builtins__structGet(ptr %997, ptr %2843)
  %2845 = load ptr, ptr @tag_IntShiftRight, align 8
  %2846 = call ptr @Builtins__structGet(ptr %997, ptr %2845)
  %2847 = load ptr, ptr @tag_IntBitLength, align 8
  %2848 = call ptr @Builtins__structGet(ptr %997, ptr %2847)
  %2849 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %2850 = call ptr @Builtins__structGet(ptr %997, ptr %2849)
  %2851 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %2852 = call ptr @Builtins__structGet(ptr %997, ptr %2851)
  %2853 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %2854 = call ptr @Builtins__structGet(ptr %997, ptr %2853)
  %2855 = load ptr, ptr @tag_IntParse, align 8
  %2856 = call ptr @Builtins__structGet(ptr %997, ptr %2855)
  %2857 = load ptr, ptr @tag_Equals, align 8
  %2858 = call ptr @Builtins__structGet(ptr %997, ptr %2857)
  %2859 = load ptr, ptr @tag_Equals, align 8
  %2860 = call ptr @Builtins__structGet(ptr %997, ptr %2859)
  %2861 = load ptr, ptr @tag_Equals, align 8
  %2862 = call ptr @Builtins__structGet(ptr %997, ptr %2861)
  %2863 = load ptr, ptr @tag_TypeOf, align 8
  %2864 = call ptr @Builtins__structGet(ptr %997, ptr %2863)
  %2865 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2866 = call ptr @Builtins__structGet(ptr %997, ptr %2865)
  %2867 = load ptr, ptr @tag_Equals, align 8
  %2868 = call ptr @Builtins__structGet(ptr %997, ptr %2867)
  %2869 = load ptr, ptr @tag_TypeOf, align 8
  %2870 = call ptr @Builtins__structGet(ptr %997, ptr %2869)
  %2871 = load ptr, ptr @tag_Equals, align 8
  %2872 = call ptr @Builtins__structGet(ptr %997, ptr %2871)
  %2873 = load ptr, ptr @tag_Equals, align 8
  %2874 = call ptr @Builtins__structGet(ptr %997, ptr %2873)
  %2875 = load ptr, ptr @tag_Equals, align 8
  %2876 = call ptr @Builtins__structGet(ptr %997, ptr %2875)
  %2877 = load ptr, ptr @tag_TypeOf, align 8
  %2878 = call ptr @Builtins__structGet(ptr %997, ptr %2877)
  %2879 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2880 = call ptr @Builtins__structGet(ptr %997, ptr %2879)
  %2881 = load ptr, ptr @tag_Equals, align 8
  %2882 = call ptr @Builtins__structGet(ptr %997, ptr %2881)
  %2883 = load ptr, ptr @tag_TypeOf, align 8
  %2884 = call ptr @Builtins__structGet(ptr %997, ptr %2883)
  %2885 = load ptr, ptr @tag_Equals, align 8
  %2886 = call ptr @Builtins__structGet(ptr %997, ptr %2885)
  %2887 = load ptr, ptr @tag_Equals, align 8
  %2888 = call ptr @Builtins__structGet(ptr %997, ptr %2887)
  %2889 = load ptr, ptr @tag_Equals, align 8
  %2890 = call ptr @Builtins__structGet(ptr %997, ptr %2889)
  %2891 = load ptr, ptr @tag_TypeOf, align 8
  %2892 = call ptr @Builtins__structGet(ptr %997, ptr %2891)
  %2893 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2894 = call ptr @Builtins__structGet(ptr %997, ptr %2893)
  %2895 = load ptr, ptr @tag_Equals, align 8
  %2896 = call ptr @Builtins__structGet(ptr %997, ptr %2895)
  %2897 = load ptr, ptr @tag_TypeOf, align 8
  %2898 = call ptr @Builtins__structGet(ptr %997, ptr %2897)
  %2899 = load ptr, ptr @tag_IfElse, align 8
  %2900 = call ptr @Builtins__structGet(ptr %997, ptr %2899)
  %2901 = load ptr, ptr @tag_Equals, align 8
  %2902 = call ptr @Builtins__structGet(ptr %997, ptr %2901)
  %2903 = load ptr, ptr @tag_Equals, align 8
  %2904 = call ptr @Builtins__structGet(ptr %997, ptr %2903)
  %2905 = load ptr, ptr @tag_Equals, align 8
  %2906 = call ptr @Builtins__structGet(ptr %997, ptr %2905)
  %2907 = load ptr, ptr @tag_TypeOf, align 8
  %2908 = call ptr @Builtins__structGet(ptr %997, ptr %2907)
  %2909 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2910 = call ptr @Builtins__structGet(ptr %997, ptr %2909)
  %2911 = load ptr, ptr @tag_Equals, align 8
  %2912 = call ptr @Builtins__structGet(ptr %997, ptr %2911)
  %2913 = load ptr, ptr @tag_Equals, align 8
  %2914 = call ptr @Builtins__structGet(ptr %997, ptr %2913)
  %2915 = load ptr, ptr @tag_Equals, align 8
  %2916 = call ptr @Builtins__structGet(ptr %997, ptr %2915)
  %2917 = load ptr, ptr @tag_TypeOf, align 8
  %2918 = call ptr @Builtins__structGet(ptr %997, ptr %2917)
  %2919 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2920 = call ptr @Builtins__structGet(ptr %997, ptr %2919)
  %2921 = load ptr, ptr @tag_Equals, align 8
  %2922 = call ptr @Builtins__structGet(ptr %997, ptr %2921)
  %2923 = load ptr, ptr @tag_TypeOf, align 8
  %2924 = call ptr @Builtins__structGet(ptr %997, ptr %2923)
  %2925 = load ptr, ptr @tag_Equals, align 8
  %2926 = call ptr @Builtins__structGet(ptr %997, ptr %2925)
  %2927 = load ptr, ptr @tag_Equals, align 8
  %2928 = call ptr @Builtins__structGet(ptr %997, ptr %2927)
  %2929 = load ptr, ptr @tag_Equals, align 8
  %2930 = call ptr @Builtins__structGet(ptr %997, ptr %2929)
  %2931 = load ptr, ptr @tag_TypeOf, align 8
  %2932 = call ptr @Builtins__structGet(ptr %997, ptr %2931)
  %2933 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2934 = call ptr @Builtins__structGet(ptr %997, ptr %2933)
  %2935 = load ptr, ptr @tag_Equals, align 8
  %2936 = call ptr @Builtins__structGet(ptr %997, ptr %2935)
  %2937 = load ptr, ptr @tag_TypeOf, align 8
  %2938 = call ptr @Builtins__structGet(ptr %997, ptr %2937)
  %2939 = load ptr, ptr @tag_IfElse, align 8
  %2940 = call ptr @Builtins__structGet(ptr %997, ptr %2939)
  %2941 = load ptr, ptr @tag_Equals, align 8
  %2942 = call ptr @Builtins__structGet(ptr %997, ptr %2941)
  %2943 = load ptr, ptr @tag_TypeOf, align 8
  %2944 = call ptr @Builtins__structGet(ptr %997, ptr %2943)
  %2945 = load ptr, ptr @tag_Equals, align 8
  %2946 = call ptr @Builtins__structGet(ptr %997, ptr %2945)
  %2947 = load ptr, ptr @tag_Equals, align 8
  %2948 = call ptr @Builtins__structGet(ptr %997, ptr %2947)
  %2949 = load ptr, ptr @tag_Equals, align 8
  %2950 = call ptr @Builtins__structGet(ptr %997, ptr %2949)
  %2951 = load ptr, ptr @tag_TypeOf, align 8
  %2952 = call ptr @Builtins__structGet(ptr %997, ptr %2951)
  %2953 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2954 = call ptr @Builtins__structGet(ptr %997, ptr %2953)
  %2955 = load ptr, ptr @tag_Equals, align 8
  %2956 = call ptr @Builtins__structGet(ptr %997, ptr %2955)
  %2957 = load ptr, ptr @tag_TypeOf, align 8
  %2958 = call ptr @Builtins__structGet(ptr %997, ptr %2957)
  %2959 = load ptr, ptr @tag_Equals, align 8
  %2960 = call ptr @Builtins__structGet(ptr %997, ptr %2959)
  %2961 = load ptr, ptr @tag_Equals, align 8
  %2962 = call ptr @Builtins__structGet(ptr %997, ptr %2961)
  %2963 = load ptr, ptr @tag_Equals, align 8
  %2964 = call ptr @Builtins__structGet(ptr %997, ptr %2963)
  %2965 = load ptr, ptr @tag_TypeOf, align 8
  %2966 = call ptr @Builtins__structGet(ptr %997, ptr %2965)
  %2967 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2968 = call ptr @Builtins__structGet(ptr %997, ptr %2967)
  %2969 = load ptr, ptr @tag_Equals, align 8
  %2970 = call ptr @Builtins__structGet(ptr %997, ptr %2969)
  %2971 = load ptr, ptr @tag_TypeOf, align 8
  %2972 = call ptr @Builtins__structGet(ptr %997, ptr %2971)
  %2973 = load ptr, ptr @tag_Equals, align 8
  %2974 = call ptr @Builtins__structGet(ptr %997, ptr %2973)
  %2975 = load ptr, ptr @tag_Equals, align 8
  %2976 = call ptr @Builtins__structGet(ptr %997, ptr %2975)
  %2977 = load ptr, ptr @tag_Equals, align 8
  %2978 = call ptr @Builtins__structGet(ptr %997, ptr %2977)
  %2979 = load ptr, ptr @tag_TypeOf, align 8
  %2980 = call ptr @Builtins__structGet(ptr %997, ptr %2979)
  %2981 = load ptr, ptr @tag_GetArgumentCount, align 8
  %2982 = call ptr @Builtins__structGet(ptr %997, ptr %2981)
  %2983 = load ptr, ptr @tag_Equals, align 8
  %2984 = call ptr @Builtins__structGet(ptr %997, ptr %2983)
  %2985 = load ptr, ptr @tag_TypeOf, align 8
  %2986 = call ptr @Builtins__structGet(ptr %997, ptr %2985)
  %2987 = load ptr, ptr @tag_IfElse, align 8
  %2988 = call ptr @Builtins__structGet(ptr %997, ptr %2987)
  %2989 = load ptr, ptr @tag_Equals, align 8
  %2990 = call ptr @Builtins__structGet(ptr %997, ptr %2989)
  %2991 = load ptr, ptr @tag_TypeOf, align 8
  %2992 = call ptr @Builtins__structGet(ptr %997, ptr %2991)
  %2993 = load ptr, ptr @tag_TagHasValue, align 8
  %2994 = call ptr @Builtins__structGet(ptr %997, ptr %2993)
  %2995 = load ptr, ptr @tag_TagWithoutValue, align 8
  %2996 = call ptr @Builtins__structGet(ptr %997, ptr %2995)
  %2997 = load ptr, ptr @tag_TagGetValue, align 8
  %2998 = call ptr @Builtins__structGet(ptr %997, ptr %2997)
  %2999 = load ptr, ptr @tag_Equals, align 8
  %3000 = call ptr @Builtins__structGet(ptr %997, ptr %2999)
  %3001 = load ptr, ptr @tag_TypeOf, align 8
  %3002 = call ptr @Builtins__structGet(ptr %997, ptr %3001)
  %3003 = load ptr, ptr @tag_Equals, align 8
  %3004 = call ptr @Builtins__structGet(ptr %997, ptr %3003)
  %3005 = load ptr, ptr @tag_TypeOf, align 8
  %3006 = call ptr @Builtins__structGet(ptr %997, ptr %3005)
  %3007 = load ptr, ptr @tag_ListLength, align 8
  %3008 = call ptr @Builtins__structGet(ptr %997, ptr %3007)
  %3009 = load ptr, ptr @tag_ListGet, align 8
  %3010 = call ptr @Builtins__structGet(ptr %997, ptr %3009)
  %3011 = load ptr, ptr @tag_ListInsert, align 8
  %3012 = call ptr @Builtins__structGet(ptr %997, ptr %3011)
  %3013 = load ptr, ptr @tag_ListReplace, align 8
  %3014 = call ptr @Builtins__structGet(ptr %997, ptr %3013)
  %3015 = load ptr, ptr @tag_ListRemoveAt, align 8
  %3016 = call ptr @Builtins__structGet(ptr %997, ptr %3015)
  %3017 = load ptr, ptr @tag_ListFilled, align 8
  %3018 = call ptr @Builtins__structGet(ptr %997, ptr %3017)
  %3019 = load ptr, ptr @tag_Equals, align 8
  %3020 = call ptr @Builtins__structGet(ptr %997, ptr %3019)
  %3021 = load ptr, ptr @tag_Equals, align 8
  %3022 = call ptr @Builtins__structGet(ptr %997, ptr %3021)
  %3023 = load ptr, ptr @tag_Equals, align 8
  %3024 = call ptr @Builtins__structGet(ptr %997, ptr %3023)
  %3025 = load ptr, ptr @tag_TypeOf, align 8
  %3026 = call ptr @Builtins__structGet(ptr %997, ptr %3025)
  %3027 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3028 = call ptr @Builtins__structGet(ptr %997, ptr %3027)
  %3029 = load ptr, ptr @tag_Equals, align 8
  %3030 = call ptr @Builtins__structGet(ptr %997, ptr %3029)
  %3031 = load ptr, ptr @tag_TypeOf, align 8
  %3032 = call ptr @Builtins__structGet(ptr %997, ptr %3031)
  %3033 = load ptr, ptr @tag_Equals, align 8
  %3034 = call ptr @Builtins__structGet(ptr %997, ptr %3033)
  %3035 = load ptr, ptr @tag_Equals, align 8
  %3036 = call ptr @Builtins__structGet(ptr %997, ptr %3035)
  %3037 = load ptr, ptr @tag_Equals, align 8
  %3038 = call ptr @Builtins__structGet(ptr %997, ptr %3037)
  %3039 = load ptr, ptr @tag_TypeOf, align 8
  %3040 = call ptr @Builtins__structGet(ptr %997, ptr %3039)
  %3041 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3042 = call ptr @Builtins__structGet(ptr %997, ptr %3041)
  %3043 = load ptr, ptr @tag_Equals, align 8
  %3044 = call ptr @Builtins__structGet(ptr %997, ptr %3043)
  %3045 = load ptr, ptr @tag_TypeOf, align 8
  %3046 = call ptr @Builtins__structGet(ptr %997, ptr %3045)
  %3047 = load ptr, ptr @tag_Equals, align 8
  %3048 = call ptr @Builtins__structGet(ptr %997, ptr %3047)
  %3049 = load ptr, ptr @tag_Equals, align 8
  %3050 = call ptr @Builtins__structGet(ptr %997, ptr %3049)
  %3051 = load ptr, ptr @tag_Equals, align 8
  %3052 = call ptr @Builtins__structGet(ptr %997, ptr %3051)
  %3053 = load ptr, ptr @tag_TypeOf, align 8
  %3054 = call ptr @Builtins__structGet(ptr %997, ptr %3053)
  %3055 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3056 = call ptr @Builtins__structGet(ptr %997, ptr %3055)
  %3057 = load ptr, ptr @tag_Equals, align 8
  %3058 = call ptr @Builtins__structGet(ptr %997, ptr %3057)
  %3059 = load ptr, ptr @tag_TypeOf, align 8
  %3060 = call ptr @Builtins__structGet(ptr %997, ptr %3059)
  %3061 = load ptr, ptr @tag_IfElse, align 8
  %3062 = call ptr @Builtins__structGet(ptr %997, ptr %3061)
  %3063 = load ptr, ptr @tag_Equals, align 8
  %3064 = call ptr @Builtins__structGet(ptr %997, ptr %3063)
  %3065 = load ptr, ptr @tag_Equals, align 8
  %3066 = call ptr @Builtins__structGet(ptr %997, ptr %3065)
  %3067 = load ptr, ptr @tag_Equals, align 8
  %3068 = call ptr @Builtins__structGet(ptr %997, ptr %3067)
  %3069 = load ptr, ptr @tag_Equals, align 8
  %3070 = call ptr @Builtins__structGet(ptr %997, ptr %3069)
  %3071 = load ptr, ptr @tag_TypeOf, align 8
  %3072 = call ptr @Builtins__structGet(ptr %997, ptr %3071)
  %3073 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3074 = call ptr @Builtins__structGet(ptr %997, ptr %3073)
  %3075 = load ptr, ptr @tag_Equals, align 8
  %3076 = call ptr @Builtins__structGet(ptr %997, ptr %3075)
  %3077 = load ptr, ptr @tag_TypeOf, align 8
  %3078 = call ptr @Builtins__structGet(ptr %997, ptr %3077)
  %3079 = load ptr, ptr @tag_Equals, align 8
  %3080 = call ptr @Builtins__structGet(ptr %997, ptr %3079)
  %3081 = load ptr, ptr @tag_Equals, align 8
  %3082 = call ptr @Builtins__structGet(ptr %997, ptr %3081)
  %3083 = load ptr, ptr @tag_Equals, align 8
  %3084 = call ptr @Builtins__structGet(ptr %997, ptr %3083)
  %3085 = load ptr, ptr @tag_TypeOf, align 8
  %3086 = call ptr @Builtins__structGet(ptr %997, ptr %3085)
  %3087 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3088 = call ptr @Builtins__structGet(ptr %997, ptr %3087)
  %3089 = load ptr, ptr @tag_Equals, align 8
  %3090 = call ptr @Builtins__structGet(ptr %997, ptr %3089)
  %3091 = load ptr, ptr @tag_TypeOf, align 8
  %3092 = call ptr @Builtins__structGet(ptr %997, ptr %3091)
  %3093 = load ptr, ptr @tag_Equals, align 8
  %3094 = call ptr @Builtins__structGet(ptr %997, ptr %3093)
  %3095 = load ptr, ptr @tag_Equals, align 8
  %3096 = call ptr @Builtins__structGet(ptr %997, ptr %3095)
  %3097 = load ptr, ptr @tag_Equals, align 8
  %3098 = call ptr @Builtins__structGet(ptr %997, ptr %3097)
  %3099 = load ptr, ptr @tag_TypeOf, align 8
  %3100 = call ptr @Builtins__structGet(ptr %997, ptr %3099)
  %3101 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3102 = call ptr @Builtins__structGet(ptr %997, ptr %3101)
  %3103 = load ptr, ptr @tag_Equals, align 8
  %3104 = call ptr @Builtins__structGet(ptr %997, ptr %3103)
  %3105 = load ptr, ptr @tag_TypeOf, align 8
  %3106 = call ptr @Builtins__structGet(ptr %997, ptr %3105)
  %3107 = load ptr, ptr @tag_Equals, align 8
  %3108 = call ptr @Builtins__structGet(ptr %997, ptr %3107)
  %3109 = load ptr, ptr @tag_Equals, align 8
  %3110 = call ptr @Builtins__structGet(ptr %997, ptr %3109)
  %3111 = load ptr, ptr @tag_Equals, align 8
  %3112 = call ptr @Builtins__structGet(ptr %997, ptr %3111)
  %3113 = load ptr, ptr @tag_TypeOf, align 8
  %3114 = call ptr @Builtins__structGet(ptr %997, ptr %3113)
  %3115 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3116 = call ptr @Builtins__structGet(ptr %997, ptr %3115)
  %3117 = load ptr, ptr @tag_Equals, align 8
  %3118 = call ptr @Builtins__structGet(ptr %997, ptr %3117)
  %3119 = load ptr, ptr @tag_TypeOf, align 8
  %3120 = call ptr @Builtins__structGet(ptr %997, ptr %3119)
  %3121 = load ptr, ptr @tag_IfElse, align 8
  %3122 = call ptr @Builtins__structGet(ptr %997, ptr %3121)
  %3123 = load ptr, ptr @tag_Equals, align 8
  %3124 = call ptr @Builtins__structGet(ptr %997, ptr %3123)
  %3125 = load ptr, ptr @tag_Equals, align 8
  %3126 = call ptr @Builtins__structGet(ptr %997, ptr %3125)
  %3127 = load ptr, ptr @tag_Equals, align 8
  %3128 = call ptr @Builtins__structGet(ptr %997, ptr %3127)
  %3129 = load ptr, ptr @tag_TypeOf, align 8
  %3130 = call ptr @Builtins__structGet(ptr %997, ptr %3129)
  %3131 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3132 = call ptr @Builtins__structGet(ptr %997, ptr %3131)
  %3133 = load ptr, ptr @tag_Equals, align 8
  %3134 = call ptr @Builtins__structGet(ptr %997, ptr %3133)
  %3135 = load ptr, ptr @tag_TypeOf, align 8
  %3136 = call ptr @Builtins__structGet(ptr %997, ptr %3135)
  %3137 = load ptr, ptr @tag_Equals, align 8
  %3138 = call ptr @Builtins__structGet(ptr %997, ptr %3137)
  %3139 = load ptr, ptr @tag_Equals, align 8
  %3140 = call ptr @Builtins__structGet(ptr %997, ptr %3139)
  %3141 = load ptr, ptr @tag_Equals, align 8
  %3142 = call ptr @Builtins__structGet(ptr %997, ptr %3141)
  %3143 = load ptr, ptr @tag_TypeOf, align 8
  %3144 = call ptr @Builtins__structGet(ptr %997, ptr %3143)
  %3145 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3146 = call ptr @Builtins__structGet(ptr %997, ptr %3145)
  %3147 = load ptr, ptr @tag_Equals, align 8
  %3148 = call ptr @Builtins__structGet(ptr %997, ptr %3147)
  %3149 = load ptr, ptr @tag_TypeOf, align 8
  %3150 = call ptr @Builtins__structGet(ptr %997, ptr %3149)
  %3151 = load ptr, ptr @tag_IfElse, align 8
  %3152 = call ptr @Builtins__structGet(ptr %997, ptr %3151)
  %3153 = load ptr, ptr @tag_Equals, align 8
  %3154 = call ptr @Builtins__structGet(ptr %997, ptr %3153)
  %3155 = load ptr, ptr @tag_Equals, align 8
  %3156 = call ptr @Builtins__structGet(ptr %997, ptr %3155)
  %3157 = load ptr, ptr @tag_TypeOf, align 8
  %3158 = call ptr @Builtins__structGet(ptr %997, ptr %3157)
  %3159 = load ptr, ptr @tag_IntAdd, align 8
  %3160 = call ptr @Builtins__structGet(ptr %997, ptr %3159)
  %3161 = load ptr, ptr @tag_IntSubtract, align 8
  %3162 = call ptr @Builtins__structGet(ptr %997, ptr %3161)
  %3163 = load ptr, ptr @tag_IntMultiply, align 8
  %3164 = call ptr @Builtins__structGet(ptr %997, ptr %3163)
  %3165 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %3166 = call ptr @Builtins__structGet(ptr %997, ptr %3165)
  %3167 = load ptr, ptr @tag_IntRemainder, align 8
  %3168 = call ptr @Builtins__structGet(ptr %997, ptr %3167)
  %3169 = load ptr, ptr @tag_IntModulo, align 8
  %3170 = call ptr @Builtins__structGet(ptr %997, ptr %3169)
  %3171 = load ptr, ptr @tag_IntShiftLeft, align 8
  %3172 = call ptr @Builtins__structGet(ptr %997, ptr %3171)
  %3173 = load ptr, ptr @tag_IntShiftRight, align 8
  %3174 = call ptr @Builtins__structGet(ptr %997, ptr %3173)
  %3175 = load ptr, ptr @tag_IntBitLength, align 8
  %3176 = call ptr @Builtins__structGet(ptr %997, ptr %3175)
  %3177 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %3178 = call ptr @Builtins__structGet(ptr %997, ptr %3177)
  %3179 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %3180 = call ptr @Builtins__structGet(ptr %997, ptr %3179)
  %3181 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %3182 = call ptr @Builtins__structGet(ptr %997, ptr %3181)
  %3183 = load ptr, ptr @tag_IntParse, align 8
  %3184 = call ptr @Builtins__structGet(ptr %997, ptr %3183)
  %3185 = load ptr, ptr @tag_Equals, align 8
  %3186 = call ptr @Builtins__structGet(ptr %997, ptr %3185)
  %3187 = load ptr, ptr @tag_Equals, align 8
  %3188 = call ptr @Builtins__structGet(ptr %997, ptr %3187)
  %3189 = load ptr, ptr @tag_Equals, align 8
  %3190 = call ptr @Builtins__structGet(ptr %997, ptr %3189)
  %3191 = load ptr, ptr @tag_TypeOf, align 8
  %3192 = call ptr @Builtins__structGet(ptr %997, ptr %3191)
  %3193 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3194 = call ptr @Builtins__structGet(ptr %997, ptr %3193)
  %3195 = load ptr, ptr @tag_Equals, align 8
  %3196 = call ptr @Builtins__structGet(ptr %997, ptr %3195)
  %3197 = load ptr, ptr @tag_TypeOf, align 8
  %3198 = call ptr @Builtins__structGet(ptr %997, ptr %3197)
  %3199 = load ptr, ptr @tag_Equals, align 8
  %3200 = call ptr @Builtins__structGet(ptr %997, ptr %3199)
  %3201 = load ptr, ptr @tag_Equals, align 8
  %3202 = call ptr @Builtins__structGet(ptr %997, ptr %3201)
  %3203 = load ptr, ptr @tag_Equals, align 8
  %3204 = call ptr @Builtins__structGet(ptr %997, ptr %3203)
  %3205 = load ptr, ptr @tag_TypeOf, align 8
  %3206 = call ptr @Builtins__structGet(ptr %997, ptr %3205)
  %3207 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3208 = call ptr @Builtins__structGet(ptr %997, ptr %3207)
  %3209 = load ptr, ptr @tag_Equals, align 8
  %3210 = call ptr @Builtins__structGet(ptr %997, ptr %3209)
  %3211 = load ptr, ptr @tag_TypeOf, align 8
  %3212 = call ptr @Builtins__structGet(ptr %997, ptr %3211)
  %3213 = load ptr, ptr @tag_Equals, align 8
  %3214 = call ptr @Builtins__structGet(ptr %997, ptr %3213)
  %3215 = load ptr, ptr @tag_Equals, align 8
  %3216 = call ptr @Builtins__structGet(ptr %997, ptr %3215)
  %3217 = load ptr, ptr @tag_Equals, align 8
  %3218 = call ptr @Builtins__structGet(ptr %997, ptr %3217)
  %3219 = load ptr, ptr @tag_TypeOf, align 8
  %3220 = call ptr @Builtins__structGet(ptr %997, ptr %3219)
  %3221 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3222 = call ptr @Builtins__structGet(ptr %997, ptr %3221)
  %3223 = load ptr, ptr @tag_Equals, align 8
  %3224 = call ptr @Builtins__structGet(ptr %997, ptr %3223)
  %3225 = load ptr, ptr @tag_TypeOf, align 8
  %3226 = call ptr @Builtins__structGet(ptr %997, ptr %3225)
  %3227 = load ptr, ptr @tag_IfElse, align 8
  %3228 = call ptr @Builtins__structGet(ptr %997, ptr %3227)
  %3229 = load ptr, ptr @tag_Equals, align 8
  %3230 = call ptr @Builtins__structGet(ptr %997, ptr %3229)
  %3231 = load ptr, ptr @tag_Equals, align 8
  %3232 = call ptr @Builtins__structGet(ptr %997, ptr %3231)
  %3233 = load ptr, ptr @tag_Equals, align 8
  %3234 = call ptr @Builtins__structGet(ptr %997, ptr %3233)
  %3235 = load ptr, ptr @tag_TypeOf, align 8
  %3236 = call ptr @Builtins__structGet(ptr %997, ptr %3235)
  %3237 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3238 = call ptr @Builtins__structGet(ptr %997, ptr %3237)
  %3239 = load ptr, ptr @tag_Equals, align 8
  %3240 = call ptr @Builtins__structGet(ptr %997, ptr %3239)
  %3241 = load ptr, ptr @tag_Equals, align 8
  %3242 = call ptr @Builtins__structGet(ptr %997, ptr %3241)
  %3243 = load ptr, ptr @tag_Equals, align 8
  %3244 = call ptr @Builtins__structGet(ptr %997, ptr %3243)
  %3245 = load ptr, ptr @tag_TypeOf, align 8
  %3246 = call ptr @Builtins__structGet(ptr %997, ptr %3245)
  %3247 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3248 = call ptr @Builtins__structGet(ptr %997, ptr %3247)
  %3249 = load ptr, ptr @tag_Equals, align 8
  %3250 = call ptr @Builtins__structGet(ptr %997, ptr %3249)
  %3251 = load ptr, ptr @tag_TypeOf, align 8
  %3252 = call ptr @Builtins__structGet(ptr %997, ptr %3251)
  %3253 = load ptr, ptr @tag_Equals, align 8
  %3254 = call ptr @Builtins__structGet(ptr %997, ptr %3253)
  %3255 = load ptr, ptr @tag_Equals, align 8
  %3256 = call ptr @Builtins__structGet(ptr %997, ptr %3255)
  %3257 = load ptr, ptr @tag_Equals, align 8
  %3258 = call ptr @Builtins__structGet(ptr %997, ptr %3257)
  %3259 = load ptr, ptr @tag_TypeOf, align 8
  %3260 = call ptr @Builtins__structGet(ptr %997, ptr %3259)
  %3261 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3262 = call ptr @Builtins__structGet(ptr %997, ptr %3261)
  %3263 = load ptr, ptr @tag_Equals, align 8
  %3264 = call ptr @Builtins__structGet(ptr %997, ptr %3263)
  %3265 = load ptr, ptr @tag_TypeOf, align 8
  %3266 = call ptr @Builtins__structGet(ptr %997, ptr %3265)
  %3267 = load ptr, ptr @tag_Equals, align 8
  %3268 = call ptr @Builtins__structGet(ptr %997, ptr %3267)
  %3269 = load ptr, ptr @tag_Equals, align 8
  %3270 = call ptr @Builtins__structGet(ptr %997, ptr %3269)
  %3271 = load ptr, ptr @tag_Equals, align 8
  %3272 = call ptr @Builtins__structGet(ptr %997, ptr %3271)
  %3273 = load ptr, ptr @tag_TypeOf, align 8
  %3274 = call ptr @Builtins__structGet(ptr %997, ptr %3273)
  %3275 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3276 = call ptr @Builtins__structGet(ptr %997, ptr %3275)
  %3277 = load ptr, ptr @tag_Equals, align 8
  %3278 = call ptr @Builtins__structGet(ptr %997, ptr %3277)
  %3279 = load ptr, ptr @tag_TypeOf, align 8
  %3280 = call ptr @Builtins__structGet(ptr %997, ptr %3279)
  %3281 = load ptr, ptr @tag_Equals, align 8
  %3282 = call ptr @Builtins__structGet(ptr %997, ptr %3281)
  %3283 = load ptr, ptr @tag_Equals, align 8
  %3284 = call ptr @Builtins__structGet(ptr %997, ptr %3283)
  %3285 = load ptr, ptr @tag_Equals, align 8
  %3286 = call ptr @Builtins__structGet(ptr %997, ptr %3285)
  %3287 = load ptr, ptr @tag_TypeOf, align 8
  %3288 = call ptr @Builtins__structGet(ptr %997, ptr %3287)
  %3289 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3290 = call ptr @Builtins__structGet(ptr %997, ptr %3289)
  %3291 = load ptr, ptr @tag_Equals, align 8
  %3292 = call ptr @Builtins__structGet(ptr %997, ptr %3291)
  %3293 = load ptr, ptr @tag_TypeOf, align 8
  %3294 = call ptr @Builtins__structGet(ptr %997, ptr %3293)
  %3295 = load ptr, ptr @tag_IfElse, align 8
  %3296 = call ptr @Builtins__structGet(ptr %997, ptr %3295)
  %3297 = load ptr, ptr @tag_Equals, align 8
  %3298 = call ptr @Builtins__structGet(ptr %997, ptr %3297)
  %3299 = load ptr, ptr @tag_Equals, align 8
  %3300 = call ptr @Builtins__structGet(ptr %997, ptr %3299)
  %3301 = load ptr, ptr @tag_Equals, align 8
  %3302 = call ptr @Builtins__structGet(ptr %997, ptr %3301)
  %3303 = load ptr, ptr @tag_TypeOf, align 8
  %3304 = call ptr @Builtins__structGet(ptr %997, ptr %3303)
  %3305 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3306 = call ptr @Builtins__structGet(ptr %997, ptr %3305)
  %3307 = load ptr, ptr @tag_Equals, align 8
  %3308 = call ptr @Builtins__structGet(ptr %997, ptr %3307)
  %3309 = load ptr, ptr @tag_TypeOf, align 8
  %3310 = call ptr @Builtins__structGet(ptr %997, ptr %3309)
  %3311 = load ptr, ptr @tag_Equals, align 8
  %3312 = call ptr @Builtins__structGet(ptr %997, ptr %3311)
  %3313 = load ptr, ptr @tag_Equals, align 8
  %3314 = call ptr @Builtins__structGet(ptr %997, ptr %3313)
  %3315 = load ptr, ptr @tag_Equals, align 8
  %3316 = call ptr @Builtins__structGet(ptr %997, ptr %3315)
  %3317 = load ptr, ptr @tag_TypeOf, align 8
  %3318 = call ptr @Builtins__structGet(ptr %997, ptr %3317)
  %3319 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3320 = call ptr @Builtins__structGet(ptr %997, ptr %3319)
  %3321 = load ptr, ptr @tag_Equals, align 8
  %3322 = call ptr @Builtins__structGet(ptr %997, ptr %3321)
  %3323 = load ptr, ptr @tag_TypeOf, align 8
  %3324 = call ptr @Builtins__structGet(ptr %997, ptr %3323)
  %3325 = load ptr, ptr @tag_IfElse, align 8
  %3326 = call ptr @Builtins__structGet(ptr %997, ptr %3325)
  %3327 = load ptr, ptr @tag_Equals, align 8
  %3328 = call ptr @Builtins__structGet(ptr %997, ptr %3327)
  %3329 = load ptr, ptr @tag_Equals, align 8
  %3330 = call ptr @Builtins__structGet(ptr %997, ptr %3329)
  %3331 = load ptr, ptr @tag_TypeOf, align 8
  %3332 = call ptr @Builtins__structGet(ptr %997, ptr %3331)
  %3333 = load ptr, ptr @tag_IntAdd, align 8
  %3334 = call ptr @Builtins__structGet(ptr %997, ptr %3333)
  %3335 = load ptr, ptr @tag_IntSubtract, align 8
  %3336 = call ptr @Builtins__structGet(ptr %997, ptr %3335)
  %3337 = load ptr, ptr @tag_IntMultiply, align 8
  %3338 = call ptr @Builtins__structGet(ptr %997, ptr %3337)
  %3339 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %3340 = call ptr @Builtins__structGet(ptr %997, ptr %3339)
  %3341 = load ptr, ptr @tag_IntRemainder, align 8
  %3342 = call ptr @Builtins__structGet(ptr %997, ptr %3341)
  %3343 = load ptr, ptr @tag_IntModulo, align 8
  %3344 = call ptr @Builtins__structGet(ptr %997, ptr %3343)
  %3345 = load ptr, ptr @tag_IntShiftLeft, align 8
  %3346 = call ptr @Builtins__structGet(ptr %997, ptr %3345)
  %3347 = load ptr, ptr @tag_IntShiftRight, align 8
  %3348 = call ptr @Builtins__structGet(ptr %997, ptr %3347)
  %3349 = load ptr, ptr @tag_IntBitLength, align 8
  %3350 = call ptr @Builtins__structGet(ptr %997, ptr %3349)
  %3351 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %3352 = call ptr @Builtins__structGet(ptr %997, ptr %3351)
  %3353 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %3354 = call ptr @Builtins__structGet(ptr %997, ptr %3353)
  %3355 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %3356 = call ptr @Builtins__structGet(ptr %997, ptr %3355)
  %3357 = load ptr, ptr @tag_IntParse, align 8
  %3358 = call ptr @Builtins__structGet(ptr %997, ptr %3357)
  %3359 = load ptr, ptr @tag_Equals, align 8
  %3360 = call ptr @Builtins__structGet(ptr %997, ptr %3359)
  %3361 = load ptr, ptr @tag_Equals, align 8
  %3362 = call ptr @Builtins__structGet(ptr %997, ptr %3361)
  %3363 = load ptr, ptr @tag_Equals, align 8
  %3364 = call ptr @Builtins__structGet(ptr %997, ptr %3363)
  %3365 = load ptr, ptr @tag_TypeOf, align 8
  %3366 = call ptr @Builtins__structGet(ptr %997, ptr %3365)
  %3367 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3368 = call ptr @Builtins__structGet(ptr %997, ptr %3367)
  %3369 = load ptr, ptr @tag_Equals, align 8
  %3370 = call ptr @Builtins__structGet(ptr %997, ptr %3369)
  %3371 = load ptr, ptr @tag_TypeOf, align 8
  %3372 = call ptr @Builtins__structGet(ptr %997, ptr %3371)
  %3373 = load ptr, ptr @tag_Equals, align 8
  %3374 = call ptr @Builtins__structGet(ptr %997, ptr %3373)
  %3375 = load ptr, ptr @tag_Equals, align 8
  %3376 = call ptr @Builtins__structGet(ptr %997, ptr %3375)
  %3377 = load ptr, ptr @tag_Equals, align 8
  %3378 = call ptr @Builtins__structGet(ptr %997, ptr %3377)
  %3379 = load ptr, ptr @tag_TypeOf, align 8
  %3380 = call ptr @Builtins__structGet(ptr %997, ptr %3379)
  %3381 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3382 = call ptr @Builtins__structGet(ptr %997, ptr %3381)
  %3383 = load ptr, ptr @tag_Equals, align 8
  %3384 = call ptr @Builtins__structGet(ptr %997, ptr %3383)
  %3385 = load ptr, ptr @tag_TypeOf, align 8
  %3386 = call ptr @Builtins__structGet(ptr %997, ptr %3385)
  %3387 = load ptr, ptr @tag_Equals, align 8
  %3388 = call ptr @Builtins__structGet(ptr %997, ptr %3387)
  %3389 = load ptr, ptr @tag_Equals, align 8
  %3390 = call ptr @Builtins__structGet(ptr %997, ptr %3389)
  %3391 = load ptr, ptr @tag_Equals, align 8
  %3392 = call ptr @Builtins__structGet(ptr %997, ptr %3391)
  %3393 = load ptr, ptr @tag_TypeOf, align 8
  %3394 = call ptr @Builtins__structGet(ptr %997, ptr %3393)
  %3395 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3396 = call ptr @Builtins__structGet(ptr %997, ptr %3395)
  %3397 = load ptr, ptr @tag_Equals, align 8
  %3398 = call ptr @Builtins__structGet(ptr %997, ptr %3397)
  %3399 = load ptr, ptr @tag_TypeOf, align 8
  %3400 = call ptr @Builtins__structGet(ptr %997, ptr %3399)
  %3401 = load ptr, ptr @tag_IfElse, align 8
  %3402 = call ptr @Builtins__structGet(ptr %997, ptr %3401)
  %3403 = load ptr, ptr @tag_Equals, align 8
  %3404 = call ptr @Builtins__structGet(ptr %997, ptr %3403)
  %3405 = load ptr, ptr @tag_Equals, align 8
  %3406 = call ptr @Builtins__structGet(ptr %997, ptr %3405)
  %3407 = load ptr, ptr @tag_Equals, align 8
  %3408 = call ptr @Builtins__structGet(ptr %997, ptr %3407)
  %3409 = load ptr, ptr @tag_TypeOf, align 8
  %3410 = call ptr @Builtins__structGet(ptr %997, ptr %3409)
  %3411 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3412 = call ptr @Builtins__structGet(ptr %997, ptr %3411)
  %3413 = load ptr, ptr @tag_Equals, align 8
  %3414 = call ptr @Builtins__structGet(ptr %997, ptr %3413)
  %3415 = load ptr, ptr @tag_Equals, align 8
  %3416 = call ptr @Builtins__structGet(ptr %997, ptr %3415)
  %3417 = load ptr, ptr @tag_Equals, align 8
  %3418 = call ptr @Builtins__structGet(ptr %997, ptr %3417)
  %3419 = load ptr, ptr @tag_TypeOf, align 8
  %3420 = call ptr @Builtins__structGet(ptr %997, ptr %3419)
  %3421 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3422 = call ptr @Builtins__structGet(ptr %997, ptr %3421)
  %3423 = load ptr, ptr @tag_Equals, align 8
  %3424 = call ptr @Builtins__structGet(ptr %997, ptr %3423)
  %3425 = load ptr, ptr @tag_TypeOf, align 8
  %3426 = call ptr @Builtins__structGet(ptr %997, ptr %3425)
  %3427 = load ptr, ptr @tag_Equals, align 8
  %3428 = call ptr @Builtins__structGet(ptr %997, ptr %3427)
  %3429 = load ptr, ptr @tag_Equals, align 8
  %3430 = call ptr @Builtins__structGet(ptr %997, ptr %3429)
  %3431 = load ptr, ptr @tag_Equals, align 8
  %3432 = call ptr @Builtins__structGet(ptr %997, ptr %3431)
  %3433 = load ptr, ptr @tag_TypeOf, align 8
  %3434 = call ptr @Builtins__structGet(ptr %997, ptr %3433)
  %3435 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3436 = call ptr @Builtins__structGet(ptr %997, ptr %3435)
  %3437 = load ptr, ptr @tag_Equals, align 8
  %3438 = call ptr @Builtins__structGet(ptr %997, ptr %3437)
  %3439 = load ptr, ptr @tag_TypeOf, align 8
  %3440 = call ptr @Builtins__structGet(ptr %997, ptr %3439)
  %3441 = load ptr, ptr @tag_IfElse, align 8
  %3442 = call ptr @Builtins__structGet(ptr %997, ptr %3441)
  %3443 = load ptr, ptr @tag_Equals, align 8
  %3444 = call ptr @Builtins__structGet(ptr %997, ptr %3443)
  %3445 = load ptr, ptr @tag_TypeOf, align 8
  %3446 = call ptr @Builtins__structGet(ptr %997, ptr %3445)
  %3447 = load ptr, ptr @tag_Equals, align 8
  %3448 = call ptr @Builtins__structGet(ptr %997, ptr %3447)
  %3449 = load ptr, ptr @tag_Equals, align 8
  %3450 = call ptr @Builtins__structGet(ptr %997, ptr %3449)
  %3451 = load ptr, ptr @tag_Equals, align 8
  %3452 = call ptr @Builtins__structGet(ptr %997, ptr %3451)
  %3453 = load ptr, ptr @tag_TypeOf, align 8
  %3454 = call ptr @Builtins__structGet(ptr %997, ptr %3453)
  %3455 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3456 = call ptr @Builtins__structGet(ptr %997, ptr %3455)
  %3457 = load ptr, ptr @tag_Equals, align 8
  %3458 = call ptr @Builtins__structGet(ptr %997, ptr %3457)
  %3459 = load ptr, ptr @tag_TypeOf, align 8
  %3460 = call ptr @Builtins__structGet(ptr %997, ptr %3459)
  %3461 = load ptr, ptr @tag_Equals, align 8
  %3462 = call ptr @Builtins__structGet(ptr %997, ptr %3461)
  %3463 = load ptr, ptr @tag_Equals, align 8
  %3464 = call ptr @Builtins__structGet(ptr %997, ptr %3463)
  %3465 = load ptr, ptr @tag_Equals, align 8
  %3466 = call ptr @Builtins__structGet(ptr %997, ptr %3465)
  %3467 = load ptr, ptr @tag_TypeOf, align 8
  %3468 = call ptr @Builtins__structGet(ptr %997, ptr %3467)
  %3469 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3470 = call ptr @Builtins__structGet(ptr %997, ptr %3469)
  %3471 = load ptr, ptr @tag_Equals, align 8
  %3472 = call ptr @Builtins__structGet(ptr %997, ptr %3471)
  %3473 = load ptr, ptr @tag_TypeOf, align 8
  %3474 = call ptr @Builtins__structGet(ptr %997, ptr %3473)
  %3475 = load ptr, ptr @tag_Equals, align 8
  %3476 = call ptr @Builtins__structGet(ptr %997, ptr %3475)
  %3477 = load ptr, ptr @tag_Equals, align 8
  %3478 = call ptr @Builtins__structGet(ptr %997, ptr %3477)
  %3479 = load ptr, ptr @tag_Equals, align 8
  %3480 = call ptr @Builtins__structGet(ptr %997, ptr %3479)
  %3481 = load ptr, ptr @tag_TypeOf, align 8
  %3482 = call ptr @Builtins__structGet(ptr %997, ptr %3481)
  %3483 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3484 = call ptr @Builtins__structGet(ptr %997, ptr %3483)
  %3485 = load ptr, ptr @tag_Equals, align 8
  %3486 = call ptr @Builtins__structGet(ptr %997, ptr %3485)
  %3487 = load ptr, ptr @tag_TypeOf, align 8
  %3488 = call ptr @Builtins__structGet(ptr %997, ptr %3487)
  %3489 = load ptr, ptr @tag_IfElse, align 8
  %3490 = call ptr @Builtins__structGet(ptr %997, ptr %3489)
  %3491 = load ptr, ptr @tag_Equals, align 8
  %3492 = call ptr @Builtins__structGet(ptr %997, ptr %3491)
  %3493 = load ptr, ptr @tag_TypeOf, align 8
  %3494 = call ptr @Builtins__structGet(ptr %997, ptr %3493)
  %3495 = load ptr, ptr @tag_TagHasValue, align 8
  %3496 = call ptr @Builtins__structGet(ptr %997, ptr %3495)
  %3497 = load ptr, ptr @tag_TagWithoutValue, align 8
  %3498 = call ptr @Builtins__structGet(ptr %997, ptr %3497)
  %3499 = load ptr, ptr @tag_TagGetValue, align 8
  %3500 = call ptr @Builtins__structGet(ptr %997, ptr %3499)
  %3501 = load ptr, ptr @tag_Equals, align 8
  %3502 = call ptr @Builtins__structGet(ptr %997, ptr %3501)
  %3503 = load ptr, ptr @tag_TypeOf, align 8
  %3504 = call ptr @Builtins__structGet(ptr %997, ptr %3503)
  %3505 = load ptr, ptr @tag_Equals, align 8
  %3506 = call ptr @Builtins__structGet(ptr %997, ptr %3505)
  %3507 = load ptr, ptr @tag_TypeOf, align 8
  %3508 = call ptr @Builtins__structGet(ptr %997, ptr %3507)
  %3509 = load ptr, ptr @tag_ListLength, align 8
  %3510 = call ptr @Builtins__structGet(ptr %997, ptr %3509)
  %3511 = load ptr, ptr @tag_ListGet, align 8
  %3512 = call ptr @Builtins__structGet(ptr %997, ptr %3511)
  %3513 = load ptr, ptr @tag_ListInsert, align 8
  %3514 = call ptr @Builtins__structGet(ptr %997, ptr %3513)
  %3515 = load ptr, ptr @tag_ListReplace, align 8
  %3516 = call ptr @Builtins__structGet(ptr %997, ptr %3515)
  %3517 = load ptr, ptr @tag_ListRemoveAt, align 8
  %3518 = call ptr @Builtins__structGet(ptr %997, ptr %3517)
  %3519 = load ptr, ptr @tag_ListFilled, align 8
  %3520 = call ptr @Builtins__structGet(ptr %997, ptr %3519)
  %3521 = load ptr, ptr @tag_Equals, align 8
  %3522 = call ptr @Builtins__structGet(ptr %997, ptr %3521)
  %3523 = load ptr, ptr @tag_Equals, align 8
  %3524 = call ptr @Builtins__structGet(ptr %997, ptr %3523)
  %3525 = load ptr, ptr @tag_Equals, align 8
  %3526 = call ptr @Builtins__structGet(ptr %997, ptr %3525)
  %3527 = load ptr, ptr @tag_TypeOf, align 8
  %3528 = call ptr @Builtins__structGet(ptr %997, ptr %3527)
  %3529 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3530 = call ptr @Builtins__structGet(ptr %997, ptr %3529)
  %3531 = load ptr, ptr @tag_Equals, align 8
  %3532 = call ptr @Builtins__structGet(ptr %997, ptr %3531)
  %3533 = load ptr, ptr @tag_TypeOf, align 8
  %3534 = call ptr @Builtins__structGet(ptr %997, ptr %3533)
  %3535 = load ptr, ptr @tag_Equals, align 8
  %3536 = call ptr @Builtins__structGet(ptr %997, ptr %3535)
  %3537 = load ptr, ptr @tag_Equals, align 8
  %3538 = call ptr @Builtins__structGet(ptr %997, ptr %3537)
  %3539 = load ptr, ptr @tag_Equals, align 8
  %3540 = call ptr @Builtins__structGet(ptr %997, ptr %3539)
  %3541 = load ptr, ptr @tag_TypeOf, align 8
  %3542 = call ptr @Builtins__structGet(ptr %997, ptr %3541)
  %3543 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3544 = call ptr @Builtins__structGet(ptr %997, ptr %3543)
  %3545 = load ptr, ptr @tag_Equals, align 8
  %3546 = call ptr @Builtins__structGet(ptr %997, ptr %3545)
  %3547 = load ptr, ptr @tag_TypeOf, align 8
  %3548 = call ptr @Builtins__structGet(ptr %997, ptr %3547)
  %3549 = load ptr, ptr @tag_IfElse, align 8
  %3550 = call ptr @Builtins__structGet(ptr %997, ptr %3549)
  %3551 = load ptr, ptr @tag_Equals, align 8
  %3552 = call ptr @Builtins__structGet(ptr %997, ptr %3551)
  %3553 = load ptr, ptr @tag_TypeOf, align 8
  %3554 = call ptr @Builtins__structGet(ptr %997, ptr %3553)
  %3555 = load ptr, ptr @tag_Equals, align 8
  %3556 = call ptr @Builtins__structGet(ptr %997, ptr %3555)
  %3557 = load ptr, ptr @tag_TypeOf, align 8
  %3558 = call ptr @Builtins__structGet(ptr %997, ptr %3557)
  %3559 = load ptr, ptr @tag_TextFromUtf8, align 8
  %3560 = call ptr @Builtins__structGet(ptr %997, ptr %3559)
  %3561 = load ptr, ptr @tag_TextIsEmpty, align 8
  %3562 = call ptr @Builtins__structGet(ptr %997, ptr %3561)
  %3563 = load ptr, ptr @tag_TextLength, align 8
  %3564 = call ptr @Builtins__structGet(ptr %997, ptr %3563)
  %3565 = load ptr, ptr @tag_TextCharacters, align 8
  %3566 = call ptr @Builtins__structGet(ptr %997, ptr %3565)
  %3567 = load ptr, ptr @tag_TextGetRange, align 8
  %3568 = call ptr @Builtins__structGet(ptr %997, ptr %3567)
  %3569 = load ptr, ptr @tag_TextConcatenate, align 8
  %3570 = call ptr @Builtins__structGet(ptr %997, ptr %3569)
  %3571 = load ptr, ptr @tag_TextStartsWith, align 8
  %3572 = call ptr @Builtins__structGet(ptr %997, ptr %3571)
  %3573 = load ptr, ptr @tag_TextEndsWith, align 8
  %3574 = call ptr @Builtins__structGet(ptr %997, ptr %3573)
  %3575 = load ptr, ptr @tag_TextContains, align 8
  %3576 = call ptr @Builtins__structGet(ptr %997, ptr %3575)
  %3577 = load ptr, ptr @tag_TextTrimStart, align 8
  %3578 = call ptr @Builtins__structGet(ptr %997, ptr %3577)
  %3579 = load ptr, ptr @tag_TextTrimEnd, align 8
  %3580 = call ptr @Builtins__structGet(ptr %997, ptr %3579)
  %3581 = load ptr, ptr @tag_Equals, align 8
  %3582 = call ptr @Builtins__structGet(ptr %997, ptr %3581)
  %3583 = load ptr, ptr @tag_Equals, align 8
  %3584 = call ptr @Builtins__structGet(ptr %997, ptr %3583)
  %3585 = load ptr, ptr @tag_Equals, align 8
  %3586 = call ptr @Builtins__structGet(ptr %997, ptr %3585)
  %3587 = load ptr, ptr @tag_TypeOf, align 8
  %3588 = call ptr @Builtins__structGet(ptr %997, ptr %3587)
  %3589 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3590 = call ptr @Builtins__structGet(ptr %997, ptr %3589)
  %3591 = load ptr, ptr @tag_Equals, align 8
  %3592 = call ptr @Builtins__structGet(ptr %997, ptr %3591)
  %3593 = load ptr, ptr @tag_TypeOf, align 8
  %3594 = call ptr @Builtins__structGet(ptr %997, ptr %3593)
  %3595 = load ptr, ptr @tag_Equals, align 8
  %3596 = call ptr @Builtins__structGet(ptr %997, ptr %3595)
  %3597 = load ptr, ptr @tag_Equals, align 8
  %3598 = call ptr @Builtins__structGet(ptr %997, ptr %3597)
  %3599 = load ptr, ptr @tag_Equals, align 8
  %3600 = call ptr @Builtins__structGet(ptr %997, ptr %3599)
  %3601 = load ptr, ptr @tag_TypeOf, align 8
  %3602 = call ptr @Builtins__structGet(ptr %997, ptr %3601)
  %3603 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3604 = call ptr @Builtins__structGet(ptr %997, ptr %3603)
  %3605 = load ptr, ptr @tag_Equals, align 8
  %3606 = call ptr @Builtins__structGet(ptr %997, ptr %3605)
  %3607 = load ptr, ptr @tag_TypeOf, align 8
  %3608 = call ptr @Builtins__structGet(ptr %997, ptr %3607)
  %3609 = load ptr, ptr @tag_Equals, align 8
  %3610 = call ptr @Builtins__structGet(ptr %997, ptr %3609)
  %3611 = load ptr, ptr @tag_Equals, align 8
  %3612 = call ptr @Builtins__structGet(ptr %997, ptr %3611)
  %3613 = load ptr, ptr @tag_Equals, align 8
  %3614 = call ptr @Builtins__structGet(ptr %997, ptr %3613)
  %3615 = load ptr, ptr @tag_TypeOf, align 8
  %3616 = call ptr @Builtins__structGet(ptr %997, ptr %3615)
  %3617 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3618 = call ptr @Builtins__structGet(ptr %997, ptr %3617)
  %3619 = load ptr, ptr @tag_Equals, align 8
  %3620 = call ptr @Builtins__structGet(ptr %997, ptr %3619)
  %3621 = load ptr, ptr @tag_TypeOf, align 8
  %3622 = call ptr @Builtins__structGet(ptr %997, ptr %3621)
  %3623 = load ptr, ptr @tag_IfElse, align 8
  %3624 = call ptr @Builtins__structGet(ptr %997, ptr %3623)
  %3625 = load ptr, ptr @tag_Equals, align 8
  %3626 = call ptr @Builtins__structGet(ptr %997, ptr %3625)
  %3627 = load ptr, ptr @tag_Equals, align 8
  %3628 = call ptr @Builtins__structGet(ptr %997, ptr %3627)
  %3629 = load ptr, ptr @tag_Equals, align 8
  %3630 = call ptr @Builtins__structGet(ptr %997, ptr %3629)
  %3631 = load ptr, ptr @tag_TypeOf, align 8
  %3632 = call ptr @Builtins__structGet(ptr %997, ptr %3631)
  %3633 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3634 = call ptr @Builtins__structGet(ptr %997, ptr %3633)
  %3635 = load ptr, ptr @tag_Equals, align 8
  %3636 = call ptr @Builtins__structGet(ptr %997, ptr %3635)
  %3637 = load ptr, ptr @tag_Equals, align 8
  %3638 = call ptr @Builtins__structGet(ptr %997, ptr %3637)
  %3639 = load ptr, ptr @tag_Equals, align 8
  %3640 = call ptr @Builtins__structGet(ptr %997, ptr %3639)
  %3641 = load ptr, ptr @tag_TypeOf, align 8
  %3642 = call ptr @Builtins__structGet(ptr %997, ptr %3641)
  %3643 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3644 = call ptr @Builtins__structGet(ptr %997, ptr %3643)
  %3645 = load ptr, ptr @tag_Equals, align 8
  %3646 = call ptr @Builtins__structGet(ptr %997, ptr %3645)
  %3647 = load ptr, ptr @tag_TypeOf, align 8
  %3648 = call ptr @Builtins__structGet(ptr %997, ptr %3647)
  %3649 = load ptr, ptr @tag_Equals, align 8
  %3650 = call ptr @Builtins__structGet(ptr %997, ptr %3649)
  %3651 = load ptr, ptr @tag_Equals, align 8
  %3652 = call ptr @Builtins__structGet(ptr %997, ptr %3651)
  %3653 = load ptr, ptr @tag_Equals, align 8
  %3654 = call ptr @Builtins__structGet(ptr %997, ptr %3653)
  %3655 = load ptr, ptr @tag_TypeOf, align 8
  %3656 = call ptr @Builtins__structGet(ptr %997, ptr %3655)
  %3657 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3658 = call ptr @Builtins__structGet(ptr %997, ptr %3657)
  %3659 = load ptr, ptr @tag_Equals, align 8
  %3660 = call ptr @Builtins__structGet(ptr %997, ptr %3659)
  %3661 = load ptr, ptr @tag_TypeOf, align 8
  %3662 = call ptr @Builtins__structGet(ptr %997, ptr %3661)
  %3663 = load ptr, ptr @tag_Equals, align 8
  %3664 = call ptr @Builtins__structGet(ptr %997, ptr %3663)
  %3665 = load ptr, ptr @tag_Equals, align 8
  %3666 = call ptr @Builtins__structGet(ptr %997, ptr %3665)
  %3667 = load ptr, ptr @tag_Equals, align 8
  %3668 = call ptr @Builtins__structGet(ptr %997, ptr %3667)
  %3669 = load ptr, ptr @tag_TypeOf, align 8
  %3670 = call ptr @Builtins__structGet(ptr %997, ptr %3669)
  %3671 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3672 = call ptr @Builtins__structGet(ptr %997, ptr %3671)
  %3673 = load ptr, ptr @tag_Equals, align 8
  %3674 = call ptr @Builtins__structGet(ptr %997, ptr %3673)
  %3675 = load ptr, ptr @tag_TypeOf, align 8
  %3676 = call ptr @Builtins__structGet(ptr %997, ptr %3675)
  %3677 = load ptr, ptr @tag_Equals, align 8
  %3678 = call ptr @Builtins__structGet(ptr %997, ptr %3677)
  %3679 = load ptr, ptr @tag_Equals, align 8
  %3680 = call ptr @Builtins__structGet(ptr %997, ptr %3679)
  %3681 = load ptr, ptr @tag_Equals, align 8
  %3682 = call ptr @Builtins__structGet(ptr %997, ptr %3681)
  %3683 = load ptr, ptr @tag_TypeOf, align 8
  %3684 = call ptr @Builtins__structGet(ptr %997, ptr %3683)
  %3685 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3686 = call ptr @Builtins__structGet(ptr %997, ptr %3685)
  %3687 = load ptr, ptr @tag_Equals, align 8
  %3688 = call ptr @Builtins__structGet(ptr %997, ptr %3687)
  %3689 = load ptr, ptr @tag_TypeOf, align 8
  %3690 = call ptr @Builtins__structGet(ptr %997, ptr %3689)
  %3691 = load ptr, ptr @tag_IfElse, align 8
  %3692 = call ptr @Builtins__structGet(ptr %997, ptr %3691)
  %3693 = load ptr, ptr @tag_Equals, align 8
  %3694 = call ptr @Builtins__structGet(ptr %997, ptr %3693)
  %3695 = load ptr, ptr @tag_Equals, align 8
  %3696 = call ptr @Builtins__structGet(ptr %997, ptr %3695)
  %3697 = load ptr, ptr @tag_Equals, align 8
  %3698 = call ptr @Builtins__structGet(ptr %997, ptr %3697)
  %3699 = load ptr, ptr @tag_TypeOf, align 8
  %3700 = call ptr @Builtins__structGet(ptr %997, ptr %3699)
  %3701 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3702 = call ptr @Builtins__structGet(ptr %997, ptr %3701)
  %3703 = load ptr, ptr @tag_Equals, align 8
  %3704 = call ptr @Builtins__structGet(ptr %997, ptr %3703)
  %3705 = load ptr, ptr @tag_TypeOf, align 8
  %3706 = call ptr @Builtins__structGet(ptr %997, ptr %3705)
  %3707 = load ptr, ptr @tag_Equals, align 8
  %3708 = call ptr @Builtins__structGet(ptr %997, ptr %3707)
  %3709 = load ptr, ptr @tag_Equals, align 8
  %3710 = call ptr @Builtins__structGet(ptr %997, ptr %3709)
  %3711 = load ptr, ptr @tag_Equals, align 8
  %3712 = call ptr @Builtins__structGet(ptr %997, ptr %3711)
  %3713 = load ptr, ptr @tag_TypeOf, align 8
  %3714 = call ptr @Builtins__structGet(ptr %997, ptr %3713)
  %3715 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3716 = call ptr @Builtins__structGet(ptr %997, ptr %3715)
  %3717 = load ptr, ptr @tag_Equals, align 8
  %3718 = call ptr @Builtins__structGet(ptr %997, ptr %3717)
  %3719 = load ptr, ptr @tag_TypeOf, align 8
  %3720 = call ptr @Builtins__structGet(ptr %997, ptr %3719)
  %3721 = load ptr, ptr @tag_IfElse, align 8
  %3722 = call ptr @Builtins__structGet(ptr %997, ptr %3721)
  %3723 = load ptr, ptr @tag_Equals, align 8
  %3724 = call ptr @Builtins__structGet(ptr %997, ptr %3723)
  %3725 = load ptr, ptr @tag_Equals, align 8
  %3726 = call ptr @Builtins__structGet(ptr %997, ptr %3725)
  %3727 = load ptr, ptr @tag_TypeOf, align 8
  %3728 = call ptr @Builtins__structGet(ptr %997, ptr %3727)
  %3729 = load ptr, ptr @tag_IntAdd, align 8
  %3730 = call ptr @Builtins__structGet(ptr %997, ptr %3729)
  %3731 = load ptr, ptr @tag_IntSubtract, align 8
  %3732 = call ptr @Builtins__structGet(ptr %997, ptr %3731)
  %3733 = load ptr, ptr @tag_IntMultiply, align 8
  %3734 = call ptr @Builtins__structGet(ptr %997, ptr %3733)
  %3735 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %3736 = call ptr @Builtins__structGet(ptr %997, ptr %3735)
  %3737 = load ptr, ptr @tag_IntRemainder, align 8
  %3738 = call ptr @Builtins__structGet(ptr %997, ptr %3737)
  %3739 = load ptr, ptr @tag_IntModulo, align 8
  %3740 = call ptr @Builtins__structGet(ptr %997, ptr %3739)
  %3741 = load ptr, ptr @tag_IntShiftLeft, align 8
  %3742 = call ptr @Builtins__structGet(ptr %997, ptr %3741)
  %3743 = load ptr, ptr @tag_IntShiftRight, align 8
  %3744 = call ptr @Builtins__structGet(ptr %997, ptr %3743)
  %3745 = load ptr, ptr @tag_IntBitLength, align 8
  %3746 = call ptr @Builtins__structGet(ptr %997, ptr %3745)
  %3747 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %3748 = call ptr @Builtins__structGet(ptr %997, ptr %3747)
  %3749 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %3750 = call ptr @Builtins__structGet(ptr %997, ptr %3749)
  %3751 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %3752 = call ptr @Builtins__structGet(ptr %997, ptr %3751)
  %3753 = load ptr, ptr @tag_IntParse, align 8
  %3754 = call ptr @Builtins__structGet(ptr %997, ptr %3753)
  %3755 = load ptr, ptr @tag_Equals, align 8
  %3756 = call ptr @Builtins__structGet(ptr %997, ptr %3755)
  %3757 = load ptr, ptr @tag_Equals, align 8
  %3758 = call ptr @Builtins__structGet(ptr %997, ptr %3757)
  %3759 = load ptr, ptr @tag_Equals, align 8
  %3760 = call ptr @Builtins__structGet(ptr %997, ptr %3759)
  %3761 = load ptr, ptr @tag_TypeOf, align 8
  %3762 = call ptr @Builtins__structGet(ptr %997, ptr %3761)
  %3763 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3764 = call ptr @Builtins__structGet(ptr %997, ptr %3763)
  %3765 = load ptr, ptr @tag_Equals, align 8
  %3766 = call ptr @Builtins__structGet(ptr %997, ptr %3765)
  %3767 = load ptr, ptr @tag_TypeOf, align 8
  %3768 = call ptr @Builtins__structGet(ptr %997, ptr %3767)
  %3769 = load ptr, ptr @tag_Equals, align 8
  %3770 = call ptr @Builtins__structGet(ptr %997, ptr %3769)
  %3771 = load ptr, ptr @tag_Equals, align 8
  %3772 = call ptr @Builtins__structGet(ptr %997, ptr %3771)
  %3773 = load ptr, ptr @tag_Equals, align 8
  %3774 = call ptr @Builtins__structGet(ptr %997, ptr %3773)
  %3775 = load ptr, ptr @tag_TypeOf, align 8
  %3776 = call ptr @Builtins__structGet(ptr %997, ptr %3775)
  %3777 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3778 = call ptr @Builtins__structGet(ptr %997, ptr %3777)
  %3779 = load ptr, ptr @tag_Equals, align 8
  %3780 = call ptr @Builtins__structGet(ptr %997, ptr %3779)
  %3781 = load ptr, ptr @tag_TypeOf, align 8
  %3782 = call ptr @Builtins__structGet(ptr %997, ptr %3781)
  %3783 = load ptr, ptr @tag_Equals, align 8
  %3784 = call ptr @Builtins__structGet(ptr %997, ptr %3783)
  %3785 = load ptr, ptr @tag_Equals, align 8
  %3786 = call ptr @Builtins__structGet(ptr %997, ptr %3785)
  %3787 = load ptr, ptr @tag_Equals, align 8
  %3788 = call ptr @Builtins__structGet(ptr %997, ptr %3787)
  %3789 = load ptr, ptr @tag_TypeOf, align 8
  %3790 = call ptr @Builtins__structGet(ptr %997, ptr %3789)
  %3791 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3792 = call ptr @Builtins__structGet(ptr %997, ptr %3791)
  %3793 = load ptr, ptr @tag_Equals, align 8
  %3794 = call ptr @Builtins__structGet(ptr %997, ptr %3793)
  %3795 = load ptr, ptr @tag_TypeOf, align 8
  %3796 = call ptr @Builtins__structGet(ptr %997, ptr %3795)
  %3797 = load ptr, ptr @tag_IfElse, align 8
  %3798 = call ptr @Builtins__structGet(ptr %997, ptr %3797)
  %3799 = load ptr, ptr @tag_Equals, align 8
  %3800 = call ptr @Builtins__structGet(ptr %997, ptr %3799)
  %3801 = load ptr, ptr @tag_Equals, align 8
  %3802 = call ptr @Builtins__structGet(ptr %997, ptr %3801)
  %3803 = load ptr, ptr @tag_Equals, align 8
  %3804 = call ptr @Builtins__structGet(ptr %997, ptr %3803)
  %3805 = load ptr, ptr @tag_TypeOf, align 8
  %3806 = call ptr @Builtins__structGet(ptr %997, ptr %3805)
  %3807 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3808 = call ptr @Builtins__structGet(ptr %997, ptr %3807)
  %3809 = load ptr, ptr @tag_Equals, align 8
  %3810 = call ptr @Builtins__structGet(ptr %997, ptr %3809)
  %3811 = load ptr, ptr @tag_Equals, align 8
  %3812 = call ptr @Builtins__structGet(ptr %997, ptr %3811)
  %3813 = load ptr, ptr @tag_Equals, align 8
  %3814 = call ptr @Builtins__structGet(ptr %997, ptr %3813)
  %3815 = load ptr, ptr @tag_TypeOf, align 8
  %3816 = call ptr @Builtins__structGet(ptr %997, ptr %3815)
  %3817 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3818 = call ptr @Builtins__structGet(ptr %997, ptr %3817)
  %3819 = load ptr, ptr @tag_Equals, align 8
  %3820 = call ptr @Builtins__structGet(ptr %997, ptr %3819)
  %3821 = load ptr, ptr @tag_TypeOf, align 8
  %3822 = call ptr @Builtins__structGet(ptr %997, ptr %3821)
  %3823 = load ptr, ptr @tag_Equals, align 8
  %3824 = call ptr @Builtins__structGet(ptr %997, ptr %3823)
  %3825 = load ptr, ptr @tag_Equals, align 8
  %3826 = call ptr @Builtins__structGet(ptr %997, ptr %3825)
  %3827 = load ptr, ptr @tag_Equals, align 8
  %3828 = call ptr @Builtins__structGet(ptr %997, ptr %3827)
  %3829 = load ptr, ptr @tag_TypeOf, align 8
  %3830 = call ptr @Builtins__structGet(ptr %997, ptr %3829)
  %3831 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3832 = call ptr @Builtins__structGet(ptr %997, ptr %3831)
  %3833 = load ptr, ptr @tag_Equals, align 8
  %3834 = call ptr @Builtins__structGet(ptr %997, ptr %3833)
  %3835 = load ptr, ptr @tag_TypeOf, align 8
  %3836 = call ptr @Builtins__structGet(ptr %997, ptr %3835)
  %3837 = load ptr, ptr @tag_IfElse, align 8
  %3838 = call ptr @Builtins__structGet(ptr %997, ptr %3837)
  %3839 = load ptr, ptr @tag_Equals, align 8
  %3840 = call ptr @Builtins__structGet(ptr %997, ptr %3839)
  %3841 = load ptr, ptr @tag_TypeOf, align 8
  %3842 = call ptr @Builtins__structGet(ptr %997, ptr %3841)
  %3843 = load ptr, ptr @tag_Equals, align 8
  %3844 = call ptr @Builtins__structGet(ptr %997, ptr %3843)
  %3845 = load ptr, ptr @tag_Equals, align 8
  %3846 = call ptr @Builtins__structGet(ptr %997, ptr %3845)
  %3847 = load ptr, ptr @tag_Equals, align 8
  %3848 = call ptr @Builtins__structGet(ptr %997, ptr %3847)
  %3849 = load ptr, ptr @tag_TypeOf, align 8
  %3850 = call ptr @Builtins__structGet(ptr %997, ptr %3849)
  %3851 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3852 = call ptr @Builtins__structGet(ptr %997, ptr %3851)
  %3853 = load ptr, ptr @tag_Equals, align 8
  %3854 = call ptr @Builtins__structGet(ptr %997, ptr %3853)
  %3855 = load ptr, ptr @tag_TypeOf, align 8
  %3856 = call ptr @Builtins__structGet(ptr %997, ptr %3855)
  %3857 = load ptr, ptr @tag_Equals, align 8
  %3858 = call ptr @Builtins__structGet(ptr %997, ptr %3857)
  %3859 = load ptr, ptr @tag_Equals, align 8
  %3860 = call ptr @Builtins__structGet(ptr %997, ptr %3859)
  %3861 = load ptr, ptr @tag_Equals, align 8
  %3862 = call ptr @Builtins__structGet(ptr %997, ptr %3861)
  %3863 = load ptr, ptr @tag_TypeOf, align 8
  %3864 = call ptr @Builtins__structGet(ptr %997, ptr %3863)
  %3865 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3866 = call ptr @Builtins__structGet(ptr %997, ptr %3865)
  %3867 = load ptr, ptr @tag_Equals, align 8
  %3868 = call ptr @Builtins__structGet(ptr %997, ptr %3867)
  %3869 = load ptr, ptr @tag_TypeOf, align 8
  %3870 = call ptr @Builtins__structGet(ptr %997, ptr %3869)
  %3871 = load ptr, ptr @tag_Equals, align 8
  %3872 = call ptr @Builtins__structGet(ptr %997, ptr %3871)
  %3873 = load ptr, ptr @tag_Equals, align 8
  %3874 = call ptr @Builtins__structGet(ptr %997, ptr %3873)
  %3875 = load ptr, ptr @tag_Equals, align 8
  %3876 = call ptr @Builtins__structGet(ptr %997, ptr %3875)
  %3877 = load ptr, ptr @tag_TypeOf, align 8
  %3878 = call ptr @Builtins__structGet(ptr %997, ptr %3877)
  %3879 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3880 = call ptr @Builtins__structGet(ptr %997, ptr %3879)
  %3881 = load ptr, ptr @tag_Equals, align 8
  %3882 = call ptr @Builtins__structGet(ptr %997, ptr %3881)
  %3883 = load ptr, ptr @tag_TypeOf, align 8
  %3884 = call ptr @Builtins__structGet(ptr %997, ptr %3883)
  %3885 = load ptr, ptr @tag_IfElse, align 8
  %3886 = call ptr @Builtins__structGet(ptr %997, ptr %3885)
  %3887 = load ptr, ptr @tag_Equals, align 8
  %3888 = call ptr @Builtins__structGet(ptr %997, ptr %3887)
  %3889 = load ptr, ptr @tag_TypeOf, align 8
  %3890 = call ptr @Builtins__structGet(ptr %997, ptr %3889)
  %3891 = load ptr, ptr @tag_TagHasValue, align 8
  %3892 = call ptr @Builtins__structGet(ptr %997, ptr %3891)
  %3893 = load ptr, ptr @tag_TagWithoutValue, align 8
  %3894 = call ptr @Builtins__structGet(ptr %997, ptr %3893)
  %3895 = load ptr, ptr @tag_TagGetValue, align 8
  %3896 = call ptr @Builtins__structGet(ptr %997, ptr %3895)
  %3897 = load ptr, ptr @tag_Equals, align 8
  %3898 = call ptr @Builtins__structGet(ptr %997, ptr %3897)
  %3899 = load ptr, ptr @tag_TypeOf, align 8
  %3900 = call ptr @Builtins__structGet(ptr %997, ptr %3899)
  %3901 = load ptr, ptr @tag_Equals, align 8
  %3902 = call ptr @Builtins__structGet(ptr %997, ptr %3901)
  %3903 = load ptr, ptr @tag_TypeOf, align 8
  %3904 = call ptr @Builtins__structGet(ptr %997, ptr %3903)
  %3905 = load ptr, ptr @tag_ListLength, align 8
  %3906 = call ptr @Builtins__structGet(ptr %997, ptr %3905)
  %3907 = load ptr, ptr @tag_ListGet, align 8
  %3908 = call ptr @Builtins__structGet(ptr %997, ptr %3907)
  %3909 = load ptr, ptr @tag_ListInsert, align 8
  %3910 = call ptr @Builtins__structGet(ptr %997, ptr %3909)
  %3911 = load ptr, ptr @tag_ListReplace, align 8
  %3912 = call ptr @Builtins__structGet(ptr %997, ptr %3911)
  %3913 = load ptr, ptr @tag_ListRemoveAt, align 8
  %3914 = call ptr @Builtins__structGet(ptr %997, ptr %3913)
  %3915 = load ptr, ptr @tag_ListFilled, align 8
  %3916 = call ptr @Builtins__structGet(ptr %997, ptr %3915)
  %3917 = load ptr, ptr @tag_Equals, align 8
  %3918 = call ptr @Builtins__structGet(ptr %997, ptr %3917)
  %3919 = load ptr, ptr @tag_TypeOf, align 8
  %3920 = call ptr @Builtins__structGet(ptr %997, ptr %3919)
  %3921 = load ptr, ptr @tag_Equals, align 8
  %3922 = call ptr @Builtins__structGet(ptr %997, ptr %3921)
  %3923 = load ptr, ptr @tag_Equals, align 8
  %3924 = call ptr @Builtins__structGet(ptr %997, ptr %3923)
  %3925 = load ptr, ptr @tag_Equals, align 8
  %3926 = call ptr @Builtins__structGet(ptr %997, ptr %3925)
  %3927 = load ptr, ptr @tag_TypeOf, align 8
  %3928 = call ptr @Builtins__structGet(ptr %997, ptr %3927)
  %3929 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3930 = call ptr @Builtins__structGet(ptr %997, ptr %3929)
  %3931 = load ptr, ptr @tag_Equals, align 8
  %3932 = call ptr @Builtins__structGet(ptr %997, ptr %3931)
  %3933 = load ptr, ptr @tag_TypeOf, align 8
  %3934 = call ptr @Builtins__structGet(ptr %997, ptr %3933)
  %3935 = load ptr, ptr @tag_Equals, align 8
  %3936 = call ptr @Builtins__structGet(ptr %997, ptr %3935)
  %3937 = load ptr, ptr @tag_Equals, align 8
  %3938 = call ptr @Builtins__structGet(ptr %997, ptr %3937)
  %3939 = load ptr, ptr @tag_Equals, align 8
  %3940 = call ptr @Builtins__structGet(ptr %997, ptr %3939)
  %3941 = load ptr, ptr @tag_TypeOf, align 8
  %3942 = call ptr @Builtins__structGet(ptr %997, ptr %3941)
  %3943 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3944 = call ptr @Builtins__structGet(ptr %997, ptr %3943)
  %3945 = load ptr, ptr @tag_Equals, align 8
  %3946 = call ptr @Builtins__structGet(ptr %997, ptr %3945)
  %3947 = load ptr, ptr @tag_TypeOf, align 8
  %3948 = call ptr @Builtins__structGet(ptr %997, ptr %3947)
  %3949 = load ptr, ptr @tag_Equals, align 8
  %3950 = call ptr @Builtins__structGet(ptr %997, ptr %3949)
  %3951 = load ptr, ptr @tag_Equals, align 8
  %3952 = call ptr @Builtins__structGet(ptr %997, ptr %3951)
  %3953 = load ptr, ptr @tag_Equals, align 8
  %3954 = call ptr @Builtins__structGet(ptr %997, ptr %3953)
  %3955 = load ptr, ptr @tag_TypeOf, align 8
  %3956 = call ptr @Builtins__structGet(ptr %997, ptr %3955)
  %3957 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3958 = call ptr @Builtins__structGet(ptr %997, ptr %3957)
  %3959 = load ptr, ptr @tag_Equals, align 8
  %3960 = call ptr @Builtins__structGet(ptr %997, ptr %3959)
  %3961 = load ptr, ptr @tag_TypeOf, align 8
  %3962 = call ptr @Builtins__structGet(ptr %997, ptr %3961)
  %3963 = load ptr, ptr @tag_IfElse, align 8
  %3964 = call ptr @Builtins__structGet(ptr %997, ptr %3963)
  %3965 = load ptr, ptr @tag_Equals, align 8
  %3966 = call ptr @Builtins__structGet(ptr %997, ptr %3965)
  %3967 = load ptr, ptr @tag_Equals, align 8
  %3968 = call ptr @Builtins__structGet(ptr %997, ptr %3967)
  %3969 = load ptr, ptr @tag_Equals, align 8
  %3970 = call ptr @Builtins__structGet(ptr %997, ptr %3969)
  %3971 = load ptr, ptr @tag_TypeOf, align 8
  %3972 = call ptr @Builtins__structGet(ptr %997, ptr %3971)
  %3973 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3974 = call ptr @Builtins__structGet(ptr %997, ptr %3973)
  %3975 = load ptr, ptr @tag_Equals, align 8
  %3976 = call ptr @Builtins__structGet(ptr %997, ptr %3975)
  %3977 = load ptr, ptr @tag_Equals, align 8
  %3978 = call ptr @Builtins__structGet(ptr %997, ptr %3977)
  %3979 = load ptr, ptr @tag_Equals, align 8
  %3980 = call ptr @Builtins__structGet(ptr %997, ptr %3979)
  %3981 = load ptr, ptr @tag_TypeOf, align 8
  %3982 = call ptr @Builtins__structGet(ptr %997, ptr %3981)
  %3983 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3984 = call ptr @Builtins__structGet(ptr %997, ptr %3983)
  %3985 = load ptr, ptr @tag_Equals, align 8
  %3986 = call ptr @Builtins__structGet(ptr %997, ptr %3985)
  %3987 = load ptr, ptr @tag_TypeOf, align 8
  %3988 = call ptr @Builtins__structGet(ptr %997, ptr %3987)
  %3989 = load ptr, ptr @tag_Equals, align 8
  %3990 = call ptr @Builtins__structGet(ptr %997, ptr %3989)
  %3991 = load ptr, ptr @tag_Equals, align 8
  %3992 = call ptr @Builtins__structGet(ptr %997, ptr %3991)
  %3993 = load ptr, ptr @tag_Equals, align 8
  %3994 = call ptr @Builtins__structGet(ptr %997, ptr %3993)
  %3995 = load ptr, ptr @tag_TypeOf, align 8
  %3996 = call ptr @Builtins__structGet(ptr %997, ptr %3995)
  %3997 = load ptr, ptr @tag_GetArgumentCount, align 8
  %3998 = call ptr @Builtins__structGet(ptr %997, ptr %3997)
  %3999 = load ptr, ptr @tag_Equals, align 8
  %4000 = call ptr @Builtins__structGet(ptr %997, ptr %3999)
  %4001 = load ptr, ptr @tag_TypeOf, align 8
  %4002 = call ptr @Builtins__structGet(ptr %997, ptr %4001)
  %4003 = load ptr, ptr @tag_IfElse, align 8
  %4004 = call ptr @Builtins__structGet(ptr %997, ptr %4003)
  %4005 = load ptr, ptr @tag_Equals, align 8
  %4006 = call ptr @Builtins__structGet(ptr %997, ptr %4005)
  %4007 = load ptr, ptr @tag_TypeOf, align 8
  %4008 = call ptr @Builtins__structGet(ptr %997, ptr %4007)
  %4009 = load ptr, ptr @tag_Equals, align 8
  %4010 = call ptr @Builtins__structGet(ptr %997, ptr %4009)
  %4011 = load ptr, ptr @tag_Equals, align 8
  %4012 = call ptr @Builtins__structGet(ptr %997, ptr %4011)
  %4013 = load ptr, ptr @tag_Equals, align 8
  %4014 = call ptr @Builtins__structGet(ptr %997, ptr %4013)
  %4015 = load ptr, ptr @tag_TypeOf, align 8
  %4016 = call ptr @Builtins__structGet(ptr %997, ptr %4015)
  %4017 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4018 = call ptr @Builtins__structGet(ptr %997, ptr %4017)
  %4019 = load ptr, ptr @tag_Equals, align 8
  %4020 = call ptr @Builtins__structGet(ptr %997, ptr %4019)
  %4021 = load ptr, ptr @tag_TypeOf, align 8
  %4022 = call ptr @Builtins__structGet(ptr %997, ptr %4021)
  %4023 = load ptr, ptr @tag_Equals, align 8
  %4024 = call ptr @Builtins__structGet(ptr %997, ptr %4023)
  %4025 = load ptr, ptr @tag_Equals, align 8
  %4026 = call ptr @Builtins__structGet(ptr %997, ptr %4025)
  %4027 = load ptr, ptr @tag_Equals, align 8
  %4028 = call ptr @Builtins__structGet(ptr %997, ptr %4027)
  %4029 = load ptr, ptr @tag_TypeOf, align 8
  %4030 = call ptr @Builtins__structGet(ptr %997, ptr %4029)
  %4031 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4032 = call ptr @Builtins__structGet(ptr %997, ptr %4031)
  %4033 = load ptr, ptr @tag_Equals, align 8
  %4034 = call ptr @Builtins__structGet(ptr %997, ptr %4033)
  %4035 = load ptr, ptr @tag_TypeOf, align 8
  %4036 = call ptr @Builtins__structGet(ptr %997, ptr %4035)
  %4037 = load ptr, ptr @tag_Equals, align 8
  %4038 = call ptr @Builtins__structGet(ptr %997, ptr %4037)
  %4039 = load ptr, ptr @tag_Equals, align 8
  %4040 = call ptr @Builtins__structGet(ptr %997, ptr %4039)
  %4041 = load ptr, ptr @tag_Equals, align 8
  %4042 = call ptr @Builtins__structGet(ptr %997, ptr %4041)
  %4043 = load ptr, ptr @tag_TypeOf, align 8
  %4044 = call ptr @Builtins__structGet(ptr %997, ptr %4043)
  %4045 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4046 = call ptr @Builtins__structGet(ptr %997, ptr %4045)
  %4047 = load ptr, ptr @tag_Equals, align 8
  %4048 = call ptr @Builtins__structGet(ptr %997, ptr %4047)
  %4049 = load ptr, ptr @tag_TypeOf, align 8
  %4050 = call ptr @Builtins__structGet(ptr %997, ptr %4049)
  %4051 = load ptr, ptr @tag_IfElse, align 8
  %4052 = call ptr @Builtins__structGet(ptr %997, ptr %4051)
  %4053 = load ptr, ptr @tag_Equals, align 8
  %4054 = call ptr @Builtins__structGet(ptr %997, ptr %4053)
  %4055 = load ptr, ptr @tag_TypeOf, align 8
  %4056 = call ptr @Builtins__structGet(ptr %997, ptr %4055)
  %4057 = load ptr, ptr @tag_TagHasValue, align 8
  %4058 = call ptr @Builtins__structGet(ptr %997, ptr %4057)
  %4059 = load ptr, ptr @tag_TagWithoutValue, align 8
  %4060 = call ptr @Builtins__structGet(ptr %997, ptr %4059)
  %4061 = load ptr, ptr @tag_TagGetValue, align 8
  %4062 = call ptr @Builtins__structGet(ptr %997, ptr %4061)
  %4063 = load ptr, ptr @tag_Equals, align 8
  %4064 = call ptr @Builtins__structGet(ptr %997, ptr %4063)
  %4065 = load ptr, ptr @tag_TypeOf, align 8
  %4066 = call ptr @Builtins__structGet(ptr %997, ptr %4065)
  %4067 = load ptr, ptr @tag_Equals, align 8
  %4068 = call ptr @Builtins__structGet(ptr %997, ptr %4067)
  %4069 = load ptr, ptr @tag_Equals, align 8
  %4070 = call ptr @Builtins__structGet(ptr %997, ptr %4069)
  %4071 = load ptr, ptr @tag_Equals, align 8
  %4072 = call ptr @Builtins__structGet(ptr %997, ptr %4071)
  %4073 = load ptr, ptr @tag_TypeOf, align 8
  %4074 = call ptr @Builtins__structGet(ptr %997, ptr %4073)
  %4075 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4076 = call ptr @Builtins__structGet(ptr %997, ptr %4075)
  %4077 = load ptr, ptr @tag_Equals, align 8
  %4078 = call ptr @Builtins__structGet(ptr %997, ptr %4077)
  %4079 = load ptr, ptr @tag_TypeOf, align 8
  %4080 = call ptr @Builtins__structGet(ptr %997, ptr %4079)
  %4081 = load ptr, ptr @tag_Equals, align 8
  %4082 = call ptr @Builtins__structGet(ptr %997, ptr %4081)
  %4083 = load ptr, ptr @tag_Equals, align 8
  %4084 = call ptr @Builtins__structGet(ptr %997, ptr %4083)
  %4085 = load ptr, ptr @tag_Equals, align 8
  %4086 = call ptr @Builtins__structGet(ptr %997, ptr %4085)
  %4087 = load ptr, ptr @tag_TypeOf, align 8
  %4088 = call ptr @Builtins__structGet(ptr %997, ptr %4087)
  %4089 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4090 = call ptr @Builtins__structGet(ptr %997, ptr %4089)
  %4091 = load ptr, ptr @tag_Equals, align 8
  %4092 = call ptr @Builtins__structGet(ptr %997, ptr %4091)
  %4093 = load ptr, ptr @tag_TypeOf, align 8
  %4094 = call ptr @Builtins__structGet(ptr %997, ptr %4093)
  %4095 = load ptr, ptr @tag_IfElse, align 8
  %4096 = call ptr @Builtins__structGet(ptr %997, ptr %4095)
  %4097 = load ptr, ptr @tag_Equals, align 8
  %4098 = call ptr @Builtins__structGet(ptr %997, ptr %4097)
  %4099 = load ptr, ptr @tag_TypeOf, align 8
  %4100 = call ptr @Builtins__structGet(ptr %997, ptr %4099)
  %4101 = load ptr, ptr @tag_Equals, align 8
  %4102 = call ptr @Builtins__structGet(ptr %997, ptr %4101)
  %4103 = load ptr, ptr @tag_Equals, align 8
  %4104 = call ptr @Builtins__structGet(ptr %997, ptr %4103)
  %4105 = load ptr, ptr @tag_Equals, align 8
  %4106 = call ptr @Builtins__structGet(ptr %997, ptr %4105)
  %4107 = load ptr, ptr @tag_TypeOf, align 8
  %4108 = call ptr @Builtins__structGet(ptr %997, ptr %4107)
  %4109 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4110 = call ptr @Builtins__structGet(ptr %997, ptr %4109)
  %4111 = load ptr, ptr @tag_Equals, align 8
  %4112 = call ptr @Builtins__structGet(ptr %997, ptr %4111)
  %4113 = load ptr, ptr @tag_TypeOf, align 8
  %4114 = call ptr @Builtins__structGet(ptr %997, ptr %4113)
  %4115 = load ptr, ptr @tag_Equals, align 8
  %4116 = call ptr @Builtins__structGet(ptr %997, ptr %4115)
  %4117 = load ptr, ptr @tag_Equals, align 8
  %4118 = call ptr @Builtins__structGet(ptr %997, ptr %4117)
  %4119 = load ptr, ptr @tag_Equals, align 8
  %4120 = call ptr @Builtins__structGet(ptr %997, ptr %4119)
  %4121 = load ptr, ptr @tag_TypeOf, align 8
  %4122 = call ptr @Builtins__structGet(ptr %997, ptr %4121)
  %4123 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4124 = call ptr @Builtins__structGet(ptr %997, ptr %4123)
  %4125 = load ptr, ptr @tag_Equals, align 8
  %4126 = call ptr @Builtins__structGet(ptr %997, ptr %4125)
  %4127 = load ptr, ptr @tag_TypeOf, align 8
  %4128 = call ptr @Builtins__structGet(ptr %997, ptr %4127)
  %4129 = load ptr, ptr @tag_Equals, align 8
  %4130 = call ptr @Builtins__structGet(ptr %997, ptr %4129)
  %4131 = load ptr, ptr @tag_Equals, align 8
  %4132 = call ptr @Builtins__structGet(ptr %997, ptr %4131)
  %4133 = load ptr, ptr @tag_Equals, align 8
  %4134 = call ptr @Builtins__structGet(ptr %997, ptr %4133)
  %4135 = load ptr, ptr @tag_TypeOf, align 8
  %4136 = call ptr @Builtins__structGet(ptr %997, ptr %4135)
  %4137 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4138 = call ptr @Builtins__structGet(ptr %997, ptr %4137)
  %4139 = load ptr, ptr @tag_Equals, align 8
  %4140 = call ptr @Builtins__structGet(ptr %997, ptr %4139)
  %4141 = load ptr, ptr @tag_TypeOf, align 8
  %4142 = call ptr @Builtins__structGet(ptr %997, ptr %4141)
  %4143 = load ptr, ptr @tag_IfElse, align 8
  %4144 = call ptr @Builtins__structGet(ptr %997, ptr %4143)
  %4145 = load ptr, ptr @tag_Equals, align 8
  %4146 = call ptr @Builtins__structGet(ptr %997, ptr %4145)
  %4147 = load ptr, ptr @tag_TypeOf, align 8
  %4148 = call ptr @Builtins__structGet(ptr %997, ptr %4147)
  %4149 = load ptr, ptr @tag_TagHasValue, align 8
  %4150 = call ptr @Builtins__structGet(ptr %997, ptr %4149)
  %4151 = load ptr, ptr @tag_TagWithoutValue, align 8
  %4152 = call ptr @Builtins__structGet(ptr %997, ptr %4151)
  %4153 = load ptr, ptr @tag_TagGetValue, align 8
  %4154 = call ptr @Builtins__structGet(ptr %997, ptr %4153)
  %4155 = load ptr, ptr @tag_Equals, align 8
  %4156 = call ptr @Builtins__structGet(ptr %997, ptr %4155)
  %4157 = load ptr, ptr @tag_Equals, align 8
  %4158 = call ptr @Builtins__structGet(ptr %997, ptr %4157)
  %4159 = load ptr, ptr @tag_Equals, align 8
  %4160 = call ptr @Builtins__structGet(ptr %997, ptr %4159)
  %4161 = load ptr, ptr @tag_TypeOf, align 8
  %4162 = call ptr @Builtins__structGet(ptr %997, ptr %4161)
  %4163 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4164 = call ptr @Builtins__structGet(ptr %997, ptr %4163)
  %4165 = load ptr, ptr @tag_Equals, align 8
  %4166 = call ptr @Builtins__structGet(ptr %997, ptr %4165)
  %4167 = load ptr, ptr @tag_TypeOf, align 8
  %4168 = call ptr @Builtins__structGet(ptr %997, ptr %4167)
  %4169 = load ptr, ptr @tag_Equals, align 8
  %4170 = call ptr @Builtins__structGet(ptr %997, ptr %4169)
  %4171 = load ptr, ptr @tag_Equals, align 8
  %4172 = call ptr @Builtins__structGet(ptr %997, ptr %4171)
  %4173 = load ptr, ptr @tag_Equals, align 8
  %4174 = call ptr @Builtins__structGet(ptr %997, ptr %4173)
  %4175 = load ptr, ptr @tag_TypeOf, align 8
  %4176 = call ptr @Builtins__structGet(ptr %997, ptr %4175)
  %4177 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4178 = call ptr @Builtins__structGet(ptr %997, ptr %4177)
  %4179 = load ptr, ptr @tag_Equals, align 8
  %4180 = call ptr @Builtins__structGet(ptr %997, ptr %4179)
  %4181 = load ptr, ptr @tag_TypeOf, align 8
  %4182 = call ptr @Builtins__structGet(ptr %997, ptr %4181)
  %4183 = load ptr, ptr @tag_Equals, align 8
  %4184 = call ptr @Builtins__structGet(ptr %997, ptr %4183)
  %4185 = load ptr, ptr @tag_Equals, align 8
  %4186 = call ptr @Builtins__structGet(ptr %997, ptr %4185)
  %4187 = load ptr, ptr @tag_Equals, align 8
  %4188 = call ptr @Builtins__structGet(ptr %997, ptr %4187)
  %4189 = load ptr, ptr @tag_TypeOf, align 8
  %4190 = call ptr @Builtins__structGet(ptr %997, ptr %4189)
  %4191 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4192 = call ptr @Builtins__structGet(ptr %997, ptr %4191)
  %4193 = load ptr, ptr @tag_Equals, align 8
  %4194 = call ptr @Builtins__structGet(ptr %997, ptr %4193)
  %4195 = load ptr, ptr @tag_TypeOf, align 8
  %4196 = call ptr @Builtins__structGet(ptr %997, ptr %4195)
  %4197 = load ptr, ptr @tag_IfElse, align 8
  %4198 = call ptr @Builtins__structGet(ptr %997, ptr %4197)
  %4199 = load ptr, ptr @tag_Equals, align 8
  %4200 = call ptr @Builtins__structGet(ptr %997, ptr %4199)
  %4201 = load ptr, ptr @tag_Equals, align 8
  %4202 = call ptr @Builtins__structGet(ptr %997, ptr %4201)
  %4203 = load ptr, ptr @tag_Equals, align 8
  %4204 = call ptr @Builtins__structGet(ptr %997, ptr %4203)
  %4205 = load ptr, ptr @tag_Equals, align 8
  %4206 = call ptr @Builtins__structGet(ptr %997, ptr %4205)
  %4207 = load ptr, ptr @tag_TypeOf, align 8
  %4208 = call ptr @Builtins__structGet(ptr %997, ptr %4207)
  %4209 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4210 = call ptr @Builtins__structGet(ptr %997, ptr %4209)
  %4211 = load ptr, ptr @tag_Equals, align 8
  %4212 = call ptr @Builtins__structGet(ptr %997, ptr %4211)
  %4213 = load ptr, ptr @tag_TypeOf, align 8
  %4214 = call ptr @Builtins__structGet(ptr %997, ptr %4213)
  %4215 = load ptr, ptr @tag_Equals, align 8
  %4216 = call ptr @Builtins__structGet(ptr %997, ptr %4215)
  %4217 = load ptr, ptr @tag_Equals, align 8
  %4218 = call ptr @Builtins__structGet(ptr %997, ptr %4217)
  %4219 = load ptr, ptr @tag_Equals, align 8
  %4220 = call ptr @Builtins__structGet(ptr %997, ptr %4219)
  %4221 = load ptr, ptr @tag_TypeOf, align 8
  %4222 = call ptr @Builtins__structGet(ptr %997, ptr %4221)
  %4223 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4224 = call ptr @Builtins__structGet(ptr %997, ptr %4223)
  %4225 = load ptr, ptr @tag_Equals, align 8
  %4226 = call ptr @Builtins__structGet(ptr %997, ptr %4225)
  %4227 = load ptr, ptr @tag_TypeOf, align 8
  %4228 = call ptr @Builtins__structGet(ptr %997, ptr %4227)
  %4229 = load ptr, ptr @tag_Equals, align 8
  %4230 = call ptr @Builtins__structGet(ptr %997, ptr %4229)
  %4231 = load ptr, ptr @tag_Equals, align 8
  %4232 = call ptr @Builtins__structGet(ptr %997, ptr %4231)
  %4233 = load ptr, ptr @tag_Equals, align 8
  %4234 = call ptr @Builtins__structGet(ptr %997, ptr %4233)
  %4235 = load ptr, ptr @tag_TypeOf, align 8
  %4236 = call ptr @Builtins__structGet(ptr %997, ptr %4235)
  %4237 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4238 = call ptr @Builtins__structGet(ptr %997, ptr %4237)
  %4239 = load ptr, ptr @tag_Equals, align 8
  %4240 = call ptr @Builtins__structGet(ptr %997, ptr %4239)
  %4241 = load ptr, ptr @tag_TypeOf, align 8
  %4242 = call ptr @Builtins__structGet(ptr %997, ptr %4241)
  %4243 = load ptr, ptr @tag_Equals, align 8
  %4244 = call ptr @Builtins__structGet(ptr %997, ptr %4243)
  %4245 = load ptr, ptr @tag_Equals, align 8
  %4246 = call ptr @Builtins__structGet(ptr %997, ptr %4245)
  %4247 = load ptr, ptr @tag_Equals, align 8
  %4248 = call ptr @Builtins__structGet(ptr %997, ptr %4247)
  %4249 = load ptr, ptr @tag_TypeOf, align 8
  %4250 = call ptr @Builtins__structGet(ptr %997, ptr %4249)
  %4251 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4252 = call ptr @Builtins__structGet(ptr %997, ptr %4251)
  %4253 = load ptr, ptr @tag_Equals, align 8
  %4254 = call ptr @Builtins__structGet(ptr %997, ptr %4253)
  %4255 = load ptr, ptr @tag_TypeOf, align 8
  %4256 = call ptr @Builtins__structGet(ptr %997, ptr %4255)
  %4257 = load ptr, ptr @tag_IfElse, align 8
  %4258 = call ptr @Builtins__structGet(ptr %997, ptr %4257)
  %4259 = load ptr, ptr @tag_Equals, align 8
  %4260 = call ptr @Builtins__structGet(ptr %997, ptr %4259)
  %4261 = load ptr, ptr @tag_Equals, align 8
  %4262 = call ptr @Builtins__structGet(ptr %997, ptr %4261)
  %4263 = load ptr, ptr @tag_Equals, align 8
  %4264 = call ptr @Builtins__structGet(ptr %997, ptr %4263)
  %4265 = load ptr, ptr @tag_TypeOf, align 8
  %4266 = call ptr @Builtins__structGet(ptr %997, ptr %4265)
  %4267 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4268 = call ptr @Builtins__structGet(ptr %997, ptr %4267)
  %4269 = load ptr, ptr @tag_Equals, align 8
  %4270 = call ptr @Builtins__structGet(ptr %997, ptr %4269)
  %4271 = load ptr, ptr @tag_TypeOf, align 8
  %4272 = call ptr @Builtins__structGet(ptr %997, ptr %4271)
  %4273 = load ptr, ptr @tag_Equals, align 8
  %4274 = call ptr @Builtins__structGet(ptr %997, ptr %4273)
  %4275 = load ptr, ptr @tag_Equals, align 8
  %4276 = call ptr @Builtins__structGet(ptr %997, ptr %4275)
  %4277 = load ptr, ptr @tag_Equals, align 8
  %4278 = call ptr @Builtins__structGet(ptr %997, ptr %4277)
  %4279 = load ptr, ptr @tag_TypeOf, align 8
  %4280 = call ptr @Builtins__structGet(ptr %997, ptr %4279)
  %4281 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4282 = call ptr @Builtins__structGet(ptr %997, ptr %4281)
  %4283 = load ptr, ptr @tag_Equals, align 8
  %4284 = call ptr @Builtins__structGet(ptr %997, ptr %4283)
  %4285 = load ptr, ptr @tag_TypeOf, align 8
  %4286 = call ptr @Builtins__structGet(ptr %997, ptr %4285)
  %4287 = load ptr, ptr @tag_IfElse, align 8
  %4288 = call ptr @Builtins__structGet(ptr %997, ptr %4287)
  %4289 = load ptr, ptr @tag_Equals, align 8
  %4290 = call ptr @Builtins__structGet(ptr %997, ptr %4289)
  %4291 = load ptr, ptr @tag_Equals, align 8
  %4292 = call ptr @Builtins__structGet(ptr %997, ptr %4291)
  %4293 = load ptr, ptr @tag_TypeOf, align 8
  %4294 = call ptr @Builtins__structGet(ptr %997, ptr %4293)
  %4295 = load ptr, ptr @tag_IntAdd, align 8
  %4296 = call ptr @Builtins__structGet(ptr %997, ptr %4295)
  %4297 = load ptr, ptr @tag_IntSubtract, align 8
  %4298 = call ptr @Builtins__structGet(ptr %997, ptr %4297)
  %4299 = load ptr, ptr @tag_IntMultiply, align 8
  %4300 = call ptr @Builtins__structGet(ptr %997, ptr %4299)
  %4301 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %4302 = call ptr @Builtins__structGet(ptr %997, ptr %4301)
  %4303 = load ptr, ptr @tag_IntRemainder, align 8
  %4304 = call ptr @Builtins__structGet(ptr %997, ptr %4303)
  %4305 = load ptr, ptr @tag_IntModulo, align 8
  %4306 = call ptr @Builtins__structGet(ptr %997, ptr %4305)
  %4307 = load ptr, ptr @tag_IntShiftLeft, align 8
  %4308 = call ptr @Builtins__structGet(ptr %997, ptr %4307)
  %4309 = load ptr, ptr @tag_IntShiftRight, align 8
  %4310 = call ptr @Builtins__structGet(ptr %997, ptr %4309)
  %4311 = load ptr, ptr @tag_IntBitLength, align 8
  %4312 = call ptr @Builtins__structGet(ptr %997, ptr %4311)
  %4313 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %4314 = call ptr @Builtins__structGet(ptr %997, ptr %4313)
  %4315 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %4316 = call ptr @Builtins__structGet(ptr %997, ptr %4315)
  %4317 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %4318 = call ptr @Builtins__structGet(ptr %997, ptr %4317)
  %4319 = load ptr, ptr @tag_IntParse, align 8
  %4320 = call ptr @Builtins__structGet(ptr %997, ptr %4319)
  %4321 = load ptr, ptr @tag_Equals, align 8
  %4322 = call ptr @Builtins__structGet(ptr %997, ptr %4321)
  %4323 = load ptr, ptr @tag_Equals, align 8
  %4324 = call ptr @Builtins__structGet(ptr %997, ptr %4323)
  %4325 = load ptr, ptr @tag_Equals, align 8
  %4326 = call ptr @Builtins__structGet(ptr %997, ptr %4325)
  %4327 = load ptr, ptr @tag_TypeOf, align 8
  %4328 = call ptr @Builtins__structGet(ptr %997, ptr %4327)
  %4329 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4330 = call ptr @Builtins__structGet(ptr %997, ptr %4329)
  %4331 = load ptr, ptr @tag_Equals, align 8
  %4332 = call ptr @Builtins__structGet(ptr %997, ptr %4331)
  %4333 = load ptr, ptr @tag_TypeOf, align 8
  %4334 = call ptr @Builtins__structGet(ptr %997, ptr %4333)
  %4335 = load ptr, ptr @tag_Equals, align 8
  %4336 = call ptr @Builtins__structGet(ptr %997, ptr %4335)
  %4337 = load ptr, ptr @tag_Equals, align 8
  %4338 = call ptr @Builtins__structGet(ptr %997, ptr %4337)
  %4339 = load ptr, ptr @tag_Equals, align 8
  %4340 = call ptr @Builtins__structGet(ptr %997, ptr %4339)
  %4341 = load ptr, ptr @tag_TypeOf, align 8
  %4342 = call ptr @Builtins__structGet(ptr %997, ptr %4341)
  %4343 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4344 = call ptr @Builtins__structGet(ptr %997, ptr %4343)
  %4345 = load ptr, ptr @tag_Equals, align 8
  %4346 = call ptr @Builtins__structGet(ptr %997, ptr %4345)
  %4347 = load ptr, ptr @tag_TypeOf, align 8
  %4348 = call ptr @Builtins__structGet(ptr %997, ptr %4347)
  %4349 = load ptr, ptr @tag_Equals, align 8
  %4350 = call ptr @Builtins__structGet(ptr %997, ptr %4349)
  %4351 = load ptr, ptr @tag_Equals, align 8
  %4352 = call ptr @Builtins__structGet(ptr %997, ptr %4351)
  %4353 = load ptr, ptr @tag_Equals, align 8
  %4354 = call ptr @Builtins__structGet(ptr %997, ptr %4353)
  %4355 = load ptr, ptr @tag_TypeOf, align 8
  %4356 = call ptr @Builtins__structGet(ptr %997, ptr %4355)
  %4357 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4358 = call ptr @Builtins__structGet(ptr %997, ptr %4357)
  %4359 = load ptr, ptr @tag_Equals, align 8
  %4360 = call ptr @Builtins__structGet(ptr %997, ptr %4359)
  %4361 = load ptr, ptr @tag_TypeOf, align 8
  %4362 = call ptr @Builtins__structGet(ptr %997, ptr %4361)
  %4363 = load ptr, ptr @tag_IfElse, align 8
  %4364 = call ptr @Builtins__structGet(ptr %997, ptr %4363)
  %4365 = load ptr, ptr @tag_Equals, align 8
  %4366 = call ptr @Builtins__structGet(ptr %997, ptr %4365)
  %4367 = load ptr, ptr @tag_Equals, align 8
  %4368 = call ptr @Builtins__structGet(ptr %997, ptr %4367)
  %4369 = load ptr, ptr @tag_Equals, align 8
  %4370 = call ptr @Builtins__structGet(ptr %997, ptr %4369)
  %4371 = load ptr, ptr @tag_TypeOf, align 8
  %4372 = call ptr @Builtins__structGet(ptr %997, ptr %4371)
  %4373 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4374 = call ptr @Builtins__structGet(ptr %997, ptr %4373)
  %4375 = load ptr, ptr @tag_Equals, align 8
  %4376 = call ptr @Builtins__structGet(ptr %997, ptr %4375)
  %4377 = load ptr, ptr @tag_Equals, align 8
  %4378 = call ptr @Builtins__structGet(ptr %997, ptr %4377)
  %4379 = load ptr, ptr @tag_Equals, align 8
  %4380 = call ptr @Builtins__structGet(ptr %997, ptr %4379)
  %4381 = load ptr, ptr @tag_TypeOf, align 8
  %4382 = call ptr @Builtins__structGet(ptr %997, ptr %4381)
  %4383 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4384 = call ptr @Builtins__structGet(ptr %997, ptr %4383)
  %4385 = load ptr, ptr @tag_Equals, align 8
  %4386 = call ptr @Builtins__structGet(ptr %997, ptr %4385)
  %4387 = load ptr, ptr @tag_TypeOf, align 8
  %4388 = call ptr @Builtins__structGet(ptr %997, ptr %4387)
  %4389 = load ptr, ptr @tag_Equals, align 8
  %4390 = call ptr @Builtins__structGet(ptr %997, ptr %4389)
  %4391 = load ptr, ptr @tag_Equals, align 8
  %4392 = call ptr @Builtins__structGet(ptr %997, ptr %4391)
  %4393 = load ptr, ptr @tag_Equals, align 8
  %4394 = call ptr @Builtins__structGet(ptr %997, ptr %4393)
  %4395 = load ptr, ptr @tag_TypeOf, align 8
  %4396 = call ptr @Builtins__structGet(ptr %997, ptr %4395)
  %4397 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4398 = call ptr @Builtins__structGet(ptr %997, ptr %4397)
  %4399 = load ptr, ptr @tag_Equals, align 8
  %4400 = call ptr @Builtins__structGet(ptr %997, ptr %4399)
  %4401 = load ptr, ptr @tag_TypeOf, align 8
  %4402 = call ptr @Builtins__structGet(ptr %997, ptr %4401)
  %4403 = load ptr, ptr @tag_Equals, align 8
  %4404 = call ptr @Builtins__structGet(ptr %997, ptr %4403)
  %4405 = load ptr, ptr @tag_Equals, align 8
  %4406 = call ptr @Builtins__structGet(ptr %997, ptr %4405)
  %4407 = load ptr, ptr @tag_Equals, align 8
  %4408 = call ptr @Builtins__structGet(ptr %997, ptr %4407)
  %4409 = load ptr, ptr @tag_TypeOf, align 8
  %4410 = call ptr @Builtins__structGet(ptr %997, ptr %4409)
  %4411 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4412 = call ptr @Builtins__structGet(ptr %997, ptr %4411)
  %4413 = load ptr, ptr @tag_Equals, align 8
  %4414 = call ptr @Builtins__structGet(ptr %997, ptr %4413)
  %4415 = load ptr, ptr @tag_TypeOf, align 8
  %4416 = call ptr @Builtins__structGet(ptr %997, ptr %4415)
  %4417 = load ptr, ptr @tag_Equals, align 8
  %4418 = call ptr @Builtins__structGet(ptr %997, ptr %4417)
  %4419 = load ptr, ptr @tag_Equals, align 8
  %4420 = call ptr @Builtins__structGet(ptr %997, ptr %4419)
  %4421 = load ptr, ptr @tag_Equals, align 8
  %4422 = call ptr @Builtins__structGet(ptr %997, ptr %4421)
  %4423 = load ptr, ptr @tag_TypeOf, align 8
  %4424 = call ptr @Builtins__structGet(ptr %997, ptr %4423)
  %4425 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4426 = call ptr @Builtins__structGet(ptr %997, ptr %4425)
  %4427 = load ptr, ptr @tag_Equals, align 8
  %4428 = call ptr @Builtins__structGet(ptr %997, ptr %4427)
  %4429 = load ptr, ptr @tag_TypeOf, align 8
  %4430 = call ptr @Builtins__structGet(ptr %997, ptr %4429)
  %4431 = load ptr, ptr @tag_IfElse, align 8
  %4432 = call ptr @Builtins__structGet(ptr %997, ptr %4431)
  %4433 = load ptr, ptr @tag_Equals, align 8
  %4434 = call ptr @Builtins__structGet(ptr %997, ptr %4433)
  %4435 = load ptr, ptr @tag_Equals, align 8
  %4436 = call ptr @Builtins__structGet(ptr %997, ptr %4435)
  %4437 = load ptr, ptr @tag_Equals, align 8
  %4438 = call ptr @Builtins__structGet(ptr %997, ptr %4437)
  %4439 = load ptr, ptr @tag_TypeOf, align 8
  %4440 = call ptr @Builtins__structGet(ptr %997, ptr %4439)
  %4441 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4442 = call ptr @Builtins__structGet(ptr %997, ptr %4441)
  %4443 = load ptr, ptr @tag_Equals, align 8
  %4444 = call ptr @Builtins__structGet(ptr %997, ptr %4443)
  %4445 = load ptr, ptr @tag_TypeOf, align 8
  %4446 = call ptr @Builtins__structGet(ptr %997, ptr %4445)
  %4447 = load ptr, ptr @tag_Equals, align 8
  %4448 = call ptr @Builtins__structGet(ptr %997, ptr %4447)
  %4449 = load ptr, ptr @tag_Equals, align 8
  %4450 = call ptr @Builtins__structGet(ptr %997, ptr %4449)
  %4451 = load ptr, ptr @tag_Equals, align 8
  %4452 = call ptr @Builtins__structGet(ptr %997, ptr %4451)
  %4453 = load ptr, ptr @tag_TypeOf, align 8
  %4454 = call ptr @Builtins__structGet(ptr %997, ptr %4453)
  %4455 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4456 = call ptr @Builtins__structGet(ptr %997, ptr %4455)
  %4457 = load ptr, ptr @tag_Equals, align 8
  %4458 = call ptr @Builtins__structGet(ptr %997, ptr %4457)
  %4459 = load ptr, ptr @tag_TypeOf, align 8
  %4460 = call ptr @Builtins__structGet(ptr %997, ptr %4459)
  %4461 = load ptr, ptr @tag_IfElse, align 8
  %4462 = call ptr @Builtins__structGet(ptr %997, ptr %4461)
  %4463 = load ptr, ptr @tag_Equals, align 8
  %4464 = call ptr @Builtins__structGet(ptr %997, ptr %4463)
  %4465 = load ptr, ptr @tag_Equals, align 8
  %4466 = call ptr @Builtins__structGet(ptr %997, ptr %4465)
  %4467 = load ptr, ptr @tag_TypeOf, align 8
  %4468 = call ptr @Builtins__structGet(ptr %997, ptr %4467)
  %4469 = load ptr, ptr @tag_IntAdd, align 8
  %4470 = call ptr @Builtins__structGet(ptr %997, ptr %4469)
  %4471 = load ptr, ptr @tag_IntSubtract, align 8
  %4472 = call ptr @Builtins__structGet(ptr %997, ptr %4471)
  %4473 = load ptr, ptr @tag_IntMultiply, align 8
  %4474 = call ptr @Builtins__structGet(ptr %997, ptr %4473)
  %4475 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %4476 = call ptr @Builtins__structGet(ptr %997, ptr %4475)
  %4477 = load ptr, ptr @tag_IntRemainder, align 8
  %4478 = call ptr @Builtins__structGet(ptr %997, ptr %4477)
  %4479 = load ptr, ptr @tag_IntModulo, align 8
  %4480 = call ptr @Builtins__structGet(ptr %997, ptr %4479)
  %4481 = load ptr, ptr @tag_IntShiftLeft, align 8
  %4482 = call ptr @Builtins__structGet(ptr %997, ptr %4481)
  %4483 = load ptr, ptr @tag_IntShiftRight, align 8
  %4484 = call ptr @Builtins__structGet(ptr %997, ptr %4483)
  %4485 = load ptr, ptr @tag_IntBitLength, align 8
  %4486 = call ptr @Builtins__structGet(ptr %997, ptr %4485)
  %4487 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %4488 = call ptr @Builtins__structGet(ptr %997, ptr %4487)
  %4489 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %4490 = call ptr @Builtins__structGet(ptr %997, ptr %4489)
  %4491 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %4492 = call ptr @Builtins__structGet(ptr %997, ptr %4491)
  %4493 = load ptr, ptr @tag_IntParse, align 8
  %4494 = call ptr @Builtins__structGet(ptr %997, ptr %4493)
  %4495 = load ptr, ptr @tag_Equals, align 8
  %4496 = call ptr @Builtins__structGet(ptr %997, ptr %4495)
  %4497 = load ptr, ptr @tag_Equals, align 8
  %4498 = call ptr @Builtins__structGet(ptr %997, ptr %4497)
  %4499 = load ptr, ptr @tag_Equals, align 8
  %4500 = call ptr @Builtins__structGet(ptr %997, ptr %4499)
  %4501 = load ptr, ptr @tag_TypeOf, align 8
  %4502 = call ptr @Builtins__structGet(ptr %997, ptr %4501)
  %4503 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4504 = call ptr @Builtins__structGet(ptr %997, ptr %4503)
  %4505 = load ptr, ptr @tag_Equals, align 8
  %4506 = call ptr @Builtins__structGet(ptr %997, ptr %4505)
  %4507 = load ptr, ptr @tag_TypeOf, align 8
  %4508 = call ptr @Builtins__structGet(ptr %997, ptr %4507)
  %4509 = load ptr, ptr @tag_Equals, align 8
  %4510 = call ptr @Builtins__structGet(ptr %997, ptr %4509)
  %4511 = load ptr, ptr @tag_Equals, align 8
  %4512 = call ptr @Builtins__structGet(ptr %997, ptr %4511)
  %4513 = load ptr, ptr @tag_Equals, align 8
  %4514 = call ptr @Builtins__structGet(ptr %997, ptr %4513)
  %4515 = load ptr, ptr @tag_TypeOf, align 8
  %4516 = call ptr @Builtins__structGet(ptr %997, ptr %4515)
  %4517 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4518 = call ptr @Builtins__structGet(ptr %997, ptr %4517)
  %4519 = load ptr, ptr @tag_Equals, align 8
  %4520 = call ptr @Builtins__structGet(ptr %997, ptr %4519)
  %4521 = load ptr, ptr @tag_TypeOf, align 8
  %4522 = call ptr @Builtins__structGet(ptr %997, ptr %4521)
  %4523 = load ptr, ptr @tag_Equals, align 8
  %4524 = call ptr @Builtins__structGet(ptr %997, ptr %4523)
  %4525 = load ptr, ptr @tag_Equals, align 8
  %4526 = call ptr @Builtins__structGet(ptr %997, ptr %4525)
  %4527 = load ptr, ptr @tag_Equals, align 8
  %4528 = call ptr @Builtins__structGet(ptr %997, ptr %4527)
  %4529 = load ptr, ptr @tag_TypeOf, align 8
  %4530 = call ptr @Builtins__structGet(ptr %997, ptr %4529)
  %4531 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4532 = call ptr @Builtins__structGet(ptr %997, ptr %4531)
  %4533 = load ptr, ptr @tag_Equals, align 8
  %4534 = call ptr @Builtins__structGet(ptr %997, ptr %4533)
  %4535 = load ptr, ptr @tag_TypeOf, align 8
  %4536 = call ptr @Builtins__structGet(ptr %997, ptr %4535)
  %4537 = load ptr, ptr @tag_IfElse, align 8
  %4538 = call ptr @Builtins__structGet(ptr %997, ptr %4537)
  %4539 = load ptr, ptr @tag_Equals, align 8
  %4540 = call ptr @Builtins__structGet(ptr %997, ptr %4539)
  %4541 = load ptr, ptr @tag_Equals, align 8
  %4542 = call ptr @Builtins__structGet(ptr %997, ptr %4541)
  %4543 = load ptr, ptr @tag_Equals, align 8
  %4544 = call ptr @Builtins__structGet(ptr %997, ptr %4543)
  %4545 = load ptr, ptr @tag_TypeOf, align 8
  %4546 = call ptr @Builtins__structGet(ptr %997, ptr %4545)
  %4547 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4548 = call ptr @Builtins__structGet(ptr %997, ptr %4547)
  %4549 = load ptr, ptr @tag_Equals, align 8
  %4550 = call ptr @Builtins__structGet(ptr %997, ptr %4549)
  %4551 = load ptr, ptr @tag_Equals, align 8
  %4552 = call ptr @Builtins__structGet(ptr %997, ptr %4551)
  %4553 = load ptr, ptr @tag_Equals, align 8
  %4554 = call ptr @Builtins__structGet(ptr %997, ptr %4553)
  %4555 = load ptr, ptr @tag_TypeOf, align 8
  %4556 = call ptr @Builtins__structGet(ptr %997, ptr %4555)
  %4557 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4558 = call ptr @Builtins__structGet(ptr %997, ptr %4557)
  %4559 = load ptr, ptr @tag_Equals, align 8
  %4560 = call ptr @Builtins__structGet(ptr %997, ptr %4559)
  %4561 = load ptr, ptr @tag_TypeOf, align 8
  %4562 = call ptr @Builtins__structGet(ptr %997, ptr %4561)
  %4563 = load ptr, ptr @tag_Equals, align 8
  %4564 = call ptr @Builtins__structGet(ptr %997, ptr %4563)
  %4565 = load ptr, ptr @tag_Equals, align 8
  %4566 = call ptr @Builtins__structGet(ptr %997, ptr %4565)
  %4567 = load ptr, ptr @tag_Equals, align 8
  %4568 = call ptr @Builtins__structGet(ptr %997, ptr %4567)
  %4569 = load ptr, ptr @tag_TypeOf, align 8
  %4570 = call ptr @Builtins__structGet(ptr %997, ptr %4569)
  %4571 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4572 = call ptr @Builtins__structGet(ptr %997, ptr %4571)
  %4573 = load ptr, ptr @tag_Equals, align 8
  %4574 = call ptr @Builtins__structGet(ptr %997, ptr %4573)
  %4575 = load ptr, ptr @tag_TypeOf, align 8
  %4576 = call ptr @Builtins__structGet(ptr %997, ptr %4575)
  %4577 = load ptr, ptr @tag_IfElse, align 8
  %4578 = call ptr @Builtins__structGet(ptr %997, ptr %4577)
  %4579 = load ptr, ptr @tag_Equals, align 8
  %4580 = call ptr @Builtins__structGet(ptr %997, ptr %4579)
  %4581 = load ptr, ptr @tag_TypeOf, align 8
  %4582 = call ptr @Builtins__structGet(ptr %997, ptr %4581)
  %4583 = load ptr, ptr @tag_Equals, align 8
  %4584 = call ptr @Builtins__structGet(ptr %997, ptr %4583)
  %4585 = load ptr, ptr @tag_Equals, align 8
  %4586 = call ptr @Builtins__structGet(ptr %997, ptr %4585)
  %4587 = load ptr, ptr @tag_Equals, align 8
  %4588 = call ptr @Builtins__structGet(ptr %997, ptr %4587)
  %4589 = load ptr, ptr @tag_TypeOf, align 8
  %4590 = call ptr @Builtins__structGet(ptr %997, ptr %4589)
  %4591 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4592 = call ptr @Builtins__structGet(ptr %997, ptr %4591)
  %4593 = load ptr, ptr @tag_Equals, align 8
  %4594 = call ptr @Builtins__structGet(ptr %997, ptr %4593)
  %4595 = load ptr, ptr @tag_TypeOf, align 8
  %4596 = call ptr @Builtins__structGet(ptr %997, ptr %4595)
  %4597 = load ptr, ptr @tag_Equals, align 8
  %4598 = call ptr @Builtins__structGet(ptr %997, ptr %4597)
  %4599 = load ptr, ptr @tag_Equals, align 8
  %4600 = call ptr @Builtins__structGet(ptr %997, ptr %4599)
  %4601 = load ptr, ptr @tag_Equals, align 8
  %4602 = call ptr @Builtins__structGet(ptr %997, ptr %4601)
  %4603 = load ptr, ptr @tag_TypeOf, align 8
  %4604 = call ptr @Builtins__structGet(ptr %997, ptr %4603)
  %4605 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4606 = call ptr @Builtins__structGet(ptr %997, ptr %4605)
  %4607 = load ptr, ptr @tag_Equals, align 8
  %4608 = call ptr @Builtins__structGet(ptr %997, ptr %4607)
  %4609 = load ptr, ptr @tag_TypeOf, align 8
  %4610 = call ptr @Builtins__structGet(ptr %997, ptr %4609)
  %4611 = load ptr, ptr @tag_Equals, align 8
  %4612 = call ptr @Builtins__structGet(ptr %997, ptr %4611)
  %4613 = load ptr, ptr @tag_Equals, align 8
  %4614 = call ptr @Builtins__structGet(ptr %997, ptr %4613)
  %4615 = load ptr, ptr @tag_Equals, align 8
  %4616 = call ptr @Builtins__structGet(ptr %997, ptr %4615)
  %4617 = load ptr, ptr @tag_TypeOf, align 8
  %4618 = call ptr @Builtins__structGet(ptr %997, ptr %4617)
  %4619 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4620 = call ptr @Builtins__structGet(ptr %997, ptr %4619)
  %4621 = load ptr, ptr @tag_Equals, align 8
  %4622 = call ptr @Builtins__structGet(ptr %997, ptr %4621)
  %4623 = load ptr, ptr @tag_TypeOf, align 8
  %4624 = call ptr @Builtins__structGet(ptr %997, ptr %4623)
  %4625 = load ptr, ptr @tag_IfElse, align 8
  %4626 = call ptr @Builtins__structGet(ptr %997, ptr %4625)
  %4627 = load ptr, ptr @tag_Equals, align 8
  %4628 = call ptr @Builtins__structGet(ptr %997, ptr %4627)
  %4629 = load ptr, ptr @tag_TypeOf, align 8
  %4630 = call ptr @Builtins__structGet(ptr %997, ptr %4629)
  %4631 = load ptr, ptr @tag_TagHasValue, align 8
  %4632 = call ptr @Builtins__structGet(ptr %997, ptr %4631)
  %4633 = load ptr, ptr @tag_TagWithoutValue, align 8
  %4634 = call ptr @Builtins__structGet(ptr %997, ptr %4633)
  %4635 = load ptr, ptr @tag_TagGetValue, align 8
  %4636 = call ptr @Builtins__structGet(ptr %997, ptr %4635)
  %4637 = load ptr, ptr @tag_Equals, align 8
  %4638 = call ptr @Builtins__structGet(ptr %997, ptr %4637)
  %4639 = load ptr, ptr @tag_TypeOf, align 8
  %4640 = call ptr @Builtins__structGet(ptr %997, ptr %4639)
  %4641 = load ptr, ptr @tag_Equals, align 8
  %4642 = call ptr @Builtins__structGet(ptr %997, ptr %4641)
  %4643 = load ptr, ptr @tag_TypeOf, align 8
  %4644 = call ptr @Builtins__structGet(ptr %997, ptr %4643)
  %4645 = load ptr, ptr @tag_ListLength, align 8
  %4646 = call ptr @Builtins__structGet(ptr %997, ptr %4645)
  %4647 = load ptr, ptr @tag_ListGet, align 8
  %4648 = call ptr @Builtins__structGet(ptr %997, ptr %4647)
  %4649 = load ptr, ptr @tag_ListInsert, align 8
  %4650 = call ptr @Builtins__structGet(ptr %997, ptr %4649)
  %4651 = load ptr, ptr @tag_ListReplace, align 8
  %4652 = call ptr @Builtins__structGet(ptr %997, ptr %4651)
  %4653 = load ptr, ptr @tag_ListRemoveAt, align 8
  %4654 = call ptr @Builtins__structGet(ptr %997, ptr %4653)
  %4655 = load ptr, ptr @tag_ListFilled, align 8
  %4656 = call ptr @Builtins__structGet(ptr %997, ptr %4655)
  %4657 = load ptr, ptr @tag_Equals, align 8
  %4658 = call ptr @Builtins__structGet(ptr %997, ptr %4657)
  %4659 = load ptr, ptr @tag_Equals, align 8
  %4660 = call ptr @Builtins__structGet(ptr %997, ptr %4659)
  %4661 = load ptr, ptr @tag_Equals, align 8
  %4662 = call ptr @Builtins__structGet(ptr %997, ptr %4661)
  %4663 = load ptr, ptr @tag_TypeOf, align 8
  %4664 = call ptr @Builtins__structGet(ptr %997, ptr %4663)
  %4665 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4666 = call ptr @Builtins__structGet(ptr %997, ptr %4665)
  %4667 = load ptr, ptr @tag_Equals, align 8
  %4668 = call ptr @Builtins__structGet(ptr %997, ptr %4667)
  %4669 = load ptr, ptr @tag_TypeOf, align 8
  %4670 = call ptr @Builtins__structGet(ptr %997, ptr %4669)
  %4671 = load ptr, ptr @tag_Equals, align 8
  %4672 = call ptr @Builtins__structGet(ptr %997, ptr %4671)
  %4673 = load ptr, ptr @tag_Equals, align 8
  %4674 = call ptr @Builtins__structGet(ptr %997, ptr %4673)
  %4675 = load ptr, ptr @tag_Equals, align 8
  %4676 = call ptr @Builtins__structGet(ptr %997, ptr %4675)
  %4677 = load ptr, ptr @tag_TypeOf, align 8
  %4678 = call ptr @Builtins__structGet(ptr %997, ptr %4677)
  %4679 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4680 = call ptr @Builtins__structGet(ptr %997, ptr %4679)
  %4681 = load ptr, ptr @tag_Equals, align 8
  %4682 = call ptr @Builtins__structGet(ptr %997, ptr %4681)
  %4683 = load ptr, ptr @tag_TypeOf, align 8
  %4684 = call ptr @Builtins__structGet(ptr %997, ptr %4683)
  %4685 = load ptr, ptr @tag_IfElse, align 8
  %4686 = call ptr @Builtins__structGet(ptr %997, ptr %4685)
  %4687 = load ptr, ptr @tag_Equals, align 8
  %4688 = call ptr @Builtins__structGet(ptr %997, ptr %4687)
  %4689 = load ptr, ptr @tag_TypeOf, align 8
  %4690 = call ptr @Builtins__structGet(ptr %997, ptr %4689)
  %4691 = load ptr, ptr @tag_Equals, align 8
  %4692 = call ptr @Builtins__structGet(ptr %997, ptr %4691)
  %4693 = load ptr, ptr @tag_TypeOf, align 8
  %4694 = call ptr @Builtins__structGet(ptr %997, ptr %4693)
  %4695 = load ptr, ptr @tag_TextFromUtf8, align 8
  %4696 = call ptr @Builtins__structGet(ptr %997, ptr %4695)
  %4697 = load ptr, ptr @tag_TextIsEmpty, align 8
  %4698 = call ptr @Builtins__structGet(ptr %997, ptr %4697)
  %4699 = load ptr, ptr @tag_TextLength, align 8
  %4700 = call ptr @Builtins__structGet(ptr %997, ptr %4699)
  %4701 = load ptr, ptr @tag_TextCharacters, align 8
  %4702 = call ptr @Builtins__structGet(ptr %997, ptr %4701)
  %4703 = load ptr, ptr @tag_TextGetRange, align 8
  %4704 = call ptr @Builtins__structGet(ptr %997, ptr %4703)
  %4705 = load ptr, ptr @tag_TextConcatenate, align 8
  %4706 = call ptr @Builtins__structGet(ptr %997, ptr %4705)
  %4707 = load ptr, ptr @tag_TextStartsWith, align 8
  %4708 = call ptr @Builtins__structGet(ptr %997, ptr %4707)
  %4709 = load ptr, ptr @tag_TextEndsWith, align 8
  %4710 = call ptr @Builtins__structGet(ptr %997, ptr %4709)
  %4711 = load ptr, ptr @tag_TextContains, align 8
  %4712 = call ptr @Builtins__structGet(ptr %997, ptr %4711)
  %4713 = load ptr, ptr @tag_TextTrimStart, align 8
  %4714 = call ptr @Builtins__structGet(ptr %997, ptr %4713)
  %4715 = load ptr, ptr @tag_TextTrimEnd, align 8
  %4716 = call ptr @Builtins__structGet(ptr %997, ptr %4715)
  %4717 = load ptr, ptr @tag_Equals, align 8
  %4718 = call ptr @Builtins__structGet(ptr %997, ptr %4717)
  %4719 = load ptr, ptr @tag_Equals, align 8
  %4720 = call ptr @Builtins__structGet(ptr %997, ptr %4719)
  %4721 = load ptr, ptr @tag_Equals, align 8
  %4722 = call ptr @Builtins__structGet(ptr %997, ptr %4721)
  %4723 = load ptr, ptr @tag_TypeOf, align 8
  %4724 = call ptr @Builtins__structGet(ptr %997, ptr %4723)
  %4725 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4726 = call ptr @Builtins__structGet(ptr %997, ptr %4725)
  %4727 = load ptr, ptr @tag_Equals, align 8
  %4728 = call ptr @Builtins__structGet(ptr %997, ptr %4727)
  %4729 = load ptr, ptr @tag_TypeOf, align 8
  %4730 = call ptr @Builtins__structGet(ptr %997, ptr %4729)
  %4731 = load ptr, ptr @tag_Equals, align 8
  %4732 = call ptr @Builtins__structGet(ptr %997, ptr %4731)
  %4733 = load ptr, ptr @tag_Equals, align 8
  %4734 = call ptr @Builtins__structGet(ptr %997, ptr %4733)
  %4735 = load ptr, ptr @tag_Equals, align 8
  %4736 = call ptr @Builtins__structGet(ptr %997, ptr %4735)
  %4737 = load ptr, ptr @tag_TypeOf, align 8
  %4738 = call ptr @Builtins__structGet(ptr %997, ptr %4737)
  %4739 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4740 = call ptr @Builtins__structGet(ptr %997, ptr %4739)
  %4741 = load ptr, ptr @tag_Equals, align 8
  %4742 = call ptr @Builtins__structGet(ptr %997, ptr %4741)
  %4743 = load ptr, ptr @tag_TypeOf, align 8
  %4744 = call ptr @Builtins__structGet(ptr %997, ptr %4743)
  %4745 = load ptr, ptr @tag_Equals, align 8
  %4746 = call ptr @Builtins__structGet(ptr %997, ptr %4745)
  %4747 = load ptr, ptr @tag_Equals, align 8
  %4748 = call ptr @Builtins__structGet(ptr %997, ptr %4747)
  %4749 = load ptr, ptr @tag_Equals, align 8
  %4750 = call ptr @Builtins__structGet(ptr %997, ptr %4749)
  %4751 = load ptr, ptr @tag_TypeOf, align 8
  %4752 = call ptr @Builtins__structGet(ptr %997, ptr %4751)
  %4753 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4754 = call ptr @Builtins__structGet(ptr %997, ptr %4753)
  %4755 = load ptr, ptr @tag_Equals, align 8
  %4756 = call ptr @Builtins__structGet(ptr %997, ptr %4755)
  %4757 = load ptr, ptr @tag_TypeOf, align 8
  %4758 = call ptr @Builtins__structGet(ptr %997, ptr %4757)
  %4759 = load ptr, ptr @tag_IfElse, align 8
  %4760 = call ptr @Builtins__structGet(ptr %997, ptr %4759)
  %4761 = load ptr, ptr @tag_Equals, align 8
  %4762 = call ptr @Builtins__structGet(ptr %997, ptr %4761)
  %4763 = load ptr, ptr @tag_Equals, align 8
  %4764 = call ptr @Builtins__structGet(ptr %997, ptr %4763)
  %4765 = load ptr, ptr @tag_Equals, align 8
  %4766 = call ptr @Builtins__structGet(ptr %997, ptr %4765)
  %4767 = load ptr, ptr @tag_Equals, align 8
  %4768 = call ptr @Builtins__structGet(ptr %997, ptr %4767)
  %4769 = load ptr, ptr @tag_TypeOf, align 8
  %4770 = call ptr @Builtins__structGet(ptr %997, ptr %4769)
  %4771 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4772 = call ptr @Builtins__structGet(ptr %997, ptr %4771)
  %4773 = load ptr, ptr @tag_Equals, align 8
  %4774 = call ptr @Builtins__structGet(ptr %997, ptr %4773)
  %4775 = load ptr, ptr @tag_TypeOf, align 8
  %4776 = call ptr @Builtins__structGet(ptr %997, ptr %4775)
  %4777 = load ptr, ptr @tag_Equals, align 8
  %4778 = call ptr @Builtins__structGet(ptr %997, ptr %4777)
  %4779 = load ptr, ptr @tag_Equals, align 8
  %4780 = call ptr @Builtins__structGet(ptr %997, ptr %4779)
  %4781 = load ptr, ptr @tag_Equals, align 8
  %4782 = call ptr @Builtins__structGet(ptr %997, ptr %4781)
  %4783 = load ptr, ptr @tag_TypeOf, align 8
  %4784 = call ptr @Builtins__structGet(ptr %997, ptr %4783)
  %4785 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4786 = call ptr @Builtins__structGet(ptr %997, ptr %4785)
  %4787 = load ptr, ptr @tag_Equals, align 8
  %4788 = call ptr @Builtins__structGet(ptr %997, ptr %4787)
  %4789 = load ptr, ptr @tag_TypeOf, align 8
  %4790 = call ptr @Builtins__structGet(ptr %997, ptr %4789)
  %4791 = load ptr, ptr @tag_Equals, align 8
  %4792 = call ptr @Builtins__structGet(ptr %997, ptr %4791)
  %4793 = load ptr, ptr @tag_Equals, align 8
  %4794 = call ptr @Builtins__structGet(ptr %997, ptr %4793)
  %4795 = load ptr, ptr @tag_Equals, align 8
  %4796 = call ptr @Builtins__structGet(ptr %997, ptr %4795)
  %4797 = load ptr, ptr @tag_TypeOf, align 8
  %4798 = call ptr @Builtins__structGet(ptr %997, ptr %4797)
  %4799 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4800 = call ptr @Builtins__structGet(ptr %997, ptr %4799)
  %4801 = load ptr, ptr @tag_Equals, align 8
  %4802 = call ptr @Builtins__structGet(ptr %997, ptr %4801)
  %4803 = load ptr, ptr @tag_TypeOf, align 8
  %4804 = call ptr @Builtins__structGet(ptr %997, ptr %4803)
  %4805 = load ptr, ptr @tag_Equals, align 8
  %4806 = call ptr @Builtins__structGet(ptr %997, ptr %4805)
  %4807 = load ptr, ptr @tag_Equals, align 8
  %4808 = call ptr @Builtins__structGet(ptr %997, ptr %4807)
  %4809 = load ptr, ptr @tag_Equals, align 8
  %4810 = call ptr @Builtins__structGet(ptr %997, ptr %4809)
  %4811 = load ptr, ptr @tag_TypeOf, align 8
  %4812 = call ptr @Builtins__structGet(ptr %997, ptr %4811)
  %4813 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4814 = call ptr @Builtins__structGet(ptr %997, ptr %4813)
  %4815 = load ptr, ptr @tag_Equals, align 8
  %4816 = call ptr @Builtins__structGet(ptr %997, ptr %4815)
  %4817 = load ptr, ptr @tag_TypeOf, align 8
  %4818 = call ptr @Builtins__structGet(ptr %997, ptr %4817)
  %4819 = load ptr, ptr @tag_IfElse, align 8
  %4820 = call ptr @Builtins__structGet(ptr %997, ptr %4819)
  %4821 = load ptr, ptr @tag_Equals, align 8
  %4822 = call ptr @Builtins__structGet(ptr %997, ptr %4821)
  %4823 = load ptr, ptr @tag_Equals, align 8
  %4824 = call ptr @Builtins__structGet(ptr %997, ptr %4823)
  %4825 = load ptr, ptr @tag_Equals, align 8
  %4826 = call ptr @Builtins__structGet(ptr %997, ptr %4825)
  %4827 = load ptr, ptr @tag_TypeOf, align 8
  %4828 = call ptr @Builtins__structGet(ptr %997, ptr %4827)
  %4829 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4830 = call ptr @Builtins__structGet(ptr %997, ptr %4829)
  %4831 = load ptr, ptr @tag_Equals, align 8
  %4832 = call ptr @Builtins__structGet(ptr %997, ptr %4831)
  %4833 = load ptr, ptr @tag_TypeOf, align 8
  %4834 = call ptr @Builtins__structGet(ptr %997, ptr %4833)
  %4835 = load ptr, ptr @tag_Equals, align 8
  %4836 = call ptr @Builtins__structGet(ptr %997, ptr %4835)
  %4837 = load ptr, ptr @tag_Equals, align 8
  %4838 = call ptr @Builtins__structGet(ptr %997, ptr %4837)
  %4839 = load ptr, ptr @tag_Equals, align 8
  %4840 = call ptr @Builtins__structGet(ptr %997, ptr %4839)
  %4841 = load ptr, ptr @tag_TypeOf, align 8
  %4842 = call ptr @Builtins__structGet(ptr %997, ptr %4841)
  %4843 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4844 = call ptr @Builtins__structGet(ptr %997, ptr %4843)
  %4845 = load ptr, ptr @tag_Equals, align 8
  %4846 = call ptr @Builtins__structGet(ptr %997, ptr %4845)
  %4847 = load ptr, ptr @tag_TypeOf, align 8
  %4848 = call ptr @Builtins__structGet(ptr %997, ptr %4847)
  %4849 = load ptr, ptr @tag_IfElse, align 8
  %4850 = call ptr @Builtins__structGet(ptr %997, ptr %4849)
  %4851 = load ptr, ptr @tag_Equals, align 8
  %4852 = call ptr @Builtins__structGet(ptr %997, ptr %4851)
  %4853 = load ptr, ptr @tag_Equals, align 8
  %4854 = call ptr @Builtins__structGet(ptr %997, ptr %4853)
  %4855 = load ptr, ptr @tag_TypeOf, align 8
  %4856 = call ptr @Builtins__structGet(ptr %997, ptr %4855)
  %4857 = load ptr, ptr @tag_IntAdd, align 8
  %4858 = call ptr @Builtins__structGet(ptr %997, ptr %4857)
  %4859 = load ptr, ptr @tag_IntSubtract, align 8
  %4860 = call ptr @Builtins__structGet(ptr %997, ptr %4859)
  %4861 = load ptr, ptr @tag_IntMultiply, align 8
  %4862 = call ptr @Builtins__structGet(ptr %997, ptr %4861)
  %4863 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %4864 = call ptr @Builtins__structGet(ptr %997, ptr %4863)
  %4865 = load ptr, ptr @tag_IntRemainder, align 8
  %4866 = call ptr @Builtins__structGet(ptr %997, ptr %4865)
  %4867 = load ptr, ptr @tag_IntModulo, align 8
  %4868 = call ptr @Builtins__structGet(ptr %997, ptr %4867)
  %4869 = load ptr, ptr @tag_IntShiftLeft, align 8
  %4870 = call ptr @Builtins__structGet(ptr %997, ptr %4869)
  %4871 = load ptr, ptr @tag_IntShiftRight, align 8
  %4872 = call ptr @Builtins__structGet(ptr %997, ptr %4871)
  %4873 = load ptr, ptr @tag_IntBitLength, align 8
  %4874 = call ptr @Builtins__structGet(ptr %997, ptr %4873)
  %4875 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %4876 = call ptr @Builtins__structGet(ptr %997, ptr %4875)
  %4877 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %4878 = call ptr @Builtins__structGet(ptr %997, ptr %4877)
  %4879 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %4880 = call ptr @Builtins__structGet(ptr %997, ptr %4879)
  %4881 = load ptr, ptr @tag_IntParse, align 8
  %4882 = call ptr @Builtins__structGet(ptr %997, ptr %4881)
  %4883 = load ptr, ptr @tag_Equals, align 8
  %4884 = call ptr @Builtins__structGet(ptr %997, ptr %4883)
  %4885 = load ptr, ptr @tag_Equals, align 8
  %4886 = call ptr @Builtins__structGet(ptr %997, ptr %4885)
  %4887 = load ptr, ptr @tag_Equals, align 8
  %4888 = call ptr @Builtins__structGet(ptr %997, ptr %4887)
  %4889 = load ptr, ptr @tag_TypeOf, align 8
  %4890 = call ptr @Builtins__structGet(ptr %997, ptr %4889)
  %4891 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4892 = call ptr @Builtins__structGet(ptr %997, ptr %4891)
  %4893 = load ptr, ptr @tag_Equals, align 8
  %4894 = call ptr @Builtins__structGet(ptr %997, ptr %4893)
  %4895 = load ptr, ptr @tag_TypeOf, align 8
  %4896 = call ptr @Builtins__structGet(ptr %997, ptr %4895)
  %4897 = load ptr, ptr @tag_Equals, align 8
  %4898 = call ptr @Builtins__structGet(ptr %997, ptr %4897)
  %4899 = load ptr, ptr @tag_Equals, align 8
  %4900 = call ptr @Builtins__structGet(ptr %997, ptr %4899)
  %4901 = load ptr, ptr @tag_Equals, align 8
  %4902 = call ptr @Builtins__structGet(ptr %997, ptr %4901)
  %4903 = load ptr, ptr @tag_TypeOf, align 8
  %4904 = call ptr @Builtins__structGet(ptr %997, ptr %4903)
  %4905 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4906 = call ptr @Builtins__structGet(ptr %997, ptr %4905)
  %4907 = load ptr, ptr @tag_Equals, align 8
  %4908 = call ptr @Builtins__structGet(ptr %997, ptr %4907)
  %4909 = load ptr, ptr @tag_TypeOf, align 8
  %4910 = call ptr @Builtins__structGet(ptr %997, ptr %4909)
  %4911 = load ptr, ptr @tag_Equals, align 8
  %4912 = call ptr @Builtins__structGet(ptr %997, ptr %4911)
  %4913 = load ptr, ptr @tag_Equals, align 8
  %4914 = call ptr @Builtins__structGet(ptr %997, ptr %4913)
  %4915 = load ptr, ptr @tag_Equals, align 8
  %4916 = call ptr @Builtins__structGet(ptr %997, ptr %4915)
  %4917 = load ptr, ptr @tag_TypeOf, align 8
  %4918 = call ptr @Builtins__structGet(ptr %997, ptr %4917)
  %4919 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4920 = call ptr @Builtins__structGet(ptr %997, ptr %4919)
  %4921 = load ptr, ptr @tag_Equals, align 8
  %4922 = call ptr @Builtins__structGet(ptr %997, ptr %4921)
  %4923 = load ptr, ptr @tag_TypeOf, align 8
  %4924 = call ptr @Builtins__structGet(ptr %997, ptr %4923)
  %4925 = load ptr, ptr @tag_IfElse, align 8
  %4926 = call ptr @Builtins__structGet(ptr %997, ptr %4925)
  %4927 = load ptr, ptr @tag_Equals, align 8
  %4928 = call ptr @Builtins__structGet(ptr %997, ptr %4927)
  %4929 = load ptr, ptr @tag_Equals, align 8
  %4930 = call ptr @Builtins__structGet(ptr %997, ptr %4929)
  %4931 = load ptr, ptr @tag_Equals, align 8
  %4932 = call ptr @Builtins__structGet(ptr %997, ptr %4931)
  %4933 = load ptr, ptr @tag_TypeOf, align 8
  %4934 = call ptr @Builtins__structGet(ptr %997, ptr %4933)
  %4935 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4936 = call ptr @Builtins__structGet(ptr %997, ptr %4935)
  %4937 = load ptr, ptr @tag_Equals, align 8
  %4938 = call ptr @Builtins__structGet(ptr %997, ptr %4937)
  %4939 = load ptr, ptr @tag_Equals, align 8
  %4940 = call ptr @Builtins__structGet(ptr %997, ptr %4939)
  %4941 = load ptr, ptr @tag_Equals, align 8
  %4942 = call ptr @Builtins__structGet(ptr %997, ptr %4941)
  %4943 = load ptr, ptr @tag_TypeOf, align 8
  %4944 = call ptr @Builtins__structGet(ptr %997, ptr %4943)
  %4945 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4946 = call ptr @Builtins__structGet(ptr %997, ptr %4945)
  %4947 = load ptr, ptr @tag_Equals, align 8
  %4948 = call ptr @Builtins__structGet(ptr %997, ptr %4947)
  %4949 = load ptr, ptr @tag_TypeOf, align 8
  %4950 = call ptr @Builtins__structGet(ptr %997, ptr %4949)
  %4951 = load ptr, ptr @tag_Equals, align 8
  %4952 = call ptr @Builtins__structGet(ptr %997, ptr %4951)
  %4953 = load ptr, ptr @tag_Equals, align 8
  %4954 = call ptr @Builtins__structGet(ptr %997, ptr %4953)
  %4955 = load ptr, ptr @tag_Equals, align 8
  %4956 = call ptr @Builtins__structGet(ptr %997, ptr %4955)
  %4957 = load ptr, ptr @tag_TypeOf, align 8
  %4958 = call ptr @Builtins__structGet(ptr %997, ptr %4957)
  %4959 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4960 = call ptr @Builtins__structGet(ptr %997, ptr %4959)
  %4961 = load ptr, ptr @tag_Equals, align 8
  %4962 = call ptr @Builtins__structGet(ptr %997, ptr %4961)
  %4963 = load ptr, ptr @tag_TypeOf, align 8
  %4964 = call ptr @Builtins__structGet(ptr %997, ptr %4963)
  %4965 = load ptr, ptr @tag_Equals, align 8
  %4966 = call ptr @Builtins__structGet(ptr %997, ptr %4965)
  %4967 = load ptr, ptr @tag_Equals, align 8
  %4968 = call ptr @Builtins__structGet(ptr %997, ptr %4967)
  %4969 = load ptr, ptr @tag_Equals, align 8
  %4970 = call ptr @Builtins__structGet(ptr %997, ptr %4969)
  %4971 = load ptr, ptr @tag_TypeOf, align 8
  %4972 = call ptr @Builtins__structGet(ptr %997, ptr %4971)
  %4973 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4974 = call ptr @Builtins__structGet(ptr %997, ptr %4973)
  %4975 = load ptr, ptr @tag_Equals, align 8
  %4976 = call ptr @Builtins__structGet(ptr %997, ptr %4975)
  %4977 = load ptr, ptr @tag_TypeOf, align 8
  %4978 = call ptr @Builtins__structGet(ptr %997, ptr %4977)
  %4979 = load ptr, ptr @tag_Equals, align 8
  %4980 = call ptr @Builtins__structGet(ptr %997, ptr %4979)
  %4981 = load ptr, ptr @tag_Equals, align 8
  %4982 = call ptr @Builtins__structGet(ptr %997, ptr %4981)
  %4983 = load ptr, ptr @tag_Equals, align 8
  %4984 = call ptr @Builtins__structGet(ptr %997, ptr %4983)
  %4985 = load ptr, ptr @tag_TypeOf, align 8
  %4986 = call ptr @Builtins__structGet(ptr %997, ptr %4985)
  %4987 = load ptr, ptr @tag_GetArgumentCount, align 8
  %4988 = call ptr @Builtins__structGet(ptr %997, ptr %4987)
  %4989 = load ptr, ptr @tag_Equals, align 8
  %4990 = call ptr @Builtins__structGet(ptr %997, ptr %4989)
  %4991 = load ptr, ptr @tag_TypeOf, align 8
  %4992 = call ptr @Builtins__structGet(ptr %997, ptr %4991)
  %4993 = load ptr, ptr @tag_IfElse, align 8
  %4994 = call ptr @Builtins__structGet(ptr %997, ptr %4993)
  %4995 = load ptr, ptr @tag_Equals, align 8
  %4996 = call ptr @Builtins__structGet(ptr %997, ptr %4995)
  %4997 = load ptr, ptr @tag_Equals, align 8
  %4998 = call ptr @Builtins__structGet(ptr %997, ptr %4997)
  %4999 = load ptr, ptr @tag_Equals, align 8
  %5000 = call ptr @Builtins__structGet(ptr %997, ptr %4999)
  %5001 = load ptr, ptr @tag_TypeOf, align 8
  %5002 = call ptr @Builtins__structGet(ptr %997, ptr %5001)
  %5003 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5004 = call ptr @Builtins__structGet(ptr %997, ptr %5003)
  %5005 = load ptr, ptr @tag_Equals, align 8
  %5006 = call ptr @Builtins__structGet(ptr %997, ptr %5005)
  %5007 = load ptr, ptr @tag_TypeOf, align 8
  %5008 = call ptr @Builtins__structGet(ptr %997, ptr %5007)
  %5009 = load ptr, ptr @tag_Equals, align 8
  %5010 = call ptr @Builtins__structGet(ptr %997, ptr %5009)
  %5011 = load ptr, ptr @tag_Equals, align 8
  %5012 = call ptr @Builtins__structGet(ptr %997, ptr %5011)
  %5013 = load ptr, ptr @tag_Equals, align 8
  %5014 = call ptr @Builtins__structGet(ptr %997, ptr %5013)
  %5015 = load ptr, ptr @tag_TypeOf, align 8
  %5016 = call ptr @Builtins__structGet(ptr %997, ptr %5015)
  %5017 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5018 = call ptr @Builtins__structGet(ptr %997, ptr %5017)
  %5019 = load ptr, ptr @tag_Equals, align 8
  %5020 = call ptr @Builtins__structGet(ptr %997, ptr %5019)
  %5021 = load ptr, ptr @tag_TypeOf, align 8
  %5022 = call ptr @Builtins__structGet(ptr %997, ptr %5021)
  %5023 = load ptr, ptr @tag_IfElse, align 8
  %5024 = call ptr @Builtins__structGet(ptr %997, ptr %5023)
  %5025 = load ptr, ptr @tag_Equals, align 8
  %5026 = call ptr @Builtins__structGet(ptr %997, ptr %5025)
  %5027 = load ptr, ptr @tag_Equals, align 8
  %5028 = call ptr @Builtins__structGet(ptr %997, ptr %5027)
  %5029 = load ptr, ptr @tag_TypeOf, align 8
  %5030 = call ptr @Builtins__structGet(ptr %997, ptr %5029)
  %5031 = load ptr, ptr @tag_IntAdd, align 8
  %5032 = call ptr @Builtins__structGet(ptr %997, ptr %5031)
  %5033 = load ptr, ptr @tag_IntSubtract, align 8
  %5034 = call ptr @Builtins__structGet(ptr %997, ptr %5033)
  %5035 = load ptr, ptr @tag_IntMultiply, align 8
  %5036 = call ptr @Builtins__structGet(ptr %997, ptr %5035)
  %5037 = load ptr, ptr @tag_IntDivideTruncating, align 8
  %5038 = call ptr @Builtins__structGet(ptr %997, ptr %5037)
  %5039 = load ptr, ptr @tag_IntRemainder, align 8
  %5040 = call ptr @Builtins__structGet(ptr %997, ptr %5039)
  %5041 = load ptr, ptr @tag_IntModulo, align 8
  %5042 = call ptr @Builtins__structGet(ptr %997, ptr %5041)
  %5043 = load ptr, ptr @tag_IntShiftLeft, align 8
  %5044 = call ptr @Builtins__structGet(ptr %997, ptr %5043)
  %5045 = load ptr, ptr @tag_IntShiftRight, align 8
  %5046 = call ptr @Builtins__structGet(ptr %997, ptr %5045)
  %5047 = load ptr, ptr @tag_IntBitLength, align 8
  %5048 = call ptr @Builtins__structGet(ptr %997, ptr %5047)
  %5049 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  %5050 = call ptr @Builtins__structGet(ptr %997, ptr %5049)
  %5051 = load ptr, ptr @tag_IntBitwiseOr, align 8
  %5052 = call ptr @Builtins__structGet(ptr %997, ptr %5051)
  %5053 = load ptr, ptr @tag_IntBitwiseXor, align 8
  %5054 = call ptr @Builtins__structGet(ptr %997, ptr %5053)
  %5055 = load ptr, ptr @tag_IntParse, align 8
  %5056 = call ptr @Builtins__structGet(ptr %997, ptr %5055)
  %5057 = load ptr, ptr @tag_Equals, align 8
  %5058 = call ptr @Builtins__structGet(ptr %997, ptr %5057)
  %5059 = load ptr, ptr @tag_Equals, align 8
  %5060 = call ptr @Builtins__structGet(ptr %997, ptr %5059)
  %5061 = load ptr, ptr @tag_Equals, align 8
  %5062 = call ptr @Builtins__structGet(ptr %997, ptr %5061)
  %5063 = load ptr, ptr @tag_TypeOf, align 8
  %5064 = call ptr @Builtins__structGet(ptr %997, ptr %5063)
  %5065 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5066 = call ptr @Builtins__structGet(ptr %997, ptr %5065)
  %5067 = load ptr, ptr @tag_Equals, align 8
  %5068 = call ptr @Builtins__structGet(ptr %997, ptr %5067)
  %5069 = load ptr, ptr @tag_TypeOf, align 8
  %5070 = call ptr @Builtins__structGet(ptr %997, ptr %5069)
  %5071 = load ptr, ptr @tag_Equals, align 8
  %5072 = call ptr @Builtins__structGet(ptr %997, ptr %5071)
  %5073 = load ptr, ptr @tag_Equals, align 8
  %5074 = call ptr @Builtins__structGet(ptr %997, ptr %5073)
  %5075 = load ptr, ptr @tag_Equals, align 8
  %5076 = call ptr @Builtins__structGet(ptr %997, ptr %5075)
  %5077 = load ptr, ptr @tag_TypeOf, align 8
  %5078 = call ptr @Builtins__structGet(ptr %997, ptr %5077)
  %5079 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5080 = call ptr @Builtins__structGet(ptr %997, ptr %5079)
  %5081 = load ptr, ptr @tag_Equals, align 8
  %5082 = call ptr @Builtins__structGet(ptr %997, ptr %5081)
  %5083 = load ptr, ptr @tag_TypeOf, align 8
  %5084 = call ptr @Builtins__structGet(ptr %997, ptr %5083)
  %5085 = load ptr, ptr @tag_Equals, align 8
  %5086 = call ptr @Builtins__structGet(ptr %997, ptr %5085)
  %5087 = load ptr, ptr @tag_Equals, align 8
  %5088 = call ptr @Builtins__structGet(ptr %997, ptr %5087)
  %5089 = load ptr, ptr @tag_Equals, align 8
  %5090 = call ptr @Builtins__structGet(ptr %997, ptr %5089)
  %5091 = load ptr, ptr @tag_TypeOf, align 8
  %5092 = call ptr @Builtins__structGet(ptr %997, ptr %5091)
  %5093 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5094 = call ptr @Builtins__structGet(ptr %997, ptr %5093)
  %5095 = load ptr, ptr @tag_Equals, align 8
  %5096 = call ptr @Builtins__structGet(ptr %997, ptr %5095)
  %5097 = load ptr, ptr @tag_TypeOf, align 8
  %5098 = call ptr @Builtins__structGet(ptr %997, ptr %5097)
  %5099 = load ptr, ptr @tag_IfElse, align 8
  %5100 = call ptr @Builtins__structGet(ptr %997, ptr %5099)
  %5101 = load ptr, ptr @tag_Equals, align 8
  %5102 = call ptr @Builtins__structGet(ptr %997, ptr %5101)
  %5103 = load ptr, ptr @tag_Equals, align 8
  %5104 = call ptr @Builtins__structGet(ptr %997, ptr %5103)
  %5105 = load ptr, ptr @tag_Equals, align 8
  %5106 = call ptr @Builtins__structGet(ptr %997, ptr %5105)
  %5107 = load ptr, ptr @tag_TypeOf, align 8
  %5108 = call ptr @Builtins__structGet(ptr %997, ptr %5107)
  %5109 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5110 = call ptr @Builtins__structGet(ptr %997, ptr %5109)
  %5111 = load ptr, ptr @tag_Equals, align 8
  %5112 = call ptr @Builtins__structGet(ptr %997, ptr %5111)
  %5113 = load ptr, ptr @tag_Equals, align 8
  %5114 = call ptr @Builtins__structGet(ptr %997, ptr %5113)
  %5115 = load ptr, ptr @tag_Equals, align 8
  %5116 = call ptr @Builtins__structGet(ptr %997, ptr %5115)
  %5117 = load ptr, ptr @tag_TypeOf, align 8
  %5118 = call ptr @Builtins__structGet(ptr %997, ptr %5117)
  %5119 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5120 = call ptr @Builtins__structGet(ptr %997, ptr %5119)
  %5121 = load ptr, ptr @tag_Equals, align 8
  %5122 = call ptr @Builtins__structGet(ptr %997, ptr %5121)
  %5123 = load ptr, ptr @tag_TypeOf, align 8
  %5124 = call ptr @Builtins__structGet(ptr %997, ptr %5123)
  %5125 = load ptr, ptr @tag_Equals, align 8
  %5126 = call ptr @Builtins__structGet(ptr %997, ptr %5125)
  %5127 = load ptr, ptr @tag_Equals, align 8
  %5128 = call ptr @Builtins__structGet(ptr %997, ptr %5127)
  %5129 = load ptr, ptr @tag_Equals, align 8
  %5130 = call ptr @Builtins__structGet(ptr %997, ptr %5129)
  %5131 = load ptr, ptr @tag_TypeOf, align 8
  %5132 = call ptr @Builtins__structGet(ptr %997, ptr %5131)
  %5133 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5134 = call ptr @Builtins__structGet(ptr %997, ptr %5133)
  %5135 = load ptr, ptr @tag_Equals, align 8
  %5136 = call ptr @Builtins__structGet(ptr %997, ptr %5135)
  %5137 = load ptr, ptr @tag_TypeOf, align 8
  %5138 = call ptr @Builtins__structGet(ptr %997, ptr %5137)
  %5139 = load ptr, ptr @tag_IfElse, align 8
  %5140 = call ptr @Builtins__structGet(ptr %997, ptr %5139)
  %5141 = load ptr, ptr @tag_Equals, align 8
  %5142 = call ptr @Builtins__structGet(ptr %997, ptr %5141)
  %5143 = load ptr, ptr @tag_TypeOf, align 8
  %5144 = call ptr @Builtins__structGet(ptr %997, ptr %5143)
  %5145 = load ptr, ptr @tag_Equals, align 8
  %5146 = call ptr @Builtins__structGet(ptr %997, ptr %5145)
  %5147 = load ptr, ptr @tag_Equals, align 8
  %5148 = call ptr @Builtins__structGet(ptr %997, ptr %5147)
  %5149 = load ptr, ptr @tag_Equals, align 8
  %5150 = call ptr @Builtins__structGet(ptr %997, ptr %5149)
  %5151 = load ptr, ptr @tag_TypeOf, align 8
  %5152 = call ptr @Builtins__structGet(ptr %997, ptr %5151)
  %5153 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5154 = call ptr @Builtins__structGet(ptr %997, ptr %5153)
  %5155 = load ptr, ptr @tag_Equals, align 8
  %5156 = call ptr @Builtins__structGet(ptr %997, ptr %5155)
  %5157 = load ptr, ptr @tag_TypeOf, align 8
  %5158 = call ptr @Builtins__structGet(ptr %997, ptr %5157)
  %5159 = load ptr, ptr @tag_Equals, align 8
  %5160 = call ptr @Builtins__structGet(ptr %997, ptr %5159)
  %5161 = load ptr, ptr @tag_Equals, align 8
  %5162 = call ptr @Builtins__structGet(ptr %997, ptr %5161)
  %5163 = load ptr, ptr @tag_Equals, align 8
  %5164 = call ptr @Builtins__structGet(ptr %997, ptr %5163)
  %5165 = load ptr, ptr @tag_TypeOf, align 8
  %5166 = call ptr @Builtins__structGet(ptr %997, ptr %5165)
  %5167 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5168 = call ptr @Builtins__structGet(ptr %997, ptr %5167)
  %5169 = load ptr, ptr @tag_Equals, align 8
  %5170 = call ptr @Builtins__structGet(ptr %997, ptr %5169)
  %5171 = load ptr, ptr @tag_TypeOf, align 8
  %5172 = call ptr @Builtins__structGet(ptr %997, ptr %5171)
  %5173 = load ptr, ptr @tag_Equals, align 8
  %5174 = call ptr @Builtins__structGet(ptr %997, ptr %5173)
  %5175 = load ptr, ptr @tag_Equals, align 8
  %5176 = call ptr @Builtins__structGet(ptr %997, ptr %5175)
  %5177 = load ptr, ptr @tag_Equals, align 8
  %5178 = call ptr @Builtins__structGet(ptr %997, ptr %5177)
  %5179 = load ptr, ptr @tag_TypeOf, align 8
  %5180 = call ptr @Builtins__structGet(ptr %997, ptr %5179)
  %5181 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5182 = call ptr @Builtins__structGet(ptr %997, ptr %5181)
  %5183 = load ptr, ptr @tag_Equals, align 8
  %5184 = call ptr @Builtins__structGet(ptr %997, ptr %5183)
  %5185 = load ptr, ptr @tag_TypeOf, align 8
  %5186 = call ptr @Builtins__structGet(ptr %997, ptr %5185)
  %5187 = load ptr, ptr @tag_IfElse, align 8
  %5188 = call ptr @Builtins__structGet(ptr %997, ptr %5187)
  %5189 = load ptr, ptr @tag_Equals, align 8
  %5190 = call ptr @Builtins__structGet(ptr %997, ptr %5189)
  %5191 = load ptr, ptr @tag_TypeOf, align 8
  %5192 = call ptr @Builtins__structGet(ptr %997, ptr %5191)
  %5193 = load ptr, ptr @tag_TagHasValue, align 8
  %5194 = call ptr @Builtins__structGet(ptr %997, ptr %5193)
  %5195 = load ptr, ptr @tag_TagWithoutValue, align 8
  %5196 = call ptr @Builtins__structGet(ptr %997, ptr %5195)
  %5197 = load ptr, ptr @tag_TagGetValue, align 8
  %5198 = call ptr @Builtins__structGet(ptr %997, ptr %5197)
  %5199 = load ptr, ptr @tag_Equals, align 8
  %5200 = call ptr @Builtins__structGet(ptr %997, ptr %5199)
  %5201 = load ptr, ptr @tag_TypeOf, align 8
  %5202 = call ptr @Builtins__structGet(ptr %997, ptr %5201)
  %5203 = load ptr, ptr @tag_Equals, align 8
  %5204 = call ptr @Builtins__structGet(ptr %997, ptr %5203)
  %5205 = load ptr, ptr @tag_TypeOf, align 8
  %5206 = call ptr @Builtins__structGet(ptr %997, ptr %5205)
  %5207 = load ptr, ptr @tag_ListLength, align 8
  %5208 = call ptr @Builtins__structGet(ptr %997, ptr %5207)
  %5209 = load ptr, ptr @tag_ListGet, align 8
  %5210 = call ptr @Builtins__structGet(ptr %997, ptr %5209)
  %5211 = load ptr, ptr @tag_ListInsert, align 8
  %5212 = call ptr @Builtins__structGet(ptr %997, ptr %5211)
  %5213 = load ptr, ptr @tag_ListReplace, align 8
  %5214 = call ptr @Builtins__structGet(ptr %997, ptr %5213)
  %5215 = load ptr, ptr @tag_ListRemoveAt, align 8
  %5216 = call ptr @Builtins__structGet(ptr %997, ptr %5215)
  %5217 = load ptr, ptr @tag_ListFilled, align 8
  %5218 = call ptr @Builtins__structGet(ptr %997, ptr %5217)
  %5219 = load ptr, ptr @tag_Equals, align 8
  %5220 = call ptr @Builtins__structGet(ptr %997, ptr %5219)
  %5221 = load ptr, ptr @tag_Equals, align 8
  %5222 = call ptr @Builtins__structGet(ptr %997, ptr %5221)
  %5223 = load ptr, ptr @tag_Equals, align 8
  %5224 = call ptr @Builtins__structGet(ptr %997, ptr %5223)
  %5225 = load ptr, ptr @tag_TypeOf, align 8
  %5226 = call ptr @Builtins__structGet(ptr %997, ptr %5225)
  %5227 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5228 = call ptr @Builtins__structGet(ptr %997, ptr %5227)
  %5229 = load ptr, ptr @tag_Equals, align 8
  %5230 = call ptr @Builtins__structGet(ptr %997, ptr %5229)
  %5231 = load ptr, ptr @tag_TypeOf, align 8
  %5232 = call ptr @Builtins__structGet(ptr %997, ptr %5231)
  %5233 = load ptr, ptr @tag_Equals, align 8
  %5234 = call ptr @Builtins__structGet(ptr %997, ptr %5233)
  %5235 = load ptr, ptr @tag_Equals, align 8
  %5236 = call ptr @Builtins__structGet(ptr %997, ptr %5235)
  %5237 = load ptr, ptr @tag_Equals, align 8
  %5238 = call ptr @Builtins__structGet(ptr %997, ptr %5237)
  %5239 = load ptr, ptr @tag_TypeOf, align 8
  %5240 = call ptr @Builtins__structGet(ptr %997, ptr %5239)
  %5241 = load ptr, ptr @tag_GetArgumentCount, align 8
  %5242 = call ptr @Builtins__structGet(ptr %997, ptr %5241)
  %5243 = load ptr, ptr @tag_Equals, align 8
  %5244 = call ptr @Builtins__structGet(ptr %997, ptr %5243)
  %5245 = load ptr, ptr @tag_TypeOf, align 8
  %5246 = call ptr @Builtins__structGet(ptr %997, ptr %5245)
  %5247 = load ptr, ptr @tag_IfElse, align 8
  %5248 = call ptr @Builtins__structGet(ptr %997, ptr %5247)
  %5249 = load ptr, ptr @tag_Equals, align 8
  %5250 = call ptr @Builtins__structGet(ptr %997, ptr %5249)
  %5251 = load ptr, ptr @tag_TypeOf, align 8
  %5252 = call ptr @Builtins__structGet(ptr %997, ptr %5251)
  %5253 = load ptr, ptr @tag_Equals, align 8
  %5254 = call ptr @Builtins__structGet(ptr %997, ptr %5253)
  %5255 = load ptr, ptr @tag_TypeOf, align 8
  %5256 = call ptr @Builtins__structGet(ptr %997, ptr %5255)
  %5257 = load ptr, ptr @tag_TextFromUtf8, align 8
  %5258 = call ptr @Builtins__structGet(ptr %997, ptr %5257)
  %5259 = load ptr, ptr @tag_TextIsEmpty, align 8
  %5260 = call ptr @Builtins__structGet(ptr %997, ptr %5259)
  %5261 = load ptr, ptr @tag_TextLength, align 8
  %5262 = call ptr @Builtins__structGet(ptr %997, ptr %5261)
  %5263 = load ptr, ptr @tag_TextCharacters, align 8
  %5264 = call ptr @Builtins__structGet(ptr %997, ptr %5263)
  %5265 = load ptr, ptr @tag_TextGetRange, align 8
  %5266 = call ptr @Builtins__structGet(ptr %997, ptr %5265)
  %5267 = load ptr, ptr @tag_TextConcatenate, align 8
  %5268 = call ptr @Builtins__structGet(ptr %997, ptr %5267)
  %5269 = load ptr, ptr @tag_TextStartsWith, align 8
  %5270 = call ptr @Builtins__structGet(ptr %997, ptr %5269)
  %5271 = load ptr, ptr @tag_TextEndsWith, align 8
  %5272 = call ptr @Builtins__structGet(ptr %997, ptr %5271)
  %5273 = load ptr, ptr @tag_TextContains, align 8
  %5274 = call ptr @Builtins__structGet(ptr %997, ptr %5273)
  %5275 = load ptr, ptr @tag_TextTrimStart, align 8
  %5276 = call ptr @Builtins__structGet(ptr %997, ptr %5275)
  %5277 = load ptr, ptr @tag_TextTrimEnd, align 8
  %5278 = call ptr @Builtins__structGet(ptr %997, ptr %5277)
  %5279 = load ptr, ptr @tag_Equals, align 8
  %5280 = call ptr @Builtins__structGet(ptr %997, ptr %5279)
  %5281 = load ptr, ptr @tag_TypeOf, align 8
  %5282 = call ptr @Builtins__structGet(ptr %997, ptr %5281)
  %5283 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %5283, align 1
  %5284 = call ptr @make_candy_tag(ptr %5283, ptr null)
  store ptr %5284, ptr @tag_Stdout, align 8
  %5285 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:echo:11:print:7\00", ptr %5285, align 1
  %5286 = call ptr @make_candy_text(ptr %5285)
  store ptr %5286, ptr @"Examples:echo:11:print:7", align 8
  %5287 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:echo:11:print:9\00", ptr %5287, align 1
  %5288 = call ptr @make_candy_text(ptr %5287)
  store ptr %5288, ptr @"Examples:echo:11:print:9", align 8
  %5289 = alloca i8, i64 6, align 1
  store [6 x i8] c"Stdin\00", ptr %5289, align 1
  %5290 = call ptr @make_candy_tag(ptr %5289, ptr null)
  store ptr %5290, ptr @tag_Stdin, align 8
  %5291 = alloca i8, i64 19, align 1
  store [19 x i8] c"Examples:echo:11:7\00", ptr %5291, align 1
  %5292 = call ptr @make_candy_text(ptr %5291)
  store ptr %5292, ptr @"Examples:echo:11:7", align 8
  %5293 = alloca i8, i64 14, align 1
  store [14 x i8] c"Hello, world!\00", ptr %5293, align 1
  %5294 = call ptr @make_candy_text(ptr %5293)
  store ptr %5294, ptr @"text_Hello, world!", align 8
  %5295 = alloca i8, i64 20, align 1
  store [20 x i8] c"Examples:echo:11:25\00", ptr %5295, align 1
  %5296 = call ptr @make_candy_text(ptr %5295)
  store ptr %5296, ptr @"Examples:echo:11:25", align 8
  %5297 = alloca i8, i64 20, align 1
  store [20 x i8] c"Examples:echo:11:27\00", ptr %5297, align 1
  %5298 = call ptr @make_candy_text(ptr %5297)
  store ptr %5298, ptr @"Examples:echo:11:27", align 8
  %5299 = alloca i8, i64 6, align 1
  store [6 x i8] c"Echo:\00", ptr %5299, align 1
  %5300 = call ptr @make_candy_text(ptr %5299)
  store ptr %5300, ptr @"text_Echo:", align 8
  %5301 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5302 = getelementptr inbounds { ptr }, ptr %5301, i32 0, i32 0
  store ptr %2242, ptr %5302, align 8
  %5303 = call ptr @make_candy_function(ptr @Examples_echo_11, ptr %5301, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5303, ptr @fun_Examples_echo_11, align 8
  %5304 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %5304, align 1
  %5305 = call ptr @make_candy_tag(ptr %5304, ptr null)
  store ptr %5305, ptr @tag_Main, align 8
  %5306 = alloca ptr, i64 2, align 8
  %5307 = alloca ptr, i64 2, align 8
  %5308 = load ptr, ptr @tag_Main, align 8
  %5309 = load ptr, ptr @fun_Examples_echo_11, align 8
  %5310 = getelementptr ptr, ptr %5306, i64 0
  store ptr %5308, ptr %5310, align 8
  %5311 = getelementptr ptr, ptr %5307, i64 0
  store ptr %5309, ptr %5311, align 8
  %5312 = getelementptr ptr, ptr %5306, i64 1
  store ptr null, ptr %5312, align 8
  %5313 = getelementptr ptr, ptr %5307, i64 1
  store ptr null, ptr %5313, align 8
  %5314 = call ptr @make_candy_struct(ptr %5306, ptr %5307)
  %5315 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %5315, align 1
  %5316 = call ptr @make_candy_tag(ptr %5315, ptr null)
  %5317 = call ptr @candy_builtin_struct_get(ptr %5314, ptr %5316)
  %5318 = call ptr @run_candy_main(ptr %5317, ptr @candy_environment)
  call void @print_candy_value(ptr %5318)
  %5319 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %5319)
  %5320 = load ptr, ptr @"Builtins::fitsInRustU128:10", align 8
  call void @free_candy_value(ptr %5320)
  %5321 = load ptr, ptr @"Builtins::fitsInRustU128:16", align 8
  call void @free_candy_value(ptr %5321)
  %5322 = load ptr, ptr @"Builtins::fitsInRustU128:5", align 8
  call void @free_candy_value(ptr %5322)
  %5323 = load ptr, ptr @"Builtins::fitsInRustU128:8", align 8
  call void @free_candy_value(ptr %5323)
  %5324 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %5324)
  %5325 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %5325)
  %5326 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %5326)
  %5327 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %5327)
  %5328 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %5328)
  %5329 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %5329)
  %5330 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %5330)
  %5331 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %5331)
  %5332 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %5332)
  %5333 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %5333)
  %5334 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %5334)
  %5335 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %5335)
  %5336 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %5336)
  %5337 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %5337)
  %5338 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %5338)
  %5339 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %5339)
  %5340 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %5340)
  %5341 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %5341)
  %5342 = load ptr, ptr @"Builtins::intBitLength:11", align 8
  call void @free_candy_value(ptr %5342)
  %5343 = load ptr, ptr @"Builtins::intBitLength:5", align 8
  call void @free_candy_value(ptr %5343)
  %5344 = load ptr, ptr @"Builtins::intBitwiseAnd:11", align 8
  call void @free_candy_value(ptr %5344)
  %5345 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %5345)
  %5346 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %5346)
  %5347 = load ptr, ptr @"Builtins::intBitwiseOr:11", align 8
  call void @free_candy_value(ptr %5347)
  %5348 = load ptr, ptr @"Builtins::intBitwiseOr:18", align 8
  call void @free_candy_value(ptr %5348)
  %5349 = load ptr, ptr @"Builtins::intBitwiseOr:5", align 8
  call void @free_candy_value(ptr %5349)
  %5350 = load ptr, ptr @"Builtins::intBitwiseXor:11", align 8
  call void @free_candy_value(ptr %5350)
  %5351 = load ptr, ptr @"Builtins::intBitwiseXor:18", align 8
  call void @free_candy_value(ptr %5351)
  %5352 = load ptr, ptr @"Builtins::intBitwiseXor:5", align 8
  call void @free_candy_value(ptr %5352)
  %5353 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %5353)
  %5354 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %5354)
  %5355 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %5355)
  %5356 = load ptr, ptr @"Builtins::intDivideTruncating:11", align 8
  call void @free_candy_value(ptr %5356)
  %5357 = load ptr, ptr @"Builtins::intDivideTruncating:17", align 8
  call void @free_candy_value(ptr %5357)
  %5358 = load ptr, ptr @"Builtins::intDivideTruncating:25", align 8
  call void @free_candy_value(ptr %5358)
  %5359 = load ptr, ptr @"Builtins::intDivideTruncating:32", align 8
  call void @free_candy_value(ptr %5359)
  %5360 = load ptr, ptr @"Builtins::intDivideTruncating:5", align 8
  call void @free_candy_value(ptr %5360)
  %5361 = load ptr, ptr @"Builtins::intModulo:11", align 8
  call void @free_candy_value(ptr %5361)
  %5362 = load ptr, ptr @"Builtins::intModulo:17", align 8
  call void @free_candy_value(ptr %5362)
  %5363 = load ptr, ptr @"Builtins::intModulo:25", align 8
  call void @free_candy_value(ptr %5363)
  %5364 = load ptr, ptr @"Builtins::intModulo:32", align 8
  call void @free_candy_value(ptr %5364)
  %5365 = load ptr, ptr @"Builtins::intModulo:5", align 8
  call void @free_candy_value(ptr %5365)
  %5366 = load ptr, ptr @"Builtins::intMultiply:11", align 8
  call void @free_candy_value(ptr %5366)
  %5367 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %5367)
  %5368 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %5368)
  %5369 = load ptr, ptr @"Builtins::intParse:11", align 8
  call void @free_candy_value(ptr %5369)
  %5370 = load ptr, ptr @"Builtins::intParse:5", align 8
  call void @free_candy_value(ptr %5370)
  %5371 = load ptr, ptr @"Builtins::intRemainder:11", align 8
  call void @free_candy_value(ptr %5371)
  %5372 = load ptr, ptr @"Builtins::intRemainder:17", align 8
  call void @free_candy_value(ptr %5372)
  %5373 = load ptr, ptr @"Builtins::intRemainder:25", align 8
  call void @free_candy_value(ptr %5373)
  %5374 = load ptr, ptr @"Builtins::intRemainder:32", align 8
  call void @free_candy_value(ptr %5374)
  %5375 = load ptr, ptr @"Builtins::intRemainder:5", align 8
  call void @free_candy_value(ptr %5375)
  %5376 = load ptr, ptr @"Builtins::intShiftLeft:11", align 8
  call void @free_candy_value(ptr %5376)
  %5377 = load ptr, ptr @"Builtins::intShiftLeft:14", align 8
  call void @free_candy_value(ptr %5377)
  %5378 = load ptr, ptr @"Builtins::intShiftLeft:23", align 8
  call void @free_candy_value(ptr %5378)
  %5379 = load ptr, ptr @"Builtins::intShiftLeft:24", align 8
  call void @free_candy_value(ptr %5379)
  %5380 = load ptr, ptr @"Builtins::intShiftLeft:26:0", align 8
  call void @free_candy_value(ptr %5380)
  %5381 = load ptr, ptr @"Builtins::intShiftLeft:27", align 8
  call void @free_candy_value(ptr %5381)
  %5382 = load ptr, ptr @"Builtins::intShiftLeft:29", align 8
  call void @free_candy_value(ptr %5382)
  %5383 = load ptr, ptr @"Builtins::intShiftLeft:30", align 8
  call void @free_candy_value(ptr %5383)
  %5384 = load ptr, ptr @"Builtins::intShiftLeft:31", align 8
  call void @free_candy_value(ptr %5384)
  %5385 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  call void @free_candy_value(ptr %5385)
  %5386 = load ptr, ptr @"Builtins::intShiftLeft:42", align 8
  call void @free_candy_value(ptr %5386)
  %5387 = load ptr, ptr @"Builtins::intShiftLeft:49", align 8
  call void @free_candy_value(ptr %5387)
  %5388 = load ptr, ptr @"Builtins::intShiftLeft:5", align 8
  call void @free_candy_value(ptr %5388)
  %5389 = load ptr, ptr @"Builtins::intShiftRight:11", align 8
  call void @free_candy_value(ptr %5389)
  %5390 = load ptr, ptr @"Builtins::intShiftRight:14", align 8
  call void @free_candy_value(ptr %5390)
  %5391 = load ptr, ptr @"Builtins::intShiftRight:23", align 8
  call void @free_candy_value(ptr %5391)
  %5392 = load ptr, ptr @"Builtins::intShiftRight:24", align 8
  call void @free_candy_value(ptr %5392)
  %5393 = load ptr, ptr @"Builtins::intShiftRight:26:0", align 8
  call void @free_candy_value(ptr %5393)
  %5394 = load ptr, ptr @"Builtins::intShiftRight:27", align 8
  call void @free_candy_value(ptr %5394)
  %5395 = load ptr, ptr @"Builtins::intShiftRight:29", align 8
  call void @free_candy_value(ptr %5395)
  %5396 = load ptr, ptr @"Builtins::intShiftRight:30", align 8
  call void @free_candy_value(ptr %5396)
  %5397 = load ptr, ptr @"Builtins::intShiftRight:31", align 8
  call void @free_candy_value(ptr %5397)
  %5398 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  call void @free_candy_value(ptr %5398)
  %5399 = load ptr, ptr @"Builtins::intShiftRight:42", align 8
  call void @free_candy_value(ptr %5399)
  %5400 = load ptr, ptr @"Builtins::intShiftRight:49", align 8
  call void @free_candy_value(ptr %5400)
  %5401 = load ptr, ptr @"Builtins::intShiftRight:5", align 8
  call void @free_candy_value(ptr %5401)
  %5402 = load ptr, ptr @"Builtins::intSubtract:11", align 8
  call void @free_candy_value(ptr %5402)
  %5403 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %5403)
  %5404 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %5404)
  %5405 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %5405)
  %5406 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %5406)
  %5407 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %5407)
  %5408 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %5408)
  %5409 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %5409)
  %5410 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %5410)
  %5411 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %5411)
  %5412 = load ptr, ptr @"Builtins::listFilled:10", align 8
  call void @free_candy_value(ptr %5412)
  %5413 = load ptr, ptr @"Builtins::listFilled:17", align 8
  call void @free_candy_value(ptr %5413)
  %5414 = load ptr, ptr @"Builtins::listFilled:5", align 8
  call void @free_candy_value(ptr %5414)
  %5415 = load ptr, ptr @"Builtins::listFilled:8", align 8
  call void @free_candy_value(ptr %5415)
  %5416 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %5416)
  %5417 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %5417)
  %5418 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %5418)
  %5419 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %5419)
  %5420 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %5420)
  %5421 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %5421)
  %5422 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %5422)
  %5423 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %5423)
  %5424 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %5424)
  %5425 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %5425)
  %5426 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %5426)
  %5427 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %5427)
  %5428 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %5428)
  %5429 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %5429)
  %5430 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %5430)
  %5431 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %5431)
  %5432 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %5432)
  %5433 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %5433)
  %5434 = load ptr, ptr @"Builtins::listRemoveAt:11", align 8
  call void @free_candy_value(ptr %5434)
  %5435 = load ptr, ptr @"Builtins::listRemoveAt:14", align 8
  call void @free_candy_value(ptr %5435)
  %5436 = load ptr, ptr @"Builtins::listRemoveAt:16", align 8
  call void @free_candy_value(ptr %5436)
  %5437 = load ptr, ptr @"Builtins::listRemoveAt:21", align 8
  call void @free_candy_value(ptr %5437)
  %5438 = load ptr, ptr @"Builtins::listRemoveAt:22", align 8
  call void @free_candy_value(ptr %5438)
  %5439 = load ptr, ptr @"Builtins::listRemoveAt:27", align 8
  call void @free_candy_value(ptr %5439)
  %5440 = load ptr, ptr @"Builtins::listRemoveAt:34", align 8
  call void @free_candy_value(ptr %5440)
  %5441 = load ptr, ptr @"Builtins::listRemoveAt:5", align 8
  call void @free_candy_value(ptr %5441)
  %5442 = load ptr, ptr @"Builtins::listReplace:11", align 8
  call void @free_candy_value(ptr %5442)
  %5443 = load ptr, ptr @"Builtins::listReplace:14", align 8
  call void @free_candy_value(ptr %5443)
  %5444 = load ptr, ptr @"Builtins::listReplace:16", align 8
  call void @free_candy_value(ptr %5444)
  %5445 = load ptr, ptr @"Builtins::listReplace:21", align 8
  call void @free_candy_value(ptr %5445)
  %5446 = load ptr, ptr @"Builtins::listReplace:22", align 8
  call void @free_candy_value(ptr %5446)
  %5447 = load ptr, ptr @"Builtins::listReplace:27", align 8
  call void @free_candy_value(ptr %5447)
  %5448 = load ptr, ptr @"Builtins::listReplace:35", align 8
  call void @free_candy_value(ptr %5448)
  %5449 = load ptr, ptr @"Builtins::listReplace:5", align 8
  call void @free_candy_value(ptr %5449)
  %5450 = load ptr, ptr @"Builtins::not:1", align 8
  call void @free_candy_value(ptr %5450)
  %5451 = load ptr, ptr @"Builtins::print:11", align 8
  call void @free_candy_value(ptr %5451)
  %5452 = load ptr, ptr @"Builtins::print:5", align 8
  call void @free_candy_value(ptr %5452)
  %5453 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %5453)
  %5454 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %5454)
  %5455 = load ptr, ptr @"Builtins::structGet:22", align 8
  call void @free_candy_value(ptr %5455)
  %5456 = load ptr, ptr @"Builtins::structGet:24:0", align 8
  call void @free_candy_value(ptr %5456)
  %5457 = load ptr, ptr @"Builtins::structGet:25", align 8
  call void @free_candy_value(ptr %5457)
  %5458 = load ptr, ptr @"Builtins::structGet:28", align 8
  call void @free_candy_value(ptr %5458)
  %5459 = load ptr, ptr @"Builtins::structGet:29", align 8
  call void @free_candy_value(ptr %5459)
  %5460 = load ptr, ptr @"Builtins::structGet:31:0", align 8
  call void @free_candy_value(ptr %5460)
  %5461 = load ptr, ptr @"Builtins::structGet:32", align 8
  call void @free_candy_value(ptr %5461)
  %5462 = load ptr, ptr @"Builtins::structGet:34", align 8
  call void @free_candy_value(ptr %5462)
  %5463 = load ptr, ptr @"Builtins::structGet:35", align 8
  call void @free_candy_value(ptr %5463)
  %5464 = load ptr, ptr @"Builtins::structGet:36", align 8
  call void @free_candy_value(ptr %5464)
  %5465 = load ptr, ptr @"Builtins::structGet:37", align 8
  call void @free_candy_value(ptr %5465)
  %5466 = load ptr, ptr @"Builtins::structGet:38", align 8
  call void @free_candy_value(ptr %5466)
  %5467 = load ptr, ptr @"Builtins::structGet:45", align 8
  call void @free_candy_value(ptr %5467)
  %5468 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %5468)
  %5469 = load ptr, ptr @"Builtins::structGetKeys:11", align 8
  call void @free_candy_value(ptr %5469)
  %5470 = load ptr, ptr @"Builtins::structGetKeys:5", align 8
  call void @free_candy_value(ptr %5470)
  %5471 = load ptr, ptr @"Builtins::structHasKey:12", align 8
  call void @free_candy_value(ptr %5471)
  %5472 = load ptr, ptr @"Builtins::structHasKey:5", align 8
  call void @free_candy_value(ptr %5472)
  %5473 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %5473)
  %5474 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %5474)
  %5475 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %5475)
  %5476 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %5476)
  %5477 = load ptr, ptr @"Builtins::tagHasValue:11", align 8
  call void @free_candy_value(ptr %5477)
  %5478 = load ptr, ptr @"Builtins::tagHasValue:5", align 8
  call void @free_candy_value(ptr %5478)
  %5479 = load ptr, ptr @"Builtins::tagWithoutValue:11", align 8
  call void @free_candy_value(ptr %5479)
  %5480 = load ptr, ptr @"Builtins::tagWithoutValue:5", align 8
  call void @free_candy_value(ptr %5480)
  %5481 = load ptr, ptr @"Builtins::textCharacters:11", align 8
  call void @free_candy_value(ptr %5481)
  %5482 = load ptr, ptr @"Builtins::textCharacters:5", align 8
  call void @free_candy_value(ptr %5482)
  %5483 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %5483)
  %5484 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %5484)
  %5485 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %5485)
  %5486 = load ptr, ptr @"Builtins::textContains:11", align 8
  call void @free_candy_value(ptr %5486)
  %5487 = load ptr, ptr @"Builtins::textContains:18", align 8
  call void @free_candy_value(ptr %5487)
  %5488 = load ptr, ptr @"Builtins::textContains:5", align 8
  call void @free_candy_value(ptr %5488)
  %5489 = load ptr, ptr @"Builtins::textEndsWith:11", align 8
  call void @free_candy_value(ptr %5489)
  %5490 = load ptr, ptr @"Builtins::textEndsWith:18", align 8
  call void @free_candy_value(ptr %5490)
  %5491 = load ptr, ptr @"Builtins::textEndsWith:5", align 8
  call void @free_candy_value(ptr %5491)
  %5492 = load ptr, ptr @"Builtins::textFromUtf8:11", align 8
  call void @free_candy_value(ptr %5492)
  %5493 = load ptr, ptr @"Builtins::textFromUtf8:5", align 8
  call void @free_candy_value(ptr %5493)
  %5494 = load ptr, ptr @"Builtins::textGetRange:11", align 8
  call void @free_candy_value(ptr %5494)
  %5495 = load ptr, ptr @"Builtins::textGetRange:14", align 8
  call void @free_candy_value(ptr %5495)
  %5496 = load ptr, ptr @"Builtins::textGetRange:16", align 8
  call void @free_candy_value(ptr %5496)
  %5497 = load ptr, ptr @"Builtins::textGetRange:24", align 8
  call void @free_candy_value(ptr %5497)
  %5498 = load ptr, ptr @"Builtins::textGetRange:25", align 8
  call void @free_candy_value(ptr %5498)
  %5499 = load ptr, ptr @"Builtins::textGetRange:27", align 8
  call void @free_candy_value(ptr %5499)
  %5500 = load ptr, ptr @"Builtins::textGetRange:33", align 8
  call void @free_candy_value(ptr %5500)
  %5501 = load ptr, ptr @"Builtins::textGetRange:36", align 8
  call void @free_candy_value(ptr %5501)
  %5502 = load ptr, ptr @"Builtins::textGetRange:38", align 8
  call void @free_candy_value(ptr %5502)
  %5503 = load ptr, ptr @"Builtins::textGetRange:46", align 8
  call void @free_candy_value(ptr %5503)
  %5504 = load ptr, ptr @"Builtins::textGetRange:47", align 8
  call void @free_candy_value(ptr %5504)
  %5505 = load ptr, ptr @"Builtins::textGetRange:49", align 8
  call void @free_candy_value(ptr %5505)
  %5506 = load ptr, ptr @"Builtins::textGetRange:5", align 8
  call void @free_candy_value(ptr %5506)
  %5507 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  call void @free_candy_value(ptr %5507)
  %5508 = load ptr, ptr @"Builtins::textGetRange:55", align 8
  call void @free_candy_value(ptr %5508)
  %5509 = load ptr, ptr @"Builtins::textGetRange:63", align 8
  call void @free_candy_value(ptr %5509)
  %5510 = load ptr, ptr @"Builtins::textIsEmpty:11", align 8
  call void @free_candy_value(ptr %5510)
  %5511 = load ptr, ptr @"Builtins::textIsEmpty:5", align 8
  call void @free_candy_value(ptr %5511)
  %5512 = load ptr, ptr @"Builtins::textLength:11", align 8
  call void @free_candy_value(ptr %5512)
  %5513 = load ptr, ptr @"Builtins::textLength:5", align 8
  call void @free_candy_value(ptr %5513)
  %5514 = load ptr, ptr @"Builtins::textStartsWith:11", align 8
  call void @free_candy_value(ptr %5514)
  %5515 = load ptr, ptr @"Builtins::textStartsWith:18", align 8
  call void @free_candy_value(ptr %5515)
  %5516 = load ptr, ptr @"Builtins::textStartsWith:5", align 8
  call void @free_candy_value(ptr %5516)
  %5517 = load ptr, ptr @"Builtins::textTrimEnd:11", align 8
  call void @free_candy_value(ptr %5517)
  %5518 = load ptr, ptr @"Builtins::textTrimEnd:5", align 8
  call void @free_candy_value(ptr %5518)
  %5519 = load ptr, ptr @"Builtins::textTrimStart:11", align 8
  call void @free_candy_value(ptr %5519)
  %5520 = load ptr, ptr @"Builtins::textTrimStart:5", align 8
  call void @free_candy_value(ptr %5520)
  %5521 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %5521)
  %5522 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %5522)
  %5523 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %5523)
  %5524 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %5524)
  %5525 = load ptr, ptr @"Core:equality:17", align 8
  call void @free_candy_value(ptr %5525)
  %5526 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %5526)
  %5527 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %5527)
  %5528 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %5528)
  %5529 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %5529)
  %5530 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %5530)
  %5531 = load ptr, ptr @fun_candy_builtin_int_bit_length, align 8
  call void @free_candy_value(ptr %5531)
  %5532 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %5532)
  %5533 = load ptr, ptr @fun_candy_builtin_int_bitwise_or, align 8
  call void @free_candy_value(ptr %5533)
  %5534 = load ptr, ptr @fun_candy_builtin_int_bitwise_xor, align 8
  call void @free_candy_value(ptr %5534)
  %5535 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %5535)
  %5536 = load ptr, ptr @fun_candy_builtin_int_divide_truncating, align 8
  call void @free_candy_value(ptr %5536)
  %5537 = load ptr, ptr @fun_candy_builtin_int_modulo, align 8
  call void @free_candy_value(ptr %5537)
  %5538 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %5538)
  %5539 = load ptr, ptr @fun_candy_builtin_int_parse, align 8
  call void @free_candy_value(ptr %5539)
  %5540 = load ptr, ptr @fun_candy_builtin_int_remainder, align 8
  call void @free_candy_value(ptr %5540)
  %5541 = load ptr, ptr @fun_candy_builtin_int_shift_left, align 8
  call void @free_candy_value(ptr %5541)
  %5542 = load ptr, ptr @fun_candy_builtin_int_shift_right, align 8
  call void @free_candy_value(ptr %5542)
  %5543 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %5543)
  %5544 = load ptr, ptr @fun_candy_builtin_list_filled, align 8
  call void @free_candy_value(ptr %5544)
  %5545 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %5545)
  %5546 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %5546)
  %5547 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %5547)
  %5548 = load ptr, ptr @fun_candy_builtin_list_remove_at, align 8
  call void @free_candy_value(ptr %5548)
  %5549 = load ptr, ptr @fun_candy_builtin_list_replace, align 8
  call void @free_candy_value(ptr %5549)
  %5550 = load ptr, ptr @fun_candy_builtin_print, align 8
  call void @free_candy_value(ptr %5550)
  %5551 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %5551)
  %5552 = load ptr, ptr @fun_candy_builtin_struct_get_keys, align 8
  call void @free_candy_value(ptr %5552)
  %5553 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %5553)
  %5554 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %5554)
  %5555 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %5555)
  %5556 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %5556)
  %5557 = load ptr, ptr @fun_candy_builtin_text_characters, align 8
  call void @free_candy_value(ptr %5557)
  %5558 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %5558)
  %5559 = load ptr, ptr @fun_candy_builtin_text_contains, align 8
  call void @free_candy_value(ptr %5559)
  %5560 = load ptr, ptr @fun_candy_builtin_text_ends_with, align 8
  call void @free_candy_value(ptr %5560)
  %5561 = load ptr, ptr @fun_candy_builtin_text_from_utf8, align 8
  call void @free_candy_value(ptr %5561)
  %5562 = load ptr, ptr @fun_candy_builtin_text_get_range, align 8
  call void @free_candy_value(ptr %5562)
  %5563 = load ptr, ptr @fun_candy_builtin_text_is_empty, align 8
  call void @free_candy_value(ptr %5563)
  %5564 = load ptr, ptr @fun_candy_builtin_text_length, align 8
  call void @free_candy_value(ptr %5564)
  %5565 = load ptr, ptr @fun_candy_builtin_text_starts_with, align 8
  call void @free_candy_value(ptr %5565)
  %5566 = load ptr, ptr @fun_candy_builtin_text_trim_end, align 8
  call void @free_candy_value(ptr %5566)
  %5567 = load ptr, ptr @fun_candy_builtin_text_trim_start, align 8
  call void @free_candy_value(ptr %5567)
  %5568 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %5568)
  %5569 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %5569)
  %5570 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %5570)
  %5571 = load ptr, ptr @tag_Equals, align 8
  call void @free_candy_value(ptr %5571)
  %5572 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %5572)
  %5573 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %5573)
  %5574 = load ptr, ptr @tag_FunctionRun, align 8
  call void @free_candy_value(ptr %5574)
  %5575 = load ptr, ptr @tag_GetArgumentCount, align 8
  call void @free_candy_value(ptr %5575)
  %5576 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %5576)
  %5577 = load ptr, ptr @tag_IfElse, align 8
  call void @free_candy_value(ptr %5577)
  %5578 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %5578)
  %5579 = load ptr, ptr @tag_IntAdd, align 8
  call void @free_candy_value(ptr %5579)
  %5580 = load ptr, ptr @tag_IntBitLength, align 8
  call void @free_candy_value(ptr %5580)
  %5581 = load ptr, ptr @tag_IntBitwiseAnd, align 8
  call void @free_candy_value(ptr %5581)
  %5582 = load ptr, ptr @tag_IntBitwiseOr, align 8
  call void @free_candy_value(ptr %5582)
  %5583 = load ptr, ptr @tag_IntBitwiseXor, align 8
  call void @free_candy_value(ptr %5583)
  %5584 = load ptr, ptr @tag_IntCompareTo, align 8
  call void @free_candy_value(ptr %5584)
  %5585 = load ptr, ptr @tag_IntDivideTruncating, align 8
  call void @free_candy_value(ptr %5585)
  %5586 = load ptr, ptr @tag_IntModulo, align 8
  call void @free_candy_value(ptr %5586)
  %5587 = load ptr, ptr @tag_IntMultiply, align 8
  call void @free_candy_value(ptr %5587)
  %5588 = load ptr, ptr @tag_IntParse, align 8
  call void @free_candy_value(ptr %5588)
  %5589 = load ptr, ptr @tag_IntRemainder, align 8
  call void @free_candy_value(ptr %5589)
  %5590 = load ptr, ptr @tag_IntShiftLeft, align 8
  call void @free_candy_value(ptr %5590)
  %5591 = load ptr, ptr @tag_IntShiftRight, align 8
  call void @free_candy_value(ptr %5591)
  %5592 = load ptr, ptr @tag_IntSubtract, align 8
  call void @free_candy_value(ptr %5592)
  %5593 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %5593)
  %5594 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %5594)
  %5595 = load ptr, ptr @tag_ListFilled, align 8
  call void @free_candy_value(ptr %5595)
  %5596 = load ptr, ptr @tag_ListGet, align 8
  call void @free_candy_value(ptr %5596)
  %5597 = load ptr, ptr @tag_ListInsert, align 8
  call void @free_candy_value(ptr %5597)
  %5598 = load ptr, ptr @tag_ListLength, align 8
  call void @free_candy_value(ptr %5598)
  %5599 = load ptr, ptr @tag_ListRemoveAt, align 8
  call void @free_candy_value(ptr %5599)
  %5600 = load ptr, ptr @tag_ListReplace, align 8
  call void @free_candy_value(ptr %5600)
  %5601 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %5601)
  %5602 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %5602)
  %5603 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %5603)
  %5604 = load ptr, ptr @tag_Print, align 8
  call void @free_candy_value(ptr %5604)
  %5605 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %5605)
  %5606 = load ptr, ptr @tag_StructGet, align 8
  call void @free_candy_value(ptr %5606)
  %5607 = load ptr, ptr @tag_StructGetKeys, align 8
  call void @free_candy_value(ptr %5607)
  %5608 = load ptr, ptr @tag_StructHasKey, align 8
  call void @free_candy_value(ptr %5608)
  %5609 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %5609)
  %5610 = load ptr, ptr @tag_TagGetValue, align 8
  call void @free_candy_value(ptr %5610)
  %5611 = load ptr, ptr @tag_TagHasValue, align 8
  call void @free_candy_value(ptr %5611)
  %5612 = load ptr, ptr @tag_TagWithoutValue, align 8
  call void @free_candy_value(ptr %5612)
  %5613 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %5613)
  %5614 = load ptr, ptr @tag_TextCharacters, align 8
  call void @free_candy_value(ptr %5614)
  %5615 = load ptr, ptr @tag_TextConcatenate, align 8
  call void @free_candy_value(ptr %5615)
  %5616 = load ptr, ptr @tag_TextContains, align 8
  call void @free_candy_value(ptr %5616)
  %5617 = load ptr, ptr @tag_TextEndsWith, align 8
  call void @free_candy_value(ptr %5617)
  %5618 = load ptr, ptr @tag_TextFromUtf8, align 8
  call void @free_candy_value(ptr %5618)
  %5619 = load ptr, ptr @tag_TextGetRange, align 8
  call void @free_candy_value(ptr %5619)
  %5620 = load ptr, ptr @tag_TextIsEmpty, align 8
  call void @free_candy_value(ptr %5620)
  %5621 = load ptr, ptr @tag_TextLength, align 8
  call void @free_candy_value(ptr %5621)
  %5622 = load ptr, ptr @tag_TextStartsWith, align 8
  call void @free_candy_value(ptr %5622)
  %5623 = load ptr, ptr @tag_TextTrimEnd, align 8
  call void @free_candy_value(ptr %5623)
  %5624 = load ptr, ptr @tag_TextTrimStart, align 8
  call void @free_candy_value(ptr %5624)
  %5625 = load ptr, ptr @tag_ToDebugText, align 8
  call void @free_candy_value(ptr %5625)
  %5626 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %5626)
  %5627 = load ptr, ptr @tag_TypeOf, align 8
  call void @free_candy_value(ptr %5627)
  %5628 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %5628)
  %5629 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %5629)
  %5630 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  call void @free_candy_value(ptr %5630)
  %5631 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %5631)
  %5632 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  call void @free_candy_value(ptr %5632)
  %5633 = load ptr, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  call void @free_candy_value(ptr %5633)
  %5634 = load ptr, ptr @"text_Expected Equal, got ", align 8
  call void @free_candy_value(ptr %5634)
  %5635 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %5635)
  %5636 = load ptr, ptr @"text_Expected Greater, got ", align 8
  call void @free_candy_value(ptr %5636)
  %5637 = load ptr, ptr @"text_Expected Less, got ", align 8
  call void @free_candy_value(ptr %5637)
  %5638 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %5638)
  %5639 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %5639)
  %5640 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %5640)
  %5641 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %5641)
  %5642 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  call void @free_candy_value(ptr %5642)
  %5643 = load ptr, ptr @"text_Struct `", align 8
  call void @free_candy_value(ptr %5643)
  %5644 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %5644)
  %5645 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %5645)
  %5646 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  call void @free_candy_value(ptr %5646)
  %5647 = load ptr, ptr @"text_You can't divide by zero.", align 8
  call void @free_candy_value(ptr %5647)
  %5648 = load ptr, ptr @"text_` is missing the key `", align 8
  call void @free_candy_value(ptr %5648)
  %5649 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %5649)
  %5650 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @free_candy_value(ptr %5650)
  %5651 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5651)
  %5652 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %5652)
  %5653 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5653)
  %5654 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5654)
  %5655 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %5655)
  %5656 = load ptr, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %5656)
  %5657 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %5657)
  %5658 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5658)
  %5659 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5659)
  %5660 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %5660)
  %5661 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %5661)
  %5662 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %5662)
  %5663 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %5663)
  %5664 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5664)
  %5665 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5665)
  %5666 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5666)
  %5667 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %5667)
  %5668 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %5668)
  %5669 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %5669)
  %5670 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %5670)
  %5671 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %5671)
  %5672 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %5672)
  %5673 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5673)
  %5674 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5674)
  %5675 = load ptr, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %5675)
  %5676 = load ptr, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5676)
  %5677 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %5677)
  %5678 = load ptr, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %5678)
  %5679 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5679)
  %5680 = load ptr, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %5680)
  %5681 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %5681)
  %5682 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %5682)
  %5683 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %5683)
  %5684 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %5684)
  %5685 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5685)
  %5686 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %5686)
  %5687 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5687)
  %5688 = load ptr, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %5688)
  %5689 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %5689)
  %5690 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %5690)
  %5691 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %5691)
  %5692 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %5692)
  %5693 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %5693)
  %5694 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %5694)
  %5695 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5695)
  %5696 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %5696)
  %5697 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %5697)
  %5698 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %5698)
  %5699 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %5699)
  %5700 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %5700)
  %5701 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %5701)
  %5702 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %5702)
  %5703 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %5703)
  %5704 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  call void @free_candy_value(ptr %5704)
  %5705 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %5705)
  %5706 = load ptr, ptr @fun_Builtins__not, align 8
  call void @free_candy_value(ptr %5706)
  %5707 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  call void @free_candy_value(ptr %5707)
  %5708 = load ptr, ptr @fun_Builtins__not_1_equals_then.3, align 8
  call void @free_candy_value(ptr %5708)
  %5709 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  call void @free_candy_value(ptr %5709)
  %5710 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %5710)
  %5711 = load ptr, ptr @fun_Builtins__not_1_equals_else.5, align 8
  call void @free_candy_value(ptr %5711)
  %5712 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %5712)
  %5713 = load ptr, ptr @fun_Builtins__not_1_equals_else.7, align 8
  call void @free_candy_value(ptr %5713)
  %5714 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %5714)
  %5715 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5715)
  %5716 = load ptr, ptr @fun_Builtins__not_1_equals_then.9, align 8
  call void @free_candy_value(ptr %5716)
  %5717 = load ptr, ptr @fun_Builtins__not_1_equals_then.11, align 8
  call void @free_candy_value(ptr %5717)
  %5718 = load ptr, ptr @fun_Builtins__not_1_equals_else.13, align 8
  call void @free_candy_value(ptr %5718)
  %5719 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %5719)
  %5720 = load ptr, ptr @fun_Builtins__not_1_equals_else.15, align 8
  call void @free_candy_value(ptr %5720)
  %5721 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %5721)
  %5722 = load ptr, ptr @fun_Builtins__not_1_equals_else.17, align 8
  call void @free_candy_value(ptr %5722)
  %5723 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %5723)
  %5724 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5724)
  %5725 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %5725)
  %5726 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  call void @free_candy_value(ptr %5726)
  %5727 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  call void @free_candy_value(ptr %5727)
  %5728 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %5728)
  %5729 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %5729)
  %5730 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  call void @free_candy_value(ptr %5730)
  %5731 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %5731)
  %5732 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %5732)
  %5733 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %5733)
  %5734 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.23, align 8
  call void @free_candy_value(ptr %5734)
  %5735 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  call void @free_candy_value(ptr %5735)
  %5736 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  call void @free_candy_value(ptr %5736)
  %5737 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %5737)
  %5738 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  call void @free_candy_value(ptr %5738)
  %5739 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %5739)
  %5740 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5740)
  %5741 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.31, align 8
  call void @free_candy_value(ptr %5741)
  %5742 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  call void @free_candy_value(ptr %5742)
  %5743 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  call void @free_candy_value(ptr %5743)
  %5744 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %5744)
  %5745 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  call void @free_candy_value(ptr %5745)
  %5746 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %5746)
  %5747 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5747)
  %5748 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %5748)
  %5749 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  call void @free_candy_value(ptr %5749)
  %5750 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  call void @free_candy_value(ptr %5750)
  %5751 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %5751)
  %5752 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %5752)
  %5753 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  call void @free_candy_value(ptr %5753)
  %5754 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %5754)
  %5755 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %5755)
  %5756 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %5756)
  %5757 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43, align 8
  call void @free_candy_value(ptr %5757)
  %5758 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  call void @free_candy_value(ptr %5758)
  %5759 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  call void @free_candy_value(ptr %5759)
  %5760 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %5760)
  %5761 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  call void @free_candy_value(ptr %5761)
  %5762 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %5762)
  %5763 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5763)
  %5764 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51, align 8
  call void @free_candy_value(ptr %5764)
  %5765 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  call void @free_candy_value(ptr %5765)
  %5766 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  call void @free_candy_value(ptr %5766)
  %5767 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %5767)
  %5768 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  call void @free_candy_value(ptr %5768)
  %5769 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %5769)
  %5770 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5770)
  %5771 = load ptr, ptr @fun_Builtins__equals, align 8
  call void @free_candy_value(ptr %5771)
  %5772 = load ptr, ptr @fun_Builtins__functionRun, align 8
  call void @free_candy_value(ptr %5772)
  %5773 = load ptr, ptr @fun_Builtins__getArgumentCount, align 8
  call void @free_candy_value(ptr %5773)
  %5774 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %5774)
  %5775 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %5775)
  %5776 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  call void @free_candy_value(ptr %5776)
  %5777 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %5777)
  %5778 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %5778)
  %5779 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  call void @free_candy_value(ptr %5779)
  %5780 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %5780)
  %5781 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  call void @free_candy_value(ptr %5781)
  %5782 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %5782)
  %5783 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %5783)
  %5784 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %5784)
  %5785 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  call void @free_candy_value(ptr %5785)
  %5786 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  call void @free_candy_value(ptr %5786)
  %5787 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  call void @free_candy_value(ptr %5787)
  %5788 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %5788)
  %5789 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  call void @free_candy_value(ptr %5789)
  %5790 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %5790)
  %5791 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  call void @free_candy_value(ptr %5791)
  %5792 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %5792)
  %5793 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5793)
  %5794 = load ptr, ptr @fun_Builtins__intAdd, align 8
  call void @free_candy_value(ptr %5794)
  %5795 = load ptr, ptr @fun_Builtins__intBitLength, align 8
  call void @free_candy_value(ptr %5795)
  %5796 = load ptr, ptr @fun_Builtins__intBitwiseAnd, align 8
  call void @free_candy_value(ptr %5796)
  %5797 = load ptr, ptr @fun_Builtins__intBitwiseOr, align 8
  call void @free_candy_value(ptr %5797)
  %5798 = load ptr, ptr @fun_Builtins__intBitwiseXor, align 8
  call void @free_candy_value(ptr %5798)
  %5799 = load ptr, ptr @fun_Builtins__intCompareTo, align 8
  call void @free_candy_value(ptr %5799)
  %5800 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  call void @free_candy_value(ptr %5800)
  %5801 = load ptr, ptr @fun_Builtins__intModulo, align 8
  call void @free_candy_value(ptr %5801)
  %5802 = load ptr, ptr @fun_Builtins__intMultiply, align 8
  call void @free_candy_value(ptr %5802)
  %5803 = load ptr, ptr @fun_Builtins__intParse, align 8
  call void @free_candy_value(ptr %5803)
  %5804 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  call void @free_candy_value(ptr %5804)
  %5805 = load ptr, ptr @fun_Builtins__intShiftLeft, align 8
  call void @free_candy_value(ptr %5805)
  %5806 = load ptr, ptr @fun_Builtins__intShiftLeft_25, align 8
  call void @free_candy_value(ptr %5806)
  %5807 = load ptr, ptr @fun_Builtins__intShiftLeft_26, align 8
  call void @free_candy_value(ptr %5807)
  %5808 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  call void @free_candy_value(ptr %5808)
  %5809 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  call void @free_candy_value(ptr %5809)
  %5810 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  call void @free_candy_value(ptr %5810)
  %5811 = load ptr, ptr @fun_Builtins__intSubtract, align 8
  call void @free_candy_value(ptr %5811)
  %5812 = load ptr, ptr @fun_Builtins__listFilled, align 8
  call void @free_candy_value(ptr %5812)
  %5813 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %5813)
  %5814 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %5814)
  %5815 = load ptr, ptr @fun_Builtins__listLength, align 8
  call void @free_candy_value(ptr %5815)
  %5816 = load ptr, ptr @fun_Builtins__listRemoveAt, align 8
  call void @free_candy_value(ptr %5816)
  %5817 = load ptr, ptr @fun_Builtins__listReplace, align 8
  call void @free_candy_value(ptr %5817)
  %5818 = load ptr, ptr @fun_Builtins__print, align 8
  call void @free_candy_value(ptr %5818)
  %5819 = load ptr, ptr @fun_Builtins__structGet, align 8
  call void @free_candy_value(ptr %5819)
  %5820 = load ptr, ptr @fun_Builtins__structGet_23, align 8
  call void @free_candy_value(ptr %5820)
  %5821 = load ptr, ptr @fun_Builtins__structGet_24, align 8
  call void @free_candy_value(ptr %5821)
  %5822 = load ptr, ptr @fun_Builtins__structGet_30, align 8
  call void @free_candy_value(ptr %5822)
  %5823 = load ptr, ptr @fun_Builtins__structGet_31, align 8
  call void @free_candy_value(ptr %5823)
  %5824 = load ptr, ptr @fun_Builtins__structGetKeys, align 8
  call void @free_candy_value(ptr %5824)
  %5825 = load ptr, ptr @fun_Builtins__structHasKey, align 8
  call void @free_candy_value(ptr %5825)
  %5826 = load ptr, ptr @fun_Builtins__tagGetValue, align 8
  call void @free_candy_value(ptr %5826)
  %5827 = load ptr, ptr @fun_Builtins__tagHasValue, align 8
  call void @free_candy_value(ptr %5827)
  %5828 = load ptr, ptr @fun_Builtins__tagWithoutValue, align 8
  call void @free_candy_value(ptr %5828)
  %5829 = load ptr, ptr @fun_Builtins__textCharacters, align 8
  call void @free_candy_value(ptr %5829)
  %5830 = load ptr, ptr @fun_Builtins__textConcatenate, align 8
  call void @free_candy_value(ptr %5830)
  %5831 = load ptr, ptr @fun_Builtins__textContains, align 8
  call void @free_candy_value(ptr %5831)
  %5832 = load ptr, ptr @fun_Builtins__textEndsWith, align 8
  call void @free_candy_value(ptr %5832)
  %5833 = load ptr, ptr @fun_Builtins__textFromUtf8, align 8
  call void @free_candy_value(ptr %5833)
  %5834 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  call void @free_candy_value(ptr %5834)
  %5835 = load ptr, ptr @fun_Builtins__textIsEmpty, align 8
  call void @free_candy_value(ptr %5835)
  %5836 = load ptr, ptr @fun_Builtins__textLength, align 8
  call void @free_candy_value(ptr %5836)
  %5837 = load ptr, ptr @fun_Builtins__textStartsWith, align 8
  call void @free_candy_value(ptr %5837)
  %5838 = load ptr, ptr @fun_Builtins__textTrimEnd, align 8
  call void @free_candy_value(ptr %5838)
  %5839 = load ptr, ptr @fun_Builtins__textTrimStart, align 8
  call void @free_candy_value(ptr %5839)
  %5840 = load ptr, ptr @fun_Builtins__toDebugText, align 8
  call void @free_candy_value(ptr %5840)
  %5841 = load ptr, ptr @fun_Builtins__typeOf, align 8
  call void @free_candy_value(ptr %5841)
  %5842 = load ptr, ptr @"Core:type:28", align 8
  call void @free_candy_value(ptr %5842)
  %5843 = load ptr, ptr @"Core:type:is:2", align 8
  call void @free_candy_value(ptr %5843)
  %5844 = load ptr, ptr @"Core:type:is:5", align 8
  call void @free_candy_value(ptr %5844)
  %5845 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %5845)
  %5846 = load ptr, ptr @"Core:type:is:7", align 8
  call void @free_candy_value(ptr %5846)
  %5847 = load ptr, ptr @"Core:type:is:11", align 8
  call void @free_candy_value(ptr %5847)
  %5848 = load ptr, ptr @"Core:type:is:13", align 8
  call void @free_candy_value(ptr %5848)
  %5849 = load ptr, ptr @tag_Is, align 8
  call void @free_candy_value(ptr %5849)
  %5850 = load ptr, ptr @"Core:function:is:7", align 8
  call void @free_candy_value(ptr %5850)
  %5851 = load ptr, ptr @"Core:function:is:10", align 8
  call void @free_candy_value(ptr %5851)
  %5852 = load ptr, ptr @"Core:function:38", align 8
  call void @free_candy_value(ptr %5852)
  %5853 = load ptr, ptr @"Core:function:is0:7", align 8
  call void @free_candy_value(ptr %5853)
  %5854 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %5854)
  %5855 = load ptr, ptr @"Core:function:is0:11:5", align 8
  call void @free_candy_value(ptr %5855)
  %5856 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %5856)
  %5857 = load ptr, ptr @"Core:function:is1:7", align 8
  call void @free_candy_value(ptr %5857)
  %5858 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %5858)
  %5859 = load ptr, ptr @"Core:function:is1:11:5", align 8
  call void @free_candy_value(ptr %5859)
  %5860 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %5860)
  %5861 = load ptr, ptr @"Core:function:is2:7", align 8
  call void @free_candy_value(ptr %5861)
  %5862 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %5862)
  %5863 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %5863)
  %5864 = load ptr, ptr @"Core:function:is2:11:5", align 8
  call void @free_candy_value(ptr %5864)
  %5865 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %5865)
  %5866 = load ptr, ptr @"Core:function:is3:7", align 8
  call void @free_candy_value(ptr %5866)
  %5867 = load ptr, ptr @"Core:function:is3:11:3", align 8
  call void @free_candy_value(ptr %5867)
  %5868 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %5868)
  %5869 = load ptr, ptr @"Core:function:is3:11:5", align 8
  call void @free_candy_value(ptr %5869)
  %5870 = load ptr, ptr @"Core:function:is3:13", align 8
  call void @free_candy_value(ptr %5870)
  %5871 = load ptr, ptr @"Core:function:is4:7", align 8
  call void @free_candy_value(ptr %5871)
  %5872 = load ptr, ptr @"Core:function:is4:11:3", align 8
  call void @free_candy_value(ptr %5872)
  %5873 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %5873)
  %5874 = load ptr, ptr @"Core:function:is4:11:5", align 8
  call void @free_candy_value(ptr %5874)
  %5875 = load ptr, ptr @"Core:function:is4:13", align 8
  call void @free_candy_value(ptr %5875)
  %5876 = load ptr, ptr @"Core:function:is5:7", align 8
  call void @free_candy_value(ptr %5876)
  %5877 = load ptr, ptr @"Core:function:is5:11:3", align 8
  call void @free_candy_value(ptr %5877)
  %5878 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %5878)
  %5879 = load ptr, ptr @"Core:function:is5:11:5", align 8
  call void @free_candy_value(ptr %5879)
  %5880 = load ptr, ptr @"Core:function:is5:13", align 8
  call void @free_candy_value(ptr %5880)
  %5881 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %5881)
  %5882 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %5882)
  %5883 = load ptr, ptr @"Core:function:run:12", align 8
  call void @free_candy_value(ptr %5883)
  %5884 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %5884)
  %5885 = load ptr, ptr @"Core:function:doNotRun:4", align 8
  call void @free_candy_value(ptr %5885)
  %5886 = load ptr, ptr @tag_DoNotRun, align 8
  call void @free_candy_value(ptr %5886)
  %5887 = load ptr, ptr @tag_Is4, align 8
  call void @free_candy_value(ptr %5887)
  %5888 = load ptr, ptr @tag_Is1, align 8
  call void @free_candy_value(ptr %5888)
  %5889 = load ptr, ptr @tag_Run, align 8
  call void @free_candy_value(ptr %5889)
  %5890 = load ptr, ptr @tag_Is0, align 8
  call void @free_candy_value(ptr %5890)
  %5891 = load ptr, ptr @tag_Is3, align 8
  call void @free_candy_value(ptr %5891)
  %5892 = load ptr, ptr @tag_Is2, align 8
  call void @free_candy_value(ptr %5892)
  %5893 = load ptr, ptr @tag_Is5, align 8
  call void @free_candy_value(ptr %5893)
  %5894 = load ptr, ptr @"Core:controlFlow:59", align 8
  call void @free_candy_value(ptr %5894)
  %5895 = load ptr, ptr @"Core:int:72", align 8
  call void @free_candy_value(ptr %5895)
  %5896 = load ptr, ptr @"Core:int:81", align 8
  call void @free_candy_value(ptr %5896)
  %5897 = load ptr, ptr @"Core:int:90", align 8
  call void @free_candy_value(ptr %5897)
  %5898 = load ptr, ptr @"Core:int:99", align 8
  call void @free_candy_value(ptr %5898)
  %5899 = load ptr, ptr @"Core:int:108", align 8
  call void @free_candy_value(ptr %5899)
  %5900 = load ptr, ptr @"Core:int:117", align 8
  call void @free_candy_value(ptr %5900)
  %5901 = load ptr, ptr @"Core:int:126", align 8
  call void @free_candy_value(ptr %5901)
  %5902 = load ptr, ptr @"Core:int:135", align 8
  call void @free_candy_value(ptr %5902)
  %5903 = load ptr, ptr @"Core:int:144", align 8
  call void @free_candy_value(ptr %5903)
  %5904 = load ptr, ptr @"Core:int:153", align 8
  call void @free_candy_value(ptr %5904)
  %5905 = load ptr, ptr @"Core:int:162", align 8
  call void @free_candy_value(ptr %5905)
  %5906 = load ptr, ptr @"Core:int:171", align 8
  call void @free_candy_value(ptr %5906)
  %5907 = load ptr, ptr @"Core:int:180", align 8
  call void @free_candy_value(ptr %5907)
  %5908 = load ptr, ptr @"Core:tag:48", align 8
  call void @free_candy_value(ptr %5908)
  %5909 = load ptr, ptr @"Core:tag:57", align 8
  call void @free_candy_value(ptr %5909)
  %5910 = load ptr, ptr @"Core:tag:66", align 8
  call void @free_candy_value(ptr %5910)
  %5911 = load ptr, ptr @"Core:list:89", align 8
  call void @free_candy_value(ptr %5911)
  %5912 = load ptr, ptr @"Core:list:98", align 8
  call void @free_candy_value(ptr %5912)
  %5913 = load ptr, ptr @"Core:list:107", align 8
  call void @free_candy_value(ptr %5913)
  %5914 = load ptr, ptr @"Core:list:116", align 8
  call void @free_candy_value(ptr %5914)
  %5915 = load ptr, ptr @"Core:list:125", align 8
  call void @free_candy_value(ptr %5915)
  %5916 = load ptr, ptr @"Core:list:134", align 8
  call void @free_candy_value(ptr %5916)
  %5917 = load ptr, ptr @"Core:text:341", align 8
  call void @free_candy_value(ptr %5917)
  %5918 = load ptr, ptr @"Core:text:350", align 8
  call void @free_candy_value(ptr %5918)
  %5919 = load ptr, ptr @"Core:text:359", align 8
  call void @free_candy_value(ptr %5919)
  %5920 = load ptr, ptr @"Core:text:368", align 8
  call void @free_candy_value(ptr %5920)
  %5921 = load ptr, ptr @"Core:text:377", align 8
  call void @free_candy_value(ptr %5921)
  %5922 = load ptr, ptr @"Core:text:386", align 8
  call void @free_candy_value(ptr %5922)
  %5923 = load ptr, ptr @"Core:text:395", align 8
  call void @free_candy_value(ptr %5923)
  %5924 = load ptr, ptr @"Core:text:404", align 8
  call void @free_candy_value(ptr %5924)
  %5925 = load ptr, ptr @"Core:text:413", align 8
  call void @free_candy_value(ptr %5925)
  %5926 = load ptr, ptr @"Core:text:422", align 8
  call void @free_candy_value(ptr %5926)
  %5927 = load ptr, ptr @"Core:text:431", align 8
  call void @free_candy_value(ptr %5927)
  %5928 = load ptr, ptr @fun_Core_type_is, align 8
  call void @free_candy_value(ptr %5928)
  %5929 = load ptr, ptr @fun_Core_function_is, align 8
  call void @free_candy_value(ptr %5929)
  %5930 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %5930)
  %5931 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %5931)
  %5932 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %5932)
  %5933 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %5933)
  %5934 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %5934)
  %5935 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %5935)
  %5936 = load ptr, ptr @fun_Core_function_is3, align 8
  call void @free_candy_value(ptr %5936)
  %5937 = load ptr, ptr @fun_Core_function_is3_11, align 8
  call void @free_candy_value(ptr %5937)
  %5938 = load ptr, ptr @fun_Core_function_is4, align 8
  call void @free_candy_value(ptr %5938)
  %5939 = load ptr, ptr @fun_Core_function_is4_11, align 8
  call void @free_candy_value(ptr %5939)
  %5940 = load ptr, ptr @fun_Core_function_is5, align 8
  call void @free_candy_value(ptr %5940)
  %5941 = load ptr, ptr @fun_Core_function_is5_11, align 8
  call void @free_candy_value(ptr %5941)
  %5942 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %5942)
  %5943 = load ptr, ptr @fun_Core_function_is0_11.75, align 8
  call void @free_candy_value(ptr %5943)
  %5944 = load ptr, ptr @fun_Core_function_doNotRun, align 8
  call void @free_candy_value(ptr %5944)
  %5945 = load ptr, ptr @fun_Core_function_is0_11.77, align 8
  call void @free_candy_value(ptr %5945)
  %5946 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %5946)
  %5947 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  call void @free_candy_value(ptr %5947)
  %5948 = load ptr, ptr @"Examples:echo:11:print:9", align 8
  call void @free_candy_value(ptr %5948)
  %5949 = load ptr, ptr @tag_Stdin, align 8
  call void @free_candy_value(ptr %5949)
  %5950 = load ptr, ptr @"Examples:echo:11:7", align 8
  call void @free_candy_value(ptr %5950)
  %5951 = load ptr, ptr @"text_Hello, world!", align 8
  call void @free_candy_value(ptr %5951)
  %5952 = load ptr, ptr @"Examples:echo:11:25", align 8
  call void @free_candy_value(ptr %5952)
  %5953 = load ptr, ptr @"Examples:echo:11:27", align 8
  call void @free_candy_value(ptr %5953)
  %5954 = load ptr, ptr @"text_Echo:", align 8
  call void @free_candy_value(ptr %5954)
  %5955 = load ptr, ptr @fun_Examples_echo_11, align 8
  call void @free_candy_value(ptr %5955)
  %5956 = load ptr, ptr @tag_Main, align 8
  call void @free_candy_value(ptr %5956)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bit_length(ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_or(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_xor(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_divide_truncating(ptr, ptr)

declare ptr @candy_builtin_int_modulo(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_parse(ptr)

declare ptr @candy_builtin_int_remainder(ptr, ptr)

declare ptr @candy_builtin_int_shift_left(ptr, ptr)

declare ptr @candy_builtin_int_shift_right(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_filled(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_list_remove_at(ptr, ptr)

declare ptr @candy_builtin_list_replace(ptr, ptr, ptr)

declare ptr @candy_builtin_print(ptr)

declare ptr @candy_builtin_struct_get.1(ptr, ptr)

declare ptr @candy_builtin_struct_get_keys(ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_characters(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_text_contains(ptr, ptr)

declare ptr @candy_builtin_text_ends_with(ptr, ptr)

declare ptr @candy_builtin_text_from_utf8(ptr)

declare ptr @candy_builtin_text_get_range(ptr, ptr, ptr)

declare ptr @candy_builtin_text_is_empty(ptr)

declare ptr @candy_builtin_text_length(ptr)

declare ptr @candy_builtin_text_starts_with(ptr, ptr)

declare ptr @candy_builtin_text_trim_end(ptr)

declare ptr @candy_builtin_text_trim_start(ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Cor":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_echo_9_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__not(ptr %0) {
Builtins__not:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Builtins__not_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.6, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__not_1_equals_else.7, align 8
  %10 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Builtins__not_1_equals_else.7, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__not_1_case-0_didNotMatch, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %21 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %22 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %16, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Builtins__not_1_equals_then(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.2, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.3, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.4, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.5, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.3, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.5, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.2(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__not_1_equals_else.4(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__not_1_equals_else.6(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__not_1_case-0_didNotMatch(ptr %0) {
Builtins__not_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.8, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Builtins__not_1_equals_then.9, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.16, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__not_1_equals_else.17, align 8
  %18 = load ptr, ptr @fun_Builtins__not_1_equals_then.9, align 8
  %19 = load ptr, ptr @fun_Builtins__not_1_equals_else.17, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__not_1_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Builtins__not_1_equals_then.8(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.10, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.11, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.14, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.15, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.11, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.15, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.10(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.12, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else.13, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else.13, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else.12(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__not_1_equals_else.14(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__not_1_equals_else.16(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__not_1_case-1_didNotMatch(ptr %0) {
Builtins__not_1_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %7, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then)
  %12 = call ptr @Builtins__isNonNegative_13_equals_then(ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %7, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %29, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Builtins__isNonNegative_13_equals_then(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.18, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.20, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.19, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.18(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__isNonNegative_13_equals_else.20(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.22, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.23, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.23)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.22(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isNonNegative_13_equals_then.22(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.24, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.28, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.25, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.29, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.24(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.26, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.27, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.26(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @9, align 8
  ret ptr @9
}

define ptr @Builtins__isNonNegative_13_equals_else.28(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.30, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_then.31, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.31)
  %11 = call ptr @Builtins__isNonNegative_13_equals_then.30(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isNonNegative_13_equals_then.30(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.32, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.36, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.33, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.37, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.32(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.34, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.35, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.34(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @11, align 8
  ret ptr @11
}

define ptr @Builtins__isNonNegative_13_equals_else.36(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %12, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then)
  %17 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %12, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_0, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %30, ptr %31)
  %33 = load ptr, ptr @tag_Match, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %34, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.38, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.40, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.39, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.41, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.38(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @13, align 8
  ret ptr @13
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.40(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.43)
  %7 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.42(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.44, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.48, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.45, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.49, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.44(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.46, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.47, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.46(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @15, align 8
  ret ptr @15
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.48(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @16, align 8
  ret ptr @16
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.51)
  %11 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.50(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.52, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.56, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.53, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.57, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.52(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.54, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.55, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.54(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @17, align 8
  ret ptr @17
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.56(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__equals(ptr %0, ptr %1) {
Builtins__equals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Builtins__functionRun(ptr %0) {
Builtins__functionRun:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %7 = load ptr, ptr @num_0, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @get_candy_function_pointer(ptr %0)
  %12 = call ptr @get_candy_function_environment(ptr %0)
  %13 = call ptr (...) %11(ptr %12)
  ret ptr %13
}

define ptr @Builtins__getArgumentCount(ptr %0) {
Builtins__getArgumentCount:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_get_argument_count(ptr %0)
  ret ptr %6
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.62, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.63, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_else, anonymous_$generated__needs_isConditionTrue_then", align 8
  %36 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_type_of(ptr %1)
  %41 = load ptr, ptr @tag_Function, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr null)
  %45 = call ptr @candy_builtin_type_of(ptr %1)
  %46 = load ptr, ptr @tag_Function, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %49 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr %49)
  %51 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %52 = load ptr, ptr @num_0, align 8
  %53 = call ptr @candy_builtin_equals(ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %55 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr null)
  %56 = call ptr @candy_builtin_type_of(ptr %2)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr null)
  %61 = call ptr @candy_builtin_type_of(ptr %2)
  %62 = load ptr, ptr @tag_Function, align 8
  %63 = call ptr @candy_builtin_equals(ptr %61, ptr %62)
  %64 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %65 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_equals(ptr %67, ptr %68)
  %70 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %71 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr null)
  %72 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %72
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.58, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.60, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.59, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.61, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.58(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @19, align 8
  ret ptr @19
}

define ptr @Builtins__ifElse_1_equals_else.60(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Builtins__ifElse_1_equals_else.62(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.64, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.72, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.65, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.73, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.64(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.66, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.70, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.67, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.71, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.66(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.68, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.69, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else.68(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @22, align 8
  ret ptr @22
}

define ptr @Builtins__ifElse_1_equals_else.70(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Builtins__ifElse_1_equals_else.72(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Builtins__ifElse_1_case-0_didNotMatch(ptr %0) {
Builtins__ifElse_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Builtins__intAdd(ptr %0, ptr %1) {
Builtins__intAdd:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitLength(ptr %0) {
Builtins__intBitLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_int_bit_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__intBitwiseAnd(ptr %0, ptr %1) {
Builtins__intBitwiseAnd:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitwiseOr(ptr %0, ptr %1) {
Builtins__intBitwiseOr:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_or(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intBitwiseXor(ptr %0, ptr %1) {
Builtins__intBitwiseXor:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_bitwise_xor(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intCompareTo(ptr %0, ptr %1) {
Builtins__intCompareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intDivideTruncating(ptr %0, ptr %1) {
Builtins__intDivideTruncating:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_divide_truncating(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intModulo(ptr %0, ptr %1) {
Builtins__intModulo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_modulo(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intMultiply(ptr %0, ptr %1) {
Builtins__intMultiply:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_multiply(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__intParse(ptr %0) {
Builtins__intParse:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_int_parse(ptr %0)
  ret ptr %6
}

define ptr @Builtins__intRemainder(ptr %0, ptr %1) {
Builtins__intRemainder:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_remainder(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intShiftLeft(ptr %0, ptr %1) {
Builtins__intShiftLeft:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftLeft_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftLeft_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftLeft_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftLeft_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftLeft_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftRight` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftLeft:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_left(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftLeft_25(ptr %0) {
Builtins__intShiftLeft_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftLeft_26(ptr %0) {
Builtins__intShiftLeft_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__intShiftRight(ptr %0, ptr %1) {
Builtins__intShiftRight:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftRight_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftRight_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_right(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftRight_25(ptr %0) {
Builtins__intShiftRight_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftRight_26(ptr %0) {
Builtins__intShiftRight_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__intSubtract(ptr %0, ptr %1) {
Builtins__intSubtract:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_subtract(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__listFilled(ptr %0, ptr %1) {
Builtins__listFilled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`length | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Builtins__isNonNegative(ptr %0)
  %8 = load ptr, ptr @"text_`length | isNonNegative` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @candy_builtin_list_filled(ptr %0, ptr %1)
  ret ptr %10
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_list_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %20
}

define ptr @Builtins__listLength(ptr %0) {
Builtins__listLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_list_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__listRemoveAt(ptr %0, ptr %1) {
Builtins__listRemoveAt:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_type_of(ptr %0)
  %16 = load ptr, ptr @tag_List, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %19 = load ptr, ptr @"Builtins::listRemoveAt:21", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = call ptr @candy_builtin_list_length(ptr %0)
  %22 = call ptr @candy_builtin_type_of(ptr %1)
  %23 = load ptr, ptr @tag_Int, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %26 = load ptr, ptr @"Builtins::listRemoveAt:22", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr %26)
  %28 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %21)
  %29 = load ptr, ptr @tag_Less, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr null)
  %33 = call ptr @candy_builtin_list_remove_at(ptr %0, ptr %1)
  ret ptr %33
}

define ptr @Builtins__listReplace(ptr %0, ptr %1, ptr %2) {
Builtins__listReplace:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_type_of(ptr %0)
  %17 = load ptr, ptr @tag_List, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listReplace:21", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_list_length(ptr %0)
  %23 = call ptr @candy_builtin_type_of(ptr %1)
  %24 = load ptr, ptr @tag_Int, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %27 = load ptr, ptr @"Builtins::listReplace:22", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %22)
  %30 = load ptr, ptr @tag_Less, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`index | intCompareTo (list | listLength) | equals Less` was not satisfied", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr null)
  %34 = call ptr @candy_builtin_list_replace(ptr %0, ptr %1, ptr %2)
  ret ptr %34
}

define ptr @Builtins__print(ptr %0) {
Builtins__print:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`message | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_print(ptr %0)
  ret ptr %6
}

define ptr @Builtins__structGet(ptr %0, ptr %1) {
Builtins__structGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %1)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Text, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__structGet_23, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__structGet_23, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Builtins__structGet_24, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Builtins__structGet_24, align 8
  %17 = load ptr, ptr @fun_Builtins__structGet_23, align 8
  %18 = load ptr, ptr @fun_Builtins__structGet_24, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = call ptr @candy_builtin_type_of(ptr %1)
  %21 = load ptr, ptr @tag_Text, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %24 = getelementptr inbounds { ptr }, ptr %23, i32 0, i32 0
  store ptr %1, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Builtins__structGet_30, ptr %23, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Builtins__structGet_30, align 8
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr }, ptr %26, i32 0, i32 0
  store ptr %1, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Builtins__structGet_31, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Builtins__structGet_31, align 8
  %29 = load ptr, ptr @fun_Builtins__structGet_30, align 8
  %30 = load ptr, ptr @fun_Builtins__structGet_31, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %22, ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_Struct `", align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %32, ptr %19)
  %34 = load ptr, ptr @"text_` is missing the key `", align 8
  %35 = call ptr @candy_builtin_text_concatenate(ptr %33, ptr %34)
  %36 = call ptr @candy_builtin_text_concatenate(ptr %35, ptr %31)
  %37 = load ptr, ptr @"text_`.", align 8
  %38 = call ptr @candy_builtin_text_concatenate(ptr %36, ptr %37)
  %39 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_struct_get.1(ptr %0, ptr %1)
  ret ptr %40
}

define ptr @Builtins__structGet_23(ptr %0) {
Builtins__structGet_23:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__structGet_24(ptr %0) {
Builtins__structGet_24:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__structGet_30(ptr %0) {
Builtins__structGet_30:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__structGet_31(ptr %0) {
Builtins__structGet_31:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__structGetKeys(ptr %0) {
Builtins__structGetKeys:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_struct_get_keys(ptr %0)
  ret ptr %6
}

define ptr @Builtins__structHasKey(ptr %0, ptr %1) {
Builtins__structHasKey:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %1)
  ret ptr %7
}

define ptr @Builtins__tagGetValue(ptr %0) {
Builtins__tagGetValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %7 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @candy_builtin_tag_get_value(ptr %0)
  ret ptr %9
}

define ptr @Builtins__tagHasValue(ptr %0) {
Builtins__tagHasValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_has_value(ptr %0)
  ret ptr %6
}

define ptr @Builtins__tagWithoutValue(ptr %0) {
Builtins__tagWithoutValue:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_tag_without_value(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textCharacters(ptr %0) {
Builtins__textCharacters:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_characters(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textConcatenate(ptr %0, ptr %1) {
Builtins__textConcatenate:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textContains(ptr %0, ptr %1) {
Builtins__textContains:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`pattern | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_contains(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textEndsWith(ptr %0, ptr %1) {
Builtins__textEndsWith:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`suffix | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_ends_with(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textFromUtf8(ptr %0) {
Builtins__textFromUtf8:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`bytes | typeIs List` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_from_utf8(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textGetRange(ptr %0, ptr %1, ptr %2) {
Builtins__textGetRange:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_text_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_type_of(ptr %2)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @Builtins__isNonNegative(ptr %2)
  %26 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_text_length(ptr %0)
  %29 = call ptr @Builtins__isLessThanOrEqualTo(ptr %2, ptr %28)
  %30 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %2)
  %33 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = call ptr @candy_builtin_text_get_range(ptr %0, ptr %1, ptr %2)
  ret ptr %35
}

define ptr @Builtins__textIsEmpty(ptr %0) {
Builtins__textIsEmpty:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_is_empty(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textLength(ptr %0) {
Builtins__textLength:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_length(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textStartsWith(ptr %0, ptr %1) {
Builtins__textStartsWith:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_text_starts_with(ptr %0, ptr %1)
  ret ptr %12
}

define ptr @Builtins__textTrimEnd(ptr %0) {
Builtins__textTrimEnd:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_trim_end(ptr %0)
  ret ptr %6
}

define ptr @Builtins__textTrimStart(ptr %0) {
Builtins__textTrimStart:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_text_trim_start(ptr %0)
  ret ptr %6
}

define ptr @Builtins__toDebugText(ptr %0) {
Builtins__toDebugText:
  %1 = call ptr @candy_builtin_to_debug_text(ptr %0)
  ret ptr %1
}

define ptr @Builtins__typeOf(ptr %0) {
Builtins__typeOf:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  ret ptr %1
}

define ptr @Core_type_is(ptr %0, ptr %1, ptr %2) {
Core_type_is:
  %3 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`typeOf type | equals Tag` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = call ptr @get_candy_function_pointer(ptr %17)
  %19 = call ptr @get_candy_function_environment(ptr %17)
  %20 = call ptr (...) %18(ptr %0, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %2, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @get_candy_function_pointer(ptr %22)
  %24 = call ptr @get_candy_function_environment(ptr %22)
  %25 = call ptr (...) %23(ptr %20, ptr %1, ptr %24)
  ret ptr %25
}

define ptr @Core_function_is(ptr %0, ptr %1) {
Core_function_is:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_Is, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %0, ptr %6, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0(ptr %0, ptr %1) {
Core_function_is0:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1(ptr %0, ptr %1) {
Core_function_is1:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is1_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_1, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is2(ptr %0, ptr %1) {
Core_function_is2:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is2_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_2, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is3(ptr %0, ptr %1) {
Core_function_is3:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is3_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is3_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is3_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is3_11(ptr %0) {
Core_function_is3_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_3, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is4(ptr %0, ptr %1) {
Core_function_is4:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is4_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is4_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is4_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is4_11(ptr %0) {
Core_function_is4_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_4, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is5(ptr %0, ptr %1) {
Core_function_is5:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is5_11, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is5_11, align 8
  %23 = load ptr, ptr @fun_Core_function_is5_11, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  ret ptr %27
}

define ptr @Core_function_is5_11(ptr %0) {
Core_function_is5_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_5, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0, ptr %1) {
Core_function_run:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.74, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.75, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.75, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @tag_FunctionRun, align 8
  %33 = call ptr @Builtins__structGet(ptr %31, ptr %32)
  %34 = call ptr @get_candy_function_pointer(ptr %33)
  %35 = call ptr @get_candy_function_environment(ptr %33)
  %36 = call ptr (...) %34(ptr %0, ptr %35)
  ret ptr %36
}

define ptr @Core_function_is0_11.74(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_function_doNotRun(ptr %0, ptr %1) {
Core_function_doNotRun:
  %2 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr @tag_IfElse, align 8
  %5 = call ptr @Builtins__structGet(ptr %3, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr @tag_Is, align 8
  %9 = call ptr @Builtins__structGet(ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Function, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %9)
  %12 = call ptr @get_candy_function_environment(ptr %9)
  %13 = call ptr (...) %11(ptr %0, ptr %10, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %14, i32 0, i32 2
  store ptr %20, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_function_is0_11.76, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_function_is0_11.77, align 8
  %23 = load ptr, ptr @fun_Core_function_is0_11.77, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = call ptr @get_candy_function_pointer(ptr %5)
  %26 = call ptr @get_candy_function_environment(ptr %5)
  %27 = call ptr (...) %25(ptr %13, ptr %23, ptr %24, ptr %26)
  %28 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr null)
  ret ptr %29
}

define ptr @Core_function_is0_11.76(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = load ptr, ptr @num_0, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %7, ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Examples_echo_11(ptr %0, ptr %1) {
Examples_echo_11:
  %2 = load ptr, ptr @tag_Stdin, align 8
  %3 = call ptr @Builtins__structGet(ptr %0, ptr %2)
  %4 = load ptr, ptr @tag_Stdout, align 8
  %5 = call ptr @Builtins__structGet(ptr %0, ptr %4)
  %6 = load ptr, ptr @"text_Hello, world!", align 8
  %7 = call ptr @get_candy_function_pointer(ptr %5)
  %8 = call ptr @get_candy_function_environment(ptr %5)
  %9 = call ptr (...) %7(ptr %6, ptr %8)
  %10 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @tag_Run, align 8
  %13 = call ptr @Builtins__structGet(ptr %11, ptr %12)
  %14 = call ptr @get_candy_function_pointer(ptr %13)
  %15 = call ptr @get_candy_function_environment(ptr %13)
  %16 = call ptr (...) %14(ptr %3, ptr %15)
  %17 = load ptr, ptr @tag_Stdout, align 8
  %18 = call ptr @Builtins__structGet(ptr %0, ptr %17)
  %19 = load ptr, ptr @"text_Echo:", align 8
  %20 = call ptr @get_candy_function_pointer(ptr %18)
  %21 = call ptr @get_candy_function_environment(ptr %18)
  %22 = call ptr (...) %20(ptr %19, ptr %21)
  %23 = load ptr, ptr @tag_Stdout, align 8
  %24 = call ptr @Builtins__structGet(ptr %0, ptr %23)
  %25 = call ptr @get_candy_function_pointer(ptr %24)
  %26 = call ptr @get_candy_function_environment(ptr %24)
  %27 = call ptr (...) %25(ptr %16, ptr %26)
  ret ptr %27
}
