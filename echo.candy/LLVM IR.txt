; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:run:2" = global ptr null
@"Core:function:run:4" = global ptr null
@"Examples:echo:11:27" = global ptr null
@"Examples:echo:11:7" = global ptr null
@"Examples:echo:11:print:7" = global ptr null
@"Examples:echo:11:print:9" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_Match = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Stdin = global ptr null
@tag_Stdout = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@text_. = global ptr null
@"text_Echo:" = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_Hello, world!" = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_`." = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then.2 = global ptr null
@fun_Builtins__ifElse_1_equals_then.4 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__ifElse_1_equals_else.6 = global ptr null
@2 = global ptr null
@fun_Builtins__ifElse_1_equals_else.8 = global ptr null
@3 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.10 = global ptr null
@fun_Builtins__ifElse_1_equals_then.12 = global ptr null
@fun_Builtins__ifElse_1_equals_else.14 = global ptr null
@4 = global ptr null
@fun_Builtins__ifElse_1_equals_else.16 = global ptr null
@5 = global ptr null
@fun_Builtins__ifElse_1_equals_else.18 = global ptr null
@6 = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_run = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs.20" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.22" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else.24" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else.26" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.28" = global ptr null
@"fun_anonymous_$generated__needs.30" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.32" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else.34" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else.36" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.38" = global ptr null
@fun_Examples_echo_11 = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::functionRun:11", align 8
  %4 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::functionRun:16", align 8
  %6 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::functionRun:22", align 8
  %8 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::functionRun:5", align 8
  %10 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::getArgumentCount:11", align 8
  %12 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::getArgumentCount:5", align 8
  %14 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::ifElse:1", align 8
  %16 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::ifElse:11", align 8
  %18 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::ifElse:14", align 8
  %20 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::ifElse:19", align 8
  %22 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:25", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:28", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:33", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:41", align 8
  %30 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:5", align 8
  %32 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::structGet:12", align 8
  %34 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::structGet:14", align 8
  %36 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::structGet:21", align 8
  %38 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::structGet:5", align 8
  %40 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::typeIs:19", align 8
  %42 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::typeIs:25", align 8
  %44 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::typeOf:5", align 8
  %46 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Core:function:is0:11:3", align 8
  %48 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Core:function:is0:13", align 8
  %50 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Core:function:run:14", align 8
  %52 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:2\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Core:function:run:2", align 8
  %54 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Core:function:run:4", align 8
  %56 = alloca i8, i64 20, align 1
  store [20 x i8] c"Examples:echo:11:27\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Examples:echo:11:27", align 8
  %58 = alloca i8, i64 19, align 1
  store [19 x i8] c"Examples:echo:11:7\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Examples:echo:11:7", align 8
  %60 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:echo:11:print:7\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Examples:echo:11:print:7", align 8
  %62 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:echo:11:print:9\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Examples:echo:11:print:9", align 8
  %64 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"anonymous:$generated::needs", align 8
  %66 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %66, ptr @fun_candy_builtin_equals, align 8
  %67 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %67, ptr @fun_candy_builtin_get_argument_count, align 8
  %68 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %68, ptr @fun_candy_builtin_if_else, align 8
  %69 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %69, ptr @fun_candy_builtin_list_get, align 8
  %70 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %70, ptr @fun_candy_builtin_struct_get, align 8
  %71 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %71, ptr @fun_candy_builtin_struct_has_key, align 8
  %72 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %72, ptr @fun_candy_builtin_tag_get_value, align 8
  %73 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %73, ptr @fun_candy_builtin_tag_has_value, align 8
  %74 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %74, ptr @fun_candy_builtin_tag_without_value, align 8
  %75 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %75, ptr @fun_candy_builtin_text_concatenate, align 8
  %76 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %76, ptr @fun_candy_builtin_to_debug_text, align 8
  %77 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %77, ptr @fun_candy_builtin_type_of, align 8
  %78 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %78, align 1
  %79 = call ptr @make_candy_tag(ptr %78, ptr null)
  store ptr %79, ptr @tag_False, align 8
  %80 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %80, align 1
  %81 = call ptr @make_candy_tag(ptr %80, ptr null)
  store ptr %81, ptr @tag_Function, align 8
  %82 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %82, align 1
  %83 = call ptr @make_candy_tag(ptr %82, ptr null)
  store ptr %83, ptr @tag_Match, align 8
  %84 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %84, align 1
  %85 = call ptr @make_candy_tag(ptr %84, ptr null)
  store ptr %85, ptr @tag_NoMatch, align 8
  %86 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %86, align 1
  %87 = call ptr @make_candy_tag(ptr %86, ptr null)
  store ptr %87, ptr @tag_Nothing, align 8
  %88 = alloca i8, i64 6, align 1
  store [6 x i8] c"Stdin\00", ptr %88, align 1
  %89 = call ptr @make_candy_tag(ptr %88, ptr null)
  store ptr %89, ptr @tag_Stdin, align 8
  %90 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %90, align 1
  %91 = call ptr @make_candy_tag(ptr %90, ptr null)
  store ptr %91, ptr @tag_Stdout, align 8
  %92 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %92, align 1
  %93 = call ptr @make_candy_tag(ptr %92, ptr null)
  store ptr %93, ptr @tag_Struct, align 8
  %94 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %94, align 1
  %95 = call ptr @make_candy_tag(ptr %94, ptr null)
  store ptr %95, ptr @tag_Tag, align 8
  %96 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %96, align 1
  %97 = call ptr @make_candy_tag(ptr %96, ptr null)
  store ptr %97, ptr @tag_Text, align 8
  %98 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %98, align 1
  %99 = call ptr @make_candy_tag(ptr %98, ptr null)
  store ptr %99, ptr @tag_True, align 8
  %100 = call ptr @make_candy_int(i64 0)
  store ptr %100, ptr @num_0, align 8
  %101 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %101, align 1
  %102 = call ptr @make_candy_text(ptr %101)
  store ptr %102, ptr @text_., align 8
  %103 = alloca i8, i64 6, align 1
  store [6 x i8] c"Echo:\00", ptr %103, align 1
  %104 = call ptr @make_candy_text(ptr %103)
  store ptr %104, ptr @"text_Echo:", align 8
  %105 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %105, align 1
  %106 = call ptr @make_candy_text(ptr %105)
  store ptr %106, ptr @"text_Expected False, got ", align 8
  %107 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %107, align 1
  %108 = call ptr @make_candy_text(ptr %107)
  store ptr %108, ptr @"text_Expected True, got ", align 8
  %109 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %109, align 1
  %110 = call ptr @make_candy_text(ptr %109)
  store ptr %110, ptr @"text_Expected a Tag, got `", align 8
  %111 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %111, align 1
  %112 = call ptr @make_candy_text(ptr %111)
  store ptr %112, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %113 = alloca i8, i64 14, align 1
  store [14 x i8] c"Hello, world!\00", ptr %113, align 1
  %114 = call ptr @make_candy_text(ptr %113)
  store ptr %114, ptr @"text_Hello, world!", align 8
  %115 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %115, align 1
  %116 = call ptr @make_candy_text(ptr %115)
  store ptr %116, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %117 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %117, align 1
  %118 = call ptr @make_candy_text(ptr %117)
  store ptr %118, ptr @"text_The `reason` must be a text.", align 8
  %119 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %119, align 1
  %120 = call ptr @make_candy_text(ptr %119)
  store ptr %120, ptr @"text_`.", align 8
  %121 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %121, align 1
  %122 = call ptr @make_candy_text(ptr %121)
  store ptr %122, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %123 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %123, align 1
  %124 = call ptr @make_candy_text(ptr %123)
  store ptr %124, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %125 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %125, align 1
  %126 = call ptr @make_candy_text(ptr %125)
  store ptr %126, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %127 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %127, align 1
  %128 = call ptr @make_candy_text(ptr %127)
  store ptr %128, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %129 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %129, align 1
  %130 = call ptr @make_candy_text(ptr %129)
  store ptr %130, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %131 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %131, align 1
  %132 = call ptr @make_candy_text(ptr %131)
  store ptr %132, ptr @"text_`is0 body` was not satisfied", align 8
  %133 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %133, align 1
  %134 = call ptr @make_candy_text(ptr %133)
  store ptr %134, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %135 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %135, align 1
  %136 = call ptr @make_candy_text(ptr %135)
  store ptr %136, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %137 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %137, align 1
  %138 = call ptr @make_candy_text(ptr %137)
  store ptr %138, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %139 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %139, align 1
  %140 = call ptr @make_candy_text(ptr %139)
  store ptr %140, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %141 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %142 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %141, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %142, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %143 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %144 = call ptr @make_candy_function(ptr @"Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %143, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %144, ptr @"fun_Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %145 = alloca ptr, i64 2, align 8
  %146 = load ptr, ptr @tag_Match, align 8
  %147 = getelementptr ptr, ptr %145, i64 0
  store ptr %146, ptr %147, align 8
  %148 = getelementptr ptr, ptr %145, i64 1
  store ptr null, ptr %148, align 8
  %149 = call ptr @make_candy_list(ptr %145)
  store ptr %149, ptr @0, align 8
  %150 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %151 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch", ptr %150, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %151, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch", align 8
  %152 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %153 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %152, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %153, ptr @"fun_anonymous_$generated__needs", align 8
  %154 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %155 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %154, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %155, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %156 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %157 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %156, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %157, ptr @fun_Builtins__ifElse, align 8
  %158 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %159 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %158, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %159, ptr @fun_Core_function_is0, align 8
  %160 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %161 = call ptr @make_candy_function(ptr @Core_function_run, ptr %160, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %161, ptr @fun_Core_function_run, align 8
  %162 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %163 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %162, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %163, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %164 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %165 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %164, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %165, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %166 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %167 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs.19", ptr %166, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %167, ptr @"fun_anonymous_$generated__needs.20", align 8
  %168 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %169 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs.29", ptr %168, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %169, ptr @"fun_anonymous_$generated__needs.30", align 8
  %170 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %171 = call ptr @make_candy_function(ptr @Examples_echo_11, ptr %170, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %171, ptr @fun_Examples_echo_11, align 8
  %172 = call ptr @run_candy_main(ptr @fun_Examples_echo_11, ptr @candy_environment)
  call void @print_candy_value(ptr %172)
  %173 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %173)
  %174 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %174)
  %175 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %175)
  %176 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %176)
  %177 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %177)
  %178 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %178)
  %179 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %179)
  %180 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %180)
  %181 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %181)
  %182 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %182)
  %183 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %183)
  %184 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %184)
  %185 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %185)
  %186 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %186)
  %187 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %187)
  %188 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %188)
  %189 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %189)
  %190 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %190)
  %191 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %191)
  %192 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %192)
  %193 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %193)
  %194 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %194)
  %195 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %195)
  %196 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %196)
  %197 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %197)
  %198 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %198)
  %199 = load ptr, ptr @"Core:function:run:2", align 8
  call void @free_candy_value(ptr %199)
  %200 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %200)
  %201 = load ptr, ptr @"Examples:echo:11:27", align 8
  call void @free_candy_value(ptr %201)
  %202 = load ptr, ptr @"Examples:echo:11:7", align 8
  call void @free_candy_value(ptr %202)
  %203 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  call void @free_candy_value(ptr %203)
  %204 = load ptr, ptr @"Examples:echo:11:print:9", align 8
  call void @free_candy_value(ptr %204)
  %205 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %205)
  %206 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %206)
  %207 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %207)
  %208 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %208)
  %209 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %209)
  %210 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %210)
  %211 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %211)
  %212 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %212)
  %213 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %213)
  %214 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %214)
  %215 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %215)
  %216 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %216)
  %217 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %217)
  %218 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %218)
  %219 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %219)
  %220 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %220)
  %221 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %221)
  %222 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %222)
  %223 = load ptr, ptr @tag_Stdin, align 8
  call void @free_candy_value(ptr %223)
  %224 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %224)
  %225 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %225)
  %226 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %226)
  %227 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %227)
  %228 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %228)
  %229 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %229)
  %230 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %230)
  %231 = load ptr, ptr @"text_Echo:", align 8
  call void @free_candy_value(ptr %231)
  %232 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %232)
  %233 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %233)
  %234 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %234)
  %235 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %235)
  %236 = load ptr, ptr @"text_Hello, world!", align 8
  call void @free_candy_value(ptr %236)
  %237 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %237)
  %238 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %238)
  %239 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %239)
  %240 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %240)
  %241 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %241)
  %242 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %242)
  %243 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %243)
  %244 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %244)
  %245 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %245)
  %246 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %246)
  %247 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %247)
  %248 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %248)
  %249 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %249)
  %250 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %250)
  %251 = load ptr, ptr @"fun_Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %251)
  %252 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %252)
  %253 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch", align 8
  call void @free_candy_value(ptr %253)
  %254 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %254)
  %255 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %255)
  %256 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %256)
  %257 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %257)
  %258 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %258)
  %259 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %259)
  %260 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %260)
  %261 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  call void @free_candy_value(ptr %261)
  %262 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.4, align 8
  call void @free_candy_value(ptr %262)
  %263 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %263)
  %264 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %264)
  %265 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  call void @free_candy_value(ptr %265)
  %266 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %266)
  %267 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.8, align 8
  call void @free_candy_value(ptr %267)
  %268 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %268)
  %269 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %269)
  %270 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %270)
  %271 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  call void @free_candy_value(ptr %271)
  %272 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.12, align 8
  call void @free_candy_value(ptr %272)
  %273 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  call void @free_candy_value(ptr %273)
  %274 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %274)
  %275 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  call void @free_candy_value(ptr %275)
  %276 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %276)
  %277 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.18, align 8
  call void @free_candy_value(ptr %277)
  %278 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %278)
  %279 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %279)
  %280 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %280)
  %281 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %281)
  %282 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %282)
  %283 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %283)
  %284 = load ptr, ptr @"fun_anonymous_$generated__needs.20", align 8
  call void @free_candy_value(ptr %284)
  %285 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.22", align 8
  call void @free_candy_value(ptr %285)
  %286 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.24", align 8
  call void @free_candy_value(ptr %286)
  %287 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else.26", align 8
  call void @free_candy_value(ptr %287)
  %288 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.28", align 8
  call void @free_candy_value(ptr %288)
  %289 = load ptr, ptr @"fun_anonymous_$generated__needs.30", align 8
  call void @free_candy_value(ptr %289)
  %290 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.32", align 8
  call void @free_candy_value(ptr %290)
  %291 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.34", align 8
  call void @free_candy_value(ptr %291)
  %292 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else.36", align 8
  call void @free_candy_value(ptr %292)
  %293 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.38", align 8
  call void @free_candy_value(ptr %293)
  %294 = load ptr, ptr @fun_Examples_echo_11, align 8
  call void @free_candy_value(ptr %294)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch"() {
"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core_controlFlow_if_27, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @Builtins__ifElse_1_equals_then() {
Builtins__ifElse_1_equals_then:
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.1, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.7, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.8, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.8, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %41 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr null)
  %42 = load ptr, ptr @tag_Function, align 8
  %43 = call ptr @candy_builtin_equals(ptr %37, ptr %42)
  %44 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %45 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %48 = load ptr, ptr @num_0, align 8
  %49 = call ptr @candy_builtin_equals(ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %51 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %50, ptr null)
  %52 = call ptr @candy_builtin_type_of(ptr %2)
  %53 = load ptr, ptr @tag_Function, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr null)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %52, ptr %57)
  %59 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %60 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %63 = load ptr, ptr @num_0, align 8
  %64 = call ptr @candy_builtin_equals(ptr %62, ptr %63)
  %65 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %64, ptr %65, ptr null)
  %67 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %67
}

define ptr @Builtins__ifElse_1_equals_then.1(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.3, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.4, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.5, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.4, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.3(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__ifElse_1_equals_else.5(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__ifElse_1_equals_else.7(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.9, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.17, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.18, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.18, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.9(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.11, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.12, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.15, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.12, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.11(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.13, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %11 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else.13(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__ifElse_1_equals_else.15(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__ifElse_1_equals_else.17(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Core_function_is0(ptr %0) {
Core_function_is0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @Core_function_is0(ptr %0)
  %2 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Function, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:function:run:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:function:run:14", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %0)
  %17 = call ptr @get_candy_function_environment(ptr %0)
  %18 = call ptr (...) %16(ptr %17)
  ret ptr %18
}

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs.19"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.21", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.22", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.22", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else.23", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.24", align 8
  %13 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.24", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else.25", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else.26", align 8
  %21 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else.26", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.27", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else.28", align 8
  %28 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.28", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.21"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else.23"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else.25"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else.27"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"anonymous_$generated__needs.29"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.31", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.32", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.32", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else.33", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.34", align 8
  %13 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.34", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else.35", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else.36", align 8
  %21 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else.36", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.37", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else.38", align 8
  %28 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.38", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.31"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else.33"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else.35"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else.37"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @Examples_echo_11(ptr %0) {
Examples_echo_11:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Examples:echo:11:7", align 8
  %6 = call ptr @"anonymous_$generated__needs.29"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Stdin, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Examples:echo:11:7", align 8
  %11 = call ptr @"anonymous_$generated__needs.29"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Stdin, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  %14 = call ptr @candy_builtin_type_of(ptr %0)
  %15 = load ptr, ptr @tag_Struct, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %18 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  %19 = call ptr @"anonymous_$generated__needs.19"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Stdout, align 8
  %21 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %20)
  %22 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %23 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  %24 = call ptr @"anonymous_$generated__needs.19"(ptr %21, ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_Stdout, align 8
  %26 = call ptr @candy_builtin_struct_get(ptr %0, ptr %25)
  %27 = load ptr, ptr @"text_Hello, world!", align 8
  %28 = call ptr @get_candy_function_pointer(ptr %26)
  %29 = call ptr @get_candy_function_environment(ptr %26)
  %30 = call ptr (...) %28(ptr %27, ptr %29)
  %31 = call ptr @Core_function_run(ptr %13)
  %32 = load ptr, ptr @tag_Struct, align 8
  %33 = call ptr @candy_builtin_equals(ptr %14, ptr %32)
  %34 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %35 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  %36 = call ptr @"anonymous_$generated__needs.19"(ptr %33, ptr %34, ptr %35)
  %37 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %38 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  %39 = call ptr @"anonymous_$generated__needs.19"(ptr %21, ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_Echo:", align 8
  %41 = call ptr @get_candy_function_pointer(ptr %26)
  %42 = call ptr @get_candy_function_environment(ptr %26)
  %43 = call ptr (...) %41(ptr %40, ptr %42)
  %44 = load ptr, ptr @tag_Struct, align 8
  %45 = call ptr @candy_builtin_equals(ptr %14, ptr %44)
  %46 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %47 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  %48 = call ptr @"anonymous_$generated__needs.19"(ptr %45, ptr %46, ptr %47)
  %49 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %50 = load ptr, ptr @"Examples:echo:11:print:7", align 8
  %51 = call ptr @"anonymous_$generated__needs.19"(ptr %21, ptr %49, ptr %50)
  %52 = call ptr @get_candy_function_pointer(ptr %26)
  %53 = call ptr @get_candy_function_environment(ptr %26)
  %54 = call ptr (...) %52(ptr %31, ptr %53)
  ret ptr %54
}
