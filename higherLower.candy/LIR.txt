# LIR for module Examples:higherLower
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::equals:6
%1 = Builtins::functionRun:11
%2 = Builtins::functionRun:16
%3 = Builtins::functionRun:22
%4 = Builtins::functionRun:5
%5 = Builtins::getArgumentCount:11
%6 = Builtins::getArgumentCount:5
%7 = Builtins::ifElse:1
%8 = Builtins::ifElse:11
%9 = Builtins::ifElse:14
%10 = Builtins::ifElse:19
%11 = Builtins::ifElse:25
%12 = Builtins::ifElse:28
%13 = Builtins::ifElse:33
%14 = Builtins::ifElse:41
%15 = Builtins::ifElse:5
%16 = Builtins::intCompareTo:11
%17 = Builtins::intCompareTo:18
%18 = Builtins::intCompareTo:5
%19 = Builtins::intParse:11
%20 = Builtins::intParse:5
%21 = Builtins::structGet:12
%22 = Builtins::structGet:14
%23 = Builtins::structGet:21
%24 = Builtins::structGet:5
%25 = Builtins::textTrimEnd:11
%26 = Builtins::textTrimStart:11
%27 = Builtins::textTrimStart:5
%28 = Builtins::typeIs:19
%29 = Builtins::typeIs:25
%30 = Builtins::typeOf:5
%31 = Core:bool:is:1
%32 = Core:bool:lazyOr:12
%33 = Core:bool:lazyOr:14
%34 = Core:bool:lazyOr:16
%35 = Core:bool:lazyOr:16:12
%36 = Core:bool:lazyOr:16:20
%37 = Core:bool:lazyOr:16:8
%38 = Core:bool:lazyOr:2
%39 = Core:bool:lazyOr:4
%40 = Core:bool:or:13
%41 = Core:bool:or:2
%42 = Core:bool:or:4
%43 = Core:bool:or:7
%44 = Core:bool:or:9
%45 = Core:controlFlow:if:17
%46 = Core:controlFlow:if:19
%47 = Core:controlFlow:if:24
%48 = Core:controlFlow:if:7
%49 = Core:controlFlow:if:9
%50 = Core:controlFlow:loop:12:23
%51 = Core:controlFlow:loop:12:31
%52 = Core:controlFlow:loop:12:37:2
%53 = Core:controlFlow:loop:12:38
%54 = Core:controlFlow:loop:12:7
%55 = Core:controlFlow:loop:13
%56 = Core:controlFlow:loop:7
%57 = Core:controlFlow:loop:9
%58 = Core:controlFlow:recursive:15
%59 = Core:controlFlow:recursive:16:0:3
%60 = Core:controlFlow:recursive:16:5
%61 = Core:controlFlow:recursive:21
%62 = Core:controlFlow:recursive:7
%63 = Core:function:is0:11
%64 = Core:function:is0:9:3
%65 = Core:function:is1:11
%66 = Core:function:is1:9:3
%67 = Core:function:is2:11
%68 = Core:function:is2:9:3
%69 = Core:function:run:12
%70 = Core:function:run:2
%71 = Core:function:run:4
%72 = Core:int:compareTo:18
%73 = Core:int:compareTo:4
%74 = Core:int:compareTo:9
%75 = Core:int:isLessThan:13
%76 = Core:int:isLessThan:4
%77 = Core:int:isLessThan:9
%78 = Core:result:is:1
%79 = Core:result:mapOrElse:12
%80 = Core:result:mapOrElse:14
%81 = Core:result:mapOrElse:2
%82 = Core:result:mapOrElse:22
%83 = Core:result:mapOrElse:24
%84 = Core:result:mapOrElse:26
%85 = Core:result:mapOrElse:26:2
%86 = Core:result:mapOrElse:26:5
%87 = Core:result:mapOrElse:26:value
%88 = Core:result:mapOrElse:26:value#1
%89 = Core:result:mapOrElse:4
%90 = Core:text:trim:4
%91 = Core:text:trim:7
%92 = Examples:higherLower:16:0:6
%93 = Examples:higherLower:16:0:7
%94 = Examples:higherLower:16:10
%95 = Examples:higherLower:16:14:11
%96 = Examples:higherLower:16:14:18
%97 = Examples:higherLower:16:14:25
%98 = Examples:higherLower:16:14:34:5:8
%99 = Examples:higherLower:16:14:34:6:10
%100 = Examples:higherLower:16:14:34:6:13
%101 = Examples:higherLower:16:14:34:6:14
%102 = Examples:higherLower:16:14:34:7
%103 = Examples:higherLower:16:14:35:8
%104 = Examples:higherLower:16:14:36
%105 = Examples:higherLower:16:14:8
%106 = Examples:higherLower:16:15
%107 = Examples:higherLower:16:print:5
%108 = Examples:higherLower:16:print:7
%109 = anonymous:$generated::needs
%110 = builtinEquals
%111 = builtinFunctionRun
%112 = builtinGetArgumentCount
%113 = builtinIfElse
%114 = builtinIntCompareTo
%115 = builtinIntParse
%116 = builtinListGet
%117 = builtinStructGet
%118 = builtinStructHasKey
%119 = builtinTagGetValue
%120 = builtinTagHasValue
%121 = builtinTagWithoutValue
%122 = builtinTextTrimEnd
%123 = builtinTextTrimStart
%124 = builtinTypeOf
%125 = Break
%126 = Continue
%127 = Error
%128 = False
%129 = Function
%130 = Int
%131 = Less
%132 = Match
%133 = NoMatch
%134 = Nothing
%135 = Ok
%136 = Stdin
%137 = Stdout
%138 = Struct
%139 = Tag
%140 = Text
%141 = True
%142 = 0
%143 = 1
%144 = 2
%145 = 42
%146 = "Higher!"
%147 = "Lower!"
%148 = "No case matched the given expression."
%149 = "The `body` has to return `Continue` or `Break`."
%150 = "The `body` should take the recursive function and the argument."
%151 = "The `condition` must be either `True` or `False`."
%152 = "The `reason` must be a text."
%153 = "Welcome to the number guessing game!"
%154 = "What's your guess?"
%155 = "You did it!"
%156 = "Your guess must be a number."
%157 = "`a | typeIs Int` was not satisfied"
%158 = "`b | typeIs Int` was not satisfied"
%159 = "`b` didn't return a bool."
%160 = "`bool.is condition` was not satisfied"
%161 = "`conditionIsBool` was not satisfied"
%162 = "`else | getArgumentCount | equals 0` was not satisfied"
%163 = "`else | typeIs Function` was not satisfied"
%164 = "`function | typeIs Function` was not satisfied"
%165 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
%166 = "`function.is0 b` was not satisfied"
%167 = "`function.is0 body` was not satisfied"
%168 = "`function.is0 then` was not satisfied"
%169 = "`function.is1 errorMapper` was not satisfied"
%170 = "`function.is1 okMapper` was not satisfied"
%171 = "`is a` was not satisfied"
%172 = "`is b` was not satisfied"
%173 = "`is result` was not satisfied"
%174 = "`is text` was not satisfied"
%175 = "`is valueA` was not satisfied"
%176 = "`is valueB` was not satisfied"
%177 = "`is0 body` was not satisfied"
%178 = "`struct | typeIs Struct` was not satisfied"
%179 = "`struct | ✨.structHasKey key` was not satisfied"
%180 = "`text | typeIs Text` was not satisfied"
%181 = "`then | getArgumentCount | equals 0` was not satisfied"
%182 = "`then | typeIs Function` was not satisfied"
%183 = { body_0 }
%184 = { body_1 }
%185 = { body_6 }
%186 = (,)
%187 = Match %186<(,)>
%188 = { body_7 }
%189 = { body_8 }
%190 = { body_9 }
%191 = { body_10 }
%192 = { body_11 }
%193 = { body_14 }
%194 = { body_15 }
%195 = { body_16 }
%196 = { body_17 }
%197 = { body_18 }
%198 = { body_20 }
%199 = { body_22 }
%200 = { body_25 }
%201 = { body_26 }
%202 = { body_33 }
%203 = { body_39 }
%204 = { body_41 }
%205 = { body_47 }
%206 = { body_51 }
%207 = { body_56 }
%208 = { body_57 }
%209 = { body_58 }
%210 = { body_60 }
%211 = { body_69 }
%212 = { body_70 }
%213 = { body_90 }
%214 = { body_91 }
%215 = { body_92 }
%216 = { body_93 }
%217 = { body_101 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:result:is:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %141<True>
body_1 (responsible $0) =
  # Original HIR IDs: Core::21:isMatch:then, Core::32:isMatch:then, Core::43:isMatch:then, Core::104:isMatch:then, Core::155:isMatch:then, Core::166:isMatch:then, Core:bool:11:isMatch:then, Core:check:11:isMatch:then, Core:controlFlow:if:23, Core:controlFlow:31:isMatch:then, Core:controlFlow:52:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:function:21:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:31:isMatch:then, Core:int:42:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:32:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core:list:31:isMatch:then, Core:list:42:isMatch:then, Core:result:also:16:case-0:didNotMatch, Core:result:21:isMatch:then, Core:result:32:isMatch:then, Core:struct:21:isMatch:then, Core:tag:31:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:text:31:isMatch:then, Core:text:42:isMatch:then, Core:type:21:isMatch:then, Examples:higherLower:then, Examples:higherLower:11:isMatch:then, Examples:higherLower:14:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %134<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = dup $0 by 1
  $4 = %128<False>
  $5 = %109<anonymous:$generated::needs>
  $6 = call $2<%110<builtinEquals>> with $0 $4<%128<False>> ($5<%109<anonymous:$generated::needs>> is responsible)
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = %151<"The `condition` must be either `True` or `False`.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%151<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = %152<"The `reason` must be a text.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%152<"The `reason` must be a text.">> ($0 is at fault)
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = %110<builtinEquals>
  $5 = dup $0 by 1
  $6 = %141<True>
  $7 = %109<anonymous:$generated::needs>
  $8 = call $4<%110<builtinEquals>> with $0 $6<%141<True>> ($7<%109<anonymous:$generated::needs>> is responsible)
  $9 = dup $0 by 1
  $10 = { body_2 capturing $0 }
  $11 = %113<builtinIfElse>
  $12 = dup $8 by 1
  $13 = %183<{ body_0 }>
  $14 = dup $10 by 1
  $15 = call $11<%113<builtinIfElse>> with $8 $13<%183<{ body_0 }>> $10 ($7<%109<anonymous:$generated::needs>> is responsible)
  $16 = dup $3 by 1
  $17 = { body_3 capturing $3 }
  $18 = dup $15 by 1
  $19 = %184<{ body_1 }>
  $20 = dup $17 by 1
  $21 = call $11<%113<builtinIfElse>> with $15 $19<%184<{ body_1 }>> $17 ($7<%109<anonymous:$generated::needs>> is responsible)
  $22 = %124<builtinTypeOf>
  $23 = dup $1 by 1
  $24 = call $22<%124<builtinTypeOf>> with $1 ($3 is responsible)
  $25 = dup $24 by 1
  $26 = %140<Text>
  $27 = call $4<%110<builtinEquals>> with $24 $26<%140<Text>> ($3 is responsible)
  $28 = dup $3 by 1
  $29 = { body_4 capturing $3 }
  $30 = dup $27 by 1
  $31 = dup $29 by 1
  $32 = call $11<%113<builtinIfElse>> with $27 $19<%184<{ body_1 }>> $29 ($7<%109<anonymous:$generated::needs>> is responsible)
  $33 = dup $1 by 1
  $34 = dup $2 by 1
  $35 = { body_5 capturing $1, $2 }
  $36 = dup $0 by 1
  $37 = dup $35 by 1
  $38 = call $11<%113<builtinIfElse>> with $0 $19<%184<{ body_1 }>> $35 ($7<%109<anonymous:$generated::needs>> is responsible)
  $39 = drop $35
  $40 = drop $32
  $41 = drop $29
  $42 = drop $27
  $43 = drop $24
  $44 = drop $21
  $45 = drop $17
  $46 = drop $15
  $47 = drop $10
  $48 = drop $8
  $49 = drop $2
  $50 = drop $1
  $51 = drop $0
  $52 = $38
body_7 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:16:equals:then, Core:bool:lazyOr:16:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:iterator:generateWithState:12:1:3:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:reduceLeft:16:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:17:2:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:19:equals:then, Core:list:lastWhere:19:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
  # Captured IDs: none
  $1 = %187<Match %186<(,)>>
body_8 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::isNonNegative:13:equals:else, Builtins::not:1:equals:else, Core::21:equals:else, Core::32:equals:else, Core::43:equals:else, Core::104:equals:else, Core::155:equals:else, Core::166:equals:else, Core:bool:is:1:equals:else, Core:bool:lazyAnd:16:equals:else, Core:bool:lazyOr:16:equals:else, Core:bool:not:6:equals:else, Core:bool:11:equals:else, Core:check:check:1:equals:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:controlFlow:52:equals:else, Core:fixedDecimal:is:1:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:fixedDecimal:21:equals:else, Core:fixedDecimal:32:equals:else, Core:fixedDecimal:43:equals:else, Core:fixedDecimal:54:equals:else, Core:fixedDecimal:105:equals:else, Core:function:21:equals:else, Core:int:pow:21:1:equals:else, Core:int:pow:21:1:hasKey:else, Core:int:pow:21:4:equals:else, Core:int:31:equals:else, Core:int:42:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:map:17:3:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:next:6:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core:iterator:skip:26:6:1:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:iterator:skip:26:6:8:3:equals:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:iterator:take:27:1:equals:else, Core:iterator:take:27:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:iterator:where:17:2:3:equals:else, Core:iterator:where:17:2:3:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:withIndex:11:5:hasKey:else, Core:iterator:wrapSafe:14:1:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:21:equals:else, Core:iterator:32:equals:else, Core:list:first:6:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:list:firstWhere:19:equals:else, Core:list:generate:51:1:equals:else, Core:list:generate:51:1:hasKey:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:list:lastWhere:19:equals:else, Core:list:single:6:equals:else, Core:list:31:equals:else, Core:list:42:equals:else, Core:result:also:16:equals:else, Core:result:is:1:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:21:equals:else, Core:result:32:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:text:repeat:30:1:equals:else, Core:text:31:equals:else, Core:text:42:equals:else, Examples:higherLower:11:equals:else, Examples:higherLower:14:equals:else
  # Captured IDs: none
  $1 = %133<NoMatch>
body_9 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:didNotMatch, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:is:1:case-0:didNotMatch, Core:bool:lazyAnd:16:case-1:matched, Core:bool:not:6:case-0:matched, Core:check:check:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:function:is0:10, Core:function:is1:10, Core:function:is2:10, Core:function:is3:10, Core:function:is4:10, Core:function:is5:10, Core:list:isValidIndex:19, Core:list:isValidInsertIndex:19, Core:result:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch, anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: none
  $1 = %128<False>
body_10 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::functionRun
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %28<Builtins::typeIs:19>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%28<Builtins::typeIs:19>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %129<Function>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%129<Function>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = %4<Builtins::functionRun:5>
  $12 = %185<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %164<"`function | typeIs Function` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%185<{ body_6 }>> with $10 $14<%164<"`function | typeIs Function` was not satisfied">> $1 ($11<%4<Builtins::functionRun:5>> is responsible, code is at $11<%4<Builtins::functionRun:5>>)
  $17 = dup $10 by 1
  $18 = dup $1 by 1
  $19 = call $12<%185<{ body_6 }>> with $10 $14<%164<"`function | typeIs Function` was not satisfied">> $1 ($11<%4<Builtins::functionRun:5>> is responsible)
  $20 = trace: end of call
  $21 = %112<builtinGetArgumentCount>
  $22 = dup $0 by 1
  $23 = %1<Builtins::functionRun:11>
  $24 = call $21<%112<builtinGetArgumentCount>> with $0 ($23<%1<Builtins::functionRun:11>> is responsible)
  $25 = dup $24 by 1
  $26 = %142<0>
  $27 = %0<Builtins::equals:6>
  $28 = call $6<%110<builtinEquals>> with $24 $26<%142<0>> ($27<%0<Builtins::equals:6>> is responsible)
  $29 = %2<Builtins::functionRun:16>
  $30 = dup $28 by 1
  $31 = %165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $32 = dup $1 by 1
  $33 = trace: start of call of $12<%185<{ body_6 }>> with $28 $31<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($29<%2<Builtins::functionRun:16>> is responsible, code is at $29<%2<Builtins::functionRun:16>>)
  $34 = dup $28 by 1
  $35 = dup $1 by 1
  $36 = call $12<%185<{ body_6 }>> with $28 $31<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($29<%2<Builtins::functionRun:16>> is responsible)
  $37 = trace: end of call
  $38 = %3<Builtins::functionRun:22>
  $39 = %111<builtinFunctionRun>
  $40 = dup $0 by 1
  $41 = trace: tail call of $39<%111<builtinFunctionRun>> with $0 ($38<%3<Builtins::functionRun:22>> is responsible, code is at $38<%3<Builtins::functionRun:22>>)
  $42 = dup $0 by 1
  $43 = call $0 with no arguments ($38<%3<Builtins::functionRun:22>> is responsible)
  $44 = drop $36
  $45 = drop $28
  $46 = drop $24
  $47 = drop $19
  $48 = drop $10
  $49 = drop $5
  $50 = drop $0
  $51 = $43
body_11 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::getArgumentCount
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %28<Builtins::typeIs:19>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%28<Builtins::typeIs:19>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %129<Function>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%129<Function>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = %6<Builtins::getArgumentCount:5>
  $12 = %185<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %164<"`function | typeIs Function` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%185<{ body_6 }>> with $10 $14<%164<"`function | typeIs Function` was not satisfied">> $1 ($11<%6<Builtins::getArgumentCount:5>> is responsible, code is at $11<%6<Builtins::getArgumentCount:5>>)
  $17 = dup $10 by 1
  $18 = dup $1 by 1
  $19 = call $12<%185<{ body_6 }>> with $10 $14<%164<"`function | typeIs Function` was not satisfied">> $1 ($11<%6<Builtins::getArgumentCount:5>> is responsible)
  $20 = trace: end of call
  $21 = %112<builtinGetArgumentCount>
  $22 = dup $0 by 1
  $23 = %5<Builtins::getArgumentCount:11>
  $24 = call $21<%112<builtinGetArgumentCount>> with $0 ($23<%5<Builtins::getArgumentCount:11>> is responsible)
  $25 = drop $19
  $26 = drop $10
  $27 = drop $5
  $28 = drop $0
  $29 = $24
body_12 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_13 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = %128<False>
  $4 = dup $0 by 1
  $5 = %7<Builtins::ifElse:1>
  $6 = call $2<%110<builtinEquals>> with $3<%128<False>> $0 ($5<%7<Builtins::ifElse:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%7<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_14 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Builtins::ifElse
  # Captured IDs: none
  $4 = %110<builtinEquals>
  $5 = %141<True>
  $6 = dup $0 by 1
  $7 = %7<Builtins::ifElse:1>
  $8 = call $4<%110<builtinEquals>> with $5<%141<True>> $0 ($7<%7<Builtins::ifElse:1>> is responsible)
  $9 = %113<builtinIfElse>
  $10 = dup $8 by 1
  $11 = %188<{ body_7 }>
  $12 = %189<{ body_8 }>
  $13 = call $9<%113<builtinIfElse>> with $8 $11<%188<{ body_7 }>> $12<%189<{ body_8 }>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $14 = %121<builtinTagWithoutValue>
  $15 = dup $13 by 1
  $16 = call $14<%121<builtinTagWithoutValue>> with $13 ($7<%7<Builtins::ifElse:1>> is responsible)
  $17 = dup $16 by 1
  $18 = %132<Match>
  $19 = call $4<%110<builtinEquals>> with $16 $18<%132<Match>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $20 = dup $13 by 1
  $21 = { body_12 capturing $13 }
  $22 = dup $0 by 1
  $23 = { body_13 capturing $0 }
  $24 = dup $19 by 1
  $25 = dup $21 by 1
  $26 = dup $23 by 1
  $27 = call $9<%113<builtinIfElse>> with $19 $21 $23 ($7<%7<Builtins::ifElse:1>> is responsible)
  $28 = dup $27 by 1
  $29 = call $14<%121<builtinTagWithoutValue>> with $27 ($7<%7<Builtins::ifElse:1>> is responsible)
  $30 = dup $29 by 1
  $31 = call $4<%110<builtinEquals>> with $29 $18<%132<Match>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $32 = dup $31 by 1
  $33 = %183<{ body_0 }>
  $34 = %190<{ body_9 }>
  $35 = call $9<%113<builtinIfElse>> with $31 $33<%183<{ body_0 }>> $34<%190<{ body_9 }>> ($7<%7<Builtins::ifElse:1>> is responsible)
  $36 = %15<Builtins::ifElse:5>
  $37 = %185<{ body_6 }>
  $38 = dup $35 by 1
  $39 = %161<"`conditionIsBool` was not satisfied">
  $40 = dup $3 by 1
  $41 = trace: start of call of $37<%185<{ body_6 }>> with $35 $39<%161<"`conditionIsBool` was not satisfied">> $3 ($36<%15<Builtins::ifElse:5>> is responsible, code is at $36<%15<Builtins::ifElse:5>>)
  $42 = dup $35 by 1
  $43 = dup $3 by 1
  $44 = call $37<%185<{ body_6 }>> with $35 $39<%161<"`conditionIsBool` was not satisfied">> $3 ($36<%15<Builtins::ifElse:5>> is responsible)
  $45 = trace: end of call
  $46 = %124<builtinTypeOf>
  $47 = dup $1 by 1
  $48 = %28<Builtins::typeIs:19>
  $49 = call $46<%124<builtinTypeOf>> with $1 ($48<%28<Builtins::typeIs:19>> is responsible)
  $50 = dup $49 by 1
  $51 = %129<Function>
  $52 = %29<Builtins::typeIs:25>
  $53 = call $4<%110<builtinEquals>> with $49 $51<%129<Function>> ($52<%29<Builtins::typeIs:25>> is responsible)
  $54 = %8<Builtins::ifElse:11>
  $55 = dup $53 by 1
  $56 = %182<"`then | typeIs Function` was not satisfied">
  $57 = dup $3 by 1
  $58 = trace: start of call of $37<%185<{ body_6 }>> with $53 $56<%182<"`then | typeIs Function` was not satisfied">> $3 ($54<%8<Builtins::ifElse:11>> is responsible, code is at $54<%8<Builtins::ifElse:11>>)
  $59 = dup $53 by 1
  $60 = dup $3 by 1
  $61 = call $37<%185<{ body_6 }>> with $53 $56<%182<"`then | typeIs Function` was not satisfied">> $3 ($54<%8<Builtins::ifElse:11>> is responsible)
  $62 = trace: end of call
  $63 = %9<Builtins::ifElse:14>
  $64 = %192<{ body_11 }>
  $65 = dup $1 by 1
  $66 = trace: start of call of $64<%192<{ body_11 }>> with $1 ($63<%9<Builtins::ifElse:14>> is responsible, code is at $63<%9<Builtins::ifElse:14>>)
  $67 = dup $49 by 1
  $68 = call $4<%110<builtinEquals>> with $49 $51<%129<Function>> ($52<%29<Builtins::typeIs:25>> is responsible)
  $69 = %6<Builtins::getArgumentCount:5>
  $70 = dup $68 by 1
  $71 = %164<"`function | typeIs Function` was not satisfied">
  $72 = trace: start of call of $37<%185<{ body_6 }>> with $68 $71<%164<"`function | typeIs Function` was not satisfied">> $63<%9<Builtins::ifElse:14>> ($69<%6<Builtins::getArgumentCount:5>> is responsible, code is at $69<%6<Builtins::getArgumentCount:5>>)
  $73 = dup $68 by 1
  $74 = call $37<%185<{ body_6 }>> with $68 $71<%164<"`function | typeIs Function` was not satisfied">> $63<%9<Builtins::ifElse:14>> ($69<%6<Builtins::getArgumentCount:5>> is responsible)
  $75 = trace: end of call
  $76 = %112<builtinGetArgumentCount>
  $77 = dup $1 by 1
  $78 = %5<Builtins::getArgumentCount:11>
  $79 = call $76<%112<builtinGetArgumentCount>> with $1 ($78<%5<Builtins::getArgumentCount:11>> is responsible)
  $80 = trace: end of call
  $81 = dup $79 by 1
  $82 = %142<0>
  $83 = %0<Builtins::equals:6>
  $84 = call $4<%110<builtinEquals>> with $79 $82<%142<0>> ($83<%0<Builtins::equals:6>> is responsible)
  $85 = %10<Builtins::ifElse:19>
  $86 = dup $84 by 1
  $87 = %181<"`then | getArgumentCount | equals 0` was not satisfied">
  $88 = dup $3 by 1
  $89 = trace: start of call of $37<%185<{ body_6 }>> with $84 $87<%181<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($85<%10<Builtins::ifElse:19>> is responsible, code is at $85<%10<Builtins::ifElse:19>>)
  $90 = dup $84 by 1
  $91 = dup $3 by 1
  $92 = call $37<%185<{ body_6 }>> with $84 $87<%181<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($85<%10<Builtins::ifElse:19>> is responsible)
  $93 = trace: end of call
  $94 = dup $2 by 1
  $95 = call $46<%124<builtinTypeOf>> with $2 ($48<%28<Builtins::typeIs:19>> is responsible)
  $96 = dup $95 by 1
  $97 = call $4<%110<builtinEquals>> with $95 $51<%129<Function>> ($52<%29<Builtins::typeIs:25>> is responsible)
  $98 = %11<Builtins::ifElse:25>
  $99 = dup $97 by 1
  $100 = %163<"`else | typeIs Function` was not satisfied">
  $101 = dup $3 by 1
  $102 = trace: start of call of $37<%185<{ body_6 }>> with $97 $100<%163<"`else | typeIs Function` was not satisfied">> $3 ($98<%11<Builtins::ifElse:25>> is responsible, code is at $98<%11<Builtins::ifElse:25>>)
  $103 = dup $97 by 1
  $104 = dup $3 by 1
  $105 = call $37<%185<{ body_6 }>> with $97 $100<%163<"`else | typeIs Function` was not satisfied">> $3 ($98<%11<Builtins::ifElse:25>> is responsible)
  $106 = trace: end of call
  $107 = %12<Builtins::ifElse:28>
  $108 = dup $2 by 1
  $109 = trace: start of call of $64<%192<{ body_11 }>> with $2 ($107<%12<Builtins::ifElse:28>> is responsible, code is at $107<%12<Builtins::ifElse:28>>)
  $110 = dup $95 by 1
  $111 = call $4<%110<builtinEquals>> with $95 $51<%129<Function>> ($52<%29<Builtins::typeIs:25>> is responsible)
  $112 = dup $111 by 1
  $113 = trace: start of call of $37<%185<{ body_6 }>> with $111 $71<%164<"`function | typeIs Function` was not satisfied">> $107<%12<Builtins::ifElse:28>> ($69<%6<Builtins::getArgumentCount:5>> is responsible, code is at $69<%6<Builtins::getArgumentCount:5>>)
  $114 = dup $111 by 1
  $115 = call $37<%185<{ body_6 }>> with $111 $71<%164<"`function | typeIs Function` was not satisfied">> $107<%12<Builtins::ifElse:28>> ($69<%6<Builtins::getArgumentCount:5>> is responsible)
  $116 = trace: end of call
  $117 = dup $2 by 1
  $118 = call $76<%112<builtinGetArgumentCount>> with $2 ($78<%5<Builtins::getArgumentCount:11>> is responsible)
  $119 = trace: end of call
  $120 = dup $118 by 1
  $121 = call $4<%110<builtinEquals>> with $118 $82<%142<0>> ($83<%0<Builtins::equals:6>> is responsible)
  $122 = %13<Builtins::ifElse:33>
  $123 = dup $121 by 1
  $124 = %162<"`else | getArgumentCount | equals 0` was not satisfied">
  $125 = dup $3 by 1
  $126 = trace: start of call of $37<%185<{ body_6 }>> with $121 $124<%162<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($122<%13<Builtins::ifElse:33>> is responsible, code is at $122<%13<Builtins::ifElse:33>>)
  $127 = dup $121 by 1
  $128 = dup $3 by 1
  $129 = call $37<%185<{ body_6 }>> with $121 $124<%162<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($122<%13<Builtins::ifElse:33>> is responsible)
  $130 = trace: end of call
  $131 = %14<Builtins::ifElse:41>
  $132 = dup $0 by 1
  $133 = dup $1 by 1
  $134 = dup $2 by 1
  $135 = trace: tail call of $9<%113<builtinIfElse>> with $0 $1 $2 ($131<%14<Builtins::ifElse:41>> is responsible, code is at $131<%14<Builtins::ifElse:41>>)
  $136 = dup $0 by 1
  $137 = dup $1 by 1
  $138 = dup $2 by 1
  $139 = call $9<%113<builtinIfElse>> with $0 $1 $2 ($131<%14<Builtins::ifElse:41>> is responsible)
  $140 = drop $129
  $141 = drop $121
  $142 = drop $118
  $143 = drop $115
  $144 = drop $111
  $145 = drop $105
  $146 = drop $97
  $147 = drop $95
  $148 = drop $92
  $149 = drop $84
  $150 = drop $79
  $151 = drop $74
  $152 = drop $68
  $153 = drop $61
  $154 = drop $53
  $155 = drop $49
  $156 = drop $44
  $157 = drop $35
  $158 = drop $31
  $159 = drop $29
  $160 = drop $27
  $161 = drop $23
  $162 = drop $21
  $163 = drop $19
  $164 = drop $16
  $165 = drop $13
  $166 = drop $8
  $167 = drop $2
  $168 = drop $1
  $169 = drop $0
  $170 = $139
body_15 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::intCompareTo
  # Captured IDs: none
  $3 = %124<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %28<Builtins::typeIs:19>
  $6 = call $3<%124<builtinTypeOf>> with $0 ($5<%28<Builtins::typeIs:19>> is responsible)
  $7 = %110<builtinEquals>
  $8 = dup $6 by 1
  $9 = %130<Int>
  $10 = %29<Builtins::typeIs:25>
  $11 = call $7<%110<builtinEquals>> with $6 $9<%130<Int>> ($10<%29<Builtins::typeIs:25>> is responsible)
  $12 = %18<Builtins::intCompareTo:5>
  $13 = %185<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %157<"`a | typeIs Int` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%185<{ body_6 }>> with $11 $15<%157<"`a | typeIs Int` was not satisfied">> $2 ($12<%18<Builtins::intCompareTo:5>> is responsible, code is at $12<%18<Builtins::intCompareTo:5>>)
  $18 = dup $11 by 1
  $19 = dup $2 by 1
  $20 = call $13<%185<{ body_6 }>> with $11 $15<%157<"`a | typeIs Int` was not satisfied">> $2 ($12<%18<Builtins::intCompareTo:5>> is responsible)
  $21 = trace: end of call
  $22 = dup $1 by 1
  $23 = call $3<%124<builtinTypeOf>> with $1 ($5<%28<Builtins::typeIs:19>> is responsible)
  $24 = dup $23 by 1
  $25 = call $7<%110<builtinEquals>> with $23 $9<%130<Int>> ($10<%29<Builtins::typeIs:25>> is responsible)
  $26 = %16<Builtins::intCompareTo:11>
  $27 = dup $25 by 1
  $28 = %158<"`b | typeIs Int` was not satisfied">
  $29 = dup $2 by 1
  $30 = trace: start of call of $13<%185<{ body_6 }>> with $25 $28<%158<"`b | typeIs Int` was not satisfied">> $2 ($26<%16<Builtins::intCompareTo:11>> is responsible, code is at $26<%16<Builtins::intCompareTo:11>>)
  $31 = dup $25 by 1
  $32 = dup $2 by 1
  $33 = call $13<%185<{ body_6 }>> with $25 $28<%158<"`b | typeIs Int` was not satisfied">> $2 ($26<%16<Builtins::intCompareTo:11>> is responsible)
  $34 = trace: end of call
  $35 = %114<builtinIntCompareTo>
  $36 = dup $0 by 1
  $37 = dup $1 by 1
  $38 = %17<Builtins::intCompareTo:18>
  $39 = call $35<%114<builtinIntCompareTo>> with $0 $1 ($38<%17<Builtins::intCompareTo:18>> is responsible)
  $40 = drop $33
  $41 = drop $25
  $42 = drop $23
  $43 = drop $20
  $44 = drop $11
  $45 = drop $6
  $46 = drop $1
  $47 = drop $0
  $48 = $39
body_16 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::intParse
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %28<Builtins::typeIs:19>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%28<Builtins::typeIs:19>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %140<Text>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%140<Text>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = %20<Builtins::intParse:5>
  $12 = %185<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %180<"`text | typeIs Text` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%185<{ body_6 }>> with $10 $14<%180<"`text | typeIs Text` was not satisfied">> $1 ($11<%20<Builtins::intParse:5>> is responsible, code is at $11<%20<Builtins::intParse:5>>)
  $17 = dup $10 by 1
  $18 = dup $1 by 1
  $19 = call $12<%185<{ body_6 }>> with $10 $14<%180<"`text | typeIs Text` was not satisfied">> $1 ($11<%20<Builtins::intParse:5>> is responsible)
  $20 = trace: end of call
  $21 = %115<builtinIntParse>
  $22 = dup $0 by 1
  $23 = %19<Builtins::intParse:11>
  $24 = call $21<%115<builtinIntParse>> with $0 ($23<%19<Builtins::intParse:11>> is responsible)
  $25 = drop $19
  $26 = drop $10
  $27 = drop $5
  $28 = drop $0
  $29 = $24
body_17 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::structGet
  # Captured IDs: none
  $3 = %124<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %28<Builtins::typeIs:19>
  $6 = call $3<%124<builtinTypeOf>> with $0 ($5<%28<Builtins::typeIs:19>> is responsible)
  $7 = %110<builtinEquals>
  $8 = dup $6 by 1
  $9 = %138<Struct>
  $10 = %29<Builtins::typeIs:25>
  $11 = call $7<%110<builtinEquals>> with $6 $9<%138<Struct>> ($10<%29<Builtins::typeIs:25>> is responsible)
  $12 = %24<Builtins::structGet:5>
  $13 = %185<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %178<"`struct | typeIs Struct` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%185<{ body_6 }>> with $11 $15<%178<"`struct | typeIs Struct` was not satisfied">> $2 ($12<%24<Builtins::structGet:5>> is responsible, code is at $12<%24<Builtins::structGet:5>>)
  $18 = dup $11 by 1
  $19 = dup $2 by 1
  $20 = call $13<%185<{ body_6 }>> with $11 $15<%178<"`struct | typeIs Struct` was not satisfied">> $2 ($12<%24<Builtins::structGet:5>> is responsible)
  $21 = trace: end of call
  $22 = %118<builtinStructHasKey>
  $23 = dup $0 by 1
  $24 = dup $1 by 1
  $25 = %21<Builtins::structGet:12>
  $26 = call $22<%118<builtinStructHasKey>> with $0 $1 ($25<%21<Builtins::structGet:12>> is responsible)
  $27 = %22<Builtins::structGet:14>
  $28 = dup $26 by 1
  $29 = %179<"`struct | ✨.structHasKey key` was not satisfied">
  $30 = dup $2 by 1
  $31 = trace: start of call of $13<%185<{ body_6 }>> with $26 $29<%179<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($27<%22<Builtins::structGet:14>> is responsible, code is at $27<%22<Builtins::structGet:14>>)
  $32 = dup $26 by 1
  $33 = dup $2 by 1
  $34 = call $13<%185<{ body_6 }>> with $26 $29<%179<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($27<%22<Builtins::structGet:14>> is responsible)
  $35 = trace: end of call
  $36 = %117<builtinStructGet>
  $37 = dup $0 by 1
  $38 = dup $1 by 1
  $39 = %23<Builtins::structGet:21>
  $40 = call $36<%117<builtinStructGet>> with $0 $1 ($39<%23<Builtins::structGet:21>> is responsible)
  $41 = drop $34
  $42 = drop $26
  $43 = drop $20
  $44 = drop $11
  $45 = drop $6
  $46 = drop $1
  $47 = drop $0
  $48 = $40
body_18 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::textTrimStart
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %28<Builtins::typeIs:19>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%28<Builtins::typeIs:19>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %140<Text>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%140<Text>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = %27<Builtins::textTrimStart:5>
  $12 = %185<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %180<"`text | typeIs Text` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%185<{ body_6 }>> with $10 $14<%180<"`text | typeIs Text` was not satisfied">> $1 ($11<%27<Builtins::textTrimStart:5>> is responsible, code is at $11<%27<Builtins::textTrimStart:5>>)
  $17 = dup $10 by 1
  $18 = dup $1 by 1
  $19 = call $12<%185<{ body_6 }>> with $10 $14<%180<"`text | typeIs Text` was not satisfied">> $1 ($11<%27<Builtins::textTrimStart:5>> is responsible)
  $20 = trace: end of call
  $21 = %123<builtinTextTrimStart>
  $22 = dup $0 by 1
  $23 = %26<Builtins::textTrimStart:11>
  $24 = call $21<%123<builtinTextTrimStart>> with $0 ($23<%26<Builtins::textTrimStart:11>> is responsible)
  $25 = drop $19
  $26 = drop $10
  $27 = drop $5
  $28 = drop $0
  $29 = $24
body_19 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %64<Core:function:is0:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%64<Core:function:is0:9:3>> is responsible, code is at $2<%64<Core:function:is0:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %142<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%142<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_20 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is0
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %30<Builtins::typeOf:5>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%30<Builtins::typeOf:5>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %129<Function>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%129<Function>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_19 capturing $0 }
  $13 = %63<Core:function:is0:11>
  $14 = %193<{ body_14 }>
  $15 = dup $10 by 1
  $16 = dup $12 by 1
  $17 = %190<{ body_9 }>
  $18 = trace: tail call of $14<%193<{ body_14 }>> with $10 $12 $17<%190<{ body_9 }>> ($13<%63<Core:function:is0:11>> is responsible, code is at $13<%63<Core:function:is0:11>>)
  $19 = dup $10 by 1
  $20 = dup $12 by 1
  $21 = call $14<%193<{ body_14 }>> with $10 $12 $17<%190<{ body_9 }>> ($13<%63<Core:function:is0:11>> is responsible)
  $22 = drop $12
  $23 = drop $10
  $24 = drop $5
  $25 = drop $0
  $26 = $21
body_21 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %64<Core:function:is0:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%64<Core:function:is0:9:3>> is responsible, code is at $2<%64<Core:function:is0:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %142<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%142<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_22 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:run
  # Captured IDs: none
  $2 = %70<Core:function:run:2>
  $3 = %198<{ body_20 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%198<{ body_20 }>> with $0 ($2<%70<Core:function:run:2>> is responsible, code is at $2<%70<Core:function:run:2>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %30<Builtins::typeOf:5>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%30<Builtins::typeOf:5>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %0<Builtins::equals:6>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%0<Builtins::equals:6>> is responsible)
  $15 = dup $0 by 1
  $16 = { body_21 capturing $0 }
  $17 = %63<Core:function:is0:11>
  $18 = %193<{ body_14 }>
  $19 = dup $14 by 1
  $20 = dup $16 by 1
  $21 = %190<{ body_9 }>
  $22 = trace: start of call of $18<%193<{ body_14 }>> with $14 $16 $21<%190<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible, code is at $17<%63<Core:function:is0:11>>)
  $23 = dup $14 by 1
  $24 = dup $16 by 1
  $25 = call $18<%193<{ body_14 }>> with $14 $16 $21<%190<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible)
  $26 = trace: end of call
  $27 = trace: end of call
  $28 = %71<Core:function:run:4>
  $29 = %185<{ body_6 }>
  $30 = dup $25 by 1
  $31 = %177<"`is0 body` was not satisfied">
  $32 = dup $1 by 1
  $33 = trace: start of call of $29<%185<{ body_6 }>> with $25 $31<%177<"`is0 body` was not satisfied">> $1 ($28<%71<Core:function:run:4>> is responsible, code is at $28<%71<Core:function:run:4>>)
  $34 = dup $25 by 1
  $35 = dup $1 by 1
  $36 = call $29<%185<{ body_6 }>> with $25 $31<%177<"`is0 body` was not satisfied">> $1 ($28<%71<Core:function:run:4>> is responsible)
  $37 = trace: end of call
  $38 = %69<Core:function:run:12>
  $39 = %191<{ body_10 }>
  $40 = dup $0 by 1
  $41 = trace: start of call of $39<%191<{ body_10 }>> with $0 ($38<%69<Core:function:run:12>> is responsible, code is at $38<%69<Core:function:run:12>>)
  $42 = dup $0 by 1
  $43 = %28<Builtins::typeIs:19>
  $44 = call $6<%124<builtinTypeOf>> with $0 ($43<%28<Builtins::typeIs:19>> is responsible)
  $45 = dup $44 by 1
  $46 = %29<Builtins::typeIs:25>
  $47 = call $10<%110<builtinEquals>> with $44 $12<%129<Function>> ($46<%29<Builtins::typeIs:25>> is responsible)
  $48 = %4<Builtins::functionRun:5>
  $49 = dup $47 by 1
  $50 = %164<"`function | typeIs Function` was not satisfied">
  $51 = trace: start of call of $29<%185<{ body_6 }>> with $47 $50<%164<"`function | typeIs Function` was not satisfied">> $38<%69<Core:function:run:12>> ($48<%4<Builtins::functionRun:5>> is responsible, code is at $48<%4<Builtins::functionRun:5>>)
  $52 = dup $47 by 1
  $53 = call $29<%185<{ body_6 }>> with $47 $50<%164<"`function | typeIs Function` was not satisfied">> $38<%69<Core:function:run:12>> ($48<%4<Builtins::functionRun:5>> is responsible)
  $54 = trace: end of call
  $55 = %112<builtinGetArgumentCount>
  $56 = dup $0 by 1
  $57 = %1<Builtins::functionRun:11>
  $58 = call $55<%112<builtinGetArgumentCount>> with $0 ($57<%1<Builtins::functionRun:11>> is responsible)
  $59 = dup $58 by 1
  $60 = %142<0>
  $61 = call $10<%110<builtinEquals>> with $58 $60<%142<0>> ($13<%0<Builtins::equals:6>> is responsible)
  $62 = %2<Builtins::functionRun:16>
  $63 = dup $61 by 1
  $64 = %165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $65 = trace: start of call of $29<%185<{ body_6 }>> with $61 $64<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $38<%69<Core:function:run:12>> ($62<%2<Builtins::functionRun:16>> is responsible, code is at $62<%2<Builtins::functionRun:16>>)
  $66 = dup $61 by 1
  $67 = call $29<%185<{ body_6 }>> with $61 $64<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $38<%69<Core:function:run:12>> ($62<%2<Builtins::functionRun:16>> is responsible)
  $68 = trace: end of call
  $69 = %3<Builtins::functionRun:22>
  $70 = %111<builtinFunctionRun>
  $71 = dup $0 by 1
  $72 = trace: start of call of $70<%111<builtinFunctionRun>> with $0 ($69<%3<Builtins::functionRun:22>> is responsible, code is at $69<%3<Builtins::functionRun:22>>)
  $73 = dup $0 by 1
  $74 = call $0 with no arguments ($69<%3<Builtins::functionRun:22>> is responsible)
  $75 = trace: end of call
  $76 = trace: end of call
  $77 = dup $74 by 1
  $78 = $74
  $79 = drop $74
  $80 = drop $67
  $81 = drop $61
  $82 = drop $58
  $83 = drop $53
  $84 = drop $47
  $85 = drop $44
  $86 = drop $36
  $87 = drop $25
  $88 = drop $16
  $89 = drop $14
  $90 = drop $9
  $91 = drop $0
  $92 = $78
body_23 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_24 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = %128<False>
  $4 = dup $0 by 1
  $5 = %31<Core:bool:is:1>
  $6 = call $2<%110<builtinEquals>> with $3<%128<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_25 $0 (+ responsible $1) =
  # Original HIR IDs: Core:bool:is
  # Captured IDs: none
  $2 = %110<builtinEquals>
  $3 = %141<True>
  $4 = dup $0 by 1
  $5 = %31<Core:bool:is:1>
  $6 = call $2<%110<builtinEquals>> with $3<%141<True>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $12 = %121<builtinTagWithoutValue>
  $13 = dup $11 by 1
  $14 = call $12<%121<builtinTagWithoutValue>> with $11 ($5<%31<Core:bool:is:1>> is responsible)
  $15 = dup $14 by 1
  $16 = %132<Match>
  $17 = call $2<%110<builtinEquals>> with $14 $16<%132<Match>> ($5<%31<Core:bool:is:1>> is responsible)
  $18 = dup $11 by 1
  $19 = { body_23 capturing $11 }
  $20 = dup $0 by 1
  $21 = { body_24 capturing $0 }
  $22 = dup $17 by 1
  $23 = dup $19 by 1
  $24 = dup $21 by 1
  $25 = call $7<%113<builtinIfElse>> with $17 $19 $21 ($5<%31<Core:bool:is:1>> is responsible)
  $26 = dup $25 by 1
  $27 = call $12<%121<builtinTagWithoutValue>> with $25 ($5<%31<Core:bool:is:1>> is responsible)
  $28 = dup $27 by 1
  $29 = call $2<%110<builtinEquals>> with $27 $16<%132<Match>> ($5<%31<Core:bool:is:1>> is responsible)
  $30 = dup $29 by 1
  $31 = %183<{ body_0 }>
  $32 = %190<{ body_9 }>
  $33 = call $7<%113<builtinIfElse>> with $29 $31<%183<{ body_0 }>> $32<%190<{ body_9 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $34 = drop $29
  $35 = drop $27
  $36 = drop $25
  $37 = drop $21
  $38 = drop $19
  $39 = drop $17
  $40 = drop $14
  $41 = drop $11
  $42 = drop $6
  $43 = drop $0
  $44 = $33
body_26 (responsible $0) =
  # Original HIR IDs: Core:bool:lazyOr:16:case-1:didNotMatch
  # Captured IDs: none
  $1 = %148<"No case matched the given expression.">
  $2 = %34<Core:bool:lazyOr:16>
  $3 = panicking because $1<%148<"No case matched the given expression.">> ($2<%34<Core:bool:lazyOr:16>> is at fault)
body_27 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_28 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = %128<False>
  $4 = dup $0 by 1
  $5 = %31<Core:bool:is:1>
  $6 = call $2<%110<builtinEquals>> with $3<%128<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_29 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %64<Core:function:is0:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%64<Core:function:is0:9:3>> is responsible, code is at $2<%64<Core:function:is0:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %142<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%142<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_30 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %64<Core:function:is0:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%64<Core:function:is0:9:3>> is responsible, code is at $2<%64<Core:function:is0:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %142<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%142<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_31 (responsible $2) =
  # Original HIR IDs: Core:bool:lazyOr:16:case-1:matched
  # Captured IDs: $0, $1
  $3 = %37<Core:bool:lazyOr:16:8>
  $4 = %199<{ body_22 }>
  $5 = dup $0 by 1
  $6 = trace: start of call of $4<%199<{ body_22 }>> with $0 ($3<%37<Core:bool:lazyOr:16:8>> is responsible, code is at $3<%37<Core:bool:lazyOr:16:8>>)
  $7 = %70<Core:function:run:2>
  $8 = %198<{ body_20 }>
  $9 = dup $0 by 1
  $10 = trace: start of call of $8<%198<{ body_20 }>> with $0 ($7<%70<Core:function:run:2>> is responsible, code is at $7<%70<Core:function:run:2>>)
  $11 = %124<builtinTypeOf>
  $12 = dup $0 by 1
  $13 = %30<Builtins::typeOf:5>
  $14 = call $11<%124<builtinTypeOf>> with $0 ($13<%30<Builtins::typeOf:5>> is responsible)
  $15 = %110<builtinEquals>
  $16 = dup $14 by 1
  $17 = %129<Function>
  $18 = %0<Builtins::equals:6>
  $19 = call $15<%110<builtinEquals>> with $14 $17<%129<Function>> ($18<%0<Builtins::equals:6>> is responsible)
  $20 = dup $0 by 1
  $21 = { body_30 capturing $0 }
  $22 = %63<Core:function:is0:11>
  $23 = %193<{ body_14 }>
  $24 = dup $19 by 1
  $25 = dup $21 by 1
  $26 = %190<{ body_9 }>
  $27 = trace: start of call of $23<%193<{ body_14 }>> with $19 $21 $26<%190<{ body_9 }>> ($22<%63<Core:function:is0:11>> is responsible, code is at $22<%63<Core:function:is0:11>>)
  $28 = dup $19 by 1
  $29 = dup $21 by 1
  $30 = call $23<%193<{ body_14 }>> with $19 $21 $26<%190<{ body_9 }>> ($22<%63<Core:function:is0:11>> is responsible)
  $31 = trace: end of call
  $32 = trace: end of call
  $33 = %71<Core:function:run:4>
  $34 = %185<{ body_6 }>
  $35 = dup $30 by 1
  $36 = %177<"`is0 body` was not satisfied">
  $37 = trace: start of call of $34<%185<{ body_6 }>> with $30 $36<%177<"`is0 body` was not satisfied">> $3<%37<Core:bool:lazyOr:16:8>> ($33<%71<Core:function:run:4>> is responsible, code is at $33<%71<Core:function:run:4>>)
  $38 = dup $30 by 1
  $39 = call $34<%185<{ body_6 }>> with $30 $36<%177<"`is0 body` was not satisfied">> $3<%37<Core:bool:lazyOr:16:8>> ($33<%71<Core:function:run:4>> is responsible)
  $40 = trace: end of call
  $41 = %69<Core:function:run:12>
  $42 = %191<{ body_10 }>
  $43 = dup $0 by 1
  $44 = trace: start of call of $42<%191<{ body_10 }>> with $0 ($41<%69<Core:function:run:12>> is responsible, code is at $41<%69<Core:function:run:12>>)
  $45 = dup $0 by 1
  $46 = %28<Builtins::typeIs:19>
  $47 = call $11<%124<builtinTypeOf>> with $0 ($46<%28<Builtins::typeIs:19>> is responsible)
  $48 = dup $47 by 1
  $49 = %29<Builtins::typeIs:25>
  $50 = call $15<%110<builtinEquals>> with $47 $17<%129<Function>> ($49<%29<Builtins::typeIs:25>> is responsible)
  $51 = %4<Builtins::functionRun:5>
  $52 = dup $50 by 1
  $53 = %164<"`function | typeIs Function` was not satisfied">
  $54 = trace: start of call of $34<%185<{ body_6 }>> with $50 $53<%164<"`function | typeIs Function` was not satisfied">> $41<%69<Core:function:run:12>> ($51<%4<Builtins::functionRun:5>> is responsible, code is at $51<%4<Builtins::functionRun:5>>)
  $55 = dup $50 by 1
  $56 = call $34<%185<{ body_6 }>> with $50 $53<%164<"`function | typeIs Function` was not satisfied">> $41<%69<Core:function:run:12>> ($51<%4<Builtins::functionRun:5>> is responsible)
  $57 = trace: end of call
  $58 = %112<builtinGetArgumentCount>
  $59 = dup $0 by 1
  $60 = %1<Builtins::functionRun:11>
  $61 = call $58<%112<builtinGetArgumentCount>> with $0 ($60<%1<Builtins::functionRun:11>> is responsible)
  $62 = dup $61 by 1
  $63 = %142<0>
  $64 = call $15<%110<builtinEquals>> with $61 $63<%142<0>> ($18<%0<Builtins::equals:6>> is responsible)
  $65 = %2<Builtins::functionRun:16>
  $66 = dup $64 by 1
  $67 = %165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $68 = trace: start of call of $34<%185<{ body_6 }>> with $64 $67<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $41<%69<Core:function:run:12>> ($65<%2<Builtins::functionRun:16>> is responsible, code is at $65<%2<Builtins::functionRun:16>>)
  $69 = dup $64 by 1
  $70 = call $34<%185<{ body_6 }>> with $64 $67<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $41<%69<Core:function:run:12>> ($65<%2<Builtins::functionRun:16>> is responsible)
  $71 = trace: end of call
  $72 = %3<Builtins::functionRun:22>
  $73 = %111<builtinFunctionRun>
  $74 = dup $0 by 1
  $75 = trace: start of call of $73<%111<builtinFunctionRun>> with $0 ($72<%3<Builtins::functionRun:22>> is responsible, code is at $72<%3<Builtins::functionRun:22>>)
  $76 = dup $0 by 1
  $77 = call $0 with no arguments ($72<%3<Builtins::functionRun:22>> is responsible)
  $78 = trace: end of call
  $79 = trace: end of call
  $80 = trace: end of call
  $81 = %35<Core:bool:lazyOr:16:12>
  $82 = %200<{ body_25 }>
  $83 = dup $77 by 1
  $84 = trace: start of call of $82<%200<{ body_25 }>> with $77 ($81<%35<Core:bool:lazyOr:16:12>> is responsible, code is at $81<%35<Core:bool:lazyOr:16:12>>)
  $85 = dup $77 by 1
  $86 = call $82<%200<{ body_25 }>> with $77 ($81<%35<Core:bool:lazyOr:16:12>> is responsible)
  $87 = trace: end of call
  $88 = %36<Core:bool:lazyOr:16:20>
  $89 = dup $86 by 1
  $90 = %159<"`b` didn't return a bool.">
  $91 = dup $1 by 1
  $92 = trace: start of call of $34<%185<{ body_6 }>> with $86 $90<%159<"`b` didn't return a bool.">> $1 ($88<%36<Core:bool:lazyOr:16:20>> is responsible, code is at $88<%36<Core:bool:lazyOr:16:20>>)
  $93 = dup $86 by 1
  $94 = dup $1 by 1
  $95 = call $34<%185<{ body_6 }>> with $86 $90<%159<"`b` didn't return a bool.">> $1 ($88<%36<Core:bool:lazyOr:16:20>> is responsible)
  $96 = trace: end of call
  $97 = dup $77 by 1
  $98 = $77
  $99 = drop $95
  $100 = drop $86
  $101 = drop $77
  $102 = drop $70
  $103 = drop $64
  $104 = drop $61
  $105 = drop $56
  $106 = drop $50
  $107 = drop $47
  $108 = drop $39
  $109 = drop $30
  $110 = drop $21
  $111 = drop $19
  $112 = drop $14
  $113 = $98
body_32 (responsible $3) =
  # Original HIR IDs: Core:bool:lazyOr:16:case-0:didNotMatch
  # Captured IDs: $0, $1, $2
  $4 = %110<builtinEquals>
  $5 = %128<False>
  $6 = dup $0 by 1
  $7 = %34<Core:bool:lazyOr:16>
  $8 = call $4<%110<builtinEquals>> with $5<%128<False>> $0 ($7<%34<Core:bool:lazyOr:16>> is responsible)
  $9 = %113<builtinIfElse>
  $10 = dup $8 by 1
  $11 = %188<{ body_7 }>
  $12 = %189<{ body_8 }>
  $13 = call $9<%113<builtinIfElse>> with $8 $11<%188<{ body_7 }>> $12<%189<{ body_8 }>> ($7<%34<Core:bool:lazyOr:16>> is responsible)
  $14 = %121<builtinTagWithoutValue>
  $15 = dup $13 by 1
  $16 = call $14<%121<builtinTagWithoutValue>> with $13 ($7<%34<Core:bool:lazyOr:16>> is responsible)
  $17 = dup $16 by 1
  $18 = %132<Match>
  $19 = call $4<%110<builtinEquals>> with $16 $18<%132<Match>> ($7<%34<Core:bool:lazyOr:16>> is responsible)
  $20 = dup $1 by 1
  $21 = dup $2 by 1
  $22 = { body_31 capturing $1, $2 }
  $23 = dup $19 by 1
  $24 = dup $22 by 1
  $25 = %201<{ body_26 }>
  $26 = call $9<%113<builtinIfElse>> with $19 $22 $25<%201<{ body_26 }>> ($7<%34<Core:bool:lazyOr:16>> is responsible)
  $27 = drop $22
  $28 = drop $19
  $29 = drop $16
  $30 = drop $13
  $31 = drop $8
  $32 = $26
body_33 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:bool:lazyOr
  # Captured IDs: none
  $3 = %38<Core:bool:lazyOr:2>
  $4 = %200<{ body_25 }>
  $5 = dup $0 by 1
  $6 = trace: start of call of $4<%200<{ body_25 }>> with $0 ($3<%38<Core:bool:lazyOr:2>> is responsible, code is at $3<%38<Core:bool:lazyOr:2>>)
  $7 = %110<builtinEquals>
  $8 = %141<True>
  $9 = dup $0 by 1
  $10 = %31<Core:bool:is:1>
  $11 = call $7<%110<builtinEquals>> with $8<%141<True>> $0 ($10<%31<Core:bool:is:1>> is responsible)
  $12 = %113<builtinIfElse>
  $13 = dup $11 by 1
  $14 = %188<{ body_7 }>
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $11 $14<%188<{ body_7 }>> $15<%189<{ body_8 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $17 = %121<builtinTagWithoutValue>
  $18 = dup $16 by 1
  $19 = call $17<%121<builtinTagWithoutValue>> with $16 ($10<%31<Core:bool:is:1>> is responsible)
  $20 = dup $19 by 1
  $21 = %132<Match>
  $22 = call $7<%110<builtinEquals>> with $19 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $23 = dup $16 by 1
  $24 = { body_27 capturing $16 }
  $25 = dup $0 by 1
  $26 = { body_28 capturing $0 }
  $27 = dup $22 by 1
  $28 = dup $24 by 1
  $29 = dup $26 by 1
  $30 = call $12<%113<builtinIfElse>> with $22 $24 $26 ($10<%31<Core:bool:is:1>> is responsible)
  $31 = dup $30 by 1
  $32 = call $17<%121<builtinTagWithoutValue>> with $30 ($10<%31<Core:bool:is:1>> is responsible)
  $33 = dup $32 by 1
  $34 = call $7<%110<builtinEquals>> with $32 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $35 = dup $34 by 1
  $36 = %183<{ body_0 }>
  $37 = %190<{ body_9 }>
  $38 = call $12<%113<builtinIfElse>> with $34 $36<%183<{ body_0 }>> $37<%190<{ body_9 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $39 = trace: end of call
  $40 = %39<Core:bool:lazyOr:4>
  $41 = %185<{ body_6 }>
  $42 = dup $38 by 1
  $43 = %171<"`is a` was not satisfied">
  $44 = dup $2 by 1
  $45 = trace: start of call of $41<%185<{ body_6 }>> with $38 $43<%171<"`is a` was not satisfied">> $2 ($40<%39<Core:bool:lazyOr:4>> is responsible, code is at $40<%39<Core:bool:lazyOr:4>>)
  $46 = dup $38 by 1
  $47 = dup $2 by 1
  $48 = call $41<%185<{ body_6 }>> with $38 $43<%171<"`is a` was not satisfied">> $2 ($40<%39<Core:bool:lazyOr:4>> is responsible)
  $49 = trace: end of call
  $50 = %32<Core:bool:lazyOr:12>
  $51 = %198<{ body_20 }>
  $52 = dup $1 by 1
  $53 = trace: start of call of $51<%198<{ body_20 }>> with $1 ($50<%32<Core:bool:lazyOr:12>> is responsible, code is at $50<%32<Core:bool:lazyOr:12>>)
  $54 = %124<builtinTypeOf>
  $55 = dup $1 by 1
  $56 = %30<Builtins::typeOf:5>
  $57 = call $54<%124<builtinTypeOf>> with $1 ($56<%30<Builtins::typeOf:5>> is responsible)
  $58 = dup $57 by 1
  $59 = %129<Function>
  $60 = %0<Builtins::equals:6>
  $61 = call $7<%110<builtinEquals>> with $57 $59<%129<Function>> ($60<%0<Builtins::equals:6>> is responsible)
  $62 = dup $1 by 1
  $63 = { body_29 capturing $1 }
  $64 = %63<Core:function:is0:11>
  $65 = %193<{ body_14 }>
  $66 = dup $61 by 1
  $67 = dup $63 by 1
  $68 = trace: start of call of $65<%193<{ body_14 }>> with $61 $63 $37<%190<{ body_9 }>> ($64<%63<Core:function:is0:11>> is responsible, code is at $64<%63<Core:function:is0:11>>)
  $69 = dup $61 by 1
  $70 = dup $63 by 1
  $71 = call $65<%193<{ body_14 }>> with $61 $63 $37<%190<{ body_9 }>> ($64<%63<Core:function:is0:11>> is responsible)
  $72 = trace: end of call
  $73 = trace: end of call
  $74 = %33<Core:bool:lazyOr:14>
  $75 = dup $71 by 1
  $76 = %166<"`function.is0 b` was not satisfied">
  $77 = dup $2 by 1
  $78 = trace: start of call of $41<%185<{ body_6 }>> with $71 $76<%166<"`function.is0 b` was not satisfied">> $2 ($74<%33<Core:bool:lazyOr:14>> is responsible, code is at $74<%33<Core:bool:lazyOr:14>>)
  $79 = dup $71 by 1
  $80 = dup $2 by 1
  $81 = call $41<%185<{ body_6 }>> with $71 $76<%166<"`function.is0 b` was not satisfied">> $2 ($74<%33<Core:bool:lazyOr:14>> is responsible)
  $82 = trace: end of call
  $83 = dup $0 by 1
  $84 = %34<Core:bool:lazyOr:16>
  $85 = call $7<%110<builtinEquals>> with $8<%141<True>> $0 ($84<%34<Core:bool:lazyOr:16>> is responsible)
  $86 = dup $85 by 1
  $87 = call $12<%113<builtinIfElse>> with $85 $14<%188<{ body_7 }>> $15<%189<{ body_8 }>> ($84<%34<Core:bool:lazyOr:16>> is responsible)
  $88 = dup $87 by 1
  $89 = call $17<%121<builtinTagWithoutValue>> with $87 ($84<%34<Core:bool:lazyOr:16>> is responsible)
  $90 = dup $89 by 1
  $91 = call $7<%110<builtinEquals>> with $89 $21<%132<Match>> ($84<%34<Core:bool:lazyOr:16>> is responsible)
  $92 = dup $0 by 1
  $93 = dup $1 by 1
  $94 = dup $2 by 1
  $95 = { body_32 capturing $0, $1, $2 }
  $96 = dup $91 by 1
  $97 = dup $95 by 1
  $98 = call $12<%113<builtinIfElse>> with $91 $36<%183<{ body_0 }>> $95 ($84<%34<Core:bool:lazyOr:16>> is responsible)
  $99 = drop $95
  $100 = drop $91
  $101 = drop $89
  $102 = drop $87
  $103 = drop $85
  $104 = drop $81
  $105 = drop $71
  $106 = drop $63
  $107 = drop $61
  $108 = drop $57
  $109 = drop $48
  $110 = drop $38
  $111 = drop $34
  $112 = drop $32
  $113 = drop $30
  $114 = drop $26
  $115 = drop $24
  $116 = drop $22
  $117 = drop $19
  $118 = drop $16
  $119 = drop $11
  $120 = drop $1
  $121 = drop $0
  $122 = $98
body_34 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_35 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = %128<False>
  $4 = dup $0 by 1
  $5 = %31<Core:bool:is:1>
  $6 = call $2<%110<builtinEquals>> with $3<%128<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_36 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_37 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = %128<False>
  $4 = dup $0 by 1
  $5 = %31<Core:bool:is:1>
  $6 = call $2<%110<builtinEquals>> with $3<%128<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_38 (responsible $1) =
  # Original HIR IDs: Core:bool:or:12
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_39 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:bool:or
  # Captured IDs: none
  $3 = %41<Core:bool:or:2>
  $4 = %200<{ body_25 }>
  $5 = dup $0 by 1
  $6 = trace: start of call of $4<%200<{ body_25 }>> with $0 ($3<%41<Core:bool:or:2>> is responsible, code is at $3<%41<Core:bool:or:2>>)
  $7 = %110<builtinEquals>
  $8 = %141<True>
  $9 = dup $0 by 1
  $10 = %31<Core:bool:is:1>
  $11 = call $7<%110<builtinEquals>> with $8<%141<True>> $0 ($10<%31<Core:bool:is:1>> is responsible)
  $12 = %113<builtinIfElse>
  $13 = dup $11 by 1
  $14 = %188<{ body_7 }>
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $11 $14<%188<{ body_7 }>> $15<%189<{ body_8 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $17 = %121<builtinTagWithoutValue>
  $18 = dup $16 by 1
  $19 = call $17<%121<builtinTagWithoutValue>> with $16 ($10<%31<Core:bool:is:1>> is responsible)
  $20 = dup $19 by 1
  $21 = %132<Match>
  $22 = call $7<%110<builtinEquals>> with $19 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $23 = dup $16 by 1
  $24 = { body_34 capturing $16 }
  $25 = dup $0 by 1
  $26 = { body_35 capturing $0 }
  $27 = dup $22 by 1
  $28 = dup $24 by 1
  $29 = dup $26 by 1
  $30 = call $12<%113<builtinIfElse>> with $22 $24 $26 ($10<%31<Core:bool:is:1>> is responsible)
  $31 = dup $30 by 1
  $32 = call $17<%121<builtinTagWithoutValue>> with $30 ($10<%31<Core:bool:is:1>> is responsible)
  $33 = dup $32 by 1
  $34 = call $7<%110<builtinEquals>> with $32 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $35 = dup $34 by 1
  $36 = %183<{ body_0 }>
  $37 = %190<{ body_9 }>
  $38 = call $12<%113<builtinIfElse>> with $34 $36<%183<{ body_0 }>> $37<%190<{ body_9 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $39 = trace: end of call
  $40 = %42<Core:bool:or:4>
  $41 = %185<{ body_6 }>
  $42 = dup $38 by 1
  $43 = %171<"`is a` was not satisfied">
  $44 = dup $2 by 1
  $45 = trace: start of call of $41<%185<{ body_6 }>> with $38 $43<%171<"`is a` was not satisfied">> $2 ($40<%42<Core:bool:or:4>> is responsible, code is at $40<%42<Core:bool:or:4>>)
  $46 = dup $38 by 1
  $47 = dup $2 by 1
  $48 = call $41<%185<{ body_6 }>> with $38 $43<%171<"`is a` was not satisfied">> $2 ($40<%42<Core:bool:or:4>> is responsible)
  $49 = trace: end of call
  $50 = %43<Core:bool:or:7>
  $51 = dup $1 by 1
  $52 = trace: start of call of $4<%200<{ body_25 }>> with $1 ($50<%43<Core:bool:or:7>> is responsible, code is at $50<%43<Core:bool:or:7>>)
  $53 = dup $1 by 1
  $54 = call $7<%110<builtinEquals>> with $8<%141<True>> $1 ($10<%31<Core:bool:is:1>> is responsible)
  $55 = dup $54 by 1
  $56 = call $12<%113<builtinIfElse>> with $54 $14<%188<{ body_7 }>> $15<%189<{ body_8 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $57 = dup $56 by 1
  $58 = call $17<%121<builtinTagWithoutValue>> with $56 ($10<%31<Core:bool:is:1>> is responsible)
  $59 = dup $58 by 1
  $60 = call $7<%110<builtinEquals>> with $58 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $61 = dup $56 by 1
  $62 = { body_36 capturing $56 }
  $63 = dup $1 by 1
  $64 = { body_37 capturing $1 }
  $65 = dup $60 by 1
  $66 = dup $62 by 1
  $67 = dup $64 by 1
  $68 = call $12<%113<builtinIfElse>> with $60 $62 $64 ($10<%31<Core:bool:is:1>> is responsible)
  $69 = dup $68 by 1
  $70 = call $17<%121<builtinTagWithoutValue>> with $68 ($10<%31<Core:bool:is:1>> is responsible)
  $71 = dup $70 by 1
  $72 = call $7<%110<builtinEquals>> with $70 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $73 = dup $72 by 1
  $74 = call $12<%113<builtinIfElse>> with $72 $36<%183<{ body_0 }>> $37<%190<{ body_9 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $75 = trace: end of call
  $76 = %44<Core:bool:or:9>
  $77 = dup $74 by 1
  $78 = %172<"`is b` was not satisfied">
  $79 = dup $2 by 1
  $80 = trace: start of call of $41<%185<{ body_6 }>> with $74 $78<%172<"`is b` was not satisfied">> $2 ($76<%44<Core:bool:or:9>> is responsible, code is at $76<%44<Core:bool:or:9>>)
  $81 = dup $74 by 1
  $82 = dup $2 by 1
  $83 = call $41<%185<{ body_6 }>> with $74 $78<%172<"`is b` was not satisfied">> $2 ($76<%44<Core:bool:or:9>> is responsible)
  $84 = trace: end of call
  $85 = dup $1 by 1
  $86 = { body_38 capturing $1 }
  $87 = %40<Core:bool:or:13>
  $88 = %202<{ body_33 }>
  $89 = dup $0 by 1
  $90 = dup $86 by 1
  $91 = trace: tail call of $88<%202<{ body_33 }>> with $0 $86 ($87<%40<Core:bool:or:13>> is responsible, code is at $87<%40<Core:bool:or:13>>)
  $92 = dup $0 by 1
  $93 = dup $86 by 1
  $94 = call $88<%202<{ body_33 }>> with $0 $86 ($87<%40<Core:bool:or:13>> is responsible)
  $95 = drop $86
  $96 = drop $83
  $97 = drop $74
  $98 = drop $72
  $99 = drop $70
  $100 = drop $68
  $101 = drop $64
  $102 = drop $62
  $103 = drop $60
  $104 = drop $58
  $105 = drop $56
  $106 = drop $54
  $107 = drop $48
  $108 = drop $38
  $109 = drop $34
  $110 = drop $32
  $111 = drop $30
  $112 = drop $26
  $113 = drop $24
  $114 = drop $22
  $115 = drop $19
  $116 = drop $16
  $117 = drop $11
  $118 = drop $1
  $119 = drop $0
  $120 = $94
body_40 (responsible $1) =
  # Original HIR IDs: Core:function:is2:9
  # Captured IDs: $0
  $2 = %68<Core:function:is2:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%68<Core:function:is2:9:3>> is responsible, code is at $2<%68<Core:function:is2:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%68<Core:function:is2:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%68<Core:function:is2:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %144<2>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%144<2>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_41 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is2
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %30<Builtins::typeOf:5>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%30<Builtins::typeOf:5>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %129<Function>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%129<Function>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_40 capturing $0 }
  $13 = %67<Core:function:is2:11>
  $14 = %193<{ body_14 }>
  $15 = dup $10 by 1
  $16 = dup $12 by 1
  $17 = %190<{ body_9 }>
  $18 = trace: tail call of $14<%193<{ body_14 }>> with $10 $12 $17<%190<{ body_9 }>> ($13<%67<Core:function:is2:11>> is responsible, code is at $13<%67<Core:function:is2:11>>)
  $19 = dup $10 by 1
  $20 = dup $12 by 1
  $21 = call $14<%193<{ body_14 }>> with $10 $12 $17<%190<{ body_9 }>> ($13<%67<Core:function:is2:11>> is responsible)
  $22 = drop $12
  $23 = drop $10
  $24 = drop $5
  $25 = drop $0
  $26 = $21
body_42 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_43 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = %128<False>
  $4 = dup $0 by 1
  $5 = %31<Core:bool:is:1>
  $6 = call $2<%110<builtinEquals>> with $3<%128<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_44 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %64<Core:function:is0:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%64<Core:function:is0:9:3>> is responsible, code is at $2<%64<Core:function:is0:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %142<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%142<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_45 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_46 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = %110<builtinEquals>
  $3 = %128<False>
  $4 = dup $0 by 1
  $5 = %7<Builtins::ifElse:1>
  $6 = call $2<%110<builtinEquals>> with $3<%128<False>> $0 ($5<%7<Builtins::ifElse:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = dup $6 by 1
  $9 = %188<{ body_7 }>
  $10 = %189<{ body_8 }>
  $11 = call $7<%113<builtinIfElse>> with $6 $9<%188<{ body_7 }>> $10<%189<{ body_8 }>> ($5<%7<Builtins::ifElse:1>> is responsible)
  $12 = drop $6
  $13 = $11
body_47 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:controlFlow:if
  # Captured IDs: none
  $3 = %48<Core:controlFlow:if:7>
  $4 = %200<{ body_25 }>
  $5 = dup $0 by 1
  $6 = trace: start of call of $4<%200<{ body_25 }>> with $0 ($3<%48<Core:controlFlow:if:7>> is responsible, code is at $3<%48<Core:controlFlow:if:7>>)
  $7 = %110<builtinEquals>
  $8 = %141<True>
  $9 = dup $0 by 1
  $10 = %31<Core:bool:is:1>
  $11 = call $7<%110<builtinEquals>> with $8<%141<True>> $0 ($10<%31<Core:bool:is:1>> is responsible)
  $12 = %113<builtinIfElse>
  $13 = dup $11 by 1
  $14 = %188<{ body_7 }>
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $11 $14<%188<{ body_7 }>> $15<%189<{ body_8 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $17 = %121<builtinTagWithoutValue>
  $18 = dup $16 by 1
  $19 = call $17<%121<builtinTagWithoutValue>> with $16 ($10<%31<Core:bool:is:1>> is responsible)
  $20 = dup $19 by 1
  $21 = %132<Match>
  $22 = call $7<%110<builtinEquals>> with $19 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $23 = dup $16 by 1
  $24 = { body_42 capturing $16 }
  $25 = dup $0 by 1
  $26 = { body_43 capturing $0 }
  $27 = dup $22 by 1
  $28 = dup $24 by 1
  $29 = dup $26 by 1
  $30 = call $12<%113<builtinIfElse>> with $22 $24 $26 ($10<%31<Core:bool:is:1>> is responsible)
  $31 = dup $30 by 1
  $32 = call $17<%121<builtinTagWithoutValue>> with $30 ($10<%31<Core:bool:is:1>> is responsible)
  $33 = dup $32 by 1
  $34 = call $7<%110<builtinEquals>> with $32 $21<%132<Match>> ($10<%31<Core:bool:is:1>> is responsible)
  $35 = dup $34 by 1
  $36 = %183<{ body_0 }>
  $37 = %190<{ body_9 }>
  $38 = call $12<%113<builtinIfElse>> with $34 $36<%183<{ body_0 }>> $37<%190<{ body_9 }>> ($10<%31<Core:bool:is:1>> is responsible)
  $39 = trace: end of call
  $40 = %49<Core:controlFlow:if:9>
  $41 = %185<{ body_6 }>
  $42 = dup $38 by 1
  $43 = %160<"`bool.is condition` was not satisfied">
  $44 = dup $2 by 1
  $45 = trace: start of call of $41<%185<{ body_6 }>> with $38 $43<%160<"`bool.is condition` was not satisfied">> $2 ($40<%49<Core:controlFlow:if:9>> is responsible, code is at $40<%49<Core:controlFlow:if:9>>)
  $46 = dup $38 by 1
  $47 = dup $2 by 1
  $48 = call $41<%185<{ body_6 }>> with $38 $43<%160<"`bool.is condition` was not satisfied">> $2 ($40<%49<Core:controlFlow:if:9>> is responsible)
  $49 = trace: end of call
  $50 = %45<Core:controlFlow:if:17>
  $51 = %198<{ body_20 }>
  $52 = dup $1 by 1
  $53 = trace: start of call of $51<%198<{ body_20 }>> with $1 ($50<%45<Core:controlFlow:if:17>> is responsible, code is at $50<%45<Core:controlFlow:if:17>>)
  $54 = %124<builtinTypeOf>
  $55 = dup $1 by 1
  $56 = %30<Builtins::typeOf:5>
  $57 = call $54<%124<builtinTypeOf>> with $1 ($56<%30<Builtins::typeOf:5>> is responsible)
  $58 = dup $57 by 1
  $59 = %129<Function>
  $60 = %0<Builtins::equals:6>
  $61 = call $7<%110<builtinEquals>> with $57 $59<%129<Function>> ($60<%0<Builtins::equals:6>> is responsible)
  $62 = dup $1 by 1
  $63 = { body_44 capturing $1 }
  $64 = %63<Core:function:is0:11>
  $65 = %193<{ body_14 }>
  $66 = dup $61 by 1
  $67 = dup $63 by 1
  $68 = trace: start of call of $65<%193<{ body_14 }>> with $61 $63 $37<%190<{ body_9 }>> ($64<%63<Core:function:is0:11>> is responsible, code is at $64<%63<Core:function:is0:11>>)
  $69 = dup $61 by 1
  $70 = dup $63 by 1
  $71 = call $65<%193<{ body_14 }>> with $61 $63 $37<%190<{ body_9 }>> ($64<%63<Core:function:is0:11>> is responsible)
  $72 = trace: end of call
  $73 = trace: end of call
  $74 = %46<Core:controlFlow:if:19>
  $75 = dup $71 by 1
  $76 = %168<"`function.is0 then` was not satisfied">
  $77 = dup $2 by 1
  $78 = trace: start of call of $41<%185<{ body_6 }>> with $71 $76<%168<"`function.is0 then` was not satisfied">> $2 ($74<%46<Core:controlFlow:if:19>> is responsible, code is at $74<%46<Core:controlFlow:if:19>>)
  $79 = dup $71 by 1
  $80 = dup $2 by 1
  $81 = call $41<%185<{ body_6 }>> with $71 $76<%168<"`function.is0 then` was not satisfied">> $2 ($74<%46<Core:controlFlow:if:19>> is responsible)
  $82 = trace: end of call
  $83 = %47<Core:controlFlow:if:24>
  $84 = dup $0 by 1
  $85 = dup $1 by 1
  $86 = %184<{ body_1 }>
  $87 = trace: start of call of $65<%193<{ body_14 }>> with $0 $1 $86<%184<{ body_1 }>> ($83<%47<Core:controlFlow:if:24>> is responsible, code is at $83<%47<Core:controlFlow:if:24>>)
  $88 = dup $0 by 1
  $89 = %7<Builtins::ifElse:1>
  $90 = call $7<%110<builtinEquals>> with $8<%141<True>> $0 ($89<%7<Builtins::ifElse:1>> is responsible)
  $91 = dup $90 by 1
  $92 = call $12<%113<builtinIfElse>> with $90 $14<%188<{ body_7 }>> $15<%189<{ body_8 }>> ($89<%7<Builtins::ifElse:1>> is responsible)
  $93 = dup $92 by 1
  $94 = call $17<%121<builtinTagWithoutValue>> with $92 ($89<%7<Builtins::ifElse:1>> is responsible)
  $95 = dup $94 by 1
  $96 = call $7<%110<builtinEquals>> with $94 $21<%132<Match>> ($89<%7<Builtins::ifElse:1>> is responsible)
  $97 = dup $92 by 1
  $98 = { body_45 capturing $92 }
  $99 = dup $0 by 1
  $100 = { body_46 capturing $0 }
  $101 = dup $96 by 1
  $102 = dup $98 by 1
  $103 = dup $100 by 1
  $104 = call $12<%113<builtinIfElse>> with $96 $98 $100 ($89<%7<Builtins::ifElse:1>> is responsible)
  $105 = dup $104 by 1
  $106 = call $17<%121<builtinTagWithoutValue>> with $104 ($89<%7<Builtins::ifElse:1>> is responsible)
  $107 = dup $106 by 1
  $108 = call $7<%110<builtinEquals>> with $106 $21<%132<Match>> ($89<%7<Builtins::ifElse:1>> is responsible)
  $109 = dup $108 by 1
  $110 = call $12<%113<builtinIfElse>> with $108 $36<%183<{ body_0 }>> $37<%190<{ body_9 }>> ($89<%7<Builtins::ifElse:1>> is responsible)
  $111 = %15<Builtins::ifElse:5>
  $112 = dup $110 by 1
  $113 = %161<"`conditionIsBool` was not satisfied">
  $114 = trace: start of call of $41<%185<{ body_6 }>> with $110 $113<%161<"`conditionIsBool` was not satisfied">> $83<%47<Core:controlFlow:if:24>> ($111<%15<Builtins::ifElse:5>> is responsible, code is at $111<%15<Builtins::ifElse:5>>)
  $115 = dup $110 by 1
  $116 = call $41<%185<{ body_6 }>> with $110 $113<%161<"`conditionIsBool` was not satisfied">> $83<%47<Core:controlFlow:if:24>> ($111<%15<Builtins::ifElse:5>> is responsible)
  $117 = trace: end of call
  $118 = dup $1 by 1
  $119 = %28<Builtins::typeIs:19>
  $120 = call $54<%124<builtinTypeOf>> with $1 ($119<%28<Builtins::typeIs:19>> is responsible)
  $121 = dup $120 by 1
  $122 = %29<Builtins::typeIs:25>
  $123 = call $7<%110<builtinEquals>> with $120 $59<%129<Function>> ($122<%29<Builtins::typeIs:25>> is responsible)
  $124 = %8<Builtins::ifElse:11>
  $125 = dup $123 by 1
  $126 = %182<"`then | typeIs Function` was not satisfied">
  $127 = trace: start of call of $41<%185<{ body_6 }>> with $123 $126<%182<"`then | typeIs Function` was not satisfied">> $83<%47<Core:controlFlow:if:24>> ($124<%8<Builtins::ifElse:11>> is responsible, code is at $124<%8<Builtins::ifElse:11>>)
  $128 = dup $123 by 1
  $129 = call $41<%185<{ body_6 }>> with $123 $126<%182<"`then | typeIs Function` was not satisfied">> $83<%47<Core:controlFlow:if:24>> ($124<%8<Builtins::ifElse:11>> is responsible)
  $130 = trace: end of call
  $131 = %9<Builtins::ifElse:14>
  $132 = %192<{ body_11 }>
  $133 = dup $1 by 1
  $134 = trace: start of call of $132<%192<{ body_11 }>> with $1 ($131<%9<Builtins::ifElse:14>> is responsible, code is at $131<%9<Builtins::ifElse:14>>)
  $135 = %6<Builtins::getArgumentCount:5>
  $136 = dup $123 by 1
  $137 = %164<"`function | typeIs Function` was not satisfied">
  $138 = trace: start of call of $41<%185<{ body_6 }>> with $123 $137<%164<"`function | typeIs Function` was not satisfied">> $131<%9<Builtins::ifElse:14>> ($135<%6<Builtins::getArgumentCount:5>> is responsible, code is at $135<%6<Builtins::getArgumentCount:5>>)
  $139 = dup $123 by 1
  $140 = call $41<%185<{ body_6 }>> with $123 $137<%164<"`function | typeIs Function` was not satisfied">> $131<%9<Builtins::ifElse:14>> ($135<%6<Builtins::getArgumentCount:5>> is responsible)
  $141 = trace: end of call
  $142 = %112<builtinGetArgumentCount>
  $143 = dup $1 by 1
  $144 = %5<Builtins::getArgumentCount:11>
  $145 = call $142<%112<builtinGetArgumentCount>> with $1 ($144<%5<Builtins::getArgumentCount:11>> is responsible)
  $146 = trace: end of call
  $147 = dup $145 by 1
  $148 = %142<0>
  $149 = call $7<%110<builtinEquals>> with $145 $148<%142<0>> ($60<%0<Builtins::equals:6>> is responsible)
  $150 = %10<Builtins::ifElse:19>
  $151 = dup $149 by 1
  $152 = %181<"`then | getArgumentCount | equals 0` was not satisfied">
  $153 = trace: start of call of $41<%185<{ body_6 }>> with $149 $152<%181<"`then | getArgumentCount | equals 0` was not satisfied">> $83<%47<Core:controlFlow:if:24>> ($150<%10<Builtins::ifElse:19>> is responsible, code is at $150<%10<Builtins::ifElse:19>>)
  $154 = dup $149 by 1
  $155 = call $41<%185<{ body_6 }>> with $149 $152<%181<"`then | getArgumentCount | equals 0` was not satisfied">> $83<%47<Core:controlFlow:if:24>> ($150<%10<Builtins::ifElse:19>> is responsible)
  $156 = trace: end of call
  $157 = %14<Builtins::ifElse:41>
  $158 = dup $0 by 1
  $159 = dup $1 by 1
  $160 = trace: start of call of $12<%113<builtinIfElse>> with $0 $1 $86<%184<{ body_1 }>> ($157<%14<Builtins::ifElse:41>> is responsible, code is at $157<%14<Builtins::ifElse:41>>)
  $161 = dup $0 by 1
  $162 = dup $1 by 1
  $163 = call $12<%113<builtinIfElse>> with $0 $1 $86<%184<{ body_1 }>> ($157<%14<Builtins::ifElse:41>> is responsible)
  $164 = trace: end of call
  $165 = trace: end of call
  $166 = dup $163 by 1
  $167 = $163
  $168 = drop $163
  $169 = drop $155
  $170 = drop $149
  $171 = drop $145
  $172 = drop $140
  $173 = drop $129
  $174 = drop $123
  $175 = drop $120
  $176 = drop $116
  $177 = drop $110
  $178 = drop $108
  $179 = drop $106
  $180 = drop $104
  $181 = drop $100
  $182 = drop $98
  $183 = drop $96
  $184 = drop $94
  $185 = drop $92
  $186 = drop $90
  $187 = drop $81
  $188 = drop $71
  $189 = drop $63
  $190 = drop $61
  $191 = drop $57
  $192 = drop $48
  $193 = drop $38
  $194 = drop $34
  $195 = drop $32
  $196 = drop $30
  $197 = drop $26
  $198 = drop $24
  $199 = drop $22
  $200 = drop $19
  $201 = drop $16
  $202 = drop $11
  $203 = drop $1
  $204 = drop $0
  $205 = $167
body_48 (responsible $1) =
  # Original HIR IDs: Core:function:is2:9
  # Captured IDs: $0
  $2 = %68<Core:function:is2:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%68<Core:function:is2:9:3>> is responsible, code is at $2<%68<Core:function:is2:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%68<Core:function:is2:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%68<Core:function:is2:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %144<2>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%144<2>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_49 $1 (+ responsible $2) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0
  # Captured IDs: $0
  $3 = %59<Core:controlFlow:recursive:16:0:3>
  $4 = dup $0 by 1
  $5 = dup $0 by 1
  $6 = dup $1 by 1
  $7 = trace: tail call of $0 with $0 $1 ($3<%59<Core:controlFlow:recursive:16:0:3>> is responsible, code is at $3<%59<Core:controlFlow:recursive:16:0:3>>)
  $8 = dup $0 by 1
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = call $0 with $0 $1 ($3<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $12 = drop $1
  $13 = $11
body_50 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Core:controlFlow:recursive:16
  # Captured IDs: $0
  $4 = dup $1 by 1
  $5 = { body_49 capturing $1 }
  $6 = %60<Core:controlFlow:recursive:16:5>
  $7 = dup $0 by 1
  $8 = dup $5 by 1
  $9 = dup $2 by 1
  $10 = trace: tail call of $0 with $5 $2 ($6<%60<Core:controlFlow:recursive:16:5>> is responsible, code is at $6<%60<Core:controlFlow:recursive:16:5>>)
  $11 = dup $0 by 1
  $12 = dup $5 by 1
  $13 = dup $2 by 1
  $14 = call $0 with $5 $2 ($6<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $15 = drop $5
  $16 = drop $2
  $17 = drop $1
  $18 = $14
body_51 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:controlFlow:recursive
  # Captured IDs: none
  $3 = %62<Core:controlFlow:recursive:7>
  $4 = %204<{ body_41 }>
  $5 = dup $1 by 1
  $6 = trace: start of call of $4<%204<{ body_41 }>> with $1 ($3<%62<Core:controlFlow:recursive:7>> is responsible, code is at $3<%62<Core:controlFlow:recursive:7>>)
  $7 = %124<builtinTypeOf>
  $8 = dup $1 by 1
  $9 = %30<Builtins::typeOf:5>
  $10 = call $7<%124<builtinTypeOf>> with $1 ($9<%30<Builtins::typeOf:5>> is responsible)
  $11 = %110<builtinEquals>
  $12 = dup $10 by 1
  $13 = %129<Function>
  $14 = %0<Builtins::equals:6>
  $15 = call $11<%110<builtinEquals>> with $10 $13<%129<Function>> ($14<%0<Builtins::equals:6>> is responsible)
  $16 = dup $1 by 1
  $17 = { body_48 capturing $1 }
  $18 = %67<Core:function:is2:11>
  $19 = %193<{ body_14 }>
  $20 = dup $15 by 1
  $21 = dup $17 by 1
  $22 = %190<{ body_9 }>
  $23 = trace: start of call of $19<%193<{ body_14 }>> with $15 $17 $22<%190<{ body_9 }>> ($18<%67<Core:function:is2:11>> is responsible, code is at $18<%67<Core:function:is2:11>>)
  $24 = dup $15 by 1
  $25 = dup $17 by 1
  $26 = call $19<%193<{ body_14 }>> with $15 $17 $22<%190<{ body_9 }>> ($18<%67<Core:function:is2:11>> is responsible)
  $27 = trace: end of call
  $28 = trace: end of call
  $29 = %58<Core:controlFlow:recursive:15>
  $30 = %185<{ body_6 }>
  $31 = dup $26 by 1
  $32 = %150<"The `body` should take the recursive function and the argument.">
  $33 = dup $2 by 1
  $34 = trace: start of call of $30<%185<{ body_6 }>> with $26 $32<%150<"The `body` should take the recursive function and the argument.">> $2 ($29<%58<Core:controlFlow:recursive:15>> is responsible, code is at $29<%58<Core:controlFlow:recursive:15>>)
  $35 = dup $26 by 1
  $36 = dup $2 by 1
  $37 = call $30<%185<{ body_6 }>> with $26 $32<%150<"The `body` should take the recursive function and the argument.">> $2 ($29<%58<Core:controlFlow:recursive:15>> is responsible)
  $38 = trace: end of call
  $39 = dup $1 by 1
  $40 = { body_50 capturing $1 }
  $41 = %61<Core:controlFlow:recursive:21>
  $42 = dup $40 by 1
  $43 = dup $40 by 1
  $44 = dup $0 by 1
  $45 = trace: tail call of $40 with $40 $0 ($41<%61<Core:controlFlow:recursive:21>> is responsible, code is at $41<%61<Core:controlFlow:recursive:21>>)
  $46 = dup $40 by 1
  $47 = dup $40 by 1
  $48 = dup $0 by 1
  $49 = call $40 with $40 $0 ($41<%61<Core:controlFlow:recursive:21>> is responsible)
  $50 = drop $40
  $51 = drop $37
  $52 = drop $26
  $53 = drop $17
  $54 = drop $15
  $55 = drop $10
  $56 = drop $1
  $57 = drop $0
  $58 = $49
body_52 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %64<Core:function:is0:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%64<Core:function:is0:9:3>> is responsible, code is at $2<%64<Core:function:is0:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %142<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%142<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_53 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = %64<Core:function:is0:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%64<Core:function:is0:9:3>> is responsible, code is at $2<%64<Core:function:is0:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%64<Core:function:is0:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %142<0>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%142<0>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_54 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop:12:37
  # Captured IDs: $0
  $2 = %52<Core:controlFlow:loop:12:37:2>
  $3 = dup $0 by 1
  $4 = %134<Nothing>
  $5 = trace: tail call of $0 with $4<%134<Nothing>> ($2<%52<Core:controlFlow:loop:12:37:2>> is responsible, code is at $2<%52<Core:controlFlow:loop:12:37:2>>)
  $6 = dup $0 by 1
  $7 = call $0 with $4<%134<Nothing>> ($2<%52<Core:controlFlow:loop:12:37:2>> is responsible)
body_55 $2 $3 (+ responsible $4) =
  # Original HIR IDs: Core:controlFlow:loop:12
  # Captured IDs: $0, $1
  $5 = %54<Core:controlFlow:loop:12:7>
  $6 = %199<{ body_22 }>
  $7 = dup $0 by 1
  $8 = trace: start of call of $6<%199<{ body_22 }>> with $0 ($5<%54<Core:controlFlow:loop:12:7>> is responsible, code is at $5<%54<Core:controlFlow:loop:12:7>>)
  $9 = %70<Core:function:run:2>
  $10 = %198<{ body_20 }>
  $11 = dup $0 by 1
  $12 = trace: start of call of $10<%198<{ body_20 }>> with $0 ($9<%70<Core:function:run:2>> is responsible, code is at $9<%70<Core:function:run:2>>)
  $13 = %124<builtinTypeOf>
  $14 = dup $0 by 1
  $15 = %30<Builtins::typeOf:5>
  $16 = call $13<%124<builtinTypeOf>> with $0 ($15<%30<Builtins::typeOf:5>> is responsible)
  $17 = %110<builtinEquals>
  $18 = dup $16 by 1
  $19 = %129<Function>
  $20 = %0<Builtins::equals:6>
  $21 = call $17<%110<builtinEquals>> with $16 $19<%129<Function>> ($20<%0<Builtins::equals:6>> is responsible)
  $22 = dup $0 by 1
  $23 = { body_53 capturing $0 }
  $24 = %63<Core:function:is0:11>
  $25 = %193<{ body_14 }>
  $26 = dup $21 by 1
  $27 = dup $23 by 1
  $28 = %190<{ body_9 }>
  $29 = trace: start of call of $25<%193<{ body_14 }>> with $21 $23 $28<%190<{ body_9 }>> ($24<%63<Core:function:is0:11>> is responsible, code is at $24<%63<Core:function:is0:11>>)
  $30 = dup $21 by 1
  $31 = dup $23 by 1
  $32 = call $25<%193<{ body_14 }>> with $21 $23 $28<%190<{ body_9 }>> ($24<%63<Core:function:is0:11>> is responsible)
  $33 = trace: end of call
  $34 = trace: end of call
  $35 = %71<Core:function:run:4>
  $36 = %185<{ body_6 }>
  $37 = dup $32 by 1
  $38 = %177<"`is0 body` was not satisfied">
  $39 = trace: start of call of $36<%185<{ body_6 }>> with $32 $38<%177<"`is0 body` was not satisfied">> $5<%54<Core:controlFlow:loop:12:7>> ($35<%71<Core:function:run:4>> is responsible, code is at $35<%71<Core:function:run:4>>)
  $40 = dup $32 by 1
  $41 = call $36<%185<{ body_6 }>> with $32 $38<%177<"`is0 body` was not satisfied">> $5<%54<Core:controlFlow:loop:12:7>> ($35<%71<Core:function:run:4>> is responsible)
  $42 = trace: end of call
  $43 = %69<Core:function:run:12>
  $44 = %191<{ body_10 }>
  $45 = dup $0 by 1
  $46 = trace: start of call of $44<%191<{ body_10 }>> with $0 ($43<%69<Core:function:run:12>> is responsible, code is at $43<%69<Core:function:run:12>>)
  $47 = dup $0 by 1
  $48 = %28<Builtins::typeIs:19>
  $49 = call $13<%124<builtinTypeOf>> with $0 ($48<%28<Builtins::typeIs:19>> is responsible)
  $50 = dup $49 by 1
  $51 = %29<Builtins::typeIs:25>
  $52 = call $17<%110<builtinEquals>> with $49 $19<%129<Function>> ($51<%29<Builtins::typeIs:25>> is responsible)
  $53 = %4<Builtins::functionRun:5>
  $54 = dup $52 by 1
  $55 = %164<"`function | typeIs Function` was not satisfied">
  $56 = trace: start of call of $36<%185<{ body_6 }>> with $52 $55<%164<"`function | typeIs Function` was not satisfied">> $43<%69<Core:function:run:12>> ($53<%4<Builtins::functionRun:5>> is responsible, code is at $53<%4<Builtins::functionRun:5>>)
  $57 = dup $52 by 1
  $58 = call $36<%185<{ body_6 }>> with $52 $55<%164<"`function | typeIs Function` was not satisfied">> $43<%69<Core:function:run:12>> ($53<%4<Builtins::functionRun:5>> is responsible)
  $59 = trace: end of call
  $60 = %112<builtinGetArgumentCount>
  $61 = dup $0 by 1
  $62 = %1<Builtins::functionRun:11>
  $63 = call $60<%112<builtinGetArgumentCount>> with $0 ($62<%1<Builtins::functionRun:11>> is responsible)
  $64 = dup $63 by 1
  $65 = %142<0>
  $66 = call $17<%110<builtinEquals>> with $63 $65<%142<0>> ($20<%0<Builtins::equals:6>> is responsible)
  $67 = %2<Builtins::functionRun:16>
  $68 = dup $66 by 1
  $69 = %165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $70 = trace: start of call of $36<%185<{ body_6 }>> with $66 $69<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $43<%69<Core:function:run:12>> ($67<%2<Builtins::functionRun:16>> is responsible, code is at $67<%2<Builtins::functionRun:16>>)
  $71 = dup $66 by 1
  $72 = call $36<%185<{ body_6 }>> with $66 $69<%165<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $43<%69<Core:function:run:12>> ($67<%2<Builtins::functionRun:16>> is responsible)
  $73 = trace: end of call
  $74 = %3<Builtins::functionRun:22>
  $75 = %111<builtinFunctionRun>
  $76 = dup $0 by 1
  $77 = trace: start of call of $75<%111<builtinFunctionRun>> with $0 ($74<%3<Builtins::functionRun:22>> is responsible, code is at $74<%3<Builtins::functionRun:22>>)
  $78 = dup $0 by 1
  $79 = call $0 with no arguments ($74<%3<Builtins::functionRun:22>> is responsible)
  $80 = trace: end of call
  $81 = trace: end of call
  $82 = trace: end of call
  $83 = dup $79 by 1
  $84 = %126<Continue>
  $85 = call $17<%110<builtinEquals>> with $79 $84<%126<Continue>> ($20<%0<Builtins::equals:6>> is responsible)
  $86 = dup $79 by 1
  $87 = %125<Break>
  $88 = call $17<%110<builtinEquals>> with $79 $87<%125<Break>> ($20<%0<Builtins::equals:6>> is responsible)
  $89 = %50<Core:controlFlow:loop:12:23>
  $90 = %203<{ body_39 }>
  $91 = dup $85 by 1
  $92 = dup $88 by 1
  $93 = trace: start of call of $90<%203<{ body_39 }>> with $85 $88 ($89<%50<Core:controlFlow:loop:12:23>> is responsible, code is at $89<%50<Core:controlFlow:loop:12:23>>)
  $94 = dup $85 by 1
  $95 = dup $88 by 1
  $96 = call $90<%203<{ body_39 }>> with $85 $88 ($89<%50<Core:controlFlow:loop:12:23>> is responsible)
  $97 = trace: end of call
  $98 = %51<Core:controlFlow:loop:12:31>
  $99 = dup $96 by 1
  $100 = %149<"The `body` has to return `Continue` or `Break`.">
  $101 = dup $1 by 1
  $102 = trace: start of call of $36<%185<{ body_6 }>> with $96 $100<%149<"The `body` has to return `Continue` or `Break`.">> $1 ($98<%51<Core:controlFlow:loop:12:31>> is responsible, code is at $98<%51<Core:controlFlow:loop:12:31>>)
  $103 = dup $96 by 1
  $104 = dup $1 by 1
  $105 = call $36<%185<{ body_6 }>> with $96 $100<%149<"The `body` has to return `Continue` or `Break`.">> $1 ($98<%51<Core:controlFlow:loop:12:31>> is responsible)
  $106 = trace: end of call
  $107 = dup $2 by 1
  $108 = { body_54 capturing $2 }
  $109 = %53<Core:controlFlow:loop:12:38>
  $110 = %205<{ body_47 }>
  $111 = dup $85 by 1
  $112 = dup $108 by 1
  $113 = trace: tail call of $110<%205<{ body_47 }>> with $85 $108 ($109<%53<Core:controlFlow:loop:12:38>> is responsible, code is at $109<%53<Core:controlFlow:loop:12:38>>)
  $114 = dup $85 by 1
  $115 = dup $108 by 1
  $116 = call $110<%205<{ body_47 }>> with $85 $108 ($109<%53<Core:controlFlow:loop:12:38>> is responsible)
  $117 = drop $108
  $118 = drop $105
  $119 = drop $96
  $120 = drop $88
  $121 = drop $85
  $122 = drop $79
  $123 = drop $72
  $124 = drop $66
  $125 = drop $63
  $126 = drop $58
  $127 = drop $52
  $128 = drop $49
  $129 = drop $41
  $130 = drop $32
  $131 = drop $23
  $132 = drop $21
  $133 = drop $16
  $134 = drop $3
  $135 = drop $2
  $136 = $116
body_56 $0 (+ responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop
  # Captured IDs: none
  $2 = %56<Core:controlFlow:loop:7>
  $3 = %198<{ body_20 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%198<{ body_20 }>> with $0 ($2<%56<Core:controlFlow:loop:7>> is responsible, code is at $2<%56<Core:controlFlow:loop:7>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %30<Builtins::typeOf:5>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%30<Builtins::typeOf:5>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %0<Builtins::equals:6>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%0<Builtins::equals:6>> is responsible)
  $15 = dup $0 by 1
  $16 = { body_52 capturing $0 }
  $17 = %63<Core:function:is0:11>
  $18 = %193<{ body_14 }>
  $19 = dup $14 by 1
  $20 = dup $16 by 1
  $21 = %190<{ body_9 }>
  $22 = trace: start of call of $18<%193<{ body_14 }>> with $14 $16 $21<%190<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible, code is at $17<%63<Core:function:is0:11>>)
  $23 = dup $14 by 1
  $24 = dup $16 by 1
  $25 = call $18<%193<{ body_14 }>> with $14 $16 $21<%190<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible)
  $26 = trace: end of call
  $27 = trace: end of call
  $28 = %57<Core:controlFlow:loop:9>
  $29 = %185<{ body_6 }>
  $30 = dup $25 by 1
  $31 = %167<"`function.is0 body` was not satisfied">
  $32 = dup $1 by 1
  $33 = trace: start of call of $29<%185<{ body_6 }>> with $25 $31<%167<"`function.is0 body` was not satisfied">> $1 ($28<%57<Core:controlFlow:loop:9>> is responsible, code is at $28<%57<Core:controlFlow:loop:9>>)
  $34 = dup $25 by 1
  $35 = dup $1 by 1
  $36 = call $29<%185<{ body_6 }>> with $25 $31<%167<"`function.is0 body` was not satisfied">> $1 ($28<%57<Core:controlFlow:loop:9>> is responsible)
  $37 = trace: end of call
  $38 = dup $0 by 1
  $39 = dup $1 by 1
  $40 = { body_55 capturing $0, $1 }
  $41 = %55<Core:controlFlow:loop:13>
  $42 = %206<{ body_51 }>
  $43 = %134<Nothing>
  $44 = dup $40 by 1
  $45 = trace: tail call of $42<%206<{ body_51 }>> with $43<%134<Nothing>> $40 ($41<%55<Core:controlFlow:loop:13>> is responsible, code is at $41<%55<Core:controlFlow:loop:13>>)
  $46 = dup $40 by 1
  $47 = call $42<%206<{ body_51 }>> with $43<%134<Nothing>> $40 ($41<%55<Core:controlFlow:loop:13>> is responsible)
  $48 = drop $40
  $49 = drop $36
  $50 = drop $25
  $51 = drop $16
  $52 = drop $14
  $53 = drop $9
  $54 = drop $0
  $55 = $47
body_57 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:int:compareTo
  # Captured IDs: none
  $3 = %124<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %30<Builtins::typeOf:5>
  $6 = call $3<%124<builtinTypeOf>> with $0 ($5<%30<Builtins::typeOf:5>> is responsible)
  $7 = %110<builtinEquals>
  $8 = dup $6 by 1
  $9 = %130<Int>
  $10 = %0<Builtins::equals:6>
  $11 = call $7<%110<builtinEquals>> with $6 $9<%130<Int>> ($10<%0<Builtins::equals:6>> is responsible)
  $12 = %73<Core:int:compareTo:4>
  $13 = %185<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %175<"`is valueA` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%185<{ body_6 }>> with $11 $15<%175<"`is valueA` was not satisfied">> $2 ($12<%73<Core:int:compareTo:4>> is responsible, code is at $12<%73<Core:int:compareTo:4>>)
  $18 = dup $11 by 1
  $19 = dup $2 by 1
  $20 = call $13<%185<{ body_6 }>> with $11 $15<%175<"`is valueA` was not satisfied">> $2 ($12<%73<Core:int:compareTo:4>> is responsible)
  $21 = trace: end of call
  $22 = dup $1 by 1
  $23 = call $3<%124<builtinTypeOf>> with $1 ($5<%30<Builtins::typeOf:5>> is responsible)
  $24 = dup $23 by 1
  $25 = call $7<%110<builtinEquals>> with $23 $9<%130<Int>> ($10<%0<Builtins::equals:6>> is responsible)
  $26 = %74<Core:int:compareTo:9>
  $27 = dup $25 by 1
  $28 = %176<"`is valueB` was not satisfied">
  $29 = dup $2 by 1
  $30 = trace: start of call of $13<%185<{ body_6 }>> with $25 $28<%176<"`is valueB` was not satisfied">> $2 ($26<%74<Core:int:compareTo:9>> is responsible, code is at $26<%74<Core:int:compareTo:9>>)
  $31 = dup $25 by 1
  $32 = dup $2 by 1
  $33 = call $13<%185<{ body_6 }>> with $25 $28<%176<"`is valueB` was not satisfied">> $2 ($26<%74<Core:int:compareTo:9>> is responsible)
  $34 = trace: end of call
  $35 = %72<Core:int:compareTo:18>
  $36 = %194<{ body_15 }>
  $37 = dup $0 by 1
  $38 = dup $1 by 1
  $39 = trace: tail call of $36<%194<{ body_15 }>> with $0 $1 ($35<%72<Core:int:compareTo:18>> is responsible, code is at $35<%72<Core:int:compareTo:18>>)
  $40 = dup $0 by 1
  $41 = %28<Builtins::typeIs:19>
  $42 = call $3<%124<builtinTypeOf>> with $0 ($41<%28<Builtins::typeIs:19>> is responsible)
  $43 = dup $42 by 1
  $44 = %29<Builtins::typeIs:25>
  $45 = call $7<%110<builtinEquals>> with $42 $9<%130<Int>> ($44<%29<Builtins::typeIs:25>> is responsible)
  $46 = %18<Builtins::intCompareTo:5>
  $47 = dup $45 by 1
  $48 = %157<"`a | typeIs Int` was not satisfied">
  $49 = trace: start of call of $13<%185<{ body_6 }>> with $45 $48<%157<"`a | typeIs Int` was not satisfied">> $35<%72<Core:int:compareTo:18>> ($46<%18<Builtins::intCompareTo:5>> is responsible, code is at $46<%18<Builtins::intCompareTo:5>>)
  $50 = dup $45 by 1
  $51 = call $13<%185<{ body_6 }>> with $45 $48<%157<"`a | typeIs Int` was not satisfied">> $35<%72<Core:int:compareTo:18>> ($46<%18<Builtins::intCompareTo:5>> is responsible)
  $52 = trace: end of call
  $53 = dup $1 by 1
  $54 = call $3<%124<builtinTypeOf>> with $1 ($41<%28<Builtins::typeIs:19>> is responsible)
  $55 = dup $54 by 1
  $56 = call $7<%110<builtinEquals>> with $54 $9<%130<Int>> ($44<%29<Builtins::typeIs:25>> is responsible)
  $57 = %16<Builtins::intCompareTo:11>
  $58 = dup $56 by 1
  $59 = %158<"`b | typeIs Int` was not satisfied">
  $60 = trace: start of call of $13<%185<{ body_6 }>> with $56 $59<%158<"`b | typeIs Int` was not satisfied">> $35<%72<Core:int:compareTo:18>> ($57<%16<Builtins::intCompareTo:11>> is responsible, code is at $57<%16<Builtins::intCompareTo:11>>)
  $61 = dup $56 by 1
  $62 = call $13<%185<{ body_6 }>> with $56 $59<%158<"`b | typeIs Int` was not satisfied">> $35<%72<Core:int:compareTo:18>> ($57<%16<Builtins::intCompareTo:11>> is responsible)
  $63 = trace: end of call
  $64 = %114<builtinIntCompareTo>
  $65 = dup $0 by 1
  $66 = dup $1 by 1
  $67 = %17<Builtins::intCompareTo:18>
  $68 = call $64<%114<builtinIntCompareTo>> with $0 $1 ($67<%17<Builtins::intCompareTo:18>> is responsible)
  $69 = drop $62
  $70 = drop $56
  $71 = drop $54
  $72 = drop $51
  $73 = drop $45
  $74 = drop $42
  $75 = drop $33
  $76 = drop $25
  $77 = drop $23
  $78 = drop $20
  $79 = drop $11
  $80 = drop $6
  $81 = drop $1
  $82 = drop $0
  $83 = $68
body_58 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:int:isLessThan
  # Captured IDs: none
  $3 = %124<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %30<Builtins::typeOf:5>
  $6 = call $3<%124<builtinTypeOf>> with $0 ($5<%30<Builtins::typeOf:5>> is responsible)
  $7 = %110<builtinEquals>
  $8 = dup $6 by 1
  $9 = %130<Int>
  $10 = %0<Builtins::equals:6>
  $11 = call $7<%110<builtinEquals>> with $6 $9<%130<Int>> ($10<%0<Builtins::equals:6>> is responsible)
  $12 = %76<Core:int:isLessThan:4>
  $13 = %185<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %175<"`is valueA` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%185<{ body_6 }>> with $11 $15<%175<"`is valueA` was not satisfied">> $2 ($12<%76<Core:int:isLessThan:4>> is responsible, code is at $12<%76<Core:int:isLessThan:4>>)
  $18 = dup $11 by 1
  $19 = dup $2 by 1
  $20 = call $13<%185<{ body_6 }>> with $11 $15<%175<"`is valueA` was not satisfied">> $2 ($12<%76<Core:int:isLessThan:4>> is responsible)
  $21 = trace: end of call
  $22 = dup $1 by 1
  $23 = call $3<%124<builtinTypeOf>> with $1 ($5<%30<Builtins::typeOf:5>> is responsible)
  $24 = dup $23 by 1
  $25 = call $7<%110<builtinEquals>> with $23 $9<%130<Int>> ($10<%0<Builtins::equals:6>> is responsible)
  $26 = %77<Core:int:isLessThan:9>
  $27 = dup $25 by 1
  $28 = %176<"`is valueB` was not satisfied">
  $29 = dup $2 by 1
  $30 = trace: start of call of $13<%185<{ body_6 }>> with $25 $28<%176<"`is valueB` was not satisfied">> $2 ($26<%77<Core:int:isLessThan:9>> is responsible, code is at $26<%77<Core:int:isLessThan:9>>)
  $31 = dup $25 by 1
  $32 = dup $2 by 1
  $33 = call $13<%185<{ body_6 }>> with $25 $28<%176<"`is valueB` was not satisfied">> $2 ($26<%77<Core:int:isLessThan:9>> is responsible)
  $34 = trace: end of call
  $35 = %75<Core:int:isLessThan:13>
  $36 = %208<{ body_57 }>
  $37 = dup $0 by 1
  $38 = dup $1 by 1
  $39 = trace: start of call of $36<%208<{ body_57 }>> with $0 $1 ($35<%75<Core:int:isLessThan:13>> is responsible, code is at $35<%75<Core:int:isLessThan:13>>)
  $40 = %73<Core:int:compareTo:4>
  $41 = dup $11 by 1
  $42 = trace: start of call of $13<%185<{ body_6 }>> with $11 $15<%175<"`is valueA` was not satisfied">> $35<%75<Core:int:isLessThan:13>> ($40<%73<Core:int:compareTo:4>> is responsible, code is at $40<%73<Core:int:compareTo:4>>)
  $43 = dup $11 by 1
  $44 = call $13<%185<{ body_6 }>> with $11 $15<%175<"`is valueA` was not satisfied">> $35<%75<Core:int:isLessThan:13>> ($40<%73<Core:int:compareTo:4>> is responsible)
  $45 = trace: end of call
  $46 = %74<Core:int:compareTo:9>
  $47 = dup $25 by 1
  $48 = trace: start of call of $13<%185<{ body_6 }>> with $25 $28<%176<"`is valueB` was not satisfied">> $35<%75<Core:int:isLessThan:13>> ($46<%74<Core:int:compareTo:9>> is responsible, code is at $46<%74<Core:int:compareTo:9>>)
  $49 = dup $25 by 1
  $50 = call $13<%185<{ body_6 }>> with $25 $28<%176<"`is valueB` was not satisfied">> $35<%75<Core:int:isLessThan:13>> ($46<%74<Core:int:compareTo:9>> is responsible)
  $51 = trace: end of call
  $52 = %72<Core:int:compareTo:18>
  $53 = %194<{ body_15 }>
  $54 = dup $0 by 1
  $55 = dup $1 by 1
  $56 = trace: start of call of $53<%194<{ body_15 }>> with $0 $1 ($52<%72<Core:int:compareTo:18>> is responsible, code is at $52<%72<Core:int:compareTo:18>>)
  $57 = dup $0 by 1
  $58 = %28<Builtins::typeIs:19>
  $59 = call $3<%124<builtinTypeOf>> with $0 ($58<%28<Builtins::typeIs:19>> is responsible)
  $60 = dup $59 by 1
  $61 = %29<Builtins::typeIs:25>
  $62 = call $7<%110<builtinEquals>> with $59 $9<%130<Int>> ($61<%29<Builtins::typeIs:25>> is responsible)
  $63 = %18<Builtins::intCompareTo:5>
  $64 = dup $62 by 1
  $65 = %157<"`a | typeIs Int` was not satisfied">
  $66 = trace: start of call of $13<%185<{ body_6 }>> with $62 $65<%157<"`a | typeIs Int` was not satisfied">> $52<%72<Core:int:compareTo:18>> ($63<%18<Builtins::intCompareTo:5>> is responsible, code is at $63<%18<Builtins::intCompareTo:5>>)
  $67 = dup $62 by 1
  $68 = call $13<%185<{ body_6 }>> with $62 $65<%157<"`a | typeIs Int` was not satisfied">> $52<%72<Core:int:compareTo:18>> ($63<%18<Builtins::intCompareTo:5>> is responsible)
  $69 = trace: end of call
  $70 = dup $1 by 1
  $71 = call $3<%124<builtinTypeOf>> with $1 ($58<%28<Builtins::typeIs:19>> is responsible)
  $72 = dup $71 by 1
  $73 = call $7<%110<builtinEquals>> with $71 $9<%130<Int>> ($61<%29<Builtins::typeIs:25>> is responsible)
  $74 = %16<Builtins::intCompareTo:11>
  $75 = dup $73 by 1
  $76 = %158<"`b | typeIs Int` was not satisfied">
  $77 = trace: start of call of $13<%185<{ body_6 }>> with $73 $76<%158<"`b | typeIs Int` was not satisfied">> $52<%72<Core:int:compareTo:18>> ($74<%16<Builtins::intCompareTo:11>> is responsible, code is at $74<%16<Builtins::intCompareTo:11>>)
  $78 = dup $73 by 1
  $79 = call $13<%185<{ body_6 }>> with $73 $76<%158<"`b | typeIs Int` was not satisfied">> $52<%72<Core:int:compareTo:18>> ($74<%16<Builtins::intCompareTo:11>> is responsible)
  $80 = trace: end of call
  $81 = %114<builtinIntCompareTo>
  $82 = dup $0 by 1
  $83 = dup $1 by 1
  $84 = %17<Builtins::intCompareTo:18>
  $85 = call $81<%114<builtinIntCompareTo>> with $0 $1 ($84<%17<Builtins::intCompareTo:18>> is responsible)
  $86 = trace: end of call
  $87 = trace: end of call
  $88 = dup $85 by 1
  $89 = %131<Less>
  $90 = call $7<%110<builtinEquals>> with $85 $89<%131<Less>> ($10<%0<Builtins::equals:6>> is responsible)
  $91 = drop $85
  $92 = drop $79
  $93 = drop $73
  $94 = drop $71
  $95 = drop $68
  $96 = drop $62
  $97 = drop $59
  $98 = drop $50
  $99 = drop $44
  $100 = drop $33
  $101 = drop $25
  $102 = drop $23
  $103 = drop $20
  $104 = drop $11
  $105 = drop $6
  $106 = drop $1
  $107 = drop $0
  $108 = $90
body_59 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %66<Core:function:is1:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%66<Core:function:is1:9:3>> is responsible, code is at $2<%66<Core:function:is1:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%66<Core:function:is1:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%66<Core:function:is1:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %143<1>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%143<1>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_60 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is1
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %30<Builtins::typeOf:5>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%30<Builtins::typeOf:5>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %129<Function>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%129<Function>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_59 capturing $0 }
  $13 = %65<Core:function:is1:11>
  $14 = %193<{ body_14 }>
  $15 = dup $10 by 1
  $16 = dup $12 by 1
  $17 = %190<{ body_9 }>
  $18 = trace: tail call of $14<%193<{ body_14 }>> with $10 $12 $17<%190<{ body_9 }>> ($13<%65<Core:function:is1:11>> is responsible, code is at $13<%65<Core:function:is1:11>>)
  $19 = dup $10 by 1
  $20 = dup $12 by 1
  $21 = call $14<%193<{ body_14 }>> with $10 $12 $17<%190<{ body_9 }>> ($13<%65<Core:function:is1:11>> is responsible)
  $22 = drop $12
  $23 = drop $10
  $24 = drop $5
  $25 = drop $0
  $26 = $21
body_61 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %119<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_62 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %120<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %141<True>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%141<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_61 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_63 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %121<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%121<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %135<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%135<Ok>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_62 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_64 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_65 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %119<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_66 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %120<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %141<True>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%141<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_65 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_67 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %121<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%121<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %127<Error>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%127<Error>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_66 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_68 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %139<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%139<Tag>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_67 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_69 $0 (+ responsible $1) =
  # Original HIR IDs: Core:result:is
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %139<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%139<Tag>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_63 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = %121<builtinTagWithoutValue>
  $18 = dup $16 by 1
  $19 = call $17<%121<builtinTagWithoutValue>> with $16 ($4<%78<Core:result:is:1>> is responsible)
  $20 = dup $19 by 1
  $21 = %132<Match>
  $22 = call $6<%110<builtinEquals>> with $19 $21<%132<Match>> ($4<%78<Core:result:is:1>> is responsible)
  $23 = dup $16 by 1
  $24 = { body_64 capturing $16 }
  $25 = dup $0 by 1
  $26 = { body_68 capturing $0 }
  $27 = dup $22 by 1
  $28 = dup $24 by 1
  $29 = dup $26 by 1
  $30 = call $12<%113<builtinIfElse>> with $22 $24 $26 ($4<%78<Core:result:is:1>> is responsible)
  $31 = dup $30 by 1
  $32 = call $17<%121<builtinTagWithoutValue>> with $30 ($4<%78<Core:result:is:1>> is responsible)
  $33 = dup $32 by 1
  $34 = call $6<%110<builtinEquals>> with $32 $21<%132<Match>> ($4<%78<Core:result:is:1>> is responsible)
  $35 = dup $34 by 1
  $36 = %183<{ body_0 }>
  $37 = %190<{ body_9 }>
  $38 = call $12<%113<builtinIfElse>> with $34 $36<%183<{ body_0 }>> $37<%190<{ body_9 }>> ($4<%78<Core:result:is:1>> is responsible)
  $39 = drop $34
  $40 = drop $32
  $41 = drop $30
  $42 = drop $26
  $43 = drop $24
  $44 = drop $22
  $45 = drop $19
  $46 = drop $16
  $47 = drop $11
  $48 = drop $9
  $49 = drop $5
  $50 = drop $0
  $51 = $38
body_70 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-1:didNotMatch
  # Captured IDs: none
  $1 = %148<"No case matched the given expression.">
  $2 = %84<Core:result:mapOrElse:26>
  $3 = panicking because $1<%148<"No case matched the given expression.">> ($2<%84<Core:result:mapOrElse:26>> is at fault)
body_71 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %119<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_72 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %120<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %141<True>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%141<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_71 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_73 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %121<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%121<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %135<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%135<Ok>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_72 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_74 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_75 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %119<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_76 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %120<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %141<True>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%141<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_75 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_77 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = %121<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%121<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %127<Error>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%127<Error>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_76 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_78 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %78<Core:result:is:1>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %139<Tag>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%139<Tag>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_77 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_79 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %66<Core:function:is1:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%66<Core:function:is1:9:3>> is responsible, code is at $2<%66<Core:function:is1:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%66<Core:function:is1:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%66<Core:function:is1:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %143<1>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%143<1>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_80 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = %66<Core:function:is1:9:3>
  $3 = %192<{ body_11 }>
  $4 = dup $0 by 1
  $5 = trace: start of call of $3<%192<{ body_11 }>> with $0 ($2<%66<Core:function:is1:9:3>> is responsible, code is at $2<%66<Core:function:is1:9:3>>)
  $6 = %124<builtinTypeOf>
  $7 = dup $0 by 1
  $8 = %28<Builtins::typeIs:19>
  $9 = call $6<%124<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = dup $9 by 1
  $12 = %129<Function>
  $13 = %29<Builtins::typeIs:25>
  $14 = call $10<%110<builtinEquals>> with $9 $12<%129<Function>> ($13<%29<Builtins::typeIs:25>> is responsible)
  $15 = %6<Builtins::getArgumentCount:5>
  $16 = %185<{ body_6 }>
  $17 = dup $14 by 1
  $18 = %164<"`function | typeIs Function` was not satisfied">
  $19 = trace: start of call of $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%66<Core:function:is1:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible, code is at $15<%6<Builtins::getArgumentCount:5>>)
  $20 = dup $14 by 1
  $21 = call $16<%185<{ body_6 }>> with $14 $18<%164<"`function | typeIs Function` was not satisfied">> $2<%66<Core:function:is1:9:3>> ($15<%6<Builtins::getArgumentCount:5>> is responsible)
  $22 = trace: end of call
  $23 = %112<builtinGetArgumentCount>
  $24 = dup $0 by 1
  $25 = %5<Builtins::getArgumentCount:11>
  $26 = call $23<%112<builtinGetArgumentCount>> with $0 ($25<%5<Builtins::getArgumentCount:11>> is responsible)
  $27 = trace: end of call
  $28 = dup $26 by 1
  $29 = %143<1>
  $30 = %0<Builtins::equals:6>
  $31 = call $10<%110<builtinEquals>> with $26 $29<%143<1>> ($30<%0<Builtins::equals:6>> is responsible)
  $32 = drop $26
  $33 = drop $21
  $34 = drop $14
  $35 = drop $9
  $36 = $31
body_81 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %119<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $2<%119<builtinTagGetValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_82 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %120<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $2<%120<builtinTagHasValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %141<True>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%141<True>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_81 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_83 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %121<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $2<%121<builtinTagWithoutValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %135<Ok>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%135<Ok>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_82 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_84 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-0:matched
  # Captured IDs: $0, $1
  $3 = %119<builtinTagGetValue>
  $4 = dup $1 by 1
  $5 = %87<Core:result:mapOrElse:26:value>
  $6 = call $3<%119<builtinTagGetValue>> with $1 ($5<%87<Core:result:mapOrElse:26:value>> is responsible)
  $7 = %116<builtinListGet>
  $8 = dup $6 by 1
  $9 = %142<0>
  $10 = call $7<%116<builtinListGet>> with $6 $9<%142<0>> ($5<%87<Core:result:mapOrElse:26:value>> is responsible)
  $11 = %85<Core:result:mapOrElse:26:2>
  $12 = dup $0 by 1
  $13 = dup $10 by 1
  $14 = trace: tail call of $0 with $10 ($11<%85<Core:result:mapOrElse:26:2>> is responsible, code is at $11<%85<Core:result:mapOrElse:26:2>>)
  $15 = dup $0 by 1
  $16 = dup $10 by 1
  $17 = call $0 with $10 ($11<%85<Core:result:mapOrElse:26:2>> is responsible)
  $18 = drop $10
  $19 = drop $6
  $20 = $17
body_85 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %119<builtinTagGetValue>
  $3 = dup $0 by 1
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $2<%119<builtinTagGetValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = dup $5 by 1
  $7 = ($5,)
  $8 = dup $7 by 1
  $9 = Match $7
  $10 = drop $7
  $11 = drop $5
  $12 = $9
body_86 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %120<builtinTagHasValue>
  $3 = dup $0 by 1
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $2<%120<builtinTagHasValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %141<True>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%141<True>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_85 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_87 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = %121<builtinTagWithoutValue>
  $3 = dup $0 by 1
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $2<%121<builtinTagWithoutValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %127<Error>
  $8 = dup $5 by 1
  $9 = call $6<%110<builtinEquals>> with $7<%127<Error>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $10 = dup $0 by 1
  $11 = { body_86 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = dup $9 by 1
  $14 = dup $11 by 1
  $15 = %189<{ body_8 }>
  $16 = call $12<%113<builtinIfElse>> with $9 $11 $15<%189<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $17 = drop $11
  $18 = drop $9
  $19 = drop $5
  $20 = $16
body_88 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-1:matched
  # Captured IDs: $0, $1
  $3 = %119<builtinTagGetValue>
  $4 = dup $1 by 1
  $5 = %88<Core:result:mapOrElse:26:value#1>
  $6 = call $3<%119<builtinTagGetValue>> with $1 ($5<%88<Core:result:mapOrElse:26:value#1>> is responsible)
  $7 = %116<builtinListGet>
  $8 = dup $6 by 1
  $9 = %142<0>
  $10 = call $7<%116<builtinListGet>> with $6 $9<%142<0>> ($5<%88<Core:result:mapOrElse:26:value#1>> is responsible)
  $11 = %86<Core:result:mapOrElse:26:5>
  $12 = dup $0 by 1
  $13 = dup $10 by 1
  $14 = trace: tail call of $0 with $10 ($11<%86<Core:result:mapOrElse:26:5>> is responsible, code is at $11<%86<Core:result:mapOrElse:26:5>>)
  $15 = dup $0 by 1
  $16 = dup $10 by 1
  $17 = call $0 with $10 ($11<%86<Core:result:mapOrElse:26:5>> is responsible)
  $18 = drop $10
  $19 = drop $6
  $20 = $17
body_89 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-0:didNotMatch
  # Captured IDs: $0, $1
  $3 = %124<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %84<Core:result:mapOrElse:26>
  $6 = call $3<%124<builtinTypeOf>> with $0 ($5<%84<Core:result:mapOrElse:26>> is responsible)
  $7 = %110<builtinEquals>
  $8 = %139<Tag>
  $9 = dup $6 by 1
  $10 = call $7<%110<builtinEquals>> with $8<%139<Tag>> $6 ($5<%84<Core:result:mapOrElse:26>> is responsible)
  $11 = dup $0 by 1
  $12 = { body_87 capturing $0 }
  $13 = %113<builtinIfElse>
  $14 = dup $10 by 1
  $15 = dup $12 by 1
  $16 = %189<{ body_8 }>
  $17 = call $13<%113<builtinIfElse>> with $10 $12 $16<%189<{ body_8 }>> ($5<%84<Core:result:mapOrElse:26>> is responsible)
  $18 = %121<builtinTagWithoutValue>
  $19 = dup $17 by 1
  $20 = call $18<%121<builtinTagWithoutValue>> with $17 ($5<%84<Core:result:mapOrElse:26>> is responsible)
  $21 = dup $20 by 1
  $22 = %132<Match>
  $23 = call $7<%110<builtinEquals>> with $20 $22<%132<Match>> ($5<%84<Core:result:mapOrElse:26>> is responsible)
  $24 = dup $1 by 1
  $25 = dup $17 by 1
  $26 = { body_88 capturing $1, $17 }
  $27 = dup $23 by 1
  $28 = dup $26 by 1
  $29 = %212<{ body_70 }>
  $30 = call $13<%113<builtinIfElse>> with $23 $26 $29<%212<{ body_70 }>> ($5<%84<Core:result:mapOrElse:26>> is responsible)
  $31 = drop $26
  $32 = drop $23
  $33 = drop $20
  $34 = drop $17
  $35 = drop $12
  $36 = drop $10
  $37 = drop $6
  $38 = $30
body_90 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse
  # Captured IDs: none
  $4 = %81<Core:result:mapOrElse:2>
  $5 = %211<{ body_69 }>
  $6 = dup $0 by 1
  $7 = trace: start of call of $5<%211<{ body_69 }>> with $0 ($4<%81<Core:result:mapOrElse:2>> is responsible, code is at $4<%81<Core:result:mapOrElse:2>>)
  $8 = %124<builtinTypeOf>
  $9 = dup $0 by 1
  $10 = %78<Core:result:is:1>
  $11 = call $8<%124<builtinTypeOf>> with $0 ($10<%78<Core:result:is:1>> is responsible)
  $12 = %110<builtinEquals>
  $13 = %139<Tag>
  $14 = dup $11 by 1
  $15 = call $12<%110<builtinEquals>> with $13<%139<Tag>> $11 ($10<%78<Core:result:is:1>> is responsible)
  $16 = dup $0 by 1
  $17 = { body_73 capturing $0 }
  $18 = %113<builtinIfElse>
  $19 = dup $15 by 1
  $20 = dup $17 by 1
  $21 = %189<{ body_8 }>
  $22 = call $18<%113<builtinIfElse>> with $15 $17 $21<%189<{ body_8 }>> ($10<%78<Core:result:is:1>> is responsible)
  $23 = %121<builtinTagWithoutValue>
  $24 = dup $22 by 1
  $25 = call $23<%121<builtinTagWithoutValue>> with $22 ($10<%78<Core:result:is:1>> is responsible)
  $26 = dup $25 by 1
  $27 = %132<Match>
  $28 = call $12<%110<builtinEquals>> with $25 $27<%132<Match>> ($10<%78<Core:result:is:1>> is responsible)
  $29 = dup $22 by 1
  $30 = { body_74 capturing $22 }
  $31 = dup $0 by 1
  $32 = { body_78 capturing $0 }
  $33 = dup $28 by 1
  $34 = dup $30 by 1
  $35 = dup $32 by 1
  $36 = call $18<%113<builtinIfElse>> with $28 $30 $32 ($10<%78<Core:result:is:1>> is responsible)
  $37 = dup $36 by 1
  $38 = call $23<%121<builtinTagWithoutValue>> with $36 ($10<%78<Core:result:is:1>> is responsible)
  $39 = dup $38 by 1
  $40 = call $12<%110<builtinEquals>> with $38 $27<%132<Match>> ($10<%78<Core:result:is:1>> is responsible)
  $41 = dup $40 by 1
  $42 = %183<{ body_0 }>
  $43 = %190<{ body_9 }>
  $44 = call $18<%113<builtinIfElse>> with $40 $42<%183<{ body_0 }>> $43<%190<{ body_9 }>> ($10<%78<Core:result:is:1>> is responsible)
  $45 = trace: end of call
  $46 = %89<Core:result:mapOrElse:4>
  $47 = %185<{ body_6 }>
  $48 = dup $44 by 1
  $49 = %173<"`is result` was not satisfied">
  $50 = dup $3 by 1
  $51 = trace: start of call of $47<%185<{ body_6 }>> with $44 $49<%173<"`is result` was not satisfied">> $3 ($46<%89<Core:result:mapOrElse:4>> is responsible, code is at $46<%89<Core:result:mapOrElse:4>>)
  $52 = dup $44 by 1
  $53 = dup $3 by 1
  $54 = call $47<%185<{ body_6 }>> with $44 $49<%173<"`is result` was not satisfied">> $3 ($46<%89<Core:result:mapOrElse:4>> is responsible)
  $55 = trace: end of call
  $56 = %79<Core:result:mapOrElse:12>
  $57 = %210<{ body_60 }>
  $58 = dup $1 by 1
  $59 = trace: start of call of $57<%210<{ body_60 }>> with $1 ($56<%79<Core:result:mapOrElse:12>> is responsible, code is at $56<%79<Core:result:mapOrElse:12>>)
  $60 = dup $1 by 1
  $61 = %30<Builtins::typeOf:5>
  $62 = call $8<%124<builtinTypeOf>> with $1 ($61<%30<Builtins::typeOf:5>> is responsible)
  $63 = dup $62 by 1
  $64 = %129<Function>
  $65 = %0<Builtins::equals:6>
  $66 = call $12<%110<builtinEquals>> with $62 $64<%129<Function>> ($65<%0<Builtins::equals:6>> is responsible)
  $67 = dup $1 by 1
  $68 = { body_79 capturing $1 }
  $69 = %65<Core:function:is1:11>
  $70 = %193<{ body_14 }>
  $71 = dup $66 by 1
  $72 = dup $68 by 1
  $73 = trace: start of call of $70<%193<{ body_14 }>> with $66 $68 $43<%190<{ body_9 }>> ($69<%65<Core:function:is1:11>> is responsible, code is at $69<%65<Core:function:is1:11>>)
  $74 = dup $66 by 1
  $75 = dup $68 by 1
  $76 = call $70<%193<{ body_14 }>> with $66 $68 $43<%190<{ body_9 }>> ($69<%65<Core:function:is1:11>> is responsible)
  $77 = trace: end of call
  $78 = trace: end of call
  $79 = %80<Core:result:mapOrElse:14>
  $80 = dup $76 by 1
  $81 = %170<"`function.is1 okMapper` was not satisfied">
  $82 = dup $3 by 1
  $83 = trace: start of call of $47<%185<{ body_6 }>> with $76 $81<%170<"`function.is1 okMapper` was not satisfied">> $3 ($79<%80<Core:result:mapOrElse:14>> is responsible, code is at $79<%80<Core:result:mapOrElse:14>>)
  $84 = dup $76 by 1
  $85 = dup $3 by 1
  $86 = call $47<%185<{ body_6 }>> with $76 $81<%170<"`function.is1 okMapper` was not satisfied">> $3 ($79<%80<Core:result:mapOrElse:14>> is responsible)
  $87 = trace: end of call
  $88 = %82<Core:result:mapOrElse:22>
  $89 = dup $2 by 1
  $90 = trace: start of call of $57<%210<{ body_60 }>> with $2 ($88<%82<Core:result:mapOrElse:22>> is responsible, code is at $88<%82<Core:result:mapOrElse:22>>)
  $91 = dup $2 by 1
  $92 = call $8<%124<builtinTypeOf>> with $2 ($61<%30<Builtins::typeOf:5>> is responsible)
  $93 = dup $92 by 1
  $94 = call $12<%110<builtinEquals>> with $92 $64<%129<Function>> ($65<%0<Builtins::equals:6>> is responsible)
  $95 = dup $2 by 1
  $96 = { body_80 capturing $2 }
  $97 = dup $94 by 1
  $98 = dup $96 by 1
  $99 = trace: start of call of $70<%193<{ body_14 }>> with $94 $96 $43<%190<{ body_9 }>> ($69<%65<Core:function:is1:11>> is responsible, code is at $69<%65<Core:function:is1:11>>)
  $100 = dup $94 by 1
  $101 = dup $96 by 1
  $102 = call $70<%193<{ body_14 }>> with $94 $96 $43<%190<{ body_9 }>> ($69<%65<Core:function:is1:11>> is responsible)
  $103 = trace: end of call
  $104 = trace: end of call
  $105 = %83<Core:result:mapOrElse:24>
  $106 = dup $102 by 1
  $107 = %169<"`function.is1 errorMapper` was not satisfied">
  $108 = dup $3 by 1
  $109 = trace: start of call of $47<%185<{ body_6 }>> with $102 $107<%169<"`function.is1 errorMapper` was not satisfied">> $3 ($105<%83<Core:result:mapOrElse:24>> is responsible, code is at $105<%83<Core:result:mapOrElse:24>>)
  $110 = dup $102 by 1
  $111 = dup $3 by 1
  $112 = call $47<%185<{ body_6 }>> with $102 $107<%169<"`function.is1 errorMapper` was not satisfied">> $3 ($105<%83<Core:result:mapOrElse:24>> is responsible)
  $113 = trace: end of call
  $114 = dup $0 by 1
  $115 = %84<Core:result:mapOrElse:26>
  $116 = call $8<%124<builtinTypeOf>> with $0 ($115<%84<Core:result:mapOrElse:26>> is responsible)
  $117 = dup $116 by 1
  $118 = call $12<%110<builtinEquals>> with $13<%139<Tag>> $116 ($115<%84<Core:result:mapOrElse:26>> is responsible)
  $119 = dup $0 by 1
  $120 = { body_83 capturing $0 }
  $121 = dup $118 by 1
  $122 = dup $120 by 1
  $123 = call $18<%113<builtinIfElse>> with $118 $120 $21<%189<{ body_8 }>> ($115<%84<Core:result:mapOrElse:26>> is responsible)
  $124 = dup $123 by 1
  $125 = call $23<%121<builtinTagWithoutValue>> with $123 ($115<%84<Core:result:mapOrElse:26>> is responsible)
  $126 = dup $125 by 1
  $127 = call $12<%110<builtinEquals>> with $125 $27<%132<Match>> ($115<%84<Core:result:mapOrElse:26>> is responsible)
  $128 = dup $1 by 1
  $129 = dup $123 by 1
  $130 = { body_84 capturing $1, $123 }
  $131 = dup $0 by 1
  $132 = dup $2 by 1
  $133 = { body_89 capturing $0, $2 }
  $134 = dup $127 by 1
  $135 = dup $130 by 1
  $136 = dup $133 by 1
  $137 = call $18<%113<builtinIfElse>> with $127 $130 $133 ($115<%84<Core:result:mapOrElse:26>> is responsible)
  $138 = drop $133
  $139 = drop $130
  $140 = drop $127
  $141 = drop $125
  $142 = drop $123
  $143 = drop $120
  $144 = drop $118
  $145 = drop $116
  $146 = drop $112
  $147 = drop $102
  $148 = drop $96
  $149 = drop $94
  $150 = drop $92
  $151 = drop $86
  $152 = drop $76
  $153 = drop $68
  $154 = drop $66
  $155 = drop $62
  $156 = drop $54
  $157 = drop $44
  $158 = drop $40
  $159 = drop $38
  $160 = drop $36
  $161 = drop $32
  $162 = drop $30
  $163 = drop $28
  $164 = drop $25
  $165 = drop $22
  $166 = drop $17
  $167 = drop $15
  $168 = drop $11
  $169 = drop $2
  $170 = drop $1
  $171 = drop $0
  $172 = $137
body_91 $0 (+ responsible $1) =
  # Original HIR IDs: Core:text:trim
  # Captured IDs: none
  $2 = %124<builtinTypeOf>
  $3 = dup $0 by 1
  $4 = %30<Builtins::typeOf:5>
  $5 = call $2<%124<builtinTypeOf>> with $0 ($4<%30<Builtins::typeOf:5>> is responsible)
  $6 = %110<builtinEquals>
  $7 = dup $5 by 1
  $8 = %140<Text>
  $9 = %0<Builtins::equals:6>
  $10 = call $6<%110<builtinEquals>> with $5 $8<%140<Text>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = %90<Core:text:trim:4>
  $12 = %185<{ body_6 }>
  $13 = dup $10 by 1
  $14 = %174<"`is text` was not satisfied">
  $15 = dup $1 by 1
  $16 = trace: start of call of $12<%185<{ body_6 }>> with $10 $14<%174<"`is text` was not satisfied">> $1 ($11<%90<Core:text:trim:4>> is responsible, code is at $11<%90<Core:text:trim:4>>)
  $17 = dup $10 by 1
  $18 = dup $1 by 1
  $19 = call $12<%185<{ body_6 }>> with $10 $14<%174<"`is text` was not satisfied">> $1 ($11<%90<Core:text:trim:4>> is responsible)
  $20 = trace: end of call
  $21 = %91<Core:text:trim:7>
  $22 = %197<{ body_18 }>
  $23 = dup $0 by 1
  $24 = trace: start of call of $22<%197<{ body_18 }>> with $0 ($21<%91<Core:text:trim:7>> is responsible, code is at $21<%91<Core:text:trim:7>>)
  $25 = dup $0 by 1
  $26 = %28<Builtins::typeIs:19>
  $27 = call $2<%124<builtinTypeOf>> with $0 ($26<%28<Builtins::typeIs:19>> is responsible)
  $28 = dup $27 by 1
  $29 = %29<Builtins::typeIs:25>
  $30 = call $6<%110<builtinEquals>> with $27 $8<%140<Text>> ($29<%29<Builtins::typeIs:25>> is responsible)
  $31 = %27<Builtins::textTrimStart:5>
  $32 = dup $30 by 1
  $33 = %180<"`text | typeIs Text` was not satisfied">
  $34 = trace: start of call of $12<%185<{ body_6 }>> with $30 $33<%180<"`text | typeIs Text` was not satisfied">> $21<%91<Core:text:trim:7>> ($31<%27<Builtins::textTrimStart:5>> is responsible, code is at $31<%27<Builtins::textTrimStart:5>>)
  $35 = dup $30 by 1
  $36 = call $12<%185<{ body_6 }>> with $30 $33<%180<"`text | typeIs Text` was not satisfied">> $21<%91<Core:text:trim:7>> ($31<%27<Builtins::textTrimStart:5>> is responsible)
  $37 = trace: end of call
  $38 = %123<builtinTextTrimStart>
  $39 = dup $0 by 1
  $40 = %26<Builtins::textTrimStart:11>
  $41 = call $38<%123<builtinTextTrimStart>> with $0 ($40<%26<Builtins::textTrimStart:11>> is responsible)
  $42 = trace: end of call
  $43 = %122<builtinTextTrimEnd>
  $44 = dup $41 by 1
  $45 = %25<Builtins::textTrimEnd:11>
  $46 = call $43<%122<builtinTextTrimEnd>> with $41 ($45<%25<Builtins::textTrimEnd:11>> is responsible)
  $47 = drop $41
  $48 = drop $36
  $49 = drop $30
  $50 = drop $27
  $51 = drop $19
  $52 = drop $10
  $53 = drop $5
  $54 = drop $0
  $55 = $46
body_92 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:16:14:34:6:11
  # Captured IDs: none
  $1 = %147<"Lower!">
body_93 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:16:14:34:6:12
  # Captured IDs: none
  $1 = %146<"Higher!">
body_94 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print
  # Captured IDs: $0
  $3 = %107<Examples:higherLower:16:print:5>
  $4 = %196<{ body_17 }>
  $5 = dup $0 by 1
  $6 = %137<Stdout>
  $7 = trace: start of call of $4<%196<{ body_17 }>> with $0 $6<%137<Stdout>> ($3<%107<Examples:higherLower:16:print:5>> is responsible, code is at $3<%107<Examples:higherLower:16:print:5>>)
  $8 = %124<builtinTypeOf>
  $9 = dup $0 by 1
  $10 = %28<Builtins::typeIs:19>
  $11 = call $8<%124<builtinTypeOf>> with $0 ($10<%28<Builtins::typeIs:19>> is responsible)
  $12 = %110<builtinEquals>
  $13 = dup $11 by 1
  $14 = %138<Struct>
  $15 = %29<Builtins::typeIs:25>
  $16 = call $12<%110<builtinEquals>> with $11 $14<%138<Struct>> ($15<%29<Builtins::typeIs:25>> is responsible)
  $17 = %24<Builtins::structGet:5>
  $18 = %185<{ body_6 }>
  $19 = dup $16 by 1
  $20 = %178<"`struct | typeIs Struct` was not satisfied">
  $21 = trace: start of call of $18<%185<{ body_6 }>> with $16 $20<%178<"`struct | typeIs Struct` was not satisfied">> $3<%107<Examples:higherLower:16:print:5>> ($17<%24<Builtins::structGet:5>> is responsible, code is at $17<%24<Builtins::structGet:5>>)
  $22 = dup $16 by 1
  $23 = call $18<%185<{ body_6 }>> with $16 $20<%178<"`struct | typeIs Struct` was not satisfied">> $3<%107<Examples:higherLower:16:print:5>> ($17<%24<Builtins::structGet:5>> is responsible)
  $24 = trace: end of call
  $25 = %118<builtinStructHasKey>
  $26 = dup $0 by 1
  $27 = %21<Builtins::structGet:12>
  $28 = call $25<%118<builtinStructHasKey>> with $0 $6<%137<Stdout>> ($27<%21<Builtins::structGet:12>> is responsible)
  $29 = %22<Builtins::structGet:14>
  $30 = dup $28 by 1
  $31 = %179<"`struct | ✨.structHasKey key` was not satisfied">
  $32 = trace: start of call of $18<%185<{ body_6 }>> with $28 $31<%179<"`struct | ✨.structHasKey key` was not satisfied">> $3<%107<Examples:higherLower:16:print:5>> ($29<%22<Builtins::structGet:14>> is responsible, code is at $29<%22<Builtins::structGet:14>>)
  $33 = dup $28 by 1
  $34 = call $18<%185<{ body_6 }>> with $28 $31<%179<"`struct | ✨.structHasKey key` was not satisfied">> $3<%107<Examples:higherLower:16:print:5>> ($29<%22<Builtins::structGet:14>> is responsible)
  $35 = trace: end of call
  $36 = %117<builtinStructGet>
  $37 = dup $0 by 1
  $38 = %23<Builtins::structGet:21>
  $39 = call $36<%117<builtinStructGet>> with $0 $6<%137<Stdout>> ($38<%23<Builtins::structGet:21>> is responsible)
  $40 = trace: end of call
  $41 = %108<Examples:higherLower:16:print:7>
  $42 = dup $39 by 1
  $43 = dup $1 by 1
  $44 = trace: tail call of $39 with $1 ($41<%108<Examples:higherLower:16:print:7>> is responsible, code is at $41<%108<Examples:higherLower:16:print:7>>)
  $45 = dup $39 by 1
  $46 = dup $1 by 1
  $47 = call $39 with $1 ($41<%108<Examples:higherLower:16:print:7>> is responsible)
  $48 = drop $39
  $49 = drop $34
  $50 = drop $28
  $51 = drop $23
  $52 = drop $16
  $53 = drop $11
  $54 = drop $1
  $55 = $47
body_95 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:0
  # Captured IDs: $0
  $2 = %92<Examples:higherLower:16:0:6>
  $3 = %196<{ body_17 }>
  $4 = dup $0 by 1
  $5 = %136<Stdin>
  $6 = trace: start of call of $3<%196<{ body_17 }>> with $0 $5<%136<Stdin>> ($2<%92<Examples:higherLower:16:0:6>> is responsible, code is at $2<%92<Examples:higherLower:16:0:6>>)
  $7 = %124<builtinTypeOf>
  $8 = dup $0 by 1
  $9 = %28<Builtins::typeIs:19>
  $10 = call $7<%124<builtinTypeOf>> with $0 ($9<%28<Builtins::typeIs:19>> is responsible)
  $11 = %110<builtinEquals>
  $12 = dup $10 by 1
  $13 = %138<Struct>
  $14 = %29<Builtins::typeIs:25>
  $15 = call $11<%110<builtinEquals>> with $10 $13<%138<Struct>> ($14<%29<Builtins::typeIs:25>> is responsible)
  $16 = %24<Builtins::structGet:5>
  $17 = %185<{ body_6 }>
  $18 = dup $15 by 1
  $19 = %178<"`struct | typeIs Struct` was not satisfied">
  $20 = trace: start of call of $17<%185<{ body_6 }>> with $15 $19<%178<"`struct | typeIs Struct` was not satisfied">> $2<%92<Examples:higherLower:16:0:6>> ($16<%24<Builtins::structGet:5>> is responsible, code is at $16<%24<Builtins::structGet:5>>)
  $21 = dup $15 by 1
  $22 = call $17<%185<{ body_6 }>> with $15 $19<%178<"`struct | typeIs Struct` was not satisfied">> $2<%92<Examples:higherLower:16:0:6>> ($16<%24<Builtins::structGet:5>> is responsible)
  $23 = trace: end of call
  $24 = %118<builtinStructHasKey>
  $25 = dup $0 by 1
  $26 = %21<Builtins::structGet:12>
  $27 = call $24<%118<builtinStructHasKey>> with $0 $5<%136<Stdin>> ($26<%21<Builtins::structGet:12>> is responsible)
  $28 = %22<Builtins::structGet:14>
  $29 = dup $27 by 1
  $30 = %179<"`struct | ✨.structHasKey key` was not satisfied">
  $31 = trace: start of call of $17<%185<{ body_6 }>> with $27 $30<%179<"`struct | ✨.structHasKey key` was not satisfied">> $2<%92<Examples:higherLower:16:0:6>> ($28<%22<Builtins::structGet:14>> is responsible, code is at $28<%22<Builtins::structGet:14>>)
  $32 = dup $27 by 1
  $33 = call $17<%185<{ body_6 }>> with $27 $30<%179<"`struct | ✨.structHasKey key` was not satisfied">> $2<%92<Examples:higherLower:16:0:6>> ($28<%22<Builtins::structGet:14>> is responsible)
  $34 = trace: end of call
  $35 = %117<builtinStructGet>
  $36 = dup $0 by 1
  $37 = %23<Builtins::structGet:21>
  $38 = call $35<%117<builtinStructGet>> with $0 $5<%136<Stdin>> ($37<%23<Builtins::structGet:21>> is responsible)
  $39 = trace: end of call
  $40 = %93<Examples:higherLower:16:0:7>
  $41 = %199<{ body_22 }>
  $42 = dup $38 by 1
  $43 = trace: tail call of $41<%199<{ body_22 }>> with $38 ($40<%93<Examples:higherLower:16:0:7>> is responsible, code is at $40<%93<Examples:higherLower:16:0:7>>)
  $44 = dup $38 by 1
  $45 = call $41<%199<{ body_22 }>> with $38 ($40<%93<Examples:higherLower:16:0:7>> is responsible)
  $46 = drop $38
  $47 = drop $33
  $48 = drop $27
  $49 = drop $22
  $50 = drop $15
  $51 = drop $10
  $52 = $45
body_96 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:14:34:5
  # Captured IDs: $0, $1
  $3 = %98<Examples:higherLower:16:14:34:5:8>
  $4 = dup $1 by 1
  $5 = %155<"You did it!">
  $6 = trace: start of call of $1 with $5<%155<"You did it!">> ($3<%98<Examples:higherLower:16:14:34:5:8>> is responsible, code is at $3<%98<Examples:higherLower:16:14:34:5:8>>)
  $7 = %107<Examples:higherLower:16:print:5>
  $8 = %196<{ body_17 }>
  $9 = dup $0 by 1
  $10 = %137<Stdout>
  $11 = trace: start of call of $8<%196<{ body_17 }>> with $0 $10<%137<Stdout>> ($7<%107<Examples:higherLower:16:print:5>> is responsible, code is at $7<%107<Examples:higherLower:16:print:5>>)
  $12 = %124<builtinTypeOf>
  $13 = dup $0 by 1
  $14 = %28<Builtins::typeIs:19>
  $15 = call $12<%124<builtinTypeOf>> with $0 ($14<%28<Builtins::typeIs:19>> is responsible)
  $16 = %110<builtinEquals>
  $17 = dup $15 by 1
  $18 = %138<Struct>
  $19 = %29<Builtins::typeIs:25>
  $20 = call $16<%110<builtinEquals>> with $15 $18<%138<Struct>> ($19<%29<Builtins::typeIs:25>> is responsible)
  $21 = %24<Builtins::structGet:5>
  $22 = %185<{ body_6 }>
  $23 = dup $20 by 1
  $24 = %178<"`struct | typeIs Struct` was not satisfied">
  $25 = trace: start of call of $22<%185<{ body_6 }>> with $20 $24<%178<"`struct | typeIs Struct` was not satisfied">> $7<%107<Examples:higherLower:16:print:5>> ($21<%24<Builtins::structGet:5>> is responsible, code is at $21<%24<Builtins::structGet:5>>)
  $26 = dup $20 by 1
  $27 = call $22<%185<{ body_6 }>> with $20 $24<%178<"`struct | typeIs Struct` was not satisfied">> $7<%107<Examples:higherLower:16:print:5>> ($21<%24<Builtins::structGet:5>> is responsible)
  $28 = trace: end of call
  $29 = %118<builtinStructHasKey>
  $30 = dup $0 by 1
  $31 = %21<Builtins::structGet:12>
  $32 = call $29<%118<builtinStructHasKey>> with $0 $10<%137<Stdout>> ($31<%21<Builtins::structGet:12>> is responsible)
  $33 = %22<Builtins::structGet:14>
  $34 = dup $32 by 1
  $35 = %179<"`struct | ✨.structHasKey key` was not satisfied">
  $36 = trace: start of call of $22<%185<{ body_6 }>> with $32 $35<%179<"`struct | ✨.structHasKey key` was not satisfied">> $7<%107<Examples:higherLower:16:print:5>> ($33<%22<Builtins::structGet:14>> is responsible, code is at $33<%22<Builtins::structGet:14>>)
  $37 = dup $32 by 1
  $38 = call $22<%185<{ body_6 }>> with $32 $35<%179<"`struct | ✨.structHasKey key` was not satisfied">> $7<%107<Examples:higherLower:16:print:5>> ($33<%22<Builtins::structGet:14>> is responsible)
  $39 = trace: end of call
  $40 = %117<builtinStructGet>
  $41 = dup $0 by 1
  $42 = %23<Builtins::structGet:21>
  $43 = call $40<%117<builtinStructGet>> with $0 $10<%137<Stdout>> ($42<%23<Builtins::structGet:21>> is responsible)
  $44 = trace: end of call
  $45 = %108<Examples:higherLower:16:print:7>
  $46 = dup $43 by 1
  $47 = trace: start of call of $43 with $5<%155<"You did it!">> ($45<%108<Examples:higherLower:16:print:7>> is responsible, code is at $45<%108<Examples:higherLower:16:print:7>>)
  $48 = dup $43 by 1
  $49 = call $43 with $5<%155<"You did it!">> ($45<%108<Examples:higherLower:16:print:7>> is responsible)
  $50 = trace: end of call
  $51 = trace: end of call
  $52 = %125<Break>
  $53 = drop $49
  $54 = drop $43
  $55 = drop $38
  $56 = drop $32
  $57 = drop $27
  $58 = drop $20
  $59 = drop $15
  $60 = $52<%125<Break>>
body_97 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:14:34:6
  # Captured IDs: $0, $1
  $3 = %99<Examples:higherLower:16:14:34:6:10>
  $4 = %209<{ body_58 }>
  $5 = %145<42>
  $6 = dup $1 by 1
  $7 = trace: start of call of $4<%209<{ body_58 }>> with $5<%145<42>> $1 ($3<%99<Examples:higherLower:16:14:34:6:10>> is responsible, code is at $3<%99<Examples:higherLower:16:14:34:6:10>>)
  $8 = %124<builtinTypeOf>
  $9 = dup $1 by 1
  $10 = %30<Builtins::typeOf:5>
  $11 = call $8<%124<builtinTypeOf>> with $1 ($10<%30<Builtins::typeOf:5>> is responsible)
  $12 = %110<builtinEquals>
  $13 = dup $11 by 1
  $14 = %130<Int>
  $15 = %0<Builtins::equals:6>
  $16 = call $12<%110<builtinEquals>> with $11 $14<%130<Int>> ($15<%0<Builtins::equals:6>> is responsible)
  $17 = %77<Core:int:isLessThan:9>
  $18 = %185<{ body_6 }>
  $19 = dup $16 by 1
  $20 = %176<"`is valueB` was not satisfied">
  $21 = trace: start of call of $18<%185<{ body_6 }>> with $16 $20<%176<"`is valueB` was not satisfied">> $3<%99<Examples:higherLower:16:14:34:6:10>> ($17<%77<Core:int:isLessThan:9>> is responsible, code is at $17<%77<Core:int:isLessThan:9>>)
  $22 = dup $16 by 1
  $23 = call $18<%185<{ body_6 }>> with $16 $20<%176<"`is valueB` was not satisfied">> $3<%99<Examples:higherLower:16:14:34:6:10>> ($17<%77<Core:int:isLessThan:9>> is responsible)
  $24 = trace: end of call
  $25 = %75<Core:int:isLessThan:13>
  $26 = %208<{ body_57 }>
  $27 = dup $1 by 1
  $28 = trace: start of call of $26<%208<{ body_57 }>> with $5<%145<42>> $1 ($25<%75<Core:int:isLessThan:13>> is responsible, code is at $25<%75<Core:int:isLessThan:13>>)
  $29 = %74<Core:int:compareTo:9>
  $30 = dup $16 by 1
  $31 = trace: start of call of $18<%185<{ body_6 }>> with $16 $20<%176<"`is valueB` was not satisfied">> $25<%75<Core:int:isLessThan:13>> ($29<%74<Core:int:compareTo:9>> is responsible, code is at $29<%74<Core:int:compareTo:9>>)
  $32 = dup $16 by 1
  $33 = call $18<%185<{ body_6 }>> with $16 $20<%176<"`is valueB` was not satisfied">> $25<%75<Core:int:isLessThan:13>> ($29<%74<Core:int:compareTo:9>> is responsible)
  $34 = trace: end of call
  $35 = %72<Core:int:compareTo:18>
  $36 = %194<{ body_15 }>
  $37 = dup $1 by 1
  $38 = trace: start of call of $36<%194<{ body_15 }>> with $5<%145<42>> $1 ($35<%72<Core:int:compareTo:18>> is responsible, code is at $35<%72<Core:int:compareTo:18>>)
  $39 = dup $1 by 1
  $40 = %28<Builtins::typeIs:19>
  $41 = call $8<%124<builtinTypeOf>> with $1 ($40<%28<Builtins::typeIs:19>> is responsible)
  $42 = dup $41 by 1
  $43 = %29<Builtins::typeIs:25>
  $44 = call $12<%110<builtinEquals>> with $41 $14<%130<Int>> ($43<%29<Builtins::typeIs:25>> is responsible)
  $45 = %16<Builtins::intCompareTo:11>
  $46 = dup $44 by 1
  $47 = %158<"`b | typeIs Int` was not satisfied">
  $48 = trace: start of call of $18<%185<{ body_6 }>> with $44 $47<%158<"`b | typeIs Int` was not satisfied">> $35<%72<Core:int:compareTo:18>> ($45<%16<Builtins::intCompareTo:11>> is responsible, code is at $45<%16<Builtins::intCompareTo:11>>)
  $49 = dup $44 by 1
  $50 = call $18<%185<{ body_6 }>> with $44 $47<%158<"`b | typeIs Int` was not satisfied">> $35<%72<Core:int:compareTo:18>> ($45<%16<Builtins::intCompareTo:11>> is responsible)
  $51 = trace: end of call
  $52 = %114<builtinIntCompareTo>
  $53 = dup $1 by 1
  $54 = %17<Builtins::intCompareTo:18>
  $55 = call $52<%114<builtinIntCompareTo>> with $5<%145<42>> $1 ($54<%17<Builtins::intCompareTo:18>> is responsible)
  $56 = trace: end of call
  $57 = trace: end of call
  $58 = dup $55 by 1
  $59 = %131<Less>
  $60 = call $12<%110<builtinEquals>> with $55 $59<%131<Less>> ($15<%0<Builtins::equals:6>> is responsible)
  $61 = trace: end of call
  $62 = %100<Examples:higherLower:16:14:34:6:13>
  $63 = %193<{ body_14 }>
  $64 = dup $60 by 1
  $65 = %215<{ body_92 }>
  $66 = %216<{ body_93 }>
  $67 = trace: start of call of $63<%193<{ body_14 }>> with $60 $65<%215<{ body_92 }>> $66<%216<{ body_93 }>> ($62<%100<Examples:higherLower:16:14:34:6:13>> is responsible, code is at $62<%100<Examples:higherLower:16:14:34:6:13>>)
  $68 = dup $60 by 1
  $69 = call $63<%193<{ body_14 }>> with $60 $65<%215<{ body_92 }>> $66<%216<{ body_93 }>> ($62<%100<Examples:higherLower:16:14:34:6:13>> is responsible)
  $70 = trace: end of call
  $71 = %101<Examples:higherLower:16:14:34:6:14>
  $72 = dup $0 by 1
  $73 = dup $69 by 1
  $74 = trace: start of call of $0 with $69 ($71<%101<Examples:higherLower:16:14:34:6:14>> is responsible, code is at $71<%101<Examples:higherLower:16:14:34:6:14>>)
  $75 = dup $0 by 1
  $76 = dup $69 by 1
  $77 = call $0 with $69 ($71<%101<Examples:higherLower:16:14:34:6:14>> is responsible)
  $78 = trace: end of call
  $79 = %126<Continue>
  $80 = drop $77
  $81 = drop $69
  $82 = drop $60
  $83 = drop $55
  $84 = drop $50
  $85 = drop $44
  $86 = drop $41
  $87 = drop $33
  $88 = drop $23
  $89 = drop $16
  $90 = drop $11
  $91 = $79<%126<Continue>>
body_98 $2 (+ responsible $3) =
  # Original HIR IDs: Examples:higherLower:16:14:34
  # Captured IDs: $0, $1
  $4 = %110<builtinEquals>
  $5 = dup $2 by 1
  $6 = %145<42>
  $7 = %0<Builtins::equals:6>
  $8 = call $4<%110<builtinEquals>> with $2 $6<%145<42>> ($7<%0<Builtins::equals:6>> is responsible)
  $9 = dup $0 by 1
  $10 = dup $1 by 1
  $11 = { body_96 capturing $0, $1 }
  $12 = dup $1 by 1
  $13 = dup $2 by 1
  $14 = { body_97 capturing $1, $2 }
  $15 = %102<Examples:higherLower:16:14:34:7>
  $16 = %193<{ body_14 }>
  $17 = dup $8 by 1
  $18 = dup $11 by 1
  $19 = dup $14 by 1
  $20 = trace: tail call of $16<%193<{ body_14 }>> with $8 $11 $14 ($15<%102<Examples:higherLower:16:14:34:7>> is responsible, code is at $15<%102<Examples:higherLower:16:14:34:7>>)
  $21 = dup $8 by 1
  $22 = dup $11 by 1
  $23 = dup $14 by 1
  $24 = call $16<%193<{ body_14 }>> with $8 $11 $14 ($15<%102<Examples:higherLower:16:14:34:7>> is responsible)
  $25 = drop $14
  $26 = drop $11
  $27 = drop $8
  $28 = drop $2
  $29 = $24
body_99 $2 (+ responsible $3) =
  # Original HIR IDs: Examples:higherLower:16:14:35
  # Captured IDs: $0, $1
  $4 = %103<Examples:higherLower:16:14:35:8>
  $5 = dup $1 by 1
  $6 = %156<"Your guess must be a number.">
  $7 = trace: start of call of $1 with $6<%156<"Your guess must be a number.">> ($4<%103<Examples:higherLower:16:14:35:8>> is responsible, code is at $4<%103<Examples:higherLower:16:14:35:8>>)
  $8 = %107<Examples:higherLower:16:print:5>
  $9 = %196<{ body_17 }>
  $10 = dup $0 by 1
  $11 = %137<Stdout>
  $12 = trace: start of call of $9<%196<{ body_17 }>> with $0 $11<%137<Stdout>> ($8<%107<Examples:higherLower:16:print:5>> is responsible, code is at $8<%107<Examples:higherLower:16:print:5>>)
  $13 = %124<builtinTypeOf>
  $14 = dup $0 by 1
  $15 = %28<Builtins::typeIs:19>
  $16 = call $13<%124<builtinTypeOf>> with $0 ($15<%28<Builtins::typeIs:19>> is responsible)
  $17 = %110<builtinEquals>
  $18 = dup $16 by 1
  $19 = %138<Struct>
  $20 = %29<Builtins::typeIs:25>
  $21 = call $17<%110<builtinEquals>> with $16 $19<%138<Struct>> ($20<%29<Builtins::typeIs:25>> is responsible)
  $22 = %24<Builtins::structGet:5>
  $23 = %185<{ body_6 }>
  $24 = dup $21 by 1
  $25 = %178<"`struct | typeIs Struct` was not satisfied">
  $26 = trace: start of call of $23<%185<{ body_6 }>> with $21 $25<%178<"`struct | typeIs Struct` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($22<%24<Builtins::structGet:5>> is responsible, code is at $22<%24<Builtins::structGet:5>>)
  $27 = dup $21 by 1
  $28 = call $23<%185<{ body_6 }>> with $21 $25<%178<"`struct | typeIs Struct` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($22<%24<Builtins::structGet:5>> is responsible)
  $29 = trace: end of call
  $30 = %118<builtinStructHasKey>
  $31 = dup $0 by 1
  $32 = %21<Builtins::structGet:12>
  $33 = call $30<%118<builtinStructHasKey>> with $0 $11<%137<Stdout>> ($32<%21<Builtins::structGet:12>> is responsible)
  $34 = %22<Builtins::structGet:14>
  $35 = dup $33 by 1
  $36 = %179<"`struct | ✨.structHasKey key` was not satisfied">
  $37 = trace: start of call of $23<%185<{ body_6 }>> with $33 $36<%179<"`struct | ✨.structHasKey key` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($34<%22<Builtins::structGet:14>> is responsible, code is at $34<%22<Builtins::structGet:14>>)
  $38 = dup $33 by 1
  $39 = call $23<%185<{ body_6 }>> with $33 $36<%179<"`struct | ✨.structHasKey key` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($34<%22<Builtins::structGet:14>> is responsible)
  $40 = trace: end of call
  $41 = %117<builtinStructGet>
  $42 = dup $0 by 1
  $43 = %23<Builtins::structGet:21>
  $44 = call $41<%117<builtinStructGet>> with $0 $11<%137<Stdout>> ($43<%23<Builtins::structGet:21>> is responsible)
  $45 = trace: end of call
  $46 = %108<Examples:higherLower:16:print:7>
  $47 = dup $44 by 1
  $48 = trace: start of call of $44 with $6<%156<"Your guess must be a number.">> ($46<%108<Examples:higherLower:16:print:7>> is responsible, code is at $46<%108<Examples:higherLower:16:print:7>>)
  $49 = dup $44 by 1
  $50 = call $44 with $6<%156<"Your guess must be a number.">> ($46<%108<Examples:higherLower:16:print:7>> is responsible)
  $51 = trace: end of call
  $52 = trace: end of call
  $53 = %126<Continue>
  $54 = drop $50
  $55 = drop $44
  $56 = drop $39
  $57 = drop $33
  $58 = drop $28
  $59 = drop $21
  $60 = drop $16
  $61 = drop $2
  $62 = $53<%126<Continue>>
body_100 (responsible $3) =
  # Original HIR IDs: Examples:higherLower:16:14
  # Captured IDs: $0, $1, $2
  $4 = %105<Examples:higherLower:16:14:8>
  $5 = dup $1 by 1
  $6 = %154<"What's your guess?">
  $7 = trace: start of call of $1 with $6<%154<"What's your guess?">> ($4<%105<Examples:higherLower:16:14:8>> is responsible, code is at $4<%105<Examples:higherLower:16:14:8>>)
  $8 = %107<Examples:higherLower:16:print:5>
  $9 = %196<{ body_17 }>
  $10 = dup $0 by 1
  $11 = %137<Stdout>
  $12 = trace: start of call of $9<%196<{ body_17 }>> with $0 $11<%137<Stdout>> ($8<%107<Examples:higherLower:16:print:5>> is responsible, code is at $8<%107<Examples:higherLower:16:print:5>>)
  $13 = %124<builtinTypeOf>
  $14 = dup $0 by 1
  $15 = %28<Builtins::typeIs:19>
  $16 = call $13<%124<builtinTypeOf>> with $0 ($15<%28<Builtins::typeIs:19>> is responsible)
  $17 = %110<builtinEquals>
  $18 = dup $16 by 1
  $19 = %138<Struct>
  $20 = %29<Builtins::typeIs:25>
  $21 = call $17<%110<builtinEquals>> with $16 $19<%138<Struct>> ($20<%29<Builtins::typeIs:25>> is responsible)
  $22 = %24<Builtins::structGet:5>
  $23 = %185<{ body_6 }>
  $24 = dup $21 by 1
  $25 = %178<"`struct | typeIs Struct` was not satisfied">
  $26 = trace: start of call of $23<%185<{ body_6 }>> with $21 $25<%178<"`struct | typeIs Struct` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($22<%24<Builtins::structGet:5>> is responsible, code is at $22<%24<Builtins::structGet:5>>)
  $27 = dup $21 by 1
  $28 = call $23<%185<{ body_6 }>> with $21 $25<%178<"`struct | typeIs Struct` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($22<%24<Builtins::structGet:5>> is responsible)
  $29 = trace: end of call
  $30 = %118<builtinStructHasKey>
  $31 = dup $0 by 1
  $32 = %21<Builtins::structGet:12>
  $33 = call $30<%118<builtinStructHasKey>> with $0 $11<%137<Stdout>> ($32<%21<Builtins::structGet:12>> is responsible)
  $34 = %22<Builtins::structGet:14>
  $35 = dup $33 by 1
  $36 = %179<"`struct | ✨.structHasKey key` was not satisfied">
  $37 = trace: start of call of $23<%185<{ body_6 }>> with $33 $36<%179<"`struct | ✨.structHasKey key` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($34<%22<Builtins::structGet:14>> is responsible, code is at $34<%22<Builtins::structGet:14>>)
  $38 = dup $33 by 1
  $39 = call $23<%185<{ body_6 }>> with $33 $36<%179<"`struct | ✨.structHasKey key` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($34<%22<Builtins::structGet:14>> is responsible)
  $40 = trace: end of call
  $41 = %117<builtinStructGet>
  $42 = dup $0 by 1
  $43 = %23<Builtins::structGet:21>
  $44 = call $41<%117<builtinStructGet>> with $0 $11<%137<Stdout>> ($43<%23<Builtins::structGet:21>> is responsible)
  $45 = trace: end of call
  $46 = %108<Examples:higherLower:16:print:7>
  $47 = dup $44 by 1
  $48 = trace: start of call of $44 with $6<%154<"What's your guess?">> ($46<%108<Examples:higherLower:16:print:7>> is responsible, code is at $46<%108<Examples:higherLower:16:print:7>>)
  $49 = dup $44 by 1
  $50 = call $44 with $6<%154<"What's your guess?">> ($46<%108<Examples:higherLower:16:print:7>> is responsible)
  $51 = trace: end of call
  $52 = trace: end of call
  $53 = %95<Examples:higherLower:16:14:11>
  $54 = %199<{ body_22 }>
  $55 = dup $2 by 1
  $56 = trace: start of call of $54<%199<{ body_22 }>> with $2 ($53<%95<Examples:higherLower:16:14:11>> is responsible, code is at $53<%95<Examples:higherLower:16:14:11>>)
  $57 = dup $2 by 1
  $58 = call $54<%199<{ body_22 }>> with $2 ($53<%95<Examples:higherLower:16:14:11>> is responsible)
  $59 = trace: end of call
  $60 = %96<Examples:higherLower:16:14:18>
  $61 = %214<{ body_91 }>
  $62 = dup $58 by 1
  $63 = trace: start of call of $61<%214<{ body_91 }>> with $58 ($60<%96<Examples:higherLower:16:14:18>> is responsible, code is at $60<%96<Examples:higherLower:16:14:18>>)
  $64 = dup $58 by 1
  $65 = call $61<%214<{ body_91 }>> with $58 ($60<%96<Examples:higherLower:16:14:18>> is responsible)
  $66 = trace: end of call
  $67 = %97<Examples:higherLower:16:14:25>
  $68 = %195<{ body_16 }>
  $69 = dup $65 by 1
  $70 = trace: start of call of $68<%195<{ body_16 }>> with $65 ($67<%97<Examples:higherLower:16:14:25>> is responsible, code is at $67<%97<Examples:higherLower:16:14:25>>)
  $71 = dup $65 by 1
  $72 = call $13<%124<builtinTypeOf>> with $65 ($15<%28<Builtins::typeIs:19>> is responsible)
  $73 = dup $72 by 1
  $74 = %140<Text>
  $75 = call $17<%110<builtinEquals>> with $72 $74<%140<Text>> ($20<%29<Builtins::typeIs:25>> is responsible)
  $76 = %20<Builtins::intParse:5>
  $77 = dup $75 by 1
  $78 = %180<"`text | typeIs Text` was not satisfied">
  $79 = trace: start of call of $23<%185<{ body_6 }>> with $75 $78<%180<"`text | typeIs Text` was not satisfied">> $67<%97<Examples:higherLower:16:14:25>> ($76<%20<Builtins::intParse:5>> is responsible, code is at $76<%20<Builtins::intParse:5>>)
  $80 = dup $75 by 1
  $81 = call $23<%185<{ body_6 }>> with $75 $78<%180<"`text | typeIs Text` was not satisfied">> $67<%97<Examples:higherLower:16:14:25>> ($76<%20<Builtins::intParse:5>> is responsible)
  $82 = trace: end of call
  $83 = %115<builtinIntParse>
  $84 = dup $65 by 1
  $85 = %19<Builtins::intParse:11>
  $86 = call $83<%115<builtinIntParse>> with $65 ($85<%19<Builtins::intParse:11>> is responsible)
  $87 = trace: end of call
  $88 = dup $0 by 1
  $89 = dup $1 by 1
  $90 = { body_98 capturing $0, $1 }
  $91 = dup $0 by 1
  $92 = dup $1 by 1
  $93 = { body_99 capturing $0, $1 }
  $94 = %104<Examples:higherLower:16:14:36>
  $95 = %213<{ body_90 }>
  $96 = dup $86 by 1
  $97 = dup $90 by 1
  $98 = dup $93 by 1
  $99 = trace: tail call of $95<%213<{ body_90 }>> with $86 $90 $93 ($94<%104<Examples:higherLower:16:14:36>> is responsible, code is at $94<%104<Examples:higherLower:16:14:36>>)
  $100 = dup $86 by 1
  $101 = dup $90 by 1
  $102 = dup $93 by 1
  $103 = call $95<%213<{ body_90 }>> with $86 $90 $93 ($94<%104<Examples:higherLower:16:14:36>> is responsible)
  $104 = drop $93
  $105 = drop $90
  $106 = drop $86
  $107 = drop $81
  $108 = drop $75
  $109 = drop $72
  $110 = drop $65
  $111 = drop $58
  $112 = drop $50
  $113 = drop $44
  $114 = drop $39
  $115 = drop $33
  $116 = drop $28
  $117 = drop $21
  $118 = drop $16
  $119 = $103
body_101 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:higherLower:16
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = { body_94 capturing $0 }
  $4 = dup $0 by 1
  $5 = { body_95 capturing $0 }
  $6 = %94<Examples:higherLower:16:10>
  $7 = dup $3 by 1
  $8 = %153<"Welcome to the number guessing game!">
  $9 = trace: start of call of $3 with $8<%153<"Welcome to the number guessing game!">> ($6<%94<Examples:higherLower:16:10>> is responsible, code is at $6<%94<Examples:higherLower:16:10>>)
  $10 = %107<Examples:higherLower:16:print:5>
  $11 = %196<{ body_17 }>
  $12 = dup $0 by 1
  $13 = %137<Stdout>
  $14 = trace: start of call of $11<%196<{ body_17 }>> with $0 $13<%137<Stdout>> ($10<%107<Examples:higherLower:16:print:5>> is responsible, code is at $10<%107<Examples:higherLower:16:print:5>>)
  $15 = %124<builtinTypeOf>
  $16 = dup $0 by 1
  $17 = %28<Builtins::typeIs:19>
  $18 = call $15<%124<builtinTypeOf>> with $0 ($17<%28<Builtins::typeIs:19>> is responsible)
  $19 = %110<builtinEquals>
  $20 = dup $18 by 1
  $21 = %138<Struct>
  $22 = %29<Builtins::typeIs:25>
  $23 = call $19<%110<builtinEquals>> with $18 $21<%138<Struct>> ($22<%29<Builtins::typeIs:25>> is responsible)
  $24 = %24<Builtins::structGet:5>
  $25 = %185<{ body_6 }>
  $26 = dup $23 by 1
  $27 = %178<"`struct | typeIs Struct` was not satisfied">
  $28 = trace: start of call of $25<%185<{ body_6 }>> with $23 $27<%178<"`struct | typeIs Struct` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($24<%24<Builtins::structGet:5>> is responsible, code is at $24<%24<Builtins::structGet:5>>)
  $29 = dup $23 by 1
  $30 = call $25<%185<{ body_6 }>> with $23 $27<%178<"`struct | typeIs Struct` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($24<%24<Builtins::structGet:5>> is responsible)
  $31 = trace: end of call
  $32 = %118<builtinStructHasKey>
  $33 = dup $0 by 1
  $34 = %21<Builtins::structGet:12>
  $35 = call $32<%118<builtinStructHasKey>> with $0 $13<%137<Stdout>> ($34<%21<Builtins::structGet:12>> is responsible)
  $36 = %22<Builtins::structGet:14>
  $37 = dup $35 by 1
  $38 = %179<"`struct | ✨.structHasKey key` was not satisfied">
  $39 = trace: start of call of $25<%185<{ body_6 }>> with $35 $38<%179<"`struct | ✨.structHasKey key` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($36<%22<Builtins::structGet:14>> is responsible, code is at $36<%22<Builtins::structGet:14>>)
  $40 = dup $35 by 1
  $41 = call $25<%185<{ body_6 }>> with $35 $38<%179<"`struct | ✨.structHasKey key` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($36<%22<Builtins::structGet:14>> is responsible)
  $42 = trace: end of call
  $43 = %117<builtinStructGet>
  $44 = dup $0 by 1
  $45 = %23<Builtins::structGet:21>
  $46 = call $43<%117<builtinStructGet>> with $0 $13<%137<Stdout>> ($45<%23<Builtins::structGet:21>> is responsible)
  $47 = trace: end of call
  $48 = %108<Examples:higherLower:16:print:7>
  $49 = dup $46 by 1
  $50 = trace: start of call of $46 with $8<%153<"Welcome to the number guessing game!">> ($48<%108<Examples:higherLower:16:print:7>> is responsible, code is at $48<%108<Examples:higherLower:16:print:7>>)
  $51 = dup $46 by 1
  $52 = call $46 with $8<%153<"Welcome to the number guessing game!">> ($48<%108<Examples:higherLower:16:print:7>> is responsible)
  $53 = trace: end of call
  $54 = trace: end of call
  $55 = dup $0 by 1
  $56 = dup $3 by 1
  $57 = dup $5 by 1
  $58 = { body_100 capturing $0, $3, $5 }
  $59 = %106<Examples:higherLower:16:15>
  $60 = %207<{ body_56 }>
  $61 = dup $58 by 1
  $62 = trace: tail call of $60<%207<{ body_56 }>> with $58 ($59<%106<Examples:higherLower:16:15>> is responsible, code is at $59<%106<Examples:higherLower:16:15>>)
  $63 = dup $58 by 1
  $64 = call $60<%207<{ body_56 }>> with $58 ($59<%106<Examples:higherLower:16:15>> is responsible)
  $65 = drop $58
  $66 = drop $52
  $67 = drop $46
  $68 = drop $41
  $69 = drop $35
  $70 = drop $30
  $71 = drop $23
  $72 = drop $18
  $73 = drop $5
  $74 = drop $3
  $75 = drop $0
  $76 = $64
body_102 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:
  # Captured IDs: none
  $1 = %217<{ body_101 }>
