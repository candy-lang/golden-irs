# Optimized LIR for module Examples:higherLower
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::equals:6
%1 = Builtins::functionRun:11
%2 = Builtins::functionRun:16
%3 = Builtins::functionRun:22
%4 = Builtins::functionRun:5
%5 = Builtins::getArgumentCount:11
%6 = Builtins::getArgumentCount:5
%7 = Builtins::ifElse:1
%8 = Builtins::ifElse:11
%9 = Builtins::ifElse:14
%10 = Builtins::ifElse:19
%11 = Builtins::ifElse:25
%12 = Builtins::ifElse:28
%13 = Builtins::ifElse:33
%14 = Builtins::ifElse:41
%15 = Builtins::ifElse:5
%16 = Builtins::intCompareTo:11
%17 = Builtins::intCompareTo:18
%18 = Builtins::intCompareTo:5
%19 = Builtins::intParse:11
%20 = Builtins::intParse:5
%21 = Builtins::structGet:12
%22 = Builtins::structGet:14
%23 = Builtins::structGet:21
%24 = Builtins::structGet:5
%25 = Builtins::textTrimEnd:11
%26 = Builtins::textTrimStart:11
%27 = Builtins::textTrimStart:5
%28 = Builtins::typeIs:19
%29 = Builtins::typeIs:25
%30 = Builtins::typeOf:5
%31 = Core:bool:is:1
%32 = Core:bool:lazyOr:12
%33 = Core:bool:lazyOr:14
%34 = Core:bool:lazyOr:16
%35 = Core:bool:lazyOr:16:12
%36 = Core:bool:lazyOr:16:20
%37 = Core:bool:lazyOr:16:8
%38 = Core:bool:lazyOr:2
%39 = Core:bool:lazyOr:4
%40 = Core:bool:or:13
%41 = Core:bool:or:2
%42 = Core:bool:or:4
%43 = Core:bool:or:7
%44 = Core:bool:or:9
%45 = Core:controlFlow:if:17
%46 = Core:controlFlow:if:19
%47 = Core:controlFlow:if:24
%48 = Core:controlFlow:if:7
%49 = Core:controlFlow:if:9
%50 = Core:controlFlow:loop:12:23
%51 = Core:controlFlow:loop:12:31
%52 = Core:controlFlow:loop:12:37:2
%53 = Core:controlFlow:loop:12:38
%54 = Core:controlFlow:loop:12:7
%55 = Core:controlFlow:loop:13
%56 = Core:controlFlow:loop:7
%57 = Core:controlFlow:loop:9
%58 = Core:controlFlow:recursive:15
%59 = Core:controlFlow:recursive:16:0:3
%60 = Core:controlFlow:recursive:16:5
%61 = Core:controlFlow:recursive:21
%62 = Core:controlFlow:recursive:7
%63 = Core:function:is0:11
%64 = Core:function:is0:9:3
%65 = Core:function:is1:11
%66 = Core:function:is1:9:3
%67 = Core:function:is2:11
%68 = Core:function:is2:9:3
%69 = Core:function:run:12
%70 = Core:function:run:2
%71 = Core:function:run:4
%72 = Core:int:compareTo:18
%73 = Core:int:compareTo:4
%74 = Core:int:compareTo:9
%75 = Core:int:isLessThan:13
%76 = Core:int:isLessThan:4
%77 = Core:int:isLessThan:9
%78 = Core:result:is:1
%79 = Core:result:mapOrElse:12
%80 = Core:result:mapOrElse:14
%81 = Core:result:mapOrElse:2
%82 = Core:result:mapOrElse:22
%83 = Core:result:mapOrElse:24
%84 = Core:result:mapOrElse:26
%85 = Core:result:mapOrElse:26:2
%86 = Core:result:mapOrElse:26:5
%87 = Core:result:mapOrElse:26:value
%88 = Core:result:mapOrElse:26:value#1
%89 = Core:result:mapOrElse:4
%90 = Core:text:trim:4
%91 = Core:text:trim:7
%92 = Examples:higherLower:16:0:6
%93 = Examples:higherLower:16:0:7
%94 = Examples:higherLower:16:10
%95 = Examples:higherLower:16:14:11
%96 = Examples:higherLower:16:14:18
%97 = Examples:higherLower:16:14:25
%98 = Examples:higherLower:16:14:34:5:8
%99 = Examples:higherLower:16:14:34:6:10
%100 = Examples:higherLower:16:14:34:6:13
%101 = Examples:higherLower:16:14:34:6:14
%102 = Examples:higherLower:16:14:34:7
%103 = Examples:higherLower:16:14:35:8
%104 = Examples:higherLower:16:14:36
%105 = Examples:higherLower:16:14:8
%106 = Examples:higherLower:16:15
%107 = Examples:higherLower:16:print:5
%108 = Examples:higherLower:16:print:7
%109 = anonymous:$generated::needs
%110 = builtinEquals
%111 = builtinFunctionRun
%112 = builtinGetArgumentCount
%113 = builtinIfElse
%114 = builtinIntCompareTo
%115 = builtinIntParse
%116 = builtinListGet
%117 = builtinStructGet
%118 = builtinStructHasKey
%119 = builtinTagGetValue
%120 = builtinTagHasValue
%121 = builtinTagWithValue
%122 = builtinTagWithoutValue
%123 = builtinTextConcatenate
%124 = builtinTextTrimEnd
%125 = builtinTextTrimStart
%126 = builtinToDebugText
%127 = builtinTypeOf
%128 = Break
%129 = Continue
%130 = Error
%131 = False
%132 = Function
%133 = Int
%134 = Less
%135 = Match
%136 = NoMatch
%137 = Nothing
%138 = Ok
%139 = Stdin
%140 = Stdout
%141 = Struct
%142 = Tag
%143 = Text
%144 = True
%145 = 0
%146 = 1
%147 = 2
%148 = 42
%149 = " arguments with 1 arguments."
%150 = " arguments with 2 arguments."
%151 = "Higher!"
%152 = "Lower!"
%153 = "No case matched the given expression."
%154 = "Tags can only be created with one value."
%155 = "The `body` has to return `Continue` or `Break`."
%156 = "The `body` should take the recursive function and the argument."
%157 = "The `condition` must be either `True` or `False`."
%158 = "The `reason` must be a text."
%159 = "Welcome to the number guessing game!"
%160 = "What's your guess?"
%161 = "You called a function that expects "
%162 = "You called a tag that already has a value."
%163 = "You can only call tags or functions."
%164 = "You did it!"
%165 = "Your guess must be a number."
%166 = "`a | typeIs Int` was not satisfied"
%167 = "`b | typeIs Int` was not satisfied"
%168 = "`b` didn't return a bool."
%169 = "`bool.is condition` was not satisfied"
%170 = "`conditionIsBool` was not satisfied"
%171 = "`else | getArgumentCount | equals 0` was not satisfied"
%172 = "`else | typeIs Function` was not satisfied"
%173 = "`function | typeIs Function` was not satisfied"
%174 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
%175 = "`function.is0 b` was not satisfied"
%176 = "`function.is0 body` was not satisfied"
%177 = "`function.is0 then` was not satisfied"
%178 = "`function.is1 errorMapper` was not satisfied"
%179 = "`function.is1 okMapper` was not satisfied"
%180 = "`is a` was not satisfied"
%181 = "`is b` was not satisfied"
%182 = "`is result` was not satisfied"
%183 = "`is text` was not satisfied"
%184 = "`is valueA` was not satisfied"
%185 = "`is valueB` was not satisfied"
%186 = "`is0 body` was not satisfied"
%187 = "`struct | typeIs Struct` was not satisfied"
%188 = "`struct | ✨.structHasKey key` was not satisfied"
%189 = "`text | typeIs Text` was not satisfied"
%190 = "`then | getArgumentCount | equals 0` was not satisfied"
%191 = "`then | typeIs Function` was not satisfied"
%192 = { body_0 }
%193 = { body_1 }
%194 = { body_6 }
%195 = (,)
%196 = Match %195<(,)>
%197 = { body_7 }
%198 = { body_8 }
%199 = { body_9 }
%200 = { body_10 }
%201 = { body_11 }
%202 = { body_14 }
%203 = { body_15 }
%204 = { body_16 }
%205 = { body_17 }
%206 = { body_18 }
%207 = { body_20 }
%208 = { body_22 }
%209 = { body_25 }
%210 = { body_26 }
%211 = { body_33 }
%212 = { body_39 }
%213 = { body_41 }
%214 = { body_47 }
%215 = { body_48 }
%216 = { body_49 }
%217 = { body_50 }
%218 = { body_51 }
%219 = { body_52 }
%220 = { body_53 }
%221 = { body_67 }
%222 = { body_68 }
%223 = { body_69 }
%224 = { body_80 }
%225 = { body_81 }
%226 = { body_82 }
%227 = { body_84 }
%228 = { body_93 }
%229 = { body_94 }
%230 = { body_95 }
%231 = { body_96 }
%232 = { body_97 }
%233 = { body_98 }
%234 = { body_130 }
%235 = { body_131 }
%236 = { body_132 }
%237 = { body_133 }
%238 = { body_134 }
%239 = { body_135 }
%240 = { body_173 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:16:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:result:is:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %144<True>
body_1 (responsible $0) =
  # Original HIR IDs: Core::21:isMatch:then, Core::32:isMatch:then, Core::43:isMatch:then, Core::104:isMatch:then, Core::155:isMatch:then, Core::166:isMatch:then, Core:bool:11:isMatch:then, Core:check:11:isMatch:then, Core:controlFlow:if:23, Core:controlFlow:31:isMatch:then, Core:controlFlow:52:isMatch:then, Core:fixedDecimal:21:isMatch:then, Core:fixedDecimal:32:isMatch:then, Core:fixedDecimal:43:isMatch:then, Core:fixedDecimal:54:isMatch:then, Core:fixedDecimal:105:isMatch:then, Core:function:21:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:31:isMatch:then, Core:int:42:isMatch:then, Core:iterator:foldLeft:21:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:26:6:1:isMatch:then, Core:iterator:take:27:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:21:isMatch:then, Core:iterator:32:isMatch:then, Core:list:firstIndexWhere:21:1:isMatch:then, Core:list:generate:51:1:isMatch:then, Core:list:lastIndexWhere:38:1:isMatch:then, Core:list:31:isMatch:then, Core:list:42:isMatch:then, Core:result:also:16:case-0:didNotMatch, Core:result:21:isMatch:then, Core:result:32:isMatch:then, Core:struct:21:isMatch:then, Core:tag:31:isMatch:then, Core:text:repeat:30:1:isMatch:then, Core:text:31:isMatch:then, Core:text:42:isMatch:then, Core:type:21:isMatch:then, Examples:higherLower:then, Examples:higherLower:11:isMatch:then, Examples:higherLower:14:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %137<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %109<anonymous:$generated::needs>
  $6 = call $3<%110<builtinEquals>> with $0 $4<%131<False>> ($5<%109<anonymous:$generated::needs>> is responsible)
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %157<"The `condition` must be either `True` or `False`.">
  $4 = panicking because $3<%157<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %158<"The `reason` must be a text.">
  $4 = panicking because $3<%158<"The `reason` must be a text.">> ($0 is at fault)
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = dup $0 by 2
  $5 = dup $1 by 1
  $6 = dup $3 by 2
  $7 = %110<builtinEquals>
  $8 = %144<True>
  $9 = %109<anonymous:$generated::needs>
  $10 = call $7<%110<builtinEquals>> with $0 $8<%144<True>> ($9<%109<anonymous:$generated::needs>> is responsible)
  $11 = { body_2 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = %192<{ body_0 }>
  $14 = call $12<%113<builtinIfElse>> with $10 $13<%192<{ body_0 }>> $11 ($9<%109<anonymous:$generated::needs>> is responsible)
  $15 = { body_3 capturing $3 }
  $16 = %193<{ body_1 }>
  $17 = call $12<%113<builtinIfElse>> with $14 $16<%193<{ body_1 }>> $15 ($9<%109<anonymous:$generated::needs>> is responsible)
  $18 = %127<builtinTypeOf>
  $19 = call $18<%127<builtinTypeOf>> with $1 ($3 is responsible)
  $20 = %143<Text>
  $21 = call $7<%110<builtinEquals>> with $19 $20<%143<Text>> ($3 is responsible)
  $22 = { body_4 capturing $3 }
  $23 = call $12<%113<builtinIfElse>> with $21 $16<%193<{ body_1 }>> $22 ($9<%109<anonymous:$generated::needs>> is responsible)
  $24 = { body_5 capturing $1, $2 }
  $25 = drop $17
  $26 = drop $23
  $27 = call $12<%113<builtinIfElse>> with $0 $16<%193<{ body_1 }>> $24 ($9<%109<anonymous:$generated::needs>> is responsible)
body_7 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:16:equals:then, Core:bool:lazyOr:16:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:21:5:equals:then, Core:iterator:generateWithState:12:1:3:equals:then, Core:iterator:map:17:3:equals:then, Core:iterator:reduceLeft:16:equals:then, Core:iterator:skip:26:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:17:2:3:equals:then, Core:iterator:where:17:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:14:22:8:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:19:equals:then, Core:list:lastWhere:19:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
  # Captured IDs: none
  $1 = %196<Match %195<(,)>>
body_8 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:equals:else, Builtins::isLessThanOrEqualTo:19:equals:else, Builtins::isNonNegative:13:equals:else, Builtins::not:1:equals:else, Core::21:equals:else, Core::32:equals:else, Core::43:equals:else, Core::104:equals:else, Core::155:equals:else, Core::166:equals:else, Core:bool:is:1:equals:else, Core:bool:lazyAnd:16:equals:else, Core:bool:lazyOr:16:equals:else, Core:bool:not:6:equals:else, Core:bool:11:equals:else, Core:check:check:1:equals:else, Core:check:11:equals:else, Core:controlFlow:31:equals:else, Core:controlFlow:52:equals:else, Core:fixedDecimal:is:1:equals:else, Core:fixedDecimal:is:1:hasKey:else, Core:fixedDecimal:21:equals:else, Core:fixedDecimal:32:equals:else, Core:fixedDecimal:43:equals:else, Core:fixedDecimal:54:equals:else, Core:fixedDecimal:105:equals:else, Core:function:21:equals:else, Core:int:pow:21:1:equals:else, Core:int:pow:21:1:hasKey:else, Core:int:pow:21:4:equals:else, Core:int:31:equals:else, Core:int:42:equals:else, Core:iterator:foldLeft:21:1:equals:else, Core:iterator:foldLeft:21:1:hasKey:else, Core:iterator:foldLeft:21:5:equals:else, Core:iterator:foldLeft:21:5:hasKey:else, Core:iterator:generateWithState:12:1:3:equals:else, Core:iterator:generateWithState:12:1:3:hasKey:else, Core:iterator:map:17:3:equals:else, Core:iterator:map:17:3:hasKey:else, Core:iterator:next:6:equals:else, Core:iterator:reduceLeft:16:equals:else, Core:iterator:reduceLeft:16:hasKey:else, Core:iterator:skip:26:6:1:equals:else, Core:iterator:skip:26:6:1:hasKey:else, Core:iterator:skip:26:6:8:3:equals:else, Core:iterator:skip:26:6:8:3:hasKey:else, Core:iterator:take:27:1:equals:else, Core:iterator:take:27:1:hasKey:else, Core:iterator:takeWhile:7:3:equals:else, Core:iterator:takeWhile:7:3:hasKey:else, Core:iterator:where:17:2:3:equals:else, Core:iterator:where:17:2:3:hasKey:else, Core:iterator:where:17:2:3:6:5:equals:else, Core:iterator:where:17:2:3:6:5:hasKey:else, Core:iterator:withIndex:11:1:equals:else, Core:iterator:withIndex:11:1:hasKey:else, Core:iterator:withIndex:11:5:equals:else, Core:iterator:withIndex:11:5:hasKey:else, Core:iterator:wrapSafe:14:1:equals:else, Core:iterator:wrapSafe:14:22:8:equals:else, Core:iterator:wrapSafe:14:22:8:hasKey:else, Core:iterator:21:equals:else, Core:iterator:32:equals:else, Core:list:first:6:equals:else, Core:list:firstIndexWhere:21:1:equals:else, Core:list:firstIndexWhere:21:1:hasKey:else, Core:list:firstWhere:19:equals:else, Core:list:generate:51:1:equals:else, Core:list:generate:51:1:hasKey:else, Core:list:lastIndexWhere:38:1:equals:else, Core:list:lastIndexWhere:38:1:hasKey:else, Core:list:lastWhere:19:equals:else, Core:list:single:6:equals:else, Core:list:31:equals:else, Core:list:42:equals:else, Core:result:also:16:equals:else, Core:result:is:1:equals:else, Core:result:mapOrElse:26:equals:else, Core:result:21:equals:else, Core:result:32:equals:else, Core:struct:21:equals:else, Core:tag:31:equals:else, Core:text:isAsciiDigit:14:equals:else, Core:text:repeat:30:1:equals:else, Core:text:31:equals:else, Core:text:42:equals:else, Examples:higherLower:11:equals:else, Examples:higherLower:14:equals:else
  # Captured IDs: none
  $1 = %136<NoMatch>
body_9 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:didNotMatch, Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:is:1:case-0:didNotMatch, Core:bool:lazyAnd:16:case-1:matched, Core:bool:not:6:case-0:matched, Core:check:check:1:case-0:didNotMatch, Core:fixedDecimal:is:1:case-0:didNotMatch, Core:function:is0:10, Core:function:is1:10, Core:function:is2:10, Core:function:is3:10, Core:function:is4:10, Core:function:is5:10, Core:list:isValidIndex:19, Core:list:isValidInsertIndex:19, Core:result:is:1:case-0:didNotMatch, Core:text:isAsciiDigit:14:case-0:didNotMatch
  # Captured IDs: none
  $1 = %131<False>
body_10 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::functionRun
  # Captured IDs: none
  $2 = dup $0 by 3
  $3 = dup $1 by 4
  $4 = %127<builtinTypeOf>
  $5 = %28<Builtins::typeIs:19>
  $6 = call $4<%127<builtinTypeOf>> with $0 ($5<%28<Builtins::typeIs:19>> is responsible)
  $7 = %110<builtinEquals>
  $8 = %132<Function>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $7<%110<builtinEquals>> with $6 $8<%132<Function>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = dup $10 by 1
  $12 = %4<Builtins::functionRun:5>
  $13 = %194<{ body_6 }>
  $14 = %173<"`function | typeIs Function` was not satisfied">
  $15 = trace: start of call of $13<%194<{ body_6 }>> with $10 $14<%173<"`function | typeIs Function` was not satisfied">> $1 ($12<%4<Builtins::functionRun:5>> is responsible, code is at $12<%4<Builtins::functionRun:5>>)
  $16 = call $13<%194<{ body_6 }>> with $10 $14<%173<"`function | typeIs Function` was not satisfied">> $1 ($12<%4<Builtins::functionRun:5>> is responsible)
  $17 = trace: end of call
  $18 = %112<builtinGetArgumentCount>
  $19 = %1<Builtins::functionRun:11>
  $20 = call $18<%112<builtinGetArgumentCount>> with $0 ($19<%1<Builtins::functionRun:11>> is responsible)
  $21 = %145<0>
  $22 = %0<Builtins::equals:6>
  $23 = call $7<%110<builtinEquals>> with $20 $21<%145<0>> ($22<%0<Builtins::equals:6>> is responsible)
  $24 = dup $23 by 1
  $25 = %2<Builtins::functionRun:16>
  $26 = %174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $27 = trace: start of call of $13<%194<{ body_6 }>> with $23 $26<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($25<%2<Builtins::functionRun:16>> is responsible, code is at $25<%2<Builtins::functionRun:16>>)
  $28 = call $13<%194<{ body_6 }>> with $23 $26<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $1 ($25<%2<Builtins::functionRun:16>> is responsible)
  $29 = trace: end of call
  $30 = %3<Builtins::functionRun:22>
  $31 = %111<builtinFunctionRun>
  $32 = trace: tail call of $31<%111<builtinFunctionRun>> with $0 ($30<%3<Builtins::functionRun:22>> is responsible, code is at $30<%3<Builtins::functionRun:22>>)
  $33 = drop $16
  $34 = drop $28
  $35 = call $0 with no arguments ($30<%3<Builtins::functionRun:22>> is responsible)
body_11 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::getArgumentCount
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = dup $1 by 2
  $4 = %127<builtinTypeOf>
  $5 = %28<Builtins::typeIs:19>
  $6 = call $4<%127<builtinTypeOf>> with $0 ($5<%28<Builtins::typeIs:19>> is responsible)
  $7 = %110<builtinEquals>
  $8 = %132<Function>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $7<%110<builtinEquals>> with $6 $8<%132<Function>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = dup $10 by 1
  $12 = %6<Builtins::getArgumentCount:5>
  $13 = %194<{ body_6 }>
  $14 = %173<"`function | typeIs Function` was not satisfied">
  $15 = trace: start of call of $13<%194<{ body_6 }>> with $10 $14<%173<"`function | typeIs Function` was not satisfied">> $1 ($12<%6<Builtins::getArgumentCount:5>> is responsible, code is at $12<%6<Builtins::getArgumentCount:5>>)
  $16 = call $13<%194<{ body_6 }>> with $10 $14<%173<"`function | typeIs Function` was not satisfied">> $1 ($12<%6<Builtins::getArgumentCount:5>> is responsible)
  $17 = trace: end of call
  $18 = %112<builtinGetArgumentCount>
  $19 = %5<Builtins::getArgumentCount:11>
  $20 = drop $16
  $21 = call $18<%112<builtinGetArgumentCount>> with $0 ($19<%5<Builtins::getArgumentCount:11>> is responsible)
body_12 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_13 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %7<Builtins::ifElse:1>
  $6 = call $3<%110<builtinEquals>> with $4<%131<False>> $0 ($5<%7<Builtins::ifElse:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%7<Builtins::ifElse:1>> is responsible)
body_14 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Builtins::ifElse
  # Captured IDs: none
  $4 = dup $0 by 3
  $5 = dup $1 by 4
  $6 = dup $2 by 4
  $7 = dup $3 by 10
  $8 = %110<builtinEquals>
  $9 = %144<True>
  $10 = %7<Builtins::ifElse:1>
  $11 = call $8<%110<builtinEquals>> with $9<%144<True>> $0 ($10<%7<Builtins::ifElse:1>> is responsible)
  $12 = %113<builtinIfElse>
  $13 = %197<{ body_7 }>
  $14 = %198<{ body_8 }>
  $15 = call $12<%113<builtinIfElse>> with $11 $13<%197<{ body_7 }>> $14<%198<{ body_8 }>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $16 = dup $15 by 1
  $17 = %122<builtinTagWithoutValue>
  $18 = call $17<%122<builtinTagWithoutValue>> with $15 ($10<%7<Builtins::ifElse:1>> is responsible)
  $19 = %135<Match>
  $20 = call $8<%110<builtinEquals>> with $18 $19<%135<Match>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $21 = { body_12 capturing $15 }
  $22 = { body_13 capturing $0 }
  $23 = call $12<%113<builtinIfElse>> with $20 $21 $22 ($10<%7<Builtins::ifElse:1>> is responsible)
  $24 = call $17<%122<builtinTagWithoutValue>> with $23 ($10<%7<Builtins::ifElse:1>> is responsible)
  $25 = call $8<%110<builtinEquals>> with $24 $19<%135<Match>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $26 = %192<{ body_0 }>
  $27 = %199<{ body_9 }>
  $28 = call $12<%113<builtinIfElse>> with $25 $26<%192<{ body_0 }>> $27<%199<{ body_9 }>> ($10<%7<Builtins::ifElse:1>> is responsible)
  $29 = dup $28 by 1
  $30 = %15<Builtins::ifElse:5>
  $31 = %194<{ body_6 }>
  $32 = %170<"`conditionIsBool` was not satisfied">
  $33 = trace: start of call of $31<%194<{ body_6 }>> with $28 $32<%170<"`conditionIsBool` was not satisfied">> $3 ($30<%15<Builtins::ifElse:5>> is responsible, code is at $30<%15<Builtins::ifElse:5>>)
  $34 = call $31<%194<{ body_6 }>> with $28 $32<%170<"`conditionIsBool` was not satisfied">> $3 ($30<%15<Builtins::ifElse:5>> is responsible)
  $35 = trace: end of call
  $36 = %127<builtinTypeOf>
  $37 = %28<Builtins::typeIs:19>
  $38 = call $36<%127<builtinTypeOf>> with $1 ($37<%28<Builtins::typeIs:19>> is responsible)
  $39 = dup $38 by 1
  $40 = %132<Function>
  $41 = %29<Builtins::typeIs:25>
  $42 = call $8<%110<builtinEquals>> with $38 $40<%132<Function>> ($41<%29<Builtins::typeIs:25>> is responsible)
  $43 = dup $42 by 1
  $44 = %8<Builtins::ifElse:11>
  $45 = %191<"`then | typeIs Function` was not satisfied">
  $46 = trace: start of call of $31<%194<{ body_6 }>> with $42 $45<%191<"`then | typeIs Function` was not satisfied">> $3 ($44<%8<Builtins::ifElse:11>> is responsible, code is at $44<%8<Builtins::ifElse:11>>)
  $47 = call $31<%194<{ body_6 }>> with $42 $45<%191<"`then | typeIs Function` was not satisfied">> $3 ($44<%8<Builtins::ifElse:11>> is responsible)
  $48 = trace: end of call
  $49 = %9<Builtins::ifElse:14>
  $50 = %201<{ body_11 }>
  $51 = trace: start of call of $50<%201<{ body_11 }>> with $1 ($49<%9<Builtins::ifElse:14>> is responsible, code is at $49<%9<Builtins::ifElse:14>>)
  $52 = call $8<%110<builtinEquals>> with $38 $40<%132<Function>> ($41<%29<Builtins::typeIs:25>> is responsible)
  $53 = dup $52 by 1
  $54 = %6<Builtins::getArgumentCount:5>
  $55 = %173<"`function | typeIs Function` was not satisfied">
  $56 = trace: start of call of $31<%194<{ body_6 }>> with $52 $55<%173<"`function | typeIs Function` was not satisfied">> $49<%9<Builtins::ifElse:14>> ($54<%6<Builtins::getArgumentCount:5>> is responsible, code is at $54<%6<Builtins::getArgumentCount:5>>)
  $57 = call $31<%194<{ body_6 }>> with $52 $55<%173<"`function | typeIs Function` was not satisfied">> $49<%9<Builtins::ifElse:14>> ($54<%6<Builtins::getArgumentCount:5>> is responsible)
  $58 = trace: end of call
  $59 = %112<builtinGetArgumentCount>
  $60 = %5<Builtins::getArgumentCount:11>
  $61 = call $59<%112<builtinGetArgumentCount>> with $1 ($60<%5<Builtins::getArgumentCount:11>> is responsible)
  $62 = trace: end of call
  $63 = %145<0>
  $64 = %0<Builtins::equals:6>
  $65 = call $8<%110<builtinEquals>> with $61 $63<%145<0>> ($64<%0<Builtins::equals:6>> is responsible)
  $66 = dup $65 by 1
  $67 = %10<Builtins::ifElse:19>
  $68 = %190<"`then | getArgumentCount | equals 0` was not satisfied">
  $69 = trace: start of call of $31<%194<{ body_6 }>> with $65 $68<%190<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($67<%10<Builtins::ifElse:19>> is responsible, code is at $67<%10<Builtins::ifElse:19>>)
  $70 = call $31<%194<{ body_6 }>> with $65 $68<%190<"`then | getArgumentCount | equals 0` was not satisfied">> $3 ($67<%10<Builtins::ifElse:19>> is responsible)
  $71 = trace: end of call
  $72 = call $36<%127<builtinTypeOf>> with $2 ($37<%28<Builtins::typeIs:19>> is responsible)
  $73 = dup $72 by 1
  $74 = call $8<%110<builtinEquals>> with $72 $40<%132<Function>> ($41<%29<Builtins::typeIs:25>> is responsible)
  $75 = dup $74 by 1
  $76 = %11<Builtins::ifElse:25>
  $77 = %172<"`else | typeIs Function` was not satisfied">
  $78 = trace: start of call of $31<%194<{ body_6 }>> with $74 $77<%172<"`else | typeIs Function` was not satisfied">> $3 ($76<%11<Builtins::ifElse:25>> is responsible, code is at $76<%11<Builtins::ifElse:25>>)
  $79 = call $31<%194<{ body_6 }>> with $74 $77<%172<"`else | typeIs Function` was not satisfied">> $3 ($76<%11<Builtins::ifElse:25>> is responsible)
  $80 = trace: end of call
  $81 = %12<Builtins::ifElse:28>
  $82 = trace: start of call of $50<%201<{ body_11 }>> with $2 ($81<%12<Builtins::ifElse:28>> is responsible, code is at $81<%12<Builtins::ifElse:28>>)
  $83 = call $8<%110<builtinEquals>> with $72 $40<%132<Function>> ($41<%29<Builtins::typeIs:25>> is responsible)
  $84 = dup $83 by 1
  $85 = trace: start of call of $31<%194<{ body_6 }>> with $83 $55<%173<"`function | typeIs Function` was not satisfied">> $81<%12<Builtins::ifElse:28>> ($54<%6<Builtins::getArgumentCount:5>> is responsible, code is at $54<%6<Builtins::getArgumentCount:5>>)
  $86 = call $31<%194<{ body_6 }>> with $83 $55<%173<"`function | typeIs Function` was not satisfied">> $81<%12<Builtins::ifElse:28>> ($54<%6<Builtins::getArgumentCount:5>> is responsible)
  $87 = trace: end of call
  $88 = call $59<%112<builtinGetArgumentCount>> with $2 ($60<%5<Builtins::getArgumentCount:11>> is responsible)
  $89 = trace: end of call
  $90 = call $8<%110<builtinEquals>> with $88 $63<%145<0>> ($64<%0<Builtins::equals:6>> is responsible)
  $91 = dup $90 by 1
  $92 = %13<Builtins::ifElse:33>
  $93 = %171<"`else | getArgumentCount | equals 0` was not satisfied">
  $94 = trace: start of call of $31<%194<{ body_6 }>> with $90 $93<%171<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($92<%13<Builtins::ifElse:33>> is responsible, code is at $92<%13<Builtins::ifElse:33>>)
  $95 = call $31<%194<{ body_6 }>> with $90 $93<%171<"`else | getArgumentCount | equals 0` was not satisfied">> $3 ($92<%13<Builtins::ifElse:33>> is responsible)
  $96 = trace: end of call
  $97 = %14<Builtins::ifElse:41>
  $98 = trace: tail call of $12<%113<builtinIfElse>> with $0 $1 $2 ($97<%14<Builtins::ifElse:41>> is responsible, code is at $97<%14<Builtins::ifElse:41>>)
  $99 = drop $34
  $100 = drop $47
  $101 = drop $57
  $102 = drop $70
  $103 = drop $79
  $104 = drop $86
  $105 = drop $95
  $106 = call $12<%113<builtinIfElse>> with $0 $1 $2 ($97<%14<Builtins::ifElse:41>> is responsible)
body_15 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::intCompareTo
  # Captured IDs: none
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = dup $2 by 4
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %133<Int>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%133<Int>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %18<Builtins::intCompareTo:5>
  $15 = %194<{ body_6 }>
  $16 = %166<"`a | typeIs Int` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%166<"`a | typeIs Int` was not satisfied">> $2 ($14<%18<Builtins::intCompareTo:5>> is responsible, code is at $14<%18<Builtins::intCompareTo:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%166<"`a | typeIs Int` was not satisfied">> $2 ($14<%18<Builtins::intCompareTo:5>> is responsible)
  $19 = trace: end of call
  $20 = call $6<%127<builtinTypeOf>> with $1 ($7<%28<Builtins::typeIs:19>> is responsible)
  $21 = call $9<%110<builtinEquals>> with $20 $10<%133<Int>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $22 = dup $21 by 1
  $23 = %16<Builtins::intCompareTo:11>
  $24 = %167<"`b | typeIs Int` was not satisfied">
  $25 = trace: start of call of $15<%194<{ body_6 }>> with $21 $24<%167<"`b | typeIs Int` was not satisfied">> $2 ($23<%16<Builtins::intCompareTo:11>> is responsible, code is at $23<%16<Builtins::intCompareTo:11>>)
  $26 = call $15<%194<{ body_6 }>> with $21 $24<%167<"`b | typeIs Int` was not satisfied">> $2 ($23<%16<Builtins::intCompareTo:11>> is responsible)
  $27 = trace: end of call
  $28 = %114<builtinIntCompareTo>
  $29 = %17<Builtins::intCompareTo:18>
  $30 = drop $18
  $31 = drop $26
  $32 = call $28<%114<builtinIntCompareTo>> with $0 $1 ($29<%17<Builtins::intCompareTo:18>> is responsible)
body_16 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::intParse
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = dup $1 by 2
  $4 = %127<builtinTypeOf>
  $5 = %28<Builtins::typeIs:19>
  $6 = call $4<%127<builtinTypeOf>> with $0 ($5<%28<Builtins::typeIs:19>> is responsible)
  $7 = %110<builtinEquals>
  $8 = %143<Text>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $7<%110<builtinEquals>> with $6 $8<%143<Text>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = dup $10 by 1
  $12 = %20<Builtins::intParse:5>
  $13 = %194<{ body_6 }>
  $14 = %189<"`text | typeIs Text` was not satisfied">
  $15 = trace: start of call of $13<%194<{ body_6 }>> with $10 $14<%189<"`text | typeIs Text` was not satisfied">> $1 ($12<%20<Builtins::intParse:5>> is responsible, code is at $12<%20<Builtins::intParse:5>>)
  $16 = call $13<%194<{ body_6 }>> with $10 $14<%189<"`text | typeIs Text` was not satisfied">> $1 ($12<%20<Builtins::intParse:5>> is responsible)
  $17 = trace: end of call
  $18 = %115<builtinIntParse>
  $19 = %19<Builtins::intParse:11>
  $20 = drop $16
  $21 = call $18<%115<builtinIntParse>> with $0 ($19<%19<Builtins::intParse:11>> is responsible)
body_17 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::structGet
  # Captured IDs: none
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = dup $2 by 4
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %141<Struct>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%141<Struct>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %24<Builtins::structGet:5>
  $15 = %194<{ body_6 }>
  $16 = %187<"`struct | typeIs Struct` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%187<"`struct | typeIs Struct` was not satisfied">> $2 ($14<%24<Builtins::structGet:5>> is responsible, code is at $14<%24<Builtins::structGet:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%187<"`struct | typeIs Struct` was not satisfied">> $2 ($14<%24<Builtins::structGet:5>> is responsible)
  $19 = trace: end of call
  $20 = %118<builtinStructHasKey>
  $21 = %21<Builtins::structGet:12>
  $22 = call $20<%118<builtinStructHasKey>> with $0 $1 ($21<%21<Builtins::structGet:12>> is responsible)
  $23 = dup $22 by 1
  $24 = %22<Builtins::structGet:14>
  $25 = %188<"`struct | ✨.structHasKey key` was not satisfied">
  $26 = trace: start of call of $15<%194<{ body_6 }>> with $22 $25<%188<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($24<%22<Builtins::structGet:14>> is responsible, code is at $24<%22<Builtins::structGet:14>>)
  $27 = call $15<%194<{ body_6 }>> with $22 $25<%188<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($24<%22<Builtins::structGet:14>> is responsible)
  $28 = trace: end of call
  $29 = %117<builtinStructGet>
  $30 = %23<Builtins::structGet:21>
  $31 = drop $18
  $32 = drop $27
  $33 = call $29<%117<builtinStructGet>> with $0 $1 ($30<%23<Builtins::structGet:21>> is responsible)
body_18 $0 (+ responsible $1) =
  # Original HIR IDs: Builtins::textTrimStart
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = dup $1 by 2
  $4 = %127<builtinTypeOf>
  $5 = %28<Builtins::typeIs:19>
  $6 = call $4<%127<builtinTypeOf>> with $0 ($5<%28<Builtins::typeIs:19>> is responsible)
  $7 = %110<builtinEquals>
  $8 = %143<Text>
  $9 = %29<Builtins::typeIs:25>
  $10 = call $7<%110<builtinEquals>> with $6 $8<%143<Text>> ($9<%29<Builtins::typeIs:25>> is responsible)
  $11 = dup $10 by 1
  $12 = %27<Builtins::textTrimStart:5>
  $13 = %194<{ body_6 }>
  $14 = %189<"`text | typeIs Text` was not satisfied">
  $15 = trace: start of call of $13<%194<{ body_6 }>> with $10 $14<%189<"`text | typeIs Text` was not satisfied">> $1 ($12<%27<Builtins::textTrimStart:5>> is responsible, code is at $12<%27<Builtins::textTrimStart:5>>)
  $16 = call $13<%194<{ body_6 }>> with $10 $14<%189<"`text | typeIs Text` was not satisfied">> $1 ($12<%27<Builtins::textTrimStart:5>> is responsible)
  $17 = trace: end of call
  $18 = %125<builtinTextTrimStart>
  $19 = %26<Builtins::textTrimStart:11>
  $20 = drop $16
  $21 = call $18<%125<builtinTextTrimStart>> with $0 ($19<%26<Builtins::textTrimStart:11>> is responsible)
body_19 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %64<Core:function:is0:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%64<Core:function:is0:9:3>> is responsible, code is at $3<%64<Core:function:is0:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %145<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%145<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_20 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is0
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = %127<builtinTypeOf>
  $4 = %30<Builtins::typeOf:5>
  $5 = call $3<%127<builtinTypeOf>> with $0 ($4<%30<Builtins::typeOf:5>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %132<Function>
  $8 = %0<Builtins::equals:6>
  $9 = call $6<%110<builtinEquals>> with $5 $7<%132<Function>> ($8<%0<Builtins::equals:6>> is responsible)
  $10 = dup $9 by 1
  $11 = { body_19 capturing $0 }
  $12 = dup $11 by 1
  $13 = %63<Core:function:is0:11>
  $14 = %202<{ body_14 }>
  $15 = %199<{ body_9 }>
  $16 = trace: tail call of $14<%202<{ body_14 }>> with $9 $11 $15<%199<{ body_9 }>> ($13<%63<Core:function:is0:11>> is responsible, code is at $13<%63<Core:function:is0:11>>)
  $17 = call $14<%202<{ body_14 }>> with $9 $11 $15<%199<{ body_9 }>> ($13<%63<Core:function:is0:11>> is responsible)
body_21 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %64<Core:function:is0:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%64<Core:function:is0:9:3>> is responsible, code is at $3<%64<Core:function:is0:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %145<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%145<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_22 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:run
  # Captured IDs: none
  $2 = dup $0 by 7
  $3 = dup $1 by 2
  $4 = %70<Core:function:run:2>
  $5 = %207<{ body_20 }>
  $6 = trace: start of call of $5<%207<{ body_20 }>> with $0 ($4<%70<Core:function:run:2>> is responsible, code is at $4<%70<Core:function:run:2>>)
  $7 = %127<builtinTypeOf>
  $8 = %30<Builtins::typeOf:5>
  $9 = call $7<%127<builtinTypeOf>> with $0 ($8<%30<Builtins::typeOf:5>> is responsible)
  $10 = %110<builtinEquals>
  $11 = %132<Function>
  $12 = %0<Builtins::equals:6>
  $13 = call $10<%110<builtinEquals>> with $9 $11<%132<Function>> ($12<%0<Builtins::equals:6>> is responsible)
  $14 = dup $13 by 1
  $15 = { body_21 capturing $0 }
  $16 = dup $15 by 1
  $17 = %63<Core:function:is0:11>
  $18 = %202<{ body_14 }>
  $19 = %199<{ body_9 }>
  $20 = trace: start of call of $18<%202<{ body_14 }>> with $13 $15 $19<%199<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible, code is at $17<%63<Core:function:is0:11>>)
  $21 = call $18<%202<{ body_14 }>> with $13 $15 $19<%199<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible)
  $22 = dup $21 by 1
  $23 = trace: end of call
  $24 = trace: end of call
  $25 = %71<Core:function:run:4>
  $26 = %194<{ body_6 }>
  $27 = %186<"`is0 body` was not satisfied">
  $28 = trace: start of call of $26<%194<{ body_6 }>> with $21 $27<%186<"`is0 body` was not satisfied">> $1 ($25<%71<Core:function:run:4>> is responsible, code is at $25<%71<Core:function:run:4>>)
  $29 = call $26<%194<{ body_6 }>> with $21 $27<%186<"`is0 body` was not satisfied">> $1 ($25<%71<Core:function:run:4>> is responsible)
  $30 = trace: end of call
  $31 = %69<Core:function:run:12>
  $32 = %200<{ body_10 }>
  $33 = trace: start of call of $32<%200<{ body_10 }>> with $0 ($31<%69<Core:function:run:12>> is responsible, code is at $31<%69<Core:function:run:12>>)
  $34 = %28<Builtins::typeIs:19>
  $35 = call $7<%127<builtinTypeOf>> with $0 ($34<%28<Builtins::typeIs:19>> is responsible)
  $36 = %29<Builtins::typeIs:25>
  $37 = call $10<%110<builtinEquals>> with $35 $11<%132<Function>> ($36<%29<Builtins::typeIs:25>> is responsible)
  $38 = dup $37 by 1
  $39 = %4<Builtins::functionRun:5>
  $40 = %173<"`function | typeIs Function` was not satisfied">
  $41 = trace: start of call of $26<%194<{ body_6 }>> with $37 $40<%173<"`function | typeIs Function` was not satisfied">> $31<%69<Core:function:run:12>> ($39<%4<Builtins::functionRun:5>> is responsible, code is at $39<%4<Builtins::functionRun:5>>)
  $42 = call $26<%194<{ body_6 }>> with $37 $40<%173<"`function | typeIs Function` was not satisfied">> $31<%69<Core:function:run:12>> ($39<%4<Builtins::functionRun:5>> is responsible)
  $43 = trace: end of call
  $44 = %112<builtinGetArgumentCount>
  $45 = %1<Builtins::functionRun:11>
  $46 = call $44<%112<builtinGetArgumentCount>> with $0 ($45<%1<Builtins::functionRun:11>> is responsible)
  $47 = %145<0>
  $48 = call $10<%110<builtinEquals>> with $46 $47<%145<0>> ($12<%0<Builtins::equals:6>> is responsible)
  $49 = dup $48 by 1
  $50 = %2<Builtins::functionRun:16>
  $51 = %174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $52 = trace: start of call of $26<%194<{ body_6 }>> with $48 $51<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $31<%69<Core:function:run:12>> ($50<%2<Builtins::functionRun:16>> is responsible, code is at $50<%2<Builtins::functionRun:16>>)
  $53 = call $26<%194<{ body_6 }>> with $48 $51<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $31<%69<Core:function:run:12>> ($50<%2<Builtins::functionRun:16>> is responsible)
  $54 = trace: end of call
  $55 = %3<Builtins::functionRun:22>
  $56 = %111<builtinFunctionRun>
  $57 = trace: start of call of $56<%111<builtinFunctionRun>> with $0 ($55<%3<Builtins::functionRun:22>> is responsible, code is at $55<%3<Builtins::functionRun:22>>)
  $58 = call $0 with no arguments ($55<%3<Builtins::functionRun:22>> is responsible)
  $59 = trace: end of call
  $60 = trace: end of call
  $61 = drop $29
  $62 = drop $42
  $63 = drop $53
  $64 = $58
body_23 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_24 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %31<Core:bool:is:1>
  $6 = call $3<%110<builtinEquals>> with $4<%131<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
body_25 $0 (+ responsible $1) =
  # Original HIR IDs: Core:bool:is
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %144<True>
  $5 = %31<Core:bool:is:1>
  $6 = call $3<%110<builtinEquals>> with $4<%144<True>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
  $11 = dup $10 by 1
  $12 = %122<builtinTagWithoutValue>
  $13 = call $12<%122<builtinTagWithoutValue>> with $10 ($5<%31<Core:bool:is:1>> is responsible)
  $14 = %135<Match>
  $15 = call $3<%110<builtinEquals>> with $13 $14<%135<Match>> ($5<%31<Core:bool:is:1>> is responsible)
  $16 = { body_23 capturing $10 }
  $17 = { body_24 capturing $0 }
  $18 = call $7<%113<builtinIfElse>> with $15 $16 $17 ($5<%31<Core:bool:is:1>> is responsible)
  $19 = call $12<%122<builtinTagWithoutValue>> with $18 ($5<%31<Core:bool:is:1>> is responsible)
  $20 = call $3<%110<builtinEquals>> with $19 $14<%135<Match>> ($5<%31<Core:bool:is:1>> is responsible)
  $21 = %192<{ body_0 }>
  $22 = %199<{ body_9 }>
  $23 = call $7<%113<builtinIfElse>> with $20 $21<%192<{ body_0 }>> $22<%199<{ body_9 }>> ($5<%31<Core:bool:is:1>> is responsible)
body_26 (responsible $0) =
  # Original HIR IDs: Core:bool:lazyOr:16:case-1:didNotMatch
  # Captured IDs: none
  $1 = %153<"No case matched the given expression.">
  $2 = %34<Core:bool:lazyOr:16>
  $3 = panicking because $1<%153<"No case matched the given expression.">> ($2<%34<Core:bool:lazyOr:16>> is at fault)
body_27 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_28 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %31<Core:bool:is:1>
  $6 = call $3<%110<builtinEquals>> with $4<%131<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
body_29 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %64<Core:function:is0:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%64<Core:function:is0:9:3>> is responsible, code is at $3<%64<Core:function:is0:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %145<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%145<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_30 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %64<Core:function:is0:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%64<Core:function:is0:9:3>> is responsible, code is at $3<%64<Core:function:is0:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %145<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%145<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_31 (responsible $2) =
  # Original HIR IDs: Core:bool:lazyOr:16:case-1:matched
  # Captured IDs: $0, $1
  $3 = dup $0 by 9
  $4 = dup $1 by 2
  $5 = %37<Core:bool:lazyOr:16:8>
  $6 = %208<{ body_22 }>
  $7 = trace: start of call of $6<%208<{ body_22 }>> with $0 ($5<%37<Core:bool:lazyOr:16:8>> is responsible, code is at $5<%37<Core:bool:lazyOr:16:8>>)
  $8 = %70<Core:function:run:2>
  $9 = %207<{ body_20 }>
  $10 = trace: start of call of $9<%207<{ body_20 }>> with $0 ($8<%70<Core:function:run:2>> is responsible, code is at $8<%70<Core:function:run:2>>)
  $11 = %127<builtinTypeOf>
  $12 = %30<Builtins::typeOf:5>
  $13 = call $11<%127<builtinTypeOf>> with $0 ($12<%30<Builtins::typeOf:5>> is responsible)
  $14 = %110<builtinEquals>
  $15 = %132<Function>
  $16 = %0<Builtins::equals:6>
  $17 = call $14<%110<builtinEquals>> with $13 $15<%132<Function>> ($16<%0<Builtins::equals:6>> is responsible)
  $18 = dup $17 by 1
  $19 = { body_30 capturing $0 }
  $20 = dup $19 by 1
  $21 = %63<Core:function:is0:11>
  $22 = %202<{ body_14 }>
  $23 = %199<{ body_9 }>
  $24 = trace: start of call of $22<%202<{ body_14 }>> with $17 $19 $23<%199<{ body_9 }>> ($21<%63<Core:function:is0:11>> is responsible, code is at $21<%63<Core:function:is0:11>>)
  $25 = call $22<%202<{ body_14 }>> with $17 $19 $23<%199<{ body_9 }>> ($21<%63<Core:function:is0:11>> is responsible)
  $26 = dup $25 by 1
  $27 = trace: end of call
  $28 = trace: end of call
  $29 = %71<Core:function:run:4>
  $30 = %194<{ body_6 }>
  $31 = %186<"`is0 body` was not satisfied">
  $32 = trace: start of call of $30<%194<{ body_6 }>> with $25 $31<%186<"`is0 body` was not satisfied">> $5<%37<Core:bool:lazyOr:16:8>> ($29<%71<Core:function:run:4>> is responsible, code is at $29<%71<Core:function:run:4>>)
  $33 = call $30<%194<{ body_6 }>> with $25 $31<%186<"`is0 body` was not satisfied">> $5<%37<Core:bool:lazyOr:16:8>> ($29<%71<Core:function:run:4>> is responsible)
  $34 = trace: end of call
  $35 = %69<Core:function:run:12>
  $36 = %200<{ body_10 }>
  $37 = trace: start of call of $36<%200<{ body_10 }>> with $0 ($35<%69<Core:function:run:12>> is responsible, code is at $35<%69<Core:function:run:12>>)
  $38 = %28<Builtins::typeIs:19>
  $39 = call $11<%127<builtinTypeOf>> with $0 ($38<%28<Builtins::typeIs:19>> is responsible)
  $40 = %29<Builtins::typeIs:25>
  $41 = call $14<%110<builtinEquals>> with $39 $15<%132<Function>> ($40<%29<Builtins::typeIs:25>> is responsible)
  $42 = dup $41 by 1
  $43 = %4<Builtins::functionRun:5>
  $44 = %173<"`function | typeIs Function` was not satisfied">
  $45 = trace: start of call of $30<%194<{ body_6 }>> with $41 $44<%173<"`function | typeIs Function` was not satisfied">> $35<%69<Core:function:run:12>> ($43<%4<Builtins::functionRun:5>> is responsible, code is at $43<%4<Builtins::functionRun:5>>)
  $46 = call $30<%194<{ body_6 }>> with $41 $44<%173<"`function | typeIs Function` was not satisfied">> $35<%69<Core:function:run:12>> ($43<%4<Builtins::functionRun:5>> is responsible)
  $47 = trace: end of call
  $48 = %112<builtinGetArgumentCount>
  $49 = %1<Builtins::functionRun:11>
  $50 = call $48<%112<builtinGetArgumentCount>> with $0 ($49<%1<Builtins::functionRun:11>> is responsible)
  $51 = %145<0>
  $52 = call $14<%110<builtinEquals>> with $50 $51<%145<0>> ($16<%0<Builtins::equals:6>> is responsible)
  $53 = dup $52 by 1
  $54 = %2<Builtins::functionRun:16>
  $55 = %174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $56 = trace: start of call of $30<%194<{ body_6 }>> with $52 $55<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $35<%69<Core:function:run:12>> ($54<%2<Builtins::functionRun:16>> is responsible, code is at $54<%2<Builtins::functionRun:16>>)
  $57 = call $30<%194<{ body_6 }>> with $52 $55<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $35<%69<Core:function:run:12>> ($54<%2<Builtins::functionRun:16>> is responsible)
  $58 = trace: end of call
  $59 = %3<Builtins::functionRun:22>
  $60 = %111<builtinFunctionRun>
  $61 = trace: start of call of $60<%111<builtinFunctionRun>> with $0 ($59<%3<Builtins::functionRun:22>> is responsible, code is at $59<%3<Builtins::functionRun:22>>)
  $62 = call $0 with no arguments ($59<%3<Builtins::functionRun:22>> is responsible)
  $63 = dup $62 by 2
  $64 = trace: end of call
  $65 = trace: end of call
  $66 = trace: end of call
  $67 = %35<Core:bool:lazyOr:16:12>
  $68 = %209<{ body_25 }>
  $69 = trace: start of call of $68<%209<{ body_25 }>> with $62 ($67<%35<Core:bool:lazyOr:16:12>> is responsible, code is at $67<%35<Core:bool:lazyOr:16:12>>)
  $70 = call $68<%209<{ body_25 }>> with $62 ($67<%35<Core:bool:lazyOr:16:12>> is responsible)
  $71 = dup $70 by 1
  $72 = trace: end of call
  $73 = %36<Core:bool:lazyOr:16:20>
  $74 = %168<"`b` didn't return a bool.">
  $75 = trace: start of call of $30<%194<{ body_6 }>> with $70 $74<%168<"`b` didn't return a bool.">> $1 ($73<%36<Core:bool:lazyOr:16:20>> is responsible, code is at $73<%36<Core:bool:lazyOr:16:20>>)
  $76 = call $30<%194<{ body_6 }>> with $70 $74<%168<"`b` didn't return a bool.">> $1 ($73<%36<Core:bool:lazyOr:16:20>> is responsible)
  $77 = trace: end of call
  $78 = drop $33
  $79 = drop $46
  $80 = drop $57
  $81 = drop $76
  $82 = $62
body_32 (responsible $3) =
  # Original HIR IDs: Core:bool:lazyOr:16:case-0:didNotMatch
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = dup $2 by 1
  $7 = %110<builtinEquals>
  $8 = %131<False>
  $9 = %34<Core:bool:lazyOr:16>
  $10 = call $7<%110<builtinEquals>> with $8<%131<False>> $0 ($9<%34<Core:bool:lazyOr:16>> is responsible)
  $11 = %113<builtinIfElse>
  $12 = %197<{ body_7 }>
  $13 = %198<{ body_8 }>
  $14 = call $11<%113<builtinIfElse>> with $10 $12<%197<{ body_7 }>> $13<%198<{ body_8 }>> ($9<%34<Core:bool:lazyOr:16>> is responsible)
  $15 = %122<builtinTagWithoutValue>
  $16 = call $15<%122<builtinTagWithoutValue>> with $14 ($9<%34<Core:bool:lazyOr:16>> is responsible)
  $17 = %135<Match>
  $18 = call $7<%110<builtinEquals>> with $16 $17<%135<Match>> ($9<%34<Core:bool:lazyOr:16>> is responsible)
  $19 = { body_31 capturing $1, $2 }
  $20 = %210<{ body_26 }>
  $21 = call $11<%113<builtinIfElse>> with $18 $19 $20<%210<{ body_26 }>> ($9<%34<Core:bool:lazyOr:16>> is responsible)
body_33 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:bool:lazyOr
  # Captured IDs: none
  $3 = dup $0 by 4
  $4 = dup $1 by 3
  $5 = dup $2 by 5
  $6 = %38<Core:bool:lazyOr:2>
  $7 = %209<{ body_25 }>
  $8 = trace: start of call of $7<%209<{ body_25 }>> with $0 ($6<%38<Core:bool:lazyOr:2>> is responsible, code is at $6<%38<Core:bool:lazyOr:2>>)
  $9 = %110<builtinEquals>
  $10 = %144<True>
  $11 = %31<Core:bool:is:1>
  $12 = call $9<%110<builtinEquals>> with $10<%144<True>> $0 ($11<%31<Core:bool:is:1>> is responsible)
  $13 = %113<builtinIfElse>
  $14 = %197<{ body_7 }>
  $15 = %198<{ body_8 }>
  $16 = call $13<%113<builtinIfElse>> with $12 $14<%197<{ body_7 }>> $15<%198<{ body_8 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $17 = dup $16 by 1
  $18 = %122<builtinTagWithoutValue>
  $19 = call $18<%122<builtinTagWithoutValue>> with $16 ($11<%31<Core:bool:is:1>> is responsible)
  $20 = %135<Match>
  $21 = call $9<%110<builtinEquals>> with $19 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $22 = { body_27 capturing $16 }
  $23 = { body_28 capturing $0 }
  $24 = call $13<%113<builtinIfElse>> with $21 $22 $23 ($11<%31<Core:bool:is:1>> is responsible)
  $25 = call $18<%122<builtinTagWithoutValue>> with $24 ($11<%31<Core:bool:is:1>> is responsible)
  $26 = call $9<%110<builtinEquals>> with $25 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $27 = %192<{ body_0 }>
  $28 = %199<{ body_9 }>
  $29 = call $13<%113<builtinIfElse>> with $26 $27<%192<{ body_0 }>> $28<%199<{ body_9 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $30 = dup $29 by 1
  $31 = trace: end of call
  $32 = %39<Core:bool:lazyOr:4>
  $33 = %194<{ body_6 }>
  $34 = %180<"`is a` was not satisfied">
  $35 = trace: start of call of $33<%194<{ body_6 }>> with $29 $34<%180<"`is a` was not satisfied">> $2 ($32<%39<Core:bool:lazyOr:4>> is responsible, code is at $32<%39<Core:bool:lazyOr:4>>)
  $36 = call $33<%194<{ body_6 }>> with $29 $34<%180<"`is a` was not satisfied">> $2 ($32<%39<Core:bool:lazyOr:4>> is responsible)
  $37 = trace: end of call
  $38 = %32<Core:bool:lazyOr:12>
  $39 = %207<{ body_20 }>
  $40 = trace: start of call of $39<%207<{ body_20 }>> with $1 ($38<%32<Core:bool:lazyOr:12>> is responsible, code is at $38<%32<Core:bool:lazyOr:12>>)
  $41 = %127<builtinTypeOf>
  $42 = %30<Builtins::typeOf:5>
  $43 = call $41<%127<builtinTypeOf>> with $1 ($42<%30<Builtins::typeOf:5>> is responsible)
  $44 = %132<Function>
  $45 = %0<Builtins::equals:6>
  $46 = call $9<%110<builtinEquals>> with $43 $44<%132<Function>> ($45<%0<Builtins::equals:6>> is responsible)
  $47 = dup $46 by 1
  $48 = { body_29 capturing $1 }
  $49 = dup $48 by 1
  $50 = %63<Core:function:is0:11>
  $51 = %202<{ body_14 }>
  $52 = trace: start of call of $51<%202<{ body_14 }>> with $46 $48 $28<%199<{ body_9 }>> ($50<%63<Core:function:is0:11>> is responsible, code is at $50<%63<Core:function:is0:11>>)
  $53 = call $51<%202<{ body_14 }>> with $46 $48 $28<%199<{ body_9 }>> ($50<%63<Core:function:is0:11>> is responsible)
  $54 = dup $53 by 1
  $55 = trace: end of call
  $56 = trace: end of call
  $57 = %33<Core:bool:lazyOr:14>
  $58 = %175<"`function.is0 b` was not satisfied">
  $59 = trace: start of call of $33<%194<{ body_6 }>> with $53 $58<%175<"`function.is0 b` was not satisfied">> $2 ($57<%33<Core:bool:lazyOr:14>> is responsible, code is at $57<%33<Core:bool:lazyOr:14>>)
  $60 = call $33<%194<{ body_6 }>> with $53 $58<%175<"`function.is0 b` was not satisfied">> $2 ($57<%33<Core:bool:lazyOr:14>> is responsible)
  $61 = trace: end of call
  $62 = %34<Core:bool:lazyOr:16>
  $63 = call $9<%110<builtinEquals>> with $10<%144<True>> $0 ($62<%34<Core:bool:lazyOr:16>> is responsible)
  $64 = call $13<%113<builtinIfElse>> with $63 $14<%197<{ body_7 }>> $15<%198<{ body_8 }>> ($62<%34<Core:bool:lazyOr:16>> is responsible)
  $65 = call $18<%122<builtinTagWithoutValue>> with $64 ($62<%34<Core:bool:lazyOr:16>> is responsible)
  $66 = call $9<%110<builtinEquals>> with $65 $20<%135<Match>> ($62<%34<Core:bool:lazyOr:16>> is responsible)
  $67 = { body_32 capturing $0, $1, $2 }
  $68 = drop $36
  $69 = drop $60
  $70 = call $13<%113<builtinIfElse>> with $66 $27<%192<{ body_0 }>> $67 ($62<%34<Core:bool:lazyOr:16>> is responsible)
body_34 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_35 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %31<Core:bool:is:1>
  $6 = call $3<%110<builtinEquals>> with $4<%131<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
body_36 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_37 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %31<Core:bool:is:1>
  $6 = call $3<%110<builtinEquals>> with $4<%131<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
body_38 (responsible $1) =
  # Original HIR IDs: Core:bool:or:12
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_39 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:bool:or
  # Captured IDs: none
  $3 = dup $0 by 4
  $4 = dup $1 by 3
  $5 = dup $2 by 4
  $6 = %41<Core:bool:or:2>
  $7 = %209<{ body_25 }>
  $8 = trace: start of call of $7<%209<{ body_25 }>> with $0 ($6<%41<Core:bool:or:2>> is responsible, code is at $6<%41<Core:bool:or:2>>)
  $9 = %110<builtinEquals>
  $10 = %144<True>
  $11 = %31<Core:bool:is:1>
  $12 = call $9<%110<builtinEquals>> with $10<%144<True>> $0 ($11<%31<Core:bool:is:1>> is responsible)
  $13 = %113<builtinIfElse>
  $14 = %197<{ body_7 }>
  $15 = %198<{ body_8 }>
  $16 = call $13<%113<builtinIfElse>> with $12 $14<%197<{ body_7 }>> $15<%198<{ body_8 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $17 = dup $16 by 1
  $18 = %122<builtinTagWithoutValue>
  $19 = call $18<%122<builtinTagWithoutValue>> with $16 ($11<%31<Core:bool:is:1>> is responsible)
  $20 = %135<Match>
  $21 = call $9<%110<builtinEquals>> with $19 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $22 = { body_34 capturing $16 }
  $23 = { body_35 capturing $0 }
  $24 = call $13<%113<builtinIfElse>> with $21 $22 $23 ($11<%31<Core:bool:is:1>> is responsible)
  $25 = call $18<%122<builtinTagWithoutValue>> with $24 ($11<%31<Core:bool:is:1>> is responsible)
  $26 = call $9<%110<builtinEquals>> with $25 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $27 = %192<{ body_0 }>
  $28 = %199<{ body_9 }>
  $29 = call $13<%113<builtinIfElse>> with $26 $27<%192<{ body_0 }>> $28<%199<{ body_9 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $30 = dup $29 by 1
  $31 = trace: end of call
  $32 = %42<Core:bool:or:4>
  $33 = %194<{ body_6 }>
  $34 = %180<"`is a` was not satisfied">
  $35 = trace: start of call of $33<%194<{ body_6 }>> with $29 $34<%180<"`is a` was not satisfied">> $2 ($32<%42<Core:bool:or:4>> is responsible, code is at $32<%42<Core:bool:or:4>>)
  $36 = call $33<%194<{ body_6 }>> with $29 $34<%180<"`is a` was not satisfied">> $2 ($32<%42<Core:bool:or:4>> is responsible)
  $37 = trace: end of call
  $38 = %43<Core:bool:or:7>
  $39 = trace: start of call of $7<%209<{ body_25 }>> with $1 ($38<%43<Core:bool:or:7>> is responsible, code is at $38<%43<Core:bool:or:7>>)
  $40 = call $9<%110<builtinEquals>> with $10<%144<True>> $1 ($11<%31<Core:bool:is:1>> is responsible)
  $41 = call $13<%113<builtinIfElse>> with $40 $14<%197<{ body_7 }>> $15<%198<{ body_8 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $42 = dup $41 by 1
  $43 = call $18<%122<builtinTagWithoutValue>> with $41 ($11<%31<Core:bool:is:1>> is responsible)
  $44 = call $9<%110<builtinEquals>> with $43 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $45 = { body_36 capturing $41 }
  $46 = { body_37 capturing $1 }
  $47 = call $13<%113<builtinIfElse>> with $44 $45 $46 ($11<%31<Core:bool:is:1>> is responsible)
  $48 = call $18<%122<builtinTagWithoutValue>> with $47 ($11<%31<Core:bool:is:1>> is responsible)
  $49 = call $9<%110<builtinEquals>> with $48 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $50 = call $13<%113<builtinIfElse>> with $49 $27<%192<{ body_0 }>> $28<%199<{ body_9 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $51 = dup $50 by 1
  $52 = trace: end of call
  $53 = %44<Core:bool:or:9>
  $54 = %181<"`is b` was not satisfied">
  $55 = trace: start of call of $33<%194<{ body_6 }>> with $50 $54<%181<"`is b` was not satisfied">> $2 ($53<%44<Core:bool:or:9>> is responsible, code is at $53<%44<Core:bool:or:9>>)
  $56 = call $33<%194<{ body_6 }>> with $50 $54<%181<"`is b` was not satisfied">> $2 ($53<%44<Core:bool:or:9>> is responsible)
  $57 = trace: end of call
  $58 = { body_38 capturing $1 }
  $59 = dup $58 by 1
  $60 = %40<Core:bool:or:13>
  $61 = %211<{ body_33 }>
  $62 = trace: tail call of $61<%211<{ body_33 }>> with $0 $58 ($60<%40<Core:bool:or:13>> is responsible, code is at $60<%40<Core:bool:or:13>>)
  $63 = drop $36
  $64 = drop $56
  $65 = call $61<%211<{ body_33 }>> with $0 $58 ($60<%40<Core:bool:or:13>> is responsible)
body_40 (responsible $1) =
  # Original HIR IDs: Core:function:is2:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %68<Core:function:is2:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%68<Core:function:is2:9:3>> is responsible, code is at $3<%68<Core:function:is2:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%68<Core:function:is2:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%68<Core:function:is2:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %147<2>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%147<2>> ($25<%0<Builtins::equals:6>> is responsible)
body_41 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is2
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = %127<builtinTypeOf>
  $4 = %30<Builtins::typeOf:5>
  $5 = call $3<%127<builtinTypeOf>> with $0 ($4<%30<Builtins::typeOf:5>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %132<Function>
  $8 = %0<Builtins::equals:6>
  $9 = call $6<%110<builtinEquals>> with $5 $7<%132<Function>> ($8<%0<Builtins::equals:6>> is responsible)
  $10 = dup $9 by 1
  $11 = { body_40 capturing $0 }
  $12 = dup $11 by 1
  $13 = %67<Core:function:is2:11>
  $14 = %202<{ body_14 }>
  $15 = %199<{ body_9 }>
  $16 = trace: tail call of $14<%202<{ body_14 }>> with $9 $11 $15<%199<{ body_9 }>> ($13<%67<Core:function:is2:11>> is responsible, code is at $13<%67<Core:function:is2:11>>)
  $17 = call $14<%202<{ body_14 }>> with $9 $11 $15<%199<{ body_9 }>> ($13<%67<Core:function:is2:11>> is responsible)
body_42 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_43 (responsible $1) =
  # Original HIR IDs: Core:bool:is:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %31<Core:bool:is:1>
  $6 = call $3<%110<builtinEquals>> with $4<%131<False>> $0 ($5<%31<Core:bool:is:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%31<Core:bool:is:1>> is responsible)
body_44 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %64<Core:function:is0:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%64<Core:function:is0:9:3>> is responsible, code is at $3<%64<Core:function:is0:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %145<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%145<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_45 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_46 (responsible $1) =
  # Original HIR IDs: Builtins::ifElse:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %110<builtinEquals>
  $4 = %131<False>
  $5 = %7<Builtins::ifElse:1>
  $6 = call $3<%110<builtinEquals>> with $4<%131<False>> $0 ($5<%7<Builtins::ifElse:1>> is responsible)
  $7 = %113<builtinIfElse>
  $8 = %197<{ body_7 }>
  $9 = %198<{ body_8 }>
  $10 = call $7<%113<builtinIfElse>> with $6 $8<%197<{ body_7 }>> $9<%198<{ body_8 }>> ($5<%7<Builtins::ifElse:1>> is responsible)
body_47 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:controlFlow:if
  # Captured IDs: none
  $3 = dup $0 by 7
  $4 = dup $1 by 8
  $5 = dup $2 by 4
  $6 = %48<Core:controlFlow:if:7>
  $7 = %209<{ body_25 }>
  $8 = trace: start of call of $7<%209<{ body_25 }>> with $0 ($6<%48<Core:controlFlow:if:7>> is responsible, code is at $6<%48<Core:controlFlow:if:7>>)
  $9 = %110<builtinEquals>
  $10 = %144<True>
  $11 = %31<Core:bool:is:1>
  $12 = call $9<%110<builtinEquals>> with $10<%144<True>> $0 ($11<%31<Core:bool:is:1>> is responsible)
  $13 = %113<builtinIfElse>
  $14 = %197<{ body_7 }>
  $15 = %198<{ body_8 }>
  $16 = call $13<%113<builtinIfElse>> with $12 $14<%197<{ body_7 }>> $15<%198<{ body_8 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $17 = dup $16 by 1
  $18 = %122<builtinTagWithoutValue>
  $19 = call $18<%122<builtinTagWithoutValue>> with $16 ($11<%31<Core:bool:is:1>> is responsible)
  $20 = %135<Match>
  $21 = call $9<%110<builtinEquals>> with $19 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $22 = { body_42 capturing $16 }
  $23 = { body_43 capturing $0 }
  $24 = call $13<%113<builtinIfElse>> with $21 $22 $23 ($11<%31<Core:bool:is:1>> is responsible)
  $25 = call $18<%122<builtinTagWithoutValue>> with $24 ($11<%31<Core:bool:is:1>> is responsible)
  $26 = call $9<%110<builtinEquals>> with $25 $20<%135<Match>> ($11<%31<Core:bool:is:1>> is responsible)
  $27 = %192<{ body_0 }>
  $28 = %199<{ body_9 }>
  $29 = call $13<%113<builtinIfElse>> with $26 $27<%192<{ body_0 }>> $28<%199<{ body_9 }>> ($11<%31<Core:bool:is:1>> is responsible)
  $30 = dup $29 by 1
  $31 = trace: end of call
  $32 = %49<Core:controlFlow:if:9>
  $33 = %194<{ body_6 }>
  $34 = %169<"`bool.is condition` was not satisfied">
  $35 = trace: start of call of $33<%194<{ body_6 }>> with $29 $34<%169<"`bool.is condition` was not satisfied">> $2 ($32<%49<Core:controlFlow:if:9>> is responsible, code is at $32<%49<Core:controlFlow:if:9>>)
  $36 = call $33<%194<{ body_6 }>> with $29 $34<%169<"`bool.is condition` was not satisfied">> $2 ($32<%49<Core:controlFlow:if:9>> is responsible)
  $37 = trace: end of call
  $38 = %45<Core:controlFlow:if:17>
  $39 = %207<{ body_20 }>
  $40 = trace: start of call of $39<%207<{ body_20 }>> with $1 ($38<%45<Core:controlFlow:if:17>> is responsible, code is at $38<%45<Core:controlFlow:if:17>>)
  $41 = %127<builtinTypeOf>
  $42 = %30<Builtins::typeOf:5>
  $43 = call $41<%127<builtinTypeOf>> with $1 ($42<%30<Builtins::typeOf:5>> is responsible)
  $44 = %132<Function>
  $45 = %0<Builtins::equals:6>
  $46 = call $9<%110<builtinEquals>> with $43 $44<%132<Function>> ($45<%0<Builtins::equals:6>> is responsible)
  $47 = dup $46 by 1
  $48 = { body_44 capturing $1 }
  $49 = dup $48 by 1
  $50 = %63<Core:function:is0:11>
  $51 = %202<{ body_14 }>
  $52 = trace: start of call of $51<%202<{ body_14 }>> with $46 $48 $28<%199<{ body_9 }>> ($50<%63<Core:function:is0:11>> is responsible, code is at $50<%63<Core:function:is0:11>>)
  $53 = call $51<%202<{ body_14 }>> with $46 $48 $28<%199<{ body_9 }>> ($50<%63<Core:function:is0:11>> is responsible)
  $54 = dup $53 by 1
  $55 = trace: end of call
  $56 = trace: end of call
  $57 = %46<Core:controlFlow:if:19>
  $58 = %177<"`function.is0 then` was not satisfied">
  $59 = trace: start of call of $33<%194<{ body_6 }>> with $53 $58<%177<"`function.is0 then` was not satisfied">> $2 ($57<%46<Core:controlFlow:if:19>> is responsible, code is at $57<%46<Core:controlFlow:if:19>>)
  $60 = call $33<%194<{ body_6 }>> with $53 $58<%177<"`function.is0 then` was not satisfied">> $2 ($57<%46<Core:controlFlow:if:19>> is responsible)
  $61 = trace: end of call
  $62 = %47<Core:controlFlow:if:24>
  $63 = %193<{ body_1 }>
  $64 = trace: start of call of $51<%202<{ body_14 }>> with $0 $1 $63<%193<{ body_1 }>> ($62<%47<Core:controlFlow:if:24>> is responsible, code is at $62<%47<Core:controlFlow:if:24>>)
  $65 = %7<Builtins::ifElse:1>
  $66 = call $9<%110<builtinEquals>> with $10<%144<True>> $0 ($65<%7<Builtins::ifElse:1>> is responsible)
  $67 = call $13<%113<builtinIfElse>> with $66 $14<%197<{ body_7 }>> $15<%198<{ body_8 }>> ($65<%7<Builtins::ifElse:1>> is responsible)
  $68 = dup $67 by 1
  $69 = call $18<%122<builtinTagWithoutValue>> with $67 ($65<%7<Builtins::ifElse:1>> is responsible)
  $70 = call $9<%110<builtinEquals>> with $69 $20<%135<Match>> ($65<%7<Builtins::ifElse:1>> is responsible)
  $71 = { body_45 capturing $67 }
  $72 = { body_46 capturing $0 }
  $73 = call $13<%113<builtinIfElse>> with $70 $71 $72 ($65<%7<Builtins::ifElse:1>> is responsible)
  $74 = call $18<%122<builtinTagWithoutValue>> with $73 ($65<%7<Builtins::ifElse:1>> is responsible)
  $75 = call $9<%110<builtinEquals>> with $74 $20<%135<Match>> ($65<%7<Builtins::ifElse:1>> is responsible)
  $76 = call $13<%113<builtinIfElse>> with $75 $27<%192<{ body_0 }>> $28<%199<{ body_9 }>> ($65<%7<Builtins::ifElse:1>> is responsible)
  $77 = dup $76 by 1
  $78 = %15<Builtins::ifElse:5>
  $79 = %170<"`conditionIsBool` was not satisfied">
  $80 = trace: start of call of $33<%194<{ body_6 }>> with $76 $79<%170<"`conditionIsBool` was not satisfied">> $62<%47<Core:controlFlow:if:24>> ($78<%15<Builtins::ifElse:5>> is responsible, code is at $78<%15<Builtins::ifElse:5>>)
  $81 = call $33<%194<{ body_6 }>> with $76 $79<%170<"`conditionIsBool` was not satisfied">> $62<%47<Core:controlFlow:if:24>> ($78<%15<Builtins::ifElse:5>> is responsible)
  $82 = trace: end of call
  $83 = %28<Builtins::typeIs:19>
  $84 = call $41<%127<builtinTypeOf>> with $1 ($83<%28<Builtins::typeIs:19>> is responsible)
  $85 = %29<Builtins::typeIs:25>
  $86 = call $9<%110<builtinEquals>> with $84 $44<%132<Function>> ($85<%29<Builtins::typeIs:25>> is responsible)
  $87 = dup $86 by 3
  $88 = %8<Builtins::ifElse:11>
  $89 = %191<"`then | typeIs Function` was not satisfied">
  $90 = trace: start of call of $33<%194<{ body_6 }>> with $86 $89<%191<"`then | typeIs Function` was not satisfied">> $62<%47<Core:controlFlow:if:24>> ($88<%8<Builtins::ifElse:11>> is responsible, code is at $88<%8<Builtins::ifElse:11>>)
  $91 = call $33<%194<{ body_6 }>> with $86 $89<%191<"`then | typeIs Function` was not satisfied">> $62<%47<Core:controlFlow:if:24>> ($88<%8<Builtins::ifElse:11>> is responsible)
  $92 = trace: end of call
  $93 = %9<Builtins::ifElse:14>
  $94 = %201<{ body_11 }>
  $95 = trace: start of call of $94<%201<{ body_11 }>> with $1 ($93<%9<Builtins::ifElse:14>> is responsible, code is at $93<%9<Builtins::ifElse:14>>)
  $96 = %6<Builtins::getArgumentCount:5>
  $97 = %173<"`function | typeIs Function` was not satisfied">
  $98 = trace: start of call of $33<%194<{ body_6 }>> with $86 $97<%173<"`function | typeIs Function` was not satisfied">> $93<%9<Builtins::ifElse:14>> ($96<%6<Builtins::getArgumentCount:5>> is responsible, code is at $96<%6<Builtins::getArgumentCount:5>>)
  $99 = call $33<%194<{ body_6 }>> with $86 $97<%173<"`function | typeIs Function` was not satisfied">> $93<%9<Builtins::ifElse:14>> ($96<%6<Builtins::getArgumentCount:5>> is responsible)
  $100 = trace: end of call
  $101 = %112<builtinGetArgumentCount>
  $102 = %5<Builtins::getArgumentCount:11>
  $103 = call $101<%112<builtinGetArgumentCount>> with $1 ($102<%5<Builtins::getArgumentCount:11>> is responsible)
  $104 = trace: end of call
  $105 = %145<0>
  $106 = call $9<%110<builtinEquals>> with $103 $105<%145<0>> ($45<%0<Builtins::equals:6>> is responsible)
  $107 = dup $106 by 1
  $108 = %10<Builtins::ifElse:19>
  $109 = %190<"`then | getArgumentCount | equals 0` was not satisfied">
  $110 = trace: start of call of $33<%194<{ body_6 }>> with $106 $109<%190<"`then | getArgumentCount | equals 0` was not satisfied">> $62<%47<Core:controlFlow:if:24>> ($108<%10<Builtins::ifElse:19>> is responsible, code is at $108<%10<Builtins::ifElse:19>>)
  $111 = call $33<%194<{ body_6 }>> with $106 $109<%190<"`then | getArgumentCount | equals 0` was not satisfied">> $62<%47<Core:controlFlow:if:24>> ($108<%10<Builtins::ifElse:19>> is responsible)
  $112 = trace: end of call
  $113 = %14<Builtins::ifElse:41>
  $114 = trace: start of call of $13<%113<builtinIfElse>> with $0 $1 $63<%193<{ body_1 }>> ($113<%14<Builtins::ifElse:41>> is responsible, code is at $113<%14<Builtins::ifElse:41>>)
  $115 = call $13<%113<builtinIfElse>> with $0 $1 $63<%193<{ body_1 }>> ($113<%14<Builtins::ifElse:41>> is responsible)
  $116 = trace: end of call
  $117 = trace: end of call
  $118 = drop $36
  $119 = drop $60
  $120 = drop $81
  $121 = drop $91
  $122 = drop $99
  $123 = drop $111
  $124 = $115
body_48 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %162<"You called a tag that already has a value.">
  $2 = %59<Core:controlFlow:recursive:16:0:3>
  $3 = panicking because $1<%162<"You called a tag that already has a value.">> ($2<%59<Core:controlFlow:recursive:16:0:3>> is at fault)
body_49 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:doesTagHaveValue:else
  # Captured IDs: none
  $1 = %154<"Tags can only be created with one value.">
  $2 = %59<Core:controlFlow:recursive:16:0:3>
  $3 = panicking because $1<%154<"Tags can only be created with one value.">> ($2<%59<Core:controlFlow:recursive:16:0:3>> is at fault)
body_50 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:calleeIsFunction:else
  # Captured IDs: none
  $1 = %163<"You can only call tags or functions.">
  $2 = %59<Core:controlFlow:recursive:16:0:3>
  $3 = panicking because $1<%163<"You can only call tags or functions.">> ($2<%59<Core:controlFlow:recursive:16:0:3>> is at fault)
body_51 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %162<"You called a tag that already has a value.">
  $2 = %60<Core:controlFlow:recursive:16:5>
  $3 = panicking because $1<%162<"You called a tag that already has a value.">> ($2<%60<Core:controlFlow:recursive:16:5>> is at fault)
body_52 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:doesTagHaveValue:else
  # Captured IDs: none
  $1 = %154<"Tags can only be created with one value.">
  $2 = %60<Core:controlFlow:recursive:16:5>
  $3 = panicking because $1<%154<"Tags can only be created with one value.">> ($2<%60<Core:controlFlow:recursive:16:5>> is at fault)
body_53 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:calleeIsFunction:else
  # Captured IDs: none
  $1 = %163<"You can only call tags or functions.">
  $2 = %60<Core:controlFlow:recursive:16:5>
  $3 = panicking because $1<%163<"You can only call tags or functions.">> ($2<%60<Core:controlFlow:recursive:16:5>> is at fault)
body_54 (responsible $1) =
  # Original HIR IDs: Core:function:is2:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %68<Core:function:is2:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%68<Core:function:is2:9:3>> is responsible, code is at $3<%68<Core:function:is2:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%68<Core:function:is2:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%68<Core:function:is2:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %147<2>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%147<2>> ($25<%0<Builtins::equals:6>> is responsible)
body_55 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:calleeIsTag:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %120<builtinTagHasValue>
  $4 = %59<Core:controlFlow:recursive:16:0:3>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $6 = %113<builtinIfElse>
  $7 = %215<{ body_48 }>
  $8 = %216<{ body_49 }>
  $9 = call $6<%113<builtinIfElse>> with $5 $7<%215<{ body_48 }>> $8<%216<{ body_49 }>> ($4<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
body_56 (responsible $2) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 4
  $4 = dup $1 by 2
  $5 = %59<Core:controlFlow:recursive:16:0:3>
  $6 = trace: tail call of $0 with $0 $1 ($5<%59<Core:controlFlow:recursive:16:0:3>> is responsible, code is at $5<%59<Core:controlFlow:recursive:16:0:3>>)
  $7 = call $0 with $0 $1 ($5<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
body_57 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %59<Core:controlFlow:recursive:16:0:3>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $9 = %150<" arguments with 2 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%150<" arguments with 2 arguments.">> ($4<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $11 = panicking because $10 ($4<%59<Core:controlFlow:recursive:16:0:3>> is at fault)
body_58 (responsible $2) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = %112<builtinGetArgumentCount>
  $6 = %59<Core:controlFlow:recursive:16:0:3>
  $7 = call $5<%112<builtinGetArgumentCount>> with $0 ($6<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $8 = dup $7 by 1
  $9 = %110<builtinEquals>
  $10 = %147<2>
  $11 = call $9<%110<builtinEquals>> with $7 $10<%147<2>> ($6<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $12 = { body_56 capturing $0, $1 }
  $13 = { body_57 capturing $7 }
  $14 = %113<builtinIfElse>
  $15 = call $14<%113<builtinIfElse>> with $11 $12 $13 ($6<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
body_59 (responsible $3) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0:3:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = dup $2 by 1
  $7 = %110<builtinEquals>
  $8 = %132<Function>
  $9 = %59<Core:controlFlow:recursive:16:0:3>
  $10 = call $7<%110<builtinEquals>> with $2 $8<%132<Function>> ($9<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $11 = { body_58 capturing $0, $1 }
  $12 = %113<builtinIfElse>
  $13 = %217<{ body_50 }>
  $14 = call $12<%113<builtinIfElse>> with $10 $11 $13<%217<{ body_50 }>> ($9<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
body_60 $1 (+ responsible $2) =
  # Original HIR IDs: Core:controlFlow:recursive:16:0
  # Captured IDs: $0
  $3 = dup $0 by 3
  $4 = %127<builtinTypeOf>
  $5 = %59<Core:controlFlow:recursive:16:0:3>
  $6 = call $4<%127<builtinTypeOf>> with $0 ($5<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $7 = dup $6 by 1
  $8 = %110<builtinEquals>
  $9 = %142<Tag>
  $10 = call $8<%110<builtinEquals>> with $6 $9<%142<Tag>> ($5<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
  $11 = { body_55 capturing $0 }
  $12 = { body_59 capturing $0, $1, $6 }
  $13 = %113<builtinIfElse>
  $14 = call $13<%113<builtinIfElse>> with $10 $11 $12 ($5<%59<Core:controlFlow:recursive:16:0:3>> is responsible)
body_61 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:calleeIsTag:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %120<builtinTagHasValue>
  $4 = %60<Core:controlFlow:recursive:16:5>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $6 = %113<builtinIfElse>
  $7 = %218<{ body_51 }>
  $8 = %219<{ body_52 }>
  $9 = call $6<%113<builtinIfElse>> with $5 $7<%218<{ body_51 }>> $8<%219<{ body_52 }>> ($4<%60<Core:controlFlow:recursive:16:5>> is responsible)
body_62 (responsible $3) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 2
  $5 = dup $1 by 2
  $6 = dup $2 by 2
  $7 = %60<Core:controlFlow:recursive:16:5>
  $8 = trace: tail call of $0 with $2 $1 ($7<%60<Core:controlFlow:recursive:16:5>> is responsible, code is at $7<%60<Core:controlFlow:recursive:16:5>>)
  $9 = call $0 with $2 $1 ($7<%60<Core:controlFlow:recursive:16:5>> is responsible)
body_63 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %60<Core:controlFlow:recursive:16:5>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $9 = %150<" arguments with 2 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%150<" arguments with 2 arguments.">> ($4<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $11 = panicking because $10 ($4<%60<Core:controlFlow:recursive:16:5>> is at fault)
body_64 (responsible $3) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:calleeIsFunction:then
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 2
  $5 = dup $1 by 1
  $6 = dup $2 by 1
  $7 = %112<builtinGetArgumentCount>
  $8 = %60<Core:controlFlow:recursive:16:5>
  $9 = call $7<%112<builtinGetArgumentCount>> with $0 ($8<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $10 = dup $9 by 1
  $11 = %110<builtinEquals>
  $12 = %147<2>
  $13 = call $11<%110<builtinEquals>> with $9 $12<%147<2>> ($8<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $14 = { body_62 capturing $0, $1, $2 }
  $15 = { body_63 capturing $9 }
  $16 = %113<builtinIfElse>
  $17 = call $16<%113<builtinIfElse>> with $13 $14 $15 ($8<%60<Core:controlFlow:recursive:16:5>> is responsible)
body_65 (responsible $4) =
  # Original HIR IDs: Core:controlFlow:recursive:16:5:calleeIsTag:else
  # Captured IDs: $0, $1, $2, $3
  $5 = dup $0 by 1
  $6 = dup $1 by 1
  $7 = dup $2 by 1
  $8 = dup $3 by 1
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %60<Core:controlFlow:recursive:16:5>
  $12 = call $9<%110<builtinEquals>> with $3 $10<%132<Function>> ($11<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $13 = { body_64 capturing $0, $1, $2 }
  $14 = %113<builtinIfElse>
  $15 = %220<{ body_53 }>
  $16 = call $14<%113<builtinIfElse>> with $12 $13 $15<%220<{ body_53 }>> ($11<%60<Core:controlFlow:recursive:16:5>> is responsible)
body_66 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Core:controlFlow:recursive:16
  # Captured IDs: $0
  $4 = dup $0 by 3
  $5 = { body_60 capturing $1 }
  $6 = %127<builtinTypeOf>
  $7 = %60<Core:controlFlow:recursive:16:5>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $9 = dup $8 by 1
  $10 = %110<builtinEquals>
  $11 = %142<Tag>
  $12 = call $10<%110<builtinEquals>> with $8 $11<%142<Tag>> ($7<%60<Core:controlFlow:recursive:16:5>> is responsible)
  $13 = { body_61 capturing $0 }
  $14 = { body_65 capturing $0, $2, $5, $8 }
  $15 = %113<builtinIfElse>
  $16 = call $15<%113<builtinIfElse>> with $12 $13 $14 ($7<%60<Core:controlFlow:recursive:16:5>> is responsible)
body_67 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:controlFlow:recursive
  # Captured IDs: none
  $3 = dup $0 by 1
  $4 = dup $1 by 3
  $5 = dup $2 by 2
  $6 = %62<Core:controlFlow:recursive:7>
  $7 = %213<{ body_41 }>
  $8 = trace: start of call of $7<%213<{ body_41 }>> with $1 ($6<%62<Core:controlFlow:recursive:7>> is responsible, code is at $6<%62<Core:controlFlow:recursive:7>>)
  $9 = %127<builtinTypeOf>
  $10 = %30<Builtins::typeOf:5>
  $11 = call $9<%127<builtinTypeOf>> with $1 ($10<%30<Builtins::typeOf:5>> is responsible)
  $12 = %110<builtinEquals>
  $13 = %132<Function>
  $14 = %0<Builtins::equals:6>
  $15 = call $12<%110<builtinEquals>> with $11 $13<%132<Function>> ($14<%0<Builtins::equals:6>> is responsible)
  $16 = dup $15 by 1
  $17 = { body_54 capturing $1 }
  $18 = dup $17 by 1
  $19 = %67<Core:function:is2:11>
  $20 = %202<{ body_14 }>
  $21 = %199<{ body_9 }>
  $22 = trace: start of call of $20<%202<{ body_14 }>> with $15 $17 $21<%199<{ body_9 }>> ($19<%67<Core:function:is2:11>> is responsible, code is at $19<%67<Core:function:is2:11>>)
  $23 = call $20<%202<{ body_14 }>> with $15 $17 $21<%199<{ body_9 }>> ($19<%67<Core:function:is2:11>> is responsible)
  $24 = dup $23 by 1
  $25 = trace: end of call
  $26 = trace: end of call
  $27 = %58<Core:controlFlow:recursive:15>
  $28 = %194<{ body_6 }>
  $29 = %156<"The `body` should take the recursive function and the argument.">
  $30 = trace: start of call of $28<%194<{ body_6 }>> with $23 $29<%156<"The `body` should take the recursive function and the argument.">> $2 ($27<%58<Core:controlFlow:recursive:15>> is responsible, code is at $27<%58<Core:controlFlow:recursive:15>>)
  $31 = call $28<%194<{ body_6 }>> with $23 $29<%156<"The `body` should take the recursive function and the argument.">> $2 ($27<%58<Core:controlFlow:recursive:15>> is responsible)
  $32 = trace: end of call
  $33 = { body_66 capturing $1 }
  $34 = dup $33 by 3
  $35 = %61<Core:controlFlow:recursive:21>
  $36 = trace: tail call of $33 with $33 $0 ($35<%61<Core:controlFlow:recursive:21>> is responsible, code is at $35<%61<Core:controlFlow:recursive:21>>)
  $37 = drop $31
  $38 = call $33 with $33 $0 ($35<%61<Core:controlFlow:recursive:21>> is responsible)
body_68 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %162<"You called a tag that already has a value.">
  $2 = %52<Core:controlFlow:loop:12:37:2>
  $3 = panicking because $1<%162<"You called a tag that already has a value.">> ($2<%52<Core:controlFlow:loop:12:37:2>> is at fault)
body_69 (responsible $0) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:calleeIsFunction:else
  # Captured IDs: none
  $1 = %163<"You can only call tags or functions.">
  $2 = %52<Core:controlFlow:loop:12:37:2>
  $3 = panicking because $1<%163<"You can only call tags or functions.">> ($2<%52<Core:controlFlow:loop:12:37:2>> is at fault)
body_70 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %64<Core:function:is0:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%64<Core:function:is0:9:3>> is responsible, code is at $3<%64<Core:function:is0:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %145<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%145<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_71 (responsible $1) =
  # Original HIR IDs: Core:function:is0:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %64<Core:function:is0:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%64<Core:function:is0:9:3>> is responsible, code is at $3<%64<Core:function:is0:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%64<Core:function:is0:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %145<0>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%145<0>> ($25<%0<Builtins::equals:6>> is responsible)
body_72 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:doesTagHaveValue:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %121<builtinTagWithValue>
  $4 = %137<Nothing>
  $5 = %52<Core:controlFlow:loop:12:37:2>
  $6 = call $3<%121<builtinTagWithValue>> with $0 $4<%137<Nothing>> ($5<%52<Core:controlFlow:loop:12:37:2>> is responsible)
body_73 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:calleeIsTag:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %52<Core:controlFlow:loop:12:37:2>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $6 = { body_72 capturing $0 }
  $7 = %113<builtinIfElse>
  $8 = %222<{ body_68 }>
  $9 = call $7<%113<builtinIfElse>> with $5 $8<%222<{ body_68 }>> $6 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
body_74 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:hasCorrectNumberOfArguments:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %52<Core:controlFlow:loop:12:37:2>
  $4 = %137<Nothing>
  $5 = trace: tail call of $0 with $4<%137<Nothing>> ($3<%52<Core:controlFlow:loop:12:37:2>> is responsible, code is at $3<%52<Core:controlFlow:loop:12:37:2>>)
  $6 = call $0 with $4<%137<Nothing>> ($3<%52<Core:controlFlow:loop:12:37:2>> is responsible)
body_75 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %52<Core:controlFlow:loop:12:37:2>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $11 = panicking because $10 ($4<%52<Core:controlFlow:loop:12:37:2>> is at fault)
body_76 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:calleeIsFunction:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %112<builtinGetArgumentCount>
  $4 = %52<Core:controlFlow:loop:12:37:2>
  $5 = call $3<%112<builtinGetArgumentCount>> with $0 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $6 = dup $5 by 1
  $7 = %110<builtinEquals>
  $8 = %146<1>
  $9 = call $7<%110<builtinEquals>> with $5 $8<%146<1>> ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $10 = { body_74 capturing $0 }
  $11 = { body_75 capturing $5 }
  $12 = %113<builtinIfElse>
  $13 = call $12<%113<builtinIfElse>> with $9 $10 $11 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
body_77 (responsible $2) =
  # Original HIR IDs: Core:controlFlow:loop:12:37:2:calleeIsTag:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %110<builtinEquals>
  $6 = %132<Function>
  $7 = %52<Core:controlFlow:loop:12:37:2>
  $8 = call $5<%110<builtinEquals>> with $1 $6<%132<Function>> ($7<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $9 = { body_76 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %223<{ body_69 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%223<{ body_69 }>> ($7<%52<Core:controlFlow:loop:12:37:2>> is responsible)
body_78 (responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop:12:37
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %127<builtinTypeOf>
  $4 = %52<Core:controlFlow:loop:12:37:2>
  $5 = call $3<%127<builtinTypeOf>> with $0 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $6 = dup $5 by 1
  $7 = %110<builtinEquals>
  $8 = %142<Tag>
  $9 = call $7<%110<builtinEquals>> with $5 $8<%142<Tag>> ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
  $10 = { body_73 capturing $0 }
  $11 = { body_77 capturing $0, $5 }
  $12 = %113<builtinIfElse>
  $13 = call $12<%113<builtinIfElse>> with $9 $10 $11 ($4<%52<Core:controlFlow:loop:12:37:2>> is responsible)
body_79 $2 $3 (+ responsible $4) =
  # Original HIR IDs: Core:controlFlow:loop:12
  # Captured IDs: $0, $1
  $5 = dup $0 by 9
  $6 = dup $1 by 2
  $7 = %54<Core:controlFlow:loop:12:7>
  $8 = %208<{ body_22 }>
  $9 = trace: start of call of $8<%208<{ body_22 }>> with $0 ($7<%54<Core:controlFlow:loop:12:7>> is responsible, code is at $7<%54<Core:controlFlow:loop:12:7>>)
  $10 = %70<Core:function:run:2>
  $11 = %207<{ body_20 }>
  $12 = trace: start of call of $11<%207<{ body_20 }>> with $0 ($10<%70<Core:function:run:2>> is responsible, code is at $10<%70<Core:function:run:2>>)
  $13 = %127<builtinTypeOf>
  $14 = %30<Builtins::typeOf:5>
  $15 = call $13<%127<builtinTypeOf>> with $0 ($14<%30<Builtins::typeOf:5>> is responsible)
  $16 = %110<builtinEquals>
  $17 = %132<Function>
  $18 = %0<Builtins::equals:6>
  $19 = call $16<%110<builtinEquals>> with $15 $17<%132<Function>> ($18<%0<Builtins::equals:6>> is responsible)
  $20 = dup $19 by 1
  $21 = { body_71 capturing $0 }
  $22 = dup $21 by 1
  $23 = %63<Core:function:is0:11>
  $24 = %202<{ body_14 }>
  $25 = %199<{ body_9 }>
  $26 = trace: start of call of $24<%202<{ body_14 }>> with $19 $21 $25<%199<{ body_9 }>> ($23<%63<Core:function:is0:11>> is responsible, code is at $23<%63<Core:function:is0:11>>)
  $27 = call $24<%202<{ body_14 }>> with $19 $21 $25<%199<{ body_9 }>> ($23<%63<Core:function:is0:11>> is responsible)
  $28 = dup $27 by 1
  $29 = trace: end of call
  $30 = trace: end of call
  $31 = %71<Core:function:run:4>
  $32 = %194<{ body_6 }>
  $33 = %186<"`is0 body` was not satisfied">
  $34 = trace: start of call of $32<%194<{ body_6 }>> with $27 $33<%186<"`is0 body` was not satisfied">> $7<%54<Core:controlFlow:loop:12:7>> ($31<%71<Core:function:run:4>> is responsible, code is at $31<%71<Core:function:run:4>>)
  $35 = call $32<%194<{ body_6 }>> with $27 $33<%186<"`is0 body` was not satisfied">> $7<%54<Core:controlFlow:loop:12:7>> ($31<%71<Core:function:run:4>> is responsible)
  $36 = trace: end of call
  $37 = %69<Core:function:run:12>
  $38 = %200<{ body_10 }>
  $39 = trace: start of call of $38<%200<{ body_10 }>> with $0 ($37<%69<Core:function:run:12>> is responsible, code is at $37<%69<Core:function:run:12>>)
  $40 = %28<Builtins::typeIs:19>
  $41 = call $13<%127<builtinTypeOf>> with $0 ($40<%28<Builtins::typeIs:19>> is responsible)
  $42 = %29<Builtins::typeIs:25>
  $43 = call $16<%110<builtinEquals>> with $41 $17<%132<Function>> ($42<%29<Builtins::typeIs:25>> is responsible)
  $44 = dup $43 by 1
  $45 = %4<Builtins::functionRun:5>
  $46 = %173<"`function | typeIs Function` was not satisfied">
  $47 = trace: start of call of $32<%194<{ body_6 }>> with $43 $46<%173<"`function | typeIs Function` was not satisfied">> $37<%69<Core:function:run:12>> ($45<%4<Builtins::functionRun:5>> is responsible, code is at $45<%4<Builtins::functionRun:5>>)
  $48 = call $32<%194<{ body_6 }>> with $43 $46<%173<"`function | typeIs Function` was not satisfied">> $37<%69<Core:function:run:12>> ($45<%4<Builtins::functionRun:5>> is responsible)
  $49 = trace: end of call
  $50 = %112<builtinGetArgumentCount>
  $51 = %1<Builtins::functionRun:11>
  $52 = call $50<%112<builtinGetArgumentCount>> with $0 ($51<%1<Builtins::functionRun:11>> is responsible)
  $53 = %145<0>
  $54 = call $16<%110<builtinEquals>> with $52 $53<%145<0>> ($18<%0<Builtins::equals:6>> is responsible)
  $55 = dup $54 by 1
  $56 = %2<Builtins::functionRun:16>
  $57 = %174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">
  $58 = trace: start of call of $32<%194<{ body_6 }>> with $54 $57<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $37<%69<Core:function:run:12>> ($56<%2<Builtins::functionRun:16>> is responsible, code is at $56<%2<Builtins::functionRun:16>>)
  $59 = call $32<%194<{ body_6 }>> with $54 $57<%174<"`function | ✨.getArgumentCount | equals 0` was not satisfied">> $37<%69<Core:function:run:12>> ($56<%2<Builtins::functionRun:16>> is responsible)
  $60 = trace: end of call
  $61 = %3<Builtins::functionRun:22>
  $62 = %111<builtinFunctionRun>
  $63 = trace: start of call of $62<%111<builtinFunctionRun>> with $0 ($61<%3<Builtins::functionRun:22>> is responsible, code is at $61<%3<Builtins::functionRun:22>>)
  $64 = call $0 with no arguments ($61<%3<Builtins::functionRun:22>> is responsible)
  $65 = dup $64 by 1
  $66 = trace: end of call
  $67 = trace: end of call
  $68 = trace: end of call
  $69 = %129<Continue>
  $70 = call $16<%110<builtinEquals>> with $64 $69<%129<Continue>> ($18<%0<Builtins::equals:6>> is responsible)
  $71 = dup $70 by 3
  $72 = %128<Break>
  $73 = call $16<%110<builtinEquals>> with $64 $72<%128<Break>> ($18<%0<Builtins::equals:6>> is responsible)
  $74 = dup $73 by 1
  $75 = %50<Core:controlFlow:loop:12:23>
  $76 = %212<{ body_39 }>
  $77 = trace: start of call of $76<%212<{ body_39 }>> with $70 $73 ($75<%50<Core:controlFlow:loop:12:23>> is responsible, code is at $75<%50<Core:controlFlow:loop:12:23>>)
  $78 = call $76<%212<{ body_39 }>> with $70 $73 ($75<%50<Core:controlFlow:loop:12:23>> is responsible)
  $79 = dup $78 by 1
  $80 = trace: end of call
  $81 = %51<Core:controlFlow:loop:12:31>
  $82 = %155<"The `body` has to return `Continue` or `Break`.">
  $83 = trace: start of call of $32<%194<{ body_6 }>> with $78 $82<%155<"The `body` has to return `Continue` or `Break`.">> $1 ($81<%51<Core:controlFlow:loop:12:31>> is responsible, code is at $81<%51<Core:controlFlow:loop:12:31>>)
  $84 = call $32<%194<{ body_6 }>> with $78 $82<%155<"The `body` has to return `Continue` or `Break`.">> $1 ($81<%51<Core:controlFlow:loop:12:31>> is responsible)
  $85 = trace: end of call
  $86 = { body_78 capturing $2 }
  $87 = dup $86 by 1
  $88 = %53<Core:controlFlow:loop:12:38>
  $89 = %214<{ body_47 }>
  $90 = trace: tail call of $89<%214<{ body_47 }>> with $70 $86 ($88<%53<Core:controlFlow:loop:12:38>> is responsible, code is at $88<%53<Core:controlFlow:loop:12:38>>)
  $91 = drop $3
  $92 = drop $35
  $93 = drop $48
  $94 = drop $59
  $95 = drop $84
  $96 = call $89<%214<{ body_47 }>> with $70 $86 ($88<%53<Core:controlFlow:loop:12:38>> is responsible)
body_80 $0 (+ responsible $1) =
  # Original HIR IDs: Core:controlFlow:loop
  # Captured IDs: none
  $2 = dup $0 by 3
  $3 = dup $1 by 3
  $4 = %56<Core:controlFlow:loop:7>
  $5 = %207<{ body_20 }>
  $6 = trace: start of call of $5<%207<{ body_20 }>> with $0 ($4<%56<Core:controlFlow:loop:7>> is responsible, code is at $4<%56<Core:controlFlow:loop:7>>)
  $7 = %127<builtinTypeOf>
  $8 = %30<Builtins::typeOf:5>
  $9 = call $7<%127<builtinTypeOf>> with $0 ($8<%30<Builtins::typeOf:5>> is responsible)
  $10 = %110<builtinEquals>
  $11 = %132<Function>
  $12 = %0<Builtins::equals:6>
  $13 = call $10<%110<builtinEquals>> with $9 $11<%132<Function>> ($12<%0<Builtins::equals:6>> is responsible)
  $14 = dup $13 by 1
  $15 = { body_70 capturing $0 }
  $16 = dup $15 by 1
  $17 = %63<Core:function:is0:11>
  $18 = %202<{ body_14 }>
  $19 = %199<{ body_9 }>
  $20 = trace: start of call of $18<%202<{ body_14 }>> with $13 $15 $19<%199<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible, code is at $17<%63<Core:function:is0:11>>)
  $21 = call $18<%202<{ body_14 }>> with $13 $15 $19<%199<{ body_9 }>> ($17<%63<Core:function:is0:11>> is responsible)
  $22 = dup $21 by 1
  $23 = trace: end of call
  $24 = trace: end of call
  $25 = %57<Core:controlFlow:loop:9>
  $26 = %194<{ body_6 }>
  $27 = %176<"`function.is0 body` was not satisfied">
  $28 = trace: start of call of $26<%194<{ body_6 }>> with $21 $27<%176<"`function.is0 body` was not satisfied">> $1 ($25<%57<Core:controlFlow:loop:9>> is responsible, code is at $25<%57<Core:controlFlow:loop:9>>)
  $29 = call $26<%194<{ body_6 }>> with $21 $27<%176<"`function.is0 body` was not satisfied">> $1 ($25<%57<Core:controlFlow:loop:9>> is responsible)
  $30 = trace: end of call
  $31 = { body_79 capturing $0, $1 }
  $32 = dup $31 by 1
  $33 = %55<Core:controlFlow:loop:13>
  $34 = %221<{ body_67 }>
  $35 = %137<Nothing>
  $36 = trace: tail call of $34<%221<{ body_67 }>> with $35<%137<Nothing>> $31 ($33<%55<Core:controlFlow:loop:13>> is responsible, code is at $33<%55<Core:controlFlow:loop:13>>)
  $37 = drop $29
  $38 = call $34<%221<{ body_67 }>> with $35<%137<Nothing>> $31 ($33<%55<Core:controlFlow:loop:13>> is responsible)
body_81 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:int:compareTo
  # Captured IDs: none
  $3 = dup $0 by 3
  $4 = dup $1 by 3
  $5 = dup $2 by 4
  $6 = %127<builtinTypeOf>
  $7 = %30<Builtins::typeOf:5>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%30<Builtins::typeOf:5>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %133<Int>
  $11 = %0<Builtins::equals:6>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%133<Int>> ($11<%0<Builtins::equals:6>> is responsible)
  $13 = dup $12 by 1
  $14 = %73<Core:int:compareTo:4>
  $15 = %194<{ body_6 }>
  $16 = %184<"`is valueA` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%184<"`is valueA` was not satisfied">> $2 ($14<%73<Core:int:compareTo:4>> is responsible, code is at $14<%73<Core:int:compareTo:4>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%184<"`is valueA` was not satisfied">> $2 ($14<%73<Core:int:compareTo:4>> is responsible)
  $19 = trace: end of call
  $20 = call $6<%127<builtinTypeOf>> with $1 ($7<%30<Builtins::typeOf:5>> is responsible)
  $21 = call $9<%110<builtinEquals>> with $20 $10<%133<Int>> ($11<%0<Builtins::equals:6>> is responsible)
  $22 = dup $21 by 1
  $23 = %74<Core:int:compareTo:9>
  $24 = %185<"`is valueB` was not satisfied">
  $25 = trace: start of call of $15<%194<{ body_6 }>> with $21 $24<%185<"`is valueB` was not satisfied">> $2 ($23<%74<Core:int:compareTo:9>> is responsible, code is at $23<%74<Core:int:compareTo:9>>)
  $26 = call $15<%194<{ body_6 }>> with $21 $24<%185<"`is valueB` was not satisfied">> $2 ($23<%74<Core:int:compareTo:9>> is responsible)
  $27 = trace: end of call
  $28 = %72<Core:int:compareTo:18>
  $29 = %203<{ body_15 }>
  $30 = trace: tail call of $29<%203<{ body_15 }>> with $0 $1 ($28<%72<Core:int:compareTo:18>> is responsible, code is at $28<%72<Core:int:compareTo:18>>)
  $31 = %28<Builtins::typeIs:19>
  $32 = call $6<%127<builtinTypeOf>> with $0 ($31<%28<Builtins::typeIs:19>> is responsible)
  $33 = %29<Builtins::typeIs:25>
  $34 = call $9<%110<builtinEquals>> with $32 $10<%133<Int>> ($33<%29<Builtins::typeIs:25>> is responsible)
  $35 = dup $34 by 1
  $36 = %18<Builtins::intCompareTo:5>
  $37 = %166<"`a | typeIs Int` was not satisfied">
  $38 = trace: start of call of $15<%194<{ body_6 }>> with $34 $37<%166<"`a | typeIs Int` was not satisfied">> $28<%72<Core:int:compareTo:18>> ($36<%18<Builtins::intCompareTo:5>> is responsible, code is at $36<%18<Builtins::intCompareTo:5>>)
  $39 = call $15<%194<{ body_6 }>> with $34 $37<%166<"`a | typeIs Int` was not satisfied">> $28<%72<Core:int:compareTo:18>> ($36<%18<Builtins::intCompareTo:5>> is responsible)
  $40 = trace: end of call
  $41 = call $6<%127<builtinTypeOf>> with $1 ($31<%28<Builtins::typeIs:19>> is responsible)
  $42 = call $9<%110<builtinEquals>> with $41 $10<%133<Int>> ($33<%29<Builtins::typeIs:25>> is responsible)
  $43 = dup $42 by 1
  $44 = %16<Builtins::intCompareTo:11>
  $45 = %167<"`b | typeIs Int` was not satisfied">
  $46 = trace: start of call of $15<%194<{ body_6 }>> with $42 $45<%167<"`b | typeIs Int` was not satisfied">> $28<%72<Core:int:compareTo:18>> ($44<%16<Builtins::intCompareTo:11>> is responsible, code is at $44<%16<Builtins::intCompareTo:11>>)
  $47 = call $15<%194<{ body_6 }>> with $42 $45<%167<"`b | typeIs Int` was not satisfied">> $28<%72<Core:int:compareTo:18>> ($44<%16<Builtins::intCompareTo:11>> is responsible)
  $48 = trace: end of call
  $49 = %114<builtinIntCompareTo>
  $50 = %17<Builtins::intCompareTo:18>
  $51 = drop $18
  $52 = drop $26
  $53 = drop $39
  $54 = drop $47
  $55 = call $49<%114<builtinIntCompareTo>> with $0 $1 ($50<%17<Builtins::intCompareTo:18>> is responsible)
body_82 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Core:int:isLessThan
  # Captured IDs: none
  $3 = dup $0 by 4
  $4 = dup $1 by 4
  $5 = dup $2 by 4
  $6 = %127<builtinTypeOf>
  $7 = %30<Builtins::typeOf:5>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%30<Builtins::typeOf:5>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %133<Int>
  $11 = %0<Builtins::equals:6>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%133<Int>> ($11<%0<Builtins::equals:6>> is responsible)
  $13 = dup $12 by 3
  $14 = %76<Core:int:isLessThan:4>
  $15 = %194<{ body_6 }>
  $16 = %184<"`is valueA` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%184<"`is valueA` was not satisfied">> $2 ($14<%76<Core:int:isLessThan:4>> is responsible, code is at $14<%76<Core:int:isLessThan:4>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%184<"`is valueA` was not satisfied">> $2 ($14<%76<Core:int:isLessThan:4>> is responsible)
  $19 = trace: end of call
  $20 = call $6<%127<builtinTypeOf>> with $1 ($7<%30<Builtins::typeOf:5>> is responsible)
  $21 = call $9<%110<builtinEquals>> with $20 $10<%133<Int>> ($11<%0<Builtins::equals:6>> is responsible)
  $22 = dup $21 by 3
  $23 = %77<Core:int:isLessThan:9>
  $24 = %185<"`is valueB` was not satisfied">
  $25 = trace: start of call of $15<%194<{ body_6 }>> with $21 $24<%185<"`is valueB` was not satisfied">> $2 ($23<%77<Core:int:isLessThan:9>> is responsible, code is at $23<%77<Core:int:isLessThan:9>>)
  $26 = call $15<%194<{ body_6 }>> with $21 $24<%185<"`is valueB` was not satisfied">> $2 ($23<%77<Core:int:isLessThan:9>> is responsible)
  $27 = trace: end of call
  $28 = %75<Core:int:isLessThan:13>
  $29 = %225<{ body_81 }>
  $30 = trace: start of call of $29<%225<{ body_81 }>> with $0 $1 ($28<%75<Core:int:isLessThan:13>> is responsible, code is at $28<%75<Core:int:isLessThan:13>>)
  $31 = %73<Core:int:compareTo:4>
  $32 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%184<"`is valueA` was not satisfied">> $28<%75<Core:int:isLessThan:13>> ($31<%73<Core:int:compareTo:4>> is responsible, code is at $31<%73<Core:int:compareTo:4>>)
  $33 = call $15<%194<{ body_6 }>> with $12 $16<%184<"`is valueA` was not satisfied">> $28<%75<Core:int:isLessThan:13>> ($31<%73<Core:int:compareTo:4>> is responsible)
  $34 = trace: end of call
  $35 = %74<Core:int:compareTo:9>
  $36 = trace: start of call of $15<%194<{ body_6 }>> with $21 $24<%185<"`is valueB` was not satisfied">> $28<%75<Core:int:isLessThan:13>> ($35<%74<Core:int:compareTo:9>> is responsible, code is at $35<%74<Core:int:compareTo:9>>)
  $37 = call $15<%194<{ body_6 }>> with $21 $24<%185<"`is valueB` was not satisfied">> $28<%75<Core:int:isLessThan:13>> ($35<%74<Core:int:compareTo:9>> is responsible)
  $38 = trace: end of call
  $39 = %72<Core:int:compareTo:18>
  $40 = %203<{ body_15 }>
  $41 = trace: start of call of $40<%203<{ body_15 }>> with $0 $1 ($39<%72<Core:int:compareTo:18>> is responsible, code is at $39<%72<Core:int:compareTo:18>>)
  $42 = %28<Builtins::typeIs:19>
  $43 = call $6<%127<builtinTypeOf>> with $0 ($42<%28<Builtins::typeIs:19>> is responsible)
  $44 = %29<Builtins::typeIs:25>
  $45 = call $9<%110<builtinEquals>> with $43 $10<%133<Int>> ($44<%29<Builtins::typeIs:25>> is responsible)
  $46 = dup $45 by 1
  $47 = %18<Builtins::intCompareTo:5>
  $48 = %166<"`a | typeIs Int` was not satisfied">
  $49 = trace: start of call of $15<%194<{ body_6 }>> with $45 $48<%166<"`a | typeIs Int` was not satisfied">> $39<%72<Core:int:compareTo:18>> ($47<%18<Builtins::intCompareTo:5>> is responsible, code is at $47<%18<Builtins::intCompareTo:5>>)
  $50 = call $15<%194<{ body_6 }>> with $45 $48<%166<"`a | typeIs Int` was not satisfied">> $39<%72<Core:int:compareTo:18>> ($47<%18<Builtins::intCompareTo:5>> is responsible)
  $51 = trace: end of call
  $52 = call $6<%127<builtinTypeOf>> with $1 ($42<%28<Builtins::typeIs:19>> is responsible)
  $53 = call $9<%110<builtinEquals>> with $52 $10<%133<Int>> ($44<%29<Builtins::typeIs:25>> is responsible)
  $54 = dup $53 by 1
  $55 = %16<Builtins::intCompareTo:11>
  $56 = %167<"`b | typeIs Int` was not satisfied">
  $57 = trace: start of call of $15<%194<{ body_6 }>> with $53 $56<%167<"`b | typeIs Int` was not satisfied">> $39<%72<Core:int:compareTo:18>> ($55<%16<Builtins::intCompareTo:11>> is responsible, code is at $55<%16<Builtins::intCompareTo:11>>)
  $58 = call $15<%194<{ body_6 }>> with $53 $56<%167<"`b | typeIs Int` was not satisfied">> $39<%72<Core:int:compareTo:18>> ($55<%16<Builtins::intCompareTo:11>> is responsible)
  $59 = trace: end of call
  $60 = %114<builtinIntCompareTo>
  $61 = %17<Builtins::intCompareTo:18>
  $62 = call $60<%114<builtinIntCompareTo>> with $0 $1 ($61<%17<Builtins::intCompareTo:18>> is responsible)
  $63 = trace: end of call
  $64 = trace: end of call
  $65 = %134<Less>
  $66 = drop $18
  $67 = drop $26
  $68 = drop $33
  $69 = drop $37
  $70 = drop $50
  $71 = drop $58
  $72 = call $9<%110<builtinEquals>> with $62 $65<%134<Less>> ($11<%0<Builtins::equals:6>> is responsible)
body_83 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %66<Core:function:is1:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%66<Core:function:is1:9:3>> is responsible, code is at $3<%66<Core:function:is1:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%66<Core:function:is1:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%66<Core:function:is1:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %146<1>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%146<1>> ($25<%0<Builtins::equals:6>> is responsible)
body_84 $0 (+ responsible $1) =
  # Original HIR IDs: Core:function:is1
  # Captured IDs: none
  $2 = dup $0 by 1
  $3 = %127<builtinTypeOf>
  $4 = %30<Builtins::typeOf:5>
  $5 = call $3<%127<builtinTypeOf>> with $0 ($4<%30<Builtins::typeOf:5>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %132<Function>
  $8 = %0<Builtins::equals:6>
  $9 = call $6<%110<builtinEquals>> with $5 $7<%132<Function>> ($8<%0<Builtins::equals:6>> is responsible)
  $10 = dup $9 by 1
  $11 = { body_83 capturing $0 }
  $12 = dup $11 by 1
  $13 = %65<Core:function:is1:11>
  $14 = %202<{ body_14 }>
  $15 = %199<{ body_9 }>
  $16 = trace: tail call of $14<%202<{ body_14 }>> with $9 $11 $15<%199<{ body_9 }>> ($13<%65<Core:function:is1:11>> is responsible, code is at $13<%65<Core:function:is1:11>>)
  $17 = call $14<%202<{ body_14 }>> with $9 $11 $15<%199<{ body_9 }>> ($13<%65<Core:function:is1:11>> is responsible)
body_85 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %119<builtinTagGetValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = ($5,)
  $7 = Match $6
body_86 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %144<True>
  $8 = call $6<%110<builtinEquals>> with $7<%144<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_85 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_87 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %122<builtinTagWithoutValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%122<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %138<Ok>
  $8 = call $6<%110<builtinEquals>> with $7<%138<Ok>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_86 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_88 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_89 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %119<builtinTagGetValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = ($5,)
  $7 = Match $6
body_90 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %144<True>
  $8 = call $6<%110<builtinEquals>> with $7<%144<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_89 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_91 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %122<builtinTagWithoutValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%122<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %130<Error>
  $8 = call $6<%110<builtinEquals>> with $7<%130<Error>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_90 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_92 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %127<builtinTypeOf>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%127<builtinTypeOf>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %142<Tag>
  $8 = call $6<%110<builtinEquals>> with $7<%142<Tag>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_91 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_93 $0 (+ responsible $1) =
  # Original HIR IDs: Core:result:is
  # Captured IDs: none
  $2 = dup $0 by 2
  $3 = %127<builtinTypeOf>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%127<builtinTypeOf>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %142<Tag>
  $8 = call $6<%110<builtinEquals>> with $7<%142<Tag>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_87 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
  $13 = dup $12 by 1
  $14 = %122<builtinTagWithoutValue>
  $15 = call $14<%122<builtinTagWithoutValue>> with $12 ($4<%78<Core:result:is:1>> is responsible)
  $16 = %135<Match>
  $17 = call $6<%110<builtinEquals>> with $15 $16<%135<Match>> ($4<%78<Core:result:is:1>> is responsible)
  $18 = { body_88 capturing $12 }
  $19 = { body_92 capturing $0 }
  $20 = call $10<%113<builtinIfElse>> with $17 $18 $19 ($4<%78<Core:result:is:1>> is responsible)
  $21 = call $14<%122<builtinTagWithoutValue>> with $20 ($4<%78<Core:result:is:1>> is responsible)
  $22 = call $6<%110<builtinEquals>> with $21 $16<%135<Match>> ($4<%78<Core:result:is:1>> is responsible)
  $23 = %192<{ body_0 }>
  $24 = %199<{ body_9 }>
  $25 = call $10<%113<builtinIfElse>> with $22 $23<%192<{ body_0 }>> $24<%199<{ body_9 }>> ($4<%78<Core:result:is:1>> is responsible)
body_94 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %162<"You called a tag that already has a value.">
  $2 = %85<Core:result:mapOrElse:26:2>
  $3 = panicking because $1<%162<"You called a tag that already has a value.">> ($2<%85<Core:result:mapOrElse:26:2>> is at fault)
body_95 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsFunction:else
  # Captured IDs: none
  $1 = %163<"You can only call tags or functions.">
  $2 = %85<Core:result:mapOrElse:26:2>
  $3 = panicking because $1<%163<"You can only call tags or functions.">> ($2<%85<Core:result:mapOrElse:26:2>> is at fault)
body_96 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %162<"You called a tag that already has a value.">
  $2 = %86<Core:result:mapOrElse:26:5>
  $3 = panicking because $1<%162<"You called a tag that already has a value.">> ($2<%86<Core:result:mapOrElse:26:5>> is at fault)
body_97 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsFunction:else
  # Captured IDs: none
  $1 = %163<"You can only call tags or functions.">
  $2 = %86<Core:result:mapOrElse:26:5>
  $3 = panicking because $1<%163<"You can only call tags or functions.">> ($2<%86<Core:result:mapOrElse:26:5>> is at fault)
body_98 (responsible $0) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-1:didNotMatch
  # Captured IDs: none
  $1 = %153<"No case matched the given expression.">
  $2 = %84<Core:result:mapOrElse:26>
  $3 = panicking because $1<%153<"No case matched the given expression.">> ($2<%84<Core:result:mapOrElse:26>> is at fault)
body_99 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %119<builtinTagGetValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = ($5,)
  $7 = Match $6
body_100 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %144<True>
  $8 = call $6<%110<builtinEquals>> with $7<%144<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_99 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_101 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %122<builtinTagWithoutValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%122<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %138<Ok>
  $8 = call $6<%110<builtinEquals>> with $7<%138<Ok>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_100 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_102 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = $0
body_103 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %119<builtinTagGetValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%119<builtinTagGetValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = ($5,)
  $7 = Match $6
body_104 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %144<True>
  $8 = call $6<%110<builtinEquals>> with $7<%144<True>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_103 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_105 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %122<builtinTagWithoutValue>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%122<builtinTagWithoutValue>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %130<Error>
  $8 = call $6<%110<builtinEquals>> with $7<%130<Error>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_104 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_106 (responsible $1) =
  # Original HIR IDs: Core:result:is:1:isMatch:else
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %127<builtinTypeOf>
  $4 = %78<Core:result:is:1>
  $5 = call $3<%127<builtinTypeOf>> with $0 ($4<%78<Core:result:is:1>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %142<Tag>
  $8 = call $6<%110<builtinEquals>> with $7<%142<Tag>> $5 ($4<%78<Core:result:is:1>> is responsible)
  $9 = { body_105 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%78<Core:result:is:1>> is responsible)
body_107 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %66<Core:function:is1:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%66<Core:function:is1:9:3>> is responsible, code is at $3<%66<Core:function:is1:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%66<Core:function:is1:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%66<Core:function:is1:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %146<1>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%146<1>> ($25<%0<Builtins::equals:6>> is responsible)
body_108 (responsible $1) =
  # Original HIR IDs: Core:function:is1:9
  # Captured IDs: $0
  $2 = dup $0 by 3
  $3 = %66<Core:function:is1:9:3>
  $4 = %201<{ body_11 }>
  $5 = trace: start of call of $4<%201<{ body_11 }>> with $0 ($3<%66<Core:function:is1:9:3>> is responsible, code is at $3<%66<Core:function:is1:9:3>>)
  $6 = %127<builtinTypeOf>
  $7 = %28<Builtins::typeIs:19>
  $8 = call $6<%127<builtinTypeOf>> with $0 ($7<%28<Builtins::typeIs:19>> is responsible)
  $9 = %110<builtinEquals>
  $10 = %132<Function>
  $11 = %29<Builtins::typeIs:25>
  $12 = call $9<%110<builtinEquals>> with $8 $10<%132<Function>> ($11<%29<Builtins::typeIs:25>> is responsible)
  $13 = dup $12 by 1
  $14 = %6<Builtins::getArgumentCount:5>
  $15 = %194<{ body_6 }>
  $16 = %173<"`function | typeIs Function` was not satisfied">
  $17 = trace: start of call of $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%66<Core:function:is1:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible, code is at $14<%6<Builtins::getArgumentCount:5>>)
  $18 = call $15<%194<{ body_6 }>> with $12 $16<%173<"`function | typeIs Function` was not satisfied">> $3<%66<Core:function:is1:9:3>> ($14<%6<Builtins::getArgumentCount:5>> is responsible)
  $19 = trace: end of call
  $20 = %112<builtinGetArgumentCount>
  $21 = %5<Builtins::getArgumentCount:11>
  $22 = call $20<%112<builtinGetArgumentCount>> with $0 ($21<%5<Builtins::getArgumentCount:11>> is responsible)
  $23 = trace: end of call
  $24 = %146<1>
  $25 = %0<Builtins::equals:6>
  $26 = drop $18
  $27 = call $9<%110<builtinEquals>> with $22 $24<%146<1>> ($25<%0<Builtins::equals:6>> is responsible)
body_109 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %119<builtinTagGetValue>
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $3<%119<builtinTagGetValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = ($5,)
  $7 = Match $6
body_110 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %144<True>
  $8 = call $6<%110<builtinEquals>> with $7<%144<True>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $9 = { body_109 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
body_111 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %122<builtinTagWithoutValue>
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $3<%122<builtinTagWithoutValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %138<Ok>
  $8 = call $6<%110<builtinEquals>> with $7<%138<Ok>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $9 = { body_110 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
body_112 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %121<builtinTagWithValue>
  $6 = %85<Core:result:mapOrElse:26:2>
  $7 = call $5<%121<builtinTagWithValue>> with $0 $1 ($6<%85<Core:result:mapOrElse:26:2>> is responsible)
body_113 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = %120<builtinTagHasValue>
  $6 = %85<Core:result:mapOrElse:26:2>
  $7 = call $5<%120<builtinTagHasValue>> with $0 ($6<%85<Core:result:mapOrElse:26:2>> is responsible)
  $8 = { body_112 capturing $0, $1 }
  $9 = %113<builtinIfElse>
  $10 = %229<{ body_94 }>
  $11 = call $9<%113<builtinIfElse>> with $7 $10<%229<{ body_94 }>> $8 ($6<%85<Core:result:mapOrElse:26:2>> is responsible)
body_114 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 2
  $5 = %85<Core:result:mapOrElse:26:2>
  $6 = trace: tail call of $0 with $1 ($5<%85<Core:result:mapOrElse:26:2>> is responsible, code is at $5<%85<Core:result:mapOrElse:26:2>>)
  $7 = call $0 with $1 ($5<%85<Core:result:mapOrElse:26:2>> is responsible)
body_115 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %85<Core:result:mapOrElse:26:2>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%85<Core:result:mapOrElse:26:2>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%85<Core:result:mapOrElse:26:2>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%85<Core:result:mapOrElse:26:2>> is responsible)
  $11 = panicking because $10 ($4<%85<Core:result:mapOrElse:26:2>> is at fault)
body_116 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = %112<builtinGetArgumentCount>
  $6 = %85<Core:result:mapOrElse:26:2>
  $7 = call $5<%112<builtinGetArgumentCount>> with $0 ($6<%85<Core:result:mapOrElse:26:2>> is responsible)
  $8 = dup $7 by 1
  $9 = %110<builtinEquals>
  $10 = %146<1>
  $11 = call $9<%110<builtinEquals>> with $7 $10<%146<1>> ($6<%85<Core:result:mapOrElse:26:2>> is responsible)
  $12 = { body_114 capturing $0, $1 }
  $13 = { body_115 capturing $7 }
  $14 = %113<builtinIfElse>
  $15 = call $14<%113<builtinIfElse>> with $11 $12 $13 ($6<%85<Core:result:mapOrElse:26:2>> is responsible)
body_117 (responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse:26:2:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = dup $2 by 1
  $7 = %110<builtinEquals>
  $8 = %132<Function>
  $9 = %85<Core:result:mapOrElse:26:2>
  $10 = call $7<%110<builtinEquals>> with $2 $8<%132<Function>> ($9<%85<Core:result:mapOrElse:26:2>> is responsible)
  $11 = { body_116 capturing $0, $1 }
  $12 = %113<builtinIfElse>
  $13 = %230<{ body_95 }>
  $14 = call $12<%113<builtinIfElse>> with $10 $11 $13<%230<{ body_95 }>> ($9<%85<Core:result:mapOrElse:26:2>> is responsible)
body_118 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-0:matched
  # Captured IDs: $0, $1
  $3 = dup $0 by 3
  $4 = dup $1 by 1
  $5 = %119<builtinTagGetValue>
  $6 = %87<Core:result:mapOrElse:26:value>
  $7 = call $5<%119<builtinTagGetValue>> with $1 ($6<%87<Core:result:mapOrElse:26:value>> is responsible)
  $8 = %116<builtinListGet>
  $9 = %145<0>
  $10 = call $8<%116<builtinListGet>> with $7 $9<%145<0>> ($6<%87<Core:result:mapOrElse:26:value>> is responsible)
  $11 = dup $10 by 1
  $12 = %127<builtinTypeOf>
  $13 = %85<Core:result:mapOrElse:26:2>
  $14 = call $12<%127<builtinTypeOf>> with $0 ($13<%85<Core:result:mapOrElse:26:2>> is responsible)
  $15 = dup $14 by 1
  $16 = %110<builtinEquals>
  $17 = %142<Tag>
  $18 = call $16<%110<builtinEquals>> with $14 $17<%142<Tag>> ($13<%85<Core:result:mapOrElse:26:2>> is responsible)
  $19 = { body_113 capturing $0, $10 }
  $20 = { body_117 capturing $0, $10, $14 }
  $21 = %113<builtinIfElse>
  $22 = call $21<%113<builtinIfElse>> with $18 $19 $20 ($13<%85<Core:result:mapOrElse:26:2>> is responsible)
body_119 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %119<builtinTagGetValue>
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $3<%119<builtinTagGetValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = ($5,)
  $7 = Match $6
body_120 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %144<True>
  $8 = call $6<%110<builtinEquals>> with $7<%144<True>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $9 = { body_119 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
body_121 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:equals:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %122<builtinTagWithoutValue>
  $4 = %84<Core:result:mapOrElse:26>
  $5 = call $3<%122<builtinTagWithoutValue>> with $0 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $6 = %110<builtinEquals>
  $7 = %130<Error>
  $8 = call $6<%110<builtinEquals>> with $7<%130<Error>> $5 ($4<%84<Core:result:mapOrElse:26>> is responsible)
  $9 = { body_120 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %198<{ body_8 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%198<{ body_8 }>> ($4<%84<Core:result:mapOrElse:26>> is responsible)
body_122 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %121<builtinTagWithValue>
  $6 = %86<Core:result:mapOrElse:26:5>
  $7 = call $5<%121<builtinTagWithValue>> with $0 $1 ($6<%86<Core:result:mapOrElse:26:5>> is responsible)
body_123 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = %120<builtinTagHasValue>
  $6 = %86<Core:result:mapOrElse:26:5>
  $7 = call $5<%120<builtinTagHasValue>> with $0 ($6<%86<Core:result:mapOrElse:26:5>> is responsible)
  $8 = { body_122 capturing $0, $1 }
  $9 = %113<builtinIfElse>
  $10 = %231<{ body_96 }>
  $11 = call $9<%113<builtinIfElse>> with $7 $10<%231<{ body_96 }>> $8 ($6<%86<Core:result:mapOrElse:26:5>> is responsible)
body_124 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 2
  $5 = %86<Core:result:mapOrElse:26:5>
  $6 = trace: tail call of $0 with $1 ($5<%86<Core:result:mapOrElse:26:5>> is responsible, code is at $5<%86<Core:result:mapOrElse:26:5>>)
  $7 = call $0 with $1 ($5<%86<Core:result:mapOrElse:26:5>> is responsible)
body_125 (responsible $1) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %86<Core:result:mapOrElse:26:5>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%86<Core:result:mapOrElse:26:5>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%86<Core:result:mapOrElse:26:5>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%86<Core:result:mapOrElse:26:5>> is responsible)
  $11 = panicking because $10 ($4<%86<Core:result:mapOrElse:26:5>> is at fault)
body_126 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = %112<builtinGetArgumentCount>
  $6 = %86<Core:result:mapOrElse:26:5>
  $7 = call $5<%112<builtinGetArgumentCount>> with $0 ($6<%86<Core:result:mapOrElse:26:5>> is responsible)
  $8 = dup $7 by 1
  $9 = %110<builtinEquals>
  $10 = %146<1>
  $11 = call $9<%110<builtinEquals>> with $7 $10<%146<1>> ($6<%86<Core:result:mapOrElse:26:5>> is responsible)
  $12 = { body_124 capturing $0, $1 }
  $13 = { body_125 capturing $7 }
  $14 = %113<builtinIfElse>
  $15 = call $14<%113<builtinIfElse>> with $11 $12 $13 ($6<%86<Core:result:mapOrElse:26:5>> is responsible)
body_127 (responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse:26:5:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = dup $2 by 1
  $7 = %110<builtinEquals>
  $8 = %132<Function>
  $9 = %86<Core:result:mapOrElse:26:5>
  $10 = call $7<%110<builtinEquals>> with $2 $8<%132<Function>> ($9<%86<Core:result:mapOrElse:26:5>> is responsible)
  $11 = { body_126 capturing $0, $1 }
  $12 = %113<builtinIfElse>
  $13 = %232<{ body_97 }>
  $14 = call $12<%113<builtinIfElse>> with $10 $11 $13<%232<{ body_97 }>> ($9<%86<Core:result:mapOrElse:26:5>> is responsible)
body_128 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-1:matched
  # Captured IDs: $0, $1
  $3 = dup $0 by 3
  $4 = dup $1 by 1
  $5 = %119<builtinTagGetValue>
  $6 = %88<Core:result:mapOrElse:26:value#1>
  $7 = call $5<%119<builtinTagGetValue>> with $1 ($6<%88<Core:result:mapOrElse:26:value#1>> is responsible)
  $8 = %116<builtinListGet>
  $9 = %145<0>
  $10 = call $8<%116<builtinListGet>> with $7 $9<%145<0>> ($6<%88<Core:result:mapOrElse:26:value#1>> is responsible)
  $11 = dup $10 by 1
  $12 = %127<builtinTypeOf>
  $13 = %86<Core:result:mapOrElse:26:5>
  $14 = call $12<%127<builtinTypeOf>> with $0 ($13<%86<Core:result:mapOrElse:26:5>> is responsible)
  $15 = dup $14 by 1
  $16 = %110<builtinEquals>
  $17 = %142<Tag>
  $18 = call $16<%110<builtinEquals>> with $14 $17<%142<Tag>> ($13<%86<Core:result:mapOrElse:26:5>> is responsible)
  $19 = { body_123 capturing $0, $10 }
  $20 = { body_127 capturing $0, $10, $14 }
  $21 = %113<builtinIfElse>
  $22 = call $21<%113<builtinIfElse>> with $18 $19 $20 ($13<%86<Core:result:mapOrElse:26:5>> is responsible)
body_129 (responsible $2) =
  # Original HIR IDs: Core:result:mapOrElse:26:case-0:didNotMatch
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 1
  $5 = %127<builtinTypeOf>
  $6 = %84<Core:result:mapOrElse:26>
  $7 = call $5<%127<builtinTypeOf>> with $0 ($6<%84<Core:result:mapOrElse:26>> is responsible)
  $8 = %110<builtinEquals>
  $9 = %142<Tag>
  $10 = call $8<%110<builtinEquals>> with $9<%142<Tag>> $7 ($6<%84<Core:result:mapOrElse:26>> is responsible)
  $11 = { body_121 capturing $0 }
  $12 = %113<builtinIfElse>
  $13 = %198<{ body_8 }>
  $14 = call $12<%113<builtinIfElse>> with $10 $11 $13<%198<{ body_8 }>> ($6<%84<Core:result:mapOrElse:26>> is responsible)
  $15 = dup $14 by 1
  $16 = %122<builtinTagWithoutValue>
  $17 = call $16<%122<builtinTagWithoutValue>> with $14 ($6<%84<Core:result:mapOrElse:26>> is responsible)
  $18 = %135<Match>
  $19 = call $8<%110<builtinEquals>> with $17 $18<%135<Match>> ($6<%84<Core:result:mapOrElse:26>> is responsible)
  $20 = { body_128 capturing $1, $14 }
  $21 = %233<{ body_98 }>
  $22 = call $12<%113<builtinIfElse>> with $19 $20 $21<%233<{ body_98 }>> ($6<%84<Core:result:mapOrElse:26>> is responsible)
body_130 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: Core:result:mapOrElse
  # Captured IDs: none
  $4 = dup $0 by 6
  $5 = dup $1 by 3
  $6 = dup $2 by 3
  $7 = dup $3 by 6
  $8 = %81<Core:result:mapOrElse:2>
  $9 = %228<{ body_93 }>
  $10 = trace: start of call of $9<%228<{ body_93 }>> with $0 ($8<%81<Core:result:mapOrElse:2>> is responsible, code is at $8<%81<Core:result:mapOrElse:2>>)
  $11 = %127<builtinTypeOf>
  $12 = %78<Core:result:is:1>
  $13 = call $11<%127<builtinTypeOf>> with $0 ($12<%78<Core:result:is:1>> is responsible)
  $14 = %110<builtinEquals>
  $15 = %142<Tag>
  $16 = call $14<%110<builtinEquals>> with $15<%142<Tag>> $13 ($12<%78<Core:result:is:1>> is responsible)
  $17 = { body_101 capturing $0 }
  $18 = %113<builtinIfElse>
  $19 = %198<{ body_8 }>
  $20 = call $18<%113<builtinIfElse>> with $16 $17 $19<%198<{ body_8 }>> ($12<%78<Core:result:is:1>> is responsible)
  $21 = dup $20 by 1
  $22 = %122<builtinTagWithoutValue>
  $23 = call $22<%122<builtinTagWithoutValue>> with $20 ($12<%78<Core:result:is:1>> is responsible)
  $24 = %135<Match>
  $25 = call $14<%110<builtinEquals>> with $23 $24<%135<Match>> ($12<%78<Core:result:is:1>> is responsible)
  $26 = { body_102 capturing $20 }
  $27 = { body_106 capturing $0 }
  $28 = call $18<%113<builtinIfElse>> with $25 $26 $27 ($12<%78<Core:result:is:1>> is responsible)
  $29 = call $22<%122<builtinTagWithoutValue>> with $28 ($12<%78<Core:result:is:1>> is responsible)
  $30 = call $14<%110<builtinEquals>> with $29 $24<%135<Match>> ($12<%78<Core:result:is:1>> is responsible)
  $31 = %192<{ body_0 }>
  $32 = %199<{ body_9 }>
  $33 = call $18<%113<builtinIfElse>> with $30 $31<%192<{ body_0 }>> $32<%199<{ body_9 }>> ($12<%78<Core:result:is:1>> is responsible)
  $34 = dup $33 by 1
  $35 = trace: end of call
  $36 = %89<Core:result:mapOrElse:4>
  $37 = %194<{ body_6 }>
  $38 = %182<"`is result` was not satisfied">
  $39 = trace: start of call of $37<%194<{ body_6 }>> with $33 $38<%182<"`is result` was not satisfied">> $3 ($36<%89<Core:result:mapOrElse:4>> is responsible, code is at $36<%89<Core:result:mapOrElse:4>>)
  $40 = call $37<%194<{ body_6 }>> with $33 $38<%182<"`is result` was not satisfied">> $3 ($36<%89<Core:result:mapOrElse:4>> is responsible)
  $41 = trace: end of call
  $42 = %79<Core:result:mapOrElse:12>
  $43 = %227<{ body_84 }>
  $44 = trace: start of call of $43<%227<{ body_84 }>> with $1 ($42<%79<Core:result:mapOrElse:12>> is responsible, code is at $42<%79<Core:result:mapOrElse:12>>)
  $45 = %30<Builtins::typeOf:5>
  $46 = call $11<%127<builtinTypeOf>> with $1 ($45<%30<Builtins::typeOf:5>> is responsible)
  $47 = %132<Function>
  $48 = %0<Builtins::equals:6>
  $49 = call $14<%110<builtinEquals>> with $46 $47<%132<Function>> ($48<%0<Builtins::equals:6>> is responsible)
  $50 = dup $49 by 1
  $51 = { body_107 capturing $1 }
  $52 = dup $51 by 1
  $53 = %65<Core:function:is1:11>
  $54 = %202<{ body_14 }>
  $55 = trace: start of call of $54<%202<{ body_14 }>> with $49 $51 $32<%199<{ body_9 }>> ($53<%65<Core:function:is1:11>> is responsible, code is at $53<%65<Core:function:is1:11>>)
  $56 = call $54<%202<{ body_14 }>> with $49 $51 $32<%199<{ body_9 }>> ($53<%65<Core:function:is1:11>> is responsible)
  $57 = dup $56 by 1
  $58 = trace: end of call
  $59 = trace: end of call
  $60 = %80<Core:result:mapOrElse:14>
  $61 = %179<"`function.is1 okMapper` was not satisfied">
  $62 = trace: start of call of $37<%194<{ body_6 }>> with $56 $61<%179<"`function.is1 okMapper` was not satisfied">> $3 ($60<%80<Core:result:mapOrElse:14>> is responsible, code is at $60<%80<Core:result:mapOrElse:14>>)
  $63 = call $37<%194<{ body_6 }>> with $56 $61<%179<"`function.is1 okMapper` was not satisfied">> $3 ($60<%80<Core:result:mapOrElse:14>> is responsible)
  $64 = trace: end of call
  $65 = %82<Core:result:mapOrElse:22>
  $66 = trace: start of call of $43<%227<{ body_84 }>> with $2 ($65<%82<Core:result:mapOrElse:22>> is responsible, code is at $65<%82<Core:result:mapOrElse:22>>)
  $67 = call $11<%127<builtinTypeOf>> with $2 ($45<%30<Builtins::typeOf:5>> is responsible)
  $68 = call $14<%110<builtinEquals>> with $67 $47<%132<Function>> ($48<%0<Builtins::equals:6>> is responsible)
  $69 = dup $68 by 1
  $70 = { body_108 capturing $2 }
  $71 = dup $70 by 1
  $72 = trace: start of call of $54<%202<{ body_14 }>> with $68 $70 $32<%199<{ body_9 }>> ($53<%65<Core:function:is1:11>> is responsible, code is at $53<%65<Core:function:is1:11>>)
  $73 = call $54<%202<{ body_14 }>> with $68 $70 $32<%199<{ body_9 }>> ($53<%65<Core:function:is1:11>> is responsible)
  $74 = dup $73 by 1
  $75 = trace: end of call
  $76 = trace: end of call
  $77 = %83<Core:result:mapOrElse:24>
  $78 = %178<"`function.is1 errorMapper` was not satisfied">
  $79 = trace: start of call of $37<%194<{ body_6 }>> with $73 $78<%178<"`function.is1 errorMapper` was not satisfied">> $3 ($77<%83<Core:result:mapOrElse:24>> is responsible, code is at $77<%83<Core:result:mapOrElse:24>>)
  $80 = call $37<%194<{ body_6 }>> with $73 $78<%178<"`function.is1 errorMapper` was not satisfied">> $3 ($77<%83<Core:result:mapOrElse:24>> is responsible)
  $81 = trace: end of call
  $82 = %84<Core:result:mapOrElse:26>
  $83 = call $11<%127<builtinTypeOf>> with $0 ($82<%84<Core:result:mapOrElse:26>> is responsible)
  $84 = call $14<%110<builtinEquals>> with $15<%142<Tag>> $83 ($82<%84<Core:result:mapOrElse:26>> is responsible)
  $85 = { body_111 capturing $0 }
  $86 = call $18<%113<builtinIfElse>> with $84 $85 $19<%198<{ body_8 }>> ($82<%84<Core:result:mapOrElse:26>> is responsible)
  $87 = dup $86 by 1
  $88 = call $22<%122<builtinTagWithoutValue>> with $86 ($82<%84<Core:result:mapOrElse:26>> is responsible)
  $89 = call $14<%110<builtinEquals>> with $88 $24<%135<Match>> ($82<%84<Core:result:mapOrElse:26>> is responsible)
  $90 = { body_118 capturing $1, $86 }
  $91 = { body_129 capturing $0, $2 }
  $92 = drop $40
  $93 = drop $63
  $94 = drop $80
  $95 = call $18<%113<builtinIfElse>> with $89 $90 $91 ($82<%84<Core:result:mapOrElse:26>> is responsible)
body_131 $0 (+ responsible $1) =
  # Original HIR IDs: Core:text:trim
  # Captured IDs: none
  $2 = dup $0 by 3
  $3 = dup $1 by 2
  $4 = %127<builtinTypeOf>
  $5 = %30<Builtins::typeOf:5>
  $6 = call $4<%127<builtinTypeOf>> with $0 ($5<%30<Builtins::typeOf:5>> is responsible)
  $7 = %110<builtinEquals>
  $8 = %143<Text>
  $9 = %0<Builtins::equals:6>
  $10 = call $7<%110<builtinEquals>> with $6 $8<%143<Text>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $10 by 1
  $12 = %90<Core:text:trim:4>
  $13 = %194<{ body_6 }>
  $14 = %183<"`is text` was not satisfied">
  $15 = trace: start of call of $13<%194<{ body_6 }>> with $10 $14<%183<"`is text` was not satisfied">> $1 ($12<%90<Core:text:trim:4>> is responsible, code is at $12<%90<Core:text:trim:4>>)
  $16 = call $13<%194<{ body_6 }>> with $10 $14<%183<"`is text` was not satisfied">> $1 ($12<%90<Core:text:trim:4>> is responsible)
  $17 = trace: end of call
  $18 = %91<Core:text:trim:7>
  $19 = %206<{ body_18 }>
  $20 = trace: start of call of $19<%206<{ body_18 }>> with $0 ($18<%91<Core:text:trim:7>> is responsible, code is at $18<%91<Core:text:trim:7>>)
  $21 = %28<Builtins::typeIs:19>
  $22 = call $4<%127<builtinTypeOf>> with $0 ($21<%28<Builtins::typeIs:19>> is responsible)
  $23 = %29<Builtins::typeIs:25>
  $24 = call $7<%110<builtinEquals>> with $22 $8<%143<Text>> ($23<%29<Builtins::typeIs:25>> is responsible)
  $25 = dup $24 by 1
  $26 = %27<Builtins::textTrimStart:5>
  $27 = %189<"`text | typeIs Text` was not satisfied">
  $28 = trace: start of call of $13<%194<{ body_6 }>> with $24 $27<%189<"`text | typeIs Text` was not satisfied">> $18<%91<Core:text:trim:7>> ($26<%27<Builtins::textTrimStart:5>> is responsible, code is at $26<%27<Builtins::textTrimStart:5>>)
  $29 = call $13<%194<{ body_6 }>> with $24 $27<%189<"`text | typeIs Text` was not satisfied">> $18<%91<Core:text:trim:7>> ($26<%27<Builtins::textTrimStart:5>> is responsible)
  $30 = trace: end of call
  $31 = %125<builtinTextTrimStart>
  $32 = %26<Builtins::textTrimStart:11>
  $33 = call $31<%125<builtinTextTrimStart>> with $0 ($32<%26<Builtins::textTrimStart:11>> is responsible)
  $34 = trace: end of call
  $35 = %124<builtinTextTrimEnd>
  $36 = %25<Builtins::textTrimEnd:11>
  $37 = drop $16
  $38 = drop $29
  $39 = call $35<%124<builtinTextTrimEnd>> with $33 ($36<%25<Builtins::textTrimEnd:11>> is responsible)
body_132 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:16:print:7:doesTagHaveValue:then
  # Captured IDs: none
  $1 = %162<"You called a tag that already has a value.">
  $2 = %108<Examples:higherLower:16:print:7>
  $3 = panicking because $1<%162<"You called a tag that already has a value.">> ($2<%108<Examples:higherLower:16:print:7>> is at fault)
body_133 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsFunction:else
  # Captured IDs: none
  $1 = %163<"You can only call tags or functions.">
  $2 = %108<Examples:higherLower:16:print:7>
  $3 = panicking because $1<%163<"You can only call tags or functions.">> ($2<%108<Examples:higherLower:16:print:7>> is at fault)
body_134 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:16:14:34:6:11
  # Captured IDs: none
  $1 = %152<"Lower!">
body_135 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:16:14:34:6:12
  # Captured IDs: none
  $1 = %151<"Higher!">
body_136 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:doesTagHaveValue:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %121<builtinTagWithValue>
  $6 = %108<Examples:higherLower:16:print:7>
  $7 = call $5<%121<builtinTagWithValue>> with $1 $0 ($6<%108<Examples:higherLower:16:print:7>> is responsible)
body_137 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 2
  $5 = %120<builtinTagHasValue>
  $6 = %108<Examples:higherLower:16:print:7>
  $7 = call $5<%120<builtinTagHasValue>> with $1 ($6<%108<Examples:higherLower:16:print:7>> is responsible)
  $8 = { body_136 capturing $0, $1 }
  $9 = %113<builtinIfElse>
  $10 = %236<{ body_132 }>
  $11 = call $9<%113<builtinIfElse>> with $7 $10<%236<{ body_132 }>> $8 ($6<%108<Examples:higherLower:16:print:7>> is responsible)
body_138 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 2
  $5 = %108<Examples:higherLower:16:print:7>
  $6 = trace: tail call of $1 with $0 ($5<%108<Examples:higherLower:16:print:7>> is responsible, code is at $5<%108<Examples:higherLower:16:print:7>>)
  $7 = call $1 with $0 ($5<%108<Examples:higherLower:16:print:7>> is responsible)
body_139 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $11 = panicking because $10 ($4<%108<Examples:higherLower:16:print:7>> is at fault)
body_140 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsFunction:then
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 2
  $5 = %112<builtinGetArgumentCount>
  $6 = %108<Examples:higherLower:16:print:7>
  $7 = call $5<%112<builtinGetArgumentCount>> with $1 ($6<%108<Examples:higherLower:16:print:7>> is responsible)
  $8 = dup $7 by 1
  $9 = %110<builtinEquals>
  $10 = %146<1>
  $11 = call $9<%110<builtinEquals>> with $7 $10<%146<1>> ($6<%108<Examples:higherLower:16:print:7>> is responsible)
  $12 = { body_138 capturing $0, $1 }
  $13 = { body_139 capturing $7 }
  $14 = %113<builtinIfElse>
  $15 = call $14<%113<builtinIfElse>> with $11 $12 $13 ($6<%108<Examples:higherLower:16:print:7>> is responsible)
body_141 (responsible $3) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:else
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 1
  $5 = dup $1 by 1
  $6 = dup $2 by 1
  $7 = %110<builtinEquals>
  $8 = %132<Function>
  $9 = %108<Examples:higherLower:16:print:7>
  $10 = call $7<%110<builtinEquals>> with $2 $8<%132<Function>> ($9<%108<Examples:higherLower:16:print:7>> is responsible)
  $11 = { body_140 capturing $0, $1 }
  $12 = %113<builtinIfElse>
  $13 = %237<{ body_133 }>
  $14 = call $12<%113<builtinIfElse>> with $10 $11 $13<%237<{ body_133 }>> ($9<%108<Examples:higherLower:16:print:7>> is responsible)
body_142 $1 (+ responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print
  # Captured IDs: $0
  $3 = dup $0 by 4
  $4 = dup $1 by 1
  $5 = %107<Examples:higherLower:16:print:5>
  $6 = %205<{ body_17 }>
  $7 = %140<Stdout>
  $8 = trace: start of call of $6<%205<{ body_17 }>> with $0 $7<%140<Stdout>> ($5<%107<Examples:higherLower:16:print:5>> is responsible, code is at $5<%107<Examples:higherLower:16:print:5>>)
  $9 = %127<builtinTypeOf>
  $10 = %28<Builtins::typeIs:19>
  $11 = call $9<%127<builtinTypeOf>> with $0 ($10<%28<Builtins::typeIs:19>> is responsible)
  $12 = %110<builtinEquals>
  $13 = %141<Struct>
  $14 = %29<Builtins::typeIs:25>
  $15 = call $12<%110<builtinEquals>> with $11 $13<%141<Struct>> ($14<%29<Builtins::typeIs:25>> is responsible)
  $16 = dup $15 by 1
  $17 = %24<Builtins::structGet:5>
  $18 = %194<{ body_6 }>
  $19 = %187<"`struct | typeIs Struct` was not satisfied">
  $20 = trace: start of call of $18<%194<{ body_6 }>> with $15 $19<%187<"`struct | typeIs Struct` was not satisfied">> $5<%107<Examples:higherLower:16:print:5>> ($17<%24<Builtins::structGet:5>> is responsible, code is at $17<%24<Builtins::structGet:5>>)
  $21 = call $18<%194<{ body_6 }>> with $15 $19<%187<"`struct | typeIs Struct` was not satisfied">> $5<%107<Examples:higherLower:16:print:5>> ($17<%24<Builtins::structGet:5>> is responsible)
  $22 = trace: end of call
  $23 = %118<builtinStructHasKey>
  $24 = %21<Builtins::structGet:12>
  $25 = call $23<%118<builtinStructHasKey>> with $0 $7<%140<Stdout>> ($24<%21<Builtins::structGet:12>> is responsible)
  $26 = dup $25 by 1
  $27 = %22<Builtins::structGet:14>
  $28 = %188<"`struct | ✨.structHasKey key` was not satisfied">
  $29 = trace: start of call of $18<%194<{ body_6 }>> with $25 $28<%188<"`struct | ✨.structHasKey key` was not satisfied">> $5<%107<Examples:higherLower:16:print:5>> ($27<%22<Builtins::structGet:14>> is responsible, code is at $27<%22<Builtins::structGet:14>>)
  $30 = call $18<%194<{ body_6 }>> with $25 $28<%188<"`struct | ✨.structHasKey key` was not satisfied">> $5<%107<Examples:higherLower:16:print:5>> ($27<%22<Builtins::structGet:14>> is responsible)
  $31 = trace: end of call
  $32 = %117<builtinStructGet>
  $33 = %23<Builtins::structGet:21>
  $34 = call $32<%117<builtinStructGet>> with $0 $7<%140<Stdout>> ($33<%23<Builtins::structGet:21>> is responsible)
  $35 = dup $34 by 2
  $36 = trace: end of call
  $37 = %108<Examples:higherLower:16:print:7>
  $38 = call $9<%127<builtinTypeOf>> with $34 ($37<%108<Examples:higherLower:16:print:7>> is responsible)
  $39 = dup $38 by 1
  $40 = %142<Tag>
  $41 = call $12<%110<builtinEquals>> with $38 $40<%142<Tag>> ($37<%108<Examples:higherLower:16:print:7>> is responsible)
  $42 = { body_137 capturing $1, $34 }
  $43 = { body_141 capturing $1, $34, $38 }
  $44 = %113<builtinIfElse>
  $45 = drop $21
  $46 = drop $30
  $47 = call $44<%113<builtinIfElse>> with $41 $42 $43 ($37<%108<Examples:higherLower:16:print:7>> is responsible)
body_143 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:0
  # Captured IDs: $0
  $2 = dup $0 by 4
  $3 = %92<Examples:higherLower:16:0:6>
  $4 = %205<{ body_17 }>
  $5 = %139<Stdin>
  $6 = trace: start of call of $4<%205<{ body_17 }>> with $0 $5<%139<Stdin>> ($3<%92<Examples:higherLower:16:0:6>> is responsible, code is at $3<%92<Examples:higherLower:16:0:6>>)
  $7 = %127<builtinTypeOf>
  $8 = %28<Builtins::typeIs:19>
  $9 = call $7<%127<builtinTypeOf>> with $0 ($8<%28<Builtins::typeIs:19>> is responsible)
  $10 = %110<builtinEquals>
  $11 = %141<Struct>
  $12 = %29<Builtins::typeIs:25>
  $13 = call $10<%110<builtinEquals>> with $9 $11<%141<Struct>> ($12<%29<Builtins::typeIs:25>> is responsible)
  $14 = dup $13 by 1
  $15 = %24<Builtins::structGet:5>
  $16 = %194<{ body_6 }>
  $17 = %187<"`struct | typeIs Struct` was not satisfied">
  $18 = trace: start of call of $16<%194<{ body_6 }>> with $13 $17<%187<"`struct | typeIs Struct` was not satisfied">> $3<%92<Examples:higherLower:16:0:6>> ($15<%24<Builtins::structGet:5>> is responsible, code is at $15<%24<Builtins::structGet:5>>)
  $19 = call $16<%194<{ body_6 }>> with $13 $17<%187<"`struct | typeIs Struct` was not satisfied">> $3<%92<Examples:higherLower:16:0:6>> ($15<%24<Builtins::structGet:5>> is responsible)
  $20 = trace: end of call
  $21 = %118<builtinStructHasKey>
  $22 = %21<Builtins::structGet:12>
  $23 = call $21<%118<builtinStructHasKey>> with $0 $5<%139<Stdin>> ($22<%21<Builtins::structGet:12>> is responsible)
  $24 = dup $23 by 1
  $25 = %22<Builtins::structGet:14>
  $26 = %188<"`struct | ✨.structHasKey key` was not satisfied">
  $27 = trace: start of call of $16<%194<{ body_6 }>> with $23 $26<%188<"`struct | ✨.structHasKey key` was not satisfied">> $3<%92<Examples:higherLower:16:0:6>> ($25<%22<Builtins::structGet:14>> is responsible, code is at $25<%22<Builtins::structGet:14>>)
  $28 = call $16<%194<{ body_6 }>> with $23 $26<%188<"`struct | ✨.structHasKey key` was not satisfied">> $3<%92<Examples:higherLower:16:0:6>> ($25<%22<Builtins::structGet:14>> is responsible)
  $29 = trace: end of call
  $30 = %117<builtinStructGet>
  $31 = %23<Builtins::structGet:21>
  $32 = call $30<%117<builtinStructGet>> with $0 $5<%139<Stdin>> ($31<%23<Builtins::structGet:21>> is responsible)
  $33 = dup $32 by 1
  $34 = trace: end of call
  $35 = %93<Examples:higherLower:16:0:7>
  $36 = %208<{ body_22 }>
  $37 = trace: tail call of $36<%208<{ body_22 }>> with $32 ($35<%93<Examples:higherLower:16:0:7>> is responsible, code is at $35<%93<Examples:higherLower:16:0:7>>)
  $38 = drop $19
  $39 = drop $28
  $40 = call $36<%208<{ body_22 }>> with $32 ($35<%93<Examples:higherLower:16:0:7>> is responsible)
body_144 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:doesTagHaveValue:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %121<builtinTagWithValue>
  $4 = %159<"Welcome to the number guessing game!">
  $5 = %108<Examples:higherLower:16:print:7>
  $6 = call $3<%121<builtinTagWithValue>> with $0 $4<%159<"Welcome to the number guessing game!">> ($5<%108<Examples:higherLower:16:print:7>> is responsible)
body_145 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = { body_144 capturing $0 }
  $7 = %113<builtinIfElse>
  $8 = %236<{ body_132 }>
  $9 = call $7<%113<builtinIfElse>> with $5 $8<%236<{ body_132 }>> $6 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_146 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %108<Examples:higherLower:16:print:7>
  $4 = %159<"Welcome to the number guessing game!">
  $5 = trace: tail call of $0 with $4<%159<"Welcome to the number guessing game!">> ($3<%108<Examples:higherLower:16:print:7>> is responsible, code is at $3<%108<Examples:higherLower:16:print:7>>)
  $6 = call $0 with $4<%159<"Welcome to the number guessing game!">> ($3<%108<Examples:higherLower:16:print:7>> is responsible)
body_147 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $11 = panicking because $10 ($4<%108<Examples:higherLower:16:print:7>> is at fault)
body_148 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsFunction:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %112<builtinGetArgumentCount>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%112<builtinGetArgumentCount>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = dup $5 by 1
  $7 = %110<builtinEquals>
  $8 = %146<1>
  $9 = call $7<%110<builtinEquals>> with $5 $8<%146<1>> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $10 = { body_146 capturing $0 }
  $11 = { body_147 capturing $5 }
  $12 = %113<builtinIfElse>
  $13 = call $12<%113<builtinIfElse>> with $9 $10 $11 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_149 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %110<builtinEquals>
  $6 = %132<Function>
  $7 = %108<Examples:higherLower:16:print:7>
  $8 = call $5<%110<builtinEquals>> with $1 $6<%132<Function>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = { body_148 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %237<{ body_133 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%237<{ body_133 }>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
body_150 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:doesTagHaveValue:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %121<builtinTagWithValue>
  $4 = %160<"What's your guess?">
  $5 = %108<Examples:higherLower:16:print:7>
  $6 = call $3<%121<builtinTagWithValue>> with $0 $4<%160<"What's your guess?">> ($5<%108<Examples:higherLower:16:print:7>> is responsible)
body_151 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = { body_150 capturing $0 }
  $7 = %113<builtinIfElse>
  $8 = %236<{ body_132 }>
  $9 = call $7<%113<builtinIfElse>> with $5 $8<%236<{ body_132 }>> $6 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_152 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %108<Examples:higherLower:16:print:7>
  $4 = %160<"What's your guess?">
  $5 = trace: tail call of $0 with $4<%160<"What's your guess?">> ($3<%108<Examples:higherLower:16:print:7>> is responsible, code is at $3<%108<Examples:higherLower:16:print:7>>)
  $6 = call $0 with $4<%160<"What's your guess?">> ($3<%108<Examples:higherLower:16:print:7>> is responsible)
body_153 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $11 = panicking because $10 ($4<%108<Examples:higherLower:16:print:7>> is at fault)
body_154 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsFunction:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %112<builtinGetArgumentCount>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%112<builtinGetArgumentCount>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = dup $5 by 1
  $7 = %110<builtinEquals>
  $8 = %146<1>
  $9 = call $7<%110<builtinEquals>> with $5 $8<%146<1>> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $10 = { body_152 capturing $0 }
  $11 = { body_153 capturing $5 }
  $12 = %113<builtinIfElse>
  $13 = call $12<%113<builtinIfElse>> with $9 $10 $11 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_155 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %110<builtinEquals>
  $6 = %132<Function>
  $7 = %108<Examples:higherLower:16:print:7>
  $8 = call $5<%110<builtinEquals>> with $1 $6<%132<Function>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = { body_154 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %237<{ body_133 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%237<{ body_133 }>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
body_156 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:doesTagHaveValue:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %121<builtinTagWithValue>
  $4 = %164<"You did it!">
  $5 = %108<Examples:higherLower:16:print:7>
  $6 = call $3<%121<builtinTagWithValue>> with $0 $4<%164<"You did it!">> ($5<%108<Examples:higherLower:16:print:7>> is responsible)
body_157 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = { body_156 capturing $0 }
  $7 = %113<builtinIfElse>
  $8 = %236<{ body_132 }>
  $9 = call $7<%113<builtinIfElse>> with $5 $8<%236<{ body_132 }>> $6 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_158 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %108<Examples:higherLower:16:print:7>
  $4 = %164<"You did it!">
  $5 = trace: tail call of $0 with $4<%164<"You did it!">> ($3<%108<Examples:higherLower:16:print:7>> is responsible, code is at $3<%108<Examples:higherLower:16:print:7>>)
  $6 = call $0 with $4<%164<"You did it!">> ($3<%108<Examples:higherLower:16:print:7>> is responsible)
body_159 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $11 = panicking because $10 ($4<%108<Examples:higherLower:16:print:7>> is at fault)
body_160 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsFunction:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %112<builtinGetArgumentCount>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%112<builtinGetArgumentCount>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = dup $5 by 1
  $7 = %110<builtinEquals>
  $8 = %146<1>
  $9 = call $7<%110<builtinEquals>> with $5 $8<%146<1>> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $10 = { body_158 capturing $0 }
  $11 = { body_159 capturing $5 }
  $12 = %113<builtinIfElse>
  $13 = call $12<%113<builtinIfElse>> with $9 $10 $11 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_161 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %110<builtinEquals>
  $6 = %132<Function>
  $7 = %108<Examples:higherLower:16:print:7>
  $8 = call $5<%110<builtinEquals>> with $1 $6<%132<Function>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = { body_160 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %237<{ body_133 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%237<{ body_133 }>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
body_162 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:14:34:5
  # Captured IDs: $0, $1
  $3 = dup $0 by 4
  $4 = dup $1 by 1
  $5 = %98<Examples:higherLower:16:14:34:5:8>
  $6 = %164<"You did it!">
  $7 = trace: start of call of $1 with $6<%164<"You did it!">> ($5<%98<Examples:higherLower:16:14:34:5:8>> is responsible, code is at $5<%98<Examples:higherLower:16:14:34:5:8>>)
  $8 = %107<Examples:higherLower:16:print:5>
  $9 = %205<{ body_17 }>
  $10 = %140<Stdout>
  $11 = trace: start of call of $9<%205<{ body_17 }>> with $0 $10<%140<Stdout>> ($8<%107<Examples:higherLower:16:print:5>> is responsible, code is at $8<%107<Examples:higherLower:16:print:5>>)
  $12 = %127<builtinTypeOf>
  $13 = %28<Builtins::typeIs:19>
  $14 = call $12<%127<builtinTypeOf>> with $0 ($13<%28<Builtins::typeIs:19>> is responsible)
  $15 = %110<builtinEquals>
  $16 = %141<Struct>
  $17 = %29<Builtins::typeIs:25>
  $18 = call $15<%110<builtinEquals>> with $14 $16<%141<Struct>> ($17<%29<Builtins::typeIs:25>> is responsible)
  $19 = dup $18 by 1
  $20 = %24<Builtins::structGet:5>
  $21 = %194<{ body_6 }>
  $22 = %187<"`struct | typeIs Struct` was not satisfied">
  $23 = trace: start of call of $21<%194<{ body_6 }>> with $18 $22<%187<"`struct | typeIs Struct` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($20<%24<Builtins::structGet:5>> is responsible, code is at $20<%24<Builtins::structGet:5>>)
  $24 = call $21<%194<{ body_6 }>> with $18 $22<%187<"`struct | typeIs Struct` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($20<%24<Builtins::structGet:5>> is responsible)
  $25 = trace: end of call
  $26 = %118<builtinStructHasKey>
  $27 = %21<Builtins::structGet:12>
  $28 = call $26<%118<builtinStructHasKey>> with $0 $10<%140<Stdout>> ($27<%21<Builtins::structGet:12>> is responsible)
  $29 = dup $28 by 1
  $30 = %22<Builtins::structGet:14>
  $31 = %188<"`struct | ✨.structHasKey key` was not satisfied">
  $32 = trace: start of call of $21<%194<{ body_6 }>> with $28 $31<%188<"`struct | ✨.structHasKey key` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($30<%22<Builtins::structGet:14>> is responsible, code is at $30<%22<Builtins::structGet:14>>)
  $33 = call $21<%194<{ body_6 }>> with $28 $31<%188<"`struct | ✨.structHasKey key` was not satisfied">> $8<%107<Examples:higherLower:16:print:5>> ($30<%22<Builtins::structGet:14>> is responsible)
  $34 = trace: end of call
  $35 = %117<builtinStructGet>
  $36 = %23<Builtins::structGet:21>
  $37 = call $35<%117<builtinStructGet>> with $0 $10<%140<Stdout>> ($36<%23<Builtins::structGet:21>> is responsible)
  $38 = dup $37 by 2
  $39 = trace: end of call
  $40 = %108<Examples:higherLower:16:print:7>
  $41 = call $12<%127<builtinTypeOf>> with $37 ($40<%108<Examples:higherLower:16:print:7>> is responsible)
  $42 = dup $41 by 1
  $43 = %142<Tag>
  $44 = call $15<%110<builtinEquals>> with $41 $43<%142<Tag>> ($40<%108<Examples:higherLower:16:print:7>> is responsible)
  $45 = { body_157 capturing $37 }
  $46 = { body_161 capturing $37, $41 }
  $47 = %113<builtinIfElse>
  $48 = call $47<%113<builtinIfElse>> with $44 $45 $46 ($40<%108<Examples:higherLower:16:print:7>> is responsible)
  $49 = trace: end of call
  $50 = drop $24
  $51 = drop $33
  $52 = drop $48
  $53 = %128<Break>
body_163 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:14:34:6
  # Captured IDs: $0, $1
  $3 = dup $0 by 2
  $4 = dup $1 by 6
  $5 = %99<Examples:higherLower:16:14:34:6:10>
  $6 = %226<{ body_82 }>
  $7 = %148<42>
  $8 = trace: start of call of $6<%226<{ body_82 }>> with $7<%148<42>> $1 ($5<%99<Examples:higherLower:16:14:34:6:10>> is responsible, code is at $5<%99<Examples:higherLower:16:14:34:6:10>>)
  $9 = %127<builtinTypeOf>
  $10 = %30<Builtins::typeOf:5>
  $11 = call $9<%127<builtinTypeOf>> with $1 ($10<%30<Builtins::typeOf:5>> is responsible)
  $12 = %110<builtinEquals>
  $13 = %133<Int>
  $14 = %0<Builtins::equals:6>
  $15 = call $12<%110<builtinEquals>> with $11 $13<%133<Int>> ($14<%0<Builtins::equals:6>> is responsible)
  $16 = dup $15 by 3
  $17 = %77<Core:int:isLessThan:9>
  $18 = %194<{ body_6 }>
  $19 = %185<"`is valueB` was not satisfied">
  $20 = trace: start of call of $18<%194<{ body_6 }>> with $15 $19<%185<"`is valueB` was not satisfied">> $5<%99<Examples:higherLower:16:14:34:6:10>> ($17<%77<Core:int:isLessThan:9>> is responsible, code is at $17<%77<Core:int:isLessThan:9>>)
  $21 = call $18<%194<{ body_6 }>> with $15 $19<%185<"`is valueB` was not satisfied">> $5<%99<Examples:higherLower:16:14:34:6:10>> ($17<%77<Core:int:isLessThan:9>> is responsible)
  $22 = trace: end of call
  $23 = %75<Core:int:isLessThan:13>
  $24 = %225<{ body_81 }>
  $25 = trace: start of call of $24<%225<{ body_81 }>> with $7<%148<42>> $1 ($23<%75<Core:int:isLessThan:13>> is responsible, code is at $23<%75<Core:int:isLessThan:13>>)
  $26 = %74<Core:int:compareTo:9>
  $27 = trace: start of call of $18<%194<{ body_6 }>> with $15 $19<%185<"`is valueB` was not satisfied">> $23<%75<Core:int:isLessThan:13>> ($26<%74<Core:int:compareTo:9>> is responsible, code is at $26<%74<Core:int:compareTo:9>>)
  $28 = call $18<%194<{ body_6 }>> with $15 $19<%185<"`is valueB` was not satisfied">> $23<%75<Core:int:isLessThan:13>> ($26<%74<Core:int:compareTo:9>> is responsible)
  $29 = trace: end of call
  $30 = %72<Core:int:compareTo:18>
  $31 = %203<{ body_15 }>
  $32 = trace: start of call of $31<%203<{ body_15 }>> with $7<%148<42>> $1 ($30<%72<Core:int:compareTo:18>> is responsible, code is at $30<%72<Core:int:compareTo:18>>)
  $33 = %28<Builtins::typeIs:19>
  $34 = call $9<%127<builtinTypeOf>> with $1 ($33<%28<Builtins::typeIs:19>> is responsible)
  $35 = %29<Builtins::typeIs:25>
  $36 = call $12<%110<builtinEquals>> with $34 $13<%133<Int>> ($35<%29<Builtins::typeIs:25>> is responsible)
  $37 = dup $36 by 1
  $38 = %16<Builtins::intCompareTo:11>
  $39 = %167<"`b | typeIs Int` was not satisfied">
  $40 = trace: start of call of $18<%194<{ body_6 }>> with $36 $39<%167<"`b | typeIs Int` was not satisfied">> $30<%72<Core:int:compareTo:18>> ($38<%16<Builtins::intCompareTo:11>> is responsible, code is at $38<%16<Builtins::intCompareTo:11>>)
  $41 = call $18<%194<{ body_6 }>> with $36 $39<%167<"`b | typeIs Int` was not satisfied">> $30<%72<Core:int:compareTo:18>> ($38<%16<Builtins::intCompareTo:11>> is responsible)
  $42 = trace: end of call
  $43 = %114<builtinIntCompareTo>
  $44 = %17<Builtins::intCompareTo:18>
  $45 = call $43<%114<builtinIntCompareTo>> with $7<%148<42>> $1 ($44<%17<Builtins::intCompareTo:18>> is responsible)
  $46 = trace: end of call
  $47 = trace: end of call
  $48 = %134<Less>
  $49 = call $12<%110<builtinEquals>> with $45 $48<%134<Less>> ($14<%0<Builtins::equals:6>> is responsible)
  $50 = dup $49 by 1
  $51 = trace: end of call
  $52 = %100<Examples:higherLower:16:14:34:6:13>
  $53 = %202<{ body_14 }>
  $54 = %238<{ body_134 }>
  $55 = %239<{ body_135 }>
  $56 = trace: start of call of $53<%202<{ body_14 }>> with $49 $54<%238<{ body_134 }>> $55<%239<{ body_135 }>> ($52<%100<Examples:higherLower:16:14:34:6:13>> is responsible, code is at $52<%100<Examples:higherLower:16:14:34:6:13>>)
  $57 = call $53<%202<{ body_14 }>> with $49 $54<%238<{ body_134 }>> $55<%239<{ body_135 }>> ($52<%100<Examples:higherLower:16:14:34:6:13>> is responsible)
  $58 = dup $57 by 1
  $59 = trace: end of call
  $60 = %101<Examples:higherLower:16:14:34:6:14>
  $61 = trace: start of call of $0 with $57 ($60<%101<Examples:higherLower:16:14:34:6:14>> is responsible, code is at $60<%101<Examples:higherLower:16:14:34:6:14>>)
  $62 = call $0 with $57 ($60<%101<Examples:higherLower:16:14:34:6:14>> is responsible)
  $63 = trace: end of call
  $64 = drop $21
  $65 = drop $28
  $66 = drop $41
  $67 = drop $62
  $68 = %129<Continue>
body_164 $2 (+ responsible $3) =
  # Original HIR IDs: Examples:higherLower:16:14:34
  # Captured IDs: $0, $1
  $4 = dup $0 by 1
  $5 = dup $1 by 2
  $6 = dup $2 by 1
  $7 = %110<builtinEquals>
  $8 = %148<42>
  $9 = %0<Builtins::equals:6>
  $10 = call $7<%110<builtinEquals>> with $2 $8<%148<42>> ($9<%0<Builtins::equals:6>> is responsible)
  $11 = dup $10 by 1
  $12 = { body_162 capturing $0, $1 }
  $13 = dup $12 by 1
  $14 = { body_163 capturing $1, $2 }
  $15 = dup $14 by 1
  $16 = %102<Examples:higherLower:16:14:34:7>
  $17 = %202<{ body_14 }>
  $18 = trace: tail call of $17<%202<{ body_14 }>> with $10 $12 $14 ($16<%102<Examples:higherLower:16:14:34:7>> is responsible, code is at $16<%102<Examples:higherLower:16:14:34:7>>)
  $19 = call $17<%202<{ body_14 }>> with $10 $12 $14 ($16<%102<Examples:higherLower:16:14:34:7>> is responsible)
body_165 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:doesTagHaveValue:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %121<builtinTagWithValue>
  $4 = %165<"Your guess must be a number.">
  $5 = %108<Examples:higherLower:16:print:7>
  $6 = call $3<%121<builtinTagWithValue>> with $0 $4<%165<"Your guess must be a number.">> ($5<%108<Examples:higherLower:16:print:7>> is responsible)
body_166 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %120<builtinTagHasValue>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%120<builtinTagHasValue>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = { body_165 capturing $0 }
  $7 = %113<builtinIfElse>
  $8 = %236<{ body_132 }>
  $9 = call $7<%113<builtinIfElse>> with $5 $8<%236<{ body_132 }>> $6 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_167 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %108<Examples:higherLower:16:print:7>
  $4 = %165<"Your guess must be a number.">
  $5 = trace: tail call of $0 with $4<%165<"Your guess must be a number.">> ($3<%108<Examples:higherLower:16:print:7>> is responsible, code is at $3<%108<Examples:higherLower:16:print:7>>)
  $6 = call $0 with $4<%165<"Your guess must be a number.">> ($3<%108<Examples:higherLower:16:print:7>> is responsible)
body_168 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:hasCorrectNumberOfArguments:else
  # Captured IDs: $0
  $2 = dup $0 by 1
  $3 = %126<builtinToDebugText>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%126<builtinToDebugText>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = %123<builtinTextConcatenate>
  $7 = %161<"You called a function that expects ">
  $8 = call $6<%123<builtinTextConcatenate>> with $7<%161<"You called a function that expects ">> $5 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = %149<" arguments with 1 arguments.">
  $10 = call $6<%123<builtinTextConcatenate>> with $8 $9<%149<" arguments with 1 arguments.">> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $11 = panicking because $10 ($4<%108<Examples:higherLower:16:print:7>> is at fault)
body_169 (responsible $1) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsFunction:then
  # Captured IDs: $0
  $2 = dup $0 by 2
  $3 = %112<builtinGetArgumentCount>
  $4 = %108<Examples:higherLower:16:print:7>
  $5 = call $3<%112<builtinGetArgumentCount>> with $0 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $6 = dup $5 by 1
  $7 = %110<builtinEquals>
  $8 = %146<1>
  $9 = call $7<%110<builtinEquals>> with $5 $8<%146<1>> ($4<%108<Examples:higherLower:16:print:7>> is responsible)
  $10 = { body_167 capturing $0 }
  $11 = { body_168 capturing $5 }
  $12 = %113<builtinIfElse>
  $13 = call $12<%113<builtinIfElse>> with $9 $10 $11 ($4<%108<Examples:higherLower:16:print:7>> is responsible)
body_170 (responsible $2) =
  # Original HIR IDs: Examples:higherLower:16:print:7:calleeIsTag:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = %110<builtinEquals>
  $6 = %132<Function>
  $7 = %108<Examples:higherLower:16:print:7>
  $8 = call $5<%110<builtinEquals>> with $1 $6<%132<Function>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
  $9 = { body_169 capturing $0 }
  $10 = %113<builtinIfElse>
  $11 = %237<{ body_133 }>
  $12 = call $10<%113<builtinIfElse>> with $8 $9 $11<%237<{ body_133 }>> ($7<%108<Examples:higherLower:16:print:7>> is responsible)
body_171 $2 (+ responsible $3) =
  # Original HIR IDs: Examples:higherLower:16:14:35
  # Captured IDs: $0, $1
  $4 = dup $0 by 4
  $5 = dup $1 by 1
  $6 = %103<Examples:higherLower:16:14:35:8>
  $7 = %165<"Your guess must be a number.">
  $8 = trace: start of call of $1 with $7<%165<"Your guess must be a number.">> ($6<%103<Examples:higherLower:16:14:35:8>> is responsible, code is at $6<%103<Examples:higherLower:16:14:35:8>>)
  $9 = %107<Examples:higherLower:16:print:5>
  $10 = %205<{ body_17 }>
  $11 = %140<Stdout>
  $12 = trace: start of call of $10<%205<{ body_17 }>> with $0 $11<%140<Stdout>> ($9<%107<Examples:higherLower:16:print:5>> is responsible, code is at $9<%107<Examples:higherLower:16:print:5>>)
  $13 = %127<builtinTypeOf>
  $14 = %28<Builtins::typeIs:19>
  $15 = call $13<%127<builtinTypeOf>> with $0 ($14<%28<Builtins::typeIs:19>> is responsible)
  $16 = %110<builtinEquals>
  $17 = %141<Struct>
  $18 = %29<Builtins::typeIs:25>
  $19 = call $16<%110<builtinEquals>> with $15 $17<%141<Struct>> ($18<%29<Builtins::typeIs:25>> is responsible)
  $20 = dup $19 by 1
  $21 = %24<Builtins::structGet:5>
  $22 = %194<{ body_6 }>
  $23 = %187<"`struct | typeIs Struct` was not satisfied">
  $24 = trace: start of call of $22<%194<{ body_6 }>> with $19 $23<%187<"`struct | typeIs Struct` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($21<%24<Builtins::structGet:5>> is responsible, code is at $21<%24<Builtins::structGet:5>>)
  $25 = call $22<%194<{ body_6 }>> with $19 $23<%187<"`struct | typeIs Struct` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($21<%24<Builtins::structGet:5>> is responsible)
  $26 = trace: end of call
  $27 = %118<builtinStructHasKey>
  $28 = %21<Builtins::structGet:12>
  $29 = call $27<%118<builtinStructHasKey>> with $0 $11<%140<Stdout>> ($28<%21<Builtins::structGet:12>> is responsible)
  $30 = dup $29 by 1
  $31 = %22<Builtins::structGet:14>
  $32 = %188<"`struct | ✨.structHasKey key` was not satisfied">
  $33 = trace: start of call of $22<%194<{ body_6 }>> with $29 $32<%188<"`struct | ✨.structHasKey key` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($31<%22<Builtins::structGet:14>> is responsible, code is at $31<%22<Builtins::structGet:14>>)
  $34 = call $22<%194<{ body_6 }>> with $29 $32<%188<"`struct | ✨.structHasKey key` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($31<%22<Builtins::structGet:14>> is responsible)
  $35 = trace: end of call
  $36 = %117<builtinStructGet>
  $37 = %23<Builtins::structGet:21>
  $38 = call $36<%117<builtinStructGet>> with $0 $11<%140<Stdout>> ($37<%23<Builtins::structGet:21>> is responsible)
  $39 = dup $38 by 2
  $40 = trace: end of call
  $41 = %108<Examples:higherLower:16:print:7>
  $42 = call $13<%127<builtinTypeOf>> with $38 ($41<%108<Examples:higherLower:16:print:7>> is responsible)
  $43 = dup $42 by 1
  $44 = %142<Tag>
  $45 = call $16<%110<builtinEquals>> with $42 $44<%142<Tag>> ($41<%108<Examples:higherLower:16:print:7>> is responsible)
  $46 = { body_166 capturing $38 }
  $47 = { body_170 capturing $38, $42 }
  $48 = %113<builtinIfElse>
  $49 = call $48<%113<builtinIfElse>> with $45 $46 $47 ($41<%108<Examples:higherLower:16:print:7>> is responsible)
  $50 = trace: end of call
  $51 = drop $2
  $52 = drop $25
  $53 = drop $34
  $54 = drop $49
  $55 = %129<Continue>
body_172 (responsible $3) =
  # Original HIR IDs: Examples:higherLower:16:14
  # Captured IDs: $0, $1, $2
  $4 = dup $0 by 6
  $5 = dup $1 by 3
  $6 = dup $2 by 2
  $7 = %105<Examples:higherLower:16:14:8>
  $8 = %160<"What's your guess?">
  $9 = trace: start of call of $1 with $8<%160<"What's your guess?">> ($7<%105<Examples:higherLower:16:14:8>> is responsible, code is at $7<%105<Examples:higherLower:16:14:8>>)
  $10 = %107<Examples:higherLower:16:print:5>
  $11 = %205<{ body_17 }>
  $12 = %140<Stdout>
  $13 = trace: start of call of $11<%205<{ body_17 }>> with $0 $12<%140<Stdout>> ($10<%107<Examples:higherLower:16:print:5>> is responsible, code is at $10<%107<Examples:higherLower:16:print:5>>)
  $14 = %127<builtinTypeOf>
  $15 = %28<Builtins::typeIs:19>
  $16 = call $14<%127<builtinTypeOf>> with $0 ($15<%28<Builtins::typeIs:19>> is responsible)
  $17 = %110<builtinEquals>
  $18 = %141<Struct>
  $19 = %29<Builtins::typeIs:25>
  $20 = call $17<%110<builtinEquals>> with $16 $18<%141<Struct>> ($19<%29<Builtins::typeIs:25>> is responsible)
  $21 = dup $20 by 1
  $22 = %24<Builtins::structGet:5>
  $23 = %194<{ body_6 }>
  $24 = %187<"`struct | typeIs Struct` was not satisfied">
  $25 = trace: start of call of $23<%194<{ body_6 }>> with $20 $24<%187<"`struct | typeIs Struct` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($22<%24<Builtins::structGet:5>> is responsible, code is at $22<%24<Builtins::structGet:5>>)
  $26 = call $23<%194<{ body_6 }>> with $20 $24<%187<"`struct | typeIs Struct` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($22<%24<Builtins::structGet:5>> is responsible)
  $27 = trace: end of call
  $28 = %118<builtinStructHasKey>
  $29 = %21<Builtins::structGet:12>
  $30 = call $28<%118<builtinStructHasKey>> with $0 $12<%140<Stdout>> ($29<%21<Builtins::structGet:12>> is responsible)
  $31 = dup $30 by 1
  $32 = %22<Builtins::structGet:14>
  $33 = %188<"`struct | ✨.structHasKey key` was not satisfied">
  $34 = trace: start of call of $23<%194<{ body_6 }>> with $30 $33<%188<"`struct | ✨.structHasKey key` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($32<%22<Builtins::structGet:14>> is responsible, code is at $32<%22<Builtins::structGet:14>>)
  $35 = call $23<%194<{ body_6 }>> with $30 $33<%188<"`struct | ✨.structHasKey key` was not satisfied">> $10<%107<Examples:higherLower:16:print:5>> ($32<%22<Builtins::structGet:14>> is responsible)
  $36 = trace: end of call
  $37 = %117<builtinStructGet>
  $38 = %23<Builtins::structGet:21>
  $39 = call $37<%117<builtinStructGet>> with $0 $12<%140<Stdout>> ($38<%23<Builtins::structGet:21>> is responsible)
  $40 = dup $39 by 2
  $41 = trace: end of call
  $42 = %108<Examples:higherLower:16:print:7>
  $43 = call $14<%127<builtinTypeOf>> with $39 ($42<%108<Examples:higherLower:16:print:7>> is responsible)
  $44 = dup $43 by 1
  $45 = %142<Tag>
  $46 = call $17<%110<builtinEquals>> with $43 $45<%142<Tag>> ($42<%108<Examples:higherLower:16:print:7>> is responsible)
  $47 = { body_151 capturing $39 }
  $48 = { body_155 capturing $39, $43 }
  $49 = %113<builtinIfElse>
  $50 = call $49<%113<builtinIfElse>> with $46 $47 $48 ($42<%108<Examples:higherLower:16:print:7>> is responsible)
  $51 = trace: end of call
  $52 = %95<Examples:higherLower:16:14:11>
  $53 = %208<{ body_22 }>
  $54 = trace: start of call of $53<%208<{ body_22 }>> with $2 ($52<%95<Examples:higherLower:16:14:11>> is responsible, code is at $52<%95<Examples:higherLower:16:14:11>>)
  $55 = call $53<%208<{ body_22 }>> with $2 ($52<%95<Examples:higherLower:16:14:11>> is responsible)
  $56 = dup $55 by 1
  $57 = trace: end of call
  $58 = %96<Examples:higherLower:16:14:18>
  $59 = %235<{ body_131 }>
  $60 = trace: start of call of $59<%235<{ body_131 }>> with $55 ($58<%96<Examples:higherLower:16:14:18>> is responsible, code is at $58<%96<Examples:higherLower:16:14:18>>)
  $61 = call $59<%235<{ body_131 }>> with $55 ($58<%96<Examples:higherLower:16:14:18>> is responsible)
  $62 = dup $61 by 2
  $63 = trace: end of call
  $64 = %97<Examples:higherLower:16:14:25>
  $65 = %204<{ body_16 }>
  $66 = trace: start of call of $65<%204<{ body_16 }>> with $61 ($64<%97<Examples:higherLower:16:14:25>> is responsible, code is at $64<%97<Examples:higherLower:16:14:25>>)
  $67 = call $14<%127<builtinTypeOf>> with $61 ($15<%28<Builtins::typeIs:19>> is responsible)
  $68 = %143<Text>
  $69 = call $17<%110<builtinEquals>> with $67 $68<%143<Text>> ($19<%29<Builtins::typeIs:25>> is responsible)
  $70 = dup $69 by 1
  $71 = %20<Builtins::intParse:5>
  $72 = %189<"`text | typeIs Text` was not satisfied">
  $73 = trace: start of call of $23<%194<{ body_6 }>> with $69 $72<%189<"`text | typeIs Text` was not satisfied">> $64<%97<Examples:higherLower:16:14:25>> ($71<%20<Builtins::intParse:5>> is responsible, code is at $71<%20<Builtins::intParse:5>>)
  $74 = call $23<%194<{ body_6 }>> with $69 $72<%189<"`text | typeIs Text` was not satisfied">> $64<%97<Examples:higherLower:16:14:25>> ($71<%20<Builtins::intParse:5>> is responsible)
  $75 = trace: end of call
  $76 = %115<builtinIntParse>
  $77 = %19<Builtins::intParse:11>
  $78 = call $76<%115<builtinIntParse>> with $61 ($77<%19<Builtins::intParse:11>> is responsible)
  $79 = dup $78 by 1
  $80 = trace: end of call
  $81 = { body_164 capturing $0, $1 }
  $82 = dup $81 by 1
  $83 = { body_171 capturing $0, $1 }
  $84 = dup $83 by 1
  $85 = %104<Examples:higherLower:16:14:36>
  $86 = %234<{ body_130 }>
  $87 = trace: tail call of $86<%234<{ body_130 }>> with $78 $81 $83 ($85<%104<Examples:higherLower:16:14:36>> is responsible, code is at $85<%104<Examples:higherLower:16:14:36>>)
  $88 = drop $26
  $89 = drop $35
  $90 = drop $50
  $91 = drop $74
  $92 = call $86<%234<{ body_130 }>> with $78 $81 $83 ($85<%104<Examples:higherLower:16:14:36>> is responsible)
body_173 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:higherLower:16
  # Captured IDs: none
  $2 = dup $0 by 6
  $3 = { body_142 capturing $0 }
  $4 = dup $3 by 1
  $5 = { body_143 capturing $0 }
  $6 = %94<Examples:higherLower:16:10>
  $7 = %159<"Welcome to the number guessing game!">
  $8 = trace: start of call of $3 with $7<%159<"Welcome to the number guessing game!">> ($6<%94<Examples:higherLower:16:10>> is responsible, code is at $6<%94<Examples:higherLower:16:10>>)
  $9 = %107<Examples:higherLower:16:print:5>
  $10 = %205<{ body_17 }>
  $11 = %140<Stdout>
  $12 = trace: start of call of $10<%205<{ body_17 }>> with $0 $11<%140<Stdout>> ($9<%107<Examples:higherLower:16:print:5>> is responsible, code is at $9<%107<Examples:higherLower:16:print:5>>)
  $13 = %127<builtinTypeOf>
  $14 = %28<Builtins::typeIs:19>
  $15 = call $13<%127<builtinTypeOf>> with $0 ($14<%28<Builtins::typeIs:19>> is responsible)
  $16 = %110<builtinEquals>
  $17 = %141<Struct>
  $18 = %29<Builtins::typeIs:25>
  $19 = call $16<%110<builtinEquals>> with $15 $17<%141<Struct>> ($18<%29<Builtins::typeIs:25>> is responsible)
  $20 = dup $19 by 1
  $21 = %24<Builtins::structGet:5>
  $22 = %194<{ body_6 }>
  $23 = %187<"`struct | typeIs Struct` was not satisfied">
  $24 = trace: start of call of $22<%194<{ body_6 }>> with $19 $23<%187<"`struct | typeIs Struct` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($21<%24<Builtins::structGet:5>> is responsible, code is at $21<%24<Builtins::structGet:5>>)
  $25 = call $22<%194<{ body_6 }>> with $19 $23<%187<"`struct | typeIs Struct` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($21<%24<Builtins::structGet:5>> is responsible)
  $26 = trace: end of call
  $27 = %118<builtinStructHasKey>
  $28 = %21<Builtins::structGet:12>
  $29 = call $27<%118<builtinStructHasKey>> with $0 $11<%140<Stdout>> ($28<%21<Builtins::structGet:12>> is responsible)
  $30 = dup $29 by 1
  $31 = %22<Builtins::structGet:14>
  $32 = %188<"`struct | ✨.structHasKey key` was not satisfied">
  $33 = trace: start of call of $22<%194<{ body_6 }>> with $29 $32<%188<"`struct | ✨.structHasKey key` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($31<%22<Builtins::structGet:14>> is responsible, code is at $31<%22<Builtins::structGet:14>>)
  $34 = call $22<%194<{ body_6 }>> with $29 $32<%188<"`struct | ✨.structHasKey key` was not satisfied">> $9<%107<Examples:higherLower:16:print:5>> ($31<%22<Builtins::structGet:14>> is responsible)
  $35 = trace: end of call
  $36 = %117<builtinStructGet>
  $37 = %23<Builtins::structGet:21>
  $38 = call $36<%117<builtinStructGet>> with $0 $11<%140<Stdout>> ($37<%23<Builtins::structGet:21>> is responsible)
  $39 = dup $38 by 2
  $40 = trace: end of call
  $41 = %108<Examples:higherLower:16:print:7>
  $42 = call $13<%127<builtinTypeOf>> with $38 ($41<%108<Examples:higherLower:16:print:7>> is responsible)
  $43 = dup $42 by 1
  $44 = %142<Tag>
  $45 = call $16<%110<builtinEquals>> with $42 $44<%142<Tag>> ($41<%108<Examples:higherLower:16:print:7>> is responsible)
  $46 = { body_145 capturing $38 }
  $47 = { body_149 capturing $38, $42 }
  $48 = %113<builtinIfElse>
  $49 = call $48<%113<builtinIfElse>> with $45 $46 $47 ($41<%108<Examples:higherLower:16:print:7>> is responsible)
  $50 = trace: end of call
  $51 = { body_172 capturing $0, $3, $5 }
  $52 = dup $51 by 1
  $53 = %106<Examples:higherLower:16:15>
  $54 = %224<{ body_80 }>
  $55 = trace: tail call of $54<%224<{ body_80 }>> with $51 ($53<%106<Examples:higherLower:16:15>> is responsible, code is at $53<%106<Examples:higherLower:16:15>>)
  $56 = drop $25
  $57 = drop $34
  $58 = drop $49
  $59 = call $54<%224<{ body_80 }>> with $51 ($53<%106<Examples:higherLower:16:15>> is responsible)
body_174 (responsible $0) =
  # Original HIR IDs: Examples:higherLower:
  # Captured IDs: none
  $1 = %240<{ body_173 }>
