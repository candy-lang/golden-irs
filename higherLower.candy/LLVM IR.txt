; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intParse:11" = global ptr null
@"Builtins::intParse:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::textTrimEnd:11" = global ptr null
@"Builtins::textTrimStart:11" = global ptr null
@"Builtins::textTrimStart:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:bool:is:1" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:18" = global ptr null
@"Core:bool:lazyOr:18:10" = global ptr null
@"Core:bool:lazyOr:18:14" = global ptr null
@"Core:bool:lazyOr:18:22" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:controlFlow:if:11" = global ptr null
@"Core:controlFlow:if:23" = global ptr null
@"Core:controlFlow:if:28" = global ptr null
@"Core:controlFlow:loop:11" = global ptr null
@"Core:controlFlow:loop:14:27" = global ptr null
@"Core:controlFlow:loop:14:35" = global ptr null
@"Core:controlFlow:loop:14:41:2" = global ptr null
@"Core:controlFlow:loop:14:42" = global ptr null
@"Core:controlFlow:loop:14:9" = global ptr null
@"Core:controlFlow:loop:15" = global ptr null
@"Core:controlFlow:recursive:17" = global ptr null
@"Core:controlFlow:recursive:18:0:3" = global ptr null
@"Core:controlFlow:recursive:18:5" = global ptr null
@"Core:controlFlow:recursive:23" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:13" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:int:compareTo:20" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:text:trim:4" = global ptr null
@"Core:text:trim:7" = global ptr null
@"Examples:higherLower:14:0:8" = global ptr null
@"Examples:higherLower:14:0:9" = global ptr null
@"Examples:higherLower:14:14:11" = global ptr null
@"Examples:higherLower:14:14:20" = global ptr null
@"Examples:higherLower:14:14:29" = global ptr null
@"Examples:higherLower:14:14:40:6:12" = global ptr null
@"Examples:higherLower:14:14:40:6:15" = global ptr null
@"Examples:higherLower:14:14:40:7" = global ptr null
@"Examples:higherLower:14:14:42" = global ptr null
@"Examples:higherLower:14:15" = global ptr null
@"Examples:higherLower:14:print:7" = global ptr null
@"Examples:higherLower:14:print:9" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_parse = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_text_trim_end = global ptr null
@fun_candy_builtin_text_trim_start = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Break = global ptr null
@tag_Continue = global ptr null
@tag_Error = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_Int = global ptr null
@tag_Less = global ptr null
@tag_Match = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Ok = global ptr null
@tag_Stdin = global ptr null
@tag_Stdout = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@num_42 = global ptr null
@text_. = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_Higher!" = global ptr null
@"text_Lower!" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_The `body` has to return `Continue` or `Break`." = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_Welcome to the number guessing game!" = global ptr null
@"text_What's your guess?" = global ptr null
@"text_You did it!" = global ptr null
@"text_Your guess must be a number." = global ptr null
@"text_`." = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"text_`function.is0 body` was not satisfied" = global ptr null
@"text_`function.is0 then` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`is text` was not satisfied" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then" = global ptr null
@"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.2 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__ifElse_1_equals_else.4 = global ptr null
@2 = global ptr null
@fun_Builtins__ifElse_1_equals_else.6 = global ptr null
@3 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.8 = global ptr null
@fun_Builtins__ifElse_1_equals_then.10 = global ptr null
@fun_Builtins__ifElse_1_equals_else.12 = global ptr null
@4 = global ptr null
@fun_Builtins__ifElse_1_equals_else.14 = global ptr null
@5 = global ptr null
@fun_Builtins__ifElse_1_equals_else.16 = global ptr null
@6 = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_then = global ptr null
@fun_Core_bool_is_1_equals_then.18 = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@7 = global ptr null
@fun_Core_bool_is_1_equals_else.20 = global ptr null
@8 = global ptr null
@fun_Core_bool_is_1_equals_else.22 = global ptr null
@9 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_then.24 = global ptr null
@fun_Core_bool_is_1_equals_then.26 = global ptr null
@fun_Core_bool_is_1_equals_else.28 = global ptr null
@10 = global ptr null
@fun_Core_bool_is_1_equals_else.30 = global ptr null
@11 = global ptr null
@fun_Core_bool_is_1_equals_else.32 = global ptr null
@12 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_is_1_equals_then.34 = global ptr null
@fun_Core_bool_is_1_equals_then.36 = global ptr null
@fun_Core_bool_is_1_equals_else.38 = global ptr null
@13 = global ptr null
@fun_Core_bool_is_1_equals_else.40 = global ptr null
@14 = global ptr null
@fun_Core_bool_is_1_equals_else.42 = global ptr null
@15 = global ptr null
@fun_Core_bool_is_1_isMatch_then.44 = global ptr null
@fun_Core_bool_is_1_isMatch_else.46 = global ptr null
@fun_Core_bool_is_1_equals_then.48 = global ptr null
@fun_Core_bool_is_1_equals_then.50 = global ptr null
@fun_Core_bool_is_1_equals_else.52 = global ptr null
@16 = global ptr null
@fun_Core_bool_is_1_equals_else.54 = global ptr null
@17 = global ptr null
@fun_Core_bool_is_1_equals_else.56 = global ptr null
@18 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.58 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else = global ptr null
@19 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.60 = global ptr null
@20 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.62 = global ptr null
@21 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.64 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.66 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.68 = global ptr null
@22 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.70 = global ptr null
@23 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.72 = global ptr null
@24 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched = global ptr null
@fun_Core_function_is0_11.74 = global ptr null
@fun_Core_bool_or = global ptr null
@fun_Core_bool_is_1_equals_then.76 = global ptr null
@fun_Core_bool_is_1_equals_then.78 = global ptr null
@fun_Core_bool_is_1_equals_else.80 = global ptr null
@25 = global ptr null
@fun_Core_bool_is_1_equals_else.82 = global ptr null
@26 = global ptr null
@fun_Core_bool_is_1_equals_else.84 = global ptr null
@27 = global ptr null
@fun_Core_bool_is_1_isMatch_then.86 = global ptr null
@fun_Core_bool_is_1_isMatch_else.88 = global ptr null
@fun_Core_bool_is_1_equals_then.90 = global ptr null
@fun_Core_bool_is_1_equals_then.92 = global ptr null
@fun_Core_bool_is_1_equals_else.94 = global ptr null
@28 = global ptr null
@fun_Core_bool_is_1_equals_else.96 = global ptr null
@29 = global ptr null
@fun_Core_bool_is_1_equals_else.98 = global ptr null
@30 = global ptr null
@fun_Core_bool_is_1_equals_then.100 = global ptr null
@fun_Core_bool_is_1_equals_then.102 = global ptr null
@fun_Core_bool_is_1_equals_else.104 = global ptr null
@31 = global ptr null
@fun_Core_bool_is_1_equals_else.106 = global ptr null
@32 = global ptr null
@fun_Core_bool_is_1_equals_else.108 = global ptr null
@33 = global ptr null
@fun_Core_bool_is_1_isMatch_then.110 = global ptr null
@fun_Core_bool_is_1_isMatch_else.112 = global ptr null
@fun_Core_bool_is_1_equals_then.114 = global ptr null
@fun_Core_bool_is_1_equals_then.116 = global ptr null
@fun_Core_bool_is_1_equals_else.118 = global ptr null
@34 = global ptr null
@fun_Core_bool_is_1_equals_else.120 = global ptr null
@35 = global ptr null
@fun_Core_bool_is_1_equals_else.122 = global ptr null
@36 = global ptr null
@fun_Core_bool_or_12 = global ptr null
@fun_Core_controlFlow_if = global ptr null
@fun_Core_bool_is_1_equals_then.124 = global ptr null
@fun_Core_bool_is_1_equals_then.126 = global ptr null
@fun_Core_bool_is_1_equals_else.128 = global ptr null
@37 = global ptr null
@fun_Core_bool_is_1_equals_else.130 = global ptr null
@38 = global ptr null
@fun_Core_bool_is_1_equals_else.132 = global ptr null
@39 = global ptr null
@fun_Core_bool_is_1_isMatch_then.134 = global ptr null
@fun_Core_bool_is_1_isMatch_else.136 = global ptr null
@fun_Core_bool_is_1_equals_then.138 = global ptr null
@fun_Core_bool_is_1_equals_then.140 = global ptr null
@fun_Core_bool_is_1_equals_else.142 = global ptr null
@40 = global ptr null
@fun_Core_bool_is_1_equals_else.144 = global ptr null
@41 = global ptr null
@fun_Core_bool_is_1_equals_else.146 = global ptr null
@42 = global ptr null
@fun_Core_function_is0_11.148 = global ptr null
@fun_Builtins__ifElse_1_equals_then.150 = global ptr null
@fun_Builtins__ifElse_1_equals_then.152 = global ptr null
@fun_Builtins__ifElse_1_equals_else.154 = global ptr null
@43 = global ptr null
@fun_Builtins__ifElse_1_equals_else.156 = global ptr null
@44 = global ptr null
@fun_Builtins__ifElse_1_equals_else.158 = global ptr null
@45 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then.160 = global ptr null
@fun_Builtins__ifElse_1_isMatch_else.162 = global ptr null
@fun_Builtins__ifElse_1_equals_then.164 = global ptr null
@fun_Builtins__ifElse_1_equals_then.166 = global ptr null
@fun_Builtins__ifElse_1_equals_else.168 = global ptr null
@46 = global ptr null
@fun_Builtins__ifElse_1_equals_else.170 = global ptr null
@47 = global ptr null
@fun_Builtins__ifElse_1_equals_else.172 = global ptr null
@48 = global ptr null
@fun_Core_controlFlow_recursive = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Core_controlFlow_recursive_18 = global ptr null
@fun_Core_controlFlow_recursive_18_0 = global ptr null
@fun_Core_controlFlow_loop = global ptr null
@fun_Core_function_is0_11.174 = global ptr null
@fun_Core_controlFlow_loop_14 = global ptr null
@fun_Core_function_is0_11.176 = global ptr null
@fun_Core_controlFlow_loop_14_41 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_function_is0_11.178 = global ptr null
@49 = global ptr null
@"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else" = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.180 = global ptr null
@fun_Core_result_is_1_equals_then.182 = global ptr null
@50 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@51 = global ptr null
@fun_Core_result_is_1_equals_else.184 = global ptr null
@52 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.186 = global ptr null
@fun_Core_result_is_1_equals_then.188 = global ptr null
@fun_Core_result_is_1_equals_then.190 = global ptr null
@53 = global ptr null
@fun_Core_result_is_1_equals_else.192 = global ptr null
@54 = global ptr null
@fun_Core_result_is_1_equals_else.194 = global ptr null
@55 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@fun_Core_function_is1_11.196 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.198 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.200 = global ptr null
@56 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@57 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.202 = global ptr null
@58 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.204 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.206 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.208 = global ptr null
@59 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.210 = global ptr null
@60 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.212 = global ptr null
@61 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_matched = global ptr null
@fun_Core_text_trim = global ptr null
@fun_Examples_higherLower_14_14_40_6_13 = global ptr null
@fun_Examples_higherLower_14_14_40_6_14 = global ptr null
@fun_Examples_higherLower_14 = global ptr null
@fun_Examples_higherLower_14_0 = global ptr null
@fun_Examples_higherLower_14_14 = global ptr null
@fun_Examples_higherLower_14_14_40 = global ptr null
@fun_Examples_higherLower_14_14_40_5 = global ptr null
@fun_Examples_higherLower_14_14_40_6 = global ptr null
@fun_Examples_higherLower_14_14_41 = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::functionRun:11", align 8
  %4 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::functionRun:16", align 8
  %6 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::functionRun:22", align 8
  %8 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::functionRun:5", align 8
  %10 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::getArgumentCount:11", align 8
  %12 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::getArgumentCount:5", align 8
  %14 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::ifElse:1", align 8
  %16 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::ifElse:11", align 8
  %18 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::ifElse:14", align 8
  %20 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::ifElse:19", align 8
  %22 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:25", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:28", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:33", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:41", align 8
  %30 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:5", align 8
  %32 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::intCompareTo:11", align 8
  %34 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::intCompareTo:18", align 8
  %36 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::intParse:11\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::intParse:11", align 8
  %38 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::intParse:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::intParse:5", align 8
  %40 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::structGet:12", align 8
  %42 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::structGet:14", align 8
  %44 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::structGet:21", align 8
  %46 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::structGet:5", align 8
  %48 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textTrimEnd:11\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::textTrimEnd:11", align 8
  %50 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textTrimStart:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::textTrimStart:11", align 8
  %52 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textTrimStart:5\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::textTrimStart:5", align 8
  %54 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::typeIs:19", align 8
  %56 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::typeIs:25", align 8
  %58 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::typeOf:5", align 8
  %60 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Core:bool:is:1", align 8
  %62 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Core:bool:lazyOr:16", align 8
  %64 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:18\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Core:bool:lazyOr:18", align 8
  %66 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:10\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Core:bool:lazyOr:18:10", align 8
  %68 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:14\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Core:bool:lazyOr:18:14", align 8
  %70 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:22\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Core:bool:lazyOr:18:22", align 8
  %72 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Core:bool:lazyOr:4", align 8
  %74 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Core:bool:or:13", align 8
  %76 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Core:bool:or:4", align 8
  %78 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Core:bool:or:9", align 8
  %80 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:11\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Core:controlFlow:if:11", align 8
  %82 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:23\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Core:controlFlow:if:23", align 8
  %84 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:28\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Core:controlFlow:if:28", align 8
  %86 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:controlFlow:loop:11\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Core:controlFlow:loop:11", align 8
  %88 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:controlFlow:loop:14:27\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Core:controlFlow:loop:14:27", align 8
  %90 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:controlFlow:loop:14:35\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Core:controlFlow:loop:14:35", align 8
  %92 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:loop:14:41:2\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Core:controlFlow:loop:14:41:2", align 8
  %94 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:controlFlow:loop:14:42\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Core:controlFlow:loop:14:42", align 8
  %96 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:controlFlow:loop:14:9\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Core:controlFlow:loop:14:9", align 8
  %98 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:controlFlow:loop:15\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Core:controlFlow:loop:15", align 8
  %100 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:17\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Core:controlFlow:recursive:17", align 8
  %102 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:18:0:3\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  %104 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:18:5\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Core:controlFlow:recursive:18:5", align 8
  %106 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:23\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Core:controlFlow:recursive:23", align 8
  %108 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Core:function:is0:11:3", align 8
  %110 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Core:function:is0:13", align 8
  %112 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Core:function:is1:11:3", align 8
  %114 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Core:function:is1:13", align 8
  %116 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Core:function:is2:11:3", align 8
  %118 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Core:function:is2:13", align 8
  %120 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Core:function:run:14", align 8
  %122 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Core:function:run:4", align 8
  %124 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:20\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Core:int:compareTo:20", align 8
  %126 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Core:int:compareTo:9", align 8
  %128 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Core:int:isLessThan:13", align 8
  %130 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Core:int:isLessThan:9", align 8
  %132 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Core:result:is:1", align 8
  %134 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Core:result:mapOrElse:16", align 8
  %136 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Core:result:mapOrElse:28", align 8
  %138 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Core:result:mapOrElse:30", align 8
  %140 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Core:result:mapOrElse:30:2", align 8
  %142 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Core:result:mapOrElse:30:5", align 8
  %144 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Core:result:mapOrElse:30:value", align 8
  %146 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %148 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Core:result:mapOrElse:4", align 8
  %150 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:text:trim:4\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Core:text:trim:4", align 8
  %152 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:text:trim:7\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Core:text:trim:7", align 8
  %154 = alloca i8, i64 28, align 1
  store [28 x i8] c"Examples:higherLower:14:0:8\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Examples:higherLower:14:0:8", align 8
  %156 = alloca i8, i64 28, align 1
  store [28 x i8] c"Examples:higherLower:14:0:9\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Examples:higherLower:14:0:9", align 8
  %158 = alloca i8, i64 30, align 1
  store [30 x i8] c"Examples:higherLower:14:14:11\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Examples:higherLower:14:14:11", align 8
  %160 = alloca i8, i64 30, align 1
  store [30 x i8] c"Examples:higherLower:14:14:20\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Examples:higherLower:14:14:20", align 8
  %162 = alloca i8, i64 30, align 1
  store [30 x i8] c"Examples:higherLower:14:14:29\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Examples:higherLower:14:14:29", align 8
  %164 = alloca i8, i64 35, align 1
  store [35 x i8] c"Examples:higherLower:14:14:40:6:12\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Examples:higherLower:14:14:40:6:12", align 8
  %166 = alloca i8, i64 35, align 1
  store [35 x i8] c"Examples:higherLower:14:14:40:6:15\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Examples:higherLower:14:14:40:6:15", align 8
  %168 = alloca i8, i64 32, align 1
  store [32 x i8] c"Examples:higherLower:14:14:40:7\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Examples:higherLower:14:14:40:7", align 8
  %170 = alloca i8, i64 30, align 1
  store [30 x i8] c"Examples:higherLower:14:14:42\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Examples:higherLower:14:14:42", align 8
  %172 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:higherLower:14:15\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Examples:higherLower:14:15", align 8
  %174 = alloca i8, i64 32, align 1
  store [32 x i8] c"Examples:higherLower:14:print:7\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Examples:higherLower:14:print:7", align 8
  %176 = alloca i8, i64 32, align 1
  store [32 x i8] c"Examples:higherLower:14:print:9\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Examples:higherLower:14:print:9", align 8
  %178 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"anonymous:$generated::needs", align 8
  %180 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %180, ptr @fun_candy_builtin_equals, align 8
  %181 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %181, ptr @fun_candy_builtin_get_argument_count, align 8
  %182 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %182, ptr @fun_candy_builtin_if_else, align 8
  %183 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %183, ptr @fun_candy_builtin_int_compare_to, align 8
  %184 = call ptr @make_candy_function(ptr @candy_builtin_int_parse, ptr null, i64 0)
  store ptr %184, ptr @fun_candy_builtin_int_parse, align 8
  %185 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %185, ptr @fun_candy_builtin_list_get, align 8
  %186 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %186, ptr @fun_candy_builtin_struct_get, align 8
  %187 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %187, ptr @fun_candy_builtin_struct_has_key, align 8
  %188 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %188, ptr @fun_candy_builtin_tag_get_value, align 8
  %189 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %189, ptr @fun_candy_builtin_tag_has_value, align 8
  %190 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %190, ptr @fun_candy_builtin_tag_without_value, align 8
  %191 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %191, ptr @fun_candy_builtin_text_concatenate, align 8
  %192 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_end, ptr null, i64 0)
  store ptr %192, ptr @fun_candy_builtin_text_trim_end, align 8
  %193 = call ptr @make_candy_function(ptr @candy_builtin_text_trim_start, ptr null, i64 0)
  store ptr %193, ptr @fun_candy_builtin_text_trim_start, align 8
  %194 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %194, ptr @fun_candy_builtin_to_debug_text, align 8
  %195 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %195, ptr @fun_candy_builtin_type_of, align 8
  %196 = alloca i8, i64 6, align 1
  store [6 x i8] c"Break\00", ptr %196, align 1
  %197 = call ptr @make_candy_tag(ptr %196, ptr null)
  store ptr %197, ptr @tag_Break, align 8
  %198 = alloca i8, i64 9, align 1
  store [9 x i8] c"Continue\00", ptr %198, align 1
  %199 = call ptr @make_candy_tag(ptr %198, ptr null)
  store ptr %199, ptr @tag_Continue, align 8
  %200 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %200, align 1
  %201 = call ptr @make_candy_tag(ptr %200, ptr null)
  store ptr %201, ptr @tag_Error, align 8
  %202 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %202, align 1
  %203 = call ptr @make_candy_tag(ptr %202, ptr null)
  store ptr %203, ptr @tag_False, align 8
  %204 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %204, align 1
  %205 = call ptr @make_candy_tag(ptr %204, ptr null)
  store ptr %205, ptr @tag_Function, align 8
  %206 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %206, align 1
  %207 = call ptr @make_candy_tag(ptr %206, ptr null)
  store ptr %207, ptr @tag_Int, align 8
  %208 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %208, align 1
  %209 = call ptr @make_candy_tag(ptr %208, ptr null)
  store ptr %209, ptr @tag_Less, align 8
  %210 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %210, align 1
  %211 = call ptr @make_candy_tag(ptr %210, ptr null)
  store ptr %211, ptr @tag_Match, align 8
  %212 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %212, align 1
  %213 = call ptr @make_candy_tag(ptr %212, ptr null)
  store ptr %213, ptr @tag_NoMatch, align 8
  %214 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %214, align 1
  %215 = call ptr @make_candy_tag(ptr %214, ptr null)
  store ptr %215, ptr @tag_Nothing, align 8
  %216 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %216, align 1
  %217 = call ptr @make_candy_tag(ptr %216, ptr null)
  store ptr %217, ptr @tag_Ok, align 8
  %218 = alloca i8, i64 6, align 1
  store [6 x i8] c"Stdin\00", ptr %218, align 1
  %219 = call ptr @make_candy_tag(ptr %218, ptr null)
  store ptr %219, ptr @tag_Stdin, align 8
  %220 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %220, align 1
  %221 = call ptr @make_candy_tag(ptr %220, ptr null)
  store ptr %221, ptr @tag_Stdout, align 8
  %222 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %222, align 1
  %223 = call ptr @make_candy_tag(ptr %222, ptr null)
  store ptr %223, ptr @tag_Struct, align 8
  %224 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %224, align 1
  %225 = call ptr @make_candy_tag(ptr %224, ptr null)
  store ptr %225, ptr @tag_Tag, align 8
  %226 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %226, align 1
  %227 = call ptr @make_candy_tag(ptr %226, ptr null)
  store ptr %227, ptr @tag_Text, align 8
  %228 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %228, align 1
  %229 = call ptr @make_candy_tag(ptr %228, ptr null)
  store ptr %229, ptr @tag_True, align 8
  %230 = call ptr @make_candy_int(i64 0)
  store ptr %230, ptr @num_0, align 8
  %231 = call ptr @make_candy_int(i64 1)
  store ptr %231, ptr @num_1, align 8
  %232 = call ptr @make_candy_int(i64 2)
  store ptr %232, ptr @num_2, align 8
  %233 = call ptr @make_candy_int(i64 42)
  store ptr %233, ptr @num_42, align 8
  %234 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @text_., align 8
  %236 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"text_Expected Error, got ", align 8
  %238 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"text_Expected False, got ", align 8
  %240 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"text_Expected Ok, got ", align 8
  %242 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"text_Expected True, got ", align 8
  %244 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"text_Expected a Tag, got `", align 8
  %246 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %248 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %250 = alloca i8, i64 8, align 1
  store [8 x i8] c"Higher!\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"text_Higher!", align 8
  %252 = alloca i8, i64 7, align 1
  store [7 x i8] c"Lower!\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"text_Lower!", align 8
  %254 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"text_No case matched the given expression.", align 8
  %256 = alloca i8, i64 48, align 1
  store [48 x i8] c"The `body` has to return `Continue` or `Break`.\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"text_The `body` has to return `Continue` or `Break`.", align 8
  %258 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %260 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %262 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"text_The `reason` must be a text.", align 8
  %264 = alloca i8, i64 37, align 1
  store [37 x i8] c"Welcome to the number guessing game!\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"text_Welcome to the number guessing game!", align 8
  %266 = alloca i8, i64 19, align 1
  store [19 x i8] c"What's your guess?\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"text_What's your guess?", align 8
  %268 = alloca i8, i64 12, align 1
  store [12 x i8] c"You did it!\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"text_You did it!", align 8
  %270 = alloca i8, i64 29, align 1
  store [29 x i8] c"Your guess must be a number.\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"text_Your guess must be a number.", align 8
  %272 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"text_`.", align 8
  %274 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %276 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"text_`b` didn't return a bool.", align 8
  %278 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"text_`bool.is condition` was not satisfied", align 8
  %280 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %282 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %284 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %286 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %288 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %290 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"text_`function.is0 b` was not satisfied", align 8
  %292 = alloca i8, i64 38, align 1
  store [38 x i8] c"`function.is0 body` was not satisfied\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"text_`function.is0 body` was not satisfied", align 8
  %294 = alloca i8, i64 38, align 1
  store [38 x i8] c"`function.is0 then` was not satisfied\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"text_`function.is0 then` was not satisfied", align 8
  %296 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %298 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %300 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"text_`is a` was not satisfied", align 8
  %302 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"text_`is b` was not satisfied", align 8
  %304 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"text_`is result` was not satisfied", align 8
  %306 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is text` was not satisfied\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"text_`is text` was not satisfied", align 8
  %308 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"text_`is valueB` was not satisfied", align 8
  %310 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"text_`is0 body` was not satisfied", align 8
  %312 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %314 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %316 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %318 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %320 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %322 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %323 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %322, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %323, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %324 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %325 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %324, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %325, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %326 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %327 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %326, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %327, ptr @"fun_anonymous_$generated__needs", align 8
  %328 = alloca ptr, i64 2, align 8
  %329 = load ptr, ptr @tag_Match, align 8
  %330 = getelementptr ptr, ptr %328, i64 0
  store ptr %329, ptr %330, align 8
  %331 = getelementptr ptr, ptr %328, i64 1
  store ptr null, ptr %331, align 8
  %332 = call ptr @make_candy_list(ptr %328)
  store ptr %332, ptr @0, align 8
  %333 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %334 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", ptr %333, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %334, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %335 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %336 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", ptr %335, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %336, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %337 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %338 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %337, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %338, ptr @fun_Builtins__ifElse, align 8
  %339 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %340 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %339, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %340, ptr @fun_Core_bool_is, align 8
  %341 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %342 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch, ptr %341, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %342, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %343 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %344 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %343, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %344, ptr @fun_Core_bool_lazyOr, align 8
  %345 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %346 = call ptr @make_candy_function(ptr @Core_bool_or, ptr %345, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %346, ptr @fun_Core_bool_or, align 8
  %347 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %348 = call ptr @make_candy_function(ptr @Core_controlFlow_if, ptr %347, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %348, ptr @fun_Core_controlFlow_if, align 8
  %349 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %350 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive, ptr %349, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %350, ptr @fun_Core_controlFlow_recursive, align 8
  %351 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %352 = call ptr @make_candy_function(ptr @Core_controlFlow_loop, ptr %351, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %352, ptr @fun_Core_controlFlow_loop, align 8
  %353 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %354 = call ptr @make_candy_function(ptr @Core_function_run, ptr %353, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %354, ptr @fun_Core_function_run, align 8
  %355 = alloca ptr, i64 3, align 8
  %356 = load ptr, ptr @tag_NoMatch, align 8
  %357 = getelementptr ptr, ptr %355, i64 0
  store ptr %356, ptr %357, align 8
  %358 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %359 = getelementptr ptr, ptr %355, i64 1
  store ptr %358, ptr %359, align 8
  %360 = getelementptr ptr, ptr %355, i64 2
  store ptr null, ptr %360, align 8
  %361 = call ptr @make_candy_list(ptr %355)
  store ptr %361, ptr @49, align 8
  %362 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %363 = call ptr @make_candy_function(ptr @"Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", ptr %362, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %363, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %364 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %365 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %364, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %365, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %366 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %367 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %366, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %367, ptr @fun_Core_result_mapOrElse, align 8
  %368 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %369 = call ptr @make_candy_function(ptr @Core_text_trim, ptr %368, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %369, ptr @fun_Core_text_trim, align 8
  %370 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %371 = call ptr @make_candy_function(ptr @Examples_higherLower_14_14_40_6_13, ptr %370, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %371, ptr @fun_Examples_higherLower_14_14_40_6_13, align 8
  %372 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %373 = call ptr @make_candy_function(ptr @Examples_higherLower_14_14_40_6_14, ptr %372, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %373, ptr @fun_Examples_higherLower_14_14_40_6_14, align 8
  %374 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %375 = call ptr @make_candy_function(ptr @Examples_higherLower_14, ptr %374, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %375, ptr @fun_Examples_higherLower_14, align 8
  %376 = call ptr @run_candy_main(ptr @fun_Examples_higherLower_14, ptr @candy_environment)
  call void @print_candy_value(ptr %376)
  %377 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %377)
  %378 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %378)
  %379 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %379)
  %380 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %380)
  %381 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %381)
  %382 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %382)
  %383 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %383)
  %384 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %384)
  %385 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %385)
  %386 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %386)
  %387 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %387)
  %388 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %388)
  %389 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %389)
  %390 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %390)
  %391 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %391)
  %392 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %392)
  %393 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %393)
  %394 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %394)
  %395 = load ptr, ptr @"Builtins::intParse:11", align 8
  call void @free_candy_value(ptr %395)
  %396 = load ptr, ptr @"Builtins::intParse:5", align 8
  call void @free_candy_value(ptr %396)
  %397 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %397)
  %398 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %398)
  %399 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %399)
  %400 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %400)
  %401 = load ptr, ptr @"Builtins::textTrimEnd:11", align 8
  call void @free_candy_value(ptr %401)
  %402 = load ptr, ptr @"Builtins::textTrimStart:11", align 8
  call void @free_candy_value(ptr %402)
  %403 = load ptr, ptr @"Builtins::textTrimStart:5", align 8
  call void @free_candy_value(ptr %403)
  %404 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %404)
  %405 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %405)
  %406 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %406)
  %407 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %407)
  %408 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %408)
  %409 = load ptr, ptr @"Core:bool:lazyOr:18", align 8
  call void @free_candy_value(ptr %409)
  %410 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  call void @free_candy_value(ptr %410)
  %411 = load ptr, ptr @"Core:bool:lazyOr:18:14", align 8
  call void @free_candy_value(ptr %411)
  %412 = load ptr, ptr @"Core:bool:lazyOr:18:22", align 8
  call void @free_candy_value(ptr %412)
  %413 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %413)
  %414 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %414)
  %415 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %415)
  %416 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %416)
  %417 = load ptr, ptr @"Core:controlFlow:if:11", align 8
  call void @free_candy_value(ptr %417)
  %418 = load ptr, ptr @"Core:controlFlow:if:23", align 8
  call void @free_candy_value(ptr %418)
  %419 = load ptr, ptr @"Core:controlFlow:if:28", align 8
  call void @free_candy_value(ptr %419)
  %420 = load ptr, ptr @"Core:controlFlow:loop:11", align 8
  call void @free_candy_value(ptr %420)
  %421 = load ptr, ptr @"Core:controlFlow:loop:14:27", align 8
  call void @free_candy_value(ptr %421)
  %422 = load ptr, ptr @"Core:controlFlow:loop:14:35", align 8
  call void @free_candy_value(ptr %422)
  %423 = load ptr, ptr @"Core:controlFlow:loop:14:41:2", align 8
  call void @free_candy_value(ptr %423)
  %424 = load ptr, ptr @"Core:controlFlow:loop:14:42", align 8
  call void @free_candy_value(ptr %424)
  %425 = load ptr, ptr @"Core:controlFlow:loop:14:9", align 8
  call void @free_candy_value(ptr %425)
  %426 = load ptr, ptr @"Core:controlFlow:loop:15", align 8
  call void @free_candy_value(ptr %426)
  %427 = load ptr, ptr @"Core:controlFlow:recursive:17", align 8
  call void @free_candy_value(ptr %427)
  %428 = load ptr, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  call void @free_candy_value(ptr %428)
  %429 = load ptr, ptr @"Core:controlFlow:recursive:18:5", align 8
  call void @free_candy_value(ptr %429)
  %430 = load ptr, ptr @"Core:controlFlow:recursive:23", align 8
  call void @free_candy_value(ptr %430)
  %431 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %431)
  %432 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %432)
  %433 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %433)
  %434 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %434)
  %435 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %435)
  %436 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %436)
  %437 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %437)
  %438 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %438)
  %439 = load ptr, ptr @"Core:int:compareTo:20", align 8
  call void @free_candy_value(ptr %439)
  %440 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %440)
  %441 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %441)
  %442 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %442)
  %443 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %443)
  %444 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %444)
  %445 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %445)
  %446 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %446)
  %447 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %447)
  %448 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %448)
  %449 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %449)
  %450 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %450)
  %451 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %451)
  %452 = load ptr, ptr @"Core:text:trim:4", align 8
  call void @free_candy_value(ptr %452)
  %453 = load ptr, ptr @"Core:text:trim:7", align 8
  call void @free_candy_value(ptr %453)
  %454 = load ptr, ptr @"Examples:higherLower:14:0:8", align 8
  call void @free_candy_value(ptr %454)
  %455 = load ptr, ptr @"Examples:higherLower:14:0:9", align 8
  call void @free_candy_value(ptr %455)
  %456 = load ptr, ptr @"Examples:higherLower:14:14:11", align 8
  call void @free_candy_value(ptr %456)
  %457 = load ptr, ptr @"Examples:higherLower:14:14:20", align 8
  call void @free_candy_value(ptr %457)
  %458 = load ptr, ptr @"Examples:higherLower:14:14:29", align 8
  call void @free_candy_value(ptr %458)
  %459 = load ptr, ptr @"Examples:higherLower:14:14:40:6:12", align 8
  call void @free_candy_value(ptr %459)
  %460 = load ptr, ptr @"Examples:higherLower:14:14:40:6:15", align 8
  call void @free_candy_value(ptr %460)
  %461 = load ptr, ptr @"Examples:higherLower:14:14:40:7", align 8
  call void @free_candy_value(ptr %461)
  %462 = load ptr, ptr @"Examples:higherLower:14:14:42", align 8
  call void @free_candy_value(ptr %462)
  %463 = load ptr, ptr @"Examples:higherLower:14:15", align 8
  call void @free_candy_value(ptr %463)
  %464 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  call void @free_candy_value(ptr %464)
  %465 = load ptr, ptr @"Examples:higherLower:14:print:9", align 8
  call void @free_candy_value(ptr %465)
  %466 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %466)
  %467 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %467)
  %468 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %468)
  %469 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %469)
  %470 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %470)
  %471 = load ptr, ptr @fun_candy_builtin_int_parse, align 8
  call void @free_candy_value(ptr %471)
  %472 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %472)
  %473 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %473)
  %474 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %474)
  %475 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %475)
  %476 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %476)
  %477 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %477)
  %478 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %478)
  %479 = load ptr, ptr @fun_candy_builtin_text_trim_end, align 8
  call void @free_candy_value(ptr %479)
  %480 = load ptr, ptr @fun_candy_builtin_text_trim_start, align 8
  call void @free_candy_value(ptr %480)
  %481 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %481)
  %482 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %482)
  %483 = load ptr, ptr @tag_Break, align 8
  call void @free_candy_value(ptr %483)
  %484 = load ptr, ptr @tag_Continue, align 8
  call void @free_candy_value(ptr %484)
  %485 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %485)
  %486 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %486)
  %487 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %487)
  %488 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %488)
  %489 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %489)
  %490 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %490)
  %491 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %491)
  %492 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %492)
  %493 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %493)
  %494 = load ptr, ptr @tag_Stdin, align 8
  call void @free_candy_value(ptr %494)
  %495 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %495)
  %496 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %496)
  %497 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %497)
  %498 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %498)
  %499 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %499)
  %500 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %500)
  %501 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %501)
  %502 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %502)
  %503 = load ptr, ptr @num_42, align 8
  call void @free_candy_value(ptr %503)
  %504 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %504)
  %505 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %505)
  %506 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %506)
  %507 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %507)
  %508 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %508)
  %509 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %509)
  %510 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %510)
  %511 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %511)
  %512 = load ptr, ptr @"text_Higher!", align 8
  call void @free_candy_value(ptr %512)
  %513 = load ptr, ptr @"text_Lower!", align 8
  call void @free_candy_value(ptr %513)
  %514 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %514)
  %515 = load ptr, ptr @"text_The `body` has to return `Continue` or `Break`.", align 8
  call void @free_candy_value(ptr %515)
  %516 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %516)
  %517 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %517)
  %518 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %518)
  %519 = load ptr, ptr @"text_Welcome to the number guessing game!", align 8
  call void @free_candy_value(ptr %519)
  %520 = load ptr, ptr @"text_What's your guess?", align 8
  call void @free_candy_value(ptr %520)
  %521 = load ptr, ptr @"text_You did it!", align 8
  call void @free_candy_value(ptr %521)
  %522 = load ptr, ptr @"text_Your guess must be a number.", align 8
  call void @free_candy_value(ptr %522)
  %523 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %523)
  %524 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %524)
  %525 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %525)
  %526 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %526)
  %527 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %527)
  %528 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %528)
  %529 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %529)
  %530 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %530)
  %531 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %531)
  %532 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %532)
  %533 = load ptr, ptr @"text_`function.is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %533)
  %534 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  call void @free_candy_value(ptr %534)
  %535 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %535)
  %536 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %536)
  %537 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %537)
  %538 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %538)
  %539 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %539)
  %540 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  call void @free_candy_value(ptr %540)
  %541 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %541)
  %542 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %542)
  %543 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %543)
  %544 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %544)
  %545 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %545)
  %546 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %546)
  %547 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %547)
  %548 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %548)
  %549 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %549)
  %550 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %550)
  %551 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %551)
  %552 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %552)
  %553 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %553)
  %554 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %554)
  %555 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %555)
  %556 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  call void @free_candy_value(ptr %556)
  %557 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %557)
  %558 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %558)
  %559 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %559)
  %560 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  call void @free_candy_value(ptr %560)
  %561 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %561)
  %562 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %562)
  %563 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  call void @free_candy_value(ptr %563)
  %564 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %564)
  %565 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  call void @free_candy_value(ptr %565)
  %566 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %566)
  %567 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %567)
  %568 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %568)
  %569 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  call void @free_candy_value(ptr %569)
  %570 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  call void @free_candy_value(ptr %570)
  %571 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  call void @free_candy_value(ptr %571)
  %572 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %572)
  %573 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  call void @free_candy_value(ptr %573)
  %574 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %574)
  %575 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  call void @free_candy_value(ptr %575)
  %576 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %576)
  %577 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %577)
  %578 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  call void @free_candy_value(ptr %578)
  %579 = load ptr, ptr @fun_Core_bool_is_1_equals_then.18, align 8
  call void @free_candy_value(ptr %579)
  %580 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %580)
  %581 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %581)
  %582 = load ptr, ptr @fun_Core_bool_is_1_equals_else.20, align 8
  call void @free_candy_value(ptr %582)
  %583 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %583)
  %584 = load ptr, ptr @fun_Core_bool_is_1_equals_else.22, align 8
  call void @free_candy_value(ptr %584)
  %585 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %585)
  %586 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %586)
  %587 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %587)
  %588 = load ptr, ptr @fun_Core_bool_is_1_equals_then.24, align 8
  call void @free_candy_value(ptr %588)
  %589 = load ptr, ptr @fun_Core_bool_is_1_equals_then.26, align 8
  call void @free_candy_value(ptr %589)
  %590 = load ptr, ptr @fun_Core_bool_is_1_equals_else.28, align 8
  call void @free_candy_value(ptr %590)
  %591 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %591)
  %592 = load ptr, ptr @fun_Core_bool_is_1_equals_else.30, align 8
  call void @free_candy_value(ptr %592)
  %593 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %593)
  %594 = load ptr, ptr @fun_Core_bool_is_1_equals_else.32, align 8
  call void @free_candy_value(ptr %594)
  %595 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %595)
  %596 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %596)
  %597 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %597)
  %598 = load ptr, ptr @fun_Core_bool_is_1_equals_then.34, align 8
  call void @free_candy_value(ptr %598)
  %599 = load ptr, ptr @fun_Core_bool_is_1_equals_then.36, align 8
  call void @free_candy_value(ptr %599)
  %600 = load ptr, ptr @fun_Core_bool_is_1_equals_else.38, align 8
  call void @free_candy_value(ptr %600)
  %601 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %601)
  %602 = load ptr, ptr @fun_Core_bool_is_1_equals_else.40, align 8
  call void @free_candy_value(ptr %602)
  %603 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %603)
  %604 = load ptr, ptr @fun_Core_bool_is_1_equals_else.42, align 8
  call void @free_candy_value(ptr %604)
  %605 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %605)
  %606 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.44, align 8
  call void @free_candy_value(ptr %606)
  %607 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.46, align 8
  call void @free_candy_value(ptr %607)
  %608 = load ptr, ptr @fun_Core_bool_is_1_equals_then.48, align 8
  call void @free_candy_value(ptr %608)
  %609 = load ptr, ptr @fun_Core_bool_is_1_equals_then.50, align 8
  call void @free_candy_value(ptr %609)
  %610 = load ptr, ptr @fun_Core_bool_is_1_equals_else.52, align 8
  call void @free_candy_value(ptr %610)
  %611 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %611)
  %612 = load ptr, ptr @fun_Core_bool_is_1_equals_else.54, align 8
  call void @free_candy_value(ptr %612)
  %613 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %613)
  %614 = load ptr, ptr @fun_Core_bool_is_1_equals_else.56, align 8
  call void @free_candy_value(ptr %614)
  %615 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %615)
  %616 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %616)
  %617 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  call void @free_candy_value(ptr %617)
  %618 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.58, align 8
  call void @free_candy_value(ptr %618)
  %619 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  call void @free_candy_value(ptr %619)
  %620 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %620)
  %621 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.60, align 8
  call void @free_candy_value(ptr %621)
  %622 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %622)
  %623 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.62, align 8
  call void @free_candy_value(ptr %623)
  %624 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %624)
  %625 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %625)
  %626 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.64, align 8
  call void @free_candy_value(ptr %626)
  %627 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.66, align 8
  call void @free_candy_value(ptr %627)
  %628 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.68, align 8
  call void @free_candy_value(ptr %628)
  %629 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %629)
  %630 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.70, align 8
  call void @free_candy_value(ptr %630)
  %631 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %631)
  %632 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.72, align 8
  call void @free_candy_value(ptr %632)
  %633 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %633)
  %634 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  call void @free_candy_value(ptr %634)
  %635 = load ptr, ptr @fun_Core_function_is0_11.74, align 8
  call void @free_candy_value(ptr %635)
  %636 = load ptr, ptr @fun_Core_bool_or, align 8
  call void @free_candy_value(ptr %636)
  %637 = load ptr, ptr @fun_Core_bool_is_1_equals_then.76, align 8
  call void @free_candy_value(ptr %637)
  %638 = load ptr, ptr @fun_Core_bool_is_1_equals_then.78, align 8
  call void @free_candy_value(ptr %638)
  %639 = load ptr, ptr @fun_Core_bool_is_1_equals_else.80, align 8
  call void @free_candy_value(ptr %639)
  %640 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %640)
  %641 = load ptr, ptr @fun_Core_bool_is_1_equals_else.82, align 8
  call void @free_candy_value(ptr %641)
  %642 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %642)
  %643 = load ptr, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  call void @free_candy_value(ptr %643)
  %644 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %644)
  %645 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.86, align 8
  call void @free_candy_value(ptr %645)
  %646 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.88, align 8
  call void @free_candy_value(ptr %646)
  %647 = load ptr, ptr @fun_Core_bool_is_1_equals_then.90, align 8
  call void @free_candy_value(ptr %647)
  %648 = load ptr, ptr @fun_Core_bool_is_1_equals_then.92, align 8
  call void @free_candy_value(ptr %648)
  %649 = load ptr, ptr @fun_Core_bool_is_1_equals_else.94, align 8
  call void @free_candy_value(ptr %649)
  %650 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %650)
  %651 = load ptr, ptr @fun_Core_bool_is_1_equals_else.96, align 8
  call void @free_candy_value(ptr %651)
  %652 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %652)
  %653 = load ptr, ptr @fun_Core_bool_is_1_equals_else.98, align 8
  call void @free_candy_value(ptr %653)
  %654 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %654)
  %655 = load ptr, ptr @fun_Core_bool_is_1_equals_then.100, align 8
  call void @free_candy_value(ptr %655)
  %656 = load ptr, ptr @fun_Core_bool_is_1_equals_then.102, align 8
  call void @free_candy_value(ptr %656)
  %657 = load ptr, ptr @fun_Core_bool_is_1_equals_else.104, align 8
  call void @free_candy_value(ptr %657)
  %658 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %658)
  %659 = load ptr, ptr @fun_Core_bool_is_1_equals_else.106, align 8
  call void @free_candy_value(ptr %659)
  %660 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %660)
  %661 = load ptr, ptr @fun_Core_bool_is_1_equals_else.108, align 8
  call void @free_candy_value(ptr %661)
  %662 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %662)
  %663 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.110, align 8
  call void @free_candy_value(ptr %663)
  %664 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.112, align 8
  call void @free_candy_value(ptr %664)
  %665 = load ptr, ptr @fun_Core_bool_is_1_equals_then.114, align 8
  call void @free_candy_value(ptr %665)
  %666 = load ptr, ptr @fun_Core_bool_is_1_equals_then.116, align 8
  call void @free_candy_value(ptr %666)
  %667 = load ptr, ptr @fun_Core_bool_is_1_equals_else.118, align 8
  call void @free_candy_value(ptr %667)
  %668 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %668)
  %669 = load ptr, ptr @fun_Core_bool_is_1_equals_else.120, align 8
  call void @free_candy_value(ptr %669)
  %670 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %670)
  %671 = load ptr, ptr @fun_Core_bool_is_1_equals_else.122, align 8
  call void @free_candy_value(ptr %671)
  %672 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %672)
  %673 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %673)
  %674 = load ptr, ptr @fun_Core_controlFlow_if, align 8
  call void @free_candy_value(ptr %674)
  %675 = load ptr, ptr @fun_Core_bool_is_1_equals_then.124, align 8
  call void @free_candy_value(ptr %675)
  %676 = load ptr, ptr @fun_Core_bool_is_1_equals_then.126, align 8
  call void @free_candy_value(ptr %676)
  %677 = load ptr, ptr @fun_Core_bool_is_1_equals_else.128, align 8
  call void @free_candy_value(ptr %677)
  %678 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %678)
  %679 = load ptr, ptr @fun_Core_bool_is_1_equals_else.130, align 8
  call void @free_candy_value(ptr %679)
  %680 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %680)
  %681 = load ptr, ptr @fun_Core_bool_is_1_equals_else.132, align 8
  call void @free_candy_value(ptr %681)
  %682 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %682)
  %683 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.134, align 8
  call void @free_candy_value(ptr %683)
  %684 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.136, align 8
  call void @free_candy_value(ptr %684)
  %685 = load ptr, ptr @fun_Core_bool_is_1_equals_then.138, align 8
  call void @free_candy_value(ptr %685)
  %686 = load ptr, ptr @fun_Core_bool_is_1_equals_then.140, align 8
  call void @free_candy_value(ptr %686)
  %687 = load ptr, ptr @fun_Core_bool_is_1_equals_else.142, align 8
  call void @free_candy_value(ptr %687)
  %688 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %688)
  %689 = load ptr, ptr @fun_Core_bool_is_1_equals_else.144, align 8
  call void @free_candy_value(ptr %689)
  %690 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %690)
  %691 = load ptr, ptr @fun_Core_bool_is_1_equals_else.146, align 8
  call void @free_candy_value(ptr %691)
  %692 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %692)
  %693 = load ptr, ptr @fun_Core_function_is0_11.148, align 8
  call void @free_candy_value(ptr %693)
  %694 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.150, align 8
  call void @free_candy_value(ptr %694)
  %695 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.152, align 8
  call void @free_candy_value(ptr %695)
  %696 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.154, align 8
  call void @free_candy_value(ptr %696)
  %697 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %697)
  %698 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.156, align 8
  call void @free_candy_value(ptr %698)
  %699 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %699)
  %700 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.158, align 8
  call void @free_candy_value(ptr %700)
  %701 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %701)
  %702 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then.160, align 8
  call void @free_candy_value(ptr %702)
  %703 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else.162, align 8
  call void @free_candy_value(ptr %703)
  %704 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.164, align 8
  call void @free_candy_value(ptr %704)
  %705 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.166, align 8
  call void @free_candy_value(ptr %705)
  %706 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.168, align 8
  call void @free_candy_value(ptr %706)
  %707 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %707)
  %708 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.170, align 8
  call void @free_candy_value(ptr %708)
  %709 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %709)
  %710 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.172, align 8
  call void @free_candy_value(ptr %710)
  %711 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %711)
  %712 = load ptr, ptr @fun_Core_controlFlow_recursive, align 8
  call void @free_candy_value(ptr %712)
  %713 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %713)
  %714 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  call void @free_candy_value(ptr %714)
  %715 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  call void @free_candy_value(ptr %715)
  %716 = load ptr, ptr @fun_Core_controlFlow_loop, align 8
  call void @free_candy_value(ptr %716)
  %717 = load ptr, ptr @fun_Core_function_is0_11.174, align 8
  call void @free_candy_value(ptr %717)
  %718 = load ptr, ptr @fun_Core_controlFlow_loop_14, align 8
  call void @free_candy_value(ptr %718)
  %719 = load ptr, ptr @fun_Core_function_is0_11.176, align 8
  call void @free_candy_value(ptr %719)
  %720 = load ptr, ptr @fun_Core_controlFlow_loop_14_41, align 8
  call void @free_candy_value(ptr %720)
  %721 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %721)
  %722 = load ptr, ptr @fun_Core_function_is0_11.178, align 8
  call void @free_candy_value(ptr %722)
  %723 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %723)
  %724 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  call void @free_candy_value(ptr %724)
  %725 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %725)
  %726 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %726)
  %727 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %727)
  %728 = load ptr, ptr @fun_Core_result_is_1_equals_then.180, align 8
  call void @free_candy_value(ptr %728)
  %729 = load ptr, ptr @fun_Core_result_is_1_equals_then.182, align 8
  call void @free_candy_value(ptr %729)
  %730 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %730)
  %731 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %731)
  %732 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %732)
  %733 = load ptr, ptr @fun_Core_result_is_1_equals_else.184, align 8
  call void @free_candy_value(ptr %733)
  %734 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %734)
  %735 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %735)
  %736 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %736)
  %737 = load ptr, ptr @fun_Core_result_is_1_equals_then.186, align 8
  call void @free_candy_value(ptr %737)
  %738 = load ptr, ptr @fun_Core_result_is_1_equals_then.188, align 8
  call void @free_candy_value(ptr %738)
  %739 = load ptr, ptr @fun_Core_result_is_1_equals_then.190, align 8
  call void @free_candy_value(ptr %739)
  %740 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %740)
  %741 = load ptr, ptr @fun_Core_result_is_1_equals_else.192, align 8
  call void @free_candy_value(ptr %741)
  %742 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %742)
  %743 = load ptr, ptr @fun_Core_result_is_1_equals_else.194, align 8
  call void @free_candy_value(ptr %743)
  %744 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %744)
  %745 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %745)
  %746 = load ptr, ptr @fun_Core_function_is1_11.196, align 8
  call void @free_candy_value(ptr %746)
  %747 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %747)
  %748 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.198, align 8
  call void @free_candy_value(ptr %748)
  %749 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.200, align 8
  call void @free_candy_value(ptr %749)
  %750 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %750)
  %751 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %751)
  %752 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %752)
  %753 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.202, align 8
  call void @free_candy_value(ptr %753)
  %754 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %754)
  %755 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  call void @free_candy_value(ptr %755)
  %756 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %756)
  %757 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.204, align 8
  call void @free_candy_value(ptr %757)
  %758 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.206, align 8
  call void @free_candy_value(ptr %758)
  %759 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.208, align 8
  call void @free_candy_value(ptr %759)
  %760 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %760)
  %761 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.210, align 8
  call void @free_candy_value(ptr %761)
  %762 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %762)
  %763 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.212, align 8
  call void @free_candy_value(ptr %763)
  %764 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %764)
  %765 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  call void @free_candy_value(ptr %765)
  %766 = load ptr, ptr @fun_Core_text_trim, align 8
  call void @free_candy_value(ptr %766)
  %767 = load ptr, ptr @fun_Examples_higherLower_14_14_40_6_13, align 8
  call void @free_candy_value(ptr %767)
  %768 = load ptr, ptr @fun_Examples_higherLower_14_14_40_6_14, align 8
  call void @free_candy_value(ptr %768)
  %769 = load ptr, ptr @fun_Examples_higherLower_14, align 8
  call void @free_candy_value(ptr %769)
  %770 = load ptr, ptr @fun_Examples_higherLower_14_0, align 8
  call void @free_candy_value(ptr %770)
  %771 = load ptr, ptr @fun_Examples_higherLower_14_14, align 8
  call void @free_candy_value(ptr %771)
  %772 = load ptr, ptr @fun_Examples_higherLower_14_14_40, align 8
  call void @free_candy_value(ptr %772)
  %773 = load ptr, ptr @fun_Examples_higherLower_14_14_40_5, align 8
  call void @free_candy_value(ptr %773)
  %774 = load ptr, ptr @fun_Examples_higherLower_14_14_40_6, align 8
  call void @free_candy_value(ptr %774)
  %775 = load ptr, ptr @fun_Examples_higherLower_14_14_41, align 8
  call void @free_candy_value(ptr %775)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_parse(ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_text_trim_end(ptr)

declare ptr @candy_builtin_text_trim_start(ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then,":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.5, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %41 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr null)
  %42 = load ptr, ptr @tag_Function, align 8
  %43 = call ptr @candy_builtin_equals(ptr %37, ptr %42)
  %44 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %45 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %48 = load ptr, ptr @num_0, align 8
  %49 = call ptr @candy_builtin_equals(ptr %47, ptr %48)
  %50 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %51 = call ptr @"anonymous_$generated__needs"(ptr %49, ptr %50, ptr null)
  %52 = call ptr @candy_builtin_type_of(ptr %2)
  %53 = load ptr, ptr @tag_Function, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %56 = call ptr @"anonymous_$generated__needs"(ptr %54, ptr %55, ptr null)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %52, ptr %57)
  %59 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %60 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %63 = load ptr, ptr @num_0, align 8
  %64 = call ptr @candy_builtin_equals(ptr %62, ptr %63)
  %65 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %64, ptr %65, ptr null)
  %67 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %67
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.1, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.3, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.1(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__ifElse_1_equals_else.3(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__ifElse_1_equals_else.5(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.15, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.7(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.9, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.13, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.9(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.11, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else.11(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__ifElse_1_equals_else.13(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__ifElse_1_equals_else.15(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.21, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.22, align 8
  %10 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.22, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %32 = call ptr @candy_builtin_if_else(ptr %29, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_bool_is_1_equals_then(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.17, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.18, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.19, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.20, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.18, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.20, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.17(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @7, align 8
  ret ptr @7
}

define ptr @Core_bool_is_1_equals_else.19(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Core_bool_is_1_equals_else.21(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @9, align 8
  ret ptr @9
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.23, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.24, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.31, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.32, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.24, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.32, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.23(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.25, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.26, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.29, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.30, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.26, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.30, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.25(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.27, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.28, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.28, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.27(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @10, align 8
  ret ptr @10
}

define ptr @Core_bool_is_1_equals_else.29(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @11, align 8
  ret ptr @11
}

define ptr @Core_bool_is_1_equals_else.31(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch() {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1) {
Core_bool_lazyOr:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.33, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_bool_is_1_equals_then.34, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.41, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.42, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_then.34, align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.42, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.43, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_is_1_isMatch_then.44, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.45, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_is_1_isMatch_else.46, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.44, align 8
  %25 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.46, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Function, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr }, ptr %39, i32 0, i32 0
  store ptr %1, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Core_function_is0_11, align 8
  %42 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %43 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %44 = call ptr @Builtins__ifElse(ptr %38, ptr %42, ptr %43)
  %45 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %44, ptr %45, ptr null)
  %47 = call ptr @candy_builtin_type_of(ptr %0)
  %48 = load ptr, ptr @tag_Tag, align 8
  %49 = call ptr @candy_builtin_equals(ptr %48, ptr %47)
  %50 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %51 = getelementptr inbounds { ptr }, ptr %50, i32 0, i32 0
  store ptr %0, ptr %51, align 8
  %52 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then, ptr %50, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %52, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %53 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %54 = getelementptr inbounds { ptr }, ptr %53, i32 0, i32 0
  store ptr %47, ptr %54, align 8
  %55 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.61, ptr %53, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %55, ptr @fun_Core_bool_lazyOr_18_equals_else.62, align 8
  %56 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %57 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.62, align 8
  %58 = call ptr @candy_builtin_if_else(ptr %49, ptr %56, ptr %57)
  %59 = load ptr, ptr @num_0, align 8
  %60 = call ptr @candy_builtin_list_get(ptr %58, ptr %59)
  %61 = load ptr, ptr @tag_Match, align 8
  %62 = call ptr @candy_builtin_equals(ptr %60, ptr %61)
  %63 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %64 = getelementptr inbounds { ptr, ptr }, ptr %63, i32 0, i32 0
  store ptr %0, ptr %64, align 8
  %65 = getelementptr inbounds { ptr, ptr }, ptr %63, i32 0, i32 1
  store ptr %1, ptr %65, align 8
  %66 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch, ptr %63, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %66, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %67 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %68 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %69 = call ptr @candy_builtin_if_else(ptr %62, ptr %67, ptr %68)
  ret ptr %69
}

define ptr @Core_bool_is_1_equals_then.33(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.35, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.36, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.39, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.40, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.36, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.40, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.35(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.37, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.38, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.38, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.37(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @13, align 8
  ret ptr @13
}

define ptr @Core_bool_is_1_equals_else.39(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Core_bool_is_1_equals_else.41(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @15, align 8
  ret ptr @15
}

define ptr @Core_bool_is_1_isMatch_then.43(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.45(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.47, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.48, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.55, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.56, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.48, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.56, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.47(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.49, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.50, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.53, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.54, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.50, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.54, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.49(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.51, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.52, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.52, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.51(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @16, align 8
  ret ptr @16
}

define ptr @Core_bool_is_1_equals_else.53(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @17, align 8
  ret ptr @17
}

define ptr @Core_bool_is_1_equals_else.55(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyOr_18_equals_then(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.57, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.58, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.59, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.60, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.58, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.60, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.57(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyOr_18_equals_else(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @19, align 8
  ret ptr @19
}

define ptr @Core_bool_lazyOr_18_equals_else.59(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Core_bool_lazyOr_18_equals_else.61(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.63, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.64, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.71, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.72, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.64, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.72, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %26 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %20, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_bool_lazyOr_18_equals_then.63(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.65, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.66, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.69, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.70, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.66, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.70, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.65(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.67, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_else.68, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.68, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_lazyOr_18_equals_else.67(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @22, align 8
  ret ptr @22
}

define ptr @Core_bool_lazyOr_18_equals_else.69(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Core_bool_lazyOr_18_equals_else.71(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Core_bool_lazyOr_18_case-1_matched(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_function_is0_11.73, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_function_is0_11.74, align 8
  %11 = load ptr, ptr @fun_Core_function_is0_11.74, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %13 = call ptr @Builtins__ifElse(ptr %5, ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @candy_builtin_type_of(ptr %18)
  %20 = load ptr, ptr @tag_Function, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:function:run:14", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = call ptr @candy_builtin_get_argument_count(ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:function:run:14", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %34 = load ptr, ptr %33, align 8
  %35 = call ptr @get_candy_function_pointer(ptr %34)
  %36 = call ptr @get_candy_function_environment(ptr %34)
  %37 = call ptr (...) %35(ptr %36)
  %38 = call ptr @Core_bool_is(ptr %37)
  %39 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  ret ptr %37
}

define ptr @Core_function_is0_11.73(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_or(ptr %0, ptr %1) {
Core_bool_or:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.75, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_bool_is_1_equals_then.76, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.83, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_then.76, align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.85, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_is_1_isMatch_then.86, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.87, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_is_1_isMatch_else.88, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.86, align 8
  %25 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.88, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Tag, align 8
  %38 = call ptr @candy_builtin_equals(ptr %37, ptr %36)
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr }, ptr %39, i32 0, i32 0
  store ptr %1, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.99, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Core_bool_is_1_equals_then.100, align 8
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr }, ptr %42, i32 0, i32 0
  store ptr %36, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.107, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_bool_is_1_equals_else.108, align 8
  %45 = load ptr, ptr @fun_Core_bool_is_1_equals_then.100, align 8
  %46 = load ptr, ptr @fun_Core_bool_is_1_equals_else.108, align 8
  %47 = call ptr @candy_builtin_if_else(ptr %38, ptr %45, ptr %46)
  %48 = load ptr, ptr @num_0, align 8
  %49 = call ptr @candy_builtin_list_get(ptr %47, ptr %48)
  %50 = load ptr, ptr @tag_Match, align 8
  %51 = call ptr @candy_builtin_equals(ptr %49, ptr %50)
  %52 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %53 = getelementptr inbounds { ptr }, ptr %52, i32 0, i32 0
  store ptr %47, ptr %53, align 8
  %54 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.109, ptr %52, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %54, ptr @fun_Core_bool_is_1_isMatch_then.110, align 8
  %55 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %56 = getelementptr inbounds { ptr }, ptr %55, i32 0, i32 0
  store ptr %1, ptr %56, align 8
  %57 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.111, ptr %55, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %57, ptr @fun_Core_bool_is_1_isMatch_else.112, align 8
  %58 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.110, align 8
  %59 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.112, align 8
  %60 = call ptr @candy_builtin_if_else(ptr %51, ptr %58, ptr %59)
  %61 = load ptr, ptr @num_0, align 8
  %62 = call ptr @candy_builtin_list_get(ptr %60, ptr %61)
  %63 = load ptr, ptr @tag_Match, align 8
  %64 = call ptr @candy_builtin_equals(ptr %62, ptr %63)
  %65 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %66 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %67 = call ptr @candy_builtin_if_else(ptr %64, ptr %65, ptr %66)
  %68 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %69 = call ptr @"anonymous_$generated__needs"(ptr %67, ptr %68, ptr null)
  %70 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %71 = getelementptr inbounds { ptr }, ptr %70, i32 0, i32 0
  store ptr %1, ptr %71, align 8
  %72 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %70, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %72, ptr @fun_Core_bool_or_12, align 8
  %73 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %74 = call ptr @Core_bool_lazyOr(ptr %0, ptr %73)
  ret ptr %74
}

define ptr @Core_bool_is_1_equals_then.75(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.77, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.78, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.81, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.82, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.78, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.82, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.77(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.79, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.80, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.80, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.79(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_is_1_equals_else.81(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_is_1_equals_else.83(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_is_1_isMatch_then.85(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.87(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.89, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.90, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.97, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.98, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.90, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.98, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.89(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.91, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.92, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.95, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.96, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.92, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.96, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.91(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.93, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.94, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.94, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.93(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_is_1_equals_else.95(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_is_1_equals_else.97(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_is_1_equals_then.99(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.101, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.102, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.105, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.106, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.102, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.106, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.101(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.103, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.104, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.104, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.103(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_bool_is_1_equals_else.105(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_bool_is_1_equals_else.107(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_bool_is_1_isMatch_then.109(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.111(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.113, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.114, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.121, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.122, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.114, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.122, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.113(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.115, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.116, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.119, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.120, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.116, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.120, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.115(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.117, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.118, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.118, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.117(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_bool_is_1_equals_else.119(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_bool_is_1_equals_else.121(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_controlFlow_if(ptr %0, ptr %1) {
Core_controlFlow_if:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.123, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_bool_is_1_equals_then.124, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.131, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.132, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_then.124, align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.132, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then.133, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_bool_is_1_isMatch_then.134, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else.135, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_is_1_isMatch_else.136, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then.134, align 8
  %25 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else.136, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %33 = call ptr @candy_builtin_if_else(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr null)
  %36 = call ptr @candy_builtin_type_of(ptr %1)
  %37 = load ptr, ptr @tag_Function, align 8
  %38 = call ptr @candy_builtin_equals(ptr %36, ptr %37)
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr }, ptr %39, i32 0, i32 0
  store ptr %1, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Core_function_is0_11.147, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Core_function_is0_11.148, align 8
  %42 = load ptr, ptr @fun_Core_function_is0_11.148, align 8
  %43 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %44 = call ptr @Builtins__ifElse(ptr %38, ptr %42, ptr %43)
  %45 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %44, ptr %45, ptr null)
  %47 = call ptr @candy_builtin_type_of(ptr %0)
  %48 = load ptr, ptr @tag_Tag, align 8
  %49 = call ptr @candy_builtin_equals(ptr %48, ptr %47)
  %50 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %51 = getelementptr inbounds { ptr }, ptr %50, i32 0, i32 0
  store ptr %0, ptr %51, align 8
  %52 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.149, ptr %50, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %52, ptr @fun_Builtins__ifElse_1_equals_then.150, align 8
  %53 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %54 = getelementptr inbounds { ptr }, ptr %53, i32 0, i32 0
  store ptr %47, ptr %54, align 8
  %55 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.157, ptr %53, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %55, ptr @fun_Builtins__ifElse_1_equals_else.158, align 8
  %56 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.150, align 8
  %57 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.158, align 8
  %58 = call ptr @candy_builtin_if_else(ptr %49, ptr %56, ptr %57)
  %59 = load ptr, ptr @num_0, align 8
  %60 = call ptr @candy_builtin_list_get(ptr %58, ptr %59)
  %61 = load ptr, ptr @tag_Match, align 8
  %62 = call ptr @candy_builtin_equals(ptr %60, ptr %61)
  %63 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %64 = getelementptr inbounds { ptr }, ptr %63, i32 0, i32 0
  store ptr %58, ptr %64, align 8
  %65 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then.159, ptr %63, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %65, ptr @fun_Builtins__ifElse_1_isMatch_then.160, align 8
  %66 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %67 = getelementptr inbounds { ptr }, ptr %66, i32 0, i32 0
  store ptr %0, ptr %67, align 8
  %68 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else.161, ptr %66, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %68, ptr @fun_Builtins__ifElse_1_isMatch_else.162, align 8
  %69 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then.160, align 8
  %70 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else.162, align 8
  %71 = call ptr @candy_builtin_if_else(ptr %62, ptr %69, ptr %70)
  %72 = load ptr, ptr @num_0, align 8
  %73 = call ptr @candy_builtin_list_get(ptr %71, ptr %72)
  %74 = load ptr, ptr @tag_Match, align 8
  %75 = call ptr @candy_builtin_equals(ptr %73, ptr %74)
  %76 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %77 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %78 = call ptr @candy_builtin_if_else(ptr %75, ptr %76, ptr %77)
  %79 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %80 = load ptr, ptr @"Core:controlFlow:if:28", align 8
  %81 = call ptr @"anonymous_$generated__needs"(ptr %78, ptr %79, ptr %80)
  %82 = call ptr @candy_builtin_type_of(ptr %1)
  %83 = load ptr, ptr @tag_Function, align 8
  %84 = call ptr @candy_builtin_equals(ptr %82, ptr %83)
  %85 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %86 = load ptr, ptr @"Core:controlFlow:if:28", align 8
  %87 = call ptr @"anonymous_$generated__needs"(ptr %84, ptr %85, ptr %86)
  %88 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %89 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %90 = call ptr @"anonymous_$generated__needs"(ptr %84, ptr %88, ptr %89)
  %91 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %92 = load ptr, ptr @num_0, align 8
  %93 = call ptr @candy_builtin_equals(ptr %91, ptr %92)
  %94 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %95 = load ptr, ptr @"Core:controlFlow:if:28", align 8
  %96 = call ptr @"anonymous_$generated__needs"(ptr %93, ptr %94, ptr %95)
  %97 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_84_2_11_7_15_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_higherLower_then, Examples_higherLower_9_isMatch_then, Examples_higherLower_12_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %98 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %97)
  ret ptr %98
}

define ptr @Core_bool_is_1_equals_then.123(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.125, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.126, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.129, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.130, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.126, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.130, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.125(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.127, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.128, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.128, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.127(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @37, align 8
  ret ptr @37
}

define ptr @Core_bool_is_1_equals_else.129(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_bool_is_1_equals_else.131(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_bool_is_1_isMatch_then.133(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else.135(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.137, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.138, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.145, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.146, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.138, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.146, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.137(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.139, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.140, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.143, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.144, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.140, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.144, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.139(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.141, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_else.142, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Core_bool_is_1_equals_else.142, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_bool_is_1_equals_else.141(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_bool_is_1_equals_else.143(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_bool_is_1_equals_else.145(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_function_is0_11.147(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_then.149(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.151, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.152, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.155, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.156, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.152, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.156, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.151(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.153, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else.154, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.154, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else.153(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @43, align 8
  ret ptr @43
}

define ptr @Builtins__ifElse_1_equals_else.155(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @44, align 8
  ret ptr @44
}

define ptr @Builtins__ifElse_1_equals_else.157(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Builtins__ifElse_1_isMatch_then.159(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else.161(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.163, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.164, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.171, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.172, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.164, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.172, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.163(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.165, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.166, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.169, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.170, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.166, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.170, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.165(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.167, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_else.168, align 8
  %11 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.168, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__ifElse_1_equals_else.167(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_to_debug_text(ptr %3)
  %5 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %6 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %4)
  %7 = load ptr, ptr @"text_`.", align 8
  %8 = call ptr @candy_builtin_text_concatenate(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = load ptr, ptr @tag_NoMatch, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %8, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %13, align 8
  %14 = call ptr @make_candy_list(ptr %9)
  store ptr %14, ptr @46, align 8
  ret ptr @46
}

define ptr @Builtins__ifElse_1_equals_else.169(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @47, align 8
  ret ptr @47
}

define ptr @Builtins__ifElse_1_equals_else.171(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_controlFlow_recursive(ptr %0, ptr %1) {
Core_controlFlow_recursive:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Function, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_function_is2_11, align 8
  %8 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @Builtins__ifElse(ptr %4, ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %1, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_controlFlow_recursive_18, align 8
  %16 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  %17 = call ptr @get_candy_function_environment(ptr @fun_Core_controlFlow_recursive_18)
  %18 = call ptr @Core_controlFlow_recursive_18(ptr %16, ptr %0, ptr %17)
  ret ptr %18
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_recursive_18(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_recursive_18:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %6 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %7 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @get_candy_function_pointer(ptr %8)
  %10 = call ptr @get_candy_function_environment(ptr %8)
  %11 = call ptr (...) %9(ptr %6, ptr %1, ptr %10)
  ret ptr %11
}

define ptr @Core_controlFlow_recursive_18_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_controlFlow_loop(ptr %0) {
Core_controlFlow_loop:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_11.173, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_11.174, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_11.174, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`function.is0 body` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %0, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_loop_14, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_loop_14, align 8
  %15 = load ptr, ptr @tag_Nothing, align 8
  %16 = load ptr, ptr @fun_Core_controlFlow_loop_14, align 8
  %17 = call ptr @Core_controlFlow_recursive(ptr %15, ptr %16)
  ret ptr %17
}

define ptr @Core_function_is0_11.173(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_loop_14(ptr %0, ptr %1, ptr %2) {
Core_controlFlow_loop_14:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Function, align 8
  %7 = call ptr @candy_builtin_equals(ptr %5, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %10, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_function_is0_11.175, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_function_is0_11.176, align 8
  %13 = load ptr, ptr @fun_Core_function_is0_11.176, align 8
  %14 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %15 = call ptr @Builtins__ifElse(ptr %7, ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:controlFlow:loop:14:9", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_type_of(ptr %20)
  %22 = load ptr, ptr @tag_Function, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %25 = load ptr, ptr @"Core:function:run:14", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %24, ptr %25)
  %27 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @candy_builtin_get_argument_count(ptr %28)
  %30 = load ptr, ptr @num_0, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:function:run:14", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = call ptr @get_candy_function_pointer(ptr %36)
  %38 = call ptr @get_candy_function_environment(ptr %36)
  %39 = call ptr (...) %37(ptr %38)
  %40 = load ptr, ptr @tag_Continue, align 8
  %41 = call ptr @candy_builtin_equals(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Break, align 8
  %43 = call ptr @candy_builtin_equals(ptr %39, ptr %42)
  %44 = call ptr @Core_bool_or(ptr %41, ptr %43)
  %45 = load ptr, ptr @"text_The `body` has to return `Continue` or `Break`.", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %44, ptr %45, ptr null)
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %48 = getelementptr inbounds { ptr }, ptr %47, i32 0, i32 0
  store ptr %0, ptr %48, align 8
  %49 = call ptr @make_candy_function(ptr @Core_controlFlow_loop_14_41, ptr %47, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %49, ptr @fun_Core_controlFlow_loop_14_41, align 8
  %50 = load ptr, ptr @fun_Core_controlFlow_loop_14_41, align 8
  %51 = call ptr @Core_controlFlow_if(ptr %41, ptr %50)
  ret ptr %51
}

define ptr @Core_function_is0_11.175(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_controlFlow_loop_14_41(ptr %0) {
Core_controlFlow_loop_14_41:
  %1 = load ptr, ptr @tag_Nothing, align 8
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %1, ptr %5)
  ret ptr %6
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_11.177, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_11.178, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_11.178, align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Function, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:function:run:14", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %19 = load ptr, ptr @num_0, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:function:run:14", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @get_candy_function_pointer(ptr %0)
  %25 = call ptr @get_candy_function_environment(ptr %0)
  %26 = call ptr (...) %24(ptr %25)
  ret ptr %26
}

define ptr @Core_function_is0_11.177(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @"Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else"() {
"Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else":
  %0 = load ptr, ptr @49, align 8
  ret ptr %0
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch() {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %0 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_result_is_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.183, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_result_is_1_equals_else.184, align 8
  %12 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_result_is_1_equals_else.184, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_result_is_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %34 = call ptr @candy_builtin_if_else(ptr %31, ptr %32, ptr %33)
  %35 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr null)
  %37 = call ptr @candy_builtin_type_of(ptr %1)
  %38 = load ptr, ptr @tag_Function, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %1, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @fun_Core_function_is1_11, align 8
  %43 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %44 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %45 = call ptr @Builtins__ifElse(ptr %39, ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %47 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr null)
  %48 = call ptr @candy_builtin_type_of(ptr %2)
  %49 = load ptr, ptr @tag_Function, align 8
  %50 = call ptr @candy_builtin_equals(ptr %48, ptr %49)
  %51 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %52 = getelementptr inbounds { ptr }, ptr %51, i32 0, i32 0
  store ptr %2, ptr %52, align 8
  %53 = call ptr @make_candy_function(ptr @Core_function_is1_11.195, ptr %51, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %53, ptr @fun_Core_function_is1_11.196, align 8
  %54 = load ptr, ptr @fun_Core_function_is1_11.196, align 8
  %55 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_didNotMatch, Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_is_1_case-0_didNotMatch, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_check_check_1_case-0_didNotMatch, Core_fixedDecimal_is_1_case-0_didNotMatch, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, Core_result_is_1_case-0_didNotMatch, anonymous_$generated__needs_isConditionTrue_else", align 8
  %56 = call ptr @Builtins__ifElse(ptr %50, ptr %54, ptr %55)
  %57 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %58 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr null)
  %59 = call ptr @candy_builtin_type_of(ptr %0)
  %60 = load ptr, ptr @tag_Tag, align 8
  %61 = call ptr @candy_builtin_equals(ptr %60, ptr %59)
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr }, ptr %62, i32 0, i32 0
  store ptr %0, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %65 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %66 = getelementptr inbounds { ptr }, ptr %65, i32 0, i32 0
  store ptr %59, ptr %66, align 8
  %67 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.201, ptr %65, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %67, ptr @fun_Core_result_mapOrElse_30_equals_else.202, align 8
  %68 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %69 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.202, align 8
  %70 = call ptr @candy_builtin_if_else(ptr %61, ptr %68, ptr %69)
  %71 = load ptr, ptr @num_0, align 8
  %72 = call ptr @candy_builtin_list_get(ptr %70, ptr %71)
  %73 = load ptr, ptr @tag_Match, align 8
  %74 = call ptr @candy_builtin_equals(ptr %72, ptr %73)
  %75 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %76 = getelementptr inbounds { ptr, ptr }, ptr %75, i32 0, i32 0
  store ptr %70, ptr %76, align 8
  %77 = getelementptr inbounds { ptr, ptr }, ptr %75, i32 0, i32 1
  store ptr %1, ptr %77, align 8
  %78 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_matched, ptr %75, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %78, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %79 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %80 = getelementptr inbounds { ptr, ptr }, ptr %79, i32 0, i32 0
  store ptr %2, ptr %80, align 8
  %81 = getelementptr inbounds { ptr, ptr }, ptr %79, i32 0, i32 1
  store ptr %0, ptr %81, align 8
  %82 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %79, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %82, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %83 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %84 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %85 = call ptr @candy_builtin_if_else(ptr %74, ptr %83, ptr %84)
  ret ptr %85
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.179, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.180, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.180, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.179(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.181, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.182, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.182, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.181(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_result_is_1_equals_else.183(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.185, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.186, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.193, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.194, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.186, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.194, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.185(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.187, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.188, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.191, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.192, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.188, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.192, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.187(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.189, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.190, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_then.190, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_is_1_equals_then.189(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_result_is_1_equals_else.191(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_result_is_1_equals_else.193(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_is1_11.195(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.197, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.198, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.198, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.197(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.199, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.200, align 8
  %11 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.200, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_30_equals_then.199(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_result_mapOrElse_30_equals_else.201(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_result_mapOrElse_30_case-0_matched(ptr %0) {
Core_result_mapOrElse_30_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.203, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.204, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.211, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.212, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.204, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.212, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %16, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_matched, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %27 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %28 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_result_mapOrElse_30_equals_then.203(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.205, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.206, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.209, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.210, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.206, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.210, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.205(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.207, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.208, align 8
  %11 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.208, align 8
  %12 = load ptr, ptr @"fun_Core_fixedDecimal_is_1_equals_else, Core_result_is_1_equals_else, Core_result_mapOrElse_30_equals_else", align 8
  %13 = call ptr @candy_builtin_if_else(ptr %5, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_result_mapOrElse_30_equals_then.207(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_result_mapOrElse_30_equals_else.209(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_result_mapOrElse_30_equals_else.211(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_result_mapOrElse_30_case-1_matched(ptr %0) {
Core_result_mapOrElse_30_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_text_trim(ptr %0) {
Core_text_trim:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Text, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Text, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:text:trim:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @candy_builtin_text_trim_start(ptr %0)
  %13 = call ptr @candy_builtin_text_trim_end(ptr %12)
  ret ptr %13
}

define ptr @Examples_higherLower_14_14_40_6_13() {
Examples_higherLower_14_14_40_6_13:
  %0 = load ptr, ptr @"text_Lower!", align 8
  ret ptr %0
}

define ptr @Examples_higherLower_14_14_40_6_14() {
Examples_higherLower_14_14_40_6_14:
  %0 = load ptr, ptr @"text_Higher!", align 8
  ret ptr %0
}

define ptr @Examples_higherLower_14(ptr %0) {
Examples_higherLower_14:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %0, ptr %2, align 8
  %3 = call ptr @make_candy_function(ptr @Examples_higherLower_14_0, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Examples_higherLower_14_0, align 8
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %8 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = load ptr, ptr @tag_Stdout, align 8
  %11 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %10)
  %12 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %13 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Stdout, align 8
  %16 = call ptr @candy_builtin_struct_get(ptr %0, ptr %15)
  %17 = load ptr, ptr @"text_Welcome to the number guessing game!", align 8
  %18 = call ptr @get_candy_function_pointer(ptr %16)
  %19 = call ptr @get_candy_function_environment(ptr %16)
  %20 = call ptr (...) %18(ptr %17, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Examples_higherLower_14_14, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Examples_higherLower_14_14, align 8
  %24 = load ptr, ptr @fun_Examples_higherLower_14_14, align 8
  %25 = call ptr @Core_controlFlow_loop(ptr %24)
  ret ptr %25
}

define ptr @Examples_higherLower_14_0(ptr %0) {
Examples_higherLower_14_0:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %7 = load ptr, ptr @"Examples:higherLower:14:0:8", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_Stdin, align 8
  %12 = call ptr @candy_builtin_struct_has_key(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %14 = load ptr, ptr @"Examples:higherLower:14:0:8", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_Stdin, align 8
  %19 = call ptr @candy_builtin_struct_get(ptr %17, ptr %18)
  %20 = call ptr @Core_function_run(ptr %19)
  ret ptr %20
}

define ptr @Examples_higherLower_14_14(ptr %0) {
Examples_higherLower_14_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %7 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_Stdout, align 8
  %12 = call ptr @candy_builtin_struct_has_key(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %14 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_Stdout, align 8
  %19 = call ptr @candy_builtin_struct_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @"text_What's your guess?", align 8
  %21 = call ptr @get_candy_function_pointer(ptr %19)
  %22 = call ptr @get_candy_function_environment(ptr %19)
  %23 = call ptr (...) %21(ptr %20, ptr %22)
  %24 = load ptr, ptr @fun_Examples_higherLower_14_0, align 8
  %25 = call ptr @Core_function_run(ptr %24)
  %26 = call ptr @Core_text_trim(ptr %25)
  %27 = call ptr @candy_builtin_type_of(ptr %26)
  %28 = load ptr, ptr @tag_Text, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %31 = load ptr, ptr @"Examples:higherLower:14:14:29", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = call ptr @candy_builtin_int_parse(ptr %26)
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %36, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Examples_higherLower_14_14_40, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Examples_higherLower_14_14_40, align 8
  %39 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %40 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr }, ptr %39, i32 0, i32 0
  store ptr %41, ptr %42, align 8
  %43 = call ptr @make_candy_function(ptr @Examples_higherLower_14_14_41, ptr %39, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %43, ptr @fun_Examples_higherLower_14_14_41, align 8
  %44 = load ptr, ptr @fun_Examples_higherLower_14_14_40, align 8
  %45 = load ptr, ptr @fun_Examples_higherLower_14_14_41, align 8
  %46 = call ptr @Core_result_mapOrElse(ptr %33, ptr %44, ptr %45)
  ret ptr %46
}

define ptr @Examples_higherLower_14_14_40(ptr %0, ptr %1) {
Examples_higherLower_14_14_40:
  %2 = load ptr, ptr @num_42, align 8
  %3 = call ptr @candy_builtin_equals(ptr %0, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %6, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Examples_higherLower_14_14_40_5, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Examples_higherLower_14_14_40_5, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr, ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr inbounds { ptr, ptr }, ptr %9, i32 0, i32 1
  store ptr %0, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Examples_higherLower_14_14_40_6, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Examples_higherLower_14_14_40_6, align 8
  %15 = load ptr, ptr @fun_Examples_higherLower_14_14_40_5, align 8
  %16 = load ptr, ptr @fun_Examples_higherLower_14_14_40_6, align 8
  %17 = call ptr @Builtins__ifElse(ptr %3, ptr %15, ptr %16)
  ret ptr %17
}

define ptr @Examples_higherLower_14_14_40_5(ptr %0) {
Examples_higherLower_14_14_40_5:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %7 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @tag_Stdout, align 8
  %12 = call ptr @candy_builtin_struct_has_key(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %14 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @tag_Stdout, align 8
  %19 = call ptr @candy_builtin_struct_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @"text_You did it!", align 8
  %21 = call ptr @get_candy_function_pointer(ptr %19)
  %22 = call ptr @get_candy_function_environment(ptr %19)
  %23 = call ptr (...) %21(ptr %20, ptr %22)
  %24 = load ptr, ptr @tag_Break, align 8
  ret ptr %24
}

define ptr @Examples_higherLower_14_14_40_6(ptr %0) {
Examples_higherLower_14_14_40_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %7 = load ptr, ptr @"Examples:higherLower:14:14:40:6:12", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @candy_builtin_type_of(ptr %13)
  %15 = load ptr, ptr @tag_Int, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_42, align 8
  %21 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @candy_builtin_int_compare_to(ptr %20, ptr %22)
  %24 = load ptr, ptr @tag_Less, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @fun_Examples_higherLower_14_14_40_6_13, align 8
  %27 = load ptr, ptr @fun_Examples_higherLower_14_14_40_6_14, align 8
  %28 = call ptr @Builtins__ifElse(ptr %25, ptr %26, ptr %27)
  %29 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = call ptr @candy_builtin_type_of(ptr %30)
  %32 = load ptr, ptr @tag_Struct, align 8
  %33 = call ptr @candy_builtin_equals(ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %35 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr %35)
  %37 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %38 = load ptr, ptr %37, align 8
  %39 = load ptr, ptr @tag_Stdout, align 8
  %40 = call ptr @candy_builtin_struct_has_key(ptr %38, ptr %39)
  %41 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %42 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %40, ptr %41, ptr %42)
  %44 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %45 = load ptr, ptr %44, align 8
  %46 = load ptr, ptr @tag_Stdout, align 8
  %47 = call ptr @candy_builtin_struct_get(ptr %45, ptr %46)
  %48 = call ptr @get_candy_function_pointer(ptr %47)
  %49 = call ptr @get_candy_function_environment(ptr %47)
  %50 = call ptr (...) %48(ptr %28, ptr %49)
  %51 = load ptr, ptr @tag_Continue, align 8
  ret ptr %51
}

define ptr @Examples_higherLower_14_14_41(ptr %0, ptr %1) {
Examples_higherLower_14_14_41:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %8 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @tag_Stdout, align 8
  %13 = call ptr @candy_builtin_struct_has_key(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %15 = load ptr, ptr @"Examples:higherLower:14:print:7", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr @tag_Stdout, align 8
  %20 = call ptr @candy_builtin_struct_get(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_Your guess must be a number.", align 8
  %22 = call ptr @get_candy_function_pointer(ptr %20)
  %23 = call ptr @get_candy_function_environment(ptr %20)
  %24 = call ptr (...) %22(ptr %21, ptr %23)
  %25 = load ptr, ptr @tag_Continue, align 8
  ret ptr %25
}
