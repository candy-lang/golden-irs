# Optimized MIR for module Examples:higherLower
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::equals:6
$2 = Builtins::functionRun:11
$3 = Builtins::functionRun:16
$4 = Builtins::functionRun:22
$5 = Builtins::functionRun:5
$6 = Builtins::getArgumentCount:11
$7 = Builtins::getArgumentCount:5
$8 = Builtins::ifElse:1
$9 = Builtins::ifElse:11
$10 = Builtins::ifElse:14
$11 = Builtins::ifElse:19
$12 = Builtins::ifElse:25
$13 = Builtins::ifElse:28
$14 = Builtins::ifElse:33
$15 = Builtins::ifElse:41
$16 = Builtins::ifElse:5
$17 = Builtins::intAdd:11
$18 = Builtins::intAdd:18
$19 = Builtins::intAdd:5
$20 = Builtins::intBitwiseAnd:18
$21 = Builtins::intBitwiseAnd:5
$22 = Builtins::intCompareTo:11
$23 = Builtins::intCompareTo:18
$24 = Builtins::intCompareTo:5
$25 = Builtins::intMultiply:18
$26 = Builtins::intMultiply:5
$27 = Builtins::intSubtract:18
$28 = Builtins::intSubtract:5
$29 = Builtins::isLessThanOrEqualTo:11
$30 = Builtins::isLessThanOrEqualTo:18
$31 = Builtins::isLessThanOrEqualTo:19
$32 = Builtins::isLessThanOrEqualTo:5
$33 = Builtins::isNonNegative:12
$34 = Builtins::isNonNegative:13
$35 = Builtins::isNonNegative:5
$36 = Builtins::structGet:12
$37 = Builtins::structGet:14
$38 = Builtins::structGet:21
$39 = Builtins::structGet:5
$40 = Builtins::toDebugText:5
$41 = Builtins::typeIs:19
$42 = Builtins::typeIs:25
$43 = Builtins::typeOf:5
$44 = Core:bool:and:13
$45 = Core:bool:and:2
$46 = Core:bool:and:4
$47 = Core:bool:and:7
$48 = Core:bool:and:9
$49 = Core:bool:is:1
$50 = Core:bool:lazyAnd:14
$51 = Core:bool:lazyAnd:16
$52 = Core:bool:lazyAnd:18
$53 = Core:bool:lazyAnd:18:13
$54 = Core:bool:lazyAnd:18:21
$55 = Core:bool:lazyAnd:18:9
$56 = Core:bool:lazyAnd:2
$57 = Core:bool:lazyAnd:4
$58 = Core:bool:lazyOr:14
$59 = Core:bool:lazyOr:16
$60 = Core:bool:lazyOr:18
$61 = Core:bool:lazyOr:18:10
$62 = Core:bool:lazyOr:18:14
$63 = Core:bool:lazyOr:18:22
$64 = Core:bool:lazyOr:2
$65 = Core:bool:lazyOr:4
$66 = Core:bool:not:2
$67 = Core:bool:not:4
$68 = Core:bool:not:6
$69 = Core:bool:or:13
$70 = Core:bool:or:2
$71 = Core:bool:or:4
$72 = Core:bool:or:7
$73 = Core:bool:or:9
$74 = Core:check:checkEquals:12
$75 = Core:check:checkEquals:13
$76 = Core:check:checkEquals:15:0
$77 = Core:check:checkEquals:16
$78 = Core:check:checkEquals:19
$79 = Core:check:checkEquals:20
$80 = Core:check:checkEquals:22:0
$81 = Core:check:checkEquals:23
$82 = Core:check:checkEquals:25
$83 = Core:check:checkEquals:26
$84 = Core:check:checkEquals:27
$85 = Core:check:checkEquals:28
$86 = Core:check:checkEquals:29
$87 = Core:controlFlow:if:11
$88 = Core:controlFlow:if:21
$89 = Core:controlFlow:if:23
$90 = Core:controlFlow:if:28
$91 = Core:controlFlow:if:9
$92 = Core:controlFlow:loop:11
$93 = Core:controlFlow:loop:14:27
$94 = Core:controlFlow:loop:14:35
$95 = Core:controlFlow:loop:14:41:2
$96 = Core:controlFlow:loop:14:42
$97 = Core:controlFlow:loop:14:9
$98 = Core:controlFlow:loop:15
$99 = Core:controlFlow:loop:9
$100 = Core:controlFlow:recursive:17
$101 = Core:controlFlow:recursive:18:0:3
$102 = Core:controlFlow:recursive:18:5
$103 = Core:controlFlow:recursive:23
$104 = Core:controlFlow:recursive:9
$105 = Core:fixedDecimal:fromInt:15
$106 = Core:fixedDecimal:fromIntScaled:11
$107 = Core:fixedDecimal:fromIntScaled:16
$108 = Core:fixedDecimal:isScale:18:9
$109 = Core:fixedDecimal:isScale:19
$110 = Core:function:is0:11:3
$111 = Core:function:is0:13
$112 = Core:function:is2:11:3
$113 = Core:function:is2:13
$114 = Core:function:run:14
$115 = Core:function:run:2
$116 = Core:function:run:4
$117 = Core:int:compareTo:20
$118 = Core:int:compareTo:4
$119 = Core:int:compareTo:9
$120 = Core:int:isGreaterThan:13
$121 = Core:int:isGreaterThan:4
$122 = Core:int:isGreaterThan:9
$123 = Core:int:isLessThan:13
$124 = Core:int:isLessThan:4
$125 = Core:int:isLessThan:9
$126 = Core:int:isNegative:4
$127 = Core:int:isNegative:8
$128 = Core:int:isNonNegative:16
$129 = Core:int:isNonNegative:4
$130 = Core:int:isNonNegative:7
$131 = anonymous:$generated::needs
$132 = builtinEquals
$133 = builtinGetArgumentCount
$134 = builtinIfElse
$135 = builtinIntAdd
$136 = builtinIntBitwiseAnd
$137 = builtinIntCompareTo
$138 = builtinIntMultiply
$139 = builtinIntSubtract
$140 = builtinListGet
$141 = builtinStructGet
$142 = builtinStructHasKey
$143 = builtinTagGetValue
$144 = builtinTagHasValue
$145 = builtinTagWithoutValue
$146 = builtinTextConcatenate
$147 = builtinToDebugText
$148 = builtinTypeOf
$149 = Break
$150 = Continue
$151 = Equal
$152 = False
$153 = Function
$154 = Greater
$155 = Int
$156 = Less
$157 = Match
$158 = MinorUnits
$159 = NoMatch
$160 = Nothing
$161 = Scale
$162 = Struct
$163 = Tag
$164 = Text
$165 = True
$166 = 0
$167 = 1
$168 = 2
$169 = 3
$170 = 4
$171 = 5
$172 = 10
$173 = " to be "
$174 = "."
$175 = "A check failed: Expected "
$176 = "Expected `Equal`, got `"
$177 = "Expected `False`, got `"
$178 = "Expected `Greater`, got `"
$179 = "Expected `Less`, got `"
$180 = "Expected `True`, got `"
$181 = "Expected a Struct, got `"
$182 = "Expected a Tag, got `"
$183 = "Expected tag to have a value, but it doesn't have any."
$184 = "No case matched the given expression."
$185 = "The `body` has to return `Continue` or `Break`."
$186 = "The `body` should take the recursive function and the argument."
$187 = "The `condition` must be either `True` or `False`."
$188 = "The `reason` must be a text."
$189 = "`."
$190 = "`a | typeIs Int` was not satisfied"
$191 = "`b | typeIs Int` was not satisfied"
$192 = "`b` didn't return a bool."
$193 = "`bool.is condition` was not satisfied"
$194 = "`conditionIsBool` was not satisfied"
$195 = "`else | getArgumentCount | equals 0` was not satisfied"
$196 = "`else | typeIs Function` was not satisfied"
$197 = "`factorA | typeIs Int` was not satisfied"
$198 = "`function | typeIs Function` was not satisfied"
$199 = "`function | ✨.getArgumentCount | equals 0` was not satisfied"
$200 = "`function.is0 b` was not satisfied"
$201 = "`function.is0 body` was not satisfied"
$202 = "`function.is0 then` was not satisfied"
$203 = "`int | typeIs Int` was not satisfied"
$204 = "`int.is minorUnits` was not satisfied"
$205 = "`is a` was not satisfied"
$206 = "`is b` was not satisfied"
$207 = "`is text` was not satisfied"
$208 = "`is valueA` was not satisfied"
$209 = "`is valueB` was not satisfied"
$210 = "`is value` was not satisfied"
$211 = "`is0 body` was not satisfied"
$212 = "`isScale scale` was not satisfied"
$213 = "`minuend | typeIs Int` was not satisfied"
$214 = "`struct | typeIs Struct` was not satisfied"
$215 = "`struct | ✨.structHasKey key` was not satisfied"
$216 = "`text | typeIs Text` was not satisfied"
$217 = "`then | getArgumentCount | equals 0` was not satisfied"
$218 = "`then | typeIs Function` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, Core:bool:is:1:case-0:matched, Core:bool:lazyOr:18:case-0:matched, Core:bool:not:6:case-1:matched, Core:check:check:1:case-0:matched, Core:text:isAsciiDigit:14:case-0:matched, anonymous:$generated::needs:isConditionTrue:then
$219 = { (responsible $220) ->
  $221 = $165
}
# Core::19:isMatch:then, Core::30:isMatch:then, Core::41:isMatch:then, Core::102:isMatch:then, Core::153:isMatch:then, Core::164:isMatch:then, Core:bool:9:isMatch:then, Core:check:9:isMatch:then, Core:controlFlow:if:27, Core:controlFlow:29:isMatch:then, Core:controlFlow:50:isMatch:then, Core:fixedDecimal:add:14:isMatch:then, Core:fixedDecimal:compareTo:14:isMatch:then, Core:fixedDecimal:divideTruncating:37:isMatch:then, Core:fixedDecimal:divideTruncatingAtScale:42:isMatch:then, Core:fixedDecimal:subtract:14:isMatch:then, Core:fixedDecimal:19:isMatch:then, Core:fixedDecimal:30:isMatch:then, Core:fixedDecimal:41:isMatch:then, Core:fixedDecimal:52:isMatch:then, Core:fixedDecimal:103:isMatch:then, Core:function:19:isMatch:then, Core:int:pow:21:1:isMatch:then, Core:int:29:isMatch:then, Core:int:40:isMatch:then, Core:iterator:foldLeft:23:1:isMatch:then, Core:iterator:next:6:isMatch:then, Core:iterator:skip:30:6:1:isMatch:then, Core:iterator:take:31:1:isMatch:then, Core:iterator:withIndex:11:1:isMatch:then, Core:iterator:19:isMatch:then, Core:iterator:30:isMatch:then, Core:iterator:91:isMatch:then, Core:iterator:102:isMatch:then, Core:iterator:128:isMatch:then, Core:iterator:137:isMatch:then, Core:list:firstIndexWhere:23:1:isMatch:then, Core:list:generate:59:1:isMatch:then, Core:list:lastIndexWhere:44:1:isMatch:then, Core:list:29:isMatch:then, Core:list:40:isMatch:then, Core:result:19:isMatch:then, Core:result:30:isMatch:then, Core:struct:19:isMatch:then, Core:tag:29:isMatch:then, Core:text:repeat:34:1:isMatch:then, Core:text:29:isMatch:then, Core:text:40:isMatch:then, Core:type:19:isMatch:then, Examples:higherLower:then, Examples:higherLower:9:isMatch:then, Examples:higherLower:12:isMatch:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$222 = { (responsible $223) ->
  $224 = $160
}
# anonymous:$generated::needs
$225 = { $226 $227 $228 (+ responsible $229) ->
  $230 = call $132 with $226 $165 ($131 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $231 = { (responsible $232) ->
    $233 = call $132 with $226 $152 ($131 is responsible)
  }
  $234 = call $134 with $230 $219 $231 ($131 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $235 = { (responsible $236) ->
    $237 = panicking because $187 ($229 is at fault)
  }
  $238 = call $134 with $234 $222 $235 ($131 is responsible)
  $239 = call $148 with $227 ($229 is responsible)
  $240 = call $132 with $239 $164 ($229 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $241 = { (responsible $242) ->
    $243 = panicking because $188 ($229 is at fault)
  }
  $244 = call $134 with $240 $222 $241 ($131 is responsible)
  # anonymous:$generated::needs:condition:else
  $245 = { (responsible $246) ->
    $247 = panicking because $227 ($228 is at fault)
  }
  $248 = call $134 with $226 $222 $245 ($131 is responsible)
}
$249 = ($157,)
# Builtins::ifElse:1:equals:then, Builtins::isLessThanOrEqualTo:19:equals:then, Builtins::isNonNegative:13:equals:then, Builtins::not:1:equals:then, Core:bool:is:1:equals:then, Core:bool:lazyAnd:18:equals:then, Core:bool:lazyOr:18:equals:then, Core:bool:not:6:equals:then, Core:check:check:1:equals:then, Core:int:pow:21:4:equals:then, Core:iterator:foldLeft:23:5:equals:then, Core:iterator:generateWithState:14:1:3:equals:then, Core:iterator:map:19:3:equals:then, Core:iterator:reduceLeft:18:equals:then, Core:iterator:skip:30:6:8:3:equals:then, Core:iterator:takeWhile:7:3:equals:then, Core:iterator:where:19:2:3:equals:then, Core:iterator:where:19:2:3:6:5:equals:then, Core:iterator:withIndex:11:5:equals:then, Core:iterator:wrapSafe:16:26:10:equals:then, Core:list:first:6:equals:then, Core:list:firstWhere:21:equals:then, Core:list:lastWhere:21:equals:then, Core:list:single:6:equals:then, Core:text:isAsciiDigit:14:equals:then
$250 = { (responsible $251) ->
  $252 = $249
}
# Builtins::isLessThanOrEqualTo:19:case-1:matched, Builtins::isNonNegative:13:case-1:matched, Builtins::not:1:case-0:matched, Core:bool:lazyAnd:18:case-1:matched, Core:bool:not:6:case-0:matched, Core:function:is0:12, Core:function:is1:12, Core:function:is2:12, Core:function:is3:12, Core:function:is4:12, Core:function:is5:12, Core:list:isValidIndex:21, Core:list:isValidInsertIndex:21, anonymous:$generated::needs:isConditionTrue:else
$253 = { (responsible $254) ->
  $255 = $152
}
# Builtins::ifElse
$256 = { $257 $258 $259 (+ responsible $260) ->
  $261 = call $132 with $165 $257 ($8 is responsible)
  # Builtins::ifElse:1:equals:else
  $262 = { (responsible $263) ->
    $264 = call $147 with $257 ($8 is responsible)
    $265 = call $146 with $180 $264 ($8 is responsible)
    $266 = call $146 with $265 $189 ($8 is responsible)
    $267 = ($159, $266)
  }
  $268 = call $134 with $261 $250 $262 ($8 is responsible)
  $269 = call $140 with $268 $166 ($8 is responsible)
  $270 = call $132 with $269 $157 ($8 is responsible)
  # Builtins::ifElse:1:isMatch:then
  $271 = { (responsible $272) ->
    $273 = $268
  }
  # Builtins::ifElse:1:isMatch:else
  $274 = { (responsible $275) ->
    $276 = call $132 with $152 $257 ($8 is responsible)
    # Builtins::ifElse:1:equals:else
    $277 = { (responsible $278) ->
      $279 = call $147 with $257 ($8 is responsible)
      $280 = call $146 with $177 $279 ($8 is responsible)
      $281 = call $146 with $280 $189 ($8 is responsible)
      $282 = ($159, $281)
    }
    $283 = call $134 with $276 $250 $277 ($8 is responsible)
  }
  $284 = call $134 with $270 $271 $274 ($8 is responsible)
  $285 = call $140 with $284 $166 ($8 is responsible)
  $286 = call $132 with $285 $157 ($8 is responsible)
  # Builtins::ifElse:1:case-0:didNotMatch
  $287 = { (responsible $288) ->
    $289 = call $140 with $284 $167 ($8 is responsible)
    $290 = $152
  }
  $291 = call $134 with $286 $219 $287 ($8 is responsible)
  $292 = call $225 with $291 $194 $260 ($16 is responsible)
  $293 = call $148 with $258 ($41 is responsible)
  $294 = call $132 with $293 $153 ($42 is responsible)
  $295 = call $225 with $294 $218 $260 ($9 is responsible)
  $296 = call $148 with $258 ($41 is responsible)
  $297 = call $132 with $296 $153 ($42 is responsible)
  $298 = call $225 with $297 $198 $10 ($7 is responsible)
  $299 = call $133 with $258 ($6 is responsible)
  $300 = call $132 with $299 $166 ($1 is responsible)
  $301 = call $225 with $300 $217 $260 ($11 is responsible)
  $302 = call $148 with $259 ($41 is responsible)
  $303 = call $132 with $302 $153 ($42 is responsible)
  $304 = call $225 with $303 $196 $260 ($12 is responsible)
  $305 = call $148 with $259 ($41 is responsible)
  $306 = call $132 with $305 $153 ($42 is responsible)
  $307 = call $225 with $306 $198 $13 ($7 is responsible)
  $308 = call $133 with $259 ($6 is responsible)
  $309 = call $132 with $308 $166 ($1 is responsible)
  $310 = call $225 with $309 $195 $260 ($14 is responsible)
  $311 = call $134 with $257 $258 $259 ($15 is responsible)
}
# Core:function:is0
$312 = { $313 (+ responsible $314) ->
  $315 = call $148 with $313 ($43 is responsible)
  $316 = call $132 with $315 $153 ($1 is responsible)
  # Core:function:is0:11
  $317 = { (responsible $318) ->
    $319 = call $148 with $313 ($41 is responsible)
    $320 = call $132 with $319 $153 ($42 is responsible)
    $321 = call $225 with $320 $198 $110 ($7 is responsible)
    $322 = call $133 with $313 ($6 is responsible)
    $323 = call $132 with $322 $166 ($1 is responsible)
  }
  $324 = call $256 with $316 $317 $253 ($111 is responsible)
}
# Core:function:run
$325 = { $326 (+ responsible $327) ->
  $328 = call $312 with $326 ($115 is responsible)
  $329 = call $225 with $328 $211 $327 ($116 is responsible)
  $330 = call $148 with $326 ($41 is responsible)
  $331 = call $132 with $330 $153 ($42 is responsible)
  $332 = call $225 with $331 $198 $114 ($5 is responsible)
  $333 = call $133 with $326 ($2 is responsible)
  $334 = call $132 with $333 $166 ($1 is responsible)
  $335 = call $225 with $334 $199 $114 ($3 is responsible)
  $336 = call $326 with no arguments ($4 is responsible)
}
# Core:bool:is
$337 = { $338 (+ responsible $339) ->
  $340 = call $132 with $165 $338 ($49 is responsible)
  # Core:bool:is:1:equals:else
  $341 = { (responsible $342) ->
    $343 = call $147 with $338 ($49 is responsible)
    $344 = call $146 with $180 $343 ($49 is responsible)
    $345 = call $146 with $344 $189 ($49 is responsible)
    $346 = ($159, $345)
  }
  $347 = call $134 with $340 $250 $341 ($49 is responsible)
  $348 = call $140 with $347 $166 ($49 is responsible)
  $349 = call $132 with $348 $157 ($49 is responsible)
  # Core:bool:is:1:isMatch:then
  $350 = { (responsible $351) ->
    $352 = $347
  }
  # Core:bool:is:1:isMatch:else
  $353 = { (responsible $354) ->
    $355 = call $132 with $152 $338 ($49 is responsible)
    # Core:bool:is:1:equals:else
    $356 = { (responsible $357) ->
      $358 = call $147 with $338 ($49 is responsible)
      $359 = call $146 with $177 $358 ($49 is responsible)
      $360 = call $146 with $359 $189 ($49 is responsible)
      $361 = ($159, $360)
    }
    $362 = call $134 with $355 $250 $356 ($49 is responsible)
  }
  $363 = call $134 with $349 $350 $353 ($49 is responsible)
  $364 = call $140 with $363 $166 ($49 is responsible)
  $365 = call $132 with $364 $157 ($49 is responsible)
  # Core:bool:is:1:case-0:didNotMatch
  $366 = { (responsible $367) ->
    $368 = call $140 with $363 $167 ($49 is responsible)
    $369 = $152
  }
  $370 = call $134 with $365 $219 $366 ($49 is responsible)
}
# Core:bool:not
$371 = { $372 (+ responsible $373) ->
  $374 = call $337 with $372 ($66 is responsible)
  $375 = call $225 with $374 $210 $373 ($67 is responsible)
  $376 = call $132 with $165 $372 ($68 is responsible)
  # Core:bool:not:6:equals:else
  $377 = { (responsible $378) ->
    $379 = call $147 with $372 ($68 is responsible)
    $380 = call $146 with $180 $379 ($68 is responsible)
    $381 = call $146 with $380 $189 ($68 is responsible)
    $382 = ($159, $381)
  }
  $383 = call $134 with $376 $250 $377 ($68 is responsible)
  $384 = call $140 with $383 $166 ($68 is responsible)
  $385 = call $132 with $384 $157 ($68 is responsible)
  # Core:bool:not:6:case-0:didNotMatch
  $386 = { (responsible $387) ->
    $388 = call $140 with $383 $167 ($68 is responsible)
    $389 = call $132 with $152 $372 ($68 is responsible)
    # Core:bool:not:6:equals:else
    $390 = { (responsible $391) ->
      $392 = call $147 with $372 ($68 is responsible)
      $393 = call $146 with $177 $392 ($68 is responsible)
      $394 = call $146 with $393 $189 ($68 is responsible)
      $395 = ($159, $394)
    }
    $396 = call $134 with $389 $250 $390 ($68 is responsible)
    $397 = call $140 with $396 $166 ($68 is responsible)
    $398 = call $132 with $397 $157 ($68 is responsible)
    # Core:bool:not:6:case-1:didNotMatch
    $399 = { (responsible $400) ->
      $401 = call $140 with $396 $167 ($68 is responsible)
      $402 = panicking because $184 ($68 is at fault)
    }
    $403 = call $134 with $398 $219 $399 ($68 is responsible)
  }
  $404 = call $134 with $385 $253 $386 ($68 is responsible)
}
# Core:bool:lazyAnd
$405 = { $406 $407 (+ responsible $408) ->
  $409 = call $337 with $406 ($56 is responsible)
  $410 = call $225 with $409 $205 $408 ($57 is responsible)
  $411 = call $312 with $407 ($50 is responsible)
  $412 = call $225 with $411 $200 $408 ($51 is responsible)
  $413 = call $132 with $165 $406 ($52 is responsible)
  # Core:bool:lazyAnd:18:equals:else
  $414 = { (responsible $415) ->
    $416 = call $147 with $406 ($52 is responsible)
    $417 = call $146 with $180 $416 ($52 is responsible)
    $418 = call $146 with $417 $189 ($52 is responsible)
    $419 = ($159, $418)
  }
  $420 = call $134 with $413 $250 $414 ($52 is responsible)
  $421 = call $140 with $420 $166 ($52 is responsible)
  $422 = call $132 with $421 $157 ($52 is responsible)
  # Core:bool:lazyAnd:18:case-0:matched
  $423 = { (responsible $424) ->
    $425 = call $325 with $407 ($55 is responsible)
    $426 = $425
    $427 = call $337 with $425 ($53 is responsible)
    $428 = call $225 with $427 $192 $408 ($54 is responsible)
    $429 = $426
  }
  # Core:bool:lazyAnd:18:case-0:didNotMatch
  $430 = { (responsible $431) ->
    $432 = call $140 with $420 $167 ($52 is responsible)
    $433 = call $132 with $152 $406 ($52 is responsible)
    # Core:bool:lazyAnd:18:equals:else
    $434 = { (responsible $435) ->
      $436 = call $147 with $406 ($52 is responsible)
      $437 = call $146 with $177 $436 ($52 is responsible)
      $438 = call $146 with $437 $189 ($52 is responsible)
      $439 = ($159, $438)
    }
    $440 = call $134 with $433 $250 $434 ($52 is responsible)
    $441 = call $140 with $440 $166 ($52 is responsible)
    $442 = call $132 with $441 $157 ($52 is responsible)
    # Core:bool:lazyAnd:18:case-1:didNotMatch
    $443 = { (responsible $444) ->
      $445 = call $140 with $440 $167 ($52 is responsible)
      $446 = panicking because $184 ($52 is at fault)
    }
    $447 = call $134 with $442 $253 $443 ($52 is responsible)
  }
  $448 = call $134 with $422 $423 $430 ($52 is responsible)
}
# Core:bool:lazyOr
$449 = { $450 $451 (+ responsible $452) ->
  $453 = call $337 with $450 ($64 is responsible)
  $454 = call $225 with $453 $205 $452 ($65 is responsible)
  $455 = call $312 with $451 ($58 is responsible)
  $456 = call $225 with $455 $200 $452 ($59 is responsible)
  $457 = call $132 with $165 $450 ($60 is responsible)
  # Core:bool:lazyOr:18:equals:else
  $458 = { (responsible $459) ->
    $460 = call $147 with $450 ($60 is responsible)
    $461 = call $146 with $180 $460 ($60 is responsible)
    $462 = call $146 with $461 $189 ($60 is responsible)
    $463 = ($159, $462)
  }
  $464 = call $134 with $457 $250 $458 ($60 is responsible)
  $465 = call $140 with $464 $166 ($60 is responsible)
  $466 = call $132 with $465 $157 ($60 is responsible)
  # Core:bool:lazyOr:18:case-0:didNotMatch
  $467 = { (responsible $468) ->
    $469 = call $140 with $464 $167 ($60 is responsible)
    $470 = call $132 with $152 $450 ($60 is responsible)
    # Core:bool:lazyOr:18:equals:else
    $471 = { (responsible $472) ->
      $473 = call $147 with $450 ($60 is responsible)
      $474 = call $146 with $177 $473 ($60 is responsible)
      $475 = call $146 with $474 $189 ($60 is responsible)
      $476 = ($159, $475)
    }
    $477 = call $134 with $470 $250 $471 ($60 is responsible)
    $478 = call $140 with $477 $166 ($60 is responsible)
    $479 = call $132 with $478 $157 ($60 is responsible)
    # Core:bool:lazyOr:18:case-1:matched
    $480 = { (responsible $481) ->
      $482 = call $325 with $451 ($61 is responsible)
      $483 = $482
      $484 = call $337 with $482 ($62 is responsible)
      $485 = call $225 with $484 $192 $452 ($63 is responsible)
      $486 = $483
    }
    # Core:bool:lazyOr:18:case-1:didNotMatch
    $487 = { (responsible $488) ->
      $489 = call $140 with $477 $167 ($60 is responsible)
      $490 = panicking because $184 ($60 is at fault)
    }
    $491 = call $134 with $479 $480 $487 ($60 is responsible)
  }
  $492 = call $134 with $466 $219 $467 ($60 is responsible)
}
# Core:check:checkEquals
$493 = { $494 $495 (+ responsible $496) ->
  $497 = call $132 with $494 $495 ($1 is responsible)
  $498 = call $148 with $494 ($74 is responsible)
  $499 = call $132 with $498 $164 ($75 is responsible)
  # Core:check:checkEquals:14
  $500 = { (responsible $501) ->
    $502 = $494
  }
  # Core:check:checkEquals:15
  $503 = { (responsible $504) ->
    $505 = call $147 with $494 ($76 is responsible)
  }
  $506 = call $134 with $499 $500 $503 ($77 is responsible)
  $507 = call $148 with $495 ($78 is responsible)
  $508 = call $132 with $507 $164 ($79 is responsible)
  # Core:check:checkEquals:21
  $509 = { (responsible $510) ->
    $511 = $495
  }
  # Core:check:checkEquals:22
  $512 = { (responsible $513) ->
    $514 = call $147 with $495 ($80 is responsible)
  }
  $515 = call $134 with $508 $509 $512 ($81 is responsible)
  $516 = call $146 with $175 $506 ($82 is responsible)
  $517 = call $146 with $516 $173 ($83 is responsible)
  $518 = call $146 with $517 $515 ($84 is responsible)
  $519 = call $146 with $518 $174 ($85 is responsible)
  $520 = call $225 with $497 $519 $496 ($86 is responsible)
}
# Core:function:is2
$521 = { $522 (+ responsible $523) ->
  $524 = call $148 with $522 ($43 is responsible)
  $525 = call $132 with $524 $153 ($1 is responsible)
  # Core:function:is2:11
  $526 = { (responsible $527) ->
    $528 = call $148 with $522 ($41 is responsible)
    $529 = call $132 with $528 $153 ($42 is responsible)
    $530 = call $225 with $529 $198 $112 ($7 is responsible)
    $531 = call $133 with $522 ($6 is responsible)
    $532 = call $132 with $531 $168 ($1 is responsible)
  }
  $533 = call $256 with $525 $526 $253 ($113 is responsible)
}
# Core:controlFlow:loop
$534 = { $535 (+ responsible $536) ->
  $537 = call $312 with $535 ($99 is responsible)
  $538 = call $225 with $537 $201 $536 ($92 is responsible)
  # Core:controlFlow:loop:14
  $539 = { $540 $541 (+ responsible $542) ->
    $543 = call $325 with $535 ($97 is responsible)
    $544 = call $132 with $543 $150 ($1 is responsible)
    $545 = call $132 with $543 $149 ($1 is responsible)
    $546 = call $337 with $544 ($70 is responsible)
    $547 = call $225 with $546 $205 $93 ($71 is responsible)
    $548 = call $337 with $545 ($72 is responsible)
    $549 = call $225 with $548 $206 $93 ($73 is responsible)
    # Core:bool:or:12
    $550 = { (responsible $551) ->
      $552 = $545
    }
    $553 = call $449 with $544 $550 ($69 is responsible)
    $554 = call $225 with $553 $185 $536 ($94 is responsible)
    $555 = call $132 with $543 $150 ($1 is responsible)
    # Core:controlFlow:loop:14:41
    $556 = { (responsible $557) ->
      $558 = call $540 with $160 ($95 is responsible)
    }
    $559 = call $337 with $555 ($91 is responsible)
    $560 = call $225 with $559 $193 $96 ($87 is responsible)
    $561 = call $312 with $556 ($88 is responsible)
    $562 = call $225 with $561 $202 $96 ($89 is responsible)
    $563 = call $256 with $555 $556 $222 ($90 is responsible)
  }
  $564 = call $521 with $539 ($104 is responsible)
  $565 = call $225 with $564 $186 $98 ($100 is responsible)
  # Core:controlFlow:recursive:18
  $566 = { $567 $568 (+ responsible $569) ->
    # Core:controlFlow:recursive:18:0
    $570 = { $571 (+ responsible $572) ->
      $573 = call $567 with $567 $571 ($101 is responsible)
    }
    $574 = call $539 with $570 $568 ($102 is responsible)
  }
  $575 = call $566 with $566 $160 ($103 is responsible)
}
# Builtins::isNonNegative
$576 = { $577 (+ responsible $578) ->
  $579 = call $148 with $577 ($41 is responsible)
  $580 = call $132 with $579 $155 ($42 is responsible)
  $581 = call $225 with $580 $203 $578 ($35 is responsible)
  $582 = call $137 with $577 $166 ($33 is responsible)
  $583 = call $132 with $154 $582 ($34 is responsible)
  # Builtins::isNonNegative:13:equals:else
  $584 = { (responsible $585) ->
    $586 = call $147 with $582 ($34 is responsible)
    $587 = call $146 with $178 $586 ($34 is responsible)
    $588 = call $146 with $587 $189 ($34 is responsible)
    $589 = ($159, $588)
  }
  $590 = call $134 with $583 $250 $584 ($34 is responsible)
  $591 = call $140 with $590 $166 ($34 is responsible)
  $592 = call $132 with $591 $157 ($34 is responsible)
  # Builtins::isNonNegative:13:isMatch:then
  $593 = { (responsible $594) ->
    $595 = $590
  }
  # Builtins::isNonNegative:13:isMatch:else
  $596 = { (responsible $597) ->
    $598 = call $132 with $151 $582 ($34 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $599 = { (responsible $600) ->
      $601 = call $147 with $582 ($34 is responsible)
      $602 = call $146 with $176 $601 ($34 is responsible)
      $603 = call $146 with $602 $189 ($34 is responsible)
      $604 = ($159, $603)
    }
    $605 = call $134 with $598 $250 $599 ($34 is responsible)
  }
  $606 = call $134 with $592 $593 $596 ($34 is responsible)
  $607 = call $140 with $606 $166 ($34 is responsible)
  $608 = call $132 with $607 $157 ($34 is responsible)
  # Builtins::isNonNegative:13:case-0:didNotMatch
  $609 = { (responsible $610) ->
    $611 = call $140 with $606 $167 ($34 is responsible)
    $612 = call $132 with $156 $582 ($34 is responsible)
    # Builtins::isNonNegative:13:equals:else
    $613 = { (responsible $614) ->
      $615 = call $147 with $582 ($34 is responsible)
      $616 = call $146 with $179 $615 ($34 is responsible)
      $617 = call $146 with $616 $189 ($34 is responsible)
      $618 = ($159, $617)
    }
    $619 = call $134 with $612 $250 $613 ($34 is responsible)
    $620 = call $140 with $619 $166 ($34 is responsible)
    $621 = call $132 with $620 $157 ($34 is responsible)
    # Builtins::isNonNegative:13:case-1:didNotMatch
    $622 = { (responsible $623) ->
      $624 = call $140 with $619 $167 ($34 is responsible)
      $625 = panicking because $184 ($34 is at fault)
    }
    $626 = call $134 with $621 $253 $622 ($34 is responsible)
  }
  $627 = call $134 with $608 $219 $609 ($34 is responsible)
}
# Builtins::isLessThanOrEqualTo
$628 = { $629 $630 (+ responsible $631) ->
  $632 = call $148 with $629 ($41 is responsible)
  $633 = call $132 with $632 $155 ($42 is responsible)
  $634 = call $225 with $633 $190 $631 ($32 is responsible)
  $635 = call $148 with $630 ($41 is responsible)
  $636 = call $132 with $635 $155 ($42 is responsible)
  $637 = call $225 with $636 $191 $631 ($29 is responsible)
  $638 = call $137 with $629 $630 ($30 is responsible)
  $639 = call $132 with $156 $638 ($31 is responsible)
  # Builtins::isLessThanOrEqualTo:19:equals:else
  $640 = { (responsible $641) ->
    $642 = call $147 with $638 ($31 is responsible)
    $643 = call $146 with $179 $642 ($31 is responsible)
    $644 = call $146 with $643 $189 ($31 is responsible)
    $645 = ($159, $644)
  }
  $646 = call $134 with $639 $250 $640 ($31 is responsible)
  $647 = call $140 with $646 $166 ($31 is responsible)
  $648 = call $132 with $647 $157 ($31 is responsible)
  # Builtins::isLessThanOrEqualTo:19:isMatch:then
  $649 = { (responsible $650) ->
    $651 = $646
  }
  # Builtins::isLessThanOrEqualTo:19:isMatch:else
  $652 = { (responsible $653) ->
    $654 = call $132 with $151 $638 ($31 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $655 = { (responsible $656) ->
      $657 = call $147 with $638 ($31 is responsible)
      $658 = call $146 with $176 $657 ($31 is responsible)
      $659 = call $146 with $658 $189 ($31 is responsible)
      $660 = ($159, $659)
    }
    $661 = call $134 with $654 $250 $655 ($31 is responsible)
  }
  $662 = call $134 with $648 $649 $652 ($31 is responsible)
  $663 = call $140 with $662 $166 ($31 is responsible)
  $664 = call $132 with $663 $157 ($31 is responsible)
  # Builtins::isLessThanOrEqualTo:19:case-0:didNotMatch
  $665 = { (responsible $666) ->
    $667 = call $140 with $662 $167 ($31 is responsible)
    $668 = call $132 with $154 $638 ($31 is responsible)
    # Builtins::isLessThanOrEqualTo:19:equals:else
    $669 = { (responsible $670) ->
      $671 = call $147 with $638 ($31 is responsible)
      $672 = call $146 with $178 $671 ($31 is responsible)
      $673 = call $146 with $672 $189 ($31 is responsible)
      $674 = ($159, $673)
    }
    $675 = call $134 with $668 $250 $669 ($31 is responsible)
    $676 = call $140 with $675 $166 ($31 is responsible)
    $677 = call $132 with $676 $157 ($31 is responsible)
    # Builtins::isLessThanOrEqualTo:19:case-1:didNotMatch
    $678 = { (responsible $679) ->
      $680 = call $140 with $675 $167 ($31 is responsible)
      $681 = panicking because $184 ($31 is at fault)
    }
    $682 = call $134 with $677 $253 $678 ($31 is responsible)
  }
  $683 = call $134 with $664 $219 $665 ($31 is responsible)
}
# Core:int:compareTo
$684 = { $685 $686 (+ responsible $687) ->
  $688 = call $148 with $685 ($43 is responsible)
  $689 = call $132 with $688 $155 ($1 is responsible)
  $690 = call $225 with $689 $208 $687 ($118 is responsible)
  $691 = call $148 with $686 ($43 is responsible)
  $692 = call $132 with $691 $155 ($1 is responsible)
  $693 = call $225 with $692 $209 $687 ($119 is responsible)
  $694 = call $148 with $685 ($41 is responsible)
  $695 = call $132 with $694 $155 ($42 is responsible)
  $696 = call $225 with $695 $190 $117 ($24 is responsible)
  $697 = call $148 with $686 ($41 is responsible)
  $698 = call $132 with $697 $155 ($42 is responsible)
  $699 = call $225 with $698 $191 $117 ($22 is responsible)
  $700 = call $137 with $685 $686 ($23 is responsible)
}
# Core:int:isLessThan
$701 = { $702 $703 (+ responsible $704) ->
  $705 = call $148 with $702 ($43 is responsible)
  $706 = call $132 with $705 $155 ($1 is responsible)
  $707 = call $225 with $706 $208 $704 ($124 is responsible)
  $708 = call $148 with $703 ($43 is responsible)
  $709 = call $132 with $708 $155 ($1 is responsible)
  $710 = call $225 with $709 $209 $704 ($125 is responsible)
  $711 = call $684 with $702 $703 ($123 is responsible)
  $712 = call $132 with $711 $156 ($1 is responsible)
}
# Core:int:isGreaterThan
$713 = { $714 $715 (+ responsible $716) ->
  $717 = call $148 with $714 ($43 is responsible)
  $718 = call $132 with $717 $155 ($1 is responsible)
  $719 = call $225 with $718 $208 $716 ($121 is responsible)
  $720 = call $148 with $715 ($43 is responsible)
  $721 = call $132 with $720 $155 ($1 is responsible)
  $722 = call $225 with $721 $209 $716 ($122 is responsible)
  $723 = call $684 with $714 $715 ($120 is responsible)
  $724 = call $132 with $723 $154 ($1 is responsible)
}
# Core:int:isNonNegative
$725 = { $726 (+ responsible $727) ->
  $728 = call $148 with $726 ($43 is responsible)
  $729 = call $132 with $728 $155 ($1 is responsible)
  $730 = call $225 with $729 $210 $727 ($129 is responsible)
  $731 = call $148 with $726 ($43 is responsible)
  $732 = call $132 with $731 $155 ($1 is responsible)
  $733 = call $225 with $732 $210 $130 ($126 is responsible)
  $734 = call $701 with $726 $166 ($127 is responsible)
  $735 = call $371 with $734 ($128 is responsible)
}
$736 = ($159, $183)
# Core:fixedDecimal:fromIntScaled
$737 = { $738 $739 (+ responsible $740) ->
  $741 = call $148 with $738 ($43 is responsible)
  $742 = call $132 with $741 $155 ($1 is responsible)
  $743 = call $225 with $742 $204 $740 ($106 is responsible)
  $744 = call $148 with $739 ($43 is responsible)
  $745 = call $132 with $744 $155 ($1 is responsible)
  # Core:fixedDecimal:isScale:18
  $746 = { (responsible $747) ->
    $748 = call $725 with $739 ($108 is responsible)
  }
  $749 = call $405 with $745 $746 ($109 is responsible)
  $750 = call $225 with $749 $212 $740 ($107 is responsible)
  $751 = [$161: $739, $158: $738]
  $752 = FixedDecimal $751
}
$753 = call $737 with $166 $166 ($105 is responsible)
$754 = Core:function:is1:11:3
$755 = Core:function:is1:13
# Core:function:is1
$756 = { $757 (+ responsible $758) ->
  $759 = call $148 with $757 ($43 is responsible)
  $760 = call $132 with $759 $153 ($1 is responsible)
  # Core:function:is1:11
  $761 = { (responsible $762) ->
    $763 = call $148 with $757 ($41 is responsible)
    $764 = call $132 with $763 $153 ($42 is responsible)
    $765 = call $225 with $764 $198 $754 ($7 is responsible)
    $766 = call $133 with $757 ($6 is responsible)
    $767 = call $132 with $766 $167 ($1 is responsible)
  }
  $768 = call $256 with $760 $761 $253 ($755 is responsible)
}
$769 = Builtins::intParse:11
$770 = Builtins::intParse:5
$771 = Core:int:fitsInRustU32:15
$772 = Core:int:fitsInRustU32:4
$773 = Core:int:fitsInRustU32:7
$774 = Core:int:fitsInRustU32:9
$775 = Core:int:isOdd:4
$776 = Core:int:isOdd:8
$777 = Core:int:isPositive:4
$778 = Core:int:isPositive:8
$779 = builtinIntParse
$780 = 42
$781 = 4294967295
$782 = "`isNonNegative value` was not satisfied"
# Core:int:isOdd
$783 = { $784 (+ responsible $785) ->
  $786 = call $148 with $784 ($43 is responsible)
  $787 = call $132 with $786 $155 ($1 is responsible)
  $788 = call $225 with $787 $210 $785 ($775 is responsible)
  $789 = call $148 with $784 ($41 is responsible)
  $790 = call $132 with $789 $155 ($42 is responsible)
  $791 = call $225 with $790 $190 $776 ($21 is responsible)
  $792 = call $136 with $784 $167 ($20 is responsible)
  $793 = call $132 with $792 $167 ($1 is responsible)
}
$794 = Builtins::listGet:11
$795 = Builtins::listGet:14
$796 = Builtins::listGet:16
$797 = Builtins::listGet:24
$798 = Builtins::listGet:25
$799 = Builtins::listGet:30
$800 = Builtins::listGet:37
$801 = Builtins::listGet:5
$802 = Builtins::listInsert:11
$803 = Builtins::listInsert:14
$804 = Builtins::listInsert:16
$805 = Builtins::listInsert:24
$806 = Builtins::listInsert:25
$807 = Builtins::listInsert:27
$808 = Builtins::listInsert:35
$809 = Builtins::listInsert:5
$810 = Builtins::listLength:11
$811 = Builtins::listLength:5
$812 = Builtins::textConcatenate:11
$813 = Builtins::textConcatenate:18
$814 = Builtins::textConcatenate:5
$815 = Core:iterator:109
$816 = Core:iterator:all:11
$817 = Core:iterator:all:15
$818 = Core:iterator:all:18:13
$819 = Core:iterator:all:18:15
$820 = Core:iterator:all:18:2
$821 = Core:iterator:all:18:26
$822 = Core:iterator:all:19
$823 = Core:iterator:all:9
$824 = Core:iterator:any:11
$825 = Core:iterator:any:15
$826 = Core:iterator:any:18:13
$827 = Core:iterator:any:18:15
$828 = Core:iterator:any:18:2
$829 = Core:iterator:any:18:26
$830 = Core:iterator:any:19
$831 = Core:iterator:any:9
$832 = Core:iterator:chunked:11
$833 = Core:iterator:chunked:21
$834 = Core:iterator:chunked:23
$835 = Core:iterator:chunked:27
$836 = Core:iterator:chunked:32
$837 = Core:iterator:ensure:11
$838 = Core:iterator:ensure:15
$839 = Core:iterator:ensure:19:2
$840 = Core:iterator:ensure:20
$841 = Core:iterator:ensure:9
$842 = Core:iterator:foldLeft:14
$843 = Core:iterator:foldLeft:16
$844 = Core:iterator:foldLeft:23:1
$845 = Core:iterator:foldLeft:23:4
$846 = Core:iterator:foldLeft:23:5
$847 = Core:iterator:foldLeft:23:5:10
$848 = Core:iterator:foldLeft:23:5:8
$849 = Core:iterator:foldLeft:23:5:item
$850 = Core:iterator:foldLeft:23:5:rest
$851 = Core:iterator:foldLeft:23:iterator
$852 = Core:iterator:foldLeft:23:value
$853 = Core:iterator:foldLeft:24
$854 = Core:iterator:foldLeft:3
$855 = Core:iterator:fromList:11
$856 = Core:iterator:fromList:22
$857 = Core:iterator:fromList:23:10
$858 = Core:iterator:fromList:24
$859 = Core:iterator:generate:11
$860 = Core:iterator:generate:21
$861 = Core:iterator:generate:23
$862 = Core:iterator:generate:33
$863 = Core:iterator:generate:35
$864 = Core:iterator:generate:45
$865 = Core:iterator:generate:47
$866 = Core:iterator:generate:50:6:16
$867 = Core:iterator:generate:50:6:4
$868 = Core:iterator:generate:50:7
$869 = Core:iterator:generate:51
$870 = Core:iterator:generateWithState:11
$871 = Core:iterator:generateWithState:14:1:2
$872 = Core:iterator:generateWithState:14:1:3
$873 = Core:iterator:generateWithState:14:1:3:19
$874 = Core:iterator:generateWithState:14:1:3:20
$875 = Core:iterator:generateWithState:14:1:3:22:0
$876 = Core:iterator:generateWithState:14:1:3:23
$877 = Core:iterator:generateWithState:14:1:3:25
$878 = Core:iterator:generateWithState:14:1:3:26
$879 = Core:iterator:generateWithState:14:1:3:27
$880 = Core:iterator:generateWithState:14:1:3:6
$881 = Core:iterator:generateWithState:14:1:3:item
$882 = Core:iterator:generateWithState:14:1:3:state
$883 = Core:iterator:generateWithState:15
$884 = Core:iterator:generateWithState:9
$885 = Core:iterator:isEmpty:3
$886 = Core:iterator:isEmpty:7
$887 = Core:iterator:joinToText:12:11
$888 = Core:iterator:joinToText:12:22
$889 = Core:iterator:joinToText:13
$890 = Core:iterator:joinToText:3
$891 = Core:iterator:length:3
$892 = Core:iterator:length:6
$893 = Core:iterator:length:8
$894 = Core:iterator:map:14
$895 = Core:iterator:map:16
$896 = Core:iterator:map:19:2
$897 = Core:iterator:map:19:3
$898 = Core:iterator:map:19:3:5
$899 = Core:iterator:map:19:3:item
$900 = Core:iterator:map:19:3:rest
$901 = Core:iterator:map:20
$902 = Core:iterator:map:3
$903 = Core:iterator:next:17
$904 = Core:iterator:next:3
$905 = Core:iterator:next:6
$906 = Core:iterator:next:nextFunction
$907 = Core:iterator:reduceLeft:11
$908 = Core:iterator:reduceLeft:15
$909 = Core:iterator:reduceLeft:17
$910 = Core:iterator:reduceLeft:18
$911 = Core:iterator:reduceLeft:18:14
$912 = Core:iterator:reduceLeft:18:item
$913 = Core:iterator:reduceLeft:18:rest
$914 = Core:iterator:reduceLeft:9
$915 = Core:iterator:skip:16
$916 = Core:iterator:skip:26
$917 = Core:iterator:skip:28
$918 = Core:iterator:skip:3
$919 = Core:iterator:skip:30:6:1
$920 = Core:iterator:skip:30:6:7:2
$921 = Core:iterator:skip:30:6:8:2
$922 = Core:iterator:skip:30:6:8:3
$923 = Core:iterator:skip:30:6:8:3:15
$924 = Core:iterator:skip:30:6:8:3:17
$925 = Core:iterator:skip:30:6:8:3:rest
$926 = Core:iterator:skip:30:6:9
$927 = Core:iterator:skip:30:6:iterator
$928 = Core:iterator:skip:30:6:n
$929 = Core:iterator:skip:30:7
$930 = Core:iterator:sum:19
$931 = Core:iterator:sum:3
$932 = Core:iterator:sum:5:17
$933 = Core:iterator:sum:6
$934 = Core:iterator:sum:8:10
$935 = Core:iterator:sum:9
$936 = Core:iterator:take:11
$937 = Core:iterator:take:21
$938 = Core:iterator:take:23
$939 = Core:iterator:take:27
$940 = Core:iterator:take:29
$941 = Core:iterator:take:31:1
$942 = Core:iterator:take:31:12
$943 = Core:iterator:take:31:index
$944 = Core:iterator:take:31:item
$945 = Core:iterator:take:32
$946 = Core:iterator:take:34:7
$947 = Core:iterator:take:35
$948 = Core:iterator:takeWhile:3
$949 = Core:iterator:takeWhile:7:2
$950 = Core:iterator:takeWhile:7:3
$951 = Core:iterator:takeWhile:7:3:4
$952 = Core:iterator:takeWhile:7:3:7
$953 = Core:iterator:takeWhile:7:3:item
$954 = Core:iterator:takeWhile:7:3:rest
$955 = Core:iterator:takeWhile:8
$956 = Core:iterator:toList:3
$957 = Core:iterator:toList:6:10
$958 = Core:iterator:toList:7
$959 = Core:iterator:where:14
$960 = Core:iterator:where:16
$961 = Core:iterator:where:19:2:2
$962 = Core:iterator:where:19:2:3
$963 = Core:iterator:where:19:2:3:4
$964 = Core:iterator:where:19:2:3:6:2
$965 = Core:iterator:where:19:2:3:6:4
$966 = Core:iterator:where:19:2:3:6:5
$967 = Core:iterator:where:19:2:3:6:5:item
$968 = Core:iterator:where:19:2:3:6:5:rest
$969 = Core:iterator:where:19:2:3:7
$970 = Core:iterator:where:19:2:3:item
$971 = Core:iterator:where:19:2:3:rest
$972 = Core:iterator:where:19:3
$973 = Core:iterator:where:20
$974 = Core:iterator:where:3
$975 = Core:iterator:windowed:16
$976 = Core:iterator:windowed:26
$977 = Core:iterator:windowed:28
$978 = Core:iterator:windowed:3
$979 = Core:iterator:windowed:40
$980 = Core:iterator:windowed:50
$981 = Core:iterator:windowed:52
$982 = Core:iterator:windowed:62
$983 = Core:iterator:windowed:64
$984 = Core:iterator:windowed:67:16
$985 = Core:iterator:windowed:67:22
$986 = Core:iterator:windowed:67:26:7
$987 = Core:iterator:windowed:67:28
$988 = Core:iterator:windowed:67:3
$989 = Core:iterator:windowed:67:5
$990 = Core:iterator:windowed:68
$991 = Core:iterator:withIndex:11:1
$992 = Core:iterator:withIndex:11:4
$993 = Core:iterator:withIndex:11:5
$994 = Core:iterator:withIndex:11:5:22
$995 = Core:iterator:withIndex:11:5:item
$996 = Core:iterator:withIndex:11:5:rest
$997 = Core:iterator:withIndex:11:index
$998 = Core:iterator:withIndex:11:iterator
$999 = Core:iterator:withIndex:12
$1000 = Core:iterator:withIndex:3
$1001 = Core:iterator:wrapSafe:11
$1002 = Core:iterator:wrapSafe:12:9
$1003 = Core:iterator:wrapSafe:16:1
$1004 = Core:iterator:wrapSafe:16:13
$1005 = Core:iterator:wrapSafe:16:1:10
$1006 = Core:iterator:wrapSafe:16:1:function
$1007 = Core:iterator:wrapSafe:16:22
$1008 = Core:iterator:wrapSafe:16:24
$1009 = Core:iterator:wrapSafe:16:26:10
$1010 = Core:iterator:wrapSafe:16:26:10:19
$1011 = Core:iterator:wrapSafe:16:26:10:7
$1012 = Core:iterator:wrapSafe:16:26:10:item
$1013 = Core:iterator:wrapSafe:16:26:10:rest
$1014 = Core:iterator:wrapSafe:16:26:9
$1015 = Core:iterator:wrapSafe:17
$1016 = Core:iterator:wrapSafe:9
$1017 = Core:list:append:11
$1018 = Core:list:append:4
$1019 = Core:list:append:9
$1020 = Core:result:is:1
$1021 = Core:result:is:1:_
$1022 = Core:result:mapOrElse:14
$1023 = Core:result:mapOrElse:16
$1024 = Core:result:mapOrElse:2
$1025 = Core:result:mapOrElse:26
$1026 = Core:result:mapOrElse:28
$1027 = Core:result:mapOrElse:30
$1028 = Core:result:mapOrElse:30:2
$1029 = Core:result:mapOrElse:30:5
$1030 = Core:result:mapOrElse:30:value
$1031 = Core:result:mapOrElse:30:value#1
$1032 = Core:result:mapOrElse:4
$1033 = Core:result:unwrapOr:2
$1034 = Core:result:unwrapOr:4
$1035 = Core:result:unwrapOr:8
$1036 = Core:result:unwrapOrElse:14
$1037 = Core:result:unwrapOrElse:16
$1038 = Core:result:unwrapOrElse:2
$1039 = Core:result:unwrapOrElse:20:9
$1040 = Core:result:unwrapOrElse:21
$1041 = Core:result:unwrapOrElse:4
$1042 = builtinListInsert
$1043 = builtinListLength
$1044 = Empty
$1045 = Error
$1046 = Index
$1047 = Item
$1048 = Iterator
$1049 = List
$1050 = More
$1051 = N
$1052 = Ok
$1053 = Rest
$1054 = State
$1055 = Value
$1056 = ""
$1057 = "Can't `reduceLeft` an empty iterator"
$1058 = "Expected Error, got "
$1059 = "Expected Iterator, got "
$1060 = "Expected More, got "
$1061 = "Expected Ok, got "
$1062 = "Expected `Empty`, got `"
$1063 = "Iterator items need to be ints."
$1064 = "Struct doesn't contain key `Index`: `"
$1065 = "Struct doesn't contain key `Item`: `"
$1066 = "Struct doesn't contain key `Iterator`: `"
$1067 = "Struct doesn't contain key `N`: `"
$1068 = "Struct doesn't contain key `Rest`: `"
$1069 = "Struct doesn't contain key `State`: `"
$1070 = "Struct doesn't contain key `Value`: `"
$1071 = "The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `"
$1072 = "The guard needs to panic."
$1073 = "`"
$1074 = "`a | typeIs Text` was not satisfied"
$1075 = "`all` needs an iterator."
$1076 = "`any` needs an iterator."
$1077 = "`b | typeIs Text` was not satisfied"
$1078 = "`bool.is allowPartialWindows` was not satisfied"
$1079 = "`bool.is itemResult` was not satisfied"
$1080 = "`chunked` needs an iterator."
$1081 = "`ensure` needs an iterator."
$1082 = "`foldLeft` needs an iterator."
$1083 = "`function.is0 defaultGetter` was not satisfied"
$1084 = "`function.is0 notIteratorGuard` was not satisfied"
$1085 = "`function.is1 errorMapper` was not satisfied"
$1086 = "`function.is1 guard` was not satisfied"
$1087 = "`function.is1 mapper` was not satisfied"
$1088 = "`function.is1 okMapper` was not satisfied"
$1089 = "`function.is1 tester` was not satisfied"
$1090 = "`function.is1 valueGetter` was not satisfied"
$1091 = "`function.is2 combine` was not satisfied"
$1092 = "`index | intCompareTo (list | ✨.listLength) | equals Less` was not satisfied"
$1093 = "`index | isLessThanOrEqualTo (list | ✨.listLength)` was not satisfied"
$1094 = "`index | isNonNegative` was not satisfied"
$1095 = "`index | typeIs Int` was not satisfied"
$1096 = "`int.fitsInRustU32 length` was not satisfied"
$1097 = "`int.is length` was not satisfied"
$1098 = "`int.is n` was not satisfied"
$1099 = "`int.is size` was not satisfied"
$1100 = "`int.is step` was not satisfied"
$1101 = "`int.isNonNegative length` was not satisfied"
$1102 = "`int.isNonNegative n` was not satisfied"
$1103 = "`int.isPositive size` was not satisfied"
$1104 = "`int.isPositive step` was not satisfied"
$1105 = "`is list` was not satisfied"
$1106 = "`is result` was not satisfied"
$1107 = "`isEmpty` needs an iterator."
$1108 = "`joinToText` needs an iterator."
$1109 = "`length` needs an iterator."
$1110 = "`list | typeIs List` was not satisfied"
$1111 = "`list.is l` was not satisfied"
$1112 = "`map` needs an iterator."
$1113 = "`next` needs an iterator."
$1114 = "`reduceLeft` needs an iterator."
$1115 = "`skip` needs an iterator."
$1116 = "`sum` needs an iterator."
$1117 = "`takeWhile` needs an iterator."
$1118 = "`take` needs an iterator."
$1119 = "`text.is item` was not satisfied"
$1120 = "`toList` needs an iterator."
$1121 = "`where` needs an iterator."
$1122 = "`windowed` needs an iterator."
$1123 = "`withIndex` needs an iterator."
# Core:result:is
$1124 = { $1125 (+ responsible $1126) ->
  $1127 = call $148 with $1125 ($1020 is responsible)
  $1128 = call $132 with $163 $1127 ($1020 is responsible)
  # Core:result:is:1:equals:then
  $1129 = { (responsible $1130) ->
    $1131 = call $145 with $1125 ($1020 is responsible)
    $1132 = call $132 with $1052 $1131 ($1020 is responsible)
    # Core:result:is:1:equals:then
    $1133 = { (responsible $1134) ->
      $1135 = call $144 with $1125 ($1020 is responsible)
      $1136 = call $132 with $165 $1135 ($1020 is responsible)
      # Core:result:is:1:equals:then
      $1137 = { (responsible $1138) ->
        $1139 = call $143 with $1125 ($1020 is responsible)
        $1140 = ($157, $1139)
      }
      # Core:result:is:1:equals:else
      $1141 = { (responsible $1142) ->
        $1143 = call $147 with $1135 ($1020 is responsible)
        $1144 = $736
      }
      $1145 = call $134 with $1136 $1137 $1141 ($1020 is responsible)
    }
    # Core:result:is:1:equals:else
    $1146 = { (responsible $1147) ->
      $1148 = call $147 with $1131 ($1020 is responsible)
      $1149 = call $146 with $1061 $1148 ($1020 is responsible)
      $1150 = call $146 with $1149 $174 ($1020 is responsible)
      $1151 = ($159, $1150)
    }
    $1152 = call $134 with $1132 $1133 $1146 ($1020 is responsible)
  }
  # Core:result:is:1:equals:else
  $1153 = { (responsible $1154) ->
    $1155 = call $147 with $1127 ($1020 is responsible)
    $1156 = call $146 with $182 $1155 ($1020 is responsible)
    $1157 = call $146 with $1156 $189 ($1020 is responsible)
    $1158 = ($159, $1157)
  }
  $1159 = call $134 with $1128 $1129 $1153 ($1020 is responsible)
  $1160 = call $140 with $1159 $166 ($1020 is responsible)
  $1161 = call $132 with $1160 $157 ($1020 is responsible)
  # Core:result:is:1:isMatch:then
  $1162 = { (responsible $1163) ->
    $1164 = $1159
  }
  # Core:result:is:1:isMatch:else
  $1165 = { (responsible $1166) ->
    $1167 = call $148 with $1125 ($1020 is responsible)
    $1168 = call $132 with $163 $1167 ($1020 is responsible)
    # Core:result:is:1:equals:then
    $1169 = { (responsible $1170) ->
      $1171 = call $145 with $1125 ($1020 is responsible)
      $1172 = call $132 with $1045 $1171 ($1020 is responsible)
      # Core:result:is:1:equals:then
      $1173 = { (responsible $1174) ->
        $1175 = call $144 with $1125 ($1020 is responsible)
        $1176 = call $132 with $165 $1175 ($1020 is responsible)
        # Core:result:is:1:equals:then
        $1177 = { (responsible $1178) ->
          $1179 = call $143 with $1125 ($1020 is responsible)
          $1180 = ($157, $1179)
        }
        # Core:result:is:1:equals:else
        $1181 = { (responsible $1182) ->
          $1183 = call $147 with $1175 ($1020 is responsible)
          $1184 = $736
        }
        $1185 = call $134 with $1176 $1177 $1181 ($1020 is responsible)
      }
      # Core:result:is:1:equals:else
      $1186 = { (responsible $1187) ->
        $1188 = call $147 with $1171 ($1020 is responsible)
        $1189 = call $146 with $1058 $1188 ($1020 is responsible)
        $1190 = call $146 with $1189 $174 ($1020 is responsible)
        $1191 = ($159, $1190)
      }
      $1192 = call $134 with $1172 $1173 $1186 ($1020 is responsible)
    }
    # Core:result:is:1:equals:else
    $1193 = { (responsible $1194) ->
      $1195 = call $147 with $1167 ($1020 is responsible)
      $1196 = call $146 with $182 $1195 ($1020 is responsible)
      $1197 = call $146 with $1196 $189 ($1020 is responsible)
      $1198 = ($159, $1197)
    }
    $1199 = call $134 with $1168 $1169 $1193 ($1020 is responsible)
  }
  $1200 = call $134 with $1161 $1162 $1165 ($1020 is responsible)
  $1201 = call $140 with $1200 $166 ($1020 is responsible)
  $1202 = call $132 with $1201 $157 ($1020 is responsible)
  # Core:result:is:1:case-0:matched
  $1203 = { (responsible $1204) ->
    $1205 = call $140 with $1200 $167 ($1021 is responsible)
    $1206 = $165
  }
  # Core:result:is:1:case-0:didNotMatch
  $1207 = { (responsible $1208) ->
    $1209 = call $140 with $1200 $167 ($1020 is responsible)
    $1210 = $152
  }
  $1211 = call $134 with $1202 $1203 $1207 ($1020 is responsible)
}
# Core:result:mapOrElse
$1212 = { $1213 $1214 $1215 (+ responsible $1216) ->
  $1217 = call $1124 with $1213 ($1024 is responsible)
  $1218 = call $225 with $1217 $1106 $1216 ($1032 is responsible)
  $1219 = call $756 with $1214 ($1022 is responsible)
  $1220 = call $225 with $1219 $1088 $1216 ($1023 is responsible)
  $1221 = call $756 with $1215 ($1025 is responsible)
  $1222 = call $225 with $1221 $1085 $1216 ($1026 is responsible)
  $1223 = call $148 with $1213 ($1027 is responsible)
  $1224 = call $132 with $163 $1223 ($1027 is responsible)
  # Core:result:mapOrElse:30:equals:then
  $1225 = { (responsible $1226) ->
    $1227 = call $145 with $1213 ($1027 is responsible)
    $1228 = call $132 with $1052 $1227 ($1027 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1229 = { (responsible $1230) ->
      $1231 = call $144 with $1213 ($1027 is responsible)
      $1232 = call $132 with $165 $1231 ($1027 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1233 = { (responsible $1234) ->
        $1235 = call $143 with $1213 ($1027 is responsible)
        $1236 = ($157, $1235)
      }
      # Core:result:mapOrElse:30:equals:else
      $1237 = { (responsible $1238) ->
        $1239 = call $147 with $1231 ($1027 is responsible)
        $1240 = $736
      }
      $1241 = call $134 with $1232 $1233 $1237 ($1027 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1242 = { (responsible $1243) ->
      $1244 = call $147 with $1227 ($1027 is responsible)
      $1245 = call $146 with $1061 $1244 ($1027 is responsible)
      $1246 = call $146 with $1245 $174 ($1027 is responsible)
      $1247 = ($159, $1246)
    }
    $1248 = call $134 with $1228 $1229 $1242 ($1027 is responsible)
  }
  # Core:result:mapOrElse:30:equals:else
  $1249 = { (responsible $1250) ->
    $1251 = call $147 with $1223 ($1027 is responsible)
    $1252 = call $146 with $182 $1251 ($1027 is responsible)
    $1253 = call $146 with $1252 $189 ($1027 is responsible)
    $1254 = ($159, $1253)
  }
  $1255 = call $134 with $1224 $1225 $1249 ($1027 is responsible)
  $1256 = call $140 with $1255 $166 ($1027 is responsible)
  $1257 = call $132 with $1256 $157 ($1027 is responsible)
  # Core:result:mapOrElse:30:case-0:matched
  $1258 = { (responsible $1259) ->
    $1260 = call $140 with $1255 $167 ($1030 is responsible)
    $1261 = call $1214 with $1260 ($1028 is responsible)
  }
  # Core:result:mapOrElse:30:case-0:didNotMatch
  $1262 = { (responsible $1263) ->
    $1264 = call $140 with $1255 $167 ($1027 is responsible)
    $1265 = call $148 with $1213 ($1027 is responsible)
    $1266 = call $132 with $163 $1265 ($1027 is responsible)
    # Core:result:mapOrElse:30:equals:then
    $1267 = { (responsible $1268) ->
      $1269 = call $145 with $1213 ($1027 is responsible)
      $1270 = call $132 with $1045 $1269 ($1027 is responsible)
      # Core:result:mapOrElse:30:equals:then
      $1271 = { (responsible $1272) ->
        $1273 = call $144 with $1213 ($1027 is responsible)
        $1274 = call $132 with $165 $1273 ($1027 is responsible)
        # Core:result:mapOrElse:30:equals:then
        $1275 = { (responsible $1276) ->
          $1277 = call $143 with $1213 ($1027 is responsible)
          $1278 = ($157, $1277)
        }
        # Core:result:mapOrElse:30:equals:else
        $1279 = { (responsible $1280) ->
          $1281 = call $147 with $1273 ($1027 is responsible)
          $1282 = $736
        }
        $1283 = call $134 with $1274 $1275 $1279 ($1027 is responsible)
      }
      # Core:result:mapOrElse:30:equals:else
      $1284 = { (responsible $1285) ->
        $1286 = call $147 with $1269 ($1027 is responsible)
        $1287 = call $146 with $1058 $1286 ($1027 is responsible)
        $1288 = call $146 with $1287 $174 ($1027 is responsible)
        $1289 = ($159, $1288)
      }
      $1290 = call $134 with $1270 $1271 $1284 ($1027 is responsible)
    }
    # Core:result:mapOrElse:30:equals:else
    $1291 = { (responsible $1292) ->
      $1293 = call $147 with $1265 ($1027 is responsible)
      $1294 = call $146 with $182 $1293 ($1027 is responsible)
      $1295 = call $146 with $1294 $189 ($1027 is responsible)
      $1296 = ($159, $1295)
    }
    $1297 = call $134 with $1266 $1267 $1291 ($1027 is responsible)
    $1298 = call $140 with $1297 $166 ($1027 is responsible)
    $1299 = call $132 with $1298 $157 ($1027 is responsible)
    # Core:result:mapOrElse:30:case-1:matched
    $1300 = { (responsible $1301) ->
      $1302 = call $140 with $1297 $167 ($1031 is responsible)
      $1303 = call $1215 with $1302 ($1029 is responsible)
    }
    # Core:result:mapOrElse:30:case-1:didNotMatch
    $1304 = { (responsible $1305) ->
      $1306 = call $140 with $1297 $167 ($1027 is responsible)
      $1307 = panicking because $184 ($1027 is at fault)
    }
    $1308 = call $134 with $1299 $1300 $1304 ($1027 is responsible)
  }
  $1309 = call $134 with $1257 $1258 $1262 ($1027 is responsible)
}
# Core:iterator:range:38, Core:result:unwrapOrElse:19
$1310 = { $1311 (+ responsible $1312) ->
  $1313 = $1311
}
# Core:result:unwrapOr
$1314 = { $1315 $1316 (+ responsible $1317) ->
  $1318 = call $1124 with $1315 ($1033 is responsible)
  $1319 = call $225 with $1318 $1106 $1317 ($1034 is responsible)
  # Core:result:unwrapOr:7
  $1320 = { (responsible $1321) ->
    $1322 = $1316
  }
  $1323 = call $1124 with $1315 ($1038 is responsible)
  $1324 = call $225 with $1323 $1106 $1035 ($1041 is responsible)
  $1325 = call $312 with $1320 ($1036 is responsible)
  $1326 = call $225 with $1325 $1083 $1035 ($1037 is responsible)
  # Core:result:unwrapOrElse:20
  $1327 = { $1328 (+ responsible $1329) ->
    $1330 = call $325 with $1320 ($1039 is responsible)
  }
  $1331 = call $1212 with $1315 $1310 $1327 ($1040 is responsible)
}
# Builtins::listGet
$1332 = { $1333 $1334 (+ responsible $1335) ->
  $1336 = call $148 with $1333 ($41 is responsible)
  $1337 = call $132 with $1336 $1049 ($42 is responsible)
  $1338 = call $225 with $1337 $1110 $1335 ($801 is responsible)
  $1339 = call $148 with $1334 ($41 is responsible)
  $1340 = call $132 with $1339 $155 ($42 is responsible)
  $1341 = call $225 with $1340 $1095 $1335 ($794 is responsible)
  $1342 = call $576 with $1334 ($795 is responsible)
  $1343 = call $225 with $1342 $1094 $1335 ($796 is responsible)
  $1344 = call $1043 with $1333 ($797 is responsible)
  $1345 = call $148 with $1334 ($41 is responsible)
  $1346 = call $132 with $1345 $155 ($42 is responsible)
  $1347 = call $225 with $1346 $190 $798 ($24 is responsible)
  $1348 = call $137 with $1334 $1344 ($23 is responsible)
  $1349 = call $132 with $1348 $156 ($1 is responsible)
  $1350 = call $225 with $1349 $1092 $1335 ($799 is responsible)
  $1351 = call $140 with $1333 $1334 ($800 is responsible)
}
# Builtins::listInsert
$1352 = { $1353 $1354 $1355 (+ responsible $1356) ->
  $1357 = call $148 with $1353 ($41 is responsible)
  $1358 = call $132 with $1357 $1049 ($42 is responsible)
  $1359 = call $225 with $1358 $1110 $1356 ($809 is responsible)
  $1360 = call $148 with $1354 ($41 is responsible)
  $1361 = call $132 with $1360 $155 ($42 is responsible)
  $1362 = call $225 with $1361 $1095 $1356 ($802 is responsible)
  $1363 = call $576 with $1354 ($803 is responsible)
  $1364 = call $225 with $1363 $1094 $1356 ($804 is responsible)
  $1365 = call $1043 with $1353 ($805 is responsible)
  $1366 = call $628 with $1354 $1365 ($806 is responsible)
  $1367 = call $225 with $1366 $1093 $1356 ($807 is responsible)
  $1368 = call $1042 with $1353 $1354 $1355 ($808 is responsible)
}
# Core:list:append
$1369 = { $1370 $1371 (+ responsible $1372) ->
  $1373 = call $148 with $1370 ($43 is responsible)
  $1374 = call $132 with $1373 $1049 ($1 is responsible)
  $1375 = call $225 with $1374 $1105 $1372 ($1018 is responsible)
  $1376 = call $148 with $1370 ($41 is responsible)
  $1377 = call $132 with $1376 $1049 ($42 is responsible)
  $1378 = call $225 with $1377 $1110 $1019 ($811 is responsible)
  $1379 = call $1043 with $1370 ($810 is responsible)
  $1380 = call $1352 with $1370 $1379 $1371 ($1017 is responsible)
}
# Core:iterator:generate:50:5, Core:iterator:generateWithState:14:1:3:case-1:matched, Core:iterator:map:19:3:case-0:matched, Core:iterator:skip:30:6:8:3:case-0:matched, Core:iterator:takeWhile:7:3:case-0:matched, Core:iterator:takeWhile:7:3:6, Core:iterator:where:19:2:3:case-0:matched, Core:iterator:where:19:2:3:6:5:case-0:matched, Core:iterator:windowed:67:27, Core:iterator:withIndex:11:5:case-0:matched, Core:iterator:wrapSafe:16:26:10:case-0:matched
$1381 = { (responsible $1382) ->
  $1383 = $1044
}
# Core:iterator:wrapSafe
$1384 = { $1385 $1386 (+ responsible $1387) ->
  $1388 = call $312 with $1386 ($1016 is responsible)
  $1389 = call $225 with $1388 $1084 $1387 ($1001 is responsible)
  # Core:iterator:wrapSafe:12
  $1390 = { (responsible $1391) ->
    $1392 = call $325 with $1386 ($1002 is responsible)
    $1393 = panicking because $1072 ($1387 is at fault)
  }
  # Core:iterator:wrapSafe:16
  $1394 = { $1395 $1396 (+ responsible $1397) ->
    $1398 = call $148 with $1396 ($1003 is responsible)
    $1399 = call $132 with $163 $1398 ($1003 is responsible)
    # Core:iterator:wrapSafe:16:1:equals:then
    $1400 = { (responsible $1401) ->
      $1402 = call $145 with $1396 ($1003 is responsible)
      $1403 = call $132 with $1048 $1402 ($1003 is responsible)
      # Core:iterator:wrapSafe:16:1:equals:then
      $1404 = { (responsible $1405) ->
        $1406 = call $144 with $1396 ($1003 is responsible)
        $1407 = call $132 with $165 $1406 ($1003 is responsible)
        # Core:iterator:wrapSafe:16:1:equals:then
        $1408 = { (responsible $1409) ->
          $1410 = call $143 with $1396 ($1003 is responsible)
          $1411 = ($157, $1410)
        }
        # Core:iterator:wrapSafe:16:1:equals:else
        $1412 = { (responsible $1413) ->
          $1414 = call $147 with $1406 ($1003 is responsible)
          $1415 = $736
        }
        $1416 = call $134 with $1407 $1408 $1412 ($1003 is responsible)
      }
      # Core:iterator:wrapSafe:16:1:equals:else
      $1417 = { (responsible $1418) ->
        $1419 = call $147 with $1402 ($1003 is responsible)
        $1420 = call $146 with $1059 $1419 ($1003 is responsible)
        $1421 = call $146 with $1420 $174 ($1003 is responsible)
        $1422 = ($159, $1421)
      }
      $1423 = call $134 with $1403 $1404 $1417 ($1003 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:equals:else
    $1424 = { (responsible $1425) ->
      $1426 = call $147 with $1398 ($1003 is responsible)
      $1427 = call $146 with $182 $1426 ($1003 is responsible)
      $1428 = call $146 with $1427 $189 ($1003 is responsible)
      $1429 = ($159, $1428)
    }
    $1430 = call $134 with $1399 $1400 $1424 ($1003 is responsible)
    $1431 = call $140 with $1430 $166 ($1003 is responsible)
    $1432 = call $132 with $1431 $157 ($1003 is responsible)
    # Core:iterator:wrapSafe:16:1:case-0:matched
    $1433 = { (responsible $1434) ->
      $1435 = call $140 with $1430 $167 ($1006 is responsible)
    }
    # Core:iterator:wrapSafe:16:1:case-0:didNotMatch
    $1436 = { (responsible $1437) ->
      $1438 = call $140 with $1430 $167 ($1003 is responsible)
      $1439 = call $325 with $1390 ($1005 is responsible)
    }
    $1440 = call $134 with $1432 $1433 $1436 ($1003 is responsible)
    $1441 = call $312 with $1440 ($1004 is responsible)
    $1442 = call $371 with $1441 ($1007 is responsible)
    $1443 = call $337 with $1442 ($91 is responsible)
    $1444 = call $225 with $1443 $193 $1008 ($87 is responsible)
    $1445 = call $312 with $1390 ($88 is responsible)
    $1446 = call $225 with $1445 $202 $1008 ($89 is responsible)
    $1447 = call $256 with $1442 $1390 $222 ($90 is responsible)
    # Core:iterator:wrapSafe:16:26
    $1448 = { (responsible $1449) ->
      $1450 = call $325 with $1440 ($1014 is responsible)
      $1451 = call $132 with $1044 $1450 ($1009 is responsible)
      # Core:iterator:wrapSafe:16:26:10:equals:else
      $1452 = { (responsible $1453) ->
        $1454 = call $147 with $1450 ($1009 is responsible)
        $1455 = call $146 with $1062 $1454 ($1009 is responsible)
        $1456 = call $146 with $1455 $189 ($1009 is responsible)
        $1457 = ($159, $1456)
      }
      $1458 = call $134 with $1451 $250 $1452 ($1009 is responsible)
      $1459 = call $140 with $1458 $166 ($1009 is responsible)
      $1460 = call $132 with $1459 $157 ($1009 is responsible)
      # Core:iterator:wrapSafe:16:26:10:case-0:didNotMatch
      $1461 = { (responsible $1462) ->
        $1463 = call $140 with $1458 $167 ($1009 is responsible)
        $1464 = call $148 with $1450 ($1009 is responsible)
        $1465 = call $132 with $163 $1464 ($1009 is responsible)
        # Core:iterator:wrapSafe:16:26:10:equals:then
        $1466 = { (responsible $1467) ->
          $1468 = call $145 with $1450 ($1009 is responsible)
          $1469 = call $132 with $1050 $1468 ($1009 is responsible)
          # Core:iterator:wrapSafe:16:26:10:equals:then
          $1470 = { (responsible $1471) ->
            $1472 = call $144 with $1450 ($1009 is responsible)
            $1473 = call $132 with $165 $1472 ($1009 is responsible)
            # Core:iterator:wrapSafe:16:26:10:equals:then
            $1474 = { (responsible $1475) ->
              $1476 = call $143 with $1450 ($1009 is responsible)
              $1477 = call $148 with $1476 ($1009 is responsible)
              $1478 = call $132 with $162 $1477 ($1009 is responsible)
              # Core:iterator:wrapSafe:16:26:10:equals:then
              $1479 = { (responsible $1480) ->
                $1481 = call $142 with $1476 $1047 ($1009 is responsible)
                # Core:iterator:wrapSafe:16:26:10:hasKey:then
                $1482 = { (responsible $1483) ->
                  $1484 = call $141 with $1476 $1047 ($1009 is responsible)
                  $1485 = ($157, $1484)
                }
                # Core:iterator:wrapSafe:16:26:10:hasKey:else
                $1486 = { (responsible $1487) ->
                  $1488 = call $147 with $1476 ($1009 is responsible)
                  $1489 = call $146 with $1065 $1488 ($1009 is responsible)
                  $1490 = call $146 with $1489 $189 ($1009 is responsible)
                  $1491 = ($159, $1490)
                }
                $1492 = call $134 with $1481 $1482 $1486 ($1009 is responsible)
                $1493 = call $140 with $1492 $166 ($1009 is responsible)
                $1494 = call $132 with $1493 $157 ($1009 is responsible)
                # Core:iterator:wrapSafe:16:26:10:isMatch:then
                $1495 = { (responsible $1496) ->
                  $1497 = call $140 with $1492 $167 ($1009 is responsible)
                  $1498 = call $142 with $1476 $1053 ($1009 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:hasKey:then
                  $1499 = { (responsible $1500) ->
                    $1501 = call $141 with $1476 $1053 ($1009 is responsible)
                    $1502 = ($157, $1501)
                  }
                  # Core:iterator:wrapSafe:16:26:10:hasKey:else
                  $1503 = { (responsible $1504) ->
                    $1505 = call $147 with $1476 ($1009 is responsible)
                    $1506 = call $146 with $1068 $1505 ($1009 is responsible)
                    $1507 = call $146 with $1506 $189 ($1009 is responsible)
                    $1508 = ($159, $1507)
                  }
                  $1509 = call $134 with $1498 $1499 $1503 ($1009 is responsible)
                  $1510 = call $140 with $1509 $166 ($1009 is responsible)
                  $1511 = call $132 with $1510 $157 ($1009 is responsible)
                  # Core:iterator:wrapSafe:16:26:10:isMatch:then
                  $1512 = { (responsible $1513) ->
                    $1514 = call $140 with $1509 $167 ($1009 is responsible)
                    $1515 = ($157, $1497, $1514)
                  }
                  # Core:iterator:wrapSafe:16:26:10:isMatch:else
                  $1516 = { (responsible $1517) ->
                    $1518 = $1509
                  }
                  $1519 = call $134 with $1511 $1512 $1516 ($1009 is responsible)
                }
                # Core:iterator:wrapSafe:16:26:10:isMatch:else
                $1520 = { (responsible $1521) ->
                  $1522 = $1492
                }
                $1523 = call $134 with $1494 $1495 $1520 ($1009 is responsible)
              }
              # Core:iterator:wrapSafe:16:26:10:equals:else
              $1524 = { (responsible $1525) ->
                $1526 = call $147 with $1477 ($1009 is responsible)
                $1527 = call $146 with $181 $1526 ($1009 is responsible)
                $1528 = call $146 with $1527 $189 ($1009 is responsible)
                $1529 = ($159, $1528)
              }
              $1530 = call $134 with $1478 $1479 $1524 ($1009 is responsible)
            }
            # Core:iterator:wrapSafe:16:26:10:equals:else
            $1531 = { (responsible $1532) ->
              $1533 = call $147 with $1472 ($1009 is responsible)
              $1534 = $736
            }
            $1535 = call $134 with $1473 $1474 $1531 ($1009 is responsible)
          }
          # Core:iterator:wrapSafe:16:26:10:equals:else
          $1536 = { (responsible $1537) ->
            $1538 = call $147 with $1468 ($1009 is responsible)
            $1539 = call $146 with $1060 $1538 ($1009 is responsible)
            $1540 = call $146 with $1539 $174 ($1009 is responsible)
            $1541 = ($159, $1540)
          }
          $1542 = call $134 with $1469 $1470 $1536 ($1009 is responsible)
        }
        # Core:iterator:wrapSafe:16:26:10:equals:else
        $1543 = { (responsible $1544) ->
          $1545 = call $147 with $1464 ($1009 is responsible)
          $1546 = call $146 with $182 $1545 ($1009 is responsible)
          $1547 = call $146 with $1546 $189 ($1009 is responsible)
          $1548 = ($159, $1547)
        }
        $1549 = call $134 with $1465 $1466 $1543 ($1009 is responsible)
        $1550 = call $140 with $1549 $166 ($1009 is responsible)
        $1551 = call $132 with $1550 $157 ($1009 is responsible)
        # Core:iterator:wrapSafe:16:26:10:case-1:matched
        $1552 = { (responsible $1553) ->
          $1554 = call $140 with $1549 $167 ($1012 is responsible)
          $1555 = call $140 with $1549 $168 ($1013 is responsible)
          $1556 = call $1395 with $1555 ($1011 is responsible)
          $1557 = [$1053: $1556, $1047: $1554]
          $1558 = More $1557
        }
        # Core:iterator:wrapSafe:16:26:10:case-1:didNotMatch
        $1559 = { (responsible $1560) ->
          $1561 = call $140 with $1549 $167 ($1009 is responsible)
          $1562 = call $325 with $1390 ($1010 is responsible)
        }
        $1563 = call $134 with $1551 $1552 $1559 ($1009 is responsible)
      }
      $1564 = call $134 with $1460 $1381 $1461 ($1009 is responsible)
    }
    $1565 = Iterator $1448
  }
  $1566 = call $521 with $1394 ($104 is responsible)
  $1567 = call $225 with $1566 $186 $1015 ($100 is responsible)
  # Core:controlFlow:recursive:18
  $1568 = { $1569 $1570 (+ responsible $1571) ->
    # Core:controlFlow:recursive:18:0
    $1572 = { $1573 (+ responsible $1574) ->
      $1575 = call $1569 with $1569 $1573 ($101 is responsible)
    }
    $1576 = call $1394 with $1572 $1570 ($102 is responsible)
  }
  $1577 = call $1568 with $1568 $1385 ($103 is responsible)
}
# Core:iterator:next
$1578 = { $1579 (+ responsible $1580) ->
  # Core:iterator:next:2
  $1581 = { (responsible $1582) ->
    $1583 = panicking because $1113 ($1580 is at fault)
  }
  $1584 = call $1384 with $1579 $1581 ($904 is responsible)
  $1585 = call $148 with $1584 ($905 is responsible)
  $1586 = call $132 with $163 $1585 ($905 is responsible)
  # Core:iterator:next:6:equals:then
  $1587 = { (responsible $1588) ->
    $1589 = call $145 with $1584 ($905 is responsible)
    $1590 = call $132 with $1048 $1589 ($905 is responsible)
    # Core:iterator:next:6:equals:then
    $1591 = { (responsible $1592) ->
      $1593 = call $144 with $1584 ($905 is responsible)
      $1594 = call $132 with $165 $1593 ($905 is responsible)
      # Core:iterator:next:6:equals:then
      $1595 = { (responsible $1596) ->
        $1597 = call $143 with $1584 ($905 is responsible)
        $1598 = ($157, $1597)
      }
      # Core:iterator:next:6:equals:else
      $1599 = { (responsible $1600) ->
        $1601 = call $147 with $1593 ($905 is responsible)
        $1602 = $736
      }
      $1603 = call $134 with $1594 $1595 $1599 ($905 is responsible)
    }
    # Core:iterator:next:6:equals:else
    $1604 = { (responsible $1605) ->
      $1606 = call $147 with $1589 ($905 is responsible)
      $1607 = call $146 with $1059 $1606 ($905 is responsible)
      $1608 = call $146 with $1607 $174 ($905 is responsible)
      $1609 = ($159, $1608)
    }
    $1610 = call $134 with $1590 $1591 $1604 ($905 is responsible)
  }
  # Core:iterator:next:6:equals:else
  $1611 = { (responsible $1612) ->
    $1613 = call $147 with $1585 ($905 is responsible)
    $1614 = call $146 with $182 $1613 ($905 is responsible)
    $1615 = call $146 with $1614 $189 ($905 is responsible)
    $1616 = ($159, $1615)
  }
  $1617 = call $134 with $1586 $1587 $1611 ($905 is responsible)
  $1618 = call $140 with $1617 $166 ($905 is responsible)
  $1619 = call $132 with $1618 $157 ($905 is responsible)
  # Core:iterator:next:6:isMatch:else
  $1620 = { (responsible $1621) ->
    $1622 = call $140 with $1617 $167 ($905 is responsible)
    $1623 = panicking because $1622 ($905 is at fault)
  }
  $1624 = call $134 with $1619 $222 $1620 ($905 is responsible)
  $1625 = call $140 with $1617 $167 ($906 is responsible)
  $1626 = call $325 with $1625 ($903 is responsible)
}
# Core:iterator:generateWithState
$1627 = { $1628 $1629 (+ responsible $1630) ->
  $1631 = call $756 with $1629 ($884 is responsible)
  $1632 = call $225 with $1631 $1087 $1630 ($870 is responsible)
  # Core:iterator:generateWithState:14
  $1633 = { $1634 $1635 (+ responsible $1636) ->
    # Core:iterator:generateWithState:14:1
    $1637 = { (responsible $1638) ->
      $1639 = call $1629 with $1635 ($871 is responsible)
      $1640 = call $148 with $1639 ($872 is responsible)
      $1641 = call $132 with $163 $1640 ($872 is responsible)
      # Core:iterator:generateWithState:14:1:3:equals:then
      $1642 = { (responsible $1643) ->
        $1644 = call $145 with $1639 ($872 is responsible)
        $1645 = call $132 with $1050 $1644 ($872 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:then
        $1646 = { (responsible $1647) ->
          $1648 = call $144 with $1639 ($872 is responsible)
          $1649 = call $132 with $165 $1648 ($872 is responsible)
          # Core:iterator:generateWithState:14:1:3:equals:then
          $1650 = { (responsible $1651) ->
            $1652 = call $143 with $1639 ($872 is responsible)
            $1653 = call $148 with $1652 ($872 is responsible)
            $1654 = call $132 with $162 $1653 ($872 is responsible)
            # Core:iterator:generateWithState:14:1:3:equals:then
            $1655 = { (responsible $1656) ->
              $1657 = call $142 with $1652 $1047 ($872 is responsible)
              # Core:iterator:generateWithState:14:1:3:hasKey:then
              $1658 = { (responsible $1659) ->
                $1660 = call $141 with $1652 $1047 ($872 is responsible)
                $1661 = ($157, $1660)
              }
              # Core:iterator:generateWithState:14:1:3:hasKey:else
              $1662 = { (responsible $1663) ->
                $1664 = call $147 with $1652 ($872 is responsible)
                $1665 = call $146 with $1065 $1664 ($872 is responsible)
                $1666 = call $146 with $1665 $189 ($872 is responsible)
                $1667 = ($159, $1666)
              }
              $1668 = call $134 with $1657 $1658 $1662 ($872 is responsible)
              $1669 = call $140 with $1668 $166 ($872 is responsible)
              $1670 = call $132 with $1669 $157 ($872 is responsible)
              # Core:iterator:generateWithState:14:1:3:isMatch:then
              $1671 = { (responsible $1672) ->
                $1673 = call $140 with $1668 $167 ($872 is responsible)
                $1674 = call $142 with $1652 $1054 ($872 is responsible)
                # Core:iterator:generateWithState:14:1:3:hasKey:then
                $1675 = { (responsible $1676) ->
                  $1677 = call $141 with $1652 $1054 ($872 is responsible)
                  $1678 = ($157, $1677)
                }
                # Core:iterator:generateWithState:14:1:3:hasKey:else
                $1679 = { (responsible $1680) ->
                  $1681 = call $147 with $1652 ($872 is responsible)
                  $1682 = call $146 with $1069 $1681 ($872 is responsible)
                  $1683 = call $146 with $1682 $189 ($872 is responsible)
                  $1684 = ($159, $1683)
                }
                $1685 = call $134 with $1674 $1675 $1679 ($872 is responsible)
                $1686 = call $140 with $1685 $166 ($872 is responsible)
                $1687 = call $132 with $1686 $157 ($872 is responsible)
                # Core:iterator:generateWithState:14:1:3:isMatch:then
                $1688 = { (responsible $1689) ->
                  $1690 = call $140 with $1685 $167 ($872 is responsible)
                  $1691 = ($157, $1673, $1690)
                }
                # Core:iterator:generateWithState:14:1:3:isMatch:else
                $1692 = { (responsible $1693) ->
                  $1694 = $1685
                }
                $1695 = call $134 with $1687 $1688 $1692 ($872 is responsible)
              }
              # Core:iterator:generateWithState:14:1:3:isMatch:else
              $1696 = { (responsible $1697) ->
                $1698 = $1668
              }
              $1699 = call $134 with $1670 $1671 $1696 ($872 is responsible)
            }
            # Core:iterator:generateWithState:14:1:3:equals:else
            $1700 = { (responsible $1701) ->
              $1702 = call $147 with $1653 ($872 is responsible)
              $1703 = call $146 with $181 $1702 ($872 is responsible)
              $1704 = call $146 with $1703 $189 ($872 is responsible)
              $1705 = ($159, $1704)
            }
            $1706 = call $134 with $1654 $1655 $1700 ($872 is responsible)
          }
          # Core:iterator:generateWithState:14:1:3:equals:else
          $1707 = { (responsible $1708) ->
            $1709 = call $147 with $1648 ($872 is responsible)
            $1710 = $736
          }
          $1711 = call $134 with $1649 $1650 $1707 ($872 is responsible)
        }
        # Core:iterator:generateWithState:14:1:3:equals:else
        $1712 = { (responsible $1713) ->
          $1714 = call $147 with $1644 ($872 is responsible)
          $1715 = call $146 with $1060 $1714 ($872 is responsible)
          $1716 = call $146 with $1715 $174 ($872 is responsible)
          $1717 = ($159, $1716)
        }
        $1718 = call $134 with $1645 $1646 $1712 ($872 is responsible)
      }
      # Core:iterator:generateWithState:14:1:3:equals:else
      $1719 = { (responsible $1720) ->
        $1721 = call $147 with $1640 ($872 is responsible)
        $1722 = call $146 with $182 $1721 ($872 is responsible)
        $1723 = call $146 with $1722 $189 ($872 is responsible)
        $1724 = ($159, $1723)
      }
      $1725 = call $134 with $1641 $1642 $1719 ($872 is responsible)
      $1726 = call $140 with $1725 $166 ($872 is responsible)
      $1727 = call $132 with $1726 $157 ($872 is responsible)
      # Core:iterator:generateWithState:14:1:3:case-0:matched
      $1728 = { (responsible $1729) ->
        $1730 = call $140 with $1725 $167 ($881 is responsible)
        $1731 = call $140 with $1725 $168 ($882 is responsible)
        $1732 = call $1634 with $1731 ($880 is responsible)
        $1733 = [$1053: $1732, $1047: $1730]
        $1734 = More $1733
      }
      # Core:iterator:generateWithState:14:1:3:case-0:didNotMatch
      $1735 = { (responsible $1736) ->
        $1737 = call $140 with $1725 $167 ($872 is responsible)
        $1738 = call $132 with $1044 $1639 ($872 is responsible)
        # Core:iterator:generateWithState:14:1:3:equals:else
        $1739 = { (responsible $1740) ->
          $1741 = call $147 with $1639 ($872 is responsible)
          $1742 = call $146 with $1062 $1741 ($872 is responsible)
          $1743 = call $146 with $1742 $189 ($872 is responsible)
          $1744 = ($159, $1743)
        }
        $1745 = call $134 with $1738 $250 $1739 ($872 is responsible)
        $1746 = call $140 with $1745 $166 ($872 is responsible)
        $1747 = call $132 with $1746 $157 ($872 is responsible)
        # Core:iterator:generateWithState:14:1:3:case-1:didNotMatch
        $1748 = { (responsible $1749) ->
          $1750 = call $140 with $1745 $167 ($872 is responsible)
          # Core:iterator:generateWithState:14:1:3:case-2:matched
          $1751 = { (responsible $1752) ->
            $1753 = call $148 with $1639 ($873 is responsible)
            $1754 = call $132 with $1753 $164 ($874 is responsible)
            # Core:iterator:generateWithState:14:1:3:21
            $1755 = { (responsible $1756) ->
              $1757 = $1639
            }
            # Core:iterator:generateWithState:14:1:3:22
            $1758 = { (responsible $1759) ->
              $1760 = call $147 with $1639 ($875 is responsible)
            }
            $1761 = call $134 with $1754 $1755 $1758 ($876 is responsible)
            $1762 = call $146 with $1071 $1761 ($877 is responsible)
            $1763 = call $146 with $1762 $1073 ($878 is responsible)
            $1764 = call $225 with $152 $1763 $1630 ($879 is responsible)
          }
          $1765 = call $1751 with no arguments ($872 is responsible)
        }
        $1766 = call $134 with $1747 $1381 $1748 ($872 is responsible)
      }
      $1767 = call $134 with $1727 $1728 $1735 ($872 is responsible)
    }
    $1768 = Iterator $1637
  }
  $1769 = call $521 with $1633 ($104 is responsible)
  $1770 = call $225 with $1769 $186 $883 ($100 is responsible)
  # Core:controlFlow:recursive:18
  $1771 = { $1772 $1773 (+ responsible $1774) ->
    # Core:controlFlow:recursive:18:0
    $1775 = { $1776 (+ responsible $1777) ->
      $1778 = call $1772 with $1772 $1776 ($101 is responsible)
    }
    $1779 = call $1633 with $1775 $1773 ($102 is responsible)
  }
  $1780 = call $1771 with $1771 $1628 ($103 is responsible)
}
# Core:iterator:generate
$1781 = { $1782 $1783 (+ responsible $1784) ->
  $1785 = call $148 with $1782 ($43 is responsible)
  $1786 = call $132 with $1785 $155 ($1 is responsible)
  $1787 = call $225 with $1786 $1097 $1784 ($859 is responsible)
  $1788 = call $725 with $1782 ($860 is responsible)
  $1789 = call $225 with $1788 $1101 $1784 ($861 is responsible)
  $1790 = call $148 with $1782 ($43 is responsible)
  $1791 = call $132 with $1790 $155 ($1 is responsible)
  $1792 = call $225 with $1791 $210 $862 ($772 is responsible)
  $1793 = call $725 with $1782 ($773 is responsible)
  $1794 = call $225 with $1793 $782 $862 ($774 is responsible)
  $1795 = call $701 with $1782 $781 ($771 is responsible)
  $1796 = call $225 with $1795 $1096 $1784 ($863 is responsible)
  $1797 = call $756 with $1783 ($864 is responsible)
  $1798 = call $225 with $1797 $1090 $1784 ($865 is responsible)
  # Core:iterator:generate:50
  $1799 = { $1800 (+ responsible $1801) ->
    $1802 = call $132 with $1800 $1782 ($1 is responsible)
    # Core:iterator:generate:50:6
    $1803 = { (responsible $1804) ->
      $1805 = call $1783 with $1800 ($867 is responsible)
      $1806 = call $148 with $1800 ($41 is responsible)
      $1807 = call $132 with $1806 $155 ($42 is responsible)
      $1808 = call $225 with $1807 $190 $866 ($19 is responsible)
      $1809 = call $135 with $1800 $167 ($18 is responsible)
      $1810 = [$1054: $1809, $1047: $1805]
      $1811 = More $1810
    }
    $1812 = call $256 with $1802 $1381 $1803 ($868 is responsible)
  }
  $1813 = call $1627 with $166 $1799 ($869 is responsible)
}
# Core:iterator:map
$1814 = { $1815 $1816 (+ responsible $1817) ->
  # Core:iterator:map:2
  $1818 = { (responsible $1819) ->
    $1820 = panicking because $1112 ($1817 is at fault)
  }
  $1821 = call $1384 with $1815 $1818 ($902 is responsible)
  $1822 = call $756 with $1816 ($894 is responsible)
  $1823 = call $225 with $1822 $1087 $1817 ($895 is responsible)
  # Core:iterator:map:19
  $1824 = { $1825 (+ responsible $1826) ->
    $1827 = call $1578 with $1825 ($896 is responsible)
    $1828 = call $132 with $1044 $1827 ($897 is responsible)
    # Core:iterator:map:19:3:equals:else
    $1829 = { (responsible $1830) ->
      $1831 = call $147 with $1827 ($897 is responsible)
      $1832 = call $146 with $1062 $1831 ($897 is responsible)
      $1833 = call $146 with $1832 $189 ($897 is responsible)
      $1834 = ($159, $1833)
    }
    $1835 = call $134 with $1828 $250 $1829 ($897 is responsible)
    $1836 = call $140 with $1835 $166 ($897 is responsible)
    $1837 = call $132 with $1836 $157 ($897 is responsible)
    # Core:iterator:map:19:3:case-0:didNotMatch
    $1838 = { (responsible $1839) ->
      $1840 = call $140 with $1835 $167 ($897 is responsible)
      $1841 = call $148 with $1827 ($897 is responsible)
      $1842 = call $132 with $163 $1841 ($897 is responsible)
      # Core:iterator:map:19:3:equals:then
      $1843 = { (responsible $1844) ->
        $1845 = call $145 with $1827 ($897 is responsible)
        $1846 = call $132 with $1050 $1845 ($897 is responsible)
        # Core:iterator:map:19:3:equals:then
        $1847 = { (responsible $1848) ->
          $1849 = call $144 with $1827 ($897 is responsible)
          $1850 = call $132 with $165 $1849 ($897 is responsible)
          # Core:iterator:map:19:3:equals:then
          $1851 = { (responsible $1852) ->
            $1853 = call $143 with $1827 ($897 is responsible)
            $1854 = call $148 with $1853 ($897 is responsible)
            $1855 = call $132 with $162 $1854 ($897 is responsible)
            # Core:iterator:map:19:3:equals:then
            $1856 = { (responsible $1857) ->
              $1858 = call $142 with $1853 $1047 ($897 is responsible)
              # Core:iterator:map:19:3:hasKey:then
              $1859 = { (responsible $1860) ->
                $1861 = call $141 with $1853 $1047 ($897 is responsible)
                $1862 = ($157, $1861)
              }
              # Core:iterator:map:19:3:hasKey:else
              $1863 = { (responsible $1864) ->
                $1865 = call $147 with $1853 ($897 is responsible)
                $1866 = call $146 with $1065 $1865 ($897 is responsible)
                $1867 = call $146 with $1866 $189 ($897 is responsible)
                $1868 = ($159, $1867)
              }
              $1869 = call $134 with $1858 $1859 $1863 ($897 is responsible)
              $1870 = call $140 with $1869 $166 ($897 is responsible)
              $1871 = call $132 with $1870 $157 ($897 is responsible)
              # Core:iterator:map:19:3:isMatch:then
              $1872 = { (responsible $1873) ->
                $1874 = call $140 with $1869 $167 ($897 is responsible)
                $1875 = call $142 with $1853 $1053 ($897 is responsible)
                # Core:iterator:map:19:3:hasKey:then
                $1876 = { (responsible $1877) ->
                  $1878 = call $141 with $1853 $1053 ($897 is responsible)
                  $1879 = ($157, $1878)
                }
                # Core:iterator:map:19:3:hasKey:else
                $1880 = { (responsible $1881) ->
                  $1882 = call $147 with $1853 ($897 is responsible)
                  $1883 = call $146 with $1068 $1882 ($897 is responsible)
                  $1884 = call $146 with $1883 $189 ($897 is responsible)
                  $1885 = ($159, $1884)
                }
                $1886 = call $134 with $1875 $1876 $1880 ($897 is responsible)
                $1887 = call $140 with $1886 $166 ($897 is responsible)
                $1888 = call $132 with $1887 $157 ($897 is responsible)
                # Core:iterator:map:19:3:isMatch:then
                $1889 = { (responsible $1890) ->
                  $1891 = call $140 with $1886 $167 ($897 is responsible)
                  $1892 = ($157, $1874, $1891)
                }
                # Core:iterator:map:19:3:isMatch:else
                $1893 = { (responsible $1894) ->
                  $1895 = $1886
                }
                $1896 = call $134 with $1888 $1889 $1893 ($897 is responsible)
              }
              # Core:iterator:map:19:3:isMatch:else
              $1897 = { (responsible $1898) ->
                $1899 = $1869
              }
              $1900 = call $134 with $1871 $1872 $1897 ($897 is responsible)
            }
            # Core:iterator:map:19:3:equals:else
            $1901 = { (responsible $1902) ->
              $1903 = call $147 with $1854 ($897 is responsible)
              $1904 = call $146 with $181 $1903 ($897 is responsible)
              $1905 = call $146 with $1904 $189 ($897 is responsible)
              $1906 = ($159, $1905)
            }
            $1907 = call $134 with $1855 $1856 $1901 ($897 is responsible)
          }
          # Core:iterator:map:19:3:equals:else
          $1908 = { (responsible $1909) ->
            $1910 = call $147 with $1849 ($897 is responsible)
            $1911 = $736
          }
          $1912 = call $134 with $1850 $1851 $1908 ($897 is responsible)
        }
        # Core:iterator:map:19:3:equals:else
        $1913 = { (responsible $1914) ->
          $1915 = call $147 with $1845 ($897 is responsible)
          $1916 = call $146 with $1060 $1915 ($897 is responsible)
          $1917 = call $146 with $1916 $174 ($897 is responsible)
          $1918 = ($159, $1917)
        }
        $1919 = call $134 with $1846 $1847 $1913 ($897 is responsible)
      }
      # Core:iterator:map:19:3:equals:else
      $1920 = { (responsible $1921) ->
        $1922 = call $147 with $1841 ($897 is responsible)
        $1923 = call $146 with $182 $1922 ($897 is responsible)
        $1924 = call $146 with $1923 $189 ($897 is responsible)
        $1925 = ($159, $1924)
      }
      $1926 = call $134 with $1842 $1843 $1920 ($897 is responsible)
      $1927 = call $140 with $1926 $166 ($897 is responsible)
      $1928 = call $132 with $1927 $157 ($897 is responsible)
      # Core:iterator:map:19:3:case-1:matched
      $1929 = { (responsible $1930) ->
        $1931 = call $140 with $1926 $167 ($899 is responsible)
        $1932 = call $140 with $1926 $168 ($900 is responsible)
        $1933 = call $1816 with $1931 ($898 is responsible)
        $1934 = [$1054: $1932, $1047: $1933]
        $1935 = More $1934
      }
      # Core:iterator:map:19:3:case-1:didNotMatch
      $1936 = { (responsible $1937) ->
        $1938 = call $140 with $1926 $167 ($897 is responsible)
        $1939 = panicking because $184 ($897 is at fault)
      }
      $1940 = call $134 with $1928 $1929 $1936 ($897 is responsible)
    }
    $1941 = call $134 with $1837 $1381 $1838 ($897 is responsible)
  }
  $1942 = call $1627 with $1821 $1824 ($901 is responsible)
}
# Core:iterator:withIndex:11
$1943 = { $1944 (+ responsible $1945) ->
  $1946 = call $148 with $1944 ($991 is responsible)
  $1947 = call $132 with $162 $1946 ($991 is responsible)
  # Core:iterator:withIndex:11:1:equals:then
  $1948 = { (responsible $1949) ->
    $1950 = call $142 with $1944 $1048 ($991 is responsible)
    # Core:iterator:withIndex:11:1:hasKey:then
    $1951 = { (responsible $1952) ->
      $1953 = call $141 with $1944 $1048 ($991 is responsible)
      $1954 = ($157, $1953)
    }
    # Core:iterator:withIndex:11:1:hasKey:else
    $1955 = { (responsible $1956) ->
      $1957 = call $147 with $1944 ($991 is responsible)
      $1958 = call $146 with $1066 $1957 ($991 is responsible)
      $1959 = call $146 with $1958 $189 ($991 is responsible)
      $1960 = ($159, $1959)
    }
    $1961 = call $134 with $1950 $1951 $1955 ($991 is responsible)
    $1962 = call $140 with $1961 $166 ($991 is responsible)
    $1963 = call $132 with $1962 $157 ($991 is responsible)
    # Core:iterator:withIndex:11:1:isMatch:then
    $1964 = { (responsible $1965) ->
      $1966 = call $140 with $1961 $167 ($991 is responsible)
      $1967 = call $142 with $1944 $1046 ($991 is responsible)
      # Core:iterator:withIndex:11:1:hasKey:then
      $1968 = { (responsible $1969) ->
        $1970 = call $141 with $1944 $1046 ($991 is responsible)
        $1971 = ($157, $1970)
      }
      # Core:iterator:withIndex:11:1:hasKey:else
      $1972 = { (responsible $1973) ->
        $1974 = call $147 with $1944 ($991 is responsible)
        $1975 = call $146 with $1064 $1974 ($991 is responsible)
        $1976 = call $146 with $1975 $189 ($991 is responsible)
        $1977 = ($159, $1976)
      }
      $1978 = call $134 with $1967 $1968 $1972 ($991 is responsible)
      $1979 = call $140 with $1978 $166 ($991 is responsible)
      $1980 = call $132 with $1979 $157 ($991 is responsible)
      # Core:iterator:withIndex:11:1:isMatch:then
      $1981 = { (responsible $1982) ->
        $1983 = call $140 with $1978 $167 ($991 is responsible)
        $1984 = ($157, $1966, $1983)
      }
      # Core:iterator:withIndex:11:1:isMatch:else
      $1985 = { (responsible $1986) ->
        $1987 = $1978
      }
      $1988 = call $134 with $1980 $1981 $1985 ($991 is responsible)
    }
    # Core:iterator:withIndex:11:1:isMatch:else
    $1989 = { (responsible $1990) ->
      $1991 = $1961
    }
    $1992 = call $134 with $1963 $1964 $1989 ($991 is responsible)
  }
  # Core:iterator:withIndex:11:1:equals:else
  $1993 = { (responsible $1994) ->
    $1995 = call $147 with $1946 ($991 is responsible)
    $1996 = call $146 with $181 $1995 ($991 is responsible)
    $1997 = call $146 with $1996 $189 ($991 is responsible)
    $1998 = ($159, $1997)
  }
  $1999 = call $134 with $1947 $1948 $1993 ($991 is responsible)
  $2000 = call $140 with $1999 $166 ($991 is responsible)
  $2001 = call $132 with $2000 $157 ($991 is responsible)
  # Core:iterator:withIndex:11:1:isMatch:else
  $2002 = { (responsible $2003) ->
    $2004 = call $140 with $1999 $167 ($991 is responsible)
    $2005 = panicking because $2004 ($991 is at fault)
  }
  $2006 = call $134 with $2001 $222 $2002 ($991 is responsible)
  $2007 = call $140 with $1999 $167 ($998 is responsible)
  $2008 = call $140 with $1999 $168 ($997 is responsible)
  $2009 = call $1578 with $2007 ($992 is responsible)
  $2010 = call $132 with $1044 $2009 ($993 is responsible)
  # Core:iterator:withIndex:11:5:equals:else
  $2011 = { (responsible $2012) ->
    $2013 = call $147 with $2009 ($993 is responsible)
    $2014 = call $146 with $1062 $2013 ($993 is responsible)
    $2015 = call $146 with $2014 $189 ($993 is responsible)
    $2016 = ($159, $2015)
  }
  $2017 = call $134 with $2010 $250 $2011 ($993 is responsible)
  $2018 = call $140 with $2017 $166 ($993 is responsible)
  $2019 = call $132 with $2018 $157 ($993 is responsible)
  # Core:iterator:withIndex:11:5:case-0:didNotMatch
  $2020 = { (responsible $2021) ->
    $2022 = call $140 with $2017 $167 ($993 is responsible)
    $2023 = call $148 with $2009 ($993 is responsible)
    $2024 = call $132 with $163 $2023 ($993 is responsible)
    # Core:iterator:withIndex:11:5:equals:then
    $2025 = { (responsible $2026) ->
      $2027 = call $145 with $2009 ($993 is responsible)
      $2028 = call $132 with $1050 $2027 ($993 is responsible)
      # Core:iterator:withIndex:11:5:equals:then
      $2029 = { (responsible $2030) ->
        $2031 = call $144 with $2009 ($993 is responsible)
        $2032 = call $132 with $165 $2031 ($993 is responsible)
        # Core:iterator:withIndex:11:5:equals:then
        $2033 = { (responsible $2034) ->
          $2035 = call $143 with $2009 ($993 is responsible)
          $2036 = call $148 with $2035 ($993 is responsible)
          $2037 = call $132 with $162 $2036 ($993 is responsible)
          # Core:iterator:withIndex:11:5:equals:then
          $2038 = { (responsible $2039) ->
            $2040 = call $142 with $2035 $1047 ($993 is responsible)
            # Core:iterator:withIndex:11:5:hasKey:then
            $2041 = { (responsible $2042) ->
              $2043 = call $141 with $2035 $1047 ($993 is responsible)
              $2044 = ($157, $2043)
            }
            # Core:iterator:withIndex:11:5:hasKey:else
            $2045 = { (responsible $2046) ->
              $2047 = call $147 with $2035 ($993 is responsible)
              $2048 = call $146 with $1065 $2047 ($993 is responsible)
              $2049 = call $146 with $2048 $189 ($993 is responsible)
              $2050 = ($159, $2049)
            }
            $2051 = call $134 with $2040 $2041 $2045 ($993 is responsible)
            $2052 = call $140 with $2051 $166 ($993 is responsible)
            $2053 = call $132 with $2052 $157 ($993 is responsible)
            # Core:iterator:withIndex:11:5:isMatch:then
            $2054 = { (responsible $2055) ->
              $2056 = call $140 with $2051 $167 ($993 is responsible)
              $2057 = call $142 with $2035 $1053 ($993 is responsible)
              # Core:iterator:withIndex:11:5:hasKey:then
              $2058 = { (responsible $2059) ->
                $2060 = call $141 with $2035 $1053 ($993 is responsible)
                $2061 = ($157, $2060)
              }
              # Core:iterator:withIndex:11:5:hasKey:else
              $2062 = { (responsible $2063) ->
                $2064 = call $147 with $2035 ($993 is responsible)
                $2065 = call $146 with $1068 $2064 ($993 is responsible)
                $2066 = call $146 with $2065 $189 ($993 is responsible)
                $2067 = ($159, $2066)
              }
              $2068 = call $134 with $2057 $2058 $2062 ($993 is responsible)
              $2069 = call $140 with $2068 $166 ($993 is responsible)
              $2070 = call $132 with $2069 $157 ($993 is responsible)
              # Core:iterator:withIndex:11:5:isMatch:then
              $2071 = { (responsible $2072) ->
                $2073 = call $140 with $2068 $167 ($993 is responsible)
                $2074 = ($157, $2056, $2073)
              }
              # Core:iterator:withIndex:11:5:isMatch:else
              $2075 = { (responsible $2076) ->
                $2077 = $2068
              }
              $2078 = call $134 with $2070 $2071 $2075 ($993 is responsible)
            }
            # Core:iterator:withIndex:11:5:isMatch:else
            $2079 = { (responsible $2080) ->
              $2081 = $2051
            }
            $2082 = call $134 with $2053 $2054 $2079 ($993 is responsible)
          }
          # Core:iterator:withIndex:11:5:equals:else
          $2083 = { (responsible $2084) ->
            $2085 = call $147 with $2036 ($993 is responsible)
            $2086 = call $146 with $181 $2085 ($993 is responsible)
            $2087 = call $146 with $2086 $189 ($993 is responsible)
            $2088 = ($159, $2087)
          }
          $2089 = call $134 with $2037 $2038 $2083 ($993 is responsible)
        }
        # Core:iterator:withIndex:11:5:equals:else
        $2090 = { (responsible $2091) ->
          $2092 = call $147 with $2031 ($993 is responsible)
          $2093 = $736
        }
        $2094 = call $134 with $2032 $2033 $2090 ($993 is responsible)
      }
      # Core:iterator:withIndex:11:5:equals:else
      $2095 = { (responsible $2096) ->
        $2097 = call $147 with $2027 ($993 is responsible)
        $2098 = call $146 with $1060 $2097 ($993 is responsible)
        $2099 = call $146 with $2098 $174 ($993 is responsible)
        $2100 = ($159, $2099)
      }
      $2101 = call $134 with $2028 $2029 $2095 ($993 is responsible)
    }
    # Core:iterator:withIndex:11:5:equals:else
    $2102 = { (responsible $2103) ->
      $2104 = call $147 with $2023 ($993 is responsible)
      $2105 = call $146 with $182 $2104 ($993 is responsible)
      $2106 = call $146 with $2105 $189 ($993 is responsible)
      $2107 = ($159, $2106)
    }
    $2108 = call $134 with $2024 $2025 $2102 ($993 is responsible)
    $2109 = call $140 with $2108 $166 ($993 is responsible)
    $2110 = call $132 with $2109 $157 ($993 is responsible)
    # Core:iterator:withIndex:11:5:case-1:matched
    $2111 = { (responsible $2112) ->
      $2113 = call $140 with $2108 $167 ($995 is responsible)
      $2114 = call $140 with $2108 $168 ($996 is responsible)
      $2115 = [$1047: $2113, $1046: $2008]
      $2116 = call $148 with $2008 ($41 is responsible)
      $2117 = call $132 with $2116 $155 ($42 is responsible)
      $2118 = call $225 with $2117 $190 $994 ($19 is responsible)
      $2119 = call $135 with $2008 $167 ($18 is responsible)
      $2120 = [$1046: $2119, $1048: $2114]
      $2121 = [$1047: $2115, $1054: $2120]
      $2122 = More $2121
    }
    # Core:iterator:withIndex:11:5:case-1:didNotMatch
    $2123 = { (responsible $2124) ->
      $2125 = call $140 with $2108 $167 ($993 is responsible)
      $2126 = panicking because $184 ($993 is at fault)
    }
    $2127 = call $134 with $2110 $2111 $2123 ($993 is responsible)
  }
  $2128 = call $134 with $2019 $1381 $2020 ($993 is responsible)
}
# Core:iterator:ensure
$2129 = { $2130 $2131 (+ responsible $2132) ->
  $2133 = call $756 with $2131 ($841 is responsible)
  $2134 = call $225 with $2133 $1086 $2132 ($837 is responsible)
  # Core:iterator:ensure:14
  $2135 = { (responsible $2136) ->
    $2137 = panicking because $1081 ($2132 is at fault)
  }
  $2138 = call $1384 with $2130 $2135 ($838 is responsible)
  # Core:iterator:ensure:19
  $2139 = { $2140 (+ responsible $2141) ->
    $2142 = $2140
    $2143 = call $2131 with $2140 ($839 is responsible)
    $2144 = $2142
  }
  $2145 = call $1814 with $2138 $2139 ($840 is responsible)
}
# Core:iterator:foldLeft
$2146 = { $2147 $2148 $2149 (+ responsible $2150) ->
  # Core:iterator:foldLeft:2
  $2151 = { (responsible $2152) ->
    $2153 = panicking because $1082 ($2150 is at fault)
  }
  $2154 = call $1384 with $2147 $2151 ($854 is responsible)
  $2155 = call $521 with $2149 ($842 is responsible)
  $2156 = call $225 with $2155 $1091 $2150 ($843 is responsible)
  $2157 = [$1055: $2148, $1048: $2154]
  # Core:iterator:foldLeft:23
  $2158 = { $2159 $2160 (+ responsible $2161) ->
    $2162 = call $148 with $2160 ($844 is responsible)
    $2163 = call $132 with $162 $2162 ($844 is responsible)
    # Core:iterator:foldLeft:23:1:equals:then
    $2164 = { (responsible $2165) ->
      $2166 = call $142 with $2160 $1048 ($844 is responsible)
      # Core:iterator:foldLeft:23:1:hasKey:then
      $2167 = { (responsible $2168) ->
        $2169 = call $141 with $2160 $1048 ($844 is responsible)
        $2170 = ($157, $2169)
      }
      # Core:iterator:foldLeft:23:1:hasKey:else
      $2171 = { (responsible $2172) ->
        $2173 = call $147 with $2160 ($844 is responsible)
        $2174 = call $146 with $1066 $2173 ($844 is responsible)
        $2175 = call $146 with $2174 $189 ($844 is responsible)
        $2176 = ($159, $2175)
      }
      $2177 = call $134 with $2166 $2167 $2171 ($844 is responsible)
      $2178 = call $140 with $2177 $166 ($844 is responsible)
      $2179 = call $132 with $2178 $157 ($844 is responsible)
      # Core:iterator:foldLeft:23:1:isMatch:then
      $2180 = { (responsible $2181) ->
        $2182 = call $140 with $2177 $167 ($844 is responsible)
        $2183 = call $142 with $2160 $1055 ($844 is responsible)
        # Core:iterator:foldLeft:23:1:hasKey:then
        $2184 = { (responsible $2185) ->
          $2186 = call $141 with $2160 $1055 ($844 is responsible)
          $2187 = ($157, $2186)
        }
        # Core:iterator:foldLeft:23:1:hasKey:else
        $2188 = { (responsible $2189) ->
          $2190 = call $147 with $2160 ($844 is responsible)
          $2191 = call $146 with $1070 $2190 ($844 is responsible)
          $2192 = call $146 with $2191 $189 ($844 is responsible)
          $2193 = ($159, $2192)
        }
        $2194 = call $134 with $2183 $2184 $2188 ($844 is responsible)
        $2195 = call $140 with $2194 $166 ($844 is responsible)
        $2196 = call $132 with $2195 $157 ($844 is responsible)
        # Core:iterator:foldLeft:23:1:isMatch:then
        $2197 = { (responsible $2198) ->
          $2199 = call $140 with $2194 $167 ($844 is responsible)
          $2200 = ($157, $2182, $2199)
        }
        # Core:iterator:foldLeft:23:1:isMatch:else
        $2201 = { (responsible $2202) ->
          $2203 = $2194
        }
        $2204 = call $134 with $2196 $2197 $2201 ($844 is responsible)
      }
      # Core:iterator:foldLeft:23:1:isMatch:else
      $2205 = { (responsible $2206) ->
        $2207 = $2177
      }
      $2208 = call $134 with $2179 $2180 $2205 ($844 is responsible)
    }
    # Core:iterator:foldLeft:23:1:equals:else
    $2209 = { (responsible $2210) ->
      $2211 = call $147 with $2162 ($844 is responsible)
      $2212 = call $146 with $181 $2211 ($844 is responsible)
      $2213 = call $146 with $2212 $189 ($844 is responsible)
      $2214 = ($159, $2213)
    }
    $2215 = call $134 with $2163 $2164 $2209 ($844 is responsible)
    $2216 = call $140 with $2215 $166 ($844 is responsible)
    $2217 = call $132 with $2216 $157 ($844 is responsible)
    # Core:iterator:foldLeft:23:1:isMatch:else
    $2218 = { (responsible $2219) ->
      $2220 = call $140 with $2215 $167 ($844 is responsible)
      $2221 = panicking because $2220 ($844 is at fault)
    }
    $2222 = call $134 with $2217 $222 $2218 ($844 is responsible)
    $2223 = call $140 with $2215 $167 ($851 is responsible)
    $2224 = call $140 with $2215 $168 ($852 is responsible)
    $2225 = call $1578 with $2223 ($845 is responsible)
    $2226 = call $132 with $1044 $2225 ($846 is responsible)
    # Core:iterator:foldLeft:23:5:equals:else
    $2227 = { (responsible $2228) ->
      $2229 = call $147 with $2225 ($846 is responsible)
      $2230 = call $146 with $1062 $2229 ($846 is responsible)
      $2231 = call $146 with $2230 $189 ($846 is responsible)
      $2232 = ($159, $2231)
    }
    $2233 = call $134 with $2226 $250 $2227 ($846 is responsible)
    $2234 = call $140 with $2233 $166 ($846 is responsible)
    $2235 = call $132 with $2234 $157 ($846 is responsible)
    # Core:iterator:foldLeft:23:5:case-0:matched
    $2236 = { (responsible $2237) ->
      $2238 = $2224
    }
    # Core:iterator:foldLeft:23:5:case-0:didNotMatch
    $2239 = { (responsible $2240) ->
      $2241 = call $140 with $2233 $167 ($846 is responsible)
      $2242 = call $148 with $2225 ($846 is responsible)
      $2243 = call $132 with $163 $2242 ($846 is responsible)
      # Core:iterator:foldLeft:23:5:equals:then
      $2244 = { (responsible $2245) ->
        $2246 = call $145 with $2225 ($846 is responsible)
        $2247 = call $132 with $1050 $2246 ($846 is responsible)
        # Core:iterator:foldLeft:23:5:equals:then
        $2248 = { (responsible $2249) ->
          $2250 = call $144 with $2225 ($846 is responsible)
          $2251 = call $132 with $165 $2250 ($846 is responsible)
          # Core:iterator:foldLeft:23:5:equals:then
          $2252 = { (responsible $2253) ->
            $2254 = call $143 with $2225 ($846 is responsible)
            $2255 = call $148 with $2254 ($846 is responsible)
            $2256 = call $132 with $162 $2255 ($846 is responsible)
            # Core:iterator:foldLeft:23:5:equals:then
            $2257 = { (responsible $2258) ->
              $2259 = call $142 with $2254 $1047 ($846 is responsible)
              # Core:iterator:foldLeft:23:5:hasKey:then
              $2260 = { (responsible $2261) ->
                $2262 = call $141 with $2254 $1047 ($846 is responsible)
                $2263 = ($157, $2262)
              }
              # Core:iterator:foldLeft:23:5:hasKey:else
              $2264 = { (responsible $2265) ->
                $2266 = call $147 with $2254 ($846 is responsible)
                $2267 = call $146 with $1065 $2266 ($846 is responsible)
                $2268 = call $146 with $2267 $189 ($846 is responsible)
                $2269 = ($159, $2268)
              }
              $2270 = call $134 with $2259 $2260 $2264 ($846 is responsible)
              $2271 = call $140 with $2270 $166 ($846 is responsible)
              $2272 = call $132 with $2271 $157 ($846 is responsible)
              # Core:iterator:foldLeft:23:5:isMatch:then
              $2273 = { (responsible $2274) ->
                $2275 = call $140 with $2270 $167 ($846 is responsible)
                $2276 = call $142 with $2254 $1053 ($846 is responsible)
                # Core:iterator:foldLeft:23:5:hasKey:then
                $2277 = { (responsible $2278) ->
                  $2279 = call $141 with $2254 $1053 ($846 is responsible)
                  $2280 = ($157, $2279)
                }
                # Core:iterator:foldLeft:23:5:hasKey:else
                $2281 = { (responsible $2282) ->
                  $2283 = call $147 with $2254 ($846 is responsible)
                  $2284 = call $146 with $1068 $2283 ($846 is responsible)
                  $2285 = call $146 with $2284 $189 ($846 is responsible)
                  $2286 = ($159, $2285)
                }
                $2287 = call $134 with $2276 $2277 $2281 ($846 is responsible)
                $2288 = call $140 with $2287 $166 ($846 is responsible)
                $2289 = call $132 with $2288 $157 ($846 is responsible)
                # Core:iterator:foldLeft:23:5:isMatch:then
                $2290 = { (responsible $2291) ->
                  $2292 = call $140 with $2287 $167 ($846 is responsible)
                  $2293 = ($157, $2275, $2292)
                }
                # Core:iterator:foldLeft:23:5:isMatch:else
                $2294 = { (responsible $2295) ->
                  $2296 = $2287
                }
                $2297 = call $134 with $2289 $2290 $2294 ($846 is responsible)
              }
              # Core:iterator:foldLeft:23:5:isMatch:else
              $2298 = { (responsible $2299) ->
                $2300 = $2270
              }
              $2301 = call $134 with $2272 $2273 $2298 ($846 is responsible)
            }
            # Core:iterator:foldLeft:23:5:equals:else
            $2302 = { (responsible $2303) ->
              $2304 = call $147 with $2255 ($846 is responsible)
              $2305 = call $146 with $181 $2304 ($846 is responsible)
              $2306 = call $146 with $2305 $189 ($846 is responsible)
              $2307 = ($159, $2306)
            }
            $2308 = call $134 with $2256 $2257 $2302 ($846 is responsible)
          }
          # Core:iterator:foldLeft:23:5:equals:else
          $2309 = { (responsible $2310) ->
            $2311 = call $147 with $2250 ($846 is responsible)
            $2312 = $736
          }
          $2313 = call $134 with $2251 $2252 $2309 ($846 is responsible)
        }
        # Core:iterator:foldLeft:23:5:equals:else
        $2314 = { (responsible $2315) ->
          $2316 = call $147 with $2246 ($846 is responsible)
          $2317 = call $146 with $1060 $2316 ($846 is responsible)
          $2318 = call $146 with $2317 $174 ($846 is responsible)
          $2319 = ($159, $2318)
        }
        $2320 = call $134 with $2247 $2248 $2314 ($846 is responsible)
      }
      # Core:iterator:foldLeft:23:5:equals:else
      $2321 = { (responsible $2322) ->
        $2323 = call $147 with $2242 ($846 is responsible)
        $2324 = call $146 with $182 $2323 ($846 is responsible)
        $2325 = call $146 with $2324 $189 ($846 is responsible)
        $2326 = ($159, $2325)
      }
      $2327 = call $134 with $2243 $2244 $2321 ($846 is responsible)
      $2328 = call $140 with $2327 $166 ($846 is responsible)
      $2329 = call $132 with $2328 $157 ($846 is responsible)
      # Core:iterator:foldLeft:23:5:case-1:matched
      $2330 = { (responsible $2331) ->
        $2332 = call $140 with $2327 $167 ($849 is responsible)
        $2333 = call $140 with $2327 $168 ($850 is responsible)
        $2334 = call $2149 with $2224 $2332 ($848 is responsible)
        $2335 = [$1048: $2333, $1055: $2334]
        $2336 = call $2159 with $2335 ($847 is responsible)
      }
      # Core:iterator:foldLeft:23:5:case-1:didNotMatch
      $2337 = { (responsible $2338) ->
        $2339 = call $140 with $2327 $167 ($846 is responsible)
        $2340 = panicking because $184 ($846 is at fault)
      }
      $2341 = call $134 with $2329 $2330 $2337 ($846 is responsible)
    }
    $2342 = call $134 with $2235 $2236 $2239 ($846 is responsible)
  }
  $2343 = call $521 with $2158 ($104 is responsible)
  $2344 = call $225 with $2343 $186 $853 ($100 is responsible)
  # Core:controlFlow:recursive:18
  $2345 = { $2346 $2347 (+ responsible $2348) ->
    # Core:controlFlow:recursive:18:0
    $2349 = { $2350 (+ responsible $2351) ->
      $2352 = call $2346 with $2346 $2350 ($101 is responsible)
    }
    $2353 = call $2158 with $2349 $2347 ($102 is responsible)
  }
  $2354 = call $2345 with $2345 $2157 ($103 is responsible)
}
$2355 = Error $1057
# Core:iterator:reduceLeft:18:case-0:matched
$2356 = { (responsible $2357) ->
  $2358 = $2355
}
# Core:iterator:reduceLeft
$2359 = { $2360 $2361 (+ responsible $2362) ->
  $2363 = call $521 with $2361 ($914 is responsible)
  $2364 = call $225 with $2363 $1091 $2362 ($907 is responsible)
  # Core:iterator:reduceLeft:14
  $2365 = { (responsible $2366) ->
    $2367 = panicking because $1114 ($2362 is at fault)
  }
  $2368 = call $1384 with $2360 $2365 ($908 is responsible)
  $2369 = call $1578 with $2368 ($909 is responsible)
  $2370 = call $132 with $1044 $2369 ($910 is responsible)
  # Core:iterator:reduceLeft:18:equals:else
  $2371 = { (responsible $2372) ->
    $2373 = call $147 with $2369 ($910 is responsible)
    $2374 = call $146 with $1062 $2373 ($910 is responsible)
    $2375 = call $146 with $2374 $189 ($910 is responsible)
    $2376 = ($159, $2375)
  }
  $2377 = call $134 with $2370 $250 $2371 ($910 is responsible)
  $2378 = call $140 with $2377 $166 ($910 is responsible)
  $2379 = call $132 with $2378 $157 ($910 is responsible)
  # Core:iterator:reduceLeft:18:case-0:didNotMatch
  $2380 = { (responsible $2381) ->
    $2382 = call $140 with $2377 $167 ($910 is responsible)
    $2383 = call $148 with $2369 ($910 is responsible)
    $2384 = call $132 with $163 $2383 ($910 is responsible)
    # Core:iterator:reduceLeft:18:equals:then
    $2385 = { (responsible $2386) ->
      $2387 = call $145 with $2369 ($910 is responsible)
      $2388 = call $132 with $1050 $2387 ($910 is responsible)
      # Core:iterator:reduceLeft:18:equals:then
      $2389 = { (responsible $2390) ->
        $2391 = call $144 with $2369 ($910 is responsible)
        $2392 = call $132 with $165 $2391 ($910 is responsible)
        # Core:iterator:reduceLeft:18:equals:then
        $2393 = { (responsible $2394) ->
          $2395 = call $143 with $2369 ($910 is responsible)
          $2396 = call $148 with $2395 ($910 is responsible)
          $2397 = call $132 with $162 $2396 ($910 is responsible)
          # Core:iterator:reduceLeft:18:equals:then
          $2398 = { (responsible $2399) ->
            $2400 = call $142 with $2395 $1047 ($910 is responsible)
            # Core:iterator:reduceLeft:18:hasKey:then
            $2401 = { (responsible $2402) ->
              $2403 = call $141 with $2395 $1047 ($910 is responsible)
              $2404 = ($157, $2403)
            }
            # Core:iterator:reduceLeft:18:hasKey:else
            $2405 = { (responsible $2406) ->
              $2407 = call $147 with $2395 ($910 is responsible)
              $2408 = call $146 with $1065 $2407 ($910 is responsible)
              $2409 = call $146 with $2408 $189 ($910 is responsible)
              $2410 = ($159, $2409)
            }
            $2411 = call $134 with $2400 $2401 $2405 ($910 is responsible)
            $2412 = call $140 with $2411 $166 ($910 is responsible)
            $2413 = call $132 with $2412 $157 ($910 is responsible)
            # Core:iterator:reduceLeft:18:isMatch:then
            $2414 = { (responsible $2415) ->
              $2416 = call $140 with $2411 $167 ($910 is responsible)
              $2417 = call $142 with $2395 $1053 ($910 is responsible)
              # Core:iterator:reduceLeft:18:hasKey:then
              $2418 = { (responsible $2419) ->
                $2420 = call $141 with $2395 $1053 ($910 is responsible)
                $2421 = ($157, $2420)
              }
              # Core:iterator:reduceLeft:18:hasKey:else
              $2422 = { (responsible $2423) ->
                $2424 = call $147 with $2395 ($910 is responsible)
                $2425 = call $146 with $1068 $2424 ($910 is responsible)
                $2426 = call $146 with $2425 $189 ($910 is responsible)
                $2427 = ($159, $2426)
              }
              $2428 = call $134 with $2417 $2418 $2422 ($910 is responsible)
              $2429 = call $140 with $2428 $166 ($910 is responsible)
              $2430 = call $132 with $2429 $157 ($910 is responsible)
              # Core:iterator:reduceLeft:18:isMatch:then
              $2431 = { (responsible $2432) ->
                $2433 = call $140 with $2428 $167 ($910 is responsible)
                $2434 = ($157, $2416, $2433)
              }
              # Core:iterator:reduceLeft:18:isMatch:else
              $2435 = { (responsible $2436) ->
                $2437 = $2428
              }
              $2438 = call $134 with $2430 $2431 $2435 ($910 is responsible)
            }
            # Core:iterator:reduceLeft:18:isMatch:else
            $2439 = { (responsible $2440) ->
              $2441 = $2411
            }
            $2442 = call $134 with $2413 $2414 $2439 ($910 is responsible)
          }
          # Core:iterator:reduceLeft:18:equals:else
          $2443 = { (responsible $2444) ->
            $2445 = call $147 with $2396 ($910 is responsible)
            $2446 = call $146 with $181 $2445 ($910 is responsible)
            $2447 = call $146 with $2446 $189 ($910 is responsible)
            $2448 = ($159, $2447)
          }
          $2449 = call $134 with $2397 $2398 $2443 ($910 is responsible)
        }
        # Core:iterator:reduceLeft:18:equals:else
        $2450 = { (responsible $2451) ->
          $2452 = call $147 with $2391 ($910 is responsible)
          $2453 = $736
        }
        $2454 = call $134 with $2392 $2393 $2450 ($910 is responsible)
      }
      # Core:iterator:reduceLeft:18:equals:else
      $2455 = { (responsible $2456) ->
        $2457 = call $147 with $2387 ($910 is responsible)
        $2458 = call $146 with $1060 $2457 ($910 is responsible)
        $2459 = call $146 with $2458 $174 ($910 is responsible)
        $2460 = ($159, $2459)
      }
      $2461 = call $134 with $2388 $2389 $2455 ($910 is responsible)
    }
    # Core:iterator:reduceLeft:18:equals:else
    $2462 = { (responsible $2463) ->
      $2464 = call $147 with $2383 ($910 is responsible)
      $2465 = call $146 with $182 $2464 ($910 is responsible)
      $2466 = call $146 with $2465 $189 ($910 is responsible)
      $2467 = ($159, $2466)
    }
    $2468 = call $134 with $2384 $2385 $2462 ($910 is responsible)
    $2469 = call $140 with $2468 $166 ($910 is responsible)
    $2470 = call $132 with $2469 $157 ($910 is responsible)
    # Core:iterator:reduceLeft:18:case-1:matched
    $2471 = { (responsible $2472) ->
      $2473 = call $140 with $2468 $167 ($912 is responsible)
      $2474 = call $140 with $2468 $168 ($913 is responsible)
      $2475 = call $2146 with $2474 $2473 $2361 ($911 is responsible)
      $2476 = Ok $2475
    }
    # Core:iterator:reduceLeft:18:case-1:didNotMatch
    $2477 = { (responsible $2478) ->
      $2479 = call $140 with $2468 $167 ($910 is responsible)
      $2480 = panicking because $184 ($910 is at fault)
    }
    $2481 = call $134 with $2470 $2471 $2477 ($910 is responsible)
  }
  $2482 = call $134 with $2379 $2356 $2380 ($910 is responsible)
}
# Core:iterator:sum:8
$2483 = { $2484 $2485 (+ responsible $2486) ->
  $2487 = call $148 with $2484 ($41 is responsible)
  $2488 = call $132 with $2487 $155 ($42 is responsible)
  $2489 = call $225 with $2488 $190 $934 ($19 is responsible)
  $2490 = call $148 with $2485 ($41 is responsible)
  $2491 = call $132 with $2490 $155 ($42 is responsible)
  $2492 = call $225 with $2491 $191 $934 ($17 is responsible)
  $2493 = call $135 with $2484 $2485 ($18 is responsible)
}
# Core:iterator:sum
$2494 = { $2495 (+ responsible $2496) ->
  # Core:iterator:sum:2
  $2497 = { (responsible $2498) ->
    $2499 = panicking because $1116 ($2496 is at fault)
  }
  $2500 = call $1384 with $2495 $2497 ($931 is responsible)
  # Core:iterator:sum:5
  $2501 = { $2502 (+ responsible $2503) ->
    $2504 = call $148 with $2502 ($43 is responsible)
    $2505 = call $132 with $2504 $155 ($1 is responsible)
    $2506 = call $225 with $2505 $1063 $2496 ($932 is responsible)
  }
  $2507 = call $2129 with $2500 $2501 ($933 is responsible)
  $2508 = call $2359 with $2507 $2483 ($935 is responsible)
  $2509 = call $1314 with $2508 $166 ($930 is responsible)
}
# Core:iterator:length:5
$2510 = { $2511 (+ responsible $2512) ->
  $2513 = $167
}
# Core:iterator:all
$2514 = { $2515 $2516 (+ responsible $2517) ->
  $2518 = call $756 with $2516 ($823 is responsible)
  $2519 = call $225 with $2518 $1089 $2517 ($816 is responsible)
  # Core:iterator:all:14
  $2520 = { (responsible $2521) ->
    $2522 = panicking because $1075 ($2517 is at fault)
  }
  $2523 = call $1384 with $2515 $2520 ($817 is responsible)
  # Core:iterator:all:18
  $2524 = { $2525 $2526 (+ responsible $2527) ->
    $2528 = call $2516 with $2526 ($820 is responsible)
    $2529 = call $337 with $2528 ($818 is responsible)
    $2530 = call $225 with $2529 $1079 $2517 ($819 is responsible)
    $2531 = call $337 with $2525 ($45 is responsible)
    $2532 = call $225 with $2531 $205 $821 ($46 is responsible)
    $2533 = call $337 with $2528 ($47 is responsible)
    $2534 = call $225 with $2533 $206 $821 ($48 is responsible)
    # Core:bool:and:12
    $2535 = { (responsible $2536) ->
      $2537 = $2528
    }
    $2538 = call $405 with $2525 $2535 ($44 is responsible)
  }
  $2539 = call $2146 with $2523 $165 $2524 ($822 is responsible)
}
# Core:iterator:any
$2540 = { $2541 $2542 (+ responsible $2543) ->
  $2544 = call $756 with $2542 ($831 is responsible)
  $2545 = call $225 with $2544 $1089 $2543 ($824 is responsible)
  # Core:iterator:any:14
  $2546 = { (responsible $2547) ->
    $2548 = panicking because $1076 ($2543 is at fault)
  }
  $2549 = call $1384 with $2541 $2546 ($825 is responsible)
  # Core:iterator:any:18
  $2550 = { $2551 $2552 (+ responsible $2553) ->
    $2554 = call $2542 with $2552 ($828 is responsible)
    $2555 = call $337 with $2554 ($826 is responsible)
    $2556 = call $225 with $2555 $1079 $2543 ($827 is responsible)
    $2557 = call $337 with $2551 ($70 is responsible)
    $2558 = call $225 with $2557 $205 $829 ($71 is responsible)
    $2559 = call $337 with $2554 ($72 is responsible)
    $2560 = call $225 with $2559 $206 $829 ($73 is responsible)
    # Core:bool:or:12
    $2561 = { (responsible $2562) ->
      $2563 = $2554
    }
    $2564 = call $449 with $2551 $2561 ($69 is responsible)
  }
  $2565 = call $2146 with $2549 $152 $2550 ($830 is responsible)
}
# Core:iterator:joinToText
$2566 = { $2567 (+ responsible $2568) ->
  # Core:iterator:joinToText:2
  $2569 = { (responsible $2570) ->
    $2571 = panicking because $1108 ($2568 is at fault)
  }
  $2572 = call $1384 with $2567 $2569 ($890 is responsible)
  # Core:iterator:joinToText:12
  $2573 = { $2574 $2575 (+ responsible $2576) ->
    $2577 = call $148 with $2575 ($43 is responsible)
    $2578 = call $132 with $2577 $164 ($1 is responsible)
    $2579 = call $225 with $2578 $1119 $2568 ($887 is responsible)
    $2580 = call $148 with $2574 ($41 is responsible)
    $2581 = call $132 with $2580 $164 ($42 is responsible)
    $2582 = call $225 with $2581 $1074 $888 ($814 is responsible)
    $2583 = call $148 with $2575 ($41 is responsible)
    $2584 = call $132 with $2583 $164 ($42 is responsible)
    $2585 = call $225 with $2584 $1077 $888 ($812 is responsible)
    $2586 = call $146 with $2574 $2575 ($813 is responsible)
  }
  $2587 = call $2146 with $2572 $1056 $2573 ($889 is responsible)
}
# Core:iterator:where
$2588 = { $2589 $2590 (+ responsible $2591) ->
  # Core:iterator:where:2
  $2592 = { (responsible $2593) ->
    $2594 = panicking because $1121 ($2591 is at fault)
  }
  $2595 = call $1384 with $2589 $2592 ($974 is responsible)
  $2596 = call $756 with $2590 ($959 is responsible)
  $2597 = call $225 with $2596 $1089 $2591 ($960 is responsible)
  # Core:iterator:where:19
  $2598 = { $2599 $2600 (+ responsible $2601) ->
    # Core:iterator:where:19:2
    $2602 = { $2603 (+ responsible $2604) ->
      $2605 = call $1578 with $2603 ($961 is responsible)
      $2606 = call $132 with $1044 $2605 ($962 is responsible)
      # Core:iterator:where:19:2:3:equals:else
      $2607 = { (responsible $2608) ->
        $2609 = call $147 with $2605 ($962 is responsible)
        $2610 = call $146 with $1062 $2609 ($962 is responsible)
        $2611 = call $146 with $2610 $189 ($962 is responsible)
        $2612 = ($159, $2611)
      }
      $2613 = call $134 with $2606 $250 $2607 ($962 is responsible)
      $2614 = call $140 with $2613 $166 ($962 is responsible)
      $2615 = call $132 with $2614 $157 ($962 is responsible)
      # Core:iterator:where:19:2:3:case-0:didNotMatch
      $2616 = { (responsible $2617) ->
        $2618 = call $140 with $2613 $167 ($962 is responsible)
        $2619 = call $148 with $2605 ($962 is responsible)
        $2620 = call $132 with $163 $2619 ($962 is responsible)
        # Core:iterator:where:19:2:3:equals:then
        $2621 = { (responsible $2622) ->
          $2623 = call $145 with $2605 ($962 is responsible)
          $2624 = call $132 with $1050 $2623 ($962 is responsible)
          # Core:iterator:where:19:2:3:equals:then
          $2625 = { (responsible $2626) ->
            $2627 = call $144 with $2605 ($962 is responsible)
            $2628 = call $132 with $165 $2627 ($962 is responsible)
            # Core:iterator:where:19:2:3:equals:then
            $2629 = { (responsible $2630) ->
              $2631 = call $143 with $2605 ($962 is responsible)
              $2632 = call $148 with $2631 ($962 is responsible)
              $2633 = call $132 with $162 $2632 ($962 is responsible)
              # Core:iterator:where:19:2:3:equals:then
              $2634 = { (responsible $2635) ->
                $2636 = call $142 with $2631 $1047 ($962 is responsible)
                # Core:iterator:where:19:2:3:hasKey:then
                $2637 = { (responsible $2638) ->
                  $2639 = call $141 with $2631 $1047 ($962 is responsible)
                  $2640 = ($157, $2639)
                }
                # Core:iterator:where:19:2:3:hasKey:else
                $2641 = { (responsible $2642) ->
                  $2643 = call $147 with $2631 ($962 is responsible)
                  $2644 = call $146 with $1065 $2643 ($962 is responsible)
                  $2645 = call $146 with $2644 $189 ($962 is responsible)
                  $2646 = ($159, $2645)
                }
                $2647 = call $134 with $2636 $2637 $2641 ($962 is responsible)
                $2648 = call $140 with $2647 $166 ($962 is responsible)
                $2649 = call $132 with $2648 $157 ($962 is responsible)
                # Core:iterator:where:19:2:3:isMatch:then
                $2650 = { (responsible $2651) ->
                  $2652 = call $140 with $2647 $167 ($962 is responsible)
                  $2653 = call $142 with $2631 $1053 ($962 is responsible)
                  # Core:iterator:where:19:2:3:hasKey:then
                  $2654 = { (responsible $2655) ->
                    $2656 = call $141 with $2631 $1053 ($962 is responsible)
                    $2657 = ($157, $2656)
                  }
                  # Core:iterator:where:19:2:3:hasKey:else
                  $2658 = { (responsible $2659) ->
                    $2660 = call $147 with $2631 ($962 is responsible)
                    $2661 = call $146 with $1068 $2660 ($962 is responsible)
                    $2662 = call $146 with $2661 $189 ($962 is responsible)
                    $2663 = ($159, $2662)
                  }
                  $2664 = call $134 with $2653 $2654 $2658 ($962 is responsible)
                  $2665 = call $140 with $2664 $166 ($962 is responsible)
                  $2666 = call $132 with $2665 $157 ($962 is responsible)
                  # Core:iterator:where:19:2:3:isMatch:then
                  $2667 = { (responsible $2668) ->
                    $2669 = call $140 with $2664 $167 ($962 is responsible)
                    $2670 = ($157, $2652, $2669)
                  }
                  # Core:iterator:where:19:2:3:isMatch:else
                  $2671 = { (responsible $2672) ->
                    $2673 = $2664
                  }
                  $2674 = call $134 with $2666 $2667 $2671 ($962 is responsible)
                }
                # Core:iterator:where:19:2:3:isMatch:else
                $2675 = { (responsible $2676) ->
                  $2677 = $2647
                }
                $2678 = call $134 with $2649 $2650 $2675 ($962 is responsible)
              }
              # Core:iterator:where:19:2:3:equals:else
              $2679 = { (responsible $2680) ->
                $2681 = call $147 with $2632 ($962 is responsible)
                $2682 = call $146 with $181 $2681 ($962 is responsible)
                $2683 = call $146 with $2682 $189 ($962 is responsible)
                $2684 = ($159, $2683)
              }
              $2685 = call $134 with $2633 $2634 $2679 ($962 is responsible)
            }
            # Core:iterator:where:19:2:3:equals:else
            $2686 = { (responsible $2687) ->
              $2688 = call $147 with $2627 ($962 is responsible)
              $2689 = $736
            }
            $2690 = call $134 with $2628 $2629 $2686 ($962 is responsible)
          }
          # Core:iterator:where:19:2:3:equals:else
          $2691 = { (responsible $2692) ->
            $2693 = call $147 with $2623 ($962 is responsible)
            $2694 = call $146 with $1060 $2693 ($962 is responsible)
            $2695 = call $146 with $2694 $174 ($962 is responsible)
            $2696 = ($159, $2695)
          }
          $2697 = call $134 with $2624 $2625 $2691 ($962 is responsible)
        }
        # Core:iterator:where:19:2:3:equals:else
        $2698 = { (responsible $2699) ->
          $2700 = call $147 with $2619 ($962 is responsible)
          $2701 = call $146 with $182 $2700 ($962 is responsible)
          $2702 = call $146 with $2701 $189 ($962 is responsible)
          $2703 = ($159, $2702)
        }
        $2704 = call $134 with $2620 $2621 $2698 ($962 is responsible)
        $2705 = call $140 with $2704 $166 ($962 is responsible)
        $2706 = call $132 with $2705 $157 ($962 is responsible)
        # Core:iterator:where:19:2:3:case-1:matched
        $2707 = { (responsible $2708) ->
          $2709 = call $140 with $2704 $167 ($970 is responsible)
          $2710 = call $140 with $2704 $168 ($971 is responsible)
          $2711 = call $2590 with $2709 ($963 is responsible)
          # Core:iterator:where:19:2:3:5
          $2712 = { (responsible $2713) ->
            $2714 = [$1047: $2709, $1054: $2710]
            $2715 = More $2714
          }
          # Core:iterator:where:19:2:3:6
          $2716 = { (responsible $2717) ->
            $2718 = call $2599 with $2710 ($964 is responsible)
            $2719 = call $1578 with $2718 ($965 is responsible)
            $2720 = call $132 with $1044 $2719 ($966 is responsible)
            # Core:iterator:where:19:2:3:6:5:equals:else
            $2721 = { (responsible $2722) ->
              $2723 = call $147 with $2719 ($966 is responsible)
              $2724 = call $146 with $1062 $2723 ($966 is responsible)
              $2725 = call $146 with $2724 $189 ($966 is responsible)
              $2726 = ($159, $2725)
            }
            $2727 = call $134 with $2720 $250 $2721 ($966 is responsible)
            $2728 = call $140 with $2727 $166 ($966 is responsible)
            $2729 = call $132 with $2728 $157 ($966 is responsible)
            # Core:iterator:where:19:2:3:6:5:case-0:didNotMatch
            $2730 = { (responsible $2731) ->
              $2732 = call $140 with $2727 $167 ($966 is responsible)
              $2733 = call $148 with $2719 ($966 is responsible)
              $2734 = call $132 with $163 $2733 ($966 is responsible)
              # Core:iterator:where:19:2:3:6:5:equals:then
              $2735 = { (responsible $2736) ->
                $2737 = call $145 with $2719 ($966 is responsible)
                $2738 = call $132 with $1050 $2737 ($966 is responsible)
                # Core:iterator:where:19:2:3:6:5:equals:then
                $2739 = { (responsible $2740) ->
                  $2741 = call $144 with $2719 ($966 is responsible)
                  $2742 = call $132 with $165 $2741 ($966 is responsible)
                  # Core:iterator:where:19:2:3:6:5:equals:then
                  $2743 = { (responsible $2744) ->
                    $2745 = call $143 with $2719 ($966 is responsible)
                    $2746 = call $148 with $2745 ($966 is responsible)
                    $2747 = call $132 with $162 $2746 ($966 is responsible)
                    # Core:iterator:where:19:2:3:6:5:equals:then
                    $2748 = { (responsible $2749) ->
                      $2750 = call $142 with $2745 $1047 ($966 is responsible)
                      # Core:iterator:where:19:2:3:6:5:hasKey:then
                      $2751 = { (responsible $2752) ->
                        $2753 = call $141 with $2745 $1047 ($966 is responsible)
                        $2754 = ($157, $2753)
                      }
                      # Core:iterator:where:19:2:3:6:5:hasKey:else
                      $2755 = { (responsible $2756) ->
                        $2757 = call $147 with $2745 ($966 is responsible)
                        $2758 = call $146 with $1065 $2757 ($966 is responsible)
                        $2759 = call $146 with $2758 $189 ($966 is responsible)
                        $2760 = ($159, $2759)
                      }
                      $2761 = call $134 with $2750 $2751 $2755 ($966 is responsible)
                      $2762 = call $140 with $2761 $166 ($966 is responsible)
                      $2763 = call $132 with $2762 $157 ($966 is responsible)
                      # Core:iterator:where:19:2:3:6:5:isMatch:then
                      $2764 = { (responsible $2765) ->
                        $2766 = call $140 with $2761 $167 ($966 is responsible)
                        $2767 = call $142 with $2745 $1053 ($966 is responsible)
                        # Core:iterator:where:19:2:3:6:5:hasKey:then
                        $2768 = { (responsible $2769) ->
                          $2770 = call $141 with $2745 $1053 ($966 is responsible)
                          $2771 = ($157, $2770)
                        }
                        # Core:iterator:where:19:2:3:6:5:hasKey:else
                        $2772 = { (responsible $2773) ->
                          $2774 = call $147 with $2745 ($966 is responsible)
                          $2775 = call $146 with $1068 $2774 ($966 is responsible)
                          $2776 = call $146 with $2775 $189 ($966 is responsible)
                          $2777 = ($159, $2776)
                        }
                        $2778 = call $134 with $2767 $2768 $2772 ($966 is responsible)
                        $2779 = call $140 with $2778 $166 ($966 is responsible)
                        $2780 = call $132 with $2779 $157 ($966 is responsible)
                        # Core:iterator:where:19:2:3:6:5:isMatch:then
                        $2781 = { (responsible $2782) ->
                          $2783 = call $140 with $2778 $167 ($966 is responsible)
                          $2784 = ($157, $2766, $2783)
                        }
                        # Core:iterator:where:19:2:3:6:5:isMatch:else
                        $2785 = { (responsible $2786) ->
                          $2787 = $2778
                        }
                        $2788 = call $134 with $2780 $2781 $2785 ($966 is responsible)
                      }
                      # Core:iterator:where:19:2:3:6:5:isMatch:else
                      $2789 = { (responsible $2790) ->
                        $2791 = $2761
                      }
                      $2792 = call $134 with $2763 $2764 $2789 ($966 is responsible)
                    }
                    # Core:iterator:where:19:2:3:6:5:equals:else
                    $2793 = { (responsible $2794) ->
                      $2795 = call $147 with $2746 ($966 is responsible)
                      $2796 = call $146 with $181 $2795 ($966 is responsible)
                      $2797 = call $146 with $2796 $189 ($966 is responsible)
                      $2798 = ($159, $2797)
                    }
                    $2799 = call $134 with $2747 $2748 $2793 ($966 is responsible)
                  }
                  # Core:iterator:where:19:2:3:6:5:equals:else
                  $2800 = { (responsible $2801) ->
                    $2802 = call $147 with $2741 ($966 is responsible)
                    $2803 = $736
                  }
                  $2804 = call $134 with $2742 $2743 $2800 ($966 is responsible)
                }
                # Core:iterator:where:19:2:3:6:5:equals:else
                $2805 = { (responsible $2806) ->
                  $2807 = call $147 with $2737 ($966 is responsible)
                  $2808 = call $146 with $1060 $2807 ($966 is responsible)
                  $2809 = call $146 with $2808 $174 ($966 is responsible)
                  $2810 = ($159, $2809)
                }
                $2811 = call $134 with $2738 $2739 $2805 ($966 is responsible)
              }
              # Core:iterator:where:19:2:3:6:5:equals:else
              $2812 = { (responsible $2813) ->
                $2814 = call $147 with $2733 ($966 is responsible)
                $2815 = call $146 with $182 $2814 ($966 is responsible)
                $2816 = call $146 with $2815 $189 ($966 is responsible)
                $2817 = ($159, $2816)
              }
              $2818 = call $134 with $2734 $2735 $2812 ($966 is responsible)
              $2819 = call $140 with $2818 $166 ($966 is responsible)
              $2820 = call $132 with $2819 $157 ($966 is responsible)
              # Core:iterator:where:19:2:3:6:5:case-1:matched
              $2821 = { (responsible $2822) ->
                $2823 = call $140 with $2818 $167 ($967 is responsible)
                $2824 = call $140 with $2818 $168 ($968 is responsible)
                $2825 = [$1047: $2823, $1054: $2824]
                $2826 = More $2825
              }
              # Core:iterator:where:19:2:3:6:5:case-1:didNotMatch
              $2827 = { (responsible $2828) ->
                $2829 = call $140 with $2818 $167 ($966 is responsible)
                $2830 = panicking because $184 ($966 is at fault)
              }
              $2831 = call $134 with $2820 $2821 $2827 ($966 is responsible)
            }
            $2832 = call $134 with $2729 $1381 $2730 ($966 is responsible)
          }
          $2833 = call $256 with $2711 $2712 $2716 ($969 is responsible)
        }
        # Core:iterator:where:19:2:3:case-1:didNotMatch
        $2834 = { (responsible $2835) ->
          $2836 = call $140 with $2704 $167 ($962 is responsible)
          $2837 = panicking because $184 ($962 is at fault)
        }
        $2838 = call $134 with $2706 $2707 $2834 ($962 is responsible)
      }
      $2839 = call $134 with $2615 $1381 $2616 ($962 is responsible)
    }
    $2840 = call $1627 with $2600 $2602 ($972 is responsible)
  }
  $2841 = call $521 with $2598 ($104 is responsible)
  $2842 = call $225 with $2841 $186 $973 ($100 is responsible)
  # Core:controlFlow:recursive:18
  $2843 = { $2844 $2845 (+ responsible $2846) ->
    # Core:controlFlow:recursive:18:0
    $2847 = { $2848 (+ responsible $2849) ->
      $2850 = call $2844 with $2844 $2848 ($101 is responsible)
    }
    $2851 = call $2598 with $2847 $2845 ($102 is responsible)
  }
  $2852 = call $2843 with $2843 $2595 ($103 is responsible)
}
# Core:iterator:takeWhile
$2853 = { $2854 $2855 (+ responsible $2856) ->
  # Core:iterator:takeWhile:2
  $2857 = { (responsible $2858) ->
    $2859 = panicking because $1117 ($2856 is at fault)
  }
  $2860 = call $1384 with $2854 $2857 ($948 is responsible)
  # Core:iterator:takeWhile:7
  $2861 = { $2862 (+ responsible $2863) ->
    $2864 = call $1578 with $2862 ($949 is responsible)
    $2865 = call $132 with $1044 $2864 ($950 is responsible)
    # Core:iterator:takeWhile:7:3:equals:else
    $2866 = { (responsible $2867) ->
      $2868 = call $147 with $2864 ($950 is responsible)
      $2869 = call $146 with $1062 $2868 ($950 is responsible)
      $2870 = call $146 with $2869 $189 ($950 is responsible)
      $2871 = ($159, $2870)
    }
    $2872 = call $134 with $2865 $250 $2866 ($950 is responsible)
    $2873 = call $140 with $2872 $166 ($950 is responsible)
    $2874 = call $132 with $2873 $157 ($950 is responsible)
    # Core:iterator:takeWhile:7:3:case-0:didNotMatch
    $2875 = { (responsible $2876) ->
      $2877 = call $140 with $2872 $167 ($950 is responsible)
      $2878 = call $148 with $2864 ($950 is responsible)
      $2879 = call $132 with $163 $2878 ($950 is responsible)
      # Core:iterator:takeWhile:7:3:equals:then
      $2880 = { (responsible $2881) ->
        $2882 = call $145 with $2864 ($950 is responsible)
        $2883 = call $132 with $1050 $2882 ($950 is responsible)
        # Core:iterator:takeWhile:7:3:equals:then
        $2884 = { (responsible $2885) ->
          $2886 = call $144 with $2864 ($950 is responsible)
          $2887 = call $132 with $165 $2886 ($950 is responsible)
          # Core:iterator:takeWhile:7:3:equals:then
          $2888 = { (responsible $2889) ->
            $2890 = call $143 with $2864 ($950 is responsible)
            $2891 = call $148 with $2890 ($950 is responsible)
            $2892 = call $132 with $162 $2891 ($950 is responsible)
            # Core:iterator:takeWhile:7:3:equals:then
            $2893 = { (responsible $2894) ->
              $2895 = call $142 with $2890 $1047 ($950 is responsible)
              # Core:iterator:takeWhile:7:3:hasKey:then
              $2896 = { (responsible $2897) ->
                $2898 = call $141 with $2890 $1047 ($950 is responsible)
                $2899 = ($157, $2898)
              }
              # Core:iterator:takeWhile:7:3:hasKey:else
              $2900 = { (responsible $2901) ->
                $2902 = call $147 with $2890 ($950 is responsible)
                $2903 = call $146 with $1065 $2902 ($950 is responsible)
                $2904 = call $146 with $2903 $189 ($950 is responsible)
                $2905 = ($159, $2904)
              }
              $2906 = call $134 with $2895 $2896 $2900 ($950 is responsible)
              $2907 = call $140 with $2906 $166 ($950 is responsible)
              $2908 = call $132 with $2907 $157 ($950 is responsible)
              # Core:iterator:takeWhile:7:3:isMatch:then
              $2909 = { (responsible $2910) ->
                $2911 = call $140 with $2906 $167 ($950 is responsible)
                $2912 = call $142 with $2890 $1053 ($950 is responsible)
                # Core:iterator:takeWhile:7:3:hasKey:then
                $2913 = { (responsible $2914) ->
                  $2915 = call $141 with $2890 $1053 ($950 is responsible)
                  $2916 = ($157, $2915)
                }
                # Core:iterator:takeWhile:7:3:hasKey:else
                $2917 = { (responsible $2918) ->
                  $2919 = call $147 with $2890 ($950 is responsible)
                  $2920 = call $146 with $1068 $2919 ($950 is responsible)
                  $2921 = call $146 with $2920 $189 ($950 is responsible)
                  $2922 = ($159, $2921)
                }
                $2923 = call $134 with $2912 $2913 $2917 ($950 is responsible)
                $2924 = call $140 with $2923 $166 ($950 is responsible)
                $2925 = call $132 with $2924 $157 ($950 is responsible)
                # Core:iterator:takeWhile:7:3:isMatch:then
                $2926 = { (responsible $2927) ->
                  $2928 = call $140 with $2923 $167 ($950 is responsible)
                  $2929 = ($157, $2911, $2928)
                }
                # Core:iterator:takeWhile:7:3:isMatch:else
                $2930 = { (responsible $2931) ->
                  $2932 = $2923
                }
                $2933 = call $134 with $2925 $2926 $2930 ($950 is responsible)
              }
              # Core:iterator:takeWhile:7:3:isMatch:else
              $2934 = { (responsible $2935) ->
                $2936 = $2906
              }
              $2937 = call $134 with $2908 $2909 $2934 ($950 is responsible)
            }
            # Core:iterator:takeWhile:7:3:equals:else
            $2938 = { (responsible $2939) ->
              $2940 = call $147 with $2891 ($950 is responsible)
              $2941 = call $146 with $181 $2940 ($950 is responsible)
              $2942 = call $146 with $2941 $189 ($950 is responsible)
              $2943 = ($159, $2942)
            }
            $2944 = call $134 with $2892 $2893 $2938 ($950 is responsible)
          }
          # Core:iterator:takeWhile:7:3:equals:else
          $2945 = { (responsible $2946) ->
            $2947 = call $147 with $2886 ($950 is responsible)
            $2948 = $736
          }
          $2949 = call $134 with $2887 $2888 $2945 ($950 is responsible)
        }
        # Core:iterator:takeWhile:7:3:equals:else
        $2950 = { (responsible $2951) ->
          $2952 = call $147 with $2882 ($950 is responsible)
          $2953 = call $146 with $1060 $2952 ($950 is responsible)
          $2954 = call $146 with $2953 $174 ($950 is responsible)
          $2955 = ($159, $2954)
        }
        $2956 = call $134 with $2883 $2884 $2950 ($950 is responsible)
      }
      # Core:iterator:takeWhile:7:3:equals:else
      $2957 = { (responsible $2958) ->
        $2959 = call $147 with $2878 ($950 is responsible)
        $2960 = call $146 with $182 $2959 ($950 is responsible)
        $2961 = call $146 with $2960 $189 ($950 is responsible)
        $2962 = ($159, $2961)
      }
      $2963 = call $134 with $2879 $2880 $2957 ($950 is responsible)
      $2964 = call $140 with $2963 $166 ($950 is responsible)
      $2965 = call $132 with $2964 $157 ($950 is responsible)
      # Core:iterator:takeWhile:7:3:case-1:matched
      $2966 = { (responsible $2967) ->
        $2968 = call $140 with $2963 $167 ($953 is responsible)
        $2969 = call $140 with $2963 $168 ($954 is responsible)
        $2970 = call $2855 with $2968 ($951 is responsible)
        # Core:iterator:takeWhile:7:3:5
        $2971 = { (responsible $2972) ->
          $2973 = [$1047: $2968, $1054: $2969]
          $2974 = More $2973
        }
        $2975 = call $256 with $2970 $2971 $1381 ($952 is responsible)
      }
      # Core:iterator:takeWhile:7:3:case-1:didNotMatch
      $2976 = { (responsible $2977) ->
        $2978 = call $140 with $2963 $167 ($950 is responsible)
        $2979 = panicking because $184 ($950 is at fault)
      }
      $2980 = call $134 with $2965 $2966 $2976 ($950 is responsible)
    }
    $2981 = call $134 with $2874 $1381 $2875 ($950 is responsible)
  }
  $2982 = call $1627 with $2860 $2861 ($955 is responsible)
}
# Core:iterator:withIndex:2
$2983 = { (responsible $2984) ->
  $2985 = panicking because $1123 ($940 is at fault)
}
# Core:iterator:take:34
$2986 = { $2987 (+ responsible $2988) ->
  $2989 = call $148 with $2987 ($41 is responsible)
  $2990 = call $132 with $2989 $162 ($42 is responsible)
  $2991 = call $225 with $2990 $214 $946 ($39 is responsible)
  $2992 = call $142 with $2987 $1047 ($36 is responsible)
  $2993 = call $225 with $2992 $215 $946 ($37 is responsible)
  $2994 = call $141 with $2987 $1047 ($38 is responsible)
}
# Core:iterator:take
$2995 = { $2996 $2997 (+ responsible $2998) ->
  $2999 = call $148 with $2997 ($43 is responsible)
  $3000 = call $132 with $2999 $155 ($1 is responsible)
  $3001 = call $225 with $3000 $1098 $2998 ($936 is responsible)
  $3002 = call $725 with $2997 ($937 is responsible)
  $3003 = call $225 with $3002 $1102 $2998 ($938 is responsible)
  # Core:iterator:take:26
  $3004 = { (responsible $3005) ->
    $3006 = panicking because $1118 ($2998 is at fault)
  }
  $3007 = call $1384 with $2996 $3004 ($939 is responsible)
  $3008 = call $1384 with $3007 $2983 ($1000 is responsible)
  $3009 = [$1048: $3008, $1046: $166]
  $3010 = call $1627 with $3009 $1943 ($999 is responsible)
  # Core:iterator:take:31
  $3011 = { $3012 (+ responsible $3013) ->
    $3014 = call $148 with $3012 ($941 is responsible)
    $3015 = call $132 with $162 $3014 ($941 is responsible)
    # Core:iterator:take:31:1:equals:then
    $3016 = { (responsible $3017) ->
      $3018 = call $142 with $3012 $1047 ($941 is responsible)
      # Core:iterator:take:31:1:hasKey:then
      $3019 = { (responsible $3020) ->
        $3021 = call $141 with $3012 $1047 ($941 is responsible)
        $3022 = ($157, $3021)
      }
      # Core:iterator:take:31:1:hasKey:else
      $3023 = { (responsible $3024) ->
        $3025 = call $147 with $3012 ($941 is responsible)
        $3026 = call $146 with $1065 $3025 ($941 is responsible)
        $3027 = call $146 with $3026 $189 ($941 is responsible)
        $3028 = ($159, $3027)
      }
      $3029 = call $134 with $3018 $3019 $3023 ($941 is responsible)
      $3030 = call $140 with $3029 $166 ($941 is responsible)
      $3031 = call $132 with $3030 $157 ($941 is responsible)
      # Core:iterator:take:31:1:isMatch:then
      $3032 = { (responsible $3033) ->
        $3034 = call $140 with $3029 $167 ($941 is responsible)
        $3035 = call $142 with $3012 $1046 ($941 is responsible)
        # Core:iterator:take:31:1:hasKey:then
        $3036 = { (responsible $3037) ->
          $3038 = call $141 with $3012 $1046 ($941 is responsible)
          $3039 = ($157, $3038)
        }
        # Core:iterator:take:31:1:hasKey:else
        $3040 = { (responsible $3041) ->
          $3042 = call $147 with $3012 ($941 is responsible)
          $3043 = call $146 with $1064 $3042 ($941 is responsible)
          $3044 = call $146 with $3043 $189 ($941 is responsible)
          $3045 = ($159, $3044)
        }
        $3046 = call $134 with $3035 $3036 $3040 ($941 is responsible)
        $3047 = call $140 with $3046 $166 ($941 is responsible)
        $3048 = call $132 with $3047 $157 ($941 is responsible)
        # Core:iterator:take:31:1:isMatch:then
        $3049 = { (responsible $3050) ->
          $3051 = call $140 with $3046 $167 ($941 is responsible)
          $3052 = ($157, $3034, $3051)
        }
        # Core:iterator:take:31:1:isMatch:else
        $3053 = { (responsible $3054) ->
          $3055 = $3046
        }
        $3056 = call $134 with $3048 $3049 $3053 ($941 is responsible)
      }
      # Core:iterator:take:31:1:isMatch:else
      $3057 = { (responsible $3058) ->
        $3059 = $3029
      }
      $3060 = call $134 with $3031 $3032 $3057 ($941 is responsible)
    }
    # Core:iterator:take:31:1:equals:else
    $3061 = { (responsible $3062) ->
      $3063 = call $147 with $3014 ($941 is responsible)
      $3064 = call $146 with $181 $3063 ($941 is responsible)
      $3065 = call $146 with $3064 $189 ($941 is responsible)
      $3066 = ($159, $3065)
    }
    $3067 = call $134 with $3015 $3016 $3061 ($941 is responsible)
    $3068 = call $140 with $3067 $166 ($941 is responsible)
    $3069 = call $132 with $3068 $157 ($941 is responsible)
    # Core:iterator:take:31:1:isMatch:else
    $3070 = { (responsible $3071) ->
      $3072 = call $140 with $3067 $167 ($941 is responsible)
      $3073 = panicking because $3072 ($941 is at fault)
    }
    $3074 = call $134 with $3069 $222 $3070 ($941 is responsible)
    $3075 = call $140 with $3067 $167 ($944 is responsible)
    $3076 = call $140 with $3067 $168 ($943 is responsible)
    $3077 = call $701 with $3076 $2997 ($942 is responsible)
  }
  $3078 = call $2853 with $3010 $3011 ($945 is responsible)
  $3079 = call $1814 with $3078 $2986 ($947 is responsible)
}
# Core:iterator:skip:30:6
$3080 = { $3081 $3082 (+ responsible $3083) ->
  $3084 = call $148 with $3082 ($919 is responsible)
  $3085 = call $132 with $162 $3084 ($919 is responsible)
  # Core:iterator:skip:30:6:1:equals:then
  $3086 = { (responsible $3087) ->
    $3088 = call $142 with $3082 $1048 ($919 is responsible)
    # Core:iterator:skip:30:6:1:hasKey:then
    $3089 = { (responsible $3090) ->
      $3091 = call $141 with $3082 $1048 ($919 is responsible)
      $3092 = ($157, $3091)
    }
    # Core:iterator:skip:30:6:1:hasKey:else
    $3093 = { (responsible $3094) ->
      $3095 = call $147 with $3082 ($919 is responsible)
      $3096 = call $146 with $1066 $3095 ($919 is responsible)
      $3097 = call $146 with $3096 $189 ($919 is responsible)
      $3098 = ($159, $3097)
    }
    $3099 = call $134 with $3088 $3089 $3093 ($919 is responsible)
    $3100 = call $140 with $3099 $166 ($919 is responsible)
    $3101 = call $132 with $3100 $157 ($919 is responsible)
    # Core:iterator:skip:30:6:1:isMatch:then
    $3102 = { (responsible $3103) ->
      $3104 = call $140 with $3099 $167 ($919 is responsible)
      $3105 = call $142 with $3082 $1051 ($919 is responsible)
      # Core:iterator:skip:30:6:1:hasKey:then
      $3106 = { (responsible $3107) ->
        $3108 = call $141 with $3082 $1051 ($919 is responsible)
        $3109 = ($157, $3108)
      }
      # Core:iterator:skip:30:6:1:hasKey:else
      $3110 = { (responsible $3111) ->
        $3112 = call $147 with $3082 ($919 is responsible)
        $3113 = call $146 with $1067 $3112 ($919 is responsible)
        $3114 = call $146 with $3113 $189 ($919 is responsible)
        $3115 = ($159, $3114)
      }
      $3116 = call $134 with $3105 $3106 $3110 ($919 is responsible)
      $3117 = call $140 with $3116 $166 ($919 is responsible)
      $3118 = call $132 with $3117 $157 ($919 is responsible)
      # Core:iterator:skip:30:6:1:isMatch:then
      $3119 = { (responsible $3120) ->
        $3121 = call $140 with $3116 $167 ($919 is responsible)
        $3122 = ($157, $3104, $3121)
      }
      # Core:iterator:skip:30:6:1:isMatch:else
      $3123 = { (responsible $3124) ->
        $3125 = $3116
      }
      $3126 = call $134 with $3118 $3119 $3123 ($919 is responsible)
    }
    # Core:iterator:skip:30:6:1:isMatch:else
    $3127 = { (responsible $3128) ->
      $3129 = $3099
    }
    $3130 = call $134 with $3101 $3102 $3127 ($919 is responsible)
  }
  # Core:iterator:skip:30:6:1:equals:else
  $3131 = { (responsible $3132) ->
    $3133 = call $147 with $3084 ($919 is responsible)
    $3134 = call $146 with $181 $3133 ($919 is responsible)
    $3135 = call $146 with $3134 $189 ($919 is responsible)
    $3136 = ($159, $3135)
  }
  $3137 = call $134 with $3085 $3086 $3131 ($919 is responsible)
  $3138 = call $140 with $3137 $166 ($919 is responsible)
  $3139 = call $132 with $3138 $157 ($919 is responsible)
  # Core:iterator:skip:30:6:1:isMatch:else
  $3140 = { (responsible $3141) ->
    $3142 = call $140 with $3137 $167 ($919 is responsible)
    $3143 = panicking because $3142 ($919 is at fault)
  }
  $3144 = call $134 with $3139 $222 $3140 ($919 is responsible)
  $3145 = call $140 with $3137 $167 ($927 is responsible)
  $3146 = call $140 with $3137 $168 ($928 is responsible)
  $3147 = call $132 with $3146 $166 ($1 is responsible)
  # Core:iterator:skip:30:6:7
  $3148 = { (responsible $3149) ->
    $3150 = call $1578 with $3145 ($920 is responsible)
  }
  # Core:iterator:skip:30:6:8
  $3151 = { (responsible $3152) ->
    $3153 = call $1578 with $3145 ($921 is responsible)
    $3154 = call $132 with $1044 $3153 ($922 is responsible)
    # Core:iterator:skip:30:6:8:3:equals:else
    $3155 = { (responsible $3156) ->
      $3157 = call $147 with $3153 ($922 is responsible)
      $3158 = call $146 with $1062 $3157 ($922 is responsible)
      $3159 = call $146 with $3158 $189 ($922 is responsible)
      $3160 = ($159, $3159)
    }
    $3161 = call $134 with $3154 $250 $3155 ($922 is responsible)
    $3162 = call $140 with $3161 $166 ($922 is responsible)
    $3163 = call $132 with $3162 $157 ($922 is responsible)
    # Core:iterator:skip:30:6:8:3:case-0:didNotMatch
    $3164 = { (responsible $3165) ->
      $3166 = call $140 with $3161 $167 ($922 is responsible)
      $3167 = call $148 with $3153 ($922 is responsible)
      $3168 = call $132 with $163 $3167 ($922 is responsible)
      # Core:iterator:skip:30:6:8:3:equals:then
      $3169 = { (responsible $3170) ->
        $3171 = call $145 with $3153 ($922 is responsible)
        $3172 = call $132 with $1050 $3171 ($922 is responsible)
        # Core:iterator:skip:30:6:8:3:equals:then
        $3173 = { (responsible $3174) ->
          $3175 = call $144 with $3153 ($922 is responsible)
          $3176 = call $132 with $165 $3175 ($922 is responsible)
          # Core:iterator:skip:30:6:8:3:equals:then
          $3177 = { (responsible $3178) ->
            $3179 = call $143 with $3153 ($922 is responsible)
            $3180 = call $148 with $3179 ($922 is responsible)
            $3181 = call $132 with $162 $3180 ($922 is responsible)
            # Core:iterator:skip:30:6:8:3:equals:then
            $3182 = { (responsible $3183) ->
              $3184 = call $142 with $3179 $1053 ($922 is responsible)
              # Core:iterator:skip:30:6:8:3:hasKey:then
              $3185 = { (responsible $3186) ->
                $3187 = call $141 with $3179 $1053 ($922 is responsible)
                $3188 = ($157, $3187)
              }
              # Core:iterator:skip:30:6:8:3:hasKey:else
              $3189 = { (responsible $3190) ->
                $3191 = call $147 with $3179 ($922 is responsible)
                $3192 = call $146 with $1068 $3191 ($922 is responsible)
                $3193 = call $146 with $3192 $189 ($922 is responsible)
                $3194 = ($159, $3193)
              }
              $3195 = call $134 with $3184 $3185 $3189 ($922 is responsible)
              $3196 = call $140 with $3195 $166 ($922 is responsible)
              $3197 = call $132 with $3196 $157 ($922 is responsible)
              # Core:iterator:skip:30:6:8:3:isMatch:then
              $3198 = { (responsible $3199) ->
                $3200 = call $140 with $3195 $167 ($922 is responsible)
                $3201 = ($157, $3200)
              }
              # Core:iterator:skip:30:6:8:3:isMatch:else
              $3202 = { (responsible $3203) ->
                $3204 = $3195
              }
              $3205 = call $134 with $3197 $3198 $3202 ($922 is responsible)
            }
            # Core:iterator:skip:30:6:8:3:equals:else
            $3206 = { (responsible $3207) ->
              $3208 = call $147 with $3180 ($922 is responsible)
              $3209 = call $146 with $181 $3208 ($922 is responsible)
              $3210 = call $146 with $3209 $189 ($922 is responsible)
              $3211 = ($159, $3210)
            }
            $3212 = call $134 with $3181 $3182 $3206 ($922 is responsible)
          }
          # Core:iterator:skip:30:6:8:3:equals:else
          $3213 = { (responsible $3214) ->
            $3215 = call $147 with $3175 ($922 is responsible)
            $3216 = $736
          }
          $3217 = call $134 with $3176 $3177 $3213 ($922 is responsible)
        }
        # Core:iterator:skip:30:6:8:3:equals:else
        $3218 = { (responsible $3219) ->
          $3220 = call $147 with $3171 ($922 is responsible)
          $3221 = call $146 with $1060 $3220 ($922 is responsible)
          $3222 = call $146 with $3221 $174 ($922 is responsible)
          $3223 = ($159, $3222)
        }
        $3224 = call $134 with $3172 $3173 $3218 ($922 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:equals:else
      $3225 = { (responsible $3226) ->
        $3227 = call $147 with $3167 ($922 is responsible)
        $3228 = call $146 with $182 $3227 ($922 is responsible)
        $3229 = call $146 with $3228 $189 ($922 is responsible)
        $3230 = ($159, $3229)
      }
      $3231 = call $134 with $3168 $3169 $3225 ($922 is responsible)
      $3232 = call $140 with $3231 $166 ($922 is responsible)
      $3233 = call $132 with $3232 $157 ($922 is responsible)
      # Core:iterator:skip:30:6:8:3:case-1:matched
      $3234 = { (responsible $3235) ->
        $3236 = call $140 with $3231 $167 ($925 is responsible)
        $3237 = call $148 with $3146 ($41 is responsible)
        $3238 = call $132 with $3237 $155 ($42 is responsible)
        $3239 = call $225 with $3238 $213 $923 ($28 is responsible)
        $3240 = call $139 with $3146 $167 ($27 is responsible)
        $3241 = [$1051: $3240, $1048: $3236]
        $3242 = call $3081 with $3241 ($924 is responsible)
      }
      # Core:iterator:skip:30:6:8:3:case-1:didNotMatch
      $3243 = { (responsible $3244) ->
        $3245 = call $140 with $3231 $167 ($922 is responsible)
        $3246 = panicking because $184 ($922 is at fault)
      }
      $3247 = call $134 with $3233 $3234 $3243 ($922 is responsible)
    }
    $3248 = call $134 with $3163 $1381 $3164 ($922 is responsible)
  }
  $3249 = call $256 with $3147 $3148 $3151 ($926 is responsible)
}
# Core:controlFlow:recursive:18
$3250 = { $3251 $3252 (+ responsible $3253) ->
  # Core:controlFlow:recursive:18:0
  $3254 = { $3255 (+ responsible $3256) ->
    $3257 = call $3251 with $3251 $3255 ($101 is responsible)
  }
  $3258 = call $3080 with $3254 $3252 ($102 is responsible)
}
# Core:iterator:skip
$3259 = { $3260 $3261 (+ responsible $3262) ->
  # Core:iterator:skip:2
  $3263 = { (responsible $3264) ->
    $3265 = panicking because $1115 ($3262 is at fault)
  }
  $3266 = call $1384 with $3260 $3263 ($918 is responsible)
  $3267 = call $148 with $3261 ($43 is responsible)
  $3268 = call $132 with $3267 $155 ($1 is responsible)
  $3269 = call $225 with $3268 $1098 $3262 ($915 is responsible)
  $3270 = call $725 with $3261 ($916 is responsible)
  $3271 = call $225 with $3270 $1102 $3262 ($917 is responsible)
  # Core:iterator:skip:30
  $3272 = { (responsible $3273) ->
    $3274 = [$1048: $3266, $1051: $3261]
    $3275 = call $521 with $3080 ($104 is responsible)
    $3276 = call $225 with $3275 $186 $929 ($100 is responsible)
    $3277 = call $3250 with $3250 $3274 ($103 is responsible)
  }
  $3278 = Iterator $3272
}
# Core:iterator:fromList
$3279 = { $3280 (+ responsible $3281) ->
  $3282 = call $148 with $3280 ($43 is responsible)
  $3283 = call $132 with $3282 $1049 ($1 is responsible)
  $3284 = call $225 with $3283 $1111 $3281 ($855 is responsible)
  $3285 = call $148 with $3280 ($41 is responsible)
  $3286 = call $132 with $3285 $1049 ($42 is responsible)
  $3287 = call $225 with $3286 $1110 $856 ($811 is responsible)
  $3288 = call $1043 with $3280 ($810 is responsible)
  # Core:iterator:fromList:23
  $3289 = { $3290 (+ responsible $3291) ->
    $3292 = call $1332 with $3280 $3290 ($857 is responsible)
  }
  $3293 = call $1781 with $3288 $3289 ($858 is responsible)
}
$3294 = (,)
# Core:iterator:toList:6
$3295 = { $3296 $3297 (+ responsible $3298) ->
  $3299 = call $1369 with $3296 $3297 ($957 is responsible)
}
# Core:iterator:toList:2
$3300 = { (responsible $3301) ->
  $3302 = panicking because $1120 ($989 is at fault)
}
# Core:iterator:windowed
$3303 = { $3304 $3305 $3306 $3307 (+ responsible $3308) ->
  # Core:iterator:windowed:2
  $3309 = { (responsible $3310) ->
    $3311 = panicking because $1122 ($3308 is at fault)
  }
  $3312 = call $1384 with $3304 $3309 ($978 is responsible)
  $3313 = call $148 with $3305 ($43 is responsible)
  $3314 = call $132 with $3313 $155 ($1 is responsible)
  $3315 = call $225 with $3314 $1099 $3308 ($975 is responsible)
  $3316 = call $148 with $3305 ($43 is responsible)
  $3317 = call $132 with $3316 $155 ($1 is responsible)
  $3318 = call $225 with $3317 $210 $976 ($777 is responsible)
  $3319 = call $713 with $3305 $166 ($778 is responsible)
  $3320 = call $225 with $3319 $1103 $3308 ($977 is responsible)
  $3321 = call $148 with $3306 ($43 is responsible)
  $3322 = call $132 with $3321 $155 ($1 is responsible)
  $3323 = call $225 with $3322 $1100 $3308 ($979 is responsible)
  $3324 = call $148 with $3306 ($43 is responsible)
  $3325 = call $132 with $3324 $155 ($1 is responsible)
  $3326 = call $225 with $3325 $210 $980 ($777 is responsible)
  $3327 = call $713 with $3306 $166 ($778 is responsible)
  $3328 = call $225 with $3327 $1104 $3308 ($981 is responsible)
  $3329 = call $337 with $3307 ($982 is responsible)
  $3330 = call $225 with $3329 $1078 $3308 ($983 is responsible)
  # Core:iterator:windowed:67
  $3331 = { $3332 (+ responsible $3333) ->
    $3334 = call $2995 with $3332 $3305 ($988 is responsible)
    $3335 = call $1384 with $3334 $3300 ($956 is responsible)
    $3336 = call $2146 with $3335 $3294 $3295 ($958 is responsible)
    $3337 = call $148 with $3336 ($41 is responsible)
    $3338 = call $132 with $3337 $1049 ($42 is responsible)
    $3339 = call $225 with $3338 $1110 $984 ($811 is responsible)
    $3340 = call $1043 with $3336 ($810 is responsible)
    # Core:iterator:windowed:67:20
    $3341 = { (responsible $3342) ->
      $3343 = call $713 with $3340 $166 ($778 is responsible)
    }
    # Core:iterator:windowed:67:21
    $3344 = { (responsible $3345) ->
      $3346 = call $132 with $3340 $3305 ($1 is responsible)
    }
    $3347 = call $256 with $3307 $3341 $3344 ($985 is responsible)
    # Core:iterator:windowed:67:26
    $3348 = { (responsible $3349) ->
      $3350 = call $3259 with $3332 $3306 ($986 is responsible)
      $3351 = [$1047: $3336, $1054: $3350]
      $3352 = More $3351
    }
    $3353 = call $256 with $3347 $3348 $1381 ($987 is responsible)
  }
  $3354 = call $1627 with $3312 $3331 ($990 is responsible)
}
# Core:iterator:chunked
$3355 = { $3356 $3357 (+ responsible $3358) ->
  $3359 = call $148 with $3357 ($43 is responsible)
  $3360 = call $132 with $3359 $155 ($1 is responsible)
  $3361 = call $225 with $3360 $1099 $3358 ($832 is responsible)
  $3362 = call $148 with $3357 ($43 is responsible)
  $3363 = call $132 with $3362 $155 ($1 is responsible)
  $3364 = call $225 with $3363 $210 $833 ($777 is responsible)
  $3365 = call $713 with $3357 $166 ($778 is responsible)
  $3366 = call $225 with $3365 $1103 $3358 ($834 is responsible)
  # Core:iterator:chunked:26
  $3367 = { (responsible $3368) ->
    $3369 = panicking because $1080 ($3358 is at fault)
  }
  $3370 = call $1384 with $3356 $3367 ($835 is responsible)
  $3371 = call $3303 with $3370 $3357 $3357 $165 ($836 is responsible)
}
# Builtins::toDebugText, Core:iterator:199, Core:toDebugText:toDebugText
$3372 = { $3373 (+ responsible $3374) ->
  $3375 = call $147 with $3373 ($40 is responsible)
}
$3376 = ($167, $168, $169)
$3377 = call $3279 with $3376 ($815 is responsible)
$3378 = 6
$3379 = 7
$3380 = 8
$3381 = 9
$3382 = ($167, $168, $169, $170, $171, $3378, $3379, $3380, $3381, $172)
$3383 = Core:iterator:123
$3384 = call $3279 with $3382 ($3383 is responsible)
$3385 = Core:iterator:127
$3386 = call $1578 with $3377 ($3385 is responsible)
$3387 = Core:iterator:128
$3388 = call $148 with $3386 ($3387 is responsible)
$3389 = call $132 with $163 $3388 ($3387 is responsible)
# Core:iterator:128:equals:then
$3390 = { (responsible $3391) ->
  $3392 = call $145 with $3386 ($3387 is responsible)
  $3393 = call $132 with $1050 $3392 ($3387 is responsible)
  # Core:iterator:128:equals:then
  $3394 = { (responsible $3395) ->
    $3396 = call $144 with $3386 ($3387 is responsible)
    $3397 = call $132 with $165 $3396 ($3387 is responsible)
    # Core:iterator:128:equals:then
    $3398 = { (responsible $3399) ->
      $3400 = call $143 with $3386 ($3387 is responsible)
      $3401 = call $148 with $3400 ($3387 is responsible)
      $3402 = call $132 with $162 $3401 ($3387 is responsible)
      # Core:iterator:128:equals:then
      $3403 = { (responsible $3404) ->
        $3405 = call $142 with $3400 $1047 ($3387 is responsible)
        # Core:iterator:128:hasKey:then
        $3406 = { (responsible $3407) ->
          $3408 = call $141 with $3400 $1047 ($3387 is responsible)
          $3409 = ($157, $3408)
        }
        # Core:iterator:128:hasKey:else
        $3410 = { (responsible $3411) ->
          $3412 = call $147 with $3400 ($3387 is responsible)
          $3413 = call $146 with $1065 $3412 ($3387 is responsible)
          $3414 = call $146 with $3413 $189 ($3387 is responsible)
          $3415 = ($159, $3414)
        }
        $3416 = call $134 with $3405 $3406 $3410 ($3387 is responsible)
        $3417 = call $140 with $3416 $166 ($3387 is responsible)
        $3418 = call $132 with $3417 $157 ($3387 is responsible)
        # Core:iterator:128:isMatch:then
        $3419 = { (responsible $3420) ->
          $3421 = call $140 with $3416 $167 ($3387 is responsible)
          $3422 = call $142 with $3400 $1053 ($3387 is responsible)
          # Core:iterator:128:hasKey:then
          $3423 = { (responsible $3424) ->
            $3425 = call $141 with $3400 $1053 ($3387 is responsible)
            $3426 = ($157, $3425)
          }
          # Core:iterator:128:hasKey:else
          $3427 = { (responsible $3428) ->
            $3429 = call $147 with $3400 ($3387 is responsible)
            $3430 = call $146 with $1068 $3429 ($3387 is responsible)
            $3431 = call $146 with $3430 $189 ($3387 is responsible)
            $3432 = ($159, $3431)
          }
          $3433 = call $134 with $3422 $3423 $3427 ($3387 is responsible)
          $3434 = call $140 with $3433 $166 ($3387 is responsible)
          $3435 = call $132 with $3434 $157 ($3387 is responsible)
          # Core:iterator:128:isMatch:then
          $3436 = { (responsible $3437) ->
            $3438 = call $140 with $3433 $167 ($3387 is responsible)
            $3439 = ($157, $3421, $3438)
          }
          # Core:iterator:128:isMatch:else
          $3440 = { (responsible $3441) ->
            $3442 = $3433
          }
          $3443 = call $134 with $3435 $3436 $3440 ($3387 is responsible)
        }
        # Core:iterator:128:isMatch:else
        $3444 = { (responsible $3445) ->
          $3446 = $3416
        }
        $3447 = call $134 with $3418 $3419 $3444 ($3387 is responsible)
      }
      # Core:iterator:128:equals:else
      $3448 = { (responsible $3449) ->
        $3450 = call $147 with $3401 ($3387 is responsible)
        $3451 = call $146 with $181 $3450 ($3387 is responsible)
        $3452 = call $146 with $3451 $189 ($3387 is responsible)
        $3453 = ($159, $3452)
      }
      $3454 = call $134 with $3402 $3403 $3448 ($3387 is responsible)
    }
    # Core:iterator:128:equals:else
    $3455 = { (responsible $3456) ->
      $3457 = call $147 with $3396 ($3387 is responsible)
      $3458 = $736
    }
    $3459 = call $134 with $3397 $3398 $3455 ($3387 is responsible)
  }
  # Core:iterator:128:equals:else
  $3460 = { (responsible $3461) ->
    $3462 = call $147 with $3392 ($3387 is responsible)
    $3463 = call $146 with $1060 $3462 ($3387 is responsible)
    $3464 = call $146 with $3463 $174 ($3387 is responsible)
    $3465 = ($159, $3464)
  }
  $3466 = call $134 with $3393 $3394 $3460 ($3387 is responsible)
}
# Core:iterator:128:equals:else
$3467 = { (responsible $3468) ->
  $3469 = call $147 with $3388 ($3387 is responsible)
  $3470 = call $146 with $182 $3469 ($3387 is responsible)
  $3471 = call $146 with $3470 $189 ($3387 is responsible)
  $3472 = ($159, $3471)
}
$3473 = call $134 with $3389 $3390 $3467 ($3387 is responsible)
$3474 = call $140 with $3473 $166 ($3387 is responsible)
$3475 = call $132 with $3474 $157 ($3387 is responsible)
# Core:iterator:128:isMatch:else
$3476 = { (responsible $3477) ->
  $3478 = call $140 with $3473 $167 ($3387 is responsible)
  $3479 = panicking because $3478 ($3387 is at fault)
}
$3480 = call $134 with $3475 $222 $3476 ($3387 is responsible)
$3481 = Core:iterator:item
$3482 = call $140 with $3473 $167 ($3481 is responsible)
$3483 = Core:iterator:rest
$3484 = call $140 with $3473 $168 ($3483 is responsible)
$3485 = Core:iterator:133
$3486 = call $493 with $3482 $167 ($3485 is responsible)
$3487 = Core:iterator:136
$3488 = call $1578 with $3484 ($3487 is responsible)
$3489 = Core:iterator:137
$3490 = call $148 with $3488 ($3489 is responsible)
$3491 = call $132 with $163 $3490 ($3489 is responsible)
# Core:iterator:137:equals:then
$3492 = { (responsible $3493) ->
  $3494 = call $145 with $3488 ($3489 is responsible)
  $3495 = call $132 with $1050 $3494 ($3489 is responsible)
  # Core:iterator:137:equals:then
  $3496 = { (responsible $3497) ->
    $3498 = call $144 with $3488 ($3489 is responsible)
    $3499 = call $132 with $165 $3498 ($3489 is responsible)
    # Core:iterator:137:equals:then
    $3500 = { (responsible $3501) ->
      $3502 = call $143 with $3488 ($3489 is responsible)
      $3503 = call $148 with $3502 ($3489 is responsible)
      $3504 = call $132 with $162 $3503 ($3489 is responsible)
      # Core:iterator:137:equals:then
      $3505 = { (responsible $3506) ->
        $3507 = call $142 with $3502 $1047 ($3489 is responsible)
        # Core:iterator:137:hasKey:then
        $3508 = { (responsible $3509) ->
          $3510 = call $141 with $3502 $1047 ($3489 is responsible)
          $3511 = ($157, $3510)
        }
        # Core:iterator:137:hasKey:else
        $3512 = { (responsible $3513) ->
          $3514 = call $147 with $3502 ($3489 is responsible)
          $3515 = call $146 with $1065 $3514 ($3489 is responsible)
          $3516 = call $146 with $3515 $189 ($3489 is responsible)
          $3517 = ($159, $3516)
        }
        $3518 = call $134 with $3507 $3508 $3512 ($3489 is responsible)
        $3519 = call $140 with $3518 $166 ($3489 is responsible)
        $3520 = call $132 with $3519 $157 ($3489 is responsible)
        # Core:iterator:137:isMatch:then
        $3521 = { (responsible $3522) ->
          $3523 = call $140 with $3518 $167 ($3489 is responsible)
          $3524 = call $142 with $3502 $1053 ($3489 is responsible)
          # Core:iterator:137:hasKey:then
          $3525 = { (responsible $3526) ->
            $3527 = call $141 with $3502 $1053 ($3489 is responsible)
            $3528 = ($157, $3527)
          }
          # Core:iterator:137:hasKey:else
          $3529 = { (responsible $3530) ->
            $3531 = call $147 with $3502 ($3489 is responsible)
            $3532 = call $146 with $1068 $3531 ($3489 is responsible)
            $3533 = call $146 with $3532 $189 ($3489 is responsible)
            $3534 = ($159, $3533)
          }
          $3535 = call $134 with $3524 $3525 $3529 ($3489 is responsible)
          $3536 = call $140 with $3535 $166 ($3489 is responsible)
          $3537 = call $132 with $3536 $157 ($3489 is responsible)
          # Core:iterator:137:isMatch:then
          $3538 = { (responsible $3539) ->
            $3540 = call $140 with $3535 $167 ($3489 is responsible)
            $3541 = ($157, $3523, $3540)
          }
          # Core:iterator:137:isMatch:else
          $3542 = { (responsible $3543) ->
            $3544 = $3535
          }
          $3545 = call $134 with $3537 $3538 $3542 ($3489 is responsible)
        }
        # Core:iterator:137:isMatch:else
        $3546 = { (responsible $3547) ->
          $3548 = $3518
        }
        $3549 = call $134 with $3520 $3521 $3546 ($3489 is responsible)
      }
      # Core:iterator:137:equals:else
      $3550 = { (responsible $3551) ->
        $3552 = call $147 with $3503 ($3489 is responsible)
        $3553 = call $146 with $181 $3552 ($3489 is responsible)
        $3554 = call $146 with $3553 $189 ($3489 is responsible)
        $3555 = ($159, $3554)
      }
      $3556 = call $134 with $3504 $3505 $3550 ($3489 is responsible)
    }
    # Core:iterator:137:equals:else
    $3557 = { (responsible $3558) ->
      $3559 = call $147 with $3498 ($3489 is responsible)
      $3560 = $736
    }
    $3561 = call $134 with $3499 $3500 $3557 ($3489 is responsible)
  }
  # Core:iterator:137:equals:else
  $3562 = { (responsible $3563) ->
    $3564 = call $147 with $3494 ($3489 is responsible)
    $3565 = call $146 with $1060 $3564 ($3489 is responsible)
    $3566 = call $146 with $3565 $174 ($3489 is responsible)
    $3567 = ($159, $3566)
  }
  $3568 = call $134 with $3495 $3496 $3562 ($3489 is responsible)
}
# Core:iterator:137:equals:else
$3569 = { (responsible $3570) ->
  $3571 = call $147 with $3490 ($3489 is responsible)
  $3572 = call $146 with $182 $3571 ($3489 is responsible)
  $3573 = call $146 with $3572 $189 ($3489 is responsible)
  $3574 = ($159, $3573)
}
$3575 = call $134 with $3491 $3492 $3569 ($3489 is responsible)
$3576 = call $140 with $3575 $166 ($3489 is responsible)
$3577 = call $132 with $3576 $157 ($3489 is responsible)
# Core:iterator:137:isMatch:else
$3578 = { (responsible $3579) ->
  $3580 = call $140 with $3575 $167 ($3489 is responsible)
  $3581 = panicking because $3580 ($3489 is at fault)
}
$3582 = call $134 with $3577 $222 $3578 ($3489 is responsible)
$3583 = Core:iterator:item#1
$3584 = call $140 with $3575 $167 ($3583 is responsible)
$3585 = Core:iterator:rest#1
$3586 = call $140 with $3575 $168 ($3585 is responsible)
$3587 = Core:iterator:142
$3588 = call $493 with $3584 $168 ($3587 is responsible)
$3589 = Core:iterator:147
# Core:iterator:isEmpty:2
$3590 = { (responsible $3591) ->
  $3592 = panicking because $1107 ($3589 is at fault)
}
$3593 = call $1384 with $3377 $3590 ($885 is responsible)
$3594 = call $1578 with $3593 ($886 is responsible)
$3595 = call $132 with $3594 $1044 ($1 is responsible)
$3596 = Core:iterator:149
$3597 = call $493 with $3595 $152 ($3596 is responsible)
$3598 = Core:iterator:154
$3599 = call $3279 with $3294 ($3598 is responsible)
$3600 = Core:iterator:155
# Core:iterator:isEmpty:2
$3601 = { (responsible $3602) ->
  $3603 = panicking because $1107 ($3600 is at fault)
}
$3604 = call $1384 with $3599 $3601 ($885 is responsible)
$3605 = call $1578 with $3604 ($886 is responsible)
$3606 = call $132 with $3605 $1044 ($1 is responsible)
$3607 = Core:iterator:157
$3608 = call $493 with $3606 $165 ($3607 is responsible)
$3609 = Core:iterator:161:10
# Core:iterator:161
$3610 = { $3611 (+ responsible $3612) ->
  $3613 = call $148 with $3611 ($41 is responsible)
  $3614 = call $132 with $3613 $155 ($42 is responsible)
  $3615 = call $225 with $3614 $197 $3609 ($26 is responsible)
  $3616 = call $138 with $3611 $168 ($25 is responsible)
}
$3617 = Core:iterator:162
$3618 = call $1814 with $3377 $3610 ($3617 is responsible)
$3619 = Core:iterator:164
# Core:iterator:toList:2
$3620 = { (responsible $3621) ->
  $3622 = panicking because $1120 ($3619 is at fault)
}
$3623 = call $1384 with $3618 $3620 ($956 is responsible)
$3624 = call $2146 with $3623 $3294 $3295 ($958 is responsible)
$3625 = ($168, $170, $3378)
$3626 = Core:iterator:169
$3627 = call $493 with $3624 $3625 ($3626 is responsible)
$3628 = Core:iterator:173
$3629 = call $2494 with $3377 ($3628 is responsible)
$3630 = Core:iterator:175
$3631 = call $493 with $3629 $3378 ($3630 is responsible)
$3632 = Core:iterator:179
# Core:iterator:length:2
$3633 = { (responsible $3634) ->
  $3635 = panicking because $1109 ($3632 is at fault)
}
$3636 = call $1384 with $3377 $3633 ($891 is responsible)
$3637 = call $1814 with $3636 $2510 ($892 is responsible)
$3638 = call $2494 with $3637 ($893 is responsible)
$3639 = Core:iterator:181
$3640 = call $493 with $3638 $169 ($3639 is responsible)
$3641 = Core:iterator:185:9
# Core:iterator:185
$3642 = { $3643 (+ responsible $3644) ->
  $3645 = call $148 with $3643 ($43 is responsible)
  $3646 = call $132 with $3645 $155 ($1 is responsible)
  $3647 = call $225 with $3646 $210 $3641 ($777 is responsible)
  $3648 = call $713 with $3643 $166 ($778 is responsible)
}
$3649 = Core:iterator:186
$3650 = call $2514 with $3377 $3642 ($3649 is responsible)
$3651 = Core:iterator:188
$3652 = call $493 with $3650 $165 ($3651 is responsible)
# Core:iterator:192
$3653 = { $3654 (+ responsible $3655) ->
  $3656 = call $132 with $3654 $168 ($1 is responsible)
}
$3657 = Core:iterator:193
$3658 = call $2540 with $3377 $3653 ($3657 is responsible)
$3659 = Core:iterator:195
$3660 = call $493 with $3658 $165 ($3659 is responsible)
$3661 = Core:iterator:200
$3662 = call $1814 with $3377 $3372 ($3661 is responsible)
$3663 = Core:iterator:202
$3664 = call $2566 with $3662 ($3663 is responsible)
$3665 = "123"
$3666 = Core:iterator:210
$3667 = call $493 with $3664 $3665 ($3666 is responsible)
$3668 = Core:iterator:214:9
# Core:iterator:214
$3669 = { $3670 (+ responsible $3671) ->
  $3672 = call $783 with $3670 ($3668 is responsible)
}
$3673 = Core:iterator:215
$3674 = call $2588 with $3384 $3669 ($3673 is responsible)
$3675 = Core:iterator:217
# Core:iterator:toList:2
$3676 = { (responsible $3677) ->
  $3678 = panicking because $1120 ($3675 is at fault)
}
$3679 = call $1384 with $3674 $3676 ($956 is responsible)
$3680 = call $2146 with $3679 $3294 $3295 ($958 is responsible)
$3681 = ($167, $169, $171, $3379, $3381)
$3682 = Core:iterator:224
$3683 = call $493 with $3680 $3681 ($3682 is responsible)
$3684 = Core:iterator:228:10
# Core:iterator:228
$3685 = { $3686 (+ responsible $3687) ->
  $3688 = call $701 with $3686 $170 ($3684 is responsible)
}
$3689 = Core:iterator:229
$3690 = call $2853 with $3384 $3685 ($3689 is responsible)
$3691 = Core:iterator:231
# Core:iterator:toList:2
$3692 = { (responsible $3693) ->
  $3694 = panicking because $1120 ($3691 is at fault)
}
$3695 = call $1384 with $3690 $3692 ($956 is responsible)
$3696 = call $2146 with $3695 $3294 $3295 ($958 is responsible)
$3697 = Core:iterator:236
$3698 = call $493 with $3696 $3376 ($3697 is responsible)
$3699 = Core:iterator:241
$3700 = call $2995 with $3384 $170 ($3699 is responsible)
$3701 = Core:iterator:243
# Core:iterator:toList:2
$3702 = { (responsible $3703) ->
  $3704 = panicking because $1120 ($3701 is at fault)
}
$3705 = call $1384 with $3700 $3702 ($956 is responsible)
$3706 = call $2146 with $3705 $3294 $3295 ($958 is responsible)
$3707 = ($167, $168, $169, $170)
$3708 = Core:iterator:249
$3709 = call $493 with $3706 $3707 ($3708 is responsible)
$3710 = 12
$3711 = Core:iterator:254
$3712 = call $2995 with $3384 $3710 ($3711 is responsible)
$3713 = Core:iterator:256
# Core:iterator:toList:2
$3714 = { (responsible $3715) ->
  $3716 = panicking because $1120 ($3713 is at fault)
}
$3717 = call $1384 with $3712 $3714 ($956 is responsible)
$3718 = call $2146 with $3717 $3294 $3295 ($958 is responsible)
$3719 = Core:iterator:268
$3720 = call $493 with $3718 $3382 ($3719 is responsible)
$3721 = Core:iterator:273
$3722 = call $3259 with $3384 $170 ($3721 is responsible)
$3723 = Core:iterator:275
# Core:iterator:toList:2
$3724 = { (responsible $3725) ->
  $3726 = panicking because $1120 ($3723 is at fault)
}
$3727 = call $1384 with $3722 $3724 ($956 is responsible)
$3728 = call $2146 with $3727 $3294 $3295 ($958 is responsible)
$3729 = ($171, $3378, $3379, $3380, $3381, $172)
$3730 = Core:iterator:283
$3731 = call $493 with $3728 $3729 ($3730 is responsible)
$3732 = 40
$3733 = Core:iterator:288
$3734 = call $3259 with $3384 $3732 ($3733 is responsible)
$3735 = Core:iterator:290
# Core:iterator:toList:2
$3736 = { (responsible $3737) ->
  $3738 = panicking because $1120 ($3735 is at fault)
}
$3739 = call $1384 with $3734 $3736 ($956 is responsible)
$3740 = call $2146 with $3739 $3294 $3295 ($958 is responsible)
$3741 = Core:iterator:292
$3742 = call $493 with $3740 $3294 ($3741 is responsible)
$3743 = Core:iterator:299
$3744 = call $3303 with $3384 $170 $169 $152 ($3743 is responsible)
$3745 = Core:iterator:301
# Core:iterator:toList:2
$3746 = { (responsible $3747) ->
  $3748 = panicking because $1120 ($3745 is at fault)
}
$3749 = call $1384 with $3744 $3746 ($956 is responsible)
$3750 = call $2146 with $3749 $3294 $3295 ($958 is responsible)
$3751 = ($170, $171, $3378, $3379)
$3752 = ($3379, $3380, $3381, $172)
$3753 = ($3707, $3751, $3752)
$3754 = Core:iterator:318
$3755 = call $493 with $3750 $3753 ($3754 is responsible)
$3756 = Core:iterator:323
$3757 = call $3355 with $3384 $169 ($3756 is responsible)
$3758 = Core:iterator:325
# Core:iterator:toList:2
$3759 = { (responsible $3760) ->
  $3761 = panicking because $1120 ($3758 is at fault)
}
$3762 = call $1384 with $3757 $3759 ($956 is responsible)
$3763 = call $2146 with $3762 $3294 $3295 ($958 is responsible)
$3764 = ($170, $171, $3378)
$3765 = ($3379, $3380, $3381)
$3766 = ($172,)
$3767 = ($3376, $3764, $3765, $3766)
$3768 = Core:iterator:341
$3769 = call $493 with $3763 $3767 ($3768 is responsible)
$3770 = Builtins::textTrimEnd:11
$3771 = Builtins::textTrimStart:11
$3772 = Builtins::textTrimStart:5
$3773 = Core:text:trim:4
$3774 = Core:text:trim:7
$3775 = builtinTextTrimEnd
$3776 = builtinTextTrimStart
# Core:text:trim
$3777 = { $3778 (+ responsible $3779) ->
  $3780 = call $148 with $3778 ($43 is responsible)
  $3781 = call $132 with $3780 $164 ($1 is responsible)
  $3782 = call $225 with $3781 $207 $3779 ($3773 is responsible)
  $3783 = call $148 with $3778 ($41 is responsible)
  $3784 = call $132 with $3783 $164 ($42 is responsible)
  $3785 = call $225 with $3784 $216 $3774 ($3772 is responsible)
  $3786 = call $3776 with $3778 ($3771 is responsible)
  $3787 = call $3775 with $3786 ($3770 is responsible)
}
$3788 = Stdout
$3789 = Examples:higherLower:14:print:7
$3790 = Examples:higherLower:14:print:9
$3791 = Stdin
$3792 = Examples:higherLower:14:0:8
$3793 = Examples:higherLower:14:0:9
$3794 = "Welcome to the number guessing game!"
$3795 = "What's your guess?"
$3796 = Examples:higherLower:14:14:11
$3797 = Examples:higherLower:14:14:20
$3798 = Examples:higherLower:14:14:29
$3799 = "You did it!"
$3800 = Examples:higherLower:14:14:40:6:12
$3801 = "Lower!"
# Examples:higherLower:14:14:40:6:13
$3802 = { (responsible $3803) ->
  $3804 = $3801
}
$3805 = "Higher!"
# Examples:higherLower:14:14:40:6:14
$3806 = { (responsible $3807) ->
  $3808 = $3805
}
$3809 = Examples:higherLower:14:14:40:6:15
$3810 = Examples:higherLower:14:14:40:7
$3811 = "Your guess must be a number."
$3812 = Examples:higherLower:14:14:42
$3813 = Examples:higherLower:14:15
# Examples:higherLower:14
$3814 = { $3815 (+ responsible $3816) ->
  # Examples:higherLower:14:0
  $3817 = { (responsible $3818) ->
    $3819 = call $148 with $3815 ($41 is responsible)
    $3820 = call $132 with $3819 $162 ($42 is responsible)
    $3821 = call $225 with $3820 $214 $3792 ($39 is responsible)
    $3822 = call $142 with $3815 $3791 ($36 is responsible)
    $3823 = call $225 with $3822 $215 $3792 ($37 is responsible)
    $3824 = call $141 with $3815 $3791 ($38 is responsible)
    $3825 = call $325 with $3824 ($3793 is responsible)
  }
  $3826 = call $148 with $3815 ($41 is responsible)
  $3827 = call $132 with $3826 $162 ($42 is responsible)
  $3828 = call $225 with $3827 $214 $3789 ($39 is responsible)
  $3829 = call $142 with $3815 $3788 ($36 is responsible)
  $3830 = call $225 with $3829 $215 $3789 ($37 is responsible)
  $3831 = call $141 with $3815 $3788 ($38 is responsible)
  $3832 = call $3831 with $3794 ($3790 is responsible)
  # Examples:higherLower:14:14
  $3833 = { (responsible $3834) ->
    $3835 = call $148 with $3815 ($41 is responsible)
    $3836 = call $132 with $3835 $162 ($42 is responsible)
    $3837 = call $225 with $3836 $214 $3789 ($39 is responsible)
    $3838 = call $142 with $3815 $3788 ($36 is responsible)
    $3839 = call $225 with $3838 $215 $3789 ($37 is responsible)
    $3840 = call $141 with $3815 $3788 ($38 is responsible)
    $3841 = call $3840 with $3795 ($3790 is responsible)
    $3842 = call $325 with $3817 ($3796 is responsible)
    $3843 = call $3777 with $3842 ($3797 is responsible)
    $3844 = call $148 with $3843 ($41 is responsible)
    $3845 = call $132 with $3844 $164 ($42 is responsible)
    $3846 = call $225 with $3845 $216 $3798 ($770 is responsible)
    $3847 = call $779 with $3843 ($769 is responsible)
    # Examples:higherLower:14:14:40
    $3848 = { $3849 (+ responsible $3850) ->
      $3851 = call $132 with $3849 $780 ($1 is responsible)
      # Examples:higherLower:14:14:40:5
      $3852 = { (responsible $3853) ->
        $3854 = call $148 with $3815 ($41 is responsible)
        $3855 = call $132 with $3854 $162 ($42 is responsible)
        $3856 = call $225 with $3855 $214 $3789 ($39 is responsible)
        $3857 = call $142 with $3815 $3788 ($36 is responsible)
        $3858 = call $225 with $3857 $215 $3789 ($37 is responsible)
        $3859 = call $141 with $3815 $3788 ($38 is responsible)
        $3860 = call $3859 with $3799 ($3790 is responsible)
        $3861 = $149
      }
      # Examples:higherLower:14:14:40:6
      $3862 = { (responsible $3863) ->
        $3864 = call $701 with $780 $3849 ($3800 is responsible)
        $3865 = call $256 with $3864 $3802 $3806 ($3809 is responsible)
        $3866 = call $148 with $3815 ($41 is responsible)
        $3867 = call $132 with $3866 $162 ($42 is responsible)
        $3868 = call $225 with $3867 $214 $3789 ($39 is responsible)
        $3869 = call $142 with $3815 $3788 ($36 is responsible)
        $3870 = call $225 with $3869 $215 $3789 ($37 is responsible)
        $3871 = call $141 with $3815 $3788 ($38 is responsible)
        $3872 = call $3871 with $3865 ($3790 is responsible)
        $3873 = $150
      }
      $3874 = call $256 with $3851 $3852 $3862 ($3810 is responsible)
    }
    # Examples:higherLower:14:14:41
    $3875 = { $3876 (+ responsible $3877) ->
      $3878 = call $148 with $3815 ($41 is responsible)
      $3879 = call $132 with $3878 $162 ($42 is responsible)
      $3880 = call $225 with $3879 $214 $3789 ($39 is responsible)
      $3881 = call $142 with $3815 $3788 ($36 is responsible)
      $3882 = call $225 with $3881 $215 $3789 ($37 is responsible)
      $3883 = call $141 with $3815 $3788 ($38 is responsible)
      $3884 = call $3883 with $3811 ($3790 is responsible)
      $3885 = $150
    }
    $3886 = call $1212 with $3847 $3848 $3875 ($3812 is responsible)
  }
  $3887 = call $534 with $3833 ($3813 is responsible)
}
