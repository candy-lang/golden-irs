# AST for module Examples:iterable
assignment: identifier $6@"builtins" = 
  call identifier $0@"use" with these arguments:
    text
      textPart $2@"Builtins"
assignment: struct
  identifier $15@"bool"
  identifier $17@"equals"
  identifier $19@"ifElse"
  identifier $21@"iterable"
  identifier $23@"list"
  identifier $25@"result"
  identifier $27@"text" = 
  call identifier $9@"use" with these arguments:
    text
      textPart $11@"Core"
assignment: $89@"splitWhereFirst" = function (fuzzable) { identifier $90@"iter" identifier $92@"checker" ->
  call struct access identifier $31@"builtins".$33@"Print" with these arguments:
    text
      textPart $35@"Getting leading items"
  assignment: identifier $60@"firstPart" = 
    call struct access identifier $55@"iterable".$57@"ToList" with these arguments:
      call struct access identifier $41@"iterable".$43@"TakeUntil" with these arguments:
        identifier $39@"iter"
        function (non-fuzzable) { identifier $45@"item" ->
          call identifier $47@"checker" with these arguments:
            identifier $49@"item"
        }
  call struct access identifier $63@"builtins".$65@"Print" with these arguments:
    text
      textPart $67@"Turned into list"
  list
    identifier $71@"firstPart"
    call struct access identifier $75@"iterable".$77@"Skip" with these arguments:
      identifier $73@"iter"
      call struct access identifier $81@"list".$83@"Length" with these arguments:
        identifier $79@"firstPart"
}
assignment: $137@"split" = function (fuzzable) { identifier $138@"iter" identifier $140@"delimeter" ->
  call struct access identifier $95@"iterable".$97@"GenerateWithState" with these arguments:
    identifier $99@"iter"
    function (non-fuzzable) { identifier $101@"state" ->
      call struct access identifier $105@"iterable".$107@"TakeUntil" with these arguments:
        identifier $103@"state"
        function (non-fuzzable) { identifier $109@"item" ->
          call identifier $111@"equals" with these arguments:
            identifier $113@"item"
            identifier $115@"delimeter"
        }
      call struct access identifier $128@"result".$130@"Map" with these arguments:
        call struct access identifier $123@"iterable".$125@"Next" with these arguments:
          identifier $121@"state"
        function (non-fuzzable) {
          
        }
    }
}
assignment: identifier $187@"main" := 
  function (non-fuzzable) { identifier $143@"env" ->
    assignment: $152@"print" = function (fuzzable) { identifier $153@"message" ->
      call struct access identifier $145@"env".$147@"Stdout" with these arguments:
        identifier $149@"message"
    }
    call struct access identifier $172@"iterable".$174@"ForEach" with these arguments:
      assignment: identifier $169@"foo" = 
        call struct access identifier $164@"iterable".$166@"FromList" with these arguments:
          call struct access identifier $159@"text".$161@"Characters" with these arguments:
            text
              textPart $156@"Hello, world! This is some long text. Bla bla blub."
      function (non-fuzzable) { identifier $176@"item" ->
        call identifier $178@"print" with these arguments:
          identifier $180@"item"
      }
  }
