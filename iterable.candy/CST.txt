# CST for module Examples:iterable
builtins = use "Builtins"
[bool, equals, ifElse, iterable, list, result, text] = use "Core"

splitWhereFirst iter checker =
  # Splits the iterable into a list and an iterable of the remaining items. The
  # matching item itself is still the first item of the remaining iterable.
  builtins.print "Getting leading items"
  firstPart = iter | iterable.takeUntil { item -> checker item } | iterable.toList
  builtins.print "Turned into list"
  (firstPart, iter | iterable.skip (firstPart | list.length))

split iter delimeter = iterable.generateWithState iter { state ->
  state | iterable.takeUntil { item -> equals item delimeter }state | iterable.next | result.map { }
}

main := { env ->
  print message = env.stdout messagefoo =
    "Hello, world! This is some long text. Bla bla blub." | text.characters | iterable.fromList
  #| splitWhereFirst { c ->
  #  builtins.print c
  #  equals c ","
  #}
  #builtins.print "Hi"
  #builtins.print foo
  | iterable.forEach { item -> print item }
}
