; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::tagWithoutValue:11" = global ptr null
@"Builtins::tagWithoutValue:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:bool:implies:12" = global ptr null
@"Core:bool:implies:15" = global ptr null
@"Core:bool:implies:2" = global ptr null
@"Core:bool:implies:4" = global ptr null
@"Core:bool:implies:7" = global ptr null
@"Core:bool:implies:9" = global ptr null
@"Core:bool:is:1" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:18" = global ptr null
@"Core:bool:lazyAnd:18:13" = global ptr null
@"Core:bool:lazyAnd:18:21" = global ptr null
@"Core:bool:lazyAnd:18:9" = global ptr null
@"Core:bool:lazyAnd:2" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:18" = global ptr null
@"Core:bool:lazyOr:18:10" = global ptr null
@"Core:bool:lazyOr:18:14" = global ptr null
@"Core:bool:lazyOr:18:22" = global ptr null
@"Core:bool:lazyOr:2" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:not:2" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:or:2" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:7" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:check:check:11" = global ptr null
@"Core:check:check:20" = global ptr null
@"Core:check:check:9" = global ptr null
@"Core:controlFlow:recursive:17" = global ptr null
@"Core:controlFlow:recursive:18:0:3" = global ptr null
@"Core:controlFlow:recursive:18:5" = global ptr null
@"Core:controlFlow:recursive:23" = global ptr null
@"Core:controlFlow:recursive:9" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:13" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:run:2" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:int:compareTo:20" = global ptr null
@"Core:int:compareTo:39" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"Core:int:compareTo:40" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isLessThanOrEqualTo:13" = global ptr null
@"Core:int:isLessThanOrEqualTo:22" = global ptr null
@"Core:int:isLessThanOrEqualTo:4" = global ptr null
@"Core:int:isLessThanOrEqualTo:9" = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@"Core:int:isNonNegative:16" = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"Core:iterable:82:11:1" = global ptr null
@"Core:iterable:82:11:13" = global ptr null
@"Core:iterable:82:11:6" = global ptr null
@"Core:iterable:82:11:item" = global ptr null
@"Core:iterable:82:11:rest" = global ptr null
@"Core:iterable:82:12" = global ptr null
@"Core:iterable:82:2" = global ptr null
@"Core:iterable:82:22" = global ptr null
@"Core:iterable:foldLeft:14" = global ptr null
@"Core:iterable:foldLeft:16" = global ptr null
@"Core:iterable:foldLeft:22" = global ptr null
@"Core:iterable:foldLeft:4" = global ptr null
@"Core:iterable:forEach:14" = global ptr null
@"Core:iterable:forEach:16" = global ptr null
@"Core:iterable:forEach:20:2" = global ptr null
@"Core:iterable:forEach:21" = global ptr null
@"Core:iterable:forEach:4" = global ptr null
@"Core:iterable:fromList:18:1" = global ptr null
@"Core:iterable:fromList:18:13" = global ptr null
@"Core:iterable:fromList:18:14:12" = global ptr null
@"Core:iterable:fromList:18:14:27" = global ptr null
@"Core:iterable:fromList:18:16" = global ptr null
@"Core:iterable:fromList:18:index" = global ptr null
@"Core:iterable:fromList:18:l" = global ptr null
@"Core:iterable:fromList:19" = global ptr null
@"Core:iterable:generateWithState:11" = global ptr null
@"Core:iterable:generateWithState:14:0:11:1" = global ptr null
@"Core:iterable:generateWithState:14:0:11:8" = global ptr null
@"Core:iterable:generateWithState:14:0:11:item" = global ptr null
@"Core:iterable:generateWithState:14:0:11:state" = global ptr null
@"Core:iterable:generateWithState:14:0:12" = global ptr null
@"Core:iterable:generateWithState:14:0:2" = global ptr null
@"Core:iterable:generateWithState:15" = global ptr null
@"Core:iterable:generateWithState:9" = global ptr null
@"Core:iterable:is:9" = global ptr null
@"Core:iterable:next:14" = global ptr null
@"Core:iterable:next:4" = global ptr null
@"Core:list:isEmpty:4" = global ptr null
@"Core:list:isEmpty:8" = global ptr null
@"Core:list:isValidIndex:16" = global ptr null
@"Core:list:isValidIndex:20" = global ptr null
@"Core:list:isValidIndex:22:9" = global ptr null
@"Core:list:isValidIndex:23" = global ptr null
@"Core:list:isValidIndex:32:11" = global ptr null
@"Core:list:isValidIndex:32:20" = global ptr null
@"Core:list:isValidIndex:32:21" = global ptr null
@"Core:list:isValidIndex:33" = global ptr null
@"Core:list:isValidIndex:4" = global ptr null
@"Core:list:lastIndex:10:3" = global ptr null
@"Core:list:lastIndex:11" = global ptr null
@"Core:list:lastIndex:4" = global ptr null
@"Core:list:lastIndex:8" = global ptr null
@"Core:result:flatMap:14" = global ptr null
@"Core:result:flatMap:16" = global ptr null
@"Core:result:flatMap:19:2" = global ptr null
@"Core:result:flatMap:2" = global ptr null
@"Core:result:flatMap:21" = global ptr null
@"Core:result:flatMap:4" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:is:1:_" = global ptr null
@"Core:result:isOk:14" = global ptr null
@"Core:result:isOk:2" = global ptr null
@"Core:result:isOk:4" = global ptr null
@"Core:result:map:14" = global ptr null
@"Core:result:map:16" = global ptr null
@"Core:result:map:19:3" = global ptr null
@"Core:result:map:2" = global ptr null
@"Core:result:map:20" = global ptr null
@"Core:result:map:4" = global ptr null
@"Core:result:mapOr:14" = global ptr null
@"Core:result:mapOr:16" = global ptr null
@"Core:result:mapOr:2" = global ptr null
@"Core:result:mapOr:21" = global ptr null
@"Core:result:mapOr:4" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:2" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:unwrap:18" = global ptr null
@"Core:result:unwrap:19" = global ptr null
@"Core:result:unwrap:2" = global ptr null
@"Core:result:unwrap:4" = global ptr null
@"Core:result:unwrap:7" = global ptr null
@"Core:result:unwrap:9" = global ptr null
@"Core:result:unwrapOr:2" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@"Core:result:unwrapOrElse:2" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@"Core:result:unwrapOrElse:8:9" = global ptr null
@"Core:result:unwrapOrElse:9" = global ptr null
@"Examples:iterable:21:35" = global ptr null
@"Examples:iterable:21:print:7" = global ptr null
@"Examples:iterable:21:print:9" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Empty = global ptr null
@tag_Equal = global ptr null
@tag_Error = global ptr null
@tag_False = global ptr null
@tag_Function = global ptr null
@tag_GetValue = global ptr null
@tag_Greater = global ptr null
@tag_Index = global ptr null
@tag_Int = global ptr null
@tag_Item = global ptr null
@tag_L = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_Main = global ptr null
@tag_Match = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Ok = global ptr null
@tag_Rest = global ptr null
@tag_State = global ptr null
@tag_Stdout = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@"text_ " = global ptr null
@"text_!" = global ptr null
@"text_," = global ptr null
@text_. = global ptr null
@"text_A check didn't succeed." = global ptr null
@text_B = global ptr null
@"text_Can't get the last index of an empty list." = global ptr null
@"text_Expected Equal, got " = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected Greater, got " = global ptr null
@"text_Expected Less, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@text_H = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_Struct doesn't contain key `Index`: `" = global ptr null
@"text_Struct doesn't contain key `Item`: `" = global ptr null
@"text_Struct doesn't contain key `L`: `" = global ptr null
@"text_Struct doesn't contain key `Rest`: `" = global ptr null
@"text_Struct doesn't contain key `State`: `" = global ptr null
@text_T = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_`." = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"text_`function.is1 action` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 mapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`function.is2 combine` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`int.is index` was not satisfied" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"text_`is iterable` was not satisfied" = global ptr null
@"text_`is list` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`isOk result` was not satisfied" = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@text_a = global ptr null
@text_b = global ptr null
@text_d = global ptr null
@text_e = global ptr null
@text_g = global ptr null
@text_h = global ptr null
@text_i = global ptr null
@text_l = global ptr null
@text_m = global ptr null
@text_n = global ptr null
@text_o = global ptr null
@text_r = global ptr null
@text_s = global ptr null
@text_t = global ptr null
@text_u = global ptr null
@text_w = global ptr null
@text_x = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then" = global ptr null
@"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_then = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.3 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.5 = global ptr null
@2 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.7 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.9 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.11 = global ptr null
@3 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.13 = global ptr null
@4 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.15 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.17 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.19 = global ptr null
@5 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.21 = global ptr null
@6 = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.23 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@7 = global ptr null
@fun_Builtins__ifElse_1_equals_else.25 = global ptr null
@8 = global ptr null
@fun_Builtins__ifElse_1_equals_else.27 = global ptr null
@9 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.29 = global ptr null
@fun_Builtins__ifElse_1_equals_then.31 = global ptr null
@fun_Builtins__ifElse_1_equals_else.33 = global ptr null
@10 = global ptr null
@fun_Builtins__ifElse_1_equals_else.35 = global ptr null
@11 = global ptr null
@fun_Builtins__ifElse_1_equals_else.37 = global ptr null
@12 = global ptr null
@fun_Builtins__ifElse_1_case-0_didNotMatch = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_then = global ptr null
@fun_Core_bool_is_1_equals_then.39 = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@13 = global ptr null
@fun_Core_bool_is_1_equals_else.41 = global ptr null
@14 = global ptr null
@fun_Core_bool_is_1_equals_else.43 = global ptr null
@15 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_then.45 = global ptr null
@fun_Core_bool_is_1_equals_then.47 = global ptr null
@fun_Core_bool_is_1_equals_else.49 = global ptr null
@16 = global ptr null
@fun_Core_bool_is_1_equals_else.51 = global ptr null
@17 = global ptr null
@fun_Core_bool_is_1_equals_else.53 = global ptr null
@18 = global ptr null
@fun_Core_bool_is_1_case-0_didNotMatch = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_not_6_equals_then = global ptr null
@fun_Core_bool_not_6_equals_then.55 = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@19 = global ptr null
@fun_Core_bool_not_6_equals_else.57 = global ptr null
@20 = global ptr null
@fun_Core_bool_not_6_equals_else.59 = global ptr null
@21 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_then.61 = global ptr null
@fun_Core_bool_not_6_equals_then.63 = global ptr null
@fun_Core_bool_not_6_equals_else.65 = global ptr null
@22 = global ptr null
@fun_Core_bool_not_6_equals_else.67 = global ptr null
@23 = global ptr null
@fun_Core_bool_not_6_equals_else.69 = global ptr null
@24 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.71 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else = global ptr null
@25 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.73 = global ptr null
@26 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.75 = global ptr null
@27 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.77 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.79 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.81 = global ptr null
@28 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.83 = global ptr null
@29 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.85 = global ptr null
@30 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_lazyOr_18_equals_then = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.87 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else = global ptr null
@31 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.89 = global ptr null
@32 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.91 = global ptr null
@33 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.93 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.95 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.97 = global ptr null
@34 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.99 = global ptr null
@35 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.101 = global ptr null
@36 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_implies = global ptr null
@fun_Core_bool_or_12 = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else.103" = global ptr null
@fun_Core_check_check = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.105" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.107" = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Core_int_compareTo = global ptr null
@fun_Core_int_isLessThan = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@37 = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@fun_Core_int_isLessThanOrEqualTo = global ptr null
@fun_Core_result_is = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.109 = global ptr null
@fun_Core_result_is_1_equals_then.111 = global ptr null
@38 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@fun_Core_result_is_1_equals_else.113 = global ptr null
@39 = global ptr null
@fun_Core_result_is_1_equals_else.115 = global ptr null
@40 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.117 = global ptr null
@fun_Core_result_is_1_equals_then.119 = global ptr null
@fun_Core_result_is_1_equals_then.121 = global ptr null
@41 = global ptr null
@fun_Core_result_is_1_equals_else.123 = global ptr null
@fun_Core_result_is_1_equals_else.125 = global ptr null
@42 = global ptr null
@fun_Core_result_is_1_equals_else.127 = global ptr null
@43 = global ptr null
@fun_Core_result_is_1_case-0_matched = global ptr null
@fun_Core_result_is_1_case-0_didNotMatch = global ptr null
@fun_Core_result_unwrap = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.129 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.131 = global ptr null
@44 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.133 = global ptr null
@45 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.135 = global ptr null
@46 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.137 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.139 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.141 = global ptr null
@47 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.143 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.145 = global ptr null
@48 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.147 = global ptr null
@49 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@fun_Core_result_flatMap = global ptr null
@fun_Core_result_flatMap_19 = global ptr null
@fun_Core_result_mapOr_20 = global ptr null
@fun_Core_result_map = global ptr null
@fun_Core_result_map_19 = global ptr null
@tag_Ok.148 = global ptr null
@"fun_Core_iterable_range_38, Core_result_unwrapOrElse_7" = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@fun_Core_result_unwrapOrElse_8 = global ptr null
@fun_Core_list_isEmpty = global ptr null
@tag_Error.149 = global ptr null
@fun_Core_list_lastIndex_9 = global ptr null
@fun_Core_list_lastIndex = global ptr null
@fun_Core_list_lastIndex_10 = global ptr null
@tag_Ok.150 = global ptr null
@fun_Core_list_isValidIndex = global ptr null
@fun_Core_list_isValidIndex_22 = global ptr null
@fun_Core_list_isValidIndex_32 = global ptr null
@fun_Core_iterable_generateWithState = global ptr null
@fun_Core_iterable_generateWithState_14 = global ptr null
@fun_Core_iterable_generateWithState_14_0 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_equals_then = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then = global ptr null
@50 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else = global ptr null
@51 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then.152 = global ptr null
@52 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else.154 = global ptr null
@53 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then.156 = global ptr null
@54 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.158 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_equals_else = global ptr null
@55 = global ptr null
@fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.160 = global ptr null
@fun_Core_controlFlow_recursive_18 = global ptr null
@fun_Core_controlFlow_recursive_18_0 = global ptr null
@tag_Error.161 = global ptr null
@"fun_Core_iterable_fromList_18_15, Core_iterable_generate_50_5, Core_iterable_takeWhile_2_11_8, Core_iterable_windowed_67_27" = global ptr null
@fun_Core_iterable_82 = global ptr null
@fun_Core_iterable_82_11 = global ptr null
@fun_Core_iterable_82_11_1_equals_then = global ptr null
@fun_Core_iterable_82_11_1_hasKey_then = global ptr null
@56 = global ptr null
@fun_Core_iterable_82_11_1_hasKey_else = global ptr null
@57 = global ptr null
@fun_Core_iterable_82_11_1_isMatch_then = global ptr null
@fun_Core_iterable_82_11_1_hasKey_then.163 = global ptr null
@58 = global ptr null
@fun_Core_iterable_82_11_1_hasKey_else.165 = global ptr null
@59 = global ptr null
@fun_Core_iterable_82_11_1_isMatch_then.167 = global ptr null
@60 = global ptr null
@fun_Core_iterable_82_11_1_isMatch_else = global ptr null
@fun_Core_iterable_82_11_1_isMatch_else.169 = global ptr null
@fun_Core_iterable_82_11_1_equals_else = global ptr null
@61 = global ptr null
@fun_Core_iterable_82_11_1_isMatch_else.171 = global ptr null
@fun_Core_iterable_forEach = global ptr null
@fun_Core_iterable_forEach_20 = global ptr null
@fun_Core_iterable_fromList_18 = global ptr null
@fun_Core_iterable_fromList_18_1_equals_then = global ptr null
@fun_Core_iterable_fromList_18_1_hasKey_then = global ptr null
@62 = global ptr null
@fun_Core_iterable_fromList_18_1_hasKey_else = global ptr null
@63 = global ptr null
@fun_Core_iterable_fromList_18_1_isMatch_then = global ptr null
@fun_Core_iterable_fromList_18_1_hasKey_then.173 = global ptr null
@64 = global ptr null
@fun_Core_iterable_fromList_18_1_hasKey_else.175 = global ptr null
@65 = global ptr null
@fun_Core_iterable_fromList_18_1_isMatch_then.177 = global ptr null
@66 = global ptr null
@fun_Core_iterable_fromList_18_1_isMatch_else = global ptr null
@fun_Core_iterable_fromList_18_1_isMatch_else.179 = global ptr null
@fun_Core_iterable_fromList_18_1_equals_else = global ptr null
@67 = global ptr null
@fun_Core_iterable_fromList_18_1_isMatch_else.181 = global ptr null
@fun_Core_iterable_fromList_18_14 = global ptr null
@tag_Ok.182 = global ptr null
@68 = global ptr null
@fun_Examples_iterable_21 = global ptr null
@"fun_Examples_iterable_21_print, Examples_iterable_21_34" = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::functionRun:11", align 8
  %4 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::functionRun:16", align 8
  %6 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::functionRun:22", align 8
  %8 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::functionRun:5", align 8
  %10 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::getArgumentCount:11", align 8
  %12 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::getArgumentCount:5", align 8
  %14 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::ifElse:1", align 8
  %16 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::ifElse:11", align 8
  %18 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::ifElse:14", align 8
  %20 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::ifElse:19", align 8
  %22 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:25", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:28", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:33", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:41", align 8
  %30 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:5", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::intAdd:18", align 8
  %34 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::intAdd:5", align 8
  %36 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::intCompareTo:11", align 8
  %38 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::intCompareTo:18", align 8
  %40 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intCompareTo:5", align 8
  %42 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intSubtract:18", align 8
  %44 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::isNonNegative:12", align 8
  %46 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::isNonNegative:13", align 8
  %48 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::isNonNegative:5", align 8
  %50 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::listGet:11", align 8
  %52 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::listGet:14", align 8
  %54 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::listGet:16", align 8
  %56 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::listGet:24", align 8
  %58 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::listGet:25", align 8
  %60 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::listGet:30", align 8
  %62 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::listGet:37", align 8
  %64 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::listGet:5", align 8
  %66 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::listLength:11", align 8
  %68 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::listLength:5", align 8
  %70 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::structGet:12", align 8
  %72 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::structGet:14", align 8
  %74 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::structGet:21", align 8
  %76 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::structGet:5", align 8
  %78 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::tagWithoutValue:11\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::tagWithoutValue:11", align 8
  %80 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::tagWithoutValue:5\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::tagWithoutValue:5", align 8
  %82 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::typeIs:19", align 8
  %84 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::typeIs:25", align 8
  %86 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::typeOf:5", align 8
  %88 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:12\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Core:bool:implies:12", align 8
  %90 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:15\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Core:bool:implies:15", align 8
  %92 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:2\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Core:bool:implies:2", align 8
  %94 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:4\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Core:bool:implies:4", align 8
  %96 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:7\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Core:bool:implies:7", align 8
  %98 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:9\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Core:bool:implies:9", align 8
  %100 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Core:bool:is:1", align 8
  %102 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Core:bool:lazyAnd:14", align 8
  %104 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Core:bool:lazyAnd:16", align 8
  %106 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:18\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Core:bool:lazyAnd:18", align 8
  %108 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:13\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Core:bool:lazyAnd:18:13", align 8
  %110 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:21\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Core:bool:lazyAnd:18:21", align 8
  %112 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:9\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Core:bool:lazyAnd:18:9", align 8
  %114 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:2\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Core:bool:lazyAnd:2", align 8
  %116 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Core:bool:lazyAnd:4", align 8
  %118 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Core:bool:lazyOr:14", align 8
  %120 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Core:bool:lazyOr:16", align 8
  %122 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:18\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Core:bool:lazyOr:18", align 8
  %124 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:10\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Core:bool:lazyOr:18:10", align 8
  %126 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:14\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Core:bool:lazyOr:18:14", align 8
  %128 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:22\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Core:bool:lazyOr:18:22", align 8
  %130 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:2\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Core:bool:lazyOr:2", align 8
  %132 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Core:bool:lazyOr:4", align 8
  %134 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:2\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Core:bool:not:2", align 8
  %136 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Core:bool:not:4", align 8
  %138 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Core:bool:not:6", align 8
  %140 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Core:bool:or:13", align 8
  %142 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:2\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Core:bool:or:2", align 8
  %144 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Core:bool:or:4", align 8
  %146 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:7\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Core:bool:or:7", align 8
  %148 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Core:bool:or:9", align 8
  %150 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:11\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Core:check:check:11", align 8
  %152 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:20\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Core:check:check:20", align 8
  %154 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:9\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Core:check:check:9", align 8
  %156 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:17\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Core:controlFlow:recursive:17", align 8
  %158 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:18:0:3\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  %160 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:18:5\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Core:controlFlow:recursive:18:5", align 8
  %162 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:23\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Core:controlFlow:recursive:23", align 8
  %164 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:9\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Core:controlFlow:recursive:9", align 8
  %166 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Core:function:is0:11:3", align 8
  %168 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Core:function:is0:13", align 8
  %170 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Core:function:is1:11:3", align 8
  %172 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Core:function:is1:13", align 8
  %174 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Core:function:is2:11:3", align 8
  %176 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Core:function:is2:13", align 8
  %178 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Core:function:run:14", align 8
  %180 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:2\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Core:function:run:2", align 8
  %182 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Core:function:run:4", align 8
  %184 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:20\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Core:int:compareTo:20", align 8
  %186 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:39\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Core:int:compareTo:39", align 8
  %188 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Core:int:compareTo:4", align 8
  %190 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:40\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Core:int:compareTo:40", align 8
  %192 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Core:int:compareTo:9", align 8
  %194 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Core:int:isGreaterThan:13", align 8
  %196 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Core:int:isGreaterThan:4", align 8
  %198 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Core:int:isGreaterThan:9", align 8
  %200 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Core:int:isLessThan:13", align 8
  %202 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Core:int:isLessThan:4", align 8
  %204 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Core:int:isLessThan:9", align 8
  %206 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:13\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Core:int:isLessThanOrEqualTo:13", align 8
  %208 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:int:isLessThanOrEqualTo:22\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Core:int:isLessThanOrEqualTo:22", align 8
  %210 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:int:isLessThanOrEqualTo:4\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Core:int:isLessThanOrEqualTo:4", align 8
  %212 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:int:isLessThanOrEqualTo:9\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Core:int:isLessThanOrEqualTo:9", align 8
  %214 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Core:int:isNegative:4", align 8
  %216 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Core:int:isNegative:8", align 8
  %218 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:16\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Core:int:isNonNegative:16", align 8
  %220 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Core:int:isNonNegative:4", align 8
  %222 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Core:int:isNonNegative:7", align 8
  %224 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterable:82:11:1\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Core:iterable:82:11:1", align 8
  %226 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterable:82:11:13\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Core:iterable:82:11:13", align 8
  %228 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterable:82:11:6\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Core:iterable:82:11:6", align 8
  %230 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterable:82:11:item\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Core:iterable:82:11:item", align 8
  %232 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterable:82:11:rest\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Core:iterable:82:11:rest", align 8
  %234 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterable:82:12\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Core:iterable:82:12", align 8
  %236 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterable:82:2\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Core:iterable:82:2", align 8
  %238 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterable:82:22\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Core:iterable:82:22", align 8
  %240 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterable:foldLeft:14\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Core:iterable:foldLeft:14", align 8
  %242 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterable:foldLeft:16\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Core:iterable:foldLeft:16", align 8
  %244 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterable:foldLeft:22\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Core:iterable:foldLeft:22", align 8
  %246 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterable:foldLeft:4\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Core:iterable:foldLeft:4", align 8
  %248 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterable:forEach:14\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Core:iterable:forEach:14", align 8
  %250 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterable:forEach:16\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Core:iterable:forEach:16", align 8
  %252 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterable:forEach:20:2\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Core:iterable:forEach:20:2", align 8
  %254 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterable:forEach:21\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Core:iterable:forEach:21", align 8
  %256 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterable:forEach:4\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Core:iterable:forEach:4", align 8
  %258 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterable:fromList:18:1\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Core:iterable:fromList:18:1", align 8
  %260 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterable:fromList:18:13\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Core:iterable:fromList:18:13", align 8
  %262 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterable:fromList:18:14:12\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Core:iterable:fromList:18:14:12", align 8
  %264 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterable:fromList:18:14:27\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Core:iterable:fromList:18:14:27", align 8
  %266 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterable:fromList:18:16\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Core:iterable:fromList:18:16", align 8
  %268 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterable:fromList:18:index\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Core:iterable:fromList:18:index", align 8
  %270 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterable:fromList:18:l\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Core:iterable:fromList:18:l", align 8
  %272 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterable:fromList:19\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Core:iterable:fromList:19", align 8
  %274 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterable:generateWithState:11\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Core:iterable:generateWithState:11", align 8
  %276 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterable:generateWithState:14:0:11:1\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Core:iterable:generateWithState:14:0:11:1", align 8
  %278 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterable:generateWithState:14:0:11:8\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Core:iterable:generateWithState:14:0:11:8", align 8
  %280 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:iterable:generateWithState:14:0:11:item\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Core:iterable:generateWithState:14:0:11:item", align 8
  %282 = alloca i8, i64 46, align 1
  store [46 x i8] c"Core:iterable:generateWithState:14:0:11:state\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Core:iterable:generateWithState:14:0:11:state", align 8
  %284 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:iterable:generateWithState:14:0:12\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Core:iterable:generateWithState:14:0:12", align 8
  %286 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterable:generateWithState:14:0:2\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Core:iterable:generateWithState:14:0:2", align 8
  %288 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterable:generateWithState:15\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Core:iterable:generateWithState:15", align 8
  %290 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterable:generateWithState:9\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Core:iterable:generateWithState:9", align 8
  %292 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterable:is:9\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Core:iterable:is:9", align 8
  %294 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterable:next:14\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Core:iterable:next:14", align 8
  %296 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterable:next:4\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Core:iterable:next:4", align 8
  %298 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:isEmpty:4\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"Core:list:isEmpty:4", align 8
  %300 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:isEmpty:8\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"Core:list:isEmpty:8", align 8
  %302 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:16\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"Core:list:isValidIndex:16", align 8
  %304 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:20\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"Core:list:isValidIndex:20", align 8
  %306 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:isValidIndex:22:9\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"Core:list:isValidIndex:22:9", align 8
  %308 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:23\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"Core:list:isValidIndex:23", align 8
  %310 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:isValidIndex:32:11\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"Core:list:isValidIndex:32:11", align 8
  %312 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:isValidIndex:32:20\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"Core:list:isValidIndex:32:20", align 8
  %314 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:isValidIndex:32:21\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"Core:list:isValidIndex:32:21", align 8
  %316 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:list:isValidIndex:33\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"Core:list:isValidIndex:33", align 8
  %318 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:isValidIndex:4\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"Core:list:isValidIndex:4", align 8
  %320 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:lastIndex:10:3\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"Core:list:lastIndex:10:3", align 8
  %322 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:list:lastIndex:11\00", ptr %322, align 1
  %323 = call ptr @make_candy_text(ptr %322)
  store ptr %323, ptr @"Core:list:lastIndex:11", align 8
  %324 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:lastIndex:4\00", ptr %324, align 1
  %325 = call ptr @make_candy_text(ptr %324)
  store ptr %325, ptr @"Core:list:lastIndex:4", align 8
  %326 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:list:lastIndex:8\00", ptr %326, align 1
  %327 = call ptr @make_candy_text(ptr %326)
  store ptr %327, ptr @"Core:list:lastIndex:8", align 8
  %328 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:14\00", ptr %328, align 1
  %329 = call ptr @make_candy_text(ptr %328)
  store ptr %329, ptr @"Core:result:flatMap:14", align 8
  %330 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:16\00", ptr %330, align 1
  %331 = call ptr @make_candy_text(ptr %330)
  store ptr %331, ptr @"Core:result:flatMap:16", align 8
  %332 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:flatMap:19:2\00", ptr %332, align 1
  %333 = call ptr @make_candy_text(ptr %332)
  store ptr %333, ptr @"Core:result:flatMap:19:2", align 8
  %334 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:2\00", ptr %334, align 1
  %335 = call ptr @make_candy_text(ptr %334)
  store ptr %335, ptr @"Core:result:flatMap:2", align 8
  %336 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:flatMap:21\00", ptr %336, align 1
  %337 = call ptr @make_candy_text(ptr %336)
  store ptr %337, ptr @"Core:result:flatMap:21", align 8
  %338 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:flatMap:4\00", ptr %338, align 1
  %339 = call ptr @make_candy_text(ptr %338)
  store ptr %339, ptr @"Core:result:flatMap:4", align 8
  %340 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %340, align 1
  %341 = call ptr @make_candy_text(ptr %340)
  store ptr %341, ptr @"Core:result:is:1", align 8
  %342 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:is:1:_\00", ptr %342, align 1
  %343 = call ptr @make_candy_text(ptr %342)
  store ptr %343, ptr @"Core:result:is:1:_", align 8
  %344 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:isOk:14\00", ptr %344, align 1
  %345 = call ptr @make_candy_text(ptr %344)
  store ptr %345, ptr @"Core:result:isOk:14", align 8
  %346 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:isOk:2\00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"Core:result:isOk:2", align 8
  %348 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:isOk:4\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @"Core:result:isOk:4", align 8
  %350 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:14\00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"Core:result:map:14", align 8
  %352 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:16\00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"Core:result:map:16", align 8
  %354 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:map:19:3\00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"Core:result:map:19:3", align 8
  %356 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:2\00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"Core:result:map:2", align 8
  %358 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:map:20\00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"Core:result:map:20", align 8
  %360 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:result:map:4\00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"Core:result:map:4", align 8
  %362 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:14\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"Core:result:mapOr:14", align 8
  %364 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:16\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"Core:result:mapOr:16", align 8
  %366 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:2\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"Core:result:mapOr:2", align 8
  %368 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:mapOr:21\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"Core:result:mapOr:21", align 8
  %370 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:result:mapOr:4\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"Core:result:mapOr:4", align 8
  %372 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"Core:result:mapOrElse:14", align 8
  %374 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"Core:result:mapOrElse:16", align 8
  %376 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:2\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"Core:result:mapOrElse:2", align 8
  %378 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"Core:result:mapOrElse:26", align 8
  %380 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"Core:result:mapOrElse:28", align 8
  %382 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"Core:result:mapOrElse:30", align 8
  %384 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"Core:result:mapOrElse:30:2", align 8
  %386 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"Core:result:mapOrElse:30:5", align 8
  %388 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"Core:result:mapOrElse:30:value", align 8
  %390 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %392 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %392, align 1
  %393 = call ptr @make_candy_text(ptr %392)
  store ptr %393, ptr @"Core:result:mapOrElse:4", align 8
  %394 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:unwrap:18\00", ptr %394, align 1
  %395 = call ptr @make_candy_text(ptr %394)
  store ptr %395, ptr @"Core:result:unwrap:18", align 8
  %396 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:result:unwrap:19\00", ptr %396, align 1
  %397 = call ptr @make_candy_text(ptr %396)
  store ptr %397, ptr @"Core:result:unwrap:19", align 8
  %398 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:2\00", ptr %398, align 1
  %399 = call ptr @make_candy_text(ptr %398)
  store ptr %399, ptr @"Core:result:unwrap:2", align 8
  %400 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:4\00", ptr %400, align 1
  %401 = call ptr @make_candy_text(ptr %400)
  store ptr %401, ptr @"Core:result:unwrap:4", align 8
  %402 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:7\00", ptr %402, align 1
  %403 = call ptr @make_candy_text(ptr %402)
  store ptr %403, ptr @"Core:result:unwrap:7", align 8
  %404 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:result:unwrap:9\00", ptr %404, align 1
  %405 = call ptr @make_candy_text(ptr %404)
  store ptr %405, ptr @"Core:result:unwrap:9", align 8
  %406 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:2\00", ptr %406, align 1
  %407 = call ptr @make_candy_text(ptr %406)
  store ptr %407, ptr @"Core:result:unwrapOr:2", align 8
  %408 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %408, align 1
  %409 = call ptr @make_candy_text(ptr %408)
  store ptr %409, ptr @"Core:result:unwrapOr:4", align 8
  %410 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %410, align 1
  %411 = call ptr @make_candy_text(ptr %410)
  store ptr %411, ptr @"Core:result:unwrapOr:8", align 8
  %412 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:2\00", ptr %412, align 1
  %413 = call ptr @make_candy_text(ptr %412)
  store ptr %413, ptr @"Core:result:unwrapOrElse:2", align 8
  %414 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %414, align 1
  %415 = call ptr @make_candy_text(ptr %414)
  store ptr %415, ptr @"Core:result:unwrapOrElse:4", align 8
  %416 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:result:unwrapOrElse:8:9\00", ptr %416, align 1
  %417 = call ptr @make_candy_text(ptr %416)
  store ptr %417, ptr @"Core:result:unwrapOrElse:8:9", align 8
  %418 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:9\00", ptr %418, align 1
  %419 = call ptr @make_candy_text(ptr %418)
  store ptr %419, ptr @"Core:result:unwrapOrElse:9", align 8
  %420 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:iterable:21:35\00", ptr %420, align 1
  %421 = call ptr @make_candy_text(ptr %420)
  store ptr %421, ptr @"Examples:iterable:21:35", align 8
  %422 = alloca i8, i64 29, align 1
  store [29 x i8] c"Examples:iterable:21:print:7\00", ptr %422, align 1
  %423 = call ptr @make_candy_text(ptr %422)
  store ptr %423, ptr @"Examples:iterable:21:print:7", align 8
  %424 = alloca i8, i64 29, align 1
  store [29 x i8] c"Examples:iterable:21:print:9\00", ptr %424, align 1
  %425 = call ptr @make_candy_text(ptr %424)
  store ptr %425, ptr @"Examples:iterable:21:print:9", align 8
  %426 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %426, align 1
  %427 = call ptr @make_candy_text(ptr %426)
  store ptr %427, ptr @"anonymous:$generated::needs", align 8
  %428 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %428, ptr @fun_candy_builtin_equals, align 8
  %429 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %429, ptr @fun_candy_builtin_get_argument_count, align 8
  %430 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %430, ptr @fun_candy_builtin_if_else, align 8
  %431 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %431, ptr @fun_candy_builtin_int_add, align 8
  %432 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %432, ptr @fun_candy_builtin_int_compare_to, align 8
  %433 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %433, ptr @fun_candy_builtin_int_subtract, align 8
  %434 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %434, ptr @fun_candy_builtin_list_get, align 8
  %435 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %435, ptr @fun_candy_builtin_list_length, align 8
  %436 = call ptr @make_candy_function(ptr @candy_builtin_struct_get.1, ptr null, i64 0)
  store ptr %436, ptr @fun_candy_builtin_struct_get, align 8
  %437 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %437, ptr @fun_candy_builtin_struct_has_key, align 8
  %438 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %438, ptr @fun_candy_builtin_tag_get_value, align 8
  %439 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %439, ptr @fun_candy_builtin_tag_has_value, align 8
  %440 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %440, ptr @fun_candy_builtin_tag_without_value, align 8
  %441 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %441, ptr @fun_candy_builtin_text_concatenate, align 8
  %442 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %442, ptr @fun_candy_builtin_to_debug_text, align 8
  %443 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %443, ptr @fun_candy_builtin_type_of, align 8
  %444 = alloca i8, i64 6, align 1
  store [6 x i8] c"Empty\00", ptr %444, align 1
  %445 = call ptr @make_candy_tag(ptr %444, ptr null)
  store ptr %445, ptr @tag_Empty, align 8
  %446 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %446, align 1
  %447 = call ptr @make_candy_tag(ptr %446, ptr null)
  store ptr %447, ptr @tag_Equal, align 8
  %448 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %448, align 1
  %449 = call ptr @make_candy_tag(ptr %448, ptr null)
  store ptr %449, ptr @tag_Error, align 8
  %450 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %450, align 1
  %451 = call ptr @make_candy_tag(ptr %450, ptr null)
  store ptr %451, ptr @tag_False, align 8
  %452 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %452, align 1
  %453 = call ptr @make_candy_tag(ptr %452, ptr null)
  store ptr %453, ptr @tag_Function, align 8
  %454 = alloca i8, i64 9, align 1
  store [9 x i8] c"GetValue\00", ptr %454, align 1
  %455 = call ptr @make_candy_tag(ptr %454, ptr null)
  store ptr %455, ptr @tag_GetValue, align 8
  %456 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %456, align 1
  %457 = call ptr @make_candy_tag(ptr %456, ptr null)
  store ptr %457, ptr @tag_Greater, align 8
  %458 = alloca i8, i64 6, align 1
  store [6 x i8] c"Index\00", ptr %458, align 1
  %459 = call ptr @make_candy_tag(ptr %458, ptr null)
  store ptr %459, ptr @tag_Index, align 8
  %460 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %460, align 1
  %461 = call ptr @make_candy_tag(ptr %460, ptr null)
  store ptr %461, ptr @tag_Int, align 8
  %462 = alloca i8, i64 5, align 1
  store [5 x i8] c"Item\00", ptr %462, align 1
  %463 = call ptr @make_candy_tag(ptr %462, ptr null)
  store ptr %463, ptr @tag_Item, align 8
  %464 = alloca i8, i64 2, align 1
  store [2 x i8] c"L\00", ptr %464, align 1
  %465 = call ptr @make_candy_tag(ptr %464, ptr null)
  store ptr %465, ptr @tag_L, align 8
  %466 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %466, align 1
  %467 = call ptr @make_candy_tag(ptr %466, ptr null)
  store ptr %467, ptr @tag_Less, align 8
  %468 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %468, align 1
  %469 = call ptr @make_candy_tag(ptr %468, ptr null)
  store ptr %469, ptr @tag_List, align 8
  %470 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %470, align 1
  %471 = call ptr @make_candy_tag(ptr %470, ptr null)
  store ptr %471, ptr @tag_Main, align 8
  %472 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %472, align 1
  %473 = call ptr @make_candy_tag(ptr %472, ptr null)
  store ptr %473, ptr @tag_Match, align 8
  %474 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %474, align 1
  %475 = call ptr @make_candy_tag(ptr %474, ptr null)
  store ptr %475, ptr @tag_NoMatch, align 8
  %476 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %476, align 1
  %477 = call ptr @make_candy_tag(ptr %476, ptr null)
  store ptr %477, ptr @tag_Nothing, align 8
  %478 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %478, align 1
  %479 = call ptr @make_candy_tag(ptr %478, ptr null)
  store ptr %479, ptr @tag_Ok, align 8
  %480 = alloca i8, i64 5, align 1
  store [5 x i8] c"Rest\00", ptr %480, align 1
  %481 = call ptr @make_candy_tag(ptr %480, ptr null)
  store ptr %481, ptr @tag_Rest, align 8
  %482 = alloca i8, i64 6, align 1
  store [6 x i8] c"State\00", ptr %482, align 1
  %483 = call ptr @make_candy_tag(ptr %482, ptr null)
  store ptr %483, ptr @tag_State, align 8
  %484 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %484, align 1
  %485 = call ptr @make_candy_tag(ptr %484, ptr null)
  store ptr %485, ptr @tag_Stdout, align 8
  %486 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %486, align 1
  %487 = call ptr @make_candy_tag(ptr %486, ptr null)
  store ptr %487, ptr @tag_Struct, align 8
  %488 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %488, align 1
  %489 = call ptr @make_candy_tag(ptr %488, ptr null)
  store ptr %489, ptr @tag_Tag, align 8
  %490 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %490, align 1
  %491 = call ptr @make_candy_tag(ptr %490, ptr null)
  store ptr %491, ptr @tag_Text, align 8
  %492 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %492, align 1
  %493 = call ptr @make_candy_tag(ptr %492, ptr null)
  store ptr %493, ptr @tag_True, align 8
  %494 = call ptr @make_candy_int(i64 0)
  store ptr %494, ptr @num_0, align 8
  %495 = call ptr @make_candy_int(i64 1)
  store ptr %495, ptr @num_1, align 8
  %496 = call ptr @make_candy_int(i64 2)
  store ptr %496, ptr @num_2, align 8
  %497 = alloca i8, i64 2, align 1
  store [2 x i8] c" \00", ptr %497, align 1
  %498 = call ptr @make_candy_text(ptr %497)
  store ptr %498, ptr @"text_ ", align 8
  %499 = alloca i8, i64 2, align 1
  store [2 x i8] c"!\00", ptr %499, align 1
  %500 = call ptr @make_candy_text(ptr %499)
  store ptr %500, ptr @"text_!", align 8
  %501 = alloca i8, i64 2, align 1
  store [2 x i8] c",\00", ptr %501, align 1
  %502 = call ptr @make_candy_text(ptr %501)
  store ptr %502, ptr @"text_,", align 8
  %503 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %503, align 1
  %504 = call ptr @make_candy_text(ptr %503)
  store ptr %504, ptr @text_., align 8
  %505 = alloca i8, i64 24, align 1
  store [24 x i8] c"A check didn't succeed.\00", ptr %505, align 1
  %506 = call ptr @make_candy_text(ptr %505)
  store ptr %506, ptr @"text_A check didn't succeed.", align 8
  %507 = alloca i8, i64 2, align 1
  store [2 x i8] c"B\00", ptr %507, align 1
  %508 = call ptr @make_candy_text(ptr %507)
  store ptr %508, ptr @text_B, align 8
  %509 = alloca i8, i64 43, align 1
  store [43 x i8] c"Can't get the last index of an empty list.\00", ptr %509, align 1
  %510 = call ptr @make_candy_text(ptr %509)
  store ptr %510, ptr @"text_Can't get the last index of an empty list.", align 8
  %511 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Equal, got \00", ptr %511, align 1
  %512 = call ptr @make_candy_text(ptr %511)
  store ptr %512, ptr @"text_Expected Equal, got ", align 8
  %513 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %513, align 1
  %514 = call ptr @make_candy_text(ptr %513)
  store ptr %514, ptr @"text_Expected Error, got ", align 8
  %515 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %515, align 1
  %516 = call ptr @make_candy_text(ptr %515)
  store ptr %516, ptr @"text_Expected False, got ", align 8
  %517 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Greater, got \00", ptr %517, align 1
  %518 = call ptr @make_candy_text(ptr %517)
  store ptr %518, ptr @"text_Expected Greater, got ", align 8
  %519 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected Less, got \00", ptr %519, align 1
  %520 = call ptr @make_candy_text(ptr %519)
  store ptr %520, ptr @"text_Expected Less, got ", align 8
  %521 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %521, align 1
  %522 = call ptr @make_candy_text(ptr %521)
  store ptr %522, ptr @"text_Expected Ok, got ", align 8
  %523 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %523, align 1
  %524 = call ptr @make_candy_text(ptr %523)
  store ptr %524, ptr @"text_Expected True, got ", align 8
  %525 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %525, align 1
  %526 = call ptr @make_candy_text(ptr %525)
  store ptr %526, ptr @"text_Expected a Struct, got `", align 8
  %527 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %527, align 1
  %528 = call ptr @make_candy_text(ptr %527)
  store ptr %528, ptr @"text_Expected a Tag, got `", align 8
  %529 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %529, align 1
  %530 = call ptr @make_candy_text(ptr %529)
  store ptr %530, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %531 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %531, align 1
  %532 = call ptr @make_candy_text(ptr %531)
  store ptr %532, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %533 = alloca i8, i64 2, align 1
  store [2 x i8] c"H\00", ptr %533, align 1
  %534 = call ptr @make_candy_text(ptr %533)
  store ptr %534, ptr @text_H, align 8
  %535 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %535, align 1
  %536 = call ptr @make_candy_text(ptr %535)
  store ptr %536, ptr @"text_No case matched the given expression.", align 8
  %537 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Index`: `\00", ptr %537, align 1
  %538 = call ptr @make_candy_text(ptr %537)
  store ptr %538, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %539 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Item`: `\00", ptr %539, align 1
  %540 = call ptr @make_candy_text(ptr %539)
  store ptr %540, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %541 = alloca i8, i64 34, align 1
  store [34 x i8] c"Struct doesn't contain key `L`: `\00", ptr %541, align 1
  %542 = call ptr @make_candy_text(ptr %541)
  store ptr %542, ptr @"text_Struct doesn't contain key `L`: `", align 8
  %543 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Rest`: `\00", ptr %543, align 1
  %544 = call ptr @make_candy_text(ptr %543)
  store ptr %544, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %545 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `State`: `\00", ptr %545, align 1
  %546 = call ptr @make_candy_text(ptr %545)
  store ptr %546, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %547 = alloca i8, i64 2, align 1
  store [2 x i8] c"T\00", ptr %547, align 1
  %548 = call ptr @make_candy_text(ptr %547)
  store ptr %548, ptr @text_T, align 8
  %549 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %549, align 1
  %550 = call ptr @make_candy_text(ptr %549)
  store ptr %550, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %551 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %551, align 1
  %552 = call ptr @make_candy_text(ptr %551)
  store ptr %552, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %553 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %553, align 1
  %554 = call ptr @make_candy_text(ptr %553)
  store ptr %554, ptr @"text_The `reason` must be a text.", align 8
  %555 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %555, align 1
  %556 = call ptr @make_candy_text(ptr %555)
  store ptr %556, ptr @"text_`.", align 8
  %557 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %557, align 1
  %558 = call ptr @make_candy_text(ptr %557)
  store ptr %558, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %559 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %559, align 1
  %560 = call ptr @make_candy_text(ptr %559)
  store ptr %560, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %561 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %561, align 1
  %562 = call ptr @make_candy_text(ptr %561)
  store ptr %562, ptr @"text_`b` didn't return a bool.", align 8
  %563 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %563, align 1
  %564 = call ptr @make_candy_text(ptr %563)
  store ptr %564, ptr @"text_`bool.is condition` was not satisfied", align 8
  %565 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %565, align 1
  %566 = call ptr @make_candy_text(ptr %565)
  store ptr %566, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %567 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %567, align 1
  %568 = call ptr @make_candy_text(ptr %567)
  store ptr %568, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %569 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %569, align 1
  %570 = call ptr @make_candy_text(ptr %569)
  store ptr %570, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %571 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %571, align 1
  %572 = call ptr @make_candy_text(ptr %571)
  store ptr %572, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %573 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %573, align 1
  %574 = call ptr @make_candy_text(ptr %573)
  store ptr %574, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %575 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %575, align 1
  %576 = call ptr @make_candy_text(ptr %575)
  store ptr %576, ptr @"text_`function.is0 b` was not satisfied", align 8
  %577 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 action` was not satisfied\00", ptr %577, align 1
  %578 = call ptr @make_candy_text(ptr %577)
  store ptr %578, ptr @"text_`function.is1 action` was not satisfied", align 8
  %579 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %579, align 1
  %580 = call ptr @make_candy_text(ptr %579)
  store ptr %580, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %581 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 mapper` was not satisfied\00", ptr %581, align 1
  %582 = call ptr @make_candy_text(ptr %581)
  store ptr %582, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %583 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %583, align 1
  %584 = call ptr @make_candy_text(ptr %583)
  store ptr %584, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %585 = alloca i8, i64 41, align 1
  store [41 x i8] c"`function.is2 combine` was not satisfied\00", ptr %585, align 1
  %586 = call ptr @make_candy_text(ptr %585)
  store ptr %586, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %587 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %587, align 1
  %588 = call ptr @make_candy_text(ptr %587)
  store ptr %588, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %589 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %589, align 1
  %590 = call ptr @make_candy_text(ptr %589)
  store ptr %590, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %591 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %591, align 1
  %592 = call ptr @make_candy_text(ptr %591)
  store ptr %592, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %593 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %593, align 1
  %594 = call ptr @make_candy_text(ptr %593)
  store ptr %594, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %595 = alloca i8, i64 33, align 1
  store [33 x i8] c"`int.is index` was not satisfied\00", ptr %595, align 1
  %596 = call ptr @make_candy_text(ptr %595)
  store ptr %596, ptr @"text_`int.is index` was not satisfied", align 8
  %597 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %597, align 1
  %598 = call ptr @make_candy_text(ptr %597)
  store ptr %598, ptr @"text_`is a` was not satisfied", align 8
  %599 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %599, align 1
  %600 = call ptr @make_candy_text(ptr %599)
  store ptr %600, ptr @"text_`is b` was not satisfied", align 8
  %601 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is iterable` was not satisfied\00", ptr %601, align 1
  %602 = call ptr @make_candy_text(ptr %601)
  store ptr %602, ptr @"text_`is iterable` was not satisfied", align 8
  %603 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is list` was not satisfied\00", ptr %603, align 1
  %604 = call ptr @make_candy_text(ptr %603)
  store ptr %604, ptr @"text_`is list` was not satisfied", align 8
  %605 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %605, align 1
  %606 = call ptr @make_candy_text(ptr %605)
  store ptr %606, ptr @"text_`is result` was not satisfied", align 8
  %607 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %607, align 1
  %608 = call ptr @make_candy_text(ptr %607)
  store ptr %608, ptr @"text_`is valueA` was not satisfied", align 8
  %609 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %609, align 1
  %610 = call ptr @make_candy_text(ptr %609)
  store ptr %610, ptr @"text_`is valueB` was not satisfied", align 8
  %611 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %611, align 1
  %612 = call ptr @make_candy_text(ptr %611)
  store ptr %612, ptr @"text_`is value` was not satisfied", align 8
  %613 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %613, align 1
  %614 = call ptr @make_candy_text(ptr %613)
  store ptr %614, ptr @"text_`is0 body` was not satisfied", align 8
  %615 = alloca i8, i64 32, align 1
  store [32 x i8] c"`isOk result` was not satisfied\00", ptr %615, align 1
  %616 = call ptr @make_candy_text(ptr %615)
  store ptr %616, ptr @"text_`isOk result` was not satisfied", align 8
  %617 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %617, align 1
  %618 = call ptr @make_candy_text(ptr %617)
  store ptr %618, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %619 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %619, align 1
  %620 = call ptr @make_candy_text(ptr %619)
  store ptr %620, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %621 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %621, align 1
  %622 = call ptr @make_candy_text(ptr %621)
  store ptr %622, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %623 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %623, align 1
  %624 = call ptr @make_candy_text(ptr %623)
  store ptr %624, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %625 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %625, align 1
  %626 = call ptr @make_candy_text(ptr %625)
  store ptr %626, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %627 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %627, align 1
  %628 = call ptr @make_candy_text(ptr %627)
  store ptr %628, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %629 = alloca i8, i64 2, align 1
  store [2 x i8] c"a\00", ptr %629, align 1
  %630 = call ptr @make_candy_text(ptr %629)
  store ptr %630, ptr @text_a, align 8
  %631 = alloca i8, i64 2, align 1
  store [2 x i8] c"b\00", ptr %631, align 1
  %632 = call ptr @make_candy_text(ptr %631)
  store ptr %632, ptr @text_b, align 8
  %633 = alloca i8, i64 2, align 1
  store [2 x i8] c"d\00", ptr %633, align 1
  %634 = call ptr @make_candy_text(ptr %633)
  store ptr %634, ptr @text_d, align 8
  %635 = alloca i8, i64 2, align 1
  store [2 x i8] c"e\00", ptr %635, align 1
  %636 = call ptr @make_candy_text(ptr %635)
  store ptr %636, ptr @text_e, align 8
  %637 = alloca i8, i64 2, align 1
  store [2 x i8] c"g\00", ptr %637, align 1
  %638 = call ptr @make_candy_text(ptr %637)
  store ptr %638, ptr @text_g, align 8
  %639 = alloca i8, i64 2, align 1
  store [2 x i8] c"h\00", ptr %639, align 1
  %640 = call ptr @make_candy_text(ptr %639)
  store ptr %640, ptr @text_h, align 8
  %641 = alloca i8, i64 2, align 1
  store [2 x i8] c"i\00", ptr %641, align 1
  %642 = call ptr @make_candy_text(ptr %641)
  store ptr %642, ptr @text_i, align 8
  %643 = alloca i8, i64 2, align 1
  store [2 x i8] c"l\00", ptr %643, align 1
  %644 = call ptr @make_candy_text(ptr %643)
  store ptr %644, ptr @text_l, align 8
  %645 = alloca i8, i64 2, align 1
  store [2 x i8] c"m\00", ptr %645, align 1
  %646 = call ptr @make_candy_text(ptr %645)
  store ptr %646, ptr @text_m, align 8
  %647 = alloca i8, i64 2, align 1
  store [2 x i8] c"n\00", ptr %647, align 1
  %648 = call ptr @make_candy_text(ptr %647)
  store ptr %648, ptr @text_n, align 8
  %649 = alloca i8, i64 2, align 1
  store [2 x i8] c"o\00", ptr %649, align 1
  %650 = call ptr @make_candy_text(ptr %649)
  store ptr %650, ptr @text_o, align 8
  %651 = alloca i8, i64 2, align 1
  store [2 x i8] c"r\00", ptr %651, align 1
  %652 = call ptr @make_candy_text(ptr %651)
  store ptr %652, ptr @text_r, align 8
  %653 = alloca i8, i64 2, align 1
  store [2 x i8] c"s\00", ptr %653, align 1
  %654 = call ptr @make_candy_text(ptr %653)
  store ptr %654, ptr @text_s, align 8
  %655 = alloca i8, i64 2, align 1
  store [2 x i8] c"t\00", ptr %655, align 1
  %656 = call ptr @make_candy_text(ptr %655)
  store ptr %656, ptr @text_t, align 8
  %657 = alloca i8, i64 2, align 1
  store [2 x i8] c"u\00", ptr %657, align 1
  %658 = call ptr @make_candy_text(ptr %657)
  store ptr %658, ptr @text_u, align 8
  %659 = alloca i8, i64 2, align 1
  store [2 x i8] c"w\00", ptr %659, align 1
  %660 = call ptr @make_candy_text(ptr %659)
  store ptr %660, ptr @text_w, align 8
  %661 = alloca i8, i64 2, align 1
  store [2 x i8] c"x\00", ptr %661, align 1
  %662 = call ptr @make_candy_text(ptr %661)
  store ptr %662, ptr @text_x, align 8
  %663 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %664 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %663, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %664, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %665 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %666 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %665, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %666, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %667 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %668 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %667, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %668, ptr @"fun_anonymous_$generated__needs", align 8
  %669 = alloca ptr, i64 2, align 8
  %670 = load ptr, ptr @tag_Match, align 8
  %671 = getelementptr ptr, ptr %669, i64 0
  store ptr %670, ptr %671, align 8
  %672 = getelementptr ptr, ptr %669, i64 1
  store ptr null, ptr %672, align 8
  %673 = call ptr @make_candy_list(ptr %669)
  store ptr %673, ptr @0, align 8
  %674 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %675 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", ptr %674, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %675, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %676 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %677 = call ptr @make_candy_function(ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", ptr %676, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %677, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %678 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %679 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %678, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %679, ptr @fun_Builtins__isNonNegative, align 8
  %680 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %681 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %680, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %681, ptr @fun_Builtins__ifElse, align 8
  %682 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %683 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %682, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %683, ptr @fun_Builtins__listGet, align 8
  %684 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %685 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %684, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %685, ptr @fun_Core_function_is0, align 8
  %686 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %687 = call ptr @make_candy_function(ptr @Core_function_run, ptr %686, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %687, ptr @fun_Core_function_run, align 8
  %688 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %689 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %688, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %689, ptr @fun_Core_bool_is, align 8
  %690 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %691 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %690, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %691, ptr @fun_Core_bool_not, align 8
  %692 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %693 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %692, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %693, ptr @fun_Core_bool_lazyAnd, align 8
  %694 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %695 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %694, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %695, ptr @fun_Core_bool_lazyOr, align 8
  %696 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %697 = call ptr @make_candy_function(ptr @Core_bool_implies, ptr %696, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %697, ptr @fun_Core_bool_implies, align 8
  %698 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %699 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else.102", ptr %698, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %699, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.103", align 8
  %700 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %701 = call ptr @make_candy_function(ptr @Core_check_check, ptr %700, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %701, ptr @fun_Core_check_check, align 8
  %702 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %703 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %702, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %703, ptr @fun_Core_function_is2, align 8
  %704 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %705 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %704, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %705, ptr @fun_Core_int_compareTo, align 8
  %706 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %707 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %706, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %707, ptr @fun_Core_int_isLessThan, align 8
  %708 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %709 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %708, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %709, ptr @fun_Core_int_isGreaterThan, align 8
  %710 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %711 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %710, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %711, ptr @fun_Core_int_isNonNegative, align 8
  %712 = alloca ptr, i64 3, align 8
  %713 = load ptr, ptr @tag_NoMatch, align 8
  %714 = getelementptr ptr, ptr %712, i64 0
  store ptr %713, ptr %714, align 8
  %715 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %716 = getelementptr ptr, ptr %712, i64 1
  store ptr %715, ptr %716, align 8
  %717 = getelementptr ptr, ptr %712, i64 2
  store ptr null, ptr %717, align 8
  %718 = call ptr @make_candy_list(ptr %712)
  store ptr %718, ptr @37, align 8
  %719 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %720 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %719, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %720, ptr @fun_Core_function_is1, align 8
  %721 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %722 = call ptr @make_candy_function(ptr @Core_int_isLessThanOrEqualTo, ptr %721, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %722, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  %723 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %724 = call ptr @make_candy_function(ptr @Core_result_is, ptr %723, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %724, ptr @fun_Core_result_is, align 8
  %725 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %726 = call ptr @make_candy_function(ptr @Core_result_unwrap, ptr %725, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %726, ptr @fun_Core_result_unwrap, align 8
  %727 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %728 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %727, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %728, ptr @fun_Core_result_mapOrElse, align 8
  %729 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %730 = call ptr @make_candy_function(ptr @Core_result_flatMap, ptr %729, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %730, ptr @fun_Core_result_flatMap, align 8
  %731 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %732 = call ptr @make_candy_function(ptr @Core_result_map, ptr %731, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %732, ptr @fun_Core_result_map, align 8
  %733 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %734 = call ptr @make_candy_function(ptr @"Core_iterable_range_38, Core_result_unwrapOrElse_7", ptr %733, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %734, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_7", align 8
  %735 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %736 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %735, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %736, ptr @fun_Core_result_unwrapOr, align 8
  %737 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %738 = call ptr @make_candy_function(ptr @Core_list_isEmpty, ptr %737, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %738, ptr @fun_Core_list_isEmpty, align 8
  %739 = load ptr, ptr @"text_Can't get the last index of an empty list.", align 8
  %740 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %740, align 1
  %741 = call ptr @make_candy_tag(ptr %740, ptr %739)
  store ptr %741, ptr @tag_Error.149, align 8
  %742 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %743 = call ptr @make_candy_function(ptr @Core_list_lastIndex_9, ptr %742, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %743, ptr @fun_Core_list_lastIndex_9, align 8
  %744 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %745 = call ptr @make_candy_function(ptr @Core_list_lastIndex, ptr %744, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %745, ptr @fun_Core_list_lastIndex, align 8
  %746 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %747 = call ptr @make_candy_function(ptr @Core_list_isValidIndex, ptr %746, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %747, ptr @fun_Core_list_isValidIndex, align 8
  %748 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %749 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState, ptr %748, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %749, ptr @fun_Core_iterable_generateWithState, align 8
  %750 = load ptr, ptr @tag_Empty, align 8
  %751 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %751, align 1
  %752 = call ptr @make_candy_tag(ptr %751, ptr %750)
  store ptr %752, ptr @tag_Error.161, align 8
  %753 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %754 = call ptr @make_candy_function(ptr @"Core_iterable_fromList_18_15, Core_iterable_generate_50_5, Core_iterable_takeWhile_2_11_8, Core_iterable_windowed_67_27", ptr %753, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %754, ptr @"fun_Core_iterable_fromList_18_15, Core_iterable_generate_50_5, Core_iterable_takeWhile_2_11_8, Core_iterable_windowed_67_27", align 8
  %755 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %756 = call ptr @make_candy_function(ptr @Core_iterable_82, ptr %755, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %756, ptr @fun_Core_iterable_82, align 8
  %757 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %758 = call ptr @make_candy_function(ptr @Core_iterable_forEach, ptr %757, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %758, ptr @fun_Core_iterable_forEach, align 8
  %759 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %760 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18, ptr %759, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %760, ptr @fun_Core_iterable_fromList_18, align 8
  %761 = alloca ptr, i64 52, align 8
  %762 = load ptr, ptr @text_H, align 8
  %763 = getelementptr ptr, ptr %761, i64 0
  store ptr %762, ptr %763, align 8
  %764 = load ptr, ptr @text_e, align 8
  %765 = getelementptr ptr, ptr %761, i64 1
  store ptr %764, ptr %765, align 8
  %766 = load ptr, ptr @text_l, align 8
  %767 = getelementptr ptr, ptr %761, i64 2
  store ptr %766, ptr %767, align 8
  %768 = load ptr, ptr @text_l, align 8
  %769 = getelementptr ptr, ptr %761, i64 3
  store ptr %768, ptr %769, align 8
  %770 = load ptr, ptr @text_o, align 8
  %771 = getelementptr ptr, ptr %761, i64 4
  store ptr %770, ptr %771, align 8
  %772 = load ptr, ptr @"text_,", align 8
  %773 = getelementptr ptr, ptr %761, i64 5
  store ptr %772, ptr %773, align 8
  %774 = load ptr, ptr @"text_ ", align 8
  %775 = getelementptr ptr, ptr %761, i64 6
  store ptr %774, ptr %775, align 8
  %776 = load ptr, ptr @text_w, align 8
  %777 = getelementptr ptr, ptr %761, i64 7
  store ptr %776, ptr %777, align 8
  %778 = load ptr, ptr @text_o, align 8
  %779 = getelementptr ptr, ptr %761, i64 8
  store ptr %778, ptr %779, align 8
  %780 = load ptr, ptr @text_r, align 8
  %781 = getelementptr ptr, ptr %761, i64 9
  store ptr %780, ptr %781, align 8
  %782 = load ptr, ptr @text_l, align 8
  %783 = getelementptr ptr, ptr %761, i64 10
  store ptr %782, ptr %783, align 8
  %784 = load ptr, ptr @text_d, align 8
  %785 = getelementptr ptr, ptr %761, i64 11
  store ptr %784, ptr %785, align 8
  %786 = load ptr, ptr @"text_!", align 8
  %787 = getelementptr ptr, ptr %761, i64 12
  store ptr %786, ptr %787, align 8
  %788 = load ptr, ptr @"text_ ", align 8
  %789 = getelementptr ptr, ptr %761, i64 13
  store ptr %788, ptr %789, align 8
  %790 = load ptr, ptr @text_T, align 8
  %791 = getelementptr ptr, ptr %761, i64 14
  store ptr %790, ptr %791, align 8
  %792 = load ptr, ptr @text_h, align 8
  %793 = getelementptr ptr, ptr %761, i64 15
  store ptr %792, ptr %793, align 8
  %794 = load ptr, ptr @text_i, align 8
  %795 = getelementptr ptr, ptr %761, i64 16
  store ptr %794, ptr %795, align 8
  %796 = load ptr, ptr @text_s, align 8
  %797 = getelementptr ptr, ptr %761, i64 17
  store ptr %796, ptr %797, align 8
  %798 = load ptr, ptr @"text_ ", align 8
  %799 = getelementptr ptr, ptr %761, i64 18
  store ptr %798, ptr %799, align 8
  %800 = load ptr, ptr @text_i, align 8
  %801 = getelementptr ptr, ptr %761, i64 19
  store ptr %800, ptr %801, align 8
  %802 = load ptr, ptr @text_s, align 8
  %803 = getelementptr ptr, ptr %761, i64 20
  store ptr %802, ptr %803, align 8
  %804 = load ptr, ptr @"text_ ", align 8
  %805 = getelementptr ptr, ptr %761, i64 21
  store ptr %804, ptr %805, align 8
  %806 = load ptr, ptr @text_s, align 8
  %807 = getelementptr ptr, ptr %761, i64 22
  store ptr %806, ptr %807, align 8
  %808 = load ptr, ptr @text_o, align 8
  %809 = getelementptr ptr, ptr %761, i64 23
  store ptr %808, ptr %809, align 8
  %810 = load ptr, ptr @text_m, align 8
  %811 = getelementptr ptr, ptr %761, i64 24
  store ptr %810, ptr %811, align 8
  %812 = load ptr, ptr @text_e, align 8
  %813 = getelementptr ptr, ptr %761, i64 25
  store ptr %812, ptr %813, align 8
  %814 = load ptr, ptr @"text_ ", align 8
  %815 = getelementptr ptr, ptr %761, i64 26
  store ptr %814, ptr %815, align 8
  %816 = load ptr, ptr @text_l, align 8
  %817 = getelementptr ptr, ptr %761, i64 27
  store ptr %816, ptr %817, align 8
  %818 = load ptr, ptr @text_o, align 8
  %819 = getelementptr ptr, ptr %761, i64 28
  store ptr %818, ptr %819, align 8
  %820 = load ptr, ptr @text_n, align 8
  %821 = getelementptr ptr, ptr %761, i64 29
  store ptr %820, ptr %821, align 8
  %822 = load ptr, ptr @text_g, align 8
  %823 = getelementptr ptr, ptr %761, i64 30
  store ptr %822, ptr %823, align 8
  %824 = load ptr, ptr @"text_ ", align 8
  %825 = getelementptr ptr, ptr %761, i64 31
  store ptr %824, ptr %825, align 8
  %826 = load ptr, ptr @text_t, align 8
  %827 = getelementptr ptr, ptr %761, i64 32
  store ptr %826, ptr %827, align 8
  %828 = load ptr, ptr @text_e, align 8
  %829 = getelementptr ptr, ptr %761, i64 33
  store ptr %828, ptr %829, align 8
  %830 = load ptr, ptr @text_x, align 8
  %831 = getelementptr ptr, ptr %761, i64 34
  store ptr %830, ptr %831, align 8
  %832 = load ptr, ptr @text_t, align 8
  %833 = getelementptr ptr, ptr %761, i64 35
  store ptr %832, ptr %833, align 8
  %834 = load ptr, ptr @text_., align 8
  %835 = getelementptr ptr, ptr %761, i64 36
  store ptr %834, ptr %835, align 8
  %836 = load ptr, ptr @"text_ ", align 8
  %837 = getelementptr ptr, ptr %761, i64 37
  store ptr %836, ptr %837, align 8
  %838 = load ptr, ptr @text_B, align 8
  %839 = getelementptr ptr, ptr %761, i64 38
  store ptr %838, ptr %839, align 8
  %840 = load ptr, ptr @text_l, align 8
  %841 = getelementptr ptr, ptr %761, i64 39
  store ptr %840, ptr %841, align 8
  %842 = load ptr, ptr @text_a, align 8
  %843 = getelementptr ptr, ptr %761, i64 40
  store ptr %842, ptr %843, align 8
  %844 = load ptr, ptr @"text_ ", align 8
  %845 = getelementptr ptr, ptr %761, i64 41
  store ptr %844, ptr %845, align 8
  %846 = load ptr, ptr @text_b, align 8
  %847 = getelementptr ptr, ptr %761, i64 42
  store ptr %846, ptr %847, align 8
  %848 = load ptr, ptr @text_l, align 8
  %849 = getelementptr ptr, ptr %761, i64 43
  store ptr %848, ptr %849, align 8
  %850 = load ptr, ptr @text_a, align 8
  %851 = getelementptr ptr, ptr %761, i64 44
  store ptr %850, ptr %851, align 8
  %852 = load ptr, ptr @"text_ ", align 8
  %853 = getelementptr ptr, ptr %761, i64 45
  store ptr %852, ptr %853, align 8
  %854 = load ptr, ptr @text_b, align 8
  %855 = getelementptr ptr, ptr %761, i64 46
  store ptr %854, ptr %855, align 8
  %856 = load ptr, ptr @text_l, align 8
  %857 = getelementptr ptr, ptr %761, i64 47
  store ptr %856, ptr %857, align 8
  %858 = load ptr, ptr @text_u, align 8
  %859 = getelementptr ptr, ptr %761, i64 48
  store ptr %858, ptr %859, align 8
  %860 = load ptr, ptr @text_b, align 8
  %861 = getelementptr ptr, ptr %761, i64 49
  store ptr %860, ptr %861, align 8
  %862 = load ptr, ptr @text_., align 8
  %863 = getelementptr ptr, ptr %761, i64 50
  store ptr %862, ptr %863, align 8
  %864 = getelementptr ptr, ptr %761, i64 51
  store ptr null, ptr %864, align 8
  %865 = call ptr @make_candy_list(ptr %761)
  store ptr %865, ptr @68, align 8
  %866 = alloca ptr, i64 3, align 8
  %867 = alloca ptr, i64 3, align 8
  %868 = load ptr, ptr @tag_Index, align 8
  %869 = load ptr, ptr @num_0, align 8
  %870 = getelementptr ptr, ptr %866, i64 0
  store ptr %868, ptr %870, align 8
  %871 = getelementptr ptr, ptr %867, i64 0
  store ptr %869, ptr %871, align 8
  %872 = load ptr, ptr @tag_L, align 8
  %873 = load ptr, ptr @68, align 8
  %874 = getelementptr ptr, ptr %866, i64 1
  store ptr %872, ptr %874, align 8
  %875 = getelementptr ptr, ptr %867, i64 1
  store ptr %873, ptr %875, align 8
  %876 = getelementptr ptr, ptr %866, i64 2
  store ptr null, ptr %876, align 8
  %877 = getelementptr ptr, ptr %867, i64 2
  store ptr null, ptr %877, align 8
  %878 = call ptr @make_candy_struct(ptr %866, ptr %867)
  %879 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %880 = getelementptr inbounds { ptr }, ptr %879, i32 0, i32 0
  store ptr %878, ptr %880, align 8
  %881 = call ptr @make_candy_function(ptr @Examples_iterable_21, ptr %879, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %881, ptr @fun_Examples_iterable_21, align 8
  %882 = alloca ptr, i64 2, align 8
  %883 = alloca ptr, i64 2, align 8
  %884 = load ptr, ptr @tag_Main, align 8
  %885 = load ptr, ptr @fun_Examples_iterable_21, align 8
  %886 = getelementptr ptr, ptr %882, i64 0
  store ptr %884, ptr %886, align 8
  %887 = getelementptr ptr, ptr %883, i64 0
  store ptr %885, ptr %887, align 8
  %888 = getelementptr ptr, ptr %882, i64 1
  store ptr null, ptr %888, align 8
  %889 = getelementptr ptr, ptr %883, i64 1
  store ptr null, ptr %889, align 8
  %890 = call ptr @make_candy_struct(ptr %882, ptr %883)
  %891 = alloca i8, i64 5, align 1
  store [5 x i8] c"Main\00", ptr %891, align 1
  %892 = call ptr @make_candy_tag(ptr %891, ptr null)
  %893 = call ptr @candy_builtin_struct_get(ptr %890, ptr %892)
  %894 = call ptr @run_candy_main(ptr %893, ptr @candy_environment)
  call void @print_candy_value(ptr %894)
  %895 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %895)
  %896 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %896)
  %897 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %897)
  %898 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %898)
  %899 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %899)
  %900 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %900)
  %901 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %901)
  %902 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %902)
  %903 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %903)
  %904 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %904)
  %905 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %905)
  %906 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %906)
  %907 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %907)
  %908 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %908)
  %909 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %909)
  %910 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %910)
  %911 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %911)
  %912 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %912)
  %913 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %913)
  %914 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %914)
  %915 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %915)
  %916 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %916)
  %917 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %917)
  %918 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %918)
  %919 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %919)
  %920 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %920)
  %921 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %921)
  %922 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %922)
  %923 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %923)
  %924 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %924)
  %925 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %925)
  %926 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %926)
  %927 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %927)
  %928 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %928)
  %929 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %929)
  %930 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %930)
  %931 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %931)
  %932 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %932)
  %933 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %933)
  %934 = load ptr, ptr @"Builtins::tagWithoutValue:11", align 8
  call void @free_candy_value(ptr %934)
  %935 = load ptr, ptr @"Builtins::tagWithoutValue:5", align 8
  call void @free_candy_value(ptr %935)
  %936 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %936)
  %937 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %937)
  %938 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %938)
  %939 = load ptr, ptr @"Core:bool:implies:12", align 8
  call void @free_candy_value(ptr %939)
  %940 = load ptr, ptr @"Core:bool:implies:15", align 8
  call void @free_candy_value(ptr %940)
  %941 = load ptr, ptr @"Core:bool:implies:2", align 8
  call void @free_candy_value(ptr %941)
  %942 = load ptr, ptr @"Core:bool:implies:4", align 8
  call void @free_candy_value(ptr %942)
  %943 = load ptr, ptr @"Core:bool:implies:7", align 8
  call void @free_candy_value(ptr %943)
  %944 = load ptr, ptr @"Core:bool:implies:9", align 8
  call void @free_candy_value(ptr %944)
  %945 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %945)
  %946 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %946)
  %947 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %947)
  %948 = load ptr, ptr @"Core:bool:lazyAnd:18", align 8
  call void @free_candy_value(ptr %948)
  %949 = load ptr, ptr @"Core:bool:lazyAnd:18:13", align 8
  call void @free_candy_value(ptr %949)
  %950 = load ptr, ptr @"Core:bool:lazyAnd:18:21", align 8
  call void @free_candy_value(ptr %950)
  %951 = load ptr, ptr @"Core:bool:lazyAnd:18:9", align 8
  call void @free_candy_value(ptr %951)
  %952 = load ptr, ptr @"Core:bool:lazyAnd:2", align 8
  call void @free_candy_value(ptr %952)
  %953 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %953)
  %954 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %954)
  %955 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %955)
  %956 = load ptr, ptr @"Core:bool:lazyOr:18", align 8
  call void @free_candy_value(ptr %956)
  %957 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  call void @free_candy_value(ptr %957)
  %958 = load ptr, ptr @"Core:bool:lazyOr:18:14", align 8
  call void @free_candy_value(ptr %958)
  %959 = load ptr, ptr @"Core:bool:lazyOr:18:22", align 8
  call void @free_candy_value(ptr %959)
  %960 = load ptr, ptr @"Core:bool:lazyOr:2", align 8
  call void @free_candy_value(ptr %960)
  %961 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %961)
  %962 = load ptr, ptr @"Core:bool:not:2", align 8
  call void @free_candy_value(ptr %962)
  %963 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %963)
  %964 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %964)
  %965 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %965)
  %966 = load ptr, ptr @"Core:bool:or:2", align 8
  call void @free_candy_value(ptr %966)
  %967 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %967)
  %968 = load ptr, ptr @"Core:bool:or:7", align 8
  call void @free_candy_value(ptr %968)
  %969 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %969)
  %970 = load ptr, ptr @"Core:check:check:11", align 8
  call void @free_candy_value(ptr %970)
  %971 = load ptr, ptr @"Core:check:check:20", align 8
  call void @free_candy_value(ptr %971)
  %972 = load ptr, ptr @"Core:check:check:9", align 8
  call void @free_candy_value(ptr %972)
  %973 = load ptr, ptr @"Core:controlFlow:recursive:17", align 8
  call void @free_candy_value(ptr %973)
  %974 = load ptr, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  call void @free_candy_value(ptr %974)
  %975 = load ptr, ptr @"Core:controlFlow:recursive:18:5", align 8
  call void @free_candy_value(ptr %975)
  %976 = load ptr, ptr @"Core:controlFlow:recursive:23", align 8
  call void @free_candy_value(ptr %976)
  %977 = load ptr, ptr @"Core:controlFlow:recursive:9", align 8
  call void @free_candy_value(ptr %977)
  %978 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %978)
  %979 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %979)
  %980 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %980)
  %981 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %981)
  %982 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %982)
  %983 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %983)
  %984 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %984)
  %985 = load ptr, ptr @"Core:function:run:2", align 8
  call void @free_candy_value(ptr %985)
  %986 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %986)
  %987 = load ptr, ptr @"Core:int:compareTo:20", align 8
  call void @free_candy_value(ptr %987)
  %988 = load ptr, ptr @"Core:int:compareTo:39", align 8
  call void @free_candy_value(ptr %988)
  %989 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %989)
  %990 = load ptr, ptr @"Core:int:compareTo:40", align 8
  call void @free_candy_value(ptr %990)
  %991 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %991)
  %992 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %992)
  %993 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %993)
  %994 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %994)
  %995 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %995)
  %996 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %996)
  %997 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %997)
  %998 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %998)
  %999 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %999)
  %1000 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %1000)
  %1001 = load ptr, ptr @"Core:int:isLessThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %1001)
  %1002 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %1002)
  %1003 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %1003)
  %1004 = load ptr, ptr @"Core:int:isNonNegative:16", align 8
  call void @free_candy_value(ptr %1004)
  %1005 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %1005)
  %1006 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %1006)
  %1007 = load ptr, ptr @"Core:iterable:82:11:1", align 8
  call void @free_candy_value(ptr %1007)
  %1008 = load ptr, ptr @"Core:iterable:82:11:13", align 8
  call void @free_candy_value(ptr %1008)
  %1009 = load ptr, ptr @"Core:iterable:82:11:6", align 8
  call void @free_candy_value(ptr %1009)
  %1010 = load ptr, ptr @"Core:iterable:82:11:item", align 8
  call void @free_candy_value(ptr %1010)
  %1011 = load ptr, ptr @"Core:iterable:82:11:rest", align 8
  call void @free_candy_value(ptr %1011)
  %1012 = load ptr, ptr @"Core:iterable:82:12", align 8
  call void @free_candy_value(ptr %1012)
  %1013 = load ptr, ptr @"Core:iterable:82:2", align 8
  call void @free_candy_value(ptr %1013)
  %1014 = load ptr, ptr @"Core:iterable:82:22", align 8
  call void @free_candy_value(ptr %1014)
  %1015 = load ptr, ptr @"Core:iterable:foldLeft:14", align 8
  call void @free_candy_value(ptr %1015)
  %1016 = load ptr, ptr @"Core:iterable:foldLeft:16", align 8
  call void @free_candy_value(ptr %1016)
  %1017 = load ptr, ptr @"Core:iterable:foldLeft:22", align 8
  call void @free_candy_value(ptr %1017)
  %1018 = load ptr, ptr @"Core:iterable:foldLeft:4", align 8
  call void @free_candy_value(ptr %1018)
  %1019 = load ptr, ptr @"Core:iterable:forEach:14", align 8
  call void @free_candy_value(ptr %1019)
  %1020 = load ptr, ptr @"Core:iterable:forEach:16", align 8
  call void @free_candy_value(ptr %1020)
  %1021 = load ptr, ptr @"Core:iterable:forEach:20:2", align 8
  call void @free_candy_value(ptr %1021)
  %1022 = load ptr, ptr @"Core:iterable:forEach:21", align 8
  call void @free_candy_value(ptr %1022)
  %1023 = load ptr, ptr @"Core:iterable:forEach:4", align 8
  call void @free_candy_value(ptr %1023)
  %1024 = load ptr, ptr @"Core:iterable:fromList:18:1", align 8
  call void @free_candy_value(ptr %1024)
  %1025 = load ptr, ptr @"Core:iterable:fromList:18:13", align 8
  call void @free_candy_value(ptr %1025)
  %1026 = load ptr, ptr @"Core:iterable:fromList:18:14:12", align 8
  call void @free_candy_value(ptr %1026)
  %1027 = load ptr, ptr @"Core:iterable:fromList:18:14:27", align 8
  call void @free_candy_value(ptr %1027)
  %1028 = load ptr, ptr @"Core:iterable:fromList:18:16", align 8
  call void @free_candy_value(ptr %1028)
  %1029 = load ptr, ptr @"Core:iterable:fromList:18:index", align 8
  call void @free_candy_value(ptr %1029)
  %1030 = load ptr, ptr @"Core:iterable:fromList:18:l", align 8
  call void @free_candy_value(ptr %1030)
  %1031 = load ptr, ptr @"Core:iterable:fromList:19", align 8
  call void @free_candy_value(ptr %1031)
  %1032 = load ptr, ptr @"Core:iterable:generateWithState:11", align 8
  call void @free_candy_value(ptr %1032)
  %1033 = load ptr, ptr @"Core:iterable:generateWithState:14:0:11:1", align 8
  call void @free_candy_value(ptr %1033)
  %1034 = load ptr, ptr @"Core:iterable:generateWithState:14:0:11:8", align 8
  call void @free_candy_value(ptr %1034)
  %1035 = load ptr, ptr @"Core:iterable:generateWithState:14:0:11:item", align 8
  call void @free_candy_value(ptr %1035)
  %1036 = load ptr, ptr @"Core:iterable:generateWithState:14:0:11:state", align 8
  call void @free_candy_value(ptr %1036)
  %1037 = load ptr, ptr @"Core:iterable:generateWithState:14:0:12", align 8
  call void @free_candy_value(ptr %1037)
  %1038 = load ptr, ptr @"Core:iterable:generateWithState:14:0:2", align 8
  call void @free_candy_value(ptr %1038)
  %1039 = load ptr, ptr @"Core:iterable:generateWithState:15", align 8
  call void @free_candy_value(ptr %1039)
  %1040 = load ptr, ptr @"Core:iterable:generateWithState:9", align 8
  call void @free_candy_value(ptr %1040)
  %1041 = load ptr, ptr @"Core:iterable:is:9", align 8
  call void @free_candy_value(ptr %1041)
  %1042 = load ptr, ptr @"Core:iterable:next:14", align 8
  call void @free_candy_value(ptr %1042)
  %1043 = load ptr, ptr @"Core:iterable:next:4", align 8
  call void @free_candy_value(ptr %1043)
  %1044 = load ptr, ptr @"Core:list:isEmpty:4", align 8
  call void @free_candy_value(ptr %1044)
  %1045 = load ptr, ptr @"Core:list:isEmpty:8", align 8
  call void @free_candy_value(ptr %1045)
  %1046 = load ptr, ptr @"Core:list:isValidIndex:16", align 8
  call void @free_candy_value(ptr %1046)
  %1047 = load ptr, ptr @"Core:list:isValidIndex:20", align 8
  call void @free_candy_value(ptr %1047)
  %1048 = load ptr, ptr @"Core:list:isValidIndex:22:9", align 8
  call void @free_candy_value(ptr %1048)
  %1049 = load ptr, ptr @"Core:list:isValidIndex:23", align 8
  call void @free_candy_value(ptr %1049)
  %1050 = load ptr, ptr @"Core:list:isValidIndex:32:11", align 8
  call void @free_candy_value(ptr %1050)
  %1051 = load ptr, ptr @"Core:list:isValidIndex:32:20", align 8
  call void @free_candy_value(ptr %1051)
  %1052 = load ptr, ptr @"Core:list:isValidIndex:32:21", align 8
  call void @free_candy_value(ptr %1052)
  %1053 = load ptr, ptr @"Core:list:isValidIndex:33", align 8
  call void @free_candy_value(ptr %1053)
  %1054 = load ptr, ptr @"Core:list:isValidIndex:4", align 8
  call void @free_candy_value(ptr %1054)
  %1055 = load ptr, ptr @"Core:list:lastIndex:10:3", align 8
  call void @free_candy_value(ptr %1055)
  %1056 = load ptr, ptr @"Core:list:lastIndex:11", align 8
  call void @free_candy_value(ptr %1056)
  %1057 = load ptr, ptr @"Core:list:lastIndex:4", align 8
  call void @free_candy_value(ptr %1057)
  %1058 = load ptr, ptr @"Core:list:lastIndex:8", align 8
  call void @free_candy_value(ptr %1058)
  %1059 = load ptr, ptr @"Core:result:flatMap:14", align 8
  call void @free_candy_value(ptr %1059)
  %1060 = load ptr, ptr @"Core:result:flatMap:16", align 8
  call void @free_candy_value(ptr %1060)
  %1061 = load ptr, ptr @"Core:result:flatMap:19:2", align 8
  call void @free_candy_value(ptr %1061)
  %1062 = load ptr, ptr @"Core:result:flatMap:2", align 8
  call void @free_candy_value(ptr %1062)
  %1063 = load ptr, ptr @"Core:result:flatMap:21", align 8
  call void @free_candy_value(ptr %1063)
  %1064 = load ptr, ptr @"Core:result:flatMap:4", align 8
  call void @free_candy_value(ptr %1064)
  %1065 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %1065)
  %1066 = load ptr, ptr @"Core:result:is:1:_", align 8
  call void @free_candy_value(ptr %1066)
  %1067 = load ptr, ptr @"Core:result:isOk:14", align 8
  call void @free_candy_value(ptr %1067)
  %1068 = load ptr, ptr @"Core:result:isOk:2", align 8
  call void @free_candy_value(ptr %1068)
  %1069 = load ptr, ptr @"Core:result:isOk:4", align 8
  call void @free_candy_value(ptr %1069)
  %1070 = load ptr, ptr @"Core:result:map:14", align 8
  call void @free_candy_value(ptr %1070)
  %1071 = load ptr, ptr @"Core:result:map:16", align 8
  call void @free_candy_value(ptr %1071)
  %1072 = load ptr, ptr @"Core:result:map:19:3", align 8
  call void @free_candy_value(ptr %1072)
  %1073 = load ptr, ptr @"Core:result:map:2", align 8
  call void @free_candy_value(ptr %1073)
  %1074 = load ptr, ptr @"Core:result:map:20", align 8
  call void @free_candy_value(ptr %1074)
  %1075 = load ptr, ptr @"Core:result:map:4", align 8
  call void @free_candy_value(ptr %1075)
  %1076 = load ptr, ptr @"Core:result:mapOr:14", align 8
  call void @free_candy_value(ptr %1076)
  %1077 = load ptr, ptr @"Core:result:mapOr:16", align 8
  call void @free_candy_value(ptr %1077)
  %1078 = load ptr, ptr @"Core:result:mapOr:2", align 8
  call void @free_candy_value(ptr %1078)
  %1079 = load ptr, ptr @"Core:result:mapOr:21", align 8
  call void @free_candy_value(ptr %1079)
  %1080 = load ptr, ptr @"Core:result:mapOr:4", align 8
  call void @free_candy_value(ptr %1080)
  %1081 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %1081)
  %1082 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %1082)
  %1083 = load ptr, ptr @"Core:result:mapOrElse:2", align 8
  call void @free_candy_value(ptr %1083)
  %1084 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %1084)
  %1085 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %1085)
  %1086 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %1086)
  %1087 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %1087)
  %1088 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %1088)
  %1089 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %1089)
  %1090 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %1090)
  %1091 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %1091)
  %1092 = load ptr, ptr @"Core:result:unwrap:18", align 8
  call void @free_candy_value(ptr %1092)
  %1093 = load ptr, ptr @"Core:result:unwrap:19", align 8
  call void @free_candy_value(ptr %1093)
  %1094 = load ptr, ptr @"Core:result:unwrap:2", align 8
  call void @free_candy_value(ptr %1094)
  %1095 = load ptr, ptr @"Core:result:unwrap:4", align 8
  call void @free_candy_value(ptr %1095)
  %1096 = load ptr, ptr @"Core:result:unwrap:7", align 8
  call void @free_candy_value(ptr %1096)
  %1097 = load ptr, ptr @"Core:result:unwrap:9", align 8
  call void @free_candy_value(ptr %1097)
  %1098 = load ptr, ptr @"Core:result:unwrapOr:2", align 8
  call void @free_candy_value(ptr %1098)
  %1099 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %1099)
  %1100 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %1100)
  %1101 = load ptr, ptr @"Core:result:unwrapOrElse:2", align 8
  call void @free_candy_value(ptr %1101)
  %1102 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %1102)
  %1103 = load ptr, ptr @"Core:result:unwrapOrElse:8:9", align 8
  call void @free_candy_value(ptr %1103)
  %1104 = load ptr, ptr @"Core:result:unwrapOrElse:9", align 8
  call void @free_candy_value(ptr %1104)
  %1105 = load ptr, ptr @"Examples:iterable:21:35", align 8
  call void @free_candy_value(ptr %1105)
  %1106 = load ptr, ptr @"Examples:iterable:21:print:7", align 8
  call void @free_candy_value(ptr %1106)
  %1107 = load ptr, ptr @"Examples:iterable:21:print:9", align 8
  call void @free_candy_value(ptr %1107)
  %1108 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %1108)
  %1109 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %1109)
  %1110 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %1110)
  %1111 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %1111)
  %1112 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %1112)
  %1113 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %1113)
  %1114 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %1114)
  %1115 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %1115)
  %1116 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %1116)
  %1117 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %1117)
  %1118 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %1118)
  %1119 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %1119)
  %1120 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %1120)
  %1121 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %1121)
  %1122 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %1122)
  %1123 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %1123)
  %1124 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %1124)
  %1125 = load ptr, ptr @tag_Empty, align 8
  call void @free_candy_value(ptr %1125)
  %1126 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %1126)
  %1127 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %1127)
  %1128 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %1128)
  %1129 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %1129)
  %1130 = load ptr, ptr @tag_GetValue, align 8
  call void @free_candy_value(ptr %1130)
  %1131 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %1131)
  %1132 = load ptr, ptr @tag_Index, align 8
  call void @free_candy_value(ptr %1132)
  %1133 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %1133)
  %1134 = load ptr, ptr @tag_Item, align 8
  call void @free_candy_value(ptr %1134)
  %1135 = load ptr, ptr @tag_L, align 8
  call void @free_candy_value(ptr %1135)
  %1136 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %1136)
  %1137 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %1137)
  %1138 = load ptr, ptr @tag_Main, align 8
  call void @free_candy_value(ptr %1138)
  %1139 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %1139)
  %1140 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %1140)
  %1141 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %1141)
  %1142 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %1142)
  %1143 = load ptr, ptr @tag_Rest, align 8
  call void @free_candy_value(ptr %1143)
  %1144 = load ptr, ptr @tag_State, align 8
  call void @free_candy_value(ptr %1144)
  %1145 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %1145)
  %1146 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %1146)
  %1147 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %1147)
  %1148 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %1148)
  %1149 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %1149)
  %1150 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %1150)
  %1151 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %1151)
  %1152 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %1152)
  %1153 = load ptr, ptr @"text_ ", align 8
  call void @free_candy_value(ptr %1153)
  %1154 = load ptr, ptr @"text_!", align 8
  call void @free_candy_value(ptr %1154)
  %1155 = load ptr, ptr @"text_,", align 8
  call void @free_candy_value(ptr %1155)
  %1156 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %1156)
  %1157 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @free_candy_value(ptr %1157)
  %1158 = load ptr, ptr @text_B, align 8
  call void @free_candy_value(ptr %1158)
  %1159 = load ptr, ptr @"text_Can't get the last index of an empty list.", align 8
  call void @free_candy_value(ptr %1159)
  %1160 = load ptr, ptr @"text_Expected Equal, got ", align 8
  call void @free_candy_value(ptr %1160)
  %1161 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %1161)
  %1162 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %1162)
  %1163 = load ptr, ptr @"text_Expected Greater, got ", align 8
  call void @free_candy_value(ptr %1163)
  %1164 = load ptr, ptr @"text_Expected Less, got ", align 8
  call void @free_candy_value(ptr %1164)
  %1165 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %1165)
  %1166 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %1166)
  %1167 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %1167)
  %1168 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %1168)
  %1169 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %1169)
  %1170 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %1170)
  %1171 = load ptr, ptr @text_H, align 8
  call void @free_candy_value(ptr %1171)
  %1172 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %1172)
  %1173 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  call void @free_candy_value(ptr %1173)
  %1174 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  call void @free_candy_value(ptr %1174)
  %1175 = load ptr, ptr @"text_Struct doesn't contain key `L`: `", align 8
  call void @free_candy_value(ptr %1175)
  %1176 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  call void @free_candy_value(ptr %1176)
  %1177 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  call void @free_candy_value(ptr %1177)
  %1178 = load ptr, ptr @text_T, align 8
  call void @free_candy_value(ptr %1178)
  %1179 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %1179)
  %1180 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %1180)
  %1181 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %1181)
  %1182 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %1182)
  %1183 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %1183)
  %1184 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %1184)
  %1185 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %1185)
  %1186 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %1186)
  %1187 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %1187)
  %1188 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %1188)
  %1189 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %1189)
  %1190 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %1190)
  %1191 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %1191)
  %1192 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %1192)
  %1193 = load ptr, ptr @"text_`function.is1 action` was not satisfied", align 8
  call void @free_candy_value(ptr %1193)
  %1194 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %1194)
  %1195 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  call void @free_candy_value(ptr %1195)
  %1196 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %1196)
  %1197 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  call void @free_candy_value(ptr %1197)
  %1198 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %1198)
  %1199 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %1199)
  %1200 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %1200)
  %1201 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %1201)
  %1202 = load ptr, ptr @"text_`int.is index` was not satisfied", align 8
  call void @free_candy_value(ptr %1202)
  %1203 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %1203)
  %1204 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %1204)
  %1205 = load ptr, ptr @"text_`is iterable` was not satisfied", align 8
  call void @free_candy_value(ptr %1205)
  %1206 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  call void @free_candy_value(ptr %1206)
  %1207 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %1207)
  %1208 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %1208)
  %1209 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %1209)
  %1210 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %1210)
  %1211 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %1211)
  %1212 = load ptr, ptr @"text_`isOk result` was not satisfied", align 8
  call void @free_candy_value(ptr %1212)
  %1213 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %1213)
  %1214 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %1214)
  %1215 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %1215)
  %1216 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %1216)
  %1217 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %1217)
  %1218 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %1218)
  %1219 = load ptr, ptr @text_a, align 8
  call void @free_candy_value(ptr %1219)
  %1220 = load ptr, ptr @text_b, align 8
  call void @free_candy_value(ptr %1220)
  %1221 = load ptr, ptr @text_d, align 8
  call void @free_candy_value(ptr %1221)
  %1222 = load ptr, ptr @text_e, align 8
  call void @free_candy_value(ptr %1222)
  %1223 = load ptr, ptr @text_g, align 8
  call void @free_candy_value(ptr %1223)
  %1224 = load ptr, ptr @text_h, align 8
  call void @free_candy_value(ptr %1224)
  %1225 = load ptr, ptr @text_i, align 8
  call void @free_candy_value(ptr %1225)
  %1226 = load ptr, ptr @text_l, align 8
  call void @free_candy_value(ptr %1226)
  %1227 = load ptr, ptr @text_m, align 8
  call void @free_candy_value(ptr %1227)
  %1228 = load ptr, ptr @text_n, align 8
  call void @free_candy_value(ptr %1228)
  %1229 = load ptr, ptr @text_o, align 8
  call void @free_candy_value(ptr %1229)
  %1230 = load ptr, ptr @text_r, align 8
  call void @free_candy_value(ptr %1230)
  %1231 = load ptr, ptr @text_s, align 8
  call void @free_candy_value(ptr %1231)
  %1232 = load ptr, ptr @text_t, align 8
  call void @free_candy_value(ptr %1232)
  %1233 = load ptr, ptr @text_u, align 8
  call void @free_candy_value(ptr %1233)
  %1234 = load ptr, ptr @text_w, align 8
  call void @free_candy_value(ptr %1234)
  %1235 = load ptr, ptr @text_x, align 8
  call void @free_candy_value(ptr %1235)
  %1236 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %1236)
  %1237 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %1237)
  %1238 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %1238)
  %1239 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %1239)
  %1240 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %1240)
  %1241 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %1241)
  %1242 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %1242)
  %1243 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %1243)
  %1244 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  call void @free_candy_value(ptr %1244)
  %1245 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %1245)
  %1246 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %1246)
  %1247 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  call void @free_candy_value(ptr %1247)
  %1248 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.3, align 8
  call void @free_candy_value(ptr %1248)
  %1249 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %1249)
  %1250 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %1250)
  %1251 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.5, align 8
  call void @free_candy_value(ptr %1251)
  %1252 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %1252)
  %1253 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %1253)
  %1254 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %1254)
  %1255 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.7, align 8
  call void @free_candy_value(ptr %1255)
  %1256 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.9, align 8
  call void @free_candy_value(ptr %1256)
  %1257 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.11, align 8
  call void @free_candy_value(ptr %1257)
  %1258 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %1258)
  %1259 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.13, align 8
  call void @free_candy_value(ptr %1259)
  %1260 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %1260)
  %1261 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1261)
  %1262 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.15, align 8
  call void @free_candy_value(ptr %1262)
  %1263 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.17, align 8
  call void @free_candy_value(ptr %1263)
  %1264 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.19, align 8
  call void @free_candy_value(ptr %1264)
  %1265 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %1265)
  %1266 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  call void @free_candy_value(ptr %1266)
  %1267 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %1267)
  %1268 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %1268)
  %1269 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %1269)
  %1270 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %1270)
  %1271 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.23, align 8
  call void @free_candy_value(ptr %1271)
  %1272 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %1272)
  %1273 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %1273)
  %1274 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.25, align 8
  call void @free_candy_value(ptr %1274)
  %1275 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %1275)
  %1276 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.27, align 8
  call void @free_candy_value(ptr %1276)
  %1277 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %1277)
  %1278 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %1278)
  %1279 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %1279)
  %1280 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.29, align 8
  call void @free_candy_value(ptr %1280)
  %1281 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.31, align 8
  call void @free_candy_value(ptr %1281)
  %1282 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.33, align 8
  call void @free_candy_value(ptr %1282)
  %1283 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %1283)
  %1284 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.35, align 8
  call void @free_candy_value(ptr %1284)
  %1285 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %1285)
  %1286 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.37, align 8
  call void @free_candy_value(ptr %1286)
  %1287 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %1287)
  %1288 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1288)
  %1289 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %1289)
  %1290 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %1290)
  %1291 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %1291)
  %1292 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %1292)
  %1293 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %1293)
  %1294 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  call void @free_candy_value(ptr %1294)
  %1295 = load ptr, ptr @fun_Core_bool_is_1_equals_then.39, align 8
  call void @free_candy_value(ptr %1295)
  %1296 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %1296)
  %1297 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %1297)
  %1298 = load ptr, ptr @fun_Core_bool_is_1_equals_else.41, align 8
  call void @free_candy_value(ptr %1298)
  %1299 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %1299)
  %1300 = load ptr, ptr @fun_Core_bool_is_1_equals_else.43, align 8
  call void @free_candy_value(ptr %1300)
  %1301 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %1301)
  %1302 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %1302)
  %1303 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %1303)
  %1304 = load ptr, ptr @fun_Core_bool_is_1_equals_then.45, align 8
  call void @free_candy_value(ptr %1304)
  %1305 = load ptr, ptr @fun_Core_bool_is_1_equals_then.47, align 8
  call void @free_candy_value(ptr %1305)
  %1306 = load ptr, ptr @fun_Core_bool_is_1_equals_else.49, align 8
  call void @free_candy_value(ptr %1306)
  %1307 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %1307)
  %1308 = load ptr, ptr @fun_Core_bool_is_1_equals_else.51, align 8
  call void @free_candy_value(ptr %1308)
  %1309 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %1309)
  %1310 = load ptr, ptr @fun_Core_bool_is_1_equals_else.53, align 8
  call void @free_candy_value(ptr %1310)
  %1311 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %1311)
  %1312 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1312)
  %1313 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %1313)
  %1314 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  call void @free_candy_value(ptr %1314)
  %1315 = load ptr, ptr @fun_Core_bool_not_6_equals_then.55, align 8
  call void @free_candy_value(ptr %1315)
  %1316 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %1316)
  %1317 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %1317)
  %1318 = load ptr, ptr @fun_Core_bool_not_6_equals_else.57, align 8
  call void @free_candy_value(ptr %1318)
  %1319 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %1319)
  %1320 = load ptr, ptr @fun_Core_bool_not_6_equals_else.59, align 8
  call void @free_candy_value(ptr %1320)
  %1321 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %1321)
  %1322 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1322)
  %1323 = load ptr, ptr @fun_Core_bool_not_6_equals_then.61, align 8
  call void @free_candy_value(ptr %1323)
  %1324 = load ptr, ptr @fun_Core_bool_not_6_equals_then.63, align 8
  call void @free_candy_value(ptr %1324)
  %1325 = load ptr, ptr @fun_Core_bool_not_6_equals_else.65, align 8
  call void @free_candy_value(ptr %1325)
  %1326 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %1326)
  %1327 = load ptr, ptr @fun_Core_bool_not_6_equals_else.67, align 8
  call void @free_candy_value(ptr %1327)
  %1328 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %1328)
  %1329 = load ptr, ptr @fun_Core_bool_not_6_equals_else.69, align 8
  call void @free_candy_value(ptr %1329)
  %1330 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %1330)
  %1331 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %1331)
  %1332 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %1332)
  %1333 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  call void @free_candy_value(ptr %1333)
  %1334 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.71, align 8
  call void @free_candy_value(ptr %1334)
  %1335 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  call void @free_candy_value(ptr %1335)
  %1336 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %1336)
  %1337 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.73, align 8
  call void @free_candy_value(ptr %1337)
  %1338 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %1338)
  %1339 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.75, align 8
  call void @free_candy_value(ptr %1339)
  %1340 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %1340)
  %1341 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  call void @free_candy_value(ptr %1341)
  %1342 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1342)
  %1343 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.77, align 8
  call void @free_candy_value(ptr %1343)
  %1344 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.79, align 8
  call void @free_candy_value(ptr %1344)
  %1345 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.81, align 8
  call void @free_candy_value(ptr %1345)
  %1346 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %1346)
  %1347 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.83, align 8
  call void @free_candy_value(ptr %1347)
  %1348 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %1348)
  %1349 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.85, align 8
  call void @free_candy_value(ptr %1349)
  %1350 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %1350)
  %1351 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %1351)
  %1352 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %1352)
  %1353 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  call void @free_candy_value(ptr %1353)
  %1354 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.87, align 8
  call void @free_candy_value(ptr %1354)
  %1355 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  call void @free_candy_value(ptr %1355)
  %1356 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %1356)
  %1357 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.89, align 8
  call void @free_candy_value(ptr %1357)
  %1358 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %1358)
  %1359 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.91, align 8
  call void @free_candy_value(ptr %1359)
  %1360 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %1360)
  %1361 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1361)
  %1362 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.93, align 8
  call void @free_candy_value(ptr %1362)
  %1363 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.95, align 8
  call void @free_candy_value(ptr %1363)
  %1364 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.97, align 8
  call void @free_candy_value(ptr %1364)
  %1365 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %1365)
  %1366 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.99, align 8
  call void @free_candy_value(ptr %1366)
  %1367 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %1367)
  %1368 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.101, align 8
  call void @free_candy_value(ptr %1368)
  %1369 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %1369)
  %1370 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  call void @free_candy_value(ptr %1370)
  %1371 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %1371)
  %1372 = load ptr, ptr @fun_Core_bool_implies, align 8
  call void @free_candy_value(ptr %1372)
  %1373 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %1373)
  %1374 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.103", align 8
  call void @free_candy_value(ptr %1374)
  %1375 = load ptr, ptr @fun_Core_check_check, align 8
  call void @free_candy_value(ptr %1375)
  %1376 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.105", align 8
  call void @free_candy_value(ptr %1376)
  %1377 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.107", align 8
  call void @free_candy_value(ptr %1377)
  %1378 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %1378)
  %1379 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %1379)
  %1380 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %1380)
  %1381 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %1381)
  %1382 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %1382)
  %1383 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %1383)
  %1384 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %1384)
  %1385 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %1385)
  %1386 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %1386)
  %1387 = load ptr, ptr @fun_Core_int_isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %1387)
  %1388 = load ptr, ptr @fun_Core_result_is, align 8
  call void @free_candy_value(ptr %1388)
  %1389 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %1389)
  %1390 = load ptr, ptr @fun_Core_result_is_1_equals_then.109, align 8
  call void @free_candy_value(ptr %1390)
  %1391 = load ptr, ptr @fun_Core_result_is_1_equals_then.111, align 8
  call void @free_candy_value(ptr %1391)
  %1392 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %1392)
  %1393 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %1393)
  %1394 = load ptr, ptr @fun_Core_result_is_1_equals_else.113, align 8
  call void @free_candy_value(ptr %1394)
  %1395 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %1395)
  %1396 = load ptr, ptr @fun_Core_result_is_1_equals_else.115, align 8
  call void @free_candy_value(ptr %1396)
  %1397 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %1397)
  %1398 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %1398)
  %1399 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %1399)
  %1400 = load ptr, ptr @fun_Core_result_is_1_equals_then.117, align 8
  call void @free_candy_value(ptr %1400)
  %1401 = load ptr, ptr @fun_Core_result_is_1_equals_then.119, align 8
  call void @free_candy_value(ptr %1401)
  %1402 = load ptr, ptr @fun_Core_result_is_1_equals_then.121, align 8
  call void @free_candy_value(ptr %1402)
  %1403 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %1403)
  %1404 = load ptr, ptr @fun_Core_result_is_1_equals_else.123, align 8
  call void @free_candy_value(ptr %1404)
  %1405 = load ptr, ptr @fun_Core_result_is_1_equals_else.125, align 8
  call void @free_candy_value(ptr %1405)
  %1406 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %1406)
  %1407 = load ptr, ptr @fun_Core_result_is_1_equals_else.127, align 8
  call void @free_candy_value(ptr %1407)
  %1408 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %1408)
  %1409 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %1409)
  %1410 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1410)
  %1411 = load ptr, ptr @fun_Core_result_unwrap, align 8
  call void @free_candy_value(ptr %1411)
  %1412 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %1412)
  %1413 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %1413)
  %1414 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.129, align 8
  call void @free_candy_value(ptr %1414)
  %1415 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.131, align 8
  call void @free_candy_value(ptr %1415)
  %1416 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %1416)
  %1417 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %1417)
  %1418 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.133, align 8
  call void @free_candy_value(ptr %1418)
  %1419 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %1419)
  %1420 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.135, align 8
  call void @free_candy_value(ptr %1420)
  %1421 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %1421)
  %1422 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  call void @free_candy_value(ptr %1422)
  %1423 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %1423)
  %1424 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.137, align 8
  call void @free_candy_value(ptr %1424)
  %1425 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.139, align 8
  call void @free_candy_value(ptr %1425)
  %1426 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.141, align 8
  call void @free_candy_value(ptr %1426)
  %1427 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %1427)
  %1428 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.143, align 8
  call void @free_candy_value(ptr %1428)
  %1429 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.145, align 8
  call void @free_candy_value(ptr %1429)
  %1430 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %1430)
  %1431 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.147, align 8
  call void @free_candy_value(ptr %1431)
  %1432 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %1432)
  %1433 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  call void @free_candy_value(ptr %1433)
  %1434 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %1434)
  %1435 = load ptr, ptr @fun_Core_result_flatMap, align 8
  call void @free_candy_value(ptr %1435)
  %1436 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  call void @free_candy_value(ptr %1436)
  %1437 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  call void @free_candy_value(ptr %1437)
  %1438 = load ptr, ptr @fun_Core_result_map, align 8
  call void @free_candy_value(ptr %1438)
  %1439 = load ptr, ptr @fun_Core_result_map_19, align 8
  call void @free_candy_value(ptr %1439)
  %1440 = load ptr, ptr @tag_Ok.148, align 8
  call void @free_candy_value(ptr %1440)
  %1441 = load ptr, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_7", align 8
  call void @free_candy_value(ptr %1441)
  %1442 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %1442)
  %1443 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %1443)
  %1444 = load ptr, ptr @fun_Core_result_unwrapOrElse_8, align 8
  call void @free_candy_value(ptr %1444)
  %1445 = load ptr, ptr @fun_Core_list_isEmpty, align 8
  call void @free_candy_value(ptr %1445)
  %1446 = load ptr, ptr @tag_Error.149, align 8
  call void @free_candy_value(ptr %1446)
  %1447 = load ptr, ptr @fun_Core_list_lastIndex_9, align 8
  call void @free_candy_value(ptr %1447)
  %1448 = load ptr, ptr @fun_Core_list_lastIndex, align 8
  call void @free_candy_value(ptr %1448)
  %1449 = load ptr, ptr @fun_Core_list_lastIndex_10, align 8
  call void @free_candy_value(ptr %1449)
  %1450 = load ptr, ptr @tag_Ok.150, align 8
  call void @free_candy_value(ptr %1450)
  %1451 = load ptr, ptr @fun_Core_list_isValidIndex, align 8
  call void @free_candy_value(ptr %1451)
  %1452 = load ptr, ptr @fun_Core_list_isValidIndex_22, align 8
  call void @free_candy_value(ptr %1452)
  %1453 = load ptr, ptr @fun_Core_list_isValidIndex_32, align 8
  call void @free_candy_value(ptr %1453)
  %1454 = load ptr, ptr @fun_Core_iterable_generateWithState, align 8
  call void @free_candy_value(ptr %1454)
  %1455 = load ptr, ptr @fun_Core_iterable_generateWithState_14, align 8
  call void @free_candy_value(ptr %1455)
  %1456 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0, align 8
  call void @free_candy_value(ptr %1456)
  %1457 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11, align 8
  call void @free_candy_value(ptr %1457)
  %1458 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_equals_then, align 8
  call void @free_candy_value(ptr %1458)
  %1459 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then, align 8
  call void @free_candy_value(ptr %1459)
  %1460 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %1460)
  %1461 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else, align 8
  call void @free_candy_value(ptr %1461)
  %1462 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %1462)
  %1463 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then, align 8
  call void @free_candy_value(ptr %1463)
  %1464 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then.152, align 8
  call void @free_candy_value(ptr %1464)
  %1465 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %1465)
  %1466 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else.154, align 8
  call void @free_candy_value(ptr %1466)
  %1467 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %1467)
  %1468 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then.156, align 8
  call void @free_candy_value(ptr %1468)
  %1469 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %1469)
  %1470 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else, align 8
  call void @free_candy_value(ptr %1470)
  %1471 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.158, align 8
  call void @free_candy_value(ptr %1471)
  %1472 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_equals_else, align 8
  call void @free_candy_value(ptr %1472)
  %1473 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %1473)
  %1474 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.160, align 8
  call void @free_candy_value(ptr %1474)
  %1475 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  call void @free_candy_value(ptr %1475)
  %1476 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  call void @free_candy_value(ptr %1476)
  %1477 = load ptr, ptr @tag_Error.161, align 8
  call void @free_candy_value(ptr %1477)
  %1478 = load ptr, ptr @"fun_Core_iterable_fromList_18_15, Core_iterable_generate_50_5, Core_iterable_takeWhile_2_11_8, Core_iterable_windowed_67_27", align 8
  call void @free_candy_value(ptr %1478)
  %1479 = load ptr, ptr @fun_Core_iterable_82, align 8
  call void @free_candy_value(ptr %1479)
  %1480 = load ptr, ptr @fun_Core_iterable_82_11, align 8
  call void @free_candy_value(ptr %1480)
  %1481 = load ptr, ptr @fun_Core_iterable_82_11_1_equals_then, align 8
  call void @free_candy_value(ptr %1481)
  %1482 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_then, align 8
  call void @free_candy_value(ptr %1482)
  %1483 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %1483)
  %1484 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_else, align 8
  call void @free_candy_value(ptr %1484)
  %1485 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %1485)
  %1486 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_then, align 8
  call void @free_candy_value(ptr %1486)
  %1487 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_then.163, align 8
  call void @free_candy_value(ptr %1487)
  %1488 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %1488)
  %1489 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_else.165, align 8
  call void @free_candy_value(ptr %1489)
  %1490 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %1490)
  %1491 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_then.167, align 8
  call void @free_candy_value(ptr %1491)
  %1492 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %1492)
  %1493 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_else, align 8
  call void @free_candy_value(ptr %1493)
  %1494 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_else.169, align 8
  call void @free_candy_value(ptr %1494)
  %1495 = load ptr, ptr @fun_Core_iterable_82_11_1_equals_else, align 8
  call void @free_candy_value(ptr %1495)
  %1496 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %1496)
  %1497 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_else.171, align 8
  call void @free_candy_value(ptr %1497)
  %1498 = load ptr, ptr @fun_Core_iterable_forEach, align 8
  call void @free_candy_value(ptr %1498)
  %1499 = load ptr, ptr @fun_Core_iterable_forEach_20, align 8
  call void @free_candy_value(ptr %1499)
  %1500 = load ptr, ptr @fun_Core_iterable_fromList_18, align 8
  call void @free_candy_value(ptr %1500)
  %1501 = load ptr, ptr @fun_Core_iterable_fromList_18_1_equals_then, align 8
  call void @free_candy_value(ptr %1501)
  %1502 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_then, align 8
  call void @free_candy_value(ptr %1502)
  %1503 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %1503)
  %1504 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_else, align 8
  call void @free_candy_value(ptr %1504)
  %1505 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %1505)
  %1506 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_then, align 8
  call void @free_candy_value(ptr %1506)
  %1507 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_then.173, align 8
  call void @free_candy_value(ptr %1507)
  %1508 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %1508)
  %1509 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_else.175, align 8
  call void @free_candy_value(ptr %1509)
  %1510 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %1510)
  %1511 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_then.177, align 8
  call void @free_candy_value(ptr %1511)
  %1512 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %1512)
  %1513 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_else, align 8
  call void @free_candy_value(ptr %1513)
  %1514 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_else.179, align 8
  call void @free_candy_value(ptr %1514)
  %1515 = load ptr, ptr @fun_Core_iterable_fromList_18_1_equals_else, align 8
  call void @free_candy_value(ptr %1515)
  %1516 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %1516)
  %1517 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_else.181, align 8
  call void @free_candy_value(ptr %1517)
  %1518 = load ptr, ptr @fun_Core_iterable_fromList_18_14, align 8
  call void @free_candy_value(ptr %1518)
  %1519 = load ptr, ptr @tag_Ok.182, align 8
  call void @free_candy_value(ptr %1519)
  %1520 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %1520)
  %1521 = load ptr, ptr @fun_Examples_iterable_21, align 8
  call void @free_candy_value(ptr %1521)
  %1522 = load ptr, ptr @"fun_Examples_iterable_21_print, Examples_iterable_21_34", align 8
  call void @free_candy_value(ptr %1522)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_struct_get.1(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then,":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %7, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then)
  %12 = call ptr @Builtins__isNonNegative_13_equals_then(ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %7, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %29, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Builtins__isNonNegative_13_equals_then(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.2, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.3, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.4, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.5, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.3, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.5, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.2(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__isNonNegative_13_equals_else.4(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.6, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.7, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.7)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.6(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isNonNegative_13_equals_then.6(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.8, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.9, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.12, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.13, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.9, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.13, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.8(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.10, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.11, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.11, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.10(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__isNonNegative_13_equals_else.12(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.14, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_then.15, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.15)
  %11 = call ptr @Builtins__isNonNegative_13_equals_then.14(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isNonNegative_13_equals_then.14(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.16, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.17, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.20, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.17, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.21, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.16(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.18, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.19, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.19, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.18(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__isNonNegative_13_equals_else.20(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.26, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.27, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.27, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %36 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_type_of(ptr %1)
  %41 = load ptr, ptr @tag_Function, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr null)
  %45 = call ptr @candy_builtin_type_of(ptr %1)
  %46 = load ptr, ptr @tag_Function, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %49 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr %49)
  %51 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %52 = load ptr, ptr @num_0, align 8
  %53 = call ptr @candy_builtin_equals(ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %55 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr null)
  %56 = call ptr @candy_builtin_type_of(ptr %2)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr null)
  %61 = call ptr @candy_builtin_type_of(ptr %2)
  %62 = load ptr, ptr @tag_Function, align 8
  %63 = call ptr @candy_builtin_equals(ptr %61, ptr %62)
  %64 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %65 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_equals(ptr %67, ptr %68)
  %70 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %71 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr null)
  %72 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %72
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.22, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.23, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.24, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.25, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.23, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.25, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.22(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__ifElse_1_equals_else.24(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__ifElse_1_equals_else.26(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @9, align 8
  ret ptr @9
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.28, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.29, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.36, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.37, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.29, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.37, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.28(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.30, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.31, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.34, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.35, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.31, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.35, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.30(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.32, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.33, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.33, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else.32(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @10, align 8
  ret ptr @10
}

define ptr @Builtins__ifElse_1_equals_else.34(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @11, align 8
  ret ptr @11
}

define ptr @Builtins__ifElse_1_equals_else.36(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Builtins__ifElse_1_case-0_didNotMatch(ptr %0) {
Builtins__ifElse_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Core_function_is0(ptr %0) {
Core_function_is0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @Core_function_is0(ptr %0)
  %2 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Function, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:function:run:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:function:run:14", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %0)
  %17 = call ptr @get_candy_function_environment(ptr %0)
  %18 = call ptr (...) %16(ptr %17)
  ret ptr %18
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.42, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.43, align 8
  %10 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.43, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_is_1_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %34 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_is_1_equals_then(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.38, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.39, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.40, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.41, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.39, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.41, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.38(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @13, align 8
  ret ptr @13
}

define ptr @Core_bool_is_1_equals_else.40(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Core_bool_is_1_equals_else.42(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @15, align 8
  ret ptr @15
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.44, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.45, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.52, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.53, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.45, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.53, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.44(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.46, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.47, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.50, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.51, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.47, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.51, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.46(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.48, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else.49, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else.49, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else.48(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @16, align 8
  ret ptr @16
}

define ptr @Core_bool_is_1_equals_else.50(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @17, align 8
  ret ptr @17
}

define ptr @Core_bool_is_1_equals_else.52(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Core_bool_is_1_case-0_didNotMatch(ptr %0) {
Core_bool_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.58, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_not_6_equals_else.59, align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_else.59, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %19, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_bool_not_6_equals_then(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.54, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.55, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.56, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.57, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.55, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.57, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.54(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @19, align 8
  ret ptr @19
}

define ptr @Core_bool_not_6_equals_else.56(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Core_bool_not_6_equals_else.58(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.60, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_not_6_equals_then.61, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.68, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_not_6_equals_else.69, align 8
  %18 = load ptr, ptr @fun_Core_bool_not_6_equals_then.61, align 8
  %19 = load ptr, ptr @fun_Core_bool_not_6_equals_else.69, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_not_6_equals_then.60(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.62, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.63, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.66, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.67, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.63, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.67, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.62(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.64, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else.65, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else.65, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else.64(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @22, align 8
  ret ptr @22
}

define ptr @Core_bool_not_6_equals_else.66(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Core_bool_not_6_equals_else.68(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Core_bool_not_6_case-1_didNotMatch(ptr %0) {
Core_bool_not_6_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1) {
Core_bool_lazyAnd:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.74, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyAnd_18_equals_else.75, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.75, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %0, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %19, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %32 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %23, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_bool_lazyAnd_18_equals_then(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.70, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.71, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.72, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.73, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.71, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.73, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.70(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_lazyAnd_18_equals_else.72(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_lazyAnd_18_equals_else.74(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_lazyAnd_18_case-0_matched(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.76, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.77, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.84, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.85, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.77, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.85, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.76(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.78, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.79, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.82, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.83, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.79, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.83, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.78(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.80, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.81, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.81, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.80(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_lazyAnd_18_equals_else.82(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_lazyAnd_18_equals_else.84(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1) {
Core_bool_lazyOr:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.90, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyOr_18_equals_else.91, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.91, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %0, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %1, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 2
  store ptr %19, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %30 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %23, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_bool_lazyOr_18_equals_then(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.86, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.87, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.88, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.89, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.87, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.89, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.86(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_bool_lazyOr_18_equals_else.88(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_bool_lazyOr_18_equals_else.90(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.92, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.93, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.100, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.101, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.93, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.101, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %20, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %33 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %34 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %24, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_lazyOr_18_equals_then.92(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.94, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.95, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.98, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.99, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.95, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.99, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.94(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.96, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.97, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_int_pow_21_4_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.97, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.96(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_bool_lazyOr_18_equals_else.98(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_bool_lazyOr_18_equals_else.100(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_bool_lazyOr_18_case-1_matched(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_implies(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %21 = call ptr @Core_bool_lazyOr(ptr %8, ptr %20)
  ret ptr %21
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @"anonymous_$generated__needs_isConditionBool_else.102"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_check_check(ptr %0) {
Core_check_check:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %0, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.104", ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.105", align 8
  %9 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %10 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.105", align 8
  %11 = call ptr @candy_builtin_if_else(ptr %5, ptr %9, ptr %10)
  %12 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %13 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.103", align 8
  %14 = call ptr @candy_builtin_if_else(ptr %11, ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %16 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.106", ptr %15, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %16, ptr @"fun_anonymous_$generated__needs_condition_else.107", align 8
  %17 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %18 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.107", align 8
  %19 = call ptr @candy_builtin_if_else(ptr %0, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.104"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.106"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check didn't succeed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_function_is2(ptr %0) {
Core_function_is2:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is2_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_compareTo(ptr %0, ptr %1) {
Core_int_compareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %25 = load ptr, ptr @tag_Equal, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  %28 = call ptr @Core_bool_implies(ptr %26, ptr %27)
  %29 = call ptr @Core_check_check(ptr %28)
  ret ptr %24
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1) {
Core_int_isLessThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1) {
Core_int_isGreaterThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Greater, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isNonNegative(ptr %0) {
Core_int_isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @Core_int_isLessThan(ptr %0, ptr %12)
  %14 = call ptr @Core_bool_not(ptr %13)
  ret ptr %14
}

define ptr @Core_function_is1(ptr %0) {
Core_function_is1:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is1_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_isLessThanOrEqualTo(ptr %0, ptr %1) {
Core_int_isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %1)
  %13 = call ptr @Core_bool_not(ptr %12)
  ret ptr %13
}

define ptr @Core_result_is(ptr %0) {
Core_result_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.114, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.115, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.115, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %37 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.108, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.109, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.112, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.113, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.109, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.113, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.108(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.110, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.111, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.111, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.110(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.112(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_result_is_1_equals_else.114(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.116, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.117, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.126, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.127, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.117, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.127, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.116(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.118, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.119, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.124, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.125, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.119, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.125, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.118(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.120, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.121, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.122, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.123, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.121, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.123, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.120(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_result_is_1_equals_else.122(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.124(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_result_is_1_equals_else.126(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @43, align 8
  ret ptr @43
}

define ptr @Core_result_is_1_case-0_matched(ptr %0) {
Core_result_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_True, align 8
  ret ptr %5
}

define ptr @Core_result_is_1_case-0_didNotMatch(ptr %0) {
Core_result_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_result_unwrap(ptr %0) {
Core_result_unwrap:
  %1 = call ptr @Core_result_is(ptr %0)
  %2 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Core_result_is(ptr %0)
  %5 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:result:unwrap:7", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:result:isOk:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_without_value(ptr %0)
  %15 = load ptr, ptr @tag_Ok, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`isOk result` was not satisfied", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr null)
  %19 = call ptr @candy_builtin_type_of(ptr %0)
  %20 = load ptr, ptr @tag_Struct, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:result:unwrap:18", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = load ptr, ptr @tag_GetValue, align 8
  %26 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %25)
  %27 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:result:unwrap:18", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_GetValue, align 8
  %31 = call ptr @candy_builtin_struct_get.1(ptr %0, ptr %30)
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %0, ptr %33)
  ret ptr %34
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_function_is1(ptr %2)
  %10 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Tag, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.134, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_mapOrElse_30_equals_else.135, align 8
  %21 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %22 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.135, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %23, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %1, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_matched, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 0
  store ptr %2, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 1
  store ptr %23, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 2
  store ptr %0, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %38 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %27, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.128, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.129, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.132, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.133, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.129, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.133, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.128(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.130, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.131, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.131, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.130(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @44, align 8
  ret ptr @44
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.132(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Core_result_mapOrElse_30_equals_else.134(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @46, align 8
  ret ptr @46
}

define ptr @Core_result_mapOrElse_30_case-0_matched(ptr %0) {
Core_result_mapOrElse_30_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.136, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_result_mapOrElse_30_equals_then.137, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.146, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_else.147, align 8
  %18 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.137, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.147, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_result_mapOrElse_30_equals_then.136(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.138, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.139, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.144, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.145, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.139, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.145, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.138(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.140, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.141, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.142, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.143, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.141, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.143, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.140(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @47, align 8
  ret ptr @47
}

define ptr @Core_result_mapOrElse_30_equals_else.142(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @37, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.144(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_result_mapOrElse_30_equals_else.146(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_result_mapOrElse_30_case-1_matched(ptr %0) {
Core_result_mapOrElse_30_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_result_flatMap(ptr %0, ptr %1) {
Core_result_flatMap:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is1(ptr %1)
  %6 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_flatMap_19, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_flatMap_19, align 8
  %11 = call ptr @Core_result_is(ptr %0)
  %12 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:result:flatMap:21", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  %16 = call ptr @Core_function_is1(ptr %15)
  %17 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:result:flatMap:21", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_mapOr_20, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_mapOr_20, align 8
  %23 = load ptr, ptr @fun_Core_result_flatMap_19, align 8
  %24 = load ptr, ptr @fun_Core_result_mapOr_20, align 8
  %25 = call ptr @Core_result_mapOrElse(ptr %0, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Core_result_flatMap_19(ptr %0, ptr %1) {
Core_result_flatMap_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %6
}

define ptr @Core_result_mapOr_20(ptr %0, ptr %1) {
Core_result_mapOr_20:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

define ptr @Core_result_map(ptr %0, ptr %1) {
Core_result_map:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is1(ptr %1)
  %6 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_map_19, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_map_19, align 8
  %11 = load ptr, ptr @fun_Core_result_map_19, align 8
  %12 = call ptr @Core_result_flatMap(ptr %0, ptr %11)
  ret ptr %12
}

define ptr @Core_result_map_19(ptr %0, ptr %1) {
Core_result_map_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  %7 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %7, align 1
  %8 = call ptr @make_candy_tag(ptr %7, ptr %6)
  store ptr %8, ptr @tag_Ok.148, align 8
  ret ptr @tag_Ok.148
}

define ptr @"Core_iterable_range_38, Core_result_unwrapOrElse_7"(ptr %0) {
"Core_iterable_range_38, Core_result_unwrapOrElse_7":
  ret ptr %0
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_unwrapOr_7, align 8
  %8 = call ptr @Core_result_is(ptr %0)
  %9 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %13 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_8, ptr %12, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_unwrapOrElse_8, align 8
  %14 = load ptr, ptr @"fun_Core_iterable_range_38, Core_result_unwrapOrElse_7", align 8
  %15 = load ptr, ptr @fun_Core_result_unwrapOrElse_8, align 8
  %16 = call ptr @Core_result_mapOrElse(ptr %0, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_unwrapOrElse_8(ptr %0) {
Core_result_unwrapOrElse_8:
  %1 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %2 = call ptr @Core_function_run(ptr %1)
  ret ptr %2
}

define ptr @Core_list_isEmpty(ptr %0) {
Core_list_isEmpty:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:list:isEmpty:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @candy_builtin_list_length(ptr %0)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_list_lastIndex_9() {
Core_list_lastIndex_9:
  %0 = load ptr, ptr @tag_Error.149, align 8
  ret ptr %0
}

define ptr @Core_list_lastIndex(ptr %0) {
Core_list_lastIndex:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_list_isEmpty(ptr %0)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_list_lastIndex_10, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_list_lastIndex_10, align 8
  %10 = load ptr, ptr @fun_Core_list_lastIndex_9, align 8
  %11 = load ptr, ptr @fun_Core_list_lastIndex_10, align 8
  %12 = call ptr @Builtins__ifElse(ptr %6, ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_list_lastIndex_10(ptr %0) {
Core_list_lastIndex_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:list:lastIndex:10:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_list_length(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_subtract(ptr %11, ptr %12)
  %14 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %14, align 1
  %15 = call ptr @make_candy_tag(ptr %14, ptr %13)
  store ptr %15, ptr @tag_Ok.150, align 8
  ret ptr @tag_Ok.150
}

define ptr @Core_list_isValidIndex(ptr %0, ptr %1) {
Core_list_isValidIndex:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`int.is index` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_list_isEmpty(ptr %0)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %1, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_list_isValidIndex_22, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_list_isValidIndex_22, align 8
  %16 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %17 = load ptr, ptr @fun_Core_list_isValidIndex_22, align 8
  %18 = call ptr @Builtins__ifElse(ptr %12, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_list_isValidIndex_32, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_list_isValidIndex_32, align 8
  %23 = load ptr, ptr @fun_Core_list_isValidIndex_32, align 8
  %24 = call ptr @Core_bool_lazyAnd(ptr %18, ptr %23)
  ret ptr %24
}

define ptr @Core_list_isValidIndex_22(ptr %0) {
Core_list_isValidIndex_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_list_isValidIndex_32(ptr %0) {
Core_list_isValidIndex_32:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_list_lastIndex(ptr %2)
  %4 = call ptr @Core_result_unwrap(ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @Core_int_isLessThanOrEqualTo(ptr %6, ptr %4)
  ret ptr %7
}

define ptr @Core_iterable_generateWithState(ptr %0, ptr %1) {
Core_iterable_generateWithState:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterable_generateWithState_14, align 8
  %8 = load ptr, ptr @fun_Core_iterable_generateWithState_14, align 8
  %9 = call ptr @Core_function_is2(ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = load ptr, ptr @"Core:iterable:generateWithState:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18, ptr %13, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  %16 = call ptr @Core_controlFlow_recursive_18(ptr %15, ptr %0)
  ret ptr %16
}

define ptr @Core_iterable_generateWithState_14(ptr %0, ptr %1, ptr %2) {
Core_iterable_generateWithState_14:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %1, ptr %5, align 8
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterable_generateWithState_14_0, align 8
  ret ptr @fun_Core_iterable_generateWithState_14_0
}

define ptr @Core_iterable_generateWithState_14_0(ptr %0) {
Core_iterable_generateWithState_14_0:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %10, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterable_generateWithState_14_0_11, align 8
  %13 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11, align 8
  %14 = call ptr @Core_result_map(ptr %7, ptr %13)
  ret ptr %14
}

define ptr @Core_iterable_generateWithState_14_0_11(ptr %0, ptr %1) {
Core_iterable_generateWithState_14_0_11:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterable_generateWithState_14_0_11_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterable_generateWithState_14_0_11_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_else.159, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.160, align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.160, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %27, ptr %31)
  %33 = alloca ptr, i64 3, align 8
  %34 = alloca ptr, i64 3, align 8
  %35 = load ptr, ptr @tag_Rest, align 8
  %36 = getelementptr ptr, ptr %33, i64 0
  store ptr %35, ptr %36, align 8
  %37 = getelementptr ptr, ptr %34, i64 0
  store ptr %32, ptr %37, align 8
  %38 = load ptr, ptr @tag_Item, align 8
  %39 = getelementptr ptr, ptr %33, i64 1
  store ptr %38, ptr %39, align 8
  %40 = getelementptr ptr, ptr %34, i64 1
  store ptr %25, ptr %40, align 8
  %41 = getelementptr ptr, ptr %33, i64 2
  store ptr null, ptr %41, align 8
  %42 = getelementptr ptr, ptr %34, i64 2
  store ptr null, ptr %42, align 8
  %43 = call ptr @make_candy_struct(ptr %33, ptr %34)
  ret ptr %43
}

define ptr @Core_iterable_generateWithState_14_0_11_1_equals_then(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_else.157, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.158, align 8
  %31 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else.158, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_then(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_else(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_then(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_then.151, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then.152, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_else.153, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else.154, align 8
  %19 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_then.152, align 8
  %20 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_hasKey_else.154, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_then.155, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then.156, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_then.156, align 8
  %34 = load ptr, ptr @fun_Core_iterable_generateWithState_14_0_11_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_then.151(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_iterable_generateWithState_14_0_11_1_hasKey_else.153(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_then.155(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_else(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_else.157(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterable_generateWithState_14_0_11_1_equals_else(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_iterable_generateWithState_14_0_11_1_isMatch_else.159(ptr %0) {
Core_iterable_generateWithState_14_0_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_controlFlow_recursive_18(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterable_generateWithState_14)
  %7 = call ptr @Core_iterable_generateWithState_14(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @"Core_iterable_fromList_18_15, Core_iterable_generate_50_5, Core_iterable_takeWhile_2_11_8, Core_iterable_windowed_67_27"() {
"Core_iterable_fromList_18_15, Core_iterable_generate_50_5, Core_iterable_takeWhile_2_11_8, Core_iterable_windowed_67_27":
  %0 = load ptr, ptr @tag_Error.161, align 8
  ret ptr %0
}

define ptr @Core_iterable_82(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_iterable_82:
  %4 = call ptr @Core_function_is0(ptr %1)
  %5 = load ptr, ptr @"text_`is iterable` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterable:82:2", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @Core_function_run(ptr %1)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %9, i32 0, i32 1
  store ptr %0, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %9, i32 0, i32 2
  store ptr %2, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterable_82_11, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterable_82_11, align 8
  %14 = load ptr, ptr @fun_Core_iterable_82_11, align 8
  %15 = call ptr @Core_result_map(ptr %8, ptr %14)
  %16 = call ptr @Core_result_unwrapOr(ptr %15, ptr %2)
  ret ptr %16
}

define ptr @Core_iterable_82_11(ptr %0, ptr %1) {
Core_iterable_82_11:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterable_82_11_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterable_82_11_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterable_82_11_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterable_82_11_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_isMatch_else.170, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterable_82_11_1_isMatch_else.171, align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_else.171, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = call ptr @get_candy_function_pointer(ptr %31)
  %33 = call ptr @get_candy_function_environment(ptr %31)
  %34 = call ptr (...) %32(ptr %29, ptr %25, ptr %33)
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8
  %41 = call ptr @get_candy_function_pointer(ptr %40)
  %42 = call ptr @get_candy_function_environment(ptr %40)
  %43 = call ptr (...) %41(ptr %36, ptr %27, ptr %34, ptr %38, ptr %42)
  ret ptr %43
}

define ptr @Core_iterable_82_11_1_equals_then(ptr %0) {
Core_iterable_82_11_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterable_82_11_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterable_82_11_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterable_82_11_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_isMatch_else.168, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterable_82_11_1_isMatch_else.169, align 8
  %31 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_else.169, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterable_82_11_1_hasKey_then(ptr %0) {
Core_iterable_82_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_iterable_82_11_1_hasKey_else(ptr %0) {
Core_iterable_82_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_iterable_82_11_1_isMatch_then(ptr %0) {
Core_iterable_82_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_hasKey_then.162, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterable_82_11_1_hasKey_then.163, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_hasKey_else.164, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterable_82_11_1_hasKey_else.165, align 8
  %19 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_then.163, align 8
  %20 = load ptr, ptr @fun_Core_iterable_82_11_1_hasKey_else.165, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_isMatch_then.166, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterable_82_11_1_isMatch_then.167, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterable_82_11_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterable_82_11_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_then.167, align 8
  %34 = load ptr, ptr @fun_Core_iterable_82_11_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterable_82_11_1_hasKey_then.162(ptr %0) {
Core_iterable_82_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_iterable_82_11_1_hasKey_else.164(ptr %0) {
Core_iterable_82_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_iterable_82_11_1_isMatch_then.166(ptr %0) {
Core_iterable_82_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_iterable_82_11_1_isMatch_else(ptr %0) {
Core_iterable_82_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterable_82_11_1_isMatch_else.168(ptr %0) {
Core_iterable_82_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterable_82_11_1_equals_else(ptr %0) {
Core_iterable_82_11_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_iterable_82_11_1_isMatch_else.170(ptr %0) {
Core_iterable_82_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterable_forEach(ptr %0, ptr %1) {
Core_iterable_forEach:
  %2 = call ptr @Core_function_is0(ptr %0)
  %3 = load ptr, ptr @"text_`is iterable` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is1(ptr %1)
  %6 = load ptr, ptr @"text_`function.is1 action` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterable_forEach_20, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterable_forEach_20, align 8
  %11 = call ptr @Core_function_is0(ptr %0)
  %12 = load ptr, ptr @"text_`is iterable` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterable:forEach:21", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = load ptr, ptr @fun_Core_iterable_forEach_20, align 8
  %16 = call ptr @Core_function_is2(ptr %15)
  %17 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:iterable:forEach:21", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @fun_Core_iterable_82, align 8
  %21 = load ptr, ptr @tag_Nothing, align 8
  %22 = load ptr, ptr @fun_Core_iterable_forEach_20, align 8
  %23 = call ptr @Core_iterable_82(ptr %20, ptr %0, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Core_iterable_forEach_20(ptr %0, ptr %1, ptr %2) {
Core_iterable_forEach_20:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %8
}

define ptr @Core_iterable_fromList_18(ptr %0) {
Core_iterable_fromList_18:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterable_fromList_18_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_equals_else, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterable_fromList_18_1_equals_else, align 8
  %10 = load ptr, ptr @fun_Core_iterable_fromList_18_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_iterable_fromList_18_1_equals_else, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_isMatch_else.180, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterable_fromList_18_1_isMatch_else.181, align 8
  %20 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_19_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_int_51_isMatch_then, Core_iterable_fromList_18_1_isMatch_then, Core_iterable_generateWithState_14_0_11_1_isMatch_then, Core_iterable_map_19_11_1_isMatch_then, Core_iterable_reduceLeft_38_1_isMatch_then, Core_iterable_take_33_1_isMatch_then, Core_iterable_takeWhile_2_11_1_isMatch_then, Core_iterable_withIndex_11_1_isMatch_then, Core_iterable_withIndex_11_14_1_isMatch_then, Core_iterable_19_isMatch_then, Core_iterable_30_isMatch_then, Core_iterable_82_11_1_isMatch_then, Core_iterable_84_2_11_1_isMatch_then, Core_iterable_86_6_21, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_iterable_split_9_29, Examples_iterable_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_else.181, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_1, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_2, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %12, ptr %25)
  %27 = call ptr @Core_list_isValidIndex(ptr %24, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %26, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %24, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_14, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_iterable_fromList_18_14, align 8
  %32 = load ptr, ptr @fun_Core_iterable_fromList_18_14, align 8
  %33 = load ptr, ptr @"fun_Core_iterable_fromList_18_15, Core_iterable_generate_50_5, Core_iterable_takeWhile_2_11_8, Core_iterable_windowed_67_27", align 8
  %34 = call ptr @Builtins__ifElse(ptr %27, ptr %32, ptr %33)
  ret ptr %34
}

define ptr @Core_iterable_fromList_18_1_equals_then(ptr %0) {
Core_iterable_fromList_18_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_L, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterable_fromList_18_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterable_fromList_18_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterable_fromList_18_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_isMatch_else.178, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterable_fromList_18_1_isMatch_else.179, align 8
  %31 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_else.179, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterable_fromList_18_1_hasKey_then(ptr %0) {
Core_iterable_fromList_18_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_L, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @62, align 8
  ret ptr @62
}

define ptr @Core_iterable_fromList_18_1_hasKey_else(ptr %0) {
Core_iterable_fromList_18_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `L`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_iterable_fromList_18_1_isMatch_then(ptr %0) {
Core_iterable_fromList_18_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_hasKey_then.172, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterable_fromList_18_1_hasKey_then.173, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_hasKey_else.174, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterable_fromList_18_1_hasKey_else.175, align 8
  %19 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_then.173, align 8
  %20 = load ptr, ptr @fun_Core_iterable_fromList_18_1_hasKey_else.175, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_isMatch_then.176, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterable_fromList_18_1_isMatch_then.177, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterable_fromList_18_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterable_fromList_18_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_then.177, align 8
  %34 = load ptr, ptr @fun_Core_iterable_fromList_18_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterable_fromList_18_1_hasKey_then.172(ptr %0) {
Core_iterable_fromList_18_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get.1(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_iterable_fromList_18_1_hasKey_else.174(ptr %0) {
Core_iterable_fromList_18_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_iterable_fromList_18_1_isMatch_then.176(ptr %0) {
Core_iterable_fromList_18_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_iterable_fromList_18_1_isMatch_else(ptr %0) {
Core_iterable_fromList_18_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterable_fromList_18_1_isMatch_else.178(ptr %0) {
Core_iterable_fromList_18_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterable_fromList_18_1_equals_else(ptr %0) {
Core_iterable_fromList_18_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @67, align 8
  ret ptr @67
}

define ptr @Core_iterable_fromList_18_1_isMatch_else.180(ptr %0) {
Core_iterable_fromList_18_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterable_fromList_18_14(ptr %0) {
Core_iterable_fromList_18_14:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @Builtins__listGet(ptr %2, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @candy_builtin_type_of(ptr %7)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:iterable:fromList:18:14:27", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr @num_1, align 8
  %17 = call ptr @candy_builtin_int_add(ptr %15, ptr %16)
  %18 = alloca ptr, i64 3, align 8
  %19 = alloca ptr, i64 3, align 8
  %20 = load ptr, ptr @tag_Index, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %19, i64 0
  store ptr %17, ptr %22, align 8
  %23 = load ptr, ptr @tag_L, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr ptr, ptr %18, i64 1
  store ptr %23, ptr %26, align 8
  %27 = getelementptr ptr, ptr %19, i64 1
  store ptr %25, ptr %27, align 8
  %28 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %28, align 8
  %29 = getelementptr ptr, ptr %19, i64 2
  store ptr null, ptr %29, align 8
  %30 = call ptr @make_candy_struct(ptr %18, ptr %19)
  %31 = alloca ptr, i64 3, align 8
  %32 = alloca ptr, i64 3, align 8
  %33 = load ptr, ptr @tag_Item, align 8
  %34 = getelementptr ptr, ptr %31, i64 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr ptr, ptr %32, i64 0
  store ptr %5, ptr %35, align 8
  %36 = load ptr, ptr @tag_State, align 8
  %37 = getelementptr ptr, ptr %31, i64 1
  store ptr %36, ptr %37, align 8
  %38 = getelementptr ptr, ptr %32, i64 1
  store ptr %30, ptr %38, align 8
  %39 = getelementptr ptr, ptr %31, i64 2
  store ptr null, ptr %39, align 8
  %40 = getelementptr ptr, ptr %32, i64 2
  store ptr null, ptr %40, align 8
  %41 = call ptr @make_candy_struct(ptr %31, ptr %32)
  %42 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %42, align 1
  %43 = call ptr @make_candy_tag(ptr %42, ptr %41)
  store ptr %43, ptr @tag_Ok.182, align 8
  ret ptr @tag_Ok.182
}

define ptr @Examples_iterable_21(ptr %0, ptr %1) {
Examples_iterable_21:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @"Examples_iterable_21_print, Examples_iterable_21_34", ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @"fun_Examples_iterable_21_print, Examples_iterable_21_34", align 8
  %5 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @fun_Core_iterable_fromList_18, align 8
  %8 = call ptr @Core_iterable_generateWithState(ptr %6, ptr %7)
  %9 = load ptr, ptr @tag_Nothing, align 8
  %10 = load ptr, ptr @"fun_Examples_iterable_21_print, Examples_iterable_21_34", align 8
  %11 = call ptr @Core_iterable_forEach(ptr %9, ptr %10)
  ret ptr %11
}

define ptr @"Examples_iterable_21_print, Examples_iterable_21_34"(ptr %0, ptr %1) {
"Examples_iterable_21_print, Examples_iterable_21_34":
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %8 = load ptr, ptr @"Examples:iterable:21:print:7", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr @tag_Stdout, align 8
  %13 = call ptr @candy_builtin_struct_has_key(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %15 = load ptr, ptr @"Examples:iterable:21:print:7", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr @tag_Stdout, align 8
  %20 = call ptr @candy_builtin_struct_get.1(ptr %18, ptr %19)
  %21 = call ptr @get_candy_function_pointer(ptr %20)
  %22 = call ptr @get_candy_function_environment(ptr %20)
  %23 = call ptr (...) %21(ptr %0, ptr %22)
  ret ptr %23
}
