; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::fitsInRustU128:10" = global ptr null
@"Builtins::fitsInRustU128:16" = global ptr null
@"Builtins::fitsInRustU128:5" = global ptr null
@"Builtins::fitsInRustU128:8" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intDivideTruncating:11" = global ptr null
@"Builtins::intDivideTruncating:17" = global ptr null
@"Builtins::intDivideTruncating:25" = global ptr null
@"Builtins::intDivideTruncating:32" = global ptr null
@"Builtins::intDivideTruncating:5" = global ptr null
@"Builtins::intMultiply:11" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intRemainder:11" = global ptr null
@"Builtins::intRemainder:17" = global ptr null
@"Builtins::intRemainder:25" = global ptr null
@"Builtins::intRemainder:32" = global ptr null
@"Builtins::intRemainder:5" = global ptr null
@"Builtins::intShiftRight:11" = global ptr null
@"Builtins::intShiftRight:14" = global ptr null
@"Builtins::intShiftRight:23" = global ptr null
@"Builtins::intShiftRight:24" = global ptr null
@"Builtins::intShiftRight:26:0" = global ptr null
@"Builtins::intShiftRight:27" = global ptr null
@"Builtins::intShiftRight:29" = global ptr null
@"Builtins::intShiftRight:30" = global ptr null
@"Builtins::intShiftRight:31" = global ptr null
@"Builtins::intShiftRight:34" = global ptr null
@"Builtins::intShiftRight:42" = global ptr null
@"Builtins::intShiftRight:49" = global ptr null
@"Builtins::intShiftRight:5" = global ptr null
@"Builtins::intSubtract:11" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::not:1" = global ptr null
@"Builtins::print:11" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Builtins::textGetRange:11" = global ptr null
@"Builtins::textGetRange:14" = global ptr null
@"Builtins::textGetRange:16" = global ptr null
@"Builtins::textGetRange:24" = global ptr null
@"Builtins::textGetRange:25" = global ptr null
@"Builtins::textGetRange:27" = global ptr null
@"Builtins::textGetRange:33" = global ptr null
@"Builtins::textGetRange:36" = global ptr null
@"Builtins::textGetRange:38" = global ptr null
@"Builtins::textGetRange:46" = global ptr null
@"Builtins::textGetRange:47" = global ptr null
@"Builtins::textGetRange:49" = global ptr null
@"Builtins::textGetRange:5" = global ptr null
@"Builtins::textGetRange:53" = global ptr null
@"Builtins::textGetRange:55" = global ptr null
@"Builtins::textGetRange:63" = global ptr null
@"Builtins::textLength:11" = global ptr null
@"Builtins::textLength:5" = global ptr null
@"Builtins::textStartsWith:11" = global ptr null
@"Builtins::textStartsWith:18" = global ptr null
@"Builtins::textStartsWith:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:bool:and:13" = global ptr null
@"Core:bool:and:2" = global ptr null
@"Core:bool:and:4" = global ptr null
@"Core:bool:and:7" = global ptr null
@"Core:bool:and:9" = global ptr null
@"Core:bool:implies:12" = global ptr null
@"Core:bool:implies:15" = global ptr null
@"Core:bool:implies:2" = global ptr null
@"Core:bool:implies:4" = global ptr null
@"Core:bool:implies:7" = global ptr null
@"Core:bool:implies:9" = global ptr null
@"Core:bool:is:1" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:18" = global ptr null
@"Core:bool:lazyAnd:18:13" = global ptr null
@"Core:bool:lazyAnd:18:21" = global ptr null
@"Core:bool:lazyAnd:18:9" = global ptr null
@"Core:bool:lazyAnd:2" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:18" = global ptr null
@"Core:bool:lazyOr:18:10" = global ptr null
@"Core:bool:lazyOr:18:14" = global ptr null
@"Core:bool:lazyOr:18:22" = global ptr null
@"Core:bool:lazyOr:2" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:not:2" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:or:2" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:7" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:check:check:1" = global ptr null
@"Core:check:check:14" = global ptr null
@"Core:check:check:5" = global ptr null
@"Core:check:checkEquals:12" = global ptr null
@"Core:check:checkEquals:13" = global ptr null
@"Core:check:checkEquals:15:0" = global ptr null
@"Core:check:checkEquals:16" = global ptr null
@"Core:check:checkEquals:19" = global ptr null
@"Core:check:checkEquals:20" = global ptr null
@"Core:check:checkEquals:22:0" = global ptr null
@"Core:check:checkEquals:23" = global ptr null
@"Core:check:checkEquals:25" = global ptr null
@"Core:check:checkEquals:26" = global ptr null
@"Core:check:checkEquals:27" = global ptr null
@"Core:check:checkEquals:28" = global ptr null
@"Core:check:checkEquals:29" = global ptr null
@"Core:controlFlow:if:11" = global ptr null
@"Core:controlFlow:if:21" = global ptr null
@"Core:controlFlow:if:23" = global ptr null
@"Core:controlFlow:if:28" = global ptr null
@"Core:controlFlow:if:9" = global ptr null
@"Core:controlFlow:recursive:17" = global ptr null
@"Core:controlFlow:recursive:18:0:3" = global ptr null
@"Core:controlFlow:recursive:18:5" = global ptr null
@"Core:controlFlow:recursive:23" = global ptr null
@"Core:controlFlow:recursive:9" = global ptr null
@"Core:fixedDecimal:floorToInt:18" = global ptr null
@"Core:fixedDecimal:floorToInt:2" = global ptr null
@"Core:fixedDecimal:floorToInt:20" = global ptr null
@"Core:fixedDecimal:floorToInt:21" = global ptr null
@"Core:fixedDecimal:floorToInt:4" = global ptr null
@"Core:fixedDecimal:floorToInt:7" = global ptr null
@"Core:fixedDecimal:fromInt:15" = global ptr null
@"Core:fixedDecimal:fromIntScaled:11" = global ptr null
@"Core:fixedDecimal:fromIntScaled:16" = global ptr null
@"Core:fixedDecimal:is:1" = global ptr null
@"Core:fixedDecimal:is:1:19" = global ptr null
@"Core:fixedDecimal:is:1:minorUnits" = global ptr null
@"Core:fixedDecimal:is:1:scale" = global ptr null
@"Core:fixedDecimal:isScale:18:9" = global ptr null
@"Core:fixedDecimal:isScale:19" = global ptr null
@"Core:fixedDecimal:minorUnits:19" = global ptr null
@"Core:fixedDecimal:minorUnits:2" = global ptr null
@"Core:fixedDecimal:minorUnits:21" = global ptr null
@"Core:fixedDecimal:minorUnits:4" = global ptr null
@"Core:fixedDecimal:scale:19" = global ptr null
@"Core:fixedDecimal:scale:2" = global ptr null
@"Core:fixedDecimal:scale:21" = global ptr null
@"Core:fixedDecimal:scale:4" = global ptr null
@"Core:fixedDecimal:scaleFactor:15" = global ptr null
@"Core:fixedDecimal:scaleFactor:4" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:run:2" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:int:compareTo:20" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:isEven:4" = global ptr null
@"Core:int:isEven:8" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:13" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:22" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:4" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@"Core:int:isNonNegative:16" = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"Core:int:max:14" = global ptr null
@"Core:int:max:17" = global ptr null
@"Core:int:max:4" = global ptr null
@"Core:int:max:9" = global ptr null
@"Core:int:negate:4" = global ptr null
@"Core:int:negate:8" = global ptr null
@"Core:int:pow:12" = global ptr null
@"Core:int:pow:14" = global ptr null
@"Core:int:pow:21:1" = global ptr null
@"Core:int:pow:21:4" = global ptr null
@"Core:int:pow:21:4:4" = global ptr null
@"Core:int:pow:21:4:5:10" = global ptr null
@"Core:int:pow:21:4:5:12" = global ptr null
@"Core:int:pow:21:4:5:5" = global ptr null
@"Core:int:pow:21:4:6:12" = global ptr null
@"Core:int:pow:21:4:6:15" = global ptr null
@"Core:int:pow:21:4:6:17" = global ptr null
@"Core:int:pow:21:4:6:18" = global ptr null
@"Core:int:pow:21:4:6:7" = global ptr null
@"Core:int:pow:21:4:7" = global ptr null
@"Core:int:pow:21:base" = global ptr null
@"Core:int:pow:21:exponent" = global ptr null
@"Core:int:pow:22" = global ptr null
@"Core:int:pow:4" = global ptr null
@"Core:int:pow:9" = global ptr null
@"Core:text:removePrefix:14" = global ptr null
@"Core:text:removePrefix:15:4" = global ptr null
@"Core:text:removePrefix:15:7" = global ptr null
@"Core:text:removePrefix:15:8" = global ptr null
@"Core:text:removePrefix:17" = global ptr null
@"Core:text:removePrefix:4" = global ptr null
@"Core:text:removePrefix:9" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_divide_truncating = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_remainder = global ptr null
@fun_candy_builtin_int_shift_right = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@fun_candy_builtin_print = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_text_get_range = global ptr null
@fun_candy_builtin_text_length = global ptr null
@fun_candy_builtin_text_starts_with = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Base = global ptr null
@tag_Equal = global ptr null
@tag_Exponent = global ptr null
@tag_False = global ptr null
@tag_FixedDecimal = global ptr null
@tag_Function = global ptr null
@tag_Greater = global ptr null
@tag_Int = global ptr null
@tag_Less = global ptr null
@tag_List = global ptr null
@tag_Match = global ptr null
@tag_MinorUnits = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Scale = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@num_3 = global ptr null
@num_4 = global ptr null
@num_5 = global ptr null
@num_10 = global ptr null
@num_340282366920938463463374607431768211455 = global ptr null
@"text_ to be " = global ptr null
@text_. = global ptr null
@"text_. You might want to call `shiftLeft` instead." = global ptr null
@"text_A check failed." = global ptr null
@"text_A check failed: Expected " = global ptr null
@"text_Expected Equal, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected FixedDecimal, got " = global ptr null
@"text_Expected Greater, got " = global ptr null
@"text_Expected Less, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected `0`, got `" = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_Shifts by that much are not yet supported." = global ptr null
@"text_Struct doesn't contain key `Base`: `" = global ptr null
@"text_Struct doesn't contain key `Exponent`: `" = global ptr null
@"text_Struct doesn't contain key `MinorUnits`: `" = global ptr null
@"text_Struct doesn't contain key `Scale`: `" = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_The shift `amount` is negative: " = global ptr null
@"text_You can't divide by zero." = global ptr null
@"text_`." = global ptr null
@"text_`False` was not satisfied" = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`amount | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`dividend | typeIs Int` was not satisfied" = global ptr null
@"text_`divisor | typeIs Int` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`endExclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`endExclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`factorB | typeIs Int` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"text_`function.is0 then` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`int.is minorUnits` was not satisfied" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"text_`is base` was not satisfied" = global ptr null
@"text_`is exponent` was not satisfied" = global ptr null
@"text_`is prefix` was not satisfied" = global ptr null
@"text_`is text` was not satisfied" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`isConditionBool` was not satisfied" = global ptr null
@"text_`isNonNegative exponent` was not satisfied" = global ptr null
@"text_`isScale scale` was not satisfied" = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`prefix | typeIs Text` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied" = global ptr null
@"text_`startInclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`startInclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`subtrahend | typeIs Int` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"text_`value | isNonNegative` was not satisfied" = global ptr null
@"text_`value | typeIs Int` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then" = global ptr null
@"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__not = global ptr null
@fun_Builtins__not_1_equals_then = global ptr null
@fun_Builtins__not_1_equals_then.2 = global ptr null
@fun_Builtins__not_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__not_1_equals_else.4 = global ptr null
@2 = global ptr null
@fun_Builtins__not_1_equals_else.6 = global ptr null
@3 = global ptr null
@fun_Builtins__not_1_case-0_didNotMatch = global ptr null
@fun_Builtins__not_1_equals_then.8 = global ptr null
@fun_Builtins__not_1_equals_then.10 = global ptr null
@fun_Builtins__not_1_equals_else.12 = global ptr null
@4 = global ptr null
@fun_Builtins__not_1_equals_else.14 = global ptr null
@5 = global ptr null
@fun_Builtins__not_1_equals_else.16 = global ptr null
@6 = global ptr null
@fun_Builtins__not_1_case-1_didNotMatch = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_then = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.18 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@7 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.20 = global ptr null
@8 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.22 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.24 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.26 = global ptr null
@9 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.28 = global ptr null
@10 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.30 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.32 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.34 = global ptr null
@11 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.36 = global ptr null
@12 = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.38 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@13 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.40 = global ptr null
@14 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.42 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.44 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.46 = global ptr null
@15 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.48 = global ptr null
@16 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.50 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.52 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.54 = global ptr null
@17 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.56 = global ptr null
@18 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.58 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@19 = global ptr null
@fun_Builtins__ifElse_1_equals_else.60 = global ptr null
@20 = global ptr null
@fun_Builtins__ifElse_1_equals_else.62 = global ptr null
@21 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.64 = global ptr null
@fun_Builtins__ifElse_1_equals_then.66 = global ptr null
@fun_Builtins__ifElse_1_equals_else.68 = global ptr null
@22 = global ptr null
@fun_Builtins__ifElse_1_equals_else.70 = global ptr null
@23 = global ptr null
@fun_Builtins__ifElse_1_equals_else.72 = global ptr null
@24 = global ptr null
@fun_Builtins__ifElse_1_case-0_didNotMatch = global ptr null
@fun_Builtins__intDivideTruncating = global ptr null
@fun_Builtins__intRemainder = global ptr null
@fun_Builtins__intShiftRight = global ptr null
@fun_Builtins__intShiftRight_25 = global ptr null
@fun_Builtins__intShiftRight_26 = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Builtins__listInsert = global ptr null
@fun_Builtins__textGetRange = global ptr null
@"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText" = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_then = global ptr null
@fun_Core_bool_is_1_equals_then.74 = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@25 = global ptr null
@fun_Core_bool_is_1_equals_else.76 = global ptr null
@26 = global ptr null
@fun_Core_bool_is_1_equals_else.78 = global ptr null
@27 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_then.80 = global ptr null
@fun_Core_bool_is_1_equals_then.82 = global ptr null
@fun_Core_bool_is_1_equals_else.84 = global ptr null
@28 = global ptr null
@fun_Core_bool_is_1_equals_else.86 = global ptr null
@29 = global ptr null
@fun_Core_bool_is_1_equals_else.88 = global ptr null
@30 = global ptr null
@fun_Core_bool_is_1_case-0_didNotMatch = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_not_6_equals_then = global ptr null
@fun_Core_bool_not_6_equals_then.90 = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@31 = global ptr null
@fun_Core_bool_not_6_equals_else.92 = global ptr null
@32 = global ptr null
@fun_Core_bool_not_6_equals_else.94 = global ptr null
@33 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_then.96 = global ptr null
@fun_Core_bool_not_6_equals_then.98 = global ptr null
@fun_Core_bool_not_6_equals_else.100 = global ptr null
@34 = global ptr null
@fun_Core_bool_not_6_equals_else.102 = global ptr null
@35 = global ptr null
@fun_Core_bool_not_6_equals_else.104 = global ptr null
@36 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.106 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else = global ptr null
@37 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.108 = global ptr null
@38 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.110 = global ptr null
@39 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.112 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.114 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.116 = global ptr null
@40 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.118 = global ptr null
@41 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.120 = global ptr null
@42 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_lazyOr_18_equals_then = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.122 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else = global ptr null
@43 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.124 = global ptr null
@44 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.126 = global ptr null
@45 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.128 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.130 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.132 = global ptr null
@46 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.134 = global ptr null
@47 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.136 = global ptr null
@48 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_implies = global ptr null
@fun_Core_bool_or_12 = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else.138" = global ptr null
@fun_Core_check_check = global ptr null
@fun_Core_check_check_1_equals_then = global ptr null
@fun_Core_check_check_1_equals_then.140 = global ptr null
@fun_Core_check_check_1_equals_else = global ptr null
@49 = global ptr null
@fun_Core_check_check_1_equals_else.142 = global ptr null
@50 = global ptr null
@fun_Core_check_check_1_equals_else.144 = global ptr null
@51 = global ptr null
@fun_Core_check_check_1_isMatch_then = global ptr null
@fun_Core_check_check_1_isMatch_else = global ptr null
@fun_Core_check_check_1_equals_then.146 = global ptr null
@fun_Core_check_check_1_equals_then.148 = global ptr null
@fun_Core_check_check_1_equals_else.150 = global ptr null
@52 = global ptr null
@fun_Core_check_check_1_equals_else.152 = global ptr null
@53 = global ptr null
@fun_Core_check_check_1_equals_else.154 = global ptr null
@54 = global ptr null
@fun_Core_check_check_1_case-0_didNotMatch = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else.156" = global ptr null
@"fun_anonymous_$generated__needs_condition_else.158" = global ptr null
@fun_Core_check_checkEquals = global ptr null
@fun_Core_check_checkEquals_14 = global ptr null
@fun_Core_check_checkEquals_15 = global ptr null
@fun_Core_check_checkEquals_21 = global ptr null
@fun_Core_check_checkEquals_22 = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Core_int_compareTo = global ptr null
@fun_Core_int_isLessThan = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@fun_Core_int_isGreaterThanOrEqualTo = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@fun_Core_int_isEven = global ptr null
@fun_Core_int_max = global ptr null
@fun_Core_int_max_15 = global ptr null
@fun_Core_int_max_16 = global ptr null
@fun_Core_int_pow_21_4_case-0_matched = global ptr null
@fun_Core_int_pow_21 = global ptr null
@fun_Core_int_pow_21_1_equals_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then = global ptr null
@55 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else = global ptr null
@56 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.160 = global ptr null
@57 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.162 = global ptr null
@58 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.164 = global ptr null
@59 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.166 = global ptr null
@fun_Core_int_pow_21_1_equals_else = global ptr null
@60 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.168 = global ptr null
@fun_Core_int_pow_21_4_equals_else = global ptr null
@61 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch = global ptr null
@fun_Core_int_pow_21_4_case-1_matched = global ptr null
@fun_Core_int_pow_21_4_5 = global ptr null
@fun_Core_int_pow_21_4_6 = global ptr null
@fun_Core_controlFlow_recursive_18 = global ptr null
@fun_Core_controlFlow_recursive_18_0 = global ptr null
@fun_Core_int_pow = global ptr null
@fun_Core_text_removePrefix = global ptr null
@fun_Core_text_removePrefix_15 = global ptr null
@fun_Core_text_removePrefix_16 = global ptr null
@62 = global ptr null
@fun_Core_fixedDecimal_is = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.170 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.172 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.174 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then = global ptr null
@63 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else = global ptr null
@64 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.176 = global ptr null
@65 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.178 = global ptr null
@66 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.180 = global ptr null
@67 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.182 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else = global ptr null
@68 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.184 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.186 = global ptr null
@69 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.188 = global ptr null
@70 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched = global ptr null
@fun_Core_fixedDecimal_is_1_18 = global ptr null
@fun_Core_fixedDecimal_isScale_18 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_didNotMatch = global ptr null
@fun_Core_fixedDecimal_minorUnits = global ptr null
@fun_Core_fixedDecimal_scale = global ptr null
@fun_Core_fixedDecimal_fromIntScaled = global ptr null
@fun_Core_fixedDecimal_isScale_18.190 = global ptr null
@tag_FixedDecimal.191 = global ptr null
@fun_Core_fixedDecimal_floorToInt = global ptr null
@fun_Core_fixedDecimal_isScale_18.193 = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:4" = global ptr null
@"text_`isScale targetScale` was not satisfied" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:9" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:13" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:14" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:24" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:25" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:26" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:23" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:24" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:25" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:26" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:26" = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits = global ptr null
@fun_Core_fixedDecimal_isScale_18.195 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_24 = global ptr null
@fun_Core_fixedDecimal_isScale_18.197 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_25 = global ptr null
@fun_Core_fixedDecimal_isScale_18.199 = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:2" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:4" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:7" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:9" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:20" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:23" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:24" = global ptr null
@tag_ValueA = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:30" = global ptr null
@tag_ValueB = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:35" = global ptr null
@tag_TargetScale = global ptr null
@fun_Core_fixedDecimal_comparableMinorUnits = global ptr null
@"Core:fixedDecimal:add:2" = global ptr null
@"text_`is summandA` was not satisfied" = global ptr null
@"Core:fixedDecimal:add:4" = global ptr null
@"Core:fixedDecimal:add:7" = global ptr null
@"text_`is summandB` was not satisfied" = global ptr null
@"Core:fixedDecimal:add:9" = global ptr null
@"Core:fixedDecimal:add:13" = global ptr null
@"Core:fixedDecimal:add:14" = global ptr null
@"text_Struct doesn't contain key `ValueA`: `" = global ptr null
@"text_Struct doesn't contain key `ValueB`: `" = global ptr null
@"text_Struct doesn't contain key `TargetScale`: `" = global ptr null
@"Core:fixedDecimal:add:valueA" = global ptr null
@"Core:fixedDecimal:add:valueB" = global ptr null
@"Core:fixedDecimal:add:targetScale" = global ptr null
@"Core:fixedDecimal:add:27" = global ptr null
@"Core:fixedDecimal:add:29" = global ptr null
@fun_Core_fixedDecimal_add = global ptr null
@fun_Core_fixedDecimal_add_14_equals_then = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_then = global ptr null
@71 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_else = global ptr null
@72 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_then = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_then.201 = global ptr null
@73 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_else.203 = global ptr null
@74 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_then.205 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_then.207 = global ptr null
@75 = global ptr null
@fun_Core_fixedDecimal_add_14_hasKey_else.209 = global ptr null
@76 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_then.211 = global ptr null
@77 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else.213 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else.215 = global ptr null
@fun_Core_fixedDecimal_add_14_equals_else = global ptr null
@78 = global ptr null
@fun_Core_fixedDecimal_add_14_isMatch_else.217 = global ptr null
@"Core:fixedDecimal:subtract:2" = global ptr null
@"text_`is minuend` was not satisfied" = global ptr null
@"Core:fixedDecimal:subtract:4" = global ptr null
@"Core:fixedDecimal:subtract:7" = global ptr null
@"text_`is subtrahend` was not satisfied" = global ptr null
@"Core:fixedDecimal:subtract:9" = global ptr null
@"Core:fixedDecimal:subtract:13" = global ptr null
@"Core:fixedDecimal:subtract:14" = global ptr null
@"Core:fixedDecimal:subtract:valueA" = global ptr null
@"Core:fixedDecimal:subtract:valueB" = global ptr null
@"Core:fixedDecimal:subtract:targetScale" = global ptr null
@"Core:fixedDecimal:subtract:27" = global ptr null
@"Core:fixedDecimal:subtract:29" = global ptr null
@fun_Core_fixedDecimal_subtract = global ptr null
@fun_Core_fixedDecimal_subtract_14_equals_then = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then = global ptr null
@79 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else = global ptr null
@80 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then.219 = global ptr null
@81 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else.221 = global ptr null
@82 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then.223 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then.225 = global ptr null
@83 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else.227 = global ptr null
@84 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then.229 = global ptr null
@85 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.231 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.233 = global ptr null
@fun_Core_fixedDecimal_subtract_14_equals_else = global ptr null
@86 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.235 = global ptr null
@"Core:fixedDecimal:negate:2" = global ptr null
@"Core:fixedDecimal:negate:4" = global ptr null
@"Core:fixedDecimal:negate:8" = global ptr null
@"Core:fixedDecimal:negate:17" = global ptr null
@"Core:fixedDecimal:negate:20" = global ptr null
@"Core:fixedDecimal:negate:21" = global ptr null
@fun_Core_fixedDecimal_negate = global ptr null
@"text_`is dividend` was not satisfied" = global ptr null
@"text_`is divisor` was not satisfied" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:2" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:4" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:7" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:9" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:14" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:17" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:29" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:37" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:41" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:42" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:valueA" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:valueB" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:56" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:57" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:67" = global ptr null
@"Core:fixedDecimal:divideTruncatingAtScale:69" = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale = global ptr null
@fun_Core_fixedDecimal_isScale_18.237 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then = global ptr null
@87 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else = global ptr null
@88 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.239 = global ptr null
@89 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.241 = global ptr null
@90 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.243 = global ptr null
@91 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.245 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else = global ptr null
@92 = global ptr null
@fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.247 = global ptr null
@"Core:fixedDecimal:compareTo:2" = global ptr null
@"Core:fixedDecimal:compareTo:4" = global ptr null
@"Core:fixedDecimal:compareTo:7" = global ptr null
@"Core:fixedDecimal:compareTo:9" = global ptr null
@"Core:fixedDecimal:compareTo:13" = global ptr null
@"Core:fixedDecimal:compareTo:14" = global ptr null
@"Core:fixedDecimal:compareTo:valueA#1" = global ptr null
@"Core:fixedDecimal:compareTo:valueB#1" = global ptr null
@"Core:fixedDecimal:compareTo:26" = global ptr null
@"Core:fixedDecimal:compareTo:45" = global ptr null
@"Core:fixedDecimal:compareTo:46" = global ptr null
@fun_Core_fixedDecimal_compareTo = global ptr null
@fun_Core_fixedDecimal_compareTo_14_equals_then = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_then = global ptr null
@93 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_else = global ptr null
@94 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_then = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_then.249 = global ptr null
@95 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_hasKey_else.251 = global ptr null
@96 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_then.253 = global ptr null
@97 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_else = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_else.255 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_equals_else = global ptr null
@98 = global ptr null
@fun_Core_fixedDecimal_compareTo_14_isMatch_else.257 = global ptr null
@"Core:fixedDecimal:isGreaterThan:2" = global ptr null
@"Core:fixedDecimal:isGreaterThan:4" = global ptr null
@"Core:fixedDecimal:isGreaterThan:7" = global ptr null
@"Core:fixedDecimal:isGreaterThan:9" = global ptr null
@"Core:fixedDecimal:isGreaterThan:14" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:2" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:4" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:7" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:9" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:13" = global ptr null
@"Core:fixedDecimal:isLessThanOrEqualTo:22" = global ptr null
@fun_Core_fixedDecimal_isLessThanOrEqualTo = global ptr null
@"Core:fixedDecimal:isNegative:2" = global ptr null
@"Core:fixedDecimal:isNegative:4" = global ptr null
@"Core:fixedDecimal:isNegative:7" = global ptr null
@"Core:fixedDecimal:isNegative:17" = global ptr null
@"Core:fixedDecimal:isNonNegative:2" = global ptr null
@"Core:fixedDecimal:isNonNegative:4" = global ptr null
@"Core:fixedDecimal:isNonNegative:7" = global ptr null
@"Core:fixedDecimal:isNonNegative:16" = global ptr null
@"Core:fixedDecimal:absolute:2" = global ptr null
@"Core:fixedDecimal:absolute:4" = global ptr null
@"Core:fixedDecimal:absolute:8" = global ptr null
@"Core:fixedDecimal:absolute:9:2" = global ptr null
@"Core:fixedDecimal:absolute:11" = global ptr null
@fun_Core_fixedDecimal_absolute = global ptr null
@fun_Core_fixedDecimal_absolute_9 = global ptr null
@fun_Core_fixedDecimal_absolute_10 = global ptr null
@"Core:fixedDecimal:approxEquals:2" = global ptr null
@"Core:fixedDecimal:approxEquals:4" = global ptr null
@"Core:fixedDecimal:approxEquals:7" = global ptr null
@"Core:fixedDecimal:approxEquals:9" = global ptr null
@"Core:fixedDecimal:approxEquals:12" = global ptr null
@"text_`is delta` was not satisfied" = global ptr null
@"Core:fixedDecimal:approxEquals:14" = global ptr null
@"Core:fixedDecimal:approxEquals:17" = global ptr null
@"text_`isNonNegative delta` was not satisfied" = global ptr null
@"Core:fixedDecimal:approxEquals:19" = global ptr null
@"Core:fixedDecimal:approxEquals:23" = global ptr null
@"Core:fixedDecimal:approxEquals:25" = global ptr null
@"Core:fixedDecimal:approxEquals:28" = global ptr null
@fun_Core_fixedDecimal_approxEquals = global ptr null
@"Core:fixedDecimal:toText:2" = global ptr null
@"Core:fixedDecimal:toText:4" = global ptr null
@"Core:fixedDecimal:toText:7" = global ptr null
@"Core:fixedDecimal:toText:10:2" = global ptr null
@"Core:fixedDecimal:toText:10:4" = global ptr null
@"Core:fixedDecimal:toText:10:8" = global ptr null
@"Core:fixedDecimal:toText:10:18" = global ptr null
@"Core:fixedDecimal:toText:10:30" = global ptr null
@"Core:fixedDecimal:toText:10:31:10" = global ptr null
@text_1 = global ptr null
@"Core:fixedDecimal:toText:10:31:28" = global ptr null
@"Core:fixedDecimal:toText:10:32:10" = global ptr null
@text_-1 = global ptr null
@"Core:fixedDecimal:toText:10:32:28" = global ptr null
@"Core:fixedDecimal:toText:10:33" = global ptr null
@"Core:fixedDecimal:toText:11" = global ptr null
@"Core:fixedDecimal:toText:20" = global ptr null
@"Core:fixedDecimal:toText:21" = global ptr null
@"Core:fixedDecimal:toText:23:0" = global ptr null
@"Core:fixedDecimal:toText:24" = global ptr null
@"Core:fixedDecimal:toText:27" = global ptr null
@"Core:fixedDecimal:toText:28" = global ptr null
@"Core:fixedDecimal:toText:30:0" = global ptr null
@"Core:fixedDecimal:toText:31" = global ptr null
@"Core:fixedDecimal:toText:32" = global ptr null
@"Core:fixedDecimal:toText:33" = global ptr null
@fun_Core_fixedDecimal_toText = global ptr null
@fun_Core_fixedDecimal_toText_10 = global ptr null
@fun_Core_fixedDecimal_isScale_18.259 = global ptr null
@fun_Core_fixedDecimal_toText_10_31 = global ptr null
@fun_Core_fixedDecimal_toText_10_32 = global ptr null
@fun_Core_fixedDecimal_toText_22 = global ptr null
@fun_Core_fixedDecimal_toText_23 = global ptr null
@fun_Core_fixedDecimal_toText_29 = global ptr null
@fun_Core_fixedDecimal_toText_30 = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:13" = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@"Core:int:fitsInRustU32:15" = global ptr null
@"Core:int:fitsInRustU32:4" = global ptr null
@"Core:int:fitsInRustU32:7" = global ptr null
@"Core:int:fitsInRustU32:9" = global ptr null
@"Core:int:isOdd:4" = global ptr null
@"Core:int:isOdd:8" = global ptr null
@"Core:int:isPositive:4" = global ptr null
@"Core:int:isPositive:8" = global ptr null
@num_4294967295 = global ptr null
@"text_`isNonNegative value` was not satisfied" = global ptr null
@fun_Core_int_isOdd = global ptr null
@"Core:iterator:109" = global ptr null
@"Core:iterator:all:11" = global ptr null
@"Core:iterator:all:15" = global ptr null
@"Core:iterator:all:18:13" = global ptr null
@"Core:iterator:all:18:15" = global ptr null
@"Core:iterator:all:18:2" = global ptr null
@"Core:iterator:all:18:26" = global ptr null
@"Core:iterator:all:19" = global ptr null
@"Core:iterator:all:9" = global ptr null
@"Core:iterator:any:11" = global ptr null
@"Core:iterator:any:15" = global ptr null
@"Core:iterator:any:18:13" = global ptr null
@"Core:iterator:any:18:15" = global ptr null
@"Core:iterator:any:18:2" = global ptr null
@"Core:iterator:any:18:26" = global ptr null
@"Core:iterator:any:19" = global ptr null
@"Core:iterator:any:9" = global ptr null
@"Core:iterator:chunked:11" = global ptr null
@"Core:iterator:chunked:21" = global ptr null
@"Core:iterator:chunked:23" = global ptr null
@"Core:iterator:chunked:27" = global ptr null
@"Core:iterator:chunked:32" = global ptr null
@"Core:iterator:ensure:11" = global ptr null
@"Core:iterator:ensure:15" = global ptr null
@"Core:iterator:ensure:19:2" = global ptr null
@"Core:iterator:ensure:20" = global ptr null
@"Core:iterator:ensure:9" = global ptr null
@"Core:iterator:foldLeft:14" = global ptr null
@"Core:iterator:foldLeft:16" = global ptr null
@"Core:iterator:foldLeft:23:1" = global ptr null
@"Core:iterator:foldLeft:23:4" = global ptr null
@"Core:iterator:foldLeft:23:5" = global ptr null
@"Core:iterator:foldLeft:23:5:10" = global ptr null
@"Core:iterator:foldLeft:23:5:8" = global ptr null
@"Core:iterator:foldLeft:23:5:item" = global ptr null
@"Core:iterator:foldLeft:23:5:rest" = global ptr null
@"Core:iterator:foldLeft:23:iterator" = global ptr null
@"Core:iterator:foldLeft:23:value" = global ptr null
@"Core:iterator:foldLeft:24" = global ptr null
@"Core:iterator:foldLeft:3" = global ptr null
@"Core:iterator:fromList:11" = global ptr null
@"Core:iterator:fromList:22" = global ptr null
@"Core:iterator:fromList:23:10" = global ptr null
@"Core:iterator:fromList:24" = global ptr null
@"Core:iterator:generate:11" = global ptr null
@"Core:iterator:generate:21" = global ptr null
@"Core:iterator:generate:23" = global ptr null
@"Core:iterator:generate:33" = global ptr null
@"Core:iterator:generate:35" = global ptr null
@"Core:iterator:generate:45" = global ptr null
@"Core:iterator:generate:47" = global ptr null
@"Core:iterator:generate:50:6:16" = global ptr null
@"Core:iterator:generate:50:6:4" = global ptr null
@"Core:iterator:generate:50:7" = global ptr null
@"Core:iterator:generate:51" = global ptr null
@"Core:iterator:generateWithState:11" = global ptr null
@"Core:iterator:generateWithState:14:1:2" = global ptr null
@"Core:iterator:generateWithState:14:1:3" = global ptr null
@"Core:iterator:generateWithState:14:1:3:19" = global ptr null
@"Core:iterator:generateWithState:14:1:3:20" = global ptr null
@"Core:iterator:generateWithState:14:1:3:22:0" = global ptr null
@"Core:iterator:generateWithState:14:1:3:23" = global ptr null
@"Core:iterator:generateWithState:14:1:3:25" = global ptr null
@"Core:iterator:generateWithState:14:1:3:26" = global ptr null
@"Core:iterator:generateWithState:14:1:3:27" = global ptr null
@"Core:iterator:generateWithState:14:1:3:6" = global ptr null
@"Core:iterator:generateWithState:14:1:3:item" = global ptr null
@"Core:iterator:generateWithState:14:1:3:state" = global ptr null
@"Core:iterator:generateWithState:15" = global ptr null
@"Core:iterator:generateWithState:9" = global ptr null
@"Core:iterator:isEmpty:3" = global ptr null
@"Core:iterator:isEmpty:7" = global ptr null
@"Core:iterator:joinToText:12:11" = global ptr null
@"Core:iterator:joinToText:12:22" = global ptr null
@"Core:iterator:joinToText:13" = global ptr null
@"Core:iterator:joinToText:3" = global ptr null
@"Core:iterator:length:3" = global ptr null
@"Core:iterator:length:6" = global ptr null
@"Core:iterator:length:8" = global ptr null
@"Core:iterator:map:14" = global ptr null
@"Core:iterator:map:16" = global ptr null
@"Core:iterator:map:19:2" = global ptr null
@"Core:iterator:map:19:3" = global ptr null
@"Core:iterator:map:19:3:5" = global ptr null
@"Core:iterator:map:19:3:item" = global ptr null
@"Core:iterator:map:19:3:rest" = global ptr null
@"Core:iterator:map:20" = global ptr null
@"Core:iterator:map:3" = global ptr null
@"Core:iterator:next:17" = global ptr null
@"Core:iterator:next:3" = global ptr null
@"Core:iterator:next:6" = global ptr null
@"Core:iterator:next:nextFunction" = global ptr null
@"Core:iterator:reduceLeft:11" = global ptr null
@"Core:iterator:reduceLeft:15" = global ptr null
@"Core:iterator:reduceLeft:17" = global ptr null
@"Core:iterator:reduceLeft:18" = global ptr null
@"Core:iterator:reduceLeft:18:14" = global ptr null
@"Core:iterator:reduceLeft:18:item" = global ptr null
@"Core:iterator:reduceLeft:18:rest" = global ptr null
@"Core:iterator:reduceLeft:9" = global ptr null
@"Core:iterator:skip:16" = global ptr null
@"Core:iterator:skip:26" = global ptr null
@"Core:iterator:skip:28" = global ptr null
@"Core:iterator:skip:3" = global ptr null
@"Core:iterator:skip:30:6:1" = global ptr null
@"Core:iterator:skip:30:6:7:2" = global ptr null
@"Core:iterator:skip:30:6:8:2" = global ptr null
@"Core:iterator:skip:30:6:8:3" = global ptr null
@"Core:iterator:skip:30:6:8:3:15" = global ptr null
@"Core:iterator:skip:30:6:8:3:17" = global ptr null
@"Core:iterator:skip:30:6:8:3:rest" = global ptr null
@"Core:iterator:skip:30:6:9" = global ptr null
@"Core:iterator:skip:30:6:iterator" = global ptr null
@"Core:iterator:skip:30:6:n" = global ptr null
@"Core:iterator:skip:30:7" = global ptr null
@"Core:iterator:sum:19" = global ptr null
@"Core:iterator:sum:3" = global ptr null
@"Core:iterator:sum:5:17" = global ptr null
@"Core:iterator:sum:6" = global ptr null
@"Core:iterator:sum:8:10" = global ptr null
@"Core:iterator:sum:9" = global ptr null
@"Core:iterator:take:11" = global ptr null
@"Core:iterator:take:21" = global ptr null
@"Core:iterator:take:23" = global ptr null
@"Core:iterator:take:27" = global ptr null
@"Core:iterator:take:29" = global ptr null
@"Core:iterator:take:31:1" = global ptr null
@"Core:iterator:take:31:12" = global ptr null
@"Core:iterator:take:31:index" = global ptr null
@"Core:iterator:take:31:item" = global ptr null
@"Core:iterator:take:32" = global ptr null
@"Core:iterator:take:34:7" = global ptr null
@"Core:iterator:take:35" = global ptr null
@"Core:iterator:takeWhile:3" = global ptr null
@"Core:iterator:takeWhile:7:2" = global ptr null
@"Core:iterator:takeWhile:7:3" = global ptr null
@"Core:iterator:takeWhile:7:3:4" = global ptr null
@"Core:iterator:takeWhile:7:3:7" = global ptr null
@"Core:iterator:takeWhile:7:3:item" = global ptr null
@"Core:iterator:takeWhile:7:3:rest" = global ptr null
@"Core:iterator:takeWhile:8" = global ptr null
@"Core:iterator:toList:3" = global ptr null
@"Core:iterator:toList:6:10" = global ptr null
@"Core:iterator:toList:7" = global ptr null
@"Core:iterator:where:14" = global ptr null
@"Core:iterator:where:16" = global ptr null
@"Core:iterator:where:19:2:2" = global ptr null
@"Core:iterator:where:19:2:3" = global ptr null
@"Core:iterator:where:19:2:3:4" = global ptr null
@"Core:iterator:where:19:2:3:6:2" = global ptr null
@"Core:iterator:where:19:2:3:6:4" = global ptr null
@"Core:iterator:where:19:2:3:6:5" = global ptr null
@"Core:iterator:where:19:2:3:6:5:item" = global ptr null
@"Core:iterator:where:19:2:3:6:5:rest" = global ptr null
@"Core:iterator:where:19:2:3:7" = global ptr null
@"Core:iterator:where:19:2:3:item" = global ptr null
@"Core:iterator:where:19:2:3:rest" = global ptr null
@"Core:iterator:where:19:3" = global ptr null
@"Core:iterator:where:20" = global ptr null
@"Core:iterator:where:3" = global ptr null
@"Core:iterator:windowed:16" = global ptr null
@"Core:iterator:windowed:26" = global ptr null
@"Core:iterator:windowed:28" = global ptr null
@"Core:iterator:windowed:3" = global ptr null
@"Core:iterator:windowed:40" = global ptr null
@"Core:iterator:windowed:50" = global ptr null
@"Core:iterator:windowed:52" = global ptr null
@"Core:iterator:windowed:62" = global ptr null
@"Core:iterator:windowed:64" = global ptr null
@"Core:iterator:windowed:67:16" = global ptr null
@"Core:iterator:windowed:67:22" = global ptr null
@"Core:iterator:windowed:67:26:7" = global ptr null
@"Core:iterator:windowed:67:28" = global ptr null
@"Core:iterator:windowed:67:3" = global ptr null
@"Core:iterator:windowed:67:5" = global ptr null
@"Core:iterator:windowed:68" = global ptr null
@"Core:iterator:withIndex:11:1" = global ptr null
@"Core:iterator:withIndex:11:4" = global ptr null
@"Core:iterator:withIndex:11:5" = global ptr null
@"Core:iterator:withIndex:11:5:22" = global ptr null
@"Core:iterator:withIndex:11:5:item" = global ptr null
@"Core:iterator:withIndex:11:5:rest" = global ptr null
@"Core:iterator:withIndex:11:index" = global ptr null
@"Core:iterator:withIndex:11:iterator" = global ptr null
@"Core:iterator:withIndex:12" = global ptr null
@"Core:iterator:withIndex:3" = global ptr null
@"Core:iterator:wrapSafe:11" = global ptr null
@"Core:iterator:wrapSafe:12:9" = global ptr null
@"Core:iterator:wrapSafe:16:1" = global ptr null
@"Core:iterator:wrapSafe:16:13" = global ptr null
@"Core:iterator:wrapSafe:16:1:10" = global ptr null
@"Core:iterator:wrapSafe:16:1:function" = global ptr null
@"Core:iterator:wrapSafe:16:22" = global ptr null
@"Core:iterator:wrapSafe:16:24" = global ptr null
@"Core:iterator:wrapSafe:16:26:10" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:19" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:7" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:item" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:rest" = global ptr null
@"Core:iterator:wrapSafe:16:26:9" = global ptr null
@"Core:iterator:wrapSafe:17" = global ptr null
@"Core:iterator:wrapSafe:9" = global ptr null
@"Core:list:append:11" = global ptr null
@"Core:list:append:4" = global ptr null
@"Core:list:append:9" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:is:1:_" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:2" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:unwrapOr:2" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@"Core:result:unwrapOrElse:14" = global ptr null
@"Core:result:unwrapOrElse:16" = global ptr null
@"Core:result:unwrapOrElse:2" = global ptr null
@"Core:result:unwrapOrElse:20:9" = global ptr null
@"Core:result:unwrapOrElse:21" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@tag_Empty = global ptr null
@tag_Error = global ptr null
@tag_Index = global ptr null
@tag_Item = global ptr null
@tag_Iterator = global ptr null
@tag_More = global ptr null
@tag_N = global ptr null
@tag_Ok = global ptr null
@tag_Rest = global ptr null
@tag_State = global ptr null
@tag_Value = global ptr null
@text_ = global ptr null
@"text_Can't `reduceLeft` an empty iterator" = global ptr null
@"text_Expected Empty, got " = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected Iterator, got " = global ptr null
@"text_Expected More, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Iterator items need to be ints." = global ptr null
@"text_Struct doesn't contain key `Index`: `" = global ptr null
@"text_Struct doesn't contain key `Item`: `" = global ptr null
@"text_Struct doesn't contain key `Iterator`: `" = global ptr null
@"text_Struct doesn't contain key `N`: `" = global ptr null
@"text_Struct doesn't contain key `Rest`: `" = global ptr null
@"text_Struct doesn't contain key `State`: `" = global ptr null
@"text_Struct doesn't contain key `Value`: `" = global ptr null
@"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `" = global ptr null
@"text_The guard needs to panic." = global ptr null
@"text_`" = global ptr null
@"text_`all` needs an iterator." = global ptr null
@"text_`any` needs an iterator." = global ptr null
@"text_`bool.is allowPartialWindows` was not satisfied" = global ptr null
@"text_`bool.is itemResult` was not satisfied" = global ptr null
@"text_`chunked` needs an iterator." = global ptr null
@"text_`ensure` needs an iterator." = global ptr null
@"text_`foldLeft` needs an iterator." = global ptr null
@"text_`function.is0 defaultGetter` was not satisfied" = global ptr null
@"text_`function.is0 notIteratorGuard` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 guard` was not satisfied" = global ptr null
@"text_`function.is1 mapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`function.is1 tester` was not satisfied" = global ptr null
@"text_`function.is1 valueGetter` was not satisfied" = global ptr null
@"text_`function.is2 combine` was not satisfied" = global ptr null
@"text_`int.fitsInRustU32 length` was not satisfied" = global ptr null
@"text_`int.is length` was not satisfied" = global ptr null
@"text_`int.is n` was not satisfied" = global ptr null
@"text_`int.is size` was not satisfied" = global ptr null
@"text_`int.is step` was not satisfied" = global ptr null
@"text_`int.isNonNegative length` was not satisfied" = global ptr null
@"text_`int.isNonNegative n` was not satisfied" = global ptr null
@"text_`int.isPositive size` was not satisfied" = global ptr null
@"text_`int.isPositive step` was not satisfied" = global ptr null
@"text_`is list` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`isEmpty` needs an iterator." = global ptr null
@"text_`joinToText` needs an iterator." = global ptr null
@"text_`length` needs an iterator." = global ptr null
@"text_`list.is l` was not satisfied" = global ptr null
@"text_`map` needs an iterator." = global ptr null
@"text_`next` needs an iterator." = global ptr null
@"text_`reduceLeft` needs an iterator." = global ptr null
@"text_`skip` needs an iterator." = global ptr null
@"text_`sum` needs an iterator." = global ptr null
@"text_`takeWhile` needs an iterator." = global ptr null
@"text_`take` needs an iterator." = global ptr null
@"text_`text.is item` was not satisfied" = global ptr null
@"text_`toList` needs an iterator." = global ptr null
@"text_`where` needs an iterator." = global ptr null
@"text_`windowed` needs an iterator." = global ptr null
@"text_`withIndex` needs an iterator." = global ptr null
@fun_Core_result_is = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.261 = global ptr null
@fun_Core_result_is_1_equals_then.263 = global ptr null
@99 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@fun_Core_result_is_1_equals_else.265 = global ptr null
@100 = global ptr null
@fun_Core_result_is_1_equals_else.267 = global ptr null
@101 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.269 = global ptr null
@fun_Core_result_is_1_equals_then.271 = global ptr null
@fun_Core_result_is_1_equals_then.273 = global ptr null
@102 = global ptr null
@fun_Core_result_is_1_equals_else.275 = global ptr null
@fun_Core_result_is_1_equals_else.277 = global ptr null
@103 = global ptr null
@fun_Core_result_is_1_equals_else.279 = global ptr null
@104 = global ptr null
@fun_Core_result_is_1_case-0_matched = global ptr null
@fun_Core_result_is_1_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.281 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.283 = global ptr null
@105 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.285 = global ptr null
@106 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.287 = global ptr null
@107 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.289 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.291 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.293 = global ptr null
@108 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.295 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.297 = global ptr null
@109 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.299 = global ptr null
@110 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19" = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@fun_Core_result_unwrapOrElse_20 = global ptr null
@fun_Core_list_append = global ptr null
@"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched" = global ptr null
@fun_Core_iterator_wrapSafe = global ptr null
@fun_Core_iterator_wrapSafe_12 = global ptr null
@fun_Core_iterator_wrapSafe_16 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then.301 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then.303 = global ptr null
@111 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else.305 = global ptr null
@112 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else.307 = global ptr null
@113 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_case-0_matched = global ptr null
@fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_26 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.309 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else = global ptr null
@114 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.311 = global ptr null
@115 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.313 = global ptr null
@116 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.315 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.317 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.319 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.321 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_then = global ptr null
@117 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_else = global ptr null
@118 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_then = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.323 = global ptr null
@119 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.325 = global ptr null
@120 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.327 = global ptr null
@121 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_else = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.329 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.331 = global ptr null
@122 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.333 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.335 = global ptr null
@123 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.337 = global ptr null
@124 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-1_matched = global ptr null
@tag_More.338 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch = global ptr null
@tag_Iterator.339 = global ptr null
@fun_Core_controlFlow_recursive_18.341 = global ptr null
@fun_Core_controlFlow_recursive_18_0.343 = global ptr null
@fun_Core_iterator_next = global ptr null
@fun_Core_iterator_next_2 = global ptr null
@fun_Core_iterator_next_6_equals_then = global ptr null
@fun_Core_iterator_next_6_equals_then.345 = global ptr null
@fun_Core_iterator_next_6_equals_then.347 = global ptr null
@125 = global ptr null
@fun_Core_iterator_next_6_equals_else = global ptr null
@fun_Core_iterator_next_6_equals_else.349 = global ptr null
@126 = global ptr null
@fun_Core_iterator_next_6_equals_else.351 = global ptr null
@127 = global ptr null
@fun_Core_iterator_next_6_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState = global ptr null
@fun_Core_iterator_generateWithState_14 = global ptr null
@fun_Core_iterator_generateWithState_14_1 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.353 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.355 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.357 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_then = global ptr null
@128 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_else = global ptr null
@129 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_then = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_then.359 = global ptr null
@130 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_else.361 = global ptr null
@131 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_then.363 = global ptr null
@132 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_else.365 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else = global ptr null
@133 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.367 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.369 = global ptr null
@134 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.371 = global ptr null
@135 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-0_matched = global ptr null
@tag_More.372 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.374 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.376 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.378 = global ptr null
@136 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.380 = global ptr null
@137 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.382 = global ptr null
@138 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-2_matched = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_21 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_22 = global ptr null
@tag_Iterator.383 = global ptr null
@fun_Core_controlFlow_recursive_18.385 = global ptr null
@fun_Core_controlFlow_recursive_18_0.387 = global ptr null
@fun_Core_iterator_generate = global ptr null
@fun_Core_iterator_generate_50 = global ptr null
@fun_Core_iterator_generate_50_6 = global ptr null
@tag_More.388 = global ptr null
@fun_Core_iterator_map = global ptr null
@fun_Core_iterator_map_2 = global ptr null
@fun_Core_iterator_map_19 = global ptr null
@fun_Core_iterator_map_19_3_equals_then = global ptr null
@fun_Core_iterator_map_19_3_equals_then.390 = global ptr null
@fun_Core_iterator_map_19_3_equals_else = global ptr null
@139 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.392 = global ptr null
@140 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.394 = global ptr null
@141 = global ptr null
@fun_Core_iterator_map_19_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_map_19_3_equals_then.396 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.398 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.400 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.402 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_then = global ptr null
@142 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_else = global ptr null
@143 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_then = global ptr null
@fun_Core_iterator_map_19_3_hasKey_then.404 = global ptr null
@144 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_else.406 = global ptr null
@145 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_then.408 = global ptr null
@146 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_else = global ptr null
@fun_Core_iterator_map_19_3_isMatch_else.410 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.412 = global ptr null
@147 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.414 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.416 = global ptr null
@148 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.418 = global ptr null
@149 = global ptr null
@fun_Core_iterator_map_19_3_case-1_matched = global ptr null
@tag_More.419 = global ptr null
@fun_Core_iterator_map_19_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then = global ptr null
@150 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else = global ptr null
@151 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then.421 = global ptr null
@152 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else.423 = global ptr null
@153 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then.425 = global ptr null
@154 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.427 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_else = global ptr null
@155 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.429 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.431 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else = global ptr null
@156 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.433 = global ptr null
@157 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.435 = global ptr null
@158 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.437 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.439 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.441 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.443 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then = global ptr null
@159 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else = global ptr null
@160 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then.445 = global ptr null
@161 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else.447 = global ptr null
@162 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then.449 = global ptr null
@163 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else.451 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.453 = global ptr null
@164 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.455 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.457 = global ptr null
@165 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.459 = global ptr null
@166 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_matched = global ptr null
@tag_More.460 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_ensure = global ptr null
@fun_Core_iterator_ensure_14 = global ptr null
@fun_Core_iterator_ensure_19 = global ptr null
@fun_Core_iterator_foldLeft = global ptr null
@fun_Core_iterator_foldLeft_2 = global ptr null
@fun_Core_iterator_foldLeft_23 = global ptr null
@fun_Core_iterator_foldLeft_23_1_equals_then = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_then = global ptr null
@167 = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_else = global ptr null
@168 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_then.462 = global ptr null
@169 = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_else.464 = global ptr null
@170 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_then.466 = global ptr null
@171 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else.468 = global ptr null
@fun_Core_iterator_foldLeft_23_1_equals_else = global ptr null
@172 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else.470 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.472 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else = global ptr null
@173 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.474 = global ptr null
@174 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.476 = global ptr null
@175 = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-0_matched = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.478 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.480 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.482 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.484 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_then = global ptr null
@176 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_else = global ptr null
@177 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_then.486 = global ptr null
@178 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_else.488 = global ptr null
@179 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_then.490 = global ptr null
@180 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_else.492 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.494 = global ptr null
@181 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.496 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.498 = global ptr null
@182 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.500 = global ptr null
@183 = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-1_matched = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_18.502 = global ptr null
@fun_Core_controlFlow_recursive_18_0.504 = global ptr null
@tag_Error.505 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-0_matched = global ptr null
@fun_Core_iterator_reduceLeft = global ptr null
@fun_Core_iterator_reduceLeft_14 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.507 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else = global ptr null
@184 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.509 = global ptr null
@185 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.511 = global ptr null
@186 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-0_didNotMatch = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.513 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.515 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.517 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.519 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_then = global ptr null
@187 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_else = global ptr null
@188 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_then = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_then.521 = global ptr null
@189 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_else.523 = global ptr null
@190 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_then.525 = global ptr null
@191 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_else = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_else.527 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.529 = global ptr null
@192 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.531 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.533 = global ptr null
@193 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.535 = global ptr null
@194 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-1_matched = global ptr null
@tag_Ok.536 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-1_didNotMatch = global ptr null
@fun_Core_iterator_sum_8 = global ptr null
@fun_Core_iterator_sum = global ptr null
@fun_Core_iterator_sum_2 = global ptr null
@fun_Core_iterator_sum_5 = global ptr null
@fun_Core_iterator_length_5 = global ptr null
@fun_Core_iterator_all = global ptr null
@fun_Core_iterator_all_14 = global ptr null
@fun_Core_iterator_all_18 = global ptr null
@fun_Core_bool_and_12 = global ptr null
@fun_Core_iterator_any = global ptr null
@fun_Core_iterator_any_14 = global ptr null
@fun_Core_iterator_any_18 = global ptr null
@fun_Core_bool_or_12.538 = global ptr null
@fun_Core_iterator_joinToText = global ptr null
@fun_Core_iterator_joinToText_2 = global ptr null
@fun_Core_iterator_joinToText_12 = global ptr null
@fun_Core_iterator_where = global ptr null
@fun_Core_iterator_where_2 = global ptr null
@fun_Core_iterator_where_19 = global ptr null
@fun_Core_iterator_where_19_2 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.540 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else = global ptr null
@195 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.542 = global ptr null
@196 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.544 = global ptr null
@197 = global ptr null
@fun_Core_iterator_where_19_2_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.546 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.548 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.550 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.552 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_then = global ptr null
@198 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_else = global ptr null
@199 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_then = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_then.554 = global ptr null
@200 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_else.556 = global ptr null
@201 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_then.558 = global ptr null
@202 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_else = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_else.560 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.562 = global ptr null
@203 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.564 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.566 = global ptr null
@204 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.568 = global ptr null
@205 = global ptr null
@fun_Core_iterator_where_19_2_3_case-1_matched = global ptr null
@fun_Core_iterator_where_19_2_3_5 = global ptr null
@tag_More.569 = global ptr null
@fun_Core_iterator_where_19_2_3_6 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.571 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else = global ptr null
@206 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.573 = global ptr null
@207 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.575 = global ptr null
@208 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.577 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.579 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.581 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.583 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_then = global ptr null
@209 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_else = global ptr null
@210 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_then = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_then.585 = global ptr null
@211 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_else.587 = global ptr null
@212 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_then.589 = global ptr null
@213 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_else = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_else.591 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.593 = global ptr null
@214 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.595 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.597 = global ptr null
@215 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.599 = global ptr null
@216 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-1_matched = global ptr null
@tag_More.600 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_18.602 = global ptr null
@fun_Core_controlFlow_recursive_18_0.604 = global ptr null
@fun_Core_iterator_takeWhile = global ptr null
@fun_Core_iterator_takeWhile_2 = global ptr null
@fun_Core_iterator_takeWhile_7 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.606 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else = global ptr null
@217 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.608 = global ptr null
@218 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.610 = global ptr null
@219 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.612 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.614 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.616 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.618 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then = global ptr null
@220 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else = global ptr null
@221 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then.620 = global ptr null
@222 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else.622 = global ptr null
@223 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then.624 = global ptr null
@224 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else.626 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.628 = global ptr null
@225 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.630 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.632 = global ptr null
@226 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.634 = global ptr null
@227 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_matched = global ptr null
@fun_Core_iterator_takeWhile_7_3_5 = global ptr null
@tag_More.635 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_2 = global ptr null
@fun_Core_iterator_take_34 = global ptr null
@fun_Core_iterator_take = global ptr null
@fun_Core_iterator_take_26 = global ptr null
@fun_Core_iterator_take_31 = global ptr null
@fun_Core_iterator_take_31_1_equals_then = global ptr null
@fun_Core_iterator_take_31_1_hasKey_then = global ptr null
@228 = global ptr null
@fun_Core_iterator_take_31_1_hasKey_else = global ptr null
@229 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_then = global ptr null
@fun_Core_iterator_take_31_1_hasKey_then.637 = global ptr null
@230 = global ptr null
@fun_Core_iterator_take_31_1_hasKey_else.639 = global ptr null
@231 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_then.641 = global ptr null
@232 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else.643 = global ptr null
@fun_Core_iterator_take_31_1_equals_else = global ptr null
@233 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else.645 = global ptr null
@fun_Core_iterator_skip_30_6 = global ptr null
@fun_Core_iterator_skip_30_6_1_equals_then = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_then = global ptr null
@234 = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_else = global ptr null
@235 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_then = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_then.647 = global ptr null
@236 = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_else.649 = global ptr null
@237 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_then.651 = global ptr null
@238 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else.653 = global ptr null
@fun_Core_iterator_skip_30_6_1_equals_else = global ptr null
@239 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else.655 = global ptr null
@fun_Core_iterator_skip_30_6_7 = global ptr null
@fun_Core_iterator_skip_30_6_8 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.657 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else = global ptr null
@240 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.659 = global ptr null
@241 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.661 = global ptr null
@242 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.663 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.665 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.667 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.669 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_hasKey_then = global ptr null
@243 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_hasKey_else = global ptr null
@244 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_isMatch_then = global ptr null
@245 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_isMatch_else = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.671 = global ptr null
@246 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.673 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.675 = global ptr null
@247 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.677 = global ptr null
@248 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-1_matched = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_18.679 = global ptr null
@fun_Core_controlFlow_recursive_18_0.681 = global ptr null
@fun_Core_iterator_skip = global ptr null
@fun_Core_iterator_skip_2 = global ptr null
@fun_Core_iterator_skip_30 = global ptr null
@tag_Iterator.682 = global ptr null
@fun_Core_iterator_fromList = global ptr null
@fun_Core_iterator_fromList_23 = global ptr null
@249 = global ptr null
@fun_Core_iterator_toList_6 = global ptr null
@fun_Core_iterator_toList_2 = global ptr null
@fun_Core_iterator_windowed = global ptr null
@fun_Core_iterator_windowed_2 = global ptr null
@fun_Core_iterator_windowed_67 = global ptr null
@fun_Core_iterator_windowed_67_20 = global ptr null
@fun_Core_iterator_windowed_67_21 = global ptr null
@fun_Core_iterator_windowed_67_26 = global ptr null
@tag_More.683 = global ptr null
@fun_Core_iterator_chunked = global ptr null
@fun_Core_iterator_chunked_26 = global ptr null
@250 = global ptr null
@num_6 = global ptr null
@num_7 = global ptr null
@num_8 = global ptr null
@num_9 = global ptr null
@251 = global ptr null
@"Core:iterator:123" = global ptr null
@"Core:iterator:127" = global ptr null
@"Core:iterator:128" = global ptr null
@fun_Core_iterator_128_equals_then = global ptr null
@fun_Core_iterator_128_equals_then.685 = global ptr null
@fun_Core_iterator_128_equals_then.687 = global ptr null
@fun_Core_iterator_128_equals_then.689 = global ptr null
@fun_Core_iterator_128_hasKey_then = global ptr null
@252 = global ptr null
@fun_Core_iterator_128_hasKey_else = global ptr null
@253 = global ptr null
@fun_Core_iterator_128_isMatch_then = global ptr null
@fun_Core_iterator_128_hasKey_then.691 = global ptr null
@254 = global ptr null
@fun_Core_iterator_128_hasKey_else.693 = global ptr null
@255 = global ptr null
@fun_Core_iterator_128_isMatch_then.695 = global ptr null
@256 = global ptr null
@fun_Core_iterator_128_isMatch_else = global ptr null
@fun_Core_iterator_128_isMatch_else.697 = global ptr null
@fun_Core_iterator_128_equals_else = global ptr null
@257 = global ptr null
@fun_Core_iterator_128_equals_else.699 = global ptr null
@fun_Core_iterator_128_equals_else.701 = global ptr null
@258 = global ptr null
@fun_Core_iterator_128_equals_else.703 = global ptr null
@259 = global ptr null
@fun_Core_iterator_128_isMatch_else.705 = global ptr null
@"Core:iterator:item" = global ptr null
@"Core:iterator:rest" = global ptr null
@"Core:iterator:133" = global ptr null
@"Core:iterator:136" = global ptr null
@"Core:iterator:137" = global ptr null
@fun_Core_iterator_137_equals_then = global ptr null
@fun_Core_iterator_137_equals_then.707 = global ptr null
@fun_Core_iterator_137_equals_then.709 = global ptr null
@fun_Core_iterator_137_equals_then.711 = global ptr null
@fun_Core_iterator_137_hasKey_then = global ptr null
@260 = global ptr null
@fun_Core_iterator_137_hasKey_else = global ptr null
@261 = global ptr null
@fun_Core_iterator_137_isMatch_then = global ptr null
@fun_Core_iterator_137_hasKey_then.713 = global ptr null
@262 = global ptr null
@fun_Core_iterator_137_hasKey_else.715 = global ptr null
@263 = global ptr null
@fun_Core_iterator_137_isMatch_then.717 = global ptr null
@264 = global ptr null
@fun_Core_iterator_137_isMatch_else = global ptr null
@fun_Core_iterator_137_isMatch_else.719 = global ptr null
@fun_Core_iterator_137_equals_else = global ptr null
@265 = global ptr null
@fun_Core_iterator_137_equals_else.721 = global ptr null
@fun_Core_iterator_137_equals_else.723 = global ptr null
@266 = global ptr null
@fun_Core_iterator_137_equals_else.725 = global ptr null
@267 = global ptr null
@fun_Core_iterator_137_isMatch_else.727 = global ptr null
@"Core:iterator:item#1" = global ptr null
@"Core:iterator:rest#1" = global ptr null
@"Core:iterator:142" = global ptr null
@"Core:iterator:147" = global ptr null
@fun_Core_iterator_isEmpty_2 = global ptr null
@"Core:iterator:149" = global ptr null
@"Core:iterator:154" = global ptr null
@"Core:iterator:155" = global ptr null
@fun_Core_iterator_isEmpty_2.729 = global ptr null
@"Core:iterator:157" = global ptr null
@"Core:iterator:161:10" = global ptr null
@fun_Core_iterator_161 = global ptr null
@"Core:iterator:162" = global ptr null
@"Core:iterator:164" = global ptr null
@fun_Core_iterator_toList_2.731 = global ptr null
@268 = global ptr null
@"Core:iterator:169" = global ptr null
@"Core:iterator:173" = global ptr null
@"Core:iterator:175" = global ptr null
@"Core:iterator:179" = global ptr null
@fun_Core_iterator_length_2 = global ptr null
@"Core:iterator:181" = global ptr null
@"Core:iterator:185:9" = global ptr null
@fun_Core_iterator_185 = global ptr null
@"Core:iterator:186" = global ptr null
@"Core:iterator:188" = global ptr null
@fun_Core_iterator_192 = global ptr null
@"Core:iterator:193" = global ptr null
@"Core:iterator:195" = global ptr null
@"Core:iterator:200" = global ptr null
@"Core:iterator:202" = global ptr null
@text_123 = global ptr null
@"Core:iterator:210" = global ptr null
@"Core:iterator:214:9" = global ptr null
@fun_Core_iterator_214 = global ptr null
@"Core:iterator:215" = global ptr null
@"Core:iterator:217" = global ptr null
@fun_Core_iterator_toList_2.733 = global ptr null
@269 = global ptr null
@"Core:iterator:224" = global ptr null
@"Core:iterator:228:10" = global ptr null
@fun_Core_iterator_228 = global ptr null
@"Core:iterator:229" = global ptr null
@"Core:iterator:231" = global ptr null
@fun_Core_iterator_toList_2.735 = global ptr null
@"Core:iterator:236" = global ptr null
@"Core:iterator:241" = global ptr null
@"Core:iterator:243" = global ptr null
@fun_Core_iterator_toList_2.737 = global ptr null
@270 = global ptr null
@"Core:iterator:249" = global ptr null
@num_12 = global ptr null
@"Core:iterator:254" = global ptr null
@"Core:iterator:256" = global ptr null
@fun_Core_iterator_toList_2.739 = global ptr null
@"Core:iterator:268" = global ptr null
@"Core:iterator:273" = global ptr null
@"Core:iterator:275" = global ptr null
@fun_Core_iterator_toList_2.741 = global ptr null
@271 = global ptr null
@"Core:iterator:283" = global ptr null
@num_40 = global ptr null
@"Core:iterator:288" = global ptr null
@"Core:iterator:290" = global ptr null
@fun_Core_iterator_toList_2.743 = global ptr null
@"Core:iterator:292" = global ptr null
@"Core:iterator:299" = global ptr null
@"Core:iterator:301" = global ptr null
@fun_Core_iterator_toList_2.745 = global ptr null
@272 = global ptr null
@273 = global ptr null
@274 = global ptr null
@"Core:iterator:318" = global ptr null
@"Core:iterator:323" = global ptr null
@"Core:iterator:325" = global ptr null
@fun_Core_iterator_toList_2.747 = global ptr null
@275 = global ptr null
@276 = global ptr null
@277 = global ptr null
@278 = global ptr null
@"Core:iterator:341" = global ptr null
@"Examples:sqrt:sqrt:9" = global ptr null
@"text_`fixedDecimal.is x` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:11" = global ptr null
@"Examples:sqrt:sqrt:21" = global ptr null
@"text_`fixedDecimal.isNonNegative x` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:23" = global ptr null
@"text_`int.is precision` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:35" = global ptr null
@"Examples:sqrt:sqrt:45" = global ptr null
@"text_`int.isNonNegative precision` was not satisfied" = global ptr null
@"Examples:sqrt:sqrt:47" = global ptr null
@"Examples:sqrt:sqrt:58" = global ptr null
@"Examples:sqrt:sqrt:81" = global ptr null
@"Examples:sqrt:sqrt:82:28" = global ptr null
@"Examples:sqrt:sqrt:82:29" = global ptr null
@"Examples:sqrt:sqrt:82:41" = global ptr null
@"Examples:sqrt:sqrt:82:55" = global ptr null
@"Examples:sqrt:sqrt:82:57:2" = global ptr null
@"Examples:sqrt:sqrt:82:58" = global ptr null
@"Examples:sqrt:sqrt:83" = global ptr null
@fun_Examples_sqrt_sqrt = global ptr null
@fun_Examples_sqrt_sqrt_82 = global ptr null
@fun_Examples_sqrt_sqrt_82_56 = global ptr null
@fun_Examples_sqrt_sqrt_82_57 = global ptr null
@fun_Core_controlFlow_recursive_18.749 = global ptr null
@fun_Core_controlFlow_recursive_18_0.751 = global ptr null
@num_65 = global ptr null
@"Examples:sqrt:main:14" = global ptr null
@"Examples:sqrt:main:47" = global ptr null
@"Examples:sqrt:main:48" = global ptr null
@"Examples:sqrt:main:49" = global ptr null
@"Examples:sqrt:main:51:0" = global ptr null
@"Examples:sqrt:main:52" = global ptr null
@"text_The root of 2 is " = global ptr null
@"Examples:sqrt:main:55" = global ptr null
@fun_Examples_sqrt_main = global ptr null
@fun_Examples_sqrt_main_50 = global ptr null
@fun_Examples_sqrt_main_51 = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:10\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::fitsInRustU128:10", align 8
  %4 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::fitsInRustU128:16", align 8
  %6 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:5\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::fitsInRustU128:5", align 8
  %8 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:8\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::fitsInRustU128:8", align 8
  %10 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::functionRun:11", align 8
  %12 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::functionRun:16", align 8
  %14 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::functionRun:22", align 8
  %16 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::functionRun:5", align 8
  %18 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::getArgumentCount:11", align 8
  %20 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::getArgumentCount:5", align 8
  %22 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:1", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:11", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:14", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:19", align 8
  %30 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:25", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::ifElse:28", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::ifElse:33", align 8
  %36 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::ifElse:41", align 8
  %38 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::ifElse:5", align 8
  %40 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intAdd:11", align 8
  %42 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intAdd:18", align 8
  %44 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intAdd:5", align 8
  %46 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intBitwiseAnd:18", align 8
  %48 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intBitwiseAnd:5", align 8
  %50 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intCompareTo:11", align 8
  %52 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intCompareTo:18", align 8
  %54 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intCompareTo:5", align 8
  %56 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:11\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::intDivideTruncating:11", align 8
  %58 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:17\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::intDivideTruncating:17", align 8
  %60 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:25\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::intDivideTruncating:25", align 8
  %62 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:32\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::intDivideTruncating:32", align 8
  %64 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::intDivideTruncating:5\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::intDivideTruncating:5", align 8
  %66 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:11\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::intMultiply:11", align 8
  %68 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::intMultiply:18", align 8
  %70 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::intMultiply:5", align 8
  %72 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:11\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::intRemainder:11", align 8
  %74 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:17\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::intRemainder:17", align 8
  %76 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:25\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::intRemainder:25", align 8
  %78 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:32\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::intRemainder:32", align 8
  %80 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intRemainder:5\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::intRemainder:5", align 8
  %82 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:11\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::intShiftRight:11", align 8
  %84 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:14\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::intShiftRight:14", align 8
  %86 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:23\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::intShiftRight:23", align 8
  %88 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:24\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::intShiftRight:24", align 8
  %90 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::intShiftRight:26:0\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::intShiftRight:26:0", align 8
  %92 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:27\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::intShiftRight:27", align 8
  %94 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:29\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::intShiftRight:29", align 8
  %96 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:30\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::intShiftRight:30", align 8
  %98 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:31\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::intShiftRight:31", align 8
  %100 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:34\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::intShiftRight:34", align 8
  %102 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:42\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::intShiftRight:42", align 8
  %104 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:49\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::intShiftRight:49", align 8
  %106 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftRight:5\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::intShiftRight:5", align 8
  %108 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:11\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::intSubtract:11", align 8
  %110 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::intSubtract:18", align 8
  %112 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::intSubtract:5", align 8
  %114 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %116 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %118 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %120 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %122 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::isNonNegative:12", align 8
  %124 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::isNonNegative:13", align 8
  %126 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::isNonNegative:5", align 8
  %128 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Builtins::listGet:11", align 8
  %130 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Builtins::listGet:14", align 8
  %132 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Builtins::listGet:16", align 8
  %134 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Builtins::listGet:24", align 8
  %136 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Builtins::listGet:25", align 8
  %138 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Builtins::listGet:30", align 8
  %140 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Builtins::listGet:37", align 8
  %142 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Builtins::listGet:5", align 8
  %144 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Builtins::listInsert:11", align 8
  %146 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Builtins::listInsert:14", align 8
  %148 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Builtins::listInsert:16", align 8
  %150 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Builtins::listInsert:24", align 8
  %152 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Builtins::listInsert:25", align 8
  %154 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Builtins::listInsert:27", align 8
  %156 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Builtins::listInsert:35", align 8
  %158 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Builtins::listInsert:5", align 8
  %160 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Builtins::listLength:11", align 8
  %162 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Builtins::listLength:5", align 8
  %164 = alloca i8, i64 16, align 1
  store [16 x i8] c"Builtins::not:1\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Builtins::not:1", align 8
  %166 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::print:11\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Builtins::print:11", align 8
  %168 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Builtins::structGet:12", align 8
  %170 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Builtins::structGet:14", align 8
  %172 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Builtins::structGet:21", align 8
  %174 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Builtins::structGet:5", align 8
  %176 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Builtins::tagGetValue:11", align 8
  %178 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Builtins::tagGetValue:13", align 8
  %180 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Builtins::tagGetValue:19", align 8
  %182 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Builtins::tagGetValue:5", align 8
  %184 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Builtins::textConcatenate:11", align 8
  %186 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Builtins::textConcatenate:18", align 8
  %188 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Builtins::textConcatenate:5", align 8
  %190 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:11\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Builtins::textGetRange:11", align 8
  %192 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:14\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Builtins::textGetRange:14", align 8
  %194 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:16\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Builtins::textGetRange:16", align 8
  %196 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:24\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Builtins::textGetRange:24", align 8
  %198 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:25\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Builtins::textGetRange:25", align 8
  %200 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:27\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Builtins::textGetRange:27", align 8
  %202 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:33\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Builtins::textGetRange:33", align 8
  %204 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:36\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Builtins::textGetRange:36", align 8
  %206 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:38\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Builtins::textGetRange:38", align 8
  %208 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:46\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Builtins::textGetRange:46", align 8
  %210 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:47\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Builtins::textGetRange:47", align 8
  %212 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:49\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Builtins::textGetRange:49", align 8
  %214 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textGetRange:5\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Builtins::textGetRange:5", align 8
  %216 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:53\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Builtins::textGetRange:53", align 8
  %218 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:55\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Builtins::textGetRange:55", align 8
  %220 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:63\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Builtins::textGetRange:63", align 8
  %222 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textLength:11\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Builtins::textLength:11", align 8
  %224 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::textLength:5\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Builtins::textLength:5", align 8
  %226 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:11\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Builtins::textStartsWith:11", align 8
  %228 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:18\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Builtins::textStartsWith:18", align 8
  %230 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textStartsWith:5\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Builtins::textStartsWith:5", align 8
  %232 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Builtins::toDebugText:5", align 8
  %234 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Builtins::typeIs:19", align 8
  %236 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Builtins::typeIs:25", align 8
  %238 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Builtins::typeOf:5", align 8
  %240 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:and:13\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Core:bool:and:13", align 8
  %242 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:2\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Core:bool:and:2", align 8
  %244 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:4\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Core:bool:and:4", align 8
  %246 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:7\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Core:bool:and:7", align 8
  %248 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:9\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Core:bool:and:9", align 8
  %250 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:12\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Core:bool:implies:12", align 8
  %252 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:implies:15\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Core:bool:implies:15", align 8
  %254 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:2\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Core:bool:implies:2", align 8
  %256 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:4\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Core:bool:implies:4", align 8
  %258 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:7\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Core:bool:implies:7", align 8
  %260 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:implies:9\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Core:bool:implies:9", align 8
  %262 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Core:bool:is:1", align 8
  %264 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Core:bool:lazyAnd:14", align 8
  %266 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Core:bool:lazyAnd:16", align 8
  %268 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:18\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Core:bool:lazyAnd:18", align 8
  %270 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:13\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Core:bool:lazyAnd:18:13", align 8
  %272 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:21\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Core:bool:lazyAnd:18:21", align 8
  %274 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:9\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Core:bool:lazyAnd:18:9", align 8
  %276 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:2\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Core:bool:lazyAnd:2", align 8
  %278 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Core:bool:lazyAnd:4", align 8
  %280 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Core:bool:lazyOr:14", align 8
  %282 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Core:bool:lazyOr:16", align 8
  %284 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:18\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Core:bool:lazyOr:18", align 8
  %286 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:10\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Core:bool:lazyOr:18:10", align 8
  %288 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:14\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Core:bool:lazyOr:18:14", align 8
  %290 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:22\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Core:bool:lazyOr:18:22", align 8
  %292 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:2\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Core:bool:lazyOr:2", align 8
  %294 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Core:bool:lazyOr:4", align 8
  %296 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:2\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Core:bool:not:2", align 8
  %298 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"Core:bool:not:4", align 8
  %300 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"Core:bool:not:6", align 8
  %302 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"Core:bool:or:13", align 8
  %304 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:2\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"Core:bool:or:2", align 8
  %306 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"Core:bool:or:4", align 8
  %308 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:7\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"Core:bool:or:7", align 8
  %310 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"Core:bool:or:9", align 8
  %312 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:1\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"Core:check:check:1", align 8
  %314 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:check:check:14\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"Core:check:check:14", align 8
  %316 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:check:check:5\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"Core:check:check:5", align 8
  %318 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:12\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"Core:check:checkEquals:12", align 8
  %320 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:13\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"Core:check:checkEquals:13", align 8
  %322 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:15:0\00", ptr %322, align 1
  %323 = call ptr @make_candy_text(ptr %322)
  store ptr %323, ptr @"Core:check:checkEquals:15:0", align 8
  %324 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:16\00", ptr %324, align 1
  %325 = call ptr @make_candy_text(ptr %324)
  store ptr %325, ptr @"Core:check:checkEquals:16", align 8
  %326 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:19\00", ptr %326, align 1
  %327 = call ptr @make_candy_text(ptr %326)
  store ptr %327, ptr @"Core:check:checkEquals:19", align 8
  %328 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:20\00", ptr %328, align 1
  %329 = call ptr @make_candy_text(ptr %328)
  store ptr %329, ptr @"Core:check:checkEquals:20", align 8
  %330 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:22:0\00", ptr %330, align 1
  %331 = call ptr @make_candy_text(ptr %330)
  store ptr %331, ptr @"Core:check:checkEquals:22:0", align 8
  %332 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:23\00", ptr %332, align 1
  %333 = call ptr @make_candy_text(ptr %332)
  store ptr %333, ptr @"Core:check:checkEquals:23", align 8
  %334 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:25\00", ptr %334, align 1
  %335 = call ptr @make_candy_text(ptr %334)
  store ptr %335, ptr @"Core:check:checkEquals:25", align 8
  %336 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:26\00", ptr %336, align 1
  %337 = call ptr @make_candy_text(ptr %336)
  store ptr %337, ptr @"Core:check:checkEquals:26", align 8
  %338 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:27\00", ptr %338, align 1
  %339 = call ptr @make_candy_text(ptr %338)
  store ptr %339, ptr @"Core:check:checkEquals:27", align 8
  %340 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:28\00", ptr %340, align 1
  %341 = call ptr @make_candy_text(ptr %340)
  store ptr %341, ptr @"Core:check:checkEquals:28", align 8
  %342 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:29\00", ptr %342, align 1
  %343 = call ptr @make_candy_text(ptr %342)
  store ptr %343, ptr @"Core:check:checkEquals:29", align 8
  %344 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:11\00", ptr %344, align 1
  %345 = call ptr @make_candy_text(ptr %344)
  store ptr %345, ptr @"Core:controlFlow:if:11", align 8
  %346 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:21\00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"Core:controlFlow:if:21", align 8
  %348 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:23\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @"Core:controlFlow:if:23", align 8
  %350 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:28\00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"Core:controlFlow:if:28", align 8
  %352 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:controlFlow:if:9\00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"Core:controlFlow:if:9", align 8
  %354 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:17\00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"Core:controlFlow:recursive:17", align 8
  %356 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:18:0:3\00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  %358 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:18:5\00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"Core:controlFlow:recursive:18:5", align 8
  %360 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:23\00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"Core:controlFlow:recursive:23", align 8
  %362 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:9\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"Core:controlFlow:recursive:9", align 8
  %364 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:18\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  %366 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:2\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"Core:fixedDecimal:floorToInt:2", align 8
  %368 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:20\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  %370 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:21\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"Core:fixedDecimal:floorToInt:21", align 8
  %372 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:4\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  %374 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:7\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  %376 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:fromInt:15\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"Core:fixedDecimal:fromInt:15", align 8
  %378 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:11\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  %380 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:16\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  %382 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:fixedDecimal:is:1\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"Core:fixedDecimal:is:1", align 8
  %384 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:is:1:19\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"Core:fixedDecimal:is:1:19", align 8
  %386 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:is:1:minorUnits\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  %388 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:is:1:scale\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"Core:fixedDecimal:is:1:scale", align 8
  %390 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isScale:18:9\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  %392 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:isScale:19\00", ptr %392, align 1
  %393 = call ptr @make_candy_text(ptr %392)
  store ptr %393, ptr @"Core:fixedDecimal:isScale:19", align 8
  %394 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:19\00", ptr %394, align 1
  %395 = call ptr @make_candy_text(ptr %394)
  store ptr %395, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  %396 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:minorUnits:2\00", ptr %396, align 1
  %397 = call ptr @make_candy_text(ptr %396)
  store ptr %397, ptr @"Core:fixedDecimal:minorUnits:2", align 8
  %398 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:21\00", ptr %398, align 1
  %399 = call ptr @make_candy_text(ptr %398)
  store ptr %399, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  %400 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:minorUnits:4\00", ptr %400, align 1
  %401 = call ptr @make_candy_text(ptr %400)
  store ptr %401, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  %402 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:19\00", ptr %402, align 1
  %403 = call ptr @make_candy_text(ptr %402)
  store ptr %403, ptr @"Core:fixedDecimal:scale:19", align 8
  %404 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:scale:2\00", ptr %404, align 1
  %405 = call ptr @make_candy_text(ptr %404)
  store ptr %405, ptr @"Core:fixedDecimal:scale:2", align 8
  %406 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:21\00", ptr %406, align 1
  %407 = call ptr @make_candy_text(ptr %406)
  store ptr %407, ptr @"Core:fixedDecimal:scale:21", align 8
  %408 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:scale:4\00", ptr %408, align 1
  %409 = call ptr @make_candy_text(ptr %408)
  store ptr %409, ptr @"Core:fixedDecimal:scale:4", align 8
  %410 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:scaleFactor:15\00", ptr %410, align 1
  %411 = call ptr @make_candy_text(ptr %410)
  store ptr %411, ptr @"Core:fixedDecimal:scaleFactor:15", align 8
  %412 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:scaleFactor:4\00", ptr %412, align 1
  %413 = call ptr @make_candy_text(ptr %412)
  store ptr %413, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  %414 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %414, align 1
  %415 = call ptr @make_candy_text(ptr %414)
  store ptr %415, ptr @"Core:function:is0:11:3", align 8
  %416 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %416, align 1
  %417 = call ptr @make_candy_text(ptr %416)
  store ptr %417, ptr @"Core:function:is0:13", align 8
  %418 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %418, align 1
  %419 = call ptr @make_candy_text(ptr %418)
  store ptr %419, ptr @"Core:function:is2:11:3", align 8
  %420 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %420, align 1
  %421 = call ptr @make_candy_text(ptr %420)
  store ptr %421, ptr @"Core:function:is2:13", align 8
  %422 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %422, align 1
  %423 = call ptr @make_candy_text(ptr %422)
  store ptr %423, ptr @"Core:function:run:14", align 8
  %424 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:2\00", ptr %424, align 1
  %425 = call ptr @make_candy_text(ptr %424)
  store ptr %425, ptr @"Core:function:run:2", align 8
  %426 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %426, align 1
  %427 = call ptr @make_candy_text(ptr %426)
  store ptr %427, ptr @"Core:function:run:4", align 8
  %428 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:20\00", ptr %428, align 1
  %429 = call ptr @make_candy_text(ptr %428)
  store ptr %429, ptr @"Core:int:compareTo:20", align 8
  %430 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %430, align 1
  %431 = call ptr @make_candy_text(ptr %430)
  store ptr %431, ptr @"Core:int:compareTo:4", align 8
  %432 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %432, align 1
  %433 = call ptr @make_candy_text(ptr %432)
  store ptr %433, ptr @"Core:int:compareTo:9", align 8
  %434 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:4\00", ptr %434, align 1
  %435 = call ptr @make_candy_text(ptr %434)
  store ptr %435, ptr @"Core:int:isEven:4", align 8
  %436 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:8\00", ptr %436, align 1
  %437 = call ptr @make_candy_text(ptr %436)
  store ptr %437, ptr @"Core:int:isEven:8", align 8
  %438 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %438, align 1
  %439 = call ptr @make_candy_text(ptr %438)
  store ptr %439, ptr @"Core:int:isGreaterThan:13", align 8
  %440 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %440, align 1
  %441 = call ptr @make_candy_text(ptr %440)
  store ptr %441, ptr @"Core:int:isGreaterThan:4", align 8
  %442 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %442, align 1
  %443 = call ptr @make_candy_text(ptr %442)
  store ptr %443, ptr @"Core:int:isGreaterThan:9", align 8
  %444 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:13\00", ptr %444, align 1
  %445 = call ptr @make_candy_text(ptr %444)
  store ptr %445, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  %446 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:22\00", ptr %446, align 1
  %447 = call ptr @make_candy_text(ptr %446)
  store ptr %447, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  %448 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:4\00", ptr %448, align 1
  %449 = call ptr @make_candy_text(ptr %448)
  store ptr %449, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  %450 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:9\00", ptr %450, align 1
  %451 = call ptr @make_candy_text(ptr %450)
  store ptr %451, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  %452 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %452, align 1
  %453 = call ptr @make_candy_text(ptr %452)
  store ptr %453, ptr @"Core:int:isLessThan:13", align 8
  %454 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %454, align 1
  %455 = call ptr @make_candy_text(ptr %454)
  store ptr %455, ptr @"Core:int:isLessThan:4", align 8
  %456 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %456, align 1
  %457 = call ptr @make_candy_text(ptr %456)
  store ptr %457, ptr @"Core:int:isLessThan:9", align 8
  %458 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %458, align 1
  %459 = call ptr @make_candy_text(ptr %458)
  store ptr %459, ptr @"Core:int:isNegative:4", align 8
  %460 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %460, align 1
  %461 = call ptr @make_candy_text(ptr %460)
  store ptr %461, ptr @"Core:int:isNegative:8", align 8
  %462 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:16\00", ptr %462, align 1
  %463 = call ptr @make_candy_text(ptr %462)
  store ptr %463, ptr @"Core:int:isNonNegative:16", align 8
  %464 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %464, align 1
  %465 = call ptr @make_candy_text(ptr %464)
  store ptr %465, ptr @"Core:int:isNonNegative:4", align 8
  %466 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %466, align 1
  %467 = call ptr @make_candy_text(ptr %466)
  store ptr %467, ptr @"Core:int:isNonNegative:7", align 8
  %468 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:14\00", ptr %468, align 1
  %469 = call ptr @make_candy_text(ptr %468)
  store ptr %469, ptr @"Core:int:max:14", align 8
  %470 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:17\00", ptr %470, align 1
  %471 = call ptr @make_candy_text(ptr %470)
  store ptr %471, ptr @"Core:int:max:17", align 8
  %472 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:4\00", ptr %472, align 1
  %473 = call ptr @make_candy_text(ptr %472)
  store ptr %473, ptr @"Core:int:max:4", align 8
  %474 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:9\00", ptr %474, align 1
  %475 = call ptr @make_candy_text(ptr %474)
  store ptr %475, ptr @"Core:int:max:9", align 8
  %476 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:4\00", ptr %476, align 1
  %477 = call ptr @make_candy_text(ptr %476)
  store ptr %477, ptr @"Core:int:negate:4", align 8
  %478 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:negate:8\00", ptr %478, align 1
  %479 = call ptr @make_candy_text(ptr %478)
  store ptr %479, ptr @"Core:int:negate:8", align 8
  %480 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:12\00", ptr %480, align 1
  %481 = call ptr @make_candy_text(ptr %480)
  store ptr %481, ptr @"Core:int:pow:12", align 8
  %482 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:14\00", ptr %482, align 1
  %483 = call ptr @make_candy_text(ptr %482)
  store ptr %483, ptr @"Core:int:pow:14", align 8
  %484 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:1\00", ptr %484, align 1
  %485 = call ptr @make_candy_text(ptr %484)
  store ptr %485, ptr @"Core:int:pow:21:1", align 8
  %486 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:4\00", ptr %486, align 1
  %487 = call ptr @make_candy_text(ptr %486)
  store ptr %487, ptr @"Core:int:pow:21:4", align 8
  %488 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:4\00", ptr %488, align 1
  %489 = call ptr @make_candy_text(ptr %488)
  store ptr %489, ptr @"Core:int:pow:21:4:4", align 8
  %490 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:10\00", ptr %490, align 1
  %491 = call ptr @make_candy_text(ptr %490)
  store ptr %491, ptr @"Core:int:pow:21:4:5:10", align 8
  %492 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:12\00", ptr %492, align 1
  %493 = call ptr @make_candy_text(ptr %492)
  store ptr %493, ptr @"Core:int:pow:21:4:5:12", align 8
  %494 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:5:5\00", ptr %494, align 1
  %495 = call ptr @make_candy_text(ptr %494)
  store ptr %495, ptr @"Core:int:pow:21:4:5:5", align 8
  %496 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:12\00", ptr %496, align 1
  %497 = call ptr @make_candy_text(ptr %496)
  store ptr %497, ptr @"Core:int:pow:21:4:6:12", align 8
  %498 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:15\00", ptr %498, align 1
  %499 = call ptr @make_candy_text(ptr %498)
  store ptr %499, ptr @"Core:int:pow:21:4:6:15", align 8
  %500 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:17\00", ptr %500, align 1
  %501 = call ptr @make_candy_text(ptr %500)
  store ptr %501, ptr @"Core:int:pow:21:4:6:17", align 8
  %502 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:18\00", ptr %502, align 1
  %503 = call ptr @make_candy_text(ptr %502)
  store ptr %503, ptr @"Core:int:pow:21:4:6:18", align 8
  %504 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:6:7\00", ptr %504, align 1
  %505 = call ptr @make_candy_text(ptr %504)
  store ptr %505, ptr @"Core:int:pow:21:4:6:7", align 8
  %506 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:7\00", ptr %506, align 1
  %507 = call ptr @make_candy_text(ptr %506)
  store ptr %507, ptr @"Core:int:pow:21:4:7", align 8
  %508 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:pow:21:base\00", ptr %508, align 1
  %509 = call ptr @make_candy_text(ptr %508)
  store ptr %509, ptr @"Core:int:pow:21:base", align 8
  %510 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:pow:21:exponent\00", ptr %510, align 1
  %511 = call ptr @make_candy_text(ptr %510)
  store ptr %511, ptr @"Core:int:pow:21:exponent", align 8
  %512 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:22\00", ptr %512, align 1
  %513 = call ptr @make_candy_text(ptr %512)
  store ptr %513, ptr @"Core:int:pow:22", align 8
  %514 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:4\00", ptr %514, align 1
  %515 = call ptr @make_candy_text(ptr %514)
  store ptr %515, ptr @"Core:int:pow:4", align 8
  %516 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:9\00", ptr %516, align 1
  %517 = call ptr @make_candy_text(ptr %516)
  store ptr %517, ptr @"Core:int:pow:9", align 8
  %518 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:14\00", ptr %518, align 1
  %519 = call ptr @make_candy_text(ptr %518)
  store ptr %519, ptr @"Core:text:removePrefix:14", align 8
  %520 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:4\00", ptr %520, align 1
  %521 = call ptr @make_candy_text(ptr %520)
  store ptr %521, ptr @"Core:text:removePrefix:15:4", align 8
  %522 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:7\00", ptr %522, align 1
  %523 = call ptr @make_candy_text(ptr %522)
  store ptr %523, ptr @"Core:text:removePrefix:15:7", align 8
  %524 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:8\00", ptr %524, align 1
  %525 = call ptr @make_candy_text(ptr %524)
  store ptr %525, ptr @"Core:text:removePrefix:15:8", align 8
  %526 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:17\00", ptr %526, align 1
  %527 = call ptr @make_candy_text(ptr %526)
  store ptr %527, ptr @"Core:text:removePrefix:17", align 8
  %528 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:4\00", ptr %528, align 1
  %529 = call ptr @make_candy_text(ptr %528)
  store ptr %529, ptr @"Core:text:removePrefix:4", align 8
  %530 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:9\00", ptr %530, align 1
  %531 = call ptr @make_candy_text(ptr %530)
  store ptr %531, ptr @"Core:text:removePrefix:9", align 8
  %532 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %532, align 1
  %533 = call ptr @make_candy_text(ptr %532)
  store ptr %533, ptr @"anonymous:$generated::needs", align 8
  %534 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %534, ptr @fun_candy_builtin_equals, align 8
  %535 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %535, ptr @fun_candy_builtin_get_argument_count, align 8
  %536 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %536, ptr @fun_candy_builtin_if_else, align 8
  %537 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %537, ptr @fun_candy_builtin_int_add, align 8
  %538 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %538, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %539 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %539, ptr @fun_candy_builtin_int_compare_to, align 8
  %540 = call ptr @make_candy_function(ptr @candy_builtin_int_divide_truncating, ptr null, i64 0)
  store ptr %540, ptr @fun_candy_builtin_int_divide_truncating, align 8
  %541 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %541, ptr @fun_candy_builtin_int_multiply, align 8
  %542 = call ptr @make_candy_function(ptr @candy_builtin_int_remainder, ptr null, i64 0)
  store ptr %542, ptr @fun_candy_builtin_int_remainder, align 8
  %543 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_right, ptr null, i64 0)
  store ptr %543, ptr @fun_candy_builtin_int_shift_right, align 8
  %544 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %544, ptr @fun_candy_builtin_int_subtract, align 8
  %545 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %545, ptr @fun_candy_builtin_list_get, align 8
  %546 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %546, ptr @fun_candy_builtin_list_insert, align 8
  %547 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %547, ptr @fun_candy_builtin_list_length, align 8
  %548 = call ptr @make_candy_function(ptr @candy_builtin_print, ptr null, i64 0)
  store ptr %548, ptr @fun_candy_builtin_print, align 8
  %549 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %549, ptr @fun_candy_builtin_struct_get, align 8
  %550 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %550, ptr @fun_candy_builtin_struct_has_key, align 8
  %551 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %551, ptr @fun_candy_builtin_tag_get_value, align 8
  %552 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %552, ptr @fun_candy_builtin_tag_has_value, align 8
  %553 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %553, ptr @fun_candy_builtin_tag_without_value, align 8
  %554 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %554, ptr @fun_candy_builtin_text_concatenate, align 8
  %555 = call ptr @make_candy_function(ptr @candy_builtin_text_get_range, ptr null, i64 0)
  store ptr %555, ptr @fun_candy_builtin_text_get_range, align 8
  %556 = call ptr @make_candy_function(ptr @candy_builtin_text_length, ptr null, i64 0)
  store ptr %556, ptr @fun_candy_builtin_text_length, align 8
  %557 = call ptr @make_candy_function(ptr @candy_builtin_text_starts_with, ptr null, i64 0)
  store ptr %557, ptr @fun_candy_builtin_text_starts_with, align 8
  %558 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %558, ptr @fun_candy_builtin_to_debug_text, align 8
  %559 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %559, ptr @fun_candy_builtin_type_of, align 8
  %560 = alloca i8, i64 5, align 1
  store [5 x i8] c"Base\00", ptr %560, align 1
  %561 = call ptr @make_candy_tag(ptr %560, ptr null)
  store ptr %561, ptr @tag_Base, align 8
  %562 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %562, align 1
  %563 = call ptr @make_candy_tag(ptr %562, ptr null)
  store ptr %563, ptr @tag_Equal, align 8
  %564 = alloca i8, i64 9, align 1
  store [9 x i8] c"Exponent\00", ptr %564, align 1
  %565 = call ptr @make_candy_tag(ptr %564, ptr null)
  store ptr %565, ptr @tag_Exponent, align 8
  %566 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %566, align 1
  %567 = call ptr @make_candy_tag(ptr %566, ptr null)
  store ptr %567, ptr @tag_False, align 8
  %568 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %568, align 1
  %569 = call ptr @make_candy_tag(ptr %568, ptr null)
  store ptr %569, ptr @tag_FixedDecimal, align 8
  %570 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %570, align 1
  %571 = call ptr @make_candy_tag(ptr %570, ptr null)
  store ptr %571, ptr @tag_Function, align 8
  %572 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %572, align 1
  %573 = call ptr @make_candy_tag(ptr %572, ptr null)
  store ptr %573, ptr @tag_Greater, align 8
  %574 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %574, align 1
  %575 = call ptr @make_candy_tag(ptr %574, ptr null)
  store ptr %575, ptr @tag_Int, align 8
  %576 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %576, align 1
  %577 = call ptr @make_candy_tag(ptr %576, ptr null)
  store ptr %577, ptr @tag_Less, align 8
  %578 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %578, align 1
  %579 = call ptr @make_candy_tag(ptr %578, ptr null)
  store ptr %579, ptr @tag_List, align 8
  %580 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %580, align 1
  %581 = call ptr @make_candy_tag(ptr %580, ptr null)
  store ptr %581, ptr @tag_Match, align 8
  %582 = alloca i8, i64 11, align 1
  store [11 x i8] c"MinorUnits\00", ptr %582, align 1
  %583 = call ptr @make_candy_tag(ptr %582, ptr null)
  store ptr %583, ptr @tag_MinorUnits, align 8
  %584 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %584, align 1
  %585 = call ptr @make_candy_tag(ptr %584, ptr null)
  store ptr %585, ptr @tag_NoMatch, align 8
  %586 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %586, align 1
  %587 = call ptr @make_candy_tag(ptr %586, ptr null)
  store ptr %587, ptr @tag_Nothing, align 8
  %588 = alloca i8, i64 6, align 1
  store [6 x i8] c"Scale\00", ptr %588, align 1
  %589 = call ptr @make_candy_tag(ptr %588, ptr null)
  store ptr %589, ptr @tag_Scale, align 8
  %590 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %590, align 1
  %591 = call ptr @make_candy_tag(ptr %590, ptr null)
  store ptr %591, ptr @tag_Struct, align 8
  %592 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %592, align 1
  %593 = call ptr @make_candy_tag(ptr %592, ptr null)
  store ptr %593, ptr @tag_Tag, align 8
  %594 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %594, align 1
  %595 = call ptr @make_candy_tag(ptr %594, ptr null)
  store ptr %595, ptr @tag_Text, align 8
  %596 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %596, align 1
  %597 = call ptr @make_candy_tag(ptr %596, ptr null)
  store ptr %597, ptr @tag_True, align 8
  %598 = call ptr @make_candy_int(i64 0)
  store ptr %598, ptr @num_0, align 8
  %599 = call ptr @make_candy_int(i64 1)
  store ptr %599, ptr @num_1, align 8
  %600 = call ptr @make_candy_int(i64 2)
  store ptr %600, ptr @num_2, align 8
  %601 = call ptr @make_candy_int(i64 3)
  store ptr %601, ptr @num_3, align 8
  %602 = call ptr @make_candy_int(i64 4)
  store ptr %602, ptr @num_4, align 8
  %603 = call ptr @make_candy_int(i64 5)
  store ptr %603, ptr @num_5, align 8
  %604 = call ptr @make_candy_int(i64 10)
  store ptr %604, ptr @num_10, align 8
  %605 = call ptr @make_candy_int(i64 -1)
  store ptr %605, ptr @num_340282366920938463463374607431768211455, align 8
  %606 = alloca i8, i64 8, align 1
  store [8 x i8] c" to be \00", ptr %606, align 1
  %607 = call ptr @make_candy_text(ptr %606)
  store ptr %607, ptr @"text_ to be ", align 8
  %608 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %608, align 1
  %609 = call ptr @make_candy_text(ptr %608)
  store ptr %609, ptr @text_., align 8
  %610 = alloca i8, i64 46, align 1
  store [46 x i8] c". You might want to call `shiftLeft` instead.\00", ptr %610, align 1
  %611 = call ptr @make_candy_text(ptr %610)
  store ptr %611, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %612 = alloca i8, i64 16, align 1
  store [16 x i8] c"A check failed.\00", ptr %612, align 1
  %613 = call ptr @make_candy_text(ptr %612)
  store ptr %613, ptr @"text_A check failed.", align 8
  %614 = alloca i8, i64 26, align 1
  store [26 x i8] c"A check failed: Expected \00", ptr %614, align 1
  %615 = call ptr @make_candy_text(ptr %614)
  store ptr %615, ptr @"text_A check failed: Expected ", align 8
  %616 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Equal, got \00", ptr %616, align 1
  %617 = call ptr @make_candy_text(ptr %616)
  store ptr %617, ptr @"text_Expected Equal, got ", align 8
  %618 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %618, align 1
  %619 = call ptr @make_candy_text(ptr %618)
  store ptr %619, ptr @"text_Expected False, got ", align 8
  %620 = alloca i8, i64 28, align 1
  store [28 x i8] c"Expected FixedDecimal, got \00", ptr %620, align 1
  %621 = call ptr @make_candy_text(ptr %620)
  store ptr %621, ptr @"text_Expected FixedDecimal, got ", align 8
  %622 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Greater, got \00", ptr %622, align 1
  %623 = call ptr @make_candy_text(ptr %622)
  store ptr %623, ptr @"text_Expected Greater, got ", align 8
  %624 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected Less, got \00", ptr %624, align 1
  %625 = call ptr @make_candy_text(ptr %624)
  store ptr %625, ptr @"text_Expected Less, got ", align 8
  %626 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %626, align 1
  %627 = call ptr @make_candy_text(ptr %626)
  store ptr %627, ptr @"text_Expected True, got ", align 8
  %628 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected `0`, got `\00", ptr %628, align 1
  %629 = call ptr @make_candy_text(ptr %628)
  store ptr %629, ptr @"text_Expected `0`, got `", align 8
  %630 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %630, align 1
  %631 = call ptr @make_candy_text(ptr %630)
  store ptr %631, ptr @"text_Expected a Struct, got `", align 8
  %632 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %632, align 1
  %633 = call ptr @make_candy_text(ptr %632)
  store ptr %633, ptr @"text_Expected a Tag, got `", align 8
  %634 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %634, align 1
  %635 = call ptr @make_candy_text(ptr %634)
  store ptr %635, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %636 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %636, align 1
  %637 = call ptr @make_candy_text(ptr %636)
  store ptr %637, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %638 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %638, align 1
  %639 = call ptr @make_candy_text(ptr %638)
  store ptr %639, ptr @"text_No case matched the given expression.", align 8
  %640 = alloca i8, i64 43, align 1
  store [43 x i8] c"Shifts by that much are not yet supported.\00", ptr %640, align 1
  %641 = call ptr @make_candy_text(ptr %640)
  store ptr %641, ptr @"text_Shifts by that much are not yet supported.", align 8
  %642 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Base`: `\00", ptr %642, align 1
  %643 = call ptr @make_candy_text(ptr %642)
  store ptr %643, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %644 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Exponent`: `\00", ptr %644, align 1
  %645 = call ptr @make_candy_text(ptr %644)
  store ptr %645, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %646 = alloca i8, i64 43, align 1
  store [43 x i8] c"Struct doesn't contain key `MinorUnits`: `\00", ptr %646, align 1
  %647 = call ptr @make_candy_text(ptr %646)
  store ptr %647, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %648 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Scale`: `\00", ptr %648, align 1
  %649 = call ptr @make_candy_text(ptr %648)
  store ptr %649, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %650 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %650, align 1
  %651 = call ptr @make_candy_text(ptr %650)
  store ptr %651, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %652 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %652, align 1
  %653 = call ptr @make_candy_text(ptr %652)
  store ptr %653, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %654 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %654, align 1
  %655 = call ptr @make_candy_text(ptr %654)
  store ptr %655, ptr @"text_The `reason` must be a text.", align 8
  %656 = alloca i8, i64 33, align 1
  store [33 x i8] c"The shift `amount` is negative: \00", ptr %656, align 1
  %657 = call ptr @make_candy_text(ptr %656)
  store ptr %657, ptr @"text_The shift `amount` is negative: ", align 8
  %658 = alloca i8, i64 26, align 1
  store [26 x i8] c"You can't divide by zero.\00", ptr %658, align 1
  %659 = call ptr @make_candy_text(ptr %658)
  store ptr %659, ptr @"text_You can't divide by zero.", align 8
  %660 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %660, align 1
  %661 = call ptr @make_candy_text(ptr %660)
  store ptr %661, ptr @"text_`.", align 8
  %662 = alloca i8, i64 26, align 1
  store [26 x i8] c"`False` was not satisfied\00", ptr %662, align 1
  %663 = call ptr @make_candy_text(ptr %662)
  store ptr %663, ptr @"text_`False` was not satisfied", align 8
  %664 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %664, align 1
  %665 = call ptr @make_candy_text(ptr %664)
  store ptr %665, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %666 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %666, align 1
  %667 = call ptr @make_candy_text(ptr %666)
  store ptr %667, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %668 = alloca i8, i64 40, align 1
  store [40 x i8] c"`amount | typeIs Int` was not satisfied\00", ptr %668, align 1
  %669 = call ptr @make_candy_text(ptr %668)
  store ptr %669, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %670 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %670, align 1
  %671 = call ptr @make_candy_text(ptr %670)
  store ptr %671, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %672 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %672, align 1
  %673 = call ptr @make_candy_text(ptr %672)
  store ptr %673, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %674 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %674, align 1
  %675 = call ptr @make_candy_text(ptr %674)
  store ptr %675, ptr @"text_`b` didn't return a bool.", align 8
  %676 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %676, align 1
  %677 = call ptr @make_candy_text(ptr %676)
  store ptr %677, ptr @"text_`bool.is condition` was not satisfied", align 8
  %678 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %678, align 1
  %679 = call ptr @make_candy_text(ptr %678)
  store ptr %679, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %680 = alloca i8, i64 42, align 1
  store [42 x i8] c"`dividend | typeIs Int` was not satisfied\00", ptr %680, align 1
  %681 = call ptr @make_candy_text(ptr %680)
  store ptr %681, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %682 = alloca i8, i64 41, align 1
  store [41 x i8] c"`divisor | typeIs Int` was not satisfied\00", ptr %682, align 1
  %683 = call ptr @make_candy_text(ptr %682)
  store ptr %683, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %684 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %684, align 1
  %685 = call ptr @make_candy_text(ptr %684)
  store ptr %685, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %686 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %686, align 1
  %687 = call ptr @make_candy_text(ptr %686)
  store ptr %687, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %688 = alloca i8, i64 79, align 1
  store [77 x i8] c"`endExclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %688, align 1
  %689 = call ptr @make_candy_text(ptr %688)
  store ptr %689, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %690 = alloca i8, i64 49, align 1
  store [49 x i8] c"`endExclusive | isNonNegative` was not satisfied\00", ptr %690, align 1
  %691 = call ptr @make_candy_text(ptr %690)
  store ptr %691, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %692 = alloca i8, i64 46, align 1
  store [46 x i8] c"`endExclusive | typeIs Int` was not satisfied\00", ptr %692, align 1
  %693 = call ptr @make_candy_text(ptr %692)
  store ptr %693, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %694 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %694, align 1
  %695 = call ptr @make_candy_text(ptr %694)
  store ptr %695, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %696 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorB | typeIs Int` was not satisfied\00", ptr %696, align 1
  %697 = call ptr @make_candy_text(ptr %696)
  store ptr %697, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %698 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %698, align 1
  %699 = call ptr @make_candy_text(ptr %698)
  store ptr %699, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %700 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %700, align 1
  %701 = call ptr @make_candy_text(ptr %700)
  store ptr %701, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %702 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %702, align 1
  %703 = call ptr @make_candy_text(ptr %702)
  store ptr %703, ptr @"text_`function.is0 b` was not satisfied", align 8
  %704 = alloca i8, i64 38, align 1
  store [38 x i8] c"`function.is0 then` was not satisfied\00", ptr %704, align 1
  %705 = call ptr @make_candy_text(ptr %704)
  store ptr %705, ptr @"text_`function.is0 then` was not satisfied", align 8
  %706 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %706, align 1
  %707 = call ptr @make_candy_text(ptr %706)
  store ptr %707, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %708 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %708, align 1
  %709 = call ptr @make_candy_text(ptr %708)
  store ptr %709, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %710 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %710, align 1
  %711 = call ptr @make_candy_text(ptr %710)
  store ptr %711, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %712 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %712, align 1
  %713 = call ptr @make_candy_text(ptr %712)
  store ptr %713, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %714 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %714, align 1
  %715 = call ptr @make_candy_text(ptr %714)
  store ptr %715, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %716 = alloca i8, i64 38, align 1
  store [38 x i8] c"`int.is minorUnits` was not satisfied\00", ptr %716, align 1
  %717 = call ptr @make_candy_text(ptr %716)
  store ptr %717, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %718 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %718, align 1
  %719 = call ptr @make_candy_text(ptr %718)
  store ptr %719, ptr @"text_`is a` was not satisfied", align 8
  %720 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %720, align 1
  %721 = call ptr @make_candy_text(ptr %720)
  store ptr %721, ptr @"text_`is b` was not satisfied", align 8
  %722 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is base` was not satisfied\00", ptr %722, align 1
  %723 = call ptr @make_candy_text(ptr %722)
  store ptr %723, ptr @"text_`is base` was not satisfied", align 8
  %724 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is exponent` was not satisfied\00", ptr %724, align 1
  %725 = call ptr @make_candy_text(ptr %724)
  store ptr %725, ptr @"text_`is exponent` was not satisfied", align 8
  %726 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is prefix` was not satisfied\00", ptr %726, align 1
  %727 = call ptr @make_candy_text(ptr %726)
  store ptr %727, ptr @"text_`is prefix` was not satisfied", align 8
  %728 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is text` was not satisfied\00", ptr %728, align 1
  %729 = call ptr @make_candy_text(ptr %728)
  store ptr %729, ptr @"text_`is text` was not satisfied", align 8
  %730 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %730, align 1
  %731 = call ptr @make_candy_text(ptr %730)
  store ptr %731, ptr @"text_`is valueA` was not satisfied", align 8
  %732 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %732, align 1
  %733 = call ptr @make_candy_text(ptr %732)
  store ptr %733, ptr @"text_`is valueB` was not satisfied", align 8
  %734 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %734, align 1
  %735 = call ptr @make_candy_text(ptr %734)
  store ptr %735, ptr @"text_`is value` was not satisfied", align 8
  %736 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %736, align 1
  %737 = call ptr @make_candy_text(ptr %736)
  store ptr %737, ptr @"text_`is0 body` was not satisfied", align 8
  %738 = alloca i8, i64 36, align 1
  store [36 x i8] c"`isConditionBool` was not satisfied\00", ptr %738, align 1
  %739 = call ptr @make_candy_text(ptr %738)
  store ptr %739, ptr @"text_`isConditionBool` was not satisfied", align 8
  %740 = alloca i8, i64 43, align 1
  store [43 x i8] c"`isNonNegative exponent` was not satisfied\00", ptr %740, align 1
  %741 = call ptr @make_candy_text(ptr %740)
  store ptr %741, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %742 = alloca i8, i64 34, align 1
  store [34 x i8] c"`isScale scale` was not satisfied\00", ptr %742, align 1
  %743 = call ptr @make_candy_text(ptr %742)
  store ptr %743, ptr @"text_`isScale scale` was not satisfied", align 8
  %744 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %744, align 1
  %745 = call ptr @make_candy_text(ptr %744)
  store ptr %745, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %746 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %746, align 1
  %747 = call ptr @make_candy_text(ptr %746)
  store ptr %747, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %748 = alloca i8, i64 41, align 1
  store [41 x i8] c"`prefix | typeIs Text` was not satisfied\00", ptr %748, align 1
  %749 = call ptr @make_candy_text(ptr %748)
  store ptr %749, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %750 = alloca i8, i64 81, align 1
  store [79 x i8] c"`startInclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %750, align 1
  %751 = call ptr @make_candy_text(ptr %750)
  store ptr %751, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %752 = alloca i8, i64 70, align 1
  store [70 x i8] c"`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied\00", ptr %752, align 1
  %753 = call ptr @make_candy_text(ptr %752)
  store ptr %753, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %754 = alloca i8, i64 51, align 1
  store [51 x i8] c"`startInclusive | isNonNegative` was not satisfied\00", ptr %754, align 1
  %755 = call ptr @make_candy_text(ptr %754)
  store ptr %755, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %756 = alloca i8, i64 48, align 1
  store [48 x i8] c"`startInclusive | typeIs Int` was not satisfied\00", ptr %756, align 1
  %757 = call ptr @make_candy_text(ptr %756)
  store ptr %757, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %758 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %758, align 1
  %759 = call ptr @make_candy_text(ptr %758)
  store ptr %759, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %760 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %760, align 1
  %761 = call ptr @make_candy_text(ptr %760)
  store ptr %761, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %762 = alloca i8, i64 44, align 1
  store [44 x i8] c"`subtrahend | typeIs Int` was not satisfied\00", ptr %762, align 1
  %763 = call ptr @make_candy_text(ptr %762)
  store ptr %763, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %764 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %764, align 1
  %765 = call ptr @make_candy_text(ptr %764)
  store ptr %765, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %766 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %766, align 1
  %767 = call ptr @make_candy_text(ptr %766)
  store ptr %767, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %768 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %768, align 1
  %769 = call ptr @make_candy_text(ptr %768)
  store ptr %769, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %770 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %770, align 1
  %771 = call ptr @make_candy_text(ptr %770)
  store ptr %771, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %772 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %772, align 1
  %773 = call ptr @make_candy_text(ptr %772)
  store ptr %773, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %774 = alloca i8, i64 42, align 1
  store [42 x i8] c"`value | isNonNegative` was not satisfied\00", ptr %774, align 1
  %775 = call ptr @make_candy_text(ptr %774)
  store ptr %775, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %776 = alloca i8, i64 39, align 1
  store [39 x i8] c"`value | typeIs Int` was not satisfied\00", ptr %776, align 1
  %777 = call ptr @make_candy_text(ptr %776)
  store ptr %777, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %778 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %779 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %778, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %779, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %780 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %781 = call ptr @make_candy_function(ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %780, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %781, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %782 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %783 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %782, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %783, ptr @"fun_anonymous_$generated__needs", align 8
  %784 = alloca ptr, i64 2, align 8
  %785 = load ptr, ptr @tag_Match, align 8
  %786 = getelementptr ptr, ptr %784, i64 0
  store ptr %785, ptr %786, align 8
  %787 = getelementptr ptr, ptr %784, i64 1
  store ptr null, ptr %787, align 8
  %788 = call ptr @make_candy_list(ptr %784)
  store ptr %788, ptr @0, align 8
  %789 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %790 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", ptr %789, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %790, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %791 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %792 = call ptr @make_candy_function(ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", ptr %791, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %792, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %793 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %794 = call ptr @make_candy_function(ptr @Builtins__not, ptr %793, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %794, ptr @fun_Builtins__not, align 8
  %795 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %796 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %795, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %796, ptr @fun_Builtins__isNonNegative, align 8
  %797 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %798 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %797, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %798, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %799 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %800 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %799, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %800, ptr @fun_Builtins__ifElse, align 8
  %801 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %802 = call ptr @make_candy_function(ptr @Builtins__intDivideTruncating, ptr %801, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %802, ptr @fun_Builtins__intDivideTruncating, align 8
  %803 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %804 = call ptr @make_candy_function(ptr @Builtins__intRemainder, ptr %803, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %804, ptr @fun_Builtins__intRemainder, align 8
  %805 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %806 = call ptr @make_candy_function(ptr @Builtins__intShiftRight, ptr %805, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %806, ptr @fun_Builtins__intShiftRight, align 8
  %807 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %808 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %807, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %808, ptr @fun_Builtins__listGet, align 8
  %809 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %810 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %809, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %810, ptr @fun_Builtins__listInsert, align 8
  %811 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %812 = call ptr @make_candy_function(ptr @Builtins__textGetRange, ptr %811, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %812, ptr @fun_Builtins__textGetRange, align 8
  %813 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %814 = call ptr @make_candy_function(ptr @"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", ptr %813, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %814, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %815 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %816 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %815, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %816, ptr @fun_Core_function_is0, align 8
  %817 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %818 = call ptr @make_candy_function(ptr @Core_function_run, ptr %817, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %818, ptr @fun_Core_function_run, align 8
  %819 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %820 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %819, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %820, ptr @fun_Core_bool_is, align 8
  %821 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %822 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %821, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %822, ptr @fun_Core_bool_not, align 8
  %823 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %824 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %823, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %824, ptr @fun_Core_bool_lazyAnd, align 8
  %825 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %826 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %825, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %826, ptr @fun_Core_bool_lazyOr, align 8
  %827 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %828 = call ptr @make_candy_function(ptr @Core_bool_implies, ptr %827, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %828, ptr @fun_Core_bool_implies, align 8
  %829 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %830 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else.137", ptr %829, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %830, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.138", align 8
  %831 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %832 = call ptr @make_candy_function(ptr @Core_check_check, ptr %831, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %832, ptr @fun_Core_check_check, align 8
  %833 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %834 = call ptr @make_candy_function(ptr @Core_check_checkEquals, ptr %833, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %834, ptr @fun_Core_check_checkEquals, align 8
  %835 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %836 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %835, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %836, ptr @fun_Core_function_is2, align 8
  %837 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %838 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %837, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %838, ptr @fun_Core_int_compareTo, align 8
  %839 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %840 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %839, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %840, ptr @fun_Core_int_isLessThan, align 8
  %841 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %842 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %841, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %842, ptr @fun_Core_int_isGreaterThan, align 8
  %843 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %844 = call ptr @make_candy_function(ptr @Core_int_isGreaterThanOrEqualTo, ptr %843, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %844, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  %845 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %846 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %845, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %846, ptr @fun_Core_int_isNonNegative, align 8
  %847 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %848 = call ptr @make_candy_function(ptr @Core_int_isEven, ptr %847, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %848, ptr @fun_Core_int_isEven, align 8
  %849 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %850 = call ptr @make_candy_function(ptr @Core_int_max, ptr %849, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %850, ptr @fun_Core_int_max, align 8
  %851 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %852 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_matched, ptr %851, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %852, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %853 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %854 = call ptr @make_candy_function(ptr @Core_int_pow_21, ptr %853, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %854, ptr @fun_Core_int_pow_21, align 8
  %855 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %856 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18, ptr %855, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %856, ptr @fun_Core_controlFlow_recursive_18, align 8
  %857 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %858 = call ptr @make_candy_function(ptr @Core_int_pow, ptr %857, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %858, ptr @fun_Core_int_pow, align 8
  %859 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %860 = call ptr @make_candy_function(ptr @Core_text_removePrefix, ptr %859, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %860, ptr @fun_Core_text_removePrefix, align 8
  %861 = alloca ptr, i64 3, align 8
  %862 = load ptr, ptr @tag_NoMatch, align 8
  %863 = getelementptr ptr, ptr %861, i64 0
  store ptr %862, ptr %863, align 8
  %864 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %865 = getelementptr ptr, ptr %861, i64 1
  store ptr %864, ptr %865, align 8
  %866 = getelementptr ptr, ptr %861, i64 2
  store ptr null, ptr %866, align 8
  %867 = call ptr @make_candy_list(ptr %861)
  store ptr %867, ptr @62, align 8
  %868 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %869 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is, ptr %868, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %869, ptr @fun_Core_fixedDecimal_is, align 8
  %870 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %871 = call ptr @make_candy_function(ptr @Core_fixedDecimal_minorUnits, ptr %870, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %871, ptr @fun_Core_fixedDecimal_minorUnits, align 8
  %872 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %873 = call ptr @make_candy_function(ptr @Core_fixedDecimal_scale, ptr %872, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %873, ptr @fun_Core_fixedDecimal_scale, align 8
  %874 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %875 = call ptr @make_candy_function(ptr @Core_fixedDecimal_fromIntScaled, ptr %874, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %875, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  %876 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %877 = call ptr @make_candy_function(ptr @Core_fixedDecimal_floorToInt, ptr %876, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %877, ptr @fun_Core_fixedDecimal_floorToInt, align 8
  %878 = load ptr, ptr @num_0, align 8
  %879 = load ptr, ptr @num_0, align 8
  %880 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %878, ptr %879)
  %881 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:2\00", ptr %881, align 1
  %882 = call ptr @make_candy_text(ptr %881)
  store ptr %882, ptr @"Core:fixedDecimal:rescaledMinorUnits:2", align 8
  %883 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:4\00", ptr %883, align 1
  %884 = call ptr @make_candy_text(ptr %883)
  store ptr %884, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  %885 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isScale targetScale` was not satisfied\00", ptr %885, align 1
  %886 = call ptr @make_candy_text(ptr %885)
  store ptr %886, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %887 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:9\00", ptr %887, align 1
  %888 = call ptr @make_candy_text(ptr %887)
  store ptr %888, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  %889 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:13\00", ptr %889, align 1
  %890 = call ptr @make_candy_text(ptr %889)
  store ptr %890, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  %891 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23\00", ptr %891, align 1
  %892 = call ptr @make_candy_text(ptr %891)
  store ptr %892, ptr @"Core:fixedDecimal:rescaledMinorUnits:23", align 8
  %893 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:2\00", ptr %893, align 1
  %894 = call ptr @make_candy_text(ptr %893)
  store ptr %894, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:2", align 8
  %895 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:14\00", ptr %895, align 1
  %896 = call ptr @make_candy_text(ptr %895)
  store ptr %896, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:14", align 8
  %897 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:24\00", ptr %897, align 1
  %898 = call ptr @make_candy_text(ptr %897)
  store ptr %898, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  %899 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:25\00", ptr %899, align 1
  %900 = call ptr @make_candy_text(ptr %899)
  store ptr %900, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  %901 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:26\00", ptr %901, align 1
  %902 = call ptr @make_candy_text(ptr %901)
  store ptr %902, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:26", align 8
  %903 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:2\00", ptr %903, align 1
  %904 = call ptr @make_candy_text(ptr %903)
  store ptr %904, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:2", align 8
  %905 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:23\00", ptr %905, align 1
  %906 = call ptr @make_candy_text(ptr %905)
  store ptr %906, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:23", align 8
  %907 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:24\00", ptr %907, align 1
  %908 = call ptr @make_candy_text(ptr %907)
  store ptr %908, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  %909 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:25\00", ptr %909, align 1
  %910 = call ptr @make_candy_text(ptr %909)
  store ptr %910, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  %911 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:26\00", ptr %911, align 1
  %912 = call ptr @make_candy_text(ptr %911)
  store ptr %912, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  %913 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:26\00", ptr %913, align 1
  %914 = call ptr @make_candy_text(ptr %913)
  store ptr %914, ptr @"Core:fixedDecimal:rescaledMinorUnits:26", align 8
  %915 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %916 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits, ptr %915, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %916, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  %917 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:2\00", ptr %917, align 1
  %918 = call ptr @make_candy_text(ptr %917)
  store ptr %918, ptr @"Core:fixedDecimal:comparableMinorUnits:2", align 8
  %919 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:4\00", ptr %919, align 1
  %920 = call ptr @make_candy_text(ptr %919)
  store ptr %920, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  %921 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:7\00", ptr %921, align 1
  %922 = call ptr @make_candy_text(ptr %921)
  store ptr %922, ptr @"Core:fixedDecimal:comparableMinorUnits:7", align 8
  %923 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:9\00", ptr %923, align 1
  %924 = call ptr @make_candy_text(ptr %923)
  store ptr %924, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  %925 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:20\00", ptr %925, align 1
  %926 = call ptr @make_candy_text(ptr %925)
  store ptr %926, ptr @"Core:fixedDecimal:comparableMinorUnits:20", align 8
  %927 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:23\00", ptr %927, align 1
  %928 = call ptr @make_candy_text(ptr %927)
  store ptr %928, ptr @"Core:fixedDecimal:comparableMinorUnits:23", align 8
  %929 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:24\00", ptr %929, align 1
  %930 = call ptr @make_candy_text(ptr %929)
  store ptr %930, ptr @"Core:fixedDecimal:comparableMinorUnits:24", align 8
  %931 = alloca i8, i64 7, align 1
  store [7 x i8] c"ValueA\00", ptr %931, align 1
  %932 = call ptr @make_candy_tag(ptr %931, ptr null)
  store ptr %932, ptr @tag_ValueA, align 8
  %933 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:30\00", ptr %933, align 1
  %934 = call ptr @make_candy_text(ptr %933)
  store ptr %934, ptr @"Core:fixedDecimal:comparableMinorUnits:30", align 8
  %935 = alloca i8, i64 7, align 1
  store [7 x i8] c"ValueB\00", ptr %935, align 1
  %936 = call ptr @make_candy_tag(ptr %935, ptr null)
  store ptr %936, ptr @tag_ValueB, align 8
  %937 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:35\00", ptr %937, align 1
  %938 = call ptr @make_candy_text(ptr %937)
  store ptr %938, ptr @"Core:fixedDecimal:comparableMinorUnits:35", align 8
  %939 = alloca i8, i64 12, align 1
  store [12 x i8] c"TargetScale\00", ptr %939, align 1
  %940 = call ptr @make_candy_tag(ptr %939, ptr null)
  store ptr %940, ptr @tag_TargetScale, align 8
  %941 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %942 = call ptr @make_candy_function(ptr @Core_fixedDecimal_comparableMinorUnits, ptr %941, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %942, ptr @fun_Core_fixedDecimal_comparableMinorUnits, align 8
  %943 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:2\00", ptr %943, align 1
  %944 = call ptr @make_candy_text(ptr %943)
  store ptr %944, ptr @"Core:fixedDecimal:add:2", align 8
  %945 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is summandA` was not satisfied\00", ptr %945, align 1
  %946 = call ptr @make_candy_text(ptr %945)
  store ptr %946, ptr @"text_`is summandA` was not satisfied", align 8
  %947 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:4\00", ptr %947, align 1
  %948 = call ptr @make_candy_text(ptr %947)
  store ptr %948, ptr @"Core:fixedDecimal:add:4", align 8
  %949 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:7\00", ptr %949, align 1
  %950 = call ptr @make_candy_text(ptr %949)
  store ptr %950, ptr @"Core:fixedDecimal:add:7", align 8
  %951 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is summandB` was not satisfied\00", ptr %951, align 1
  %952 = call ptr @make_candy_text(ptr %951)
  store ptr %952, ptr @"text_`is summandB` was not satisfied", align 8
  %953 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:fixedDecimal:add:9\00", ptr %953, align 1
  %954 = call ptr @make_candy_text(ptr %953)
  store ptr %954, ptr @"Core:fixedDecimal:add:9", align 8
  %955 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:13\00", ptr %955, align 1
  %956 = call ptr @make_candy_text(ptr %955)
  store ptr %956, ptr @"Core:fixedDecimal:add:13", align 8
  %957 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:14\00", ptr %957, align 1
  %958 = call ptr @make_candy_text(ptr %957)
  store ptr %958, ptr @"Core:fixedDecimal:add:14", align 8
  %959 = alloca i8, i64 39, align 1
  store [39 x i8] c"Struct doesn't contain key `ValueA`: `\00", ptr %959, align 1
  %960 = call ptr @make_candy_text(ptr %959)
  store ptr %960, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %961 = alloca i8, i64 39, align 1
  store [39 x i8] c"Struct doesn't contain key `ValueB`: `\00", ptr %961, align 1
  %962 = call ptr @make_candy_text(ptr %961)
  store ptr %962, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %963 = alloca i8, i64 44, align 1
  store [44 x i8] c"Struct doesn't contain key `TargetScale`: `\00", ptr %963, align 1
  %964 = call ptr @make_candy_text(ptr %963)
  store ptr %964, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %965 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:add:valueA\00", ptr %965, align 1
  %966 = call ptr @make_candy_text(ptr %965)
  store ptr %966, ptr @"Core:fixedDecimal:add:valueA", align 8
  %967 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:add:valueB\00", ptr %967, align 1
  %968 = call ptr @make_candy_text(ptr %967)
  store ptr %968, ptr @"Core:fixedDecimal:add:valueB", align 8
  %969 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:add:targetScale\00", ptr %969, align 1
  %970 = call ptr @make_candy_text(ptr %969)
  store ptr %970, ptr @"Core:fixedDecimal:add:targetScale", align 8
  %971 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:27\00", ptr %971, align 1
  %972 = call ptr @make_candy_text(ptr %971)
  store ptr %972, ptr @"Core:fixedDecimal:add:27", align 8
  %973 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:fixedDecimal:add:29\00", ptr %973, align 1
  %974 = call ptr @make_candy_text(ptr %973)
  store ptr %974, ptr @"Core:fixedDecimal:add:29", align 8
  %975 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %976 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add, ptr %975, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %976, ptr @fun_Core_fixedDecimal_add, align 8
  %977 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:2\00", ptr %977, align 1
  %978 = call ptr @make_candy_text(ptr %977)
  store ptr %978, ptr @"Core:fixedDecimal:subtract:2", align 8
  %979 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is minuend` was not satisfied\00", ptr %979, align 1
  %980 = call ptr @make_candy_text(ptr %979)
  store ptr %980, ptr @"text_`is minuend` was not satisfied", align 8
  %981 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:4\00", ptr %981, align 1
  %982 = call ptr @make_candy_text(ptr %981)
  store ptr %982, ptr @"Core:fixedDecimal:subtract:4", align 8
  %983 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:7\00", ptr %983, align 1
  %984 = call ptr @make_candy_text(ptr %983)
  store ptr %984, ptr @"Core:fixedDecimal:subtract:7", align 8
  %985 = alloca i8, i64 34, align 1
  store [34 x i8] c"`is subtrahend` was not satisfied\00", ptr %985, align 1
  %986 = call ptr @make_candy_text(ptr %985)
  store ptr %986, ptr @"text_`is subtrahend` was not satisfied", align 8
  %987 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:9\00", ptr %987, align 1
  %988 = call ptr @make_candy_text(ptr %987)
  store ptr %988, ptr @"Core:fixedDecimal:subtract:9", align 8
  %989 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:13\00", ptr %989, align 1
  %990 = call ptr @make_candy_text(ptr %989)
  store ptr %990, ptr @"Core:fixedDecimal:subtract:13", align 8
  %991 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:14\00", ptr %991, align 1
  %992 = call ptr @make_candy_text(ptr %991)
  store ptr %992, ptr @"Core:fixedDecimal:subtract:14", align 8
  %993 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:subtract:valueA\00", ptr %993, align 1
  %994 = call ptr @make_candy_text(ptr %993)
  store ptr %994, ptr @"Core:fixedDecimal:subtract:valueA", align 8
  %995 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:subtract:valueB\00", ptr %995, align 1
  %996 = call ptr @make_candy_text(ptr %995)
  store ptr %996, ptr @"Core:fixedDecimal:subtract:valueB", align 8
  %997 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:subtract:targetScale\00", ptr %997, align 1
  %998 = call ptr @make_candy_text(ptr %997)
  store ptr %998, ptr @"Core:fixedDecimal:subtract:targetScale", align 8
  %999 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:27\00", ptr %999, align 1
  %1000 = call ptr @make_candy_text(ptr %999)
  store ptr %1000, ptr @"Core:fixedDecimal:subtract:27", align 8
  %1001 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:29\00", ptr %1001, align 1
  %1002 = call ptr @make_candy_text(ptr %1001)
  store ptr %1002, ptr @"Core:fixedDecimal:subtract:29", align 8
  %1003 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1004 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract, ptr %1003, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1004, ptr @fun_Core_fixedDecimal_subtract, align 8
  %1005 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:2\00", ptr %1005, align 1
  %1006 = call ptr @make_candy_text(ptr %1005)
  store ptr %1006, ptr @"Core:fixedDecimal:negate:2", align 8
  %1007 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:4\00", ptr %1007, align 1
  %1008 = call ptr @make_candy_text(ptr %1007)
  store ptr %1008, ptr @"Core:fixedDecimal:negate:4", align 8
  %1009 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:negate:8\00", ptr %1009, align 1
  %1010 = call ptr @make_candy_text(ptr %1009)
  store ptr %1010, ptr @"Core:fixedDecimal:negate:8", align 8
  %1011 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:17\00", ptr %1011, align 1
  %1012 = call ptr @make_candy_text(ptr %1011)
  store ptr %1012, ptr @"Core:fixedDecimal:negate:17", align 8
  %1013 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:20\00", ptr %1013, align 1
  %1014 = call ptr @make_candy_text(ptr %1013)
  store ptr %1014, ptr @"Core:fixedDecimal:negate:20", align 8
  %1015 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:negate:21\00", ptr %1015, align 1
  %1016 = call ptr @make_candy_text(ptr %1015)
  store ptr %1016, ptr @"Core:fixedDecimal:negate:21", align 8
  %1017 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1018 = call ptr @make_candy_function(ptr @Core_fixedDecimal_negate, ptr %1017, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1018, ptr @fun_Core_fixedDecimal_negate, align 8
  %1019 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is dividend` was not satisfied\00", ptr %1019, align 1
  %1020 = call ptr @make_candy_text(ptr %1019)
  store ptr %1020, ptr @"text_`is dividend` was not satisfied", align 8
  %1021 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is divisor` was not satisfied\00", ptr %1021, align 1
  %1022 = call ptr @make_candy_text(ptr %1021)
  store ptr %1022, ptr @"text_`is divisor` was not satisfied", align 8
  %1023 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:2\00", ptr %1023, align 1
  %1024 = call ptr @make_candy_text(ptr %1023)
  store ptr %1024, ptr @"Core:fixedDecimal:divideTruncatingAtScale:2", align 8
  %1025 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:4\00", ptr %1025, align 1
  %1026 = call ptr @make_candy_text(ptr %1025)
  store ptr %1026, ptr @"Core:fixedDecimal:divideTruncatingAtScale:4", align 8
  %1027 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:7\00", ptr %1027, align 1
  %1028 = call ptr @make_candy_text(ptr %1027)
  store ptr %1028, ptr @"Core:fixedDecimal:divideTruncatingAtScale:7", align 8
  %1029 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:9\00", ptr %1029, align 1
  %1030 = call ptr @make_candy_text(ptr %1029)
  store ptr %1030, ptr @"Core:fixedDecimal:divideTruncatingAtScale:9", align 8
  %1031 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:14\00", ptr %1031, align 1
  %1032 = call ptr @make_candy_text(ptr %1031)
  store ptr %1032, ptr @"Core:fixedDecimal:divideTruncatingAtScale:14", align 8
  %1033 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:17\00", ptr %1033, align 1
  %1034 = call ptr @make_candy_text(ptr %1033)
  store ptr %1034, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  %1035 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:29\00", ptr %1035, align 1
  %1036 = call ptr @make_candy_text(ptr %1035)
  store ptr %1036, ptr @"Core:fixedDecimal:divideTruncatingAtScale:29", align 8
  %1037 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:37\00", ptr %1037, align 1
  %1038 = call ptr @make_candy_text(ptr %1037)
  store ptr %1038, ptr @"Core:fixedDecimal:divideTruncatingAtScale:37", align 8
  %1039 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:41\00", ptr %1039, align 1
  %1040 = call ptr @make_candy_text(ptr %1039)
  store ptr %1040, ptr @"Core:fixedDecimal:divideTruncatingAtScale:41", align 8
  %1041 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:42\00", ptr %1041, align 1
  %1042 = call ptr @make_candy_text(ptr %1041)
  store ptr %1042, ptr @"Core:fixedDecimal:divideTruncatingAtScale:42", align 8
  %1043 = alloca i8, i64 49, align 1
  store [49 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:valueA\00", ptr %1043, align 1
  %1044 = call ptr @make_candy_text(ptr %1043)
  store ptr %1044, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueA", align 8
  %1045 = alloca i8, i64 49, align 1
  store [49 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:valueB\00", ptr %1045, align 1
  %1046 = call ptr @make_candy_text(ptr %1045)
  store ptr %1046, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueB", align 8
  %1047 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:56\00", ptr %1047, align 1
  %1048 = call ptr @make_candy_text(ptr %1047)
  store ptr %1048, ptr @"Core:fixedDecimal:divideTruncatingAtScale:56", align 8
  %1049 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:57\00", ptr %1049, align 1
  %1050 = call ptr @make_candy_text(ptr %1049)
  store ptr %1050, ptr @"Core:fixedDecimal:divideTruncatingAtScale:57", align 8
  %1051 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:67\00", ptr %1051, align 1
  %1052 = call ptr @make_candy_text(ptr %1051)
  store ptr %1052, ptr @"Core:fixedDecimal:divideTruncatingAtScale:67", align 8
  %1053 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:fixedDecimal:divideTruncatingAtScale:69\00", ptr %1053, align 1
  %1054 = call ptr @make_candy_text(ptr %1053)
  store ptr %1054, ptr @"Core:fixedDecimal:divideTruncatingAtScale:69", align 8
  %1055 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1056 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale, ptr %1055, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1056, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale, align 8
  %1057 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:2\00", ptr %1057, align 1
  %1058 = call ptr @make_candy_text(ptr %1057)
  store ptr %1058, ptr @"Core:fixedDecimal:compareTo:2", align 8
  %1059 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:4\00", ptr %1059, align 1
  %1060 = call ptr @make_candy_text(ptr %1059)
  store ptr %1060, ptr @"Core:fixedDecimal:compareTo:4", align 8
  %1061 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:7\00", ptr %1061, align 1
  %1062 = call ptr @make_candy_text(ptr %1061)
  store ptr %1062, ptr @"Core:fixedDecimal:compareTo:7", align 8
  %1063 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:compareTo:9\00", ptr %1063, align 1
  %1064 = call ptr @make_candy_text(ptr %1063)
  store ptr %1064, ptr @"Core:fixedDecimal:compareTo:9", align 8
  %1065 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:13\00", ptr %1065, align 1
  %1066 = call ptr @make_candy_text(ptr %1065)
  store ptr %1066, ptr @"Core:fixedDecimal:compareTo:13", align 8
  %1067 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:14\00", ptr %1067, align 1
  %1068 = call ptr @make_candy_text(ptr %1067)
  store ptr %1068, ptr @"Core:fixedDecimal:compareTo:14", align 8
  %1069 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:compareTo:valueA#1\00", ptr %1069, align 1
  %1070 = call ptr @make_candy_text(ptr %1069)
  store ptr %1070, ptr @"Core:fixedDecimal:compareTo:valueA#1", align 8
  %1071 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:compareTo:valueB#1\00", ptr %1071, align 1
  %1072 = call ptr @make_candy_text(ptr %1071)
  store ptr %1072, ptr @"Core:fixedDecimal:compareTo:valueB#1", align 8
  %1073 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:26\00", ptr %1073, align 1
  %1074 = call ptr @make_candy_text(ptr %1073)
  store ptr %1074, ptr @"Core:fixedDecimal:compareTo:26", align 8
  %1075 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:45\00", ptr %1075, align 1
  %1076 = call ptr @make_candy_text(ptr %1075)
  store ptr %1076, ptr @"Core:fixedDecimal:compareTo:45", align 8
  %1077 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:compareTo:46\00", ptr %1077, align 1
  %1078 = call ptr @make_candy_text(ptr %1077)
  store ptr %1078, ptr @"Core:fixedDecimal:compareTo:46", align 8
  %1079 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1080 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo, ptr %1079, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1080, ptr @fun_Core_fixedDecimal_compareTo, align 8
  %1081 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:2\00", ptr %1081, align 1
  %1082 = call ptr @make_candy_text(ptr %1081)
  store ptr %1082, ptr @"Core:fixedDecimal:isGreaterThan:2", align 8
  %1083 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:4\00", ptr %1083, align 1
  %1084 = call ptr @make_candy_text(ptr %1083)
  store ptr %1084, ptr @"Core:fixedDecimal:isGreaterThan:4", align 8
  %1085 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:7\00", ptr %1085, align 1
  %1086 = call ptr @make_candy_text(ptr %1085)
  store ptr %1086, ptr @"Core:fixedDecimal:isGreaterThan:7", align 8
  %1087 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isGreaterThan:9\00", ptr %1087, align 1
  %1088 = call ptr @make_candy_text(ptr %1087)
  store ptr %1088, ptr @"Core:fixedDecimal:isGreaterThan:9", align 8
  %1089 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isGreaterThan:14\00", ptr %1089, align 1
  %1090 = call ptr @make_candy_text(ptr %1089)
  store ptr %1090, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  %1091 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:2\00", ptr %1091, align 1
  %1092 = call ptr @make_candy_text(ptr %1091)
  store ptr %1092, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:2", align 8
  %1093 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:4\00", ptr %1093, align 1
  %1094 = call ptr @make_candy_text(ptr %1093)
  store ptr %1094, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:4", align 8
  %1095 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:7\00", ptr %1095, align 1
  %1096 = call ptr @make_candy_text(ptr %1095)
  store ptr %1096, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:7", align 8
  %1097 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:9\00", ptr %1097, align 1
  %1098 = call ptr @make_candy_text(ptr %1097)
  store ptr %1098, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:9", align 8
  %1099 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:13\00", ptr %1099, align 1
  %1100 = call ptr @make_candy_text(ptr %1099)
  store ptr %1100, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %1101 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:isLessThanOrEqualTo:22\00", ptr %1101, align 1
  %1102 = call ptr @make_candy_text(ptr %1101)
  store ptr %1102, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:22", align 8
  %1103 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1104 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isLessThanOrEqualTo, ptr %1103, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1104, ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo, align 8
  %1105 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:2\00", ptr %1105, align 1
  %1106 = call ptr @make_candy_text(ptr %1105)
  store ptr %1106, ptr @"Core:fixedDecimal:isNegative:2", align 8
  %1107 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:4\00", ptr %1107, align 1
  %1108 = call ptr @make_candy_text(ptr %1107)
  store ptr %1108, ptr @"Core:fixedDecimal:isNegative:4", align 8
  %1109 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:7\00", ptr %1109, align 1
  %1110 = call ptr @make_candy_text(ptr %1109)
  store ptr %1110, ptr @"Core:fixedDecimal:isNegative:7", align 8
  %1111 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isNegative:17\00", ptr %1111, align 1
  %1112 = call ptr @make_candy_text(ptr %1111)
  store ptr %1112, ptr @"Core:fixedDecimal:isNegative:17", align 8
  %1113 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:2\00", ptr %1113, align 1
  %1114 = call ptr @make_candy_text(ptr %1113)
  store ptr %1114, ptr @"Core:fixedDecimal:isNonNegative:2", align 8
  %1115 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:4\00", ptr %1115, align 1
  %1116 = call ptr @make_candy_text(ptr %1115)
  store ptr %1116, ptr @"Core:fixedDecimal:isNonNegative:4", align 8
  %1117 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:isNonNegative:7\00", ptr %1117, align 1
  %1118 = call ptr @make_candy_text(ptr %1117)
  store ptr %1118, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  %1119 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:isNonNegative:16\00", ptr %1119, align 1
  %1120 = call ptr @make_candy_text(ptr %1119)
  store ptr %1120, ptr @"Core:fixedDecimal:isNonNegative:16", align 8
  %1121 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:2\00", ptr %1121, align 1
  %1122 = call ptr @make_candy_text(ptr %1121)
  store ptr %1122, ptr @"Core:fixedDecimal:absolute:2", align 8
  %1123 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:4\00", ptr %1123, align 1
  %1124 = call ptr @make_candy_text(ptr %1123)
  store ptr %1124, ptr @"Core:fixedDecimal:absolute:4", align 8
  %1125 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:absolute:8\00", ptr %1125, align 1
  %1126 = call ptr @make_candy_text(ptr %1125)
  store ptr %1126, ptr @"Core:fixedDecimal:absolute:8", align 8
  %1127 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:absolute:9:2\00", ptr %1127, align 1
  %1128 = call ptr @make_candy_text(ptr %1127)
  store ptr %1128, ptr @"Core:fixedDecimal:absolute:9:2", align 8
  %1129 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:absolute:11\00", ptr %1129, align 1
  %1130 = call ptr @make_candy_text(ptr %1129)
  store ptr %1130, ptr @"Core:fixedDecimal:absolute:11", align 8
  %1131 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1132 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute, ptr %1131, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1132, ptr @fun_Core_fixedDecimal_absolute, align 8
  %1133 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:2\00", ptr %1133, align 1
  %1134 = call ptr @make_candy_text(ptr %1133)
  store ptr %1134, ptr @"Core:fixedDecimal:approxEquals:2", align 8
  %1135 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:4\00", ptr %1135, align 1
  %1136 = call ptr @make_candy_text(ptr %1135)
  store ptr %1136, ptr @"Core:fixedDecimal:approxEquals:4", align 8
  %1137 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:7\00", ptr %1137, align 1
  %1138 = call ptr @make_candy_text(ptr %1137)
  store ptr %1138, ptr @"Core:fixedDecimal:approxEquals:7", align 8
  %1139 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:approxEquals:9\00", ptr %1139, align 1
  %1140 = call ptr @make_candy_text(ptr %1139)
  store ptr %1140, ptr @"Core:fixedDecimal:approxEquals:9", align 8
  %1141 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:12\00", ptr %1141, align 1
  %1142 = call ptr @make_candy_text(ptr %1141)
  store ptr %1142, ptr @"Core:fixedDecimal:approxEquals:12", align 8
  %1143 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is delta` was not satisfied\00", ptr %1143, align 1
  %1144 = call ptr @make_candy_text(ptr %1143)
  store ptr %1144, ptr @"text_`is delta` was not satisfied", align 8
  %1145 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:14\00", ptr %1145, align 1
  %1146 = call ptr @make_candy_text(ptr %1145)
  store ptr %1146, ptr @"Core:fixedDecimal:approxEquals:14", align 8
  %1147 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:17\00", ptr %1147, align 1
  %1148 = call ptr @make_candy_text(ptr %1147)
  store ptr %1148, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  %1149 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative delta` was not satisfied\00", ptr %1149, align 1
  %1150 = call ptr @make_candy_text(ptr %1149)
  store ptr %1150, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  %1151 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:19\00", ptr %1151, align 1
  %1152 = call ptr @make_candy_text(ptr %1151)
  store ptr %1152, ptr @"Core:fixedDecimal:approxEquals:19", align 8
  %1153 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:23\00", ptr %1153, align 1
  %1154 = call ptr @make_candy_text(ptr %1153)
  store ptr %1154, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  %1155 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:25\00", ptr %1155, align 1
  %1156 = call ptr @make_candy_text(ptr %1155)
  store ptr %1156, ptr @"Core:fixedDecimal:approxEquals:25", align 8
  %1157 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:approxEquals:28\00", ptr %1157, align 1
  %1158 = call ptr @make_candy_text(ptr %1157)
  store ptr %1158, ptr @"Core:fixedDecimal:approxEquals:28", align 8
  %1159 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1160 = call ptr @make_candy_function(ptr @Core_fixedDecimal_approxEquals, ptr %1159, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1160, ptr @fun_Core_fixedDecimal_approxEquals, align 8
  %1161 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:2\00", ptr %1161, align 1
  %1162 = call ptr @make_candy_text(ptr %1161)
  store ptr %1162, ptr @"Core:fixedDecimal:toText:2", align 8
  %1163 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:4\00", ptr %1163, align 1
  %1164 = call ptr @make_candy_text(ptr %1163)
  store ptr %1164, ptr @"Core:fixedDecimal:toText:4", align 8
  %1165 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:7\00", ptr %1165, align 1
  %1166 = call ptr @make_candy_text(ptr %1165)
  store ptr %1166, ptr @"Core:fixedDecimal:toText:7", align 8
  %1167 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:2\00", ptr %1167, align 1
  %1168 = call ptr @make_candy_text(ptr %1167)
  store ptr %1168, ptr @"Core:fixedDecimal:toText:10:2", align 8
  %1169 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:4\00", ptr %1169, align 1
  %1170 = call ptr @make_candy_text(ptr %1169)
  store ptr %1170, ptr @"Core:fixedDecimal:toText:10:4", align 8
  %1171 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:8\00", ptr %1171, align 1
  %1172 = call ptr @make_candy_text(ptr %1171)
  store ptr %1172, ptr @"Core:fixedDecimal:toText:10:8", align 8
  %1173 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:18\00", ptr %1173, align 1
  %1174 = call ptr @make_candy_text(ptr %1173)
  store ptr %1174, ptr @"Core:fixedDecimal:toText:10:18", align 8
  %1175 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:30\00", ptr %1175, align 1
  %1176 = call ptr @make_candy_text(ptr %1175)
  store ptr %1176, ptr @"Core:fixedDecimal:toText:10:30", align 8
  %1177 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:31:10\00", ptr %1177, align 1
  %1178 = call ptr @make_candy_text(ptr %1177)
  store ptr %1178, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  %1179 = alloca i8, i64 2, align 1
  store [2 x i8] c"1\00", ptr %1179, align 1
  %1180 = call ptr @make_candy_text(ptr %1179)
  store ptr %1180, ptr @text_1, align 8
  %1181 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:31:28\00", ptr %1181, align 1
  %1182 = call ptr @make_candy_text(ptr %1181)
  store ptr %1182, ptr @"Core:fixedDecimal:toText:10:31:28", align 8
  %1183 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:32:10\00", ptr %1183, align 1
  %1184 = call ptr @make_candy_text(ptr %1183)
  store ptr %1184, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  %1185 = alloca i8, i64 3, align 1
  store [3 x i8] c"-1\00", ptr %1185, align 1
  %1186 = call ptr @make_candy_text(ptr %1185)
  store ptr %1186, ptr @text_-1, align 8
  %1187 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:32:28\00", ptr %1187, align 1
  %1188 = call ptr @make_candy_text(ptr %1187)
  store ptr %1188, ptr @"Core:fixedDecimal:toText:10:32:28", align 8
  %1189 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:33\00", ptr %1189, align 1
  %1190 = call ptr @make_candy_text(ptr %1189)
  store ptr %1190, ptr @"Core:fixedDecimal:toText:10:33", align 8
  %1191 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:11\00", ptr %1191, align 1
  %1192 = call ptr @make_candy_text(ptr %1191)
  store ptr %1192, ptr @"Core:fixedDecimal:toText:11", align 8
  %1193 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:20\00", ptr %1193, align 1
  %1194 = call ptr @make_candy_text(ptr %1193)
  store ptr %1194, ptr @"Core:fixedDecimal:toText:20", align 8
  %1195 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:21\00", ptr %1195, align 1
  %1196 = call ptr @make_candy_text(ptr %1195)
  store ptr %1196, ptr @"Core:fixedDecimal:toText:21", align 8
  %1197 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:23:0\00", ptr %1197, align 1
  %1198 = call ptr @make_candy_text(ptr %1197)
  store ptr %1198, ptr @"Core:fixedDecimal:toText:23:0", align 8
  %1199 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:24\00", ptr %1199, align 1
  %1200 = call ptr @make_candy_text(ptr %1199)
  store ptr %1200, ptr @"Core:fixedDecimal:toText:24", align 8
  %1201 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:27\00", ptr %1201, align 1
  %1202 = call ptr @make_candy_text(ptr %1201)
  store ptr %1202, ptr @"Core:fixedDecimal:toText:27", align 8
  %1203 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:28\00", ptr %1203, align 1
  %1204 = call ptr @make_candy_text(ptr %1203)
  store ptr %1204, ptr @"Core:fixedDecimal:toText:28", align 8
  %1205 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:30:0\00", ptr %1205, align 1
  %1206 = call ptr @make_candy_text(ptr %1205)
  store ptr %1206, ptr @"Core:fixedDecimal:toText:30:0", align 8
  %1207 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:31\00", ptr %1207, align 1
  %1208 = call ptr @make_candy_text(ptr %1207)
  store ptr %1208, ptr @"Core:fixedDecimal:toText:31", align 8
  %1209 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:32\00", ptr %1209, align 1
  %1210 = call ptr @make_candy_text(ptr %1209)
  store ptr %1210, ptr @"Core:fixedDecimal:toText:32", align 8
  %1211 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:33\00", ptr %1211, align 1
  %1212 = call ptr @make_candy_text(ptr %1211)
  store ptr %1212, ptr @"Core:fixedDecimal:toText:33", align 8
  %1213 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1214 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText, ptr %1213, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1214, ptr @fun_Core_fixedDecimal_toText, align 8
  %1215 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %1215, align 1
  %1216 = call ptr @make_candy_text(ptr %1215)
  store ptr %1216, ptr @"Core:function:is1:11:3", align 8
  %1217 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %1217, align 1
  %1218 = call ptr @make_candy_text(ptr %1217)
  store ptr %1218, ptr @"Core:function:is1:13", align 8
  %1219 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1220 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %1219, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1220, ptr @fun_Core_function_is1, align 8
  %1221 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU32:15\00", ptr %1221, align 1
  %1222 = call ptr @make_candy_text(ptr %1221)
  store ptr %1222, ptr @"Core:int:fitsInRustU32:15", align 8
  %1223 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:4\00", ptr %1223, align 1
  %1224 = call ptr @make_candy_text(ptr %1223)
  store ptr %1224, ptr @"Core:int:fitsInRustU32:4", align 8
  %1225 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:7\00", ptr %1225, align 1
  %1226 = call ptr @make_candy_text(ptr %1225)
  store ptr %1226, ptr @"Core:int:fitsInRustU32:7", align 8
  %1227 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:9\00", ptr %1227, align 1
  %1228 = call ptr @make_candy_text(ptr %1227)
  store ptr %1228, ptr @"Core:int:fitsInRustU32:9", align 8
  %1229 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:4\00", ptr %1229, align 1
  %1230 = call ptr @make_candy_text(ptr %1229)
  store ptr %1230, ptr @"Core:int:isOdd:4", align 8
  %1231 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:8\00", ptr %1231, align 1
  %1232 = call ptr @make_candy_text(ptr %1231)
  store ptr %1232, ptr @"Core:int:isOdd:8", align 8
  %1233 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:4\00", ptr %1233, align 1
  %1234 = call ptr @make_candy_text(ptr %1233)
  store ptr %1234, ptr @"Core:int:isPositive:4", align 8
  %1235 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:8\00", ptr %1235, align 1
  %1236 = call ptr @make_candy_text(ptr %1235)
  store ptr %1236, ptr @"Core:int:isPositive:8", align 8
  %1237 = call ptr @make_candy_int(i64 4294967295)
  store ptr %1237, ptr @num_4294967295, align 8
  %1238 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative value` was not satisfied\00", ptr %1238, align 1
  %1239 = call ptr @make_candy_text(ptr %1238)
  store ptr %1239, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %1240 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1241 = call ptr @make_candy_function(ptr @Core_int_isOdd, ptr %1240, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1241, ptr @fun_Core_int_isOdd, align 8
  %1242 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:109\00", ptr %1242, align 1
  %1243 = call ptr @make_candy_text(ptr %1242)
  store ptr %1243, ptr @"Core:iterator:109", align 8
  %1244 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:11\00", ptr %1244, align 1
  %1245 = call ptr @make_candy_text(ptr %1244)
  store ptr %1245, ptr @"Core:iterator:all:11", align 8
  %1246 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:15\00", ptr %1246, align 1
  %1247 = call ptr @make_candy_text(ptr %1246)
  store ptr %1247, ptr @"Core:iterator:all:15", align 8
  %1248 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:13\00", ptr %1248, align 1
  %1249 = call ptr @make_candy_text(ptr %1248)
  store ptr %1249, ptr @"Core:iterator:all:18:13", align 8
  %1250 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:15\00", ptr %1250, align 1
  %1251 = call ptr @make_candy_text(ptr %1250)
  store ptr %1251, ptr @"Core:iterator:all:18:15", align 8
  %1252 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:all:18:2\00", ptr %1252, align 1
  %1253 = call ptr @make_candy_text(ptr %1252)
  store ptr %1253, ptr @"Core:iterator:all:18:2", align 8
  %1254 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:26\00", ptr %1254, align 1
  %1255 = call ptr @make_candy_text(ptr %1254)
  store ptr %1255, ptr @"Core:iterator:all:18:26", align 8
  %1256 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:19\00", ptr %1256, align 1
  %1257 = call ptr @make_candy_text(ptr %1256)
  store ptr %1257, ptr @"Core:iterator:all:19", align 8
  %1258 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:all:9\00", ptr %1258, align 1
  %1259 = call ptr @make_candy_text(ptr %1258)
  store ptr %1259, ptr @"Core:iterator:all:9", align 8
  %1260 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:11\00", ptr %1260, align 1
  %1261 = call ptr @make_candy_text(ptr %1260)
  store ptr %1261, ptr @"Core:iterator:any:11", align 8
  %1262 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:15\00", ptr %1262, align 1
  %1263 = call ptr @make_candy_text(ptr %1262)
  store ptr %1263, ptr @"Core:iterator:any:15", align 8
  %1264 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:13\00", ptr %1264, align 1
  %1265 = call ptr @make_candy_text(ptr %1264)
  store ptr %1265, ptr @"Core:iterator:any:18:13", align 8
  %1266 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:15\00", ptr %1266, align 1
  %1267 = call ptr @make_candy_text(ptr %1266)
  store ptr %1267, ptr @"Core:iterator:any:18:15", align 8
  %1268 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:any:18:2\00", ptr %1268, align 1
  %1269 = call ptr @make_candy_text(ptr %1268)
  store ptr %1269, ptr @"Core:iterator:any:18:2", align 8
  %1270 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:26\00", ptr %1270, align 1
  %1271 = call ptr @make_candy_text(ptr %1270)
  store ptr %1271, ptr @"Core:iterator:any:18:26", align 8
  %1272 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:19\00", ptr %1272, align 1
  %1273 = call ptr @make_candy_text(ptr %1272)
  store ptr %1273, ptr @"Core:iterator:any:19", align 8
  %1274 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:any:9\00", ptr %1274, align 1
  %1275 = call ptr @make_candy_text(ptr %1274)
  store ptr %1275, ptr @"Core:iterator:any:9", align 8
  %1276 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:11\00", ptr %1276, align 1
  %1277 = call ptr @make_candy_text(ptr %1276)
  store ptr %1277, ptr @"Core:iterator:chunked:11", align 8
  %1278 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:21\00", ptr %1278, align 1
  %1279 = call ptr @make_candy_text(ptr %1278)
  store ptr %1279, ptr @"Core:iterator:chunked:21", align 8
  %1280 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:23\00", ptr %1280, align 1
  %1281 = call ptr @make_candy_text(ptr %1280)
  store ptr %1281, ptr @"Core:iterator:chunked:23", align 8
  %1282 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:27\00", ptr %1282, align 1
  %1283 = call ptr @make_candy_text(ptr %1282)
  store ptr %1283, ptr @"Core:iterator:chunked:27", align 8
  %1284 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:32\00", ptr %1284, align 1
  %1285 = call ptr @make_candy_text(ptr %1284)
  store ptr %1285, ptr @"Core:iterator:chunked:32", align 8
  %1286 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:11\00", ptr %1286, align 1
  %1287 = call ptr @make_candy_text(ptr %1286)
  store ptr %1287, ptr @"Core:iterator:ensure:11", align 8
  %1288 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:15\00", ptr %1288, align 1
  %1289 = call ptr @make_candy_text(ptr %1288)
  store ptr %1289, ptr @"Core:iterator:ensure:15", align 8
  %1290 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:ensure:19:2\00", ptr %1290, align 1
  %1291 = call ptr @make_candy_text(ptr %1290)
  store ptr %1291, ptr @"Core:iterator:ensure:19:2", align 8
  %1292 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:20\00", ptr %1292, align 1
  %1293 = call ptr @make_candy_text(ptr %1292)
  store ptr %1293, ptr @"Core:iterator:ensure:20", align 8
  %1294 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:ensure:9\00", ptr %1294, align 1
  %1295 = call ptr @make_candy_text(ptr %1294)
  store ptr %1295, ptr @"Core:iterator:ensure:9", align 8
  %1296 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:14\00", ptr %1296, align 1
  %1297 = call ptr @make_candy_text(ptr %1296)
  store ptr %1297, ptr @"Core:iterator:foldLeft:14", align 8
  %1298 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:16\00", ptr %1298, align 1
  %1299 = call ptr @make_candy_text(ptr %1298)
  store ptr %1299, ptr @"Core:iterator:foldLeft:16", align 8
  %1300 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:1\00", ptr %1300, align 1
  %1301 = call ptr @make_candy_text(ptr %1300)
  store ptr %1301, ptr @"Core:iterator:foldLeft:23:1", align 8
  %1302 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:4\00", ptr %1302, align 1
  %1303 = call ptr @make_candy_text(ptr %1302)
  store ptr %1303, ptr @"Core:iterator:foldLeft:23:4", align 8
  %1304 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:5\00", ptr %1304, align 1
  %1305 = call ptr @make_candy_text(ptr %1304)
  store ptr %1305, ptr @"Core:iterator:foldLeft:23:5", align 8
  %1306 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:foldLeft:23:5:10\00", ptr %1306, align 1
  %1307 = call ptr @make_candy_text(ptr %1306)
  store ptr %1307, ptr @"Core:iterator:foldLeft:23:5:10", align 8
  %1308 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:foldLeft:23:5:8\00", ptr %1308, align 1
  %1309 = call ptr @make_candy_text(ptr %1308)
  store ptr %1309, ptr @"Core:iterator:foldLeft:23:5:8", align 8
  %1310 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:23:5:item\00", ptr %1310, align 1
  %1311 = call ptr @make_candy_text(ptr %1310)
  store ptr %1311, ptr @"Core:iterator:foldLeft:23:5:item", align 8
  %1312 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:23:5:rest\00", ptr %1312, align 1
  %1313 = call ptr @make_candy_text(ptr %1312)
  store ptr %1313, ptr @"Core:iterator:foldLeft:23:5:rest", align 8
  %1314 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:foldLeft:23:iterator\00", ptr %1314, align 1
  %1315 = call ptr @make_candy_text(ptr %1314)
  store ptr %1315, ptr @"Core:iterator:foldLeft:23:iterator", align 8
  %1316 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:foldLeft:23:value\00", ptr %1316, align 1
  %1317 = call ptr @make_candy_text(ptr %1316)
  store ptr %1317, ptr @"Core:iterator:foldLeft:23:value", align 8
  %1318 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:24\00", ptr %1318, align 1
  %1319 = call ptr @make_candy_text(ptr %1318)
  store ptr %1319, ptr @"Core:iterator:foldLeft:24", align 8
  %1320 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:foldLeft:3\00", ptr %1320, align 1
  %1321 = call ptr @make_candy_text(ptr %1320)
  store ptr %1321, ptr @"Core:iterator:foldLeft:3", align 8
  %1322 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:11\00", ptr %1322, align 1
  %1323 = call ptr @make_candy_text(ptr %1322)
  store ptr %1323, ptr @"Core:iterator:fromList:11", align 8
  %1324 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:22\00", ptr %1324, align 1
  %1325 = call ptr @make_candy_text(ptr %1324)
  store ptr %1325, ptr @"Core:iterator:fromList:22", align 8
  %1326 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:fromList:23:10\00", ptr %1326, align 1
  %1327 = call ptr @make_candy_text(ptr %1326)
  store ptr %1327, ptr @"Core:iterator:fromList:23:10", align 8
  %1328 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:24\00", ptr %1328, align 1
  %1329 = call ptr @make_candy_text(ptr %1328)
  store ptr %1329, ptr @"Core:iterator:fromList:24", align 8
  %1330 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:11\00", ptr %1330, align 1
  %1331 = call ptr @make_candy_text(ptr %1330)
  store ptr %1331, ptr @"Core:iterator:generate:11", align 8
  %1332 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:21\00", ptr %1332, align 1
  %1333 = call ptr @make_candy_text(ptr %1332)
  store ptr %1333, ptr @"Core:iterator:generate:21", align 8
  %1334 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:23\00", ptr %1334, align 1
  %1335 = call ptr @make_candy_text(ptr %1334)
  store ptr %1335, ptr @"Core:iterator:generate:23", align 8
  %1336 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:33\00", ptr %1336, align 1
  %1337 = call ptr @make_candy_text(ptr %1336)
  store ptr %1337, ptr @"Core:iterator:generate:33", align 8
  %1338 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:35\00", ptr %1338, align 1
  %1339 = call ptr @make_candy_text(ptr %1338)
  store ptr %1339, ptr @"Core:iterator:generate:35", align 8
  %1340 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:45\00", ptr %1340, align 1
  %1341 = call ptr @make_candy_text(ptr %1340)
  store ptr %1341, ptr @"Core:iterator:generate:45", align 8
  %1342 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:47\00", ptr %1342, align 1
  %1343 = call ptr @make_candy_text(ptr %1342)
  store ptr %1343, ptr @"Core:iterator:generate:47", align 8
  %1344 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:generate:50:6:16\00", ptr %1344, align 1
  %1345 = call ptr @make_candy_text(ptr %1344)
  store ptr %1345, ptr @"Core:iterator:generate:50:6:16", align 8
  %1346 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:generate:50:6:4\00", ptr %1346, align 1
  %1347 = call ptr @make_candy_text(ptr %1346)
  store ptr %1347, ptr @"Core:iterator:generate:50:6:4", align 8
  %1348 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:generate:50:7\00", ptr %1348, align 1
  %1349 = call ptr @make_candy_text(ptr %1348)
  store ptr %1349, ptr @"Core:iterator:generate:50:7", align 8
  %1350 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:51\00", ptr %1350, align 1
  %1351 = call ptr @make_candy_text(ptr %1350)
  store ptr %1351, ptr @"Core:iterator:generate:51", align 8
  %1352 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:11\00", ptr %1352, align 1
  %1353 = call ptr @make_candy_text(ptr %1352)
  store ptr %1353, ptr @"Core:iterator:generateWithState:11", align 8
  %1354 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:14:1:2\00", ptr %1354, align 1
  %1355 = call ptr @make_candy_text(ptr %1354)
  store ptr %1355, ptr @"Core:iterator:generateWithState:14:1:2", align 8
  %1356 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:14:1:3\00", ptr %1356, align 1
  %1357 = call ptr @make_candy_text(ptr %1356)
  store ptr %1357, ptr @"Core:iterator:generateWithState:14:1:3", align 8
  %1358 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:19\00", ptr %1358, align 1
  %1359 = call ptr @make_candy_text(ptr %1358)
  store ptr %1359, ptr @"Core:iterator:generateWithState:14:1:3:19", align 8
  %1360 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:20\00", ptr %1360, align 1
  %1361 = call ptr @make_candy_text(ptr %1360)
  store ptr %1361, ptr @"Core:iterator:generateWithState:14:1:3:20", align 8
  %1362 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:14:1:3:22:0\00", ptr %1362, align 1
  %1363 = call ptr @make_candy_text(ptr %1362)
  store ptr %1363, ptr @"Core:iterator:generateWithState:14:1:3:22:0", align 8
  %1364 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:23\00", ptr %1364, align 1
  %1365 = call ptr @make_candy_text(ptr %1364)
  store ptr %1365, ptr @"Core:iterator:generateWithState:14:1:3:23", align 8
  %1366 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:25\00", ptr %1366, align 1
  %1367 = call ptr @make_candy_text(ptr %1366)
  store ptr %1367, ptr @"Core:iterator:generateWithState:14:1:3:25", align 8
  %1368 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:26\00", ptr %1368, align 1
  %1369 = call ptr @make_candy_text(ptr %1368)
  store ptr %1369, ptr @"Core:iterator:generateWithState:14:1:3:26", align 8
  %1370 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:27\00", ptr %1370, align 1
  %1371 = call ptr @make_candy_text(ptr %1370)
  store ptr %1371, ptr @"Core:iterator:generateWithState:14:1:3:27", align 8
  %1372 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:iterator:generateWithState:14:1:3:6\00", ptr %1372, align 1
  %1373 = call ptr @make_candy_text(ptr %1372)
  store ptr %1373, ptr @"Core:iterator:generateWithState:14:1:3:6", align 8
  %1374 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:14:1:3:item\00", ptr %1374, align 1
  %1375 = call ptr @make_candy_text(ptr %1374)
  store ptr %1375, ptr @"Core:iterator:generateWithState:14:1:3:item", align 8
  %1376 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:iterator:generateWithState:14:1:3:state\00", ptr %1376, align 1
  %1377 = call ptr @make_candy_text(ptr %1376)
  store ptr %1377, ptr @"Core:iterator:generateWithState:14:1:3:state", align 8
  %1378 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:15\00", ptr %1378, align 1
  %1379 = call ptr @make_candy_text(ptr %1378)
  store ptr %1379, ptr @"Core:iterator:generateWithState:15", align 8
  %1380 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:generateWithState:9\00", ptr %1380, align 1
  %1381 = call ptr @make_candy_text(ptr %1380)
  store ptr %1381, ptr @"Core:iterator:generateWithState:9", align 8
  %1382 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:3\00", ptr %1382, align 1
  %1383 = call ptr @make_candy_text(ptr %1382)
  store ptr %1383, ptr @"Core:iterator:isEmpty:3", align 8
  %1384 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:7\00", ptr %1384, align 1
  %1385 = call ptr @make_candy_text(ptr %1384)
  store ptr %1385, ptr @"Core:iterator:isEmpty:7", align 8
  %1386 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:11\00", ptr %1386, align 1
  %1387 = call ptr @make_candy_text(ptr %1386)
  store ptr %1387, ptr @"Core:iterator:joinToText:12:11", align 8
  %1388 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:22\00", ptr %1388, align 1
  %1389 = call ptr @make_candy_text(ptr %1388)
  store ptr %1389, ptr @"Core:iterator:joinToText:12:22", align 8
  %1390 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:joinToText:13\00", ptr %1390, align 1
  %1391 = call ptr @make_candy_text(ptr %1390)
  store ptr %1391, ptr @"Core:iterator:joinToText:13", align 8
  %1392 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:joinToText:3\00", ptr %1392, align 1
  %1393 = call ptr @make_candy_text(ptr %1392)
  store ptr %1393, ptr @"Core:iterator:joinToText:3", align 8
  %1394 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:3\00", ptr %1394, align 1
  %1395 = call ptr @make_candy_text(ptr %1394)
  store ptr %1395, ptr @"Core:iterator:length:3", align 8
  %1396 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:6\00", ptr %1396, align 1
  %1397 = call ptr @make_candy_text(ptr %1396)
  store ptr %1397, ptr @"Core:iterator:length:6", align 8
  %1398 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:8\00", ptr %1398, align 1
  %1399 = call ptr @make_candy_text(ptr %1398)
  store ptr %1399, ptr @"Core:iterator:length:8", align 8
  %1400 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:14\00", ptr %1400, align 1
  %1401 = call ptr @make_candy_text(ptr %1400)
  store ptr %1401, ptr @"Core:iterator:map:14", align 8
  %1402 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:16\00", ptr %1402, align 1
  %1403 = call ptr @make_candy_text(ptr %1402)
  store ptr %1403, ptr @"Core:iterator:map:16", align 8
  %1404 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:19:2\00", ptr %1404, align 1
  %1405 = call ptr @make_candy_text(ptr %1404)
  store ptr %1405, ptr @"Core:iterator:map:19:2", align 8
  %1406 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:19:3\00", ptr %1406, align 1
  %1407 = call ptr @make_candy_text(ptr %1406)
  store ptr %1407, ptr @"Core:iterator:map:19:3", align 8
  %1408 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:map:19:3:5\00", ptr %1408, align 1
  %1409 = call ptr @make_candy_text(ptr %1408)
  store ptr %1409, ptr @"Core:iterator:map:19:3:5", align 8
  %1410 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:19:3:item\00", ptr %1410, align 1
  %1411 = call ptr @make_candy_text(ptr %1410)
  store ptr %1411, ptr @"Core:iterator:map:19:3:item", align 8
  %1412 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:19:3:rest\00", ptr %1412, align 1
  %1413 = call ptr @make_candy_text(ptr %1412)
  store ptr %1413, ptr @"Core:iterator:map:19:3:rest", align 8
  %1414 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:20\00", ptr %1414, align 1
  %1415 = call ptr @make_candy_text(ptr %1414)
  store ptr %1415, ptr @"Core:iterator:map:20", align 8
  %1416 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:map:3\00", ptr %1416, align 1
  %1417 = call ptr @make_candy_text(ptr %1416)
  store ptr %1417, ptr @"Core:iterator:map:3", align 8
  %1418 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:next:17\00", ptr %1418, align 1
  %1419 = call ptr @make_candy_text(ptr %1418)
  store ptr %1419, ptr @"Core:iterator:next:17", align 8
  %1420 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:3\00", ptr %1420, align 1
  %1421 = call ptr @make_candy_text(ptr %1420)
  store ptr %1421, ptr @"Core:iterator:next:3", align 8
  %1422 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:6\00", ptr %1422, align 1
  %1423 = call ptr @make_candy_text(ptr %1422)
  store ptr %1423, ptr @"Core:iterator:next:6", align 8
  %1424 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:next:nextFunction\00", ptr %1424, align 1
  %1425 = call ptr @make_candy_text(ptr %1424)
  store ptr %1425, ptr @"Core:iterator:next:nextFunction", align 8
  %1426 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:11\00", ptr %1426, align 1
  %1427 = call ptr @make_candy_text(ptr %1426)
  store ptr %1427, ptr @"Core:iterator:reduceLeft:11", align 8
  %1428 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:15\00", ptr %1428, align 1
  %1429 = call ptr @make_candy_text(ptr %1428)
  store ptr %1429, ptr @"Core:iterator:reduceLeft:15", align 8
  %1430 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:17\00", ptr %1430, align 1
  %1431 = call ptr @make_candy_text(ptr %1430)
  store ptr %1431, ptr @"Core:iterator:reduceLeft:17", align 8
  %1432 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:18\00", ptr %1432, align 1
  %1433 = call ptr @make_candy_text(ptr %1432)
  store ptr %1433, ptr @"Core:iterator:reduceLeft:18", align 8
  %1434 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:reduceLeft:18:14\00", ptr %1434, align 1
  %1435 = call ptr @make_candy_text(ptr %1434)
  store ptr %1435, ptr @"Core:iterator:reduceLeft:18:14", align 8
  %1436 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:18:item\00", ptr %1436, align 1
  %1437 = call ptr @make_candy_text(ptr %1436)
  store ptr %1437, ptr @"Core:iterator:reduceLeft:18:item", align 8
  %1438 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:18:rest\00", ptr %1438, align 1
  %1439 = call ptr @make_candy_text(ptr %1438)
  store ptr %1439, ptr @"Core:iterator:reduceLeft:18:rest", align 8
  %1440 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:reduceLeft:9\00", ptr %1440, align 1
  %1441 = call ptr @make_candy_text(ptr %1440)
  store ptr %1441, ptr @"Core:iterator:reduceLeft:9", align 8
  %1442 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:16\00", ptr %1442, align 1
  %1443 = call ptr @make_candy_text(ptr %1442)
  store ptr %1443, ptr @"Core:iterator:skip:16", align 8
  %1444 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:26\00", ptr %1444, align 1
  %1445 = call ptr @make_candy_text(ptr %1444)
  store ptr %1445, ptr @"Core:iterator:skip:26", align 8
  %1446 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:28\00", ptr %1446, align 1
  %1447 = call ptr @make_candy_text(ptr %1446)
  store ptr %1447, ptr @"Core:iterator:skip:28", align 8
  %1448 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:skip:3\00", ptr %1448, align 1
  %1449 = call ptr @make_candy_text(ptr %1448)
  store ptr %1449, ptr @"Core:iterator:skip:3", align 8
  %1450 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:1\00", ptr %1450, align 1
  %1451 = call ptr @make_candy_text(ptr %1450)
  store ptr %1451, ptr @"Core:iterator:skip:30:6:1", align 8
  %1452 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:7:2\00", ptr %1452, align 1
  %1453 = call ptr @make_candy_text(ptr %1452)
  store ptr %1453, ptr @"Core:iterator:skip:30:6:7:2", align 8
  %1454 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:8:2\00", ptr %1454, align 1
  %1455 = call ptr @make_candy_text(ptr %1454)
  store ptr %1455, ptr @"Core:iterator:skip:30:6:8:2", align 8
  %1456 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:8:3\00", ptr %1456, align 1
  %1457 = call ptr @make_candy_text(ptr %1456)
  store ptr %1457, ptr @"Core:iterator:skip:30:6:8:3", align 8
  %1458 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:30:6:8:3:15\00", ptr %1458, align 1
  %1459 = call ptr @make_candy_text(ptr %1458)
  store ptr %1459, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  %1460 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:30:6:8:3:17\00", ptr %1460, align 1
  %1461 = call ptr @make_candy_text(ptr %1460)
  store ptr %1461, ptr @"Core:iterator:skip:30:6:8:3:17", align 8
  %1462 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:30:6:8:3:rest\00", ptr %1462, align 1
  %1463 = call ptr @make_candy_text(ptr %1462)
  store ptr %1463, ptr @"Core:iterator:skip:30:6:8:3:rest", align 8
  %1464 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:9\00", ptr %1464, align 1
  %1465 = call ptr @make_candy_text(ptr %1464)
  store ptr %1465, ptr @"Core:iterator:skip:30:6:9", align 8
  %1466 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:30:6:iterator\00", ptr %1466, align 1
  %1467 = call ptr @make_candy_text(ptr %1466)
  store ptr %1467, ptr @"Core:iterator:skip:30:6:iterator", align 8
  %1468 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:n\00", ptr %1468, align 1
  %1469 = call ptr @make_candy_text(ptr %1468)
  store ptr %1469, ptr @"Core:iterator:skip:30:6:n", align 8
  %1470 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:skip:30:7\00", ptr %1470, align 1
  %1471 = call ptr @make_candy_text(ptr %1470)
  store ptr %1471, ptr @"Core:iterator:skip:30:7", align 8
  %1472 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:sum:19\00", ptr %1472, align 1
  %1473 = call ptr @make_candy_text(ptr %1472)
  store ptr %1473, ptr @"Core:iterator:sum:19", align 8
  %1474 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:3\00", ptr %1474, align 1
  %1475 = call ptr @make_candy_text(ptr %1474)
  store ptr %1475, ptr @"Core:iterator:sum:3", align 8
  %1476 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:5:17\00", ptr %1476, align 1
  %1477 = call ptr @make_candy_text(ptr %1476)
  store ptr %1477, ptr @"Core:iterator:sum:5:17", align 8
  %1478 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:6\00", ptr %1478, align 1
  %1479 = call ptr @make_candy_text(ptr %1478)
  store ptr %1479, ptr @"Core:iterator:sum:6", align 8
  %1480 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:8:10\00", ptr %1480, align 1
  %1481 = call ptr @make_candy_text(ptr %1480)
  store ptr %1481, ptr @"Core:iterator:sum:8:10", align 8
  %1482 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:9\00", ptr %1482, align 1
  %1483 = call ptr @make_candy_text(ptr %1482)
  store ptr %1483, ptr @"Core:iterator:sum:9", align 8
  %1484 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:11\00", ptr %1484, align 1
  %1485 = call ptr @make_candy_text(ptr %1484)
  store ptr %1485, ptr @"Core:iterator:take:11", align 8
  %1486 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:21\00", ptr %1486, align 1
  %1487 = call ptr @make_candy_text(ptr %1486)
  store ptr %1487, ptr @"Core:iterator:take:21", align 8
  %1488 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:23\00", ptr %1488, align 1
  %1489 = call ptr @make_candy_text(ptr %1488)
  store ptr %1489, ptr @"Core:iterator:take:23", align 8
  %1490 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:27\00", ptr %1490, align 1
  %1491 = call ptr @make_candy_text(ptr %1490)
  store ptr %1491, ptr @"Core:iterator:take:27", align 8
  %1492 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:29\00", ptr %1492, align 1
  %1493 = call ptr @make_candy_text(ptr %1492)
  store ptr %1493, ptr @"Core:iterator:take:29", align 8
  %1494 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:31:1\00", ptr %1494, align 1
  %1495 = call ptr @make_candy_text(ptr %1494)
  store ptr %1495, ptr @"Core:iterator:take:31:1", align 8
  %1496 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:take:31:12\00", ptr %1496, align 1
  %1497 = call ptr @make_candy_text(ptr %1496)
  store ptr %1497, ptr @"Core:iterator:take:31:12", align 8
  %1498 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:take:31:index\00", ptr %1498, align 1
  %1499 = call ptr @make_candy_text(ptr %1498)
  store ptr %1499, ptr @"Core:iterator:take:31:index", align 8
  %1500 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:take:31:item\00", ptr %1500, align 1
  %1501 = call ptr @make_candy_text(ptr %1500)
  store ptr %1501, ptr @"Core:iterator:take:31:item", align 8
  %1502 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:32\00", ptr %1502, align 1
  %1503 = call ptr @make_candy_text(ptr %1502)
  store ptr %1503, ptr @"Core:iterator:take:32", align 8
  %1504 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:34:7\00", ptr %1504, align 1
  %1505 = call ptr @make_candy_text(ptr %1504)
  store ptr %1505, ptr @"Core:iterator:take:34:7", align 8
  %1506 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:35\00", ptr %1506, align 1
  %1507 = call ptr @make_candy_text(ptr %1506)
  store ptr %1507, ptr @"Core:iterator:take:35", align 8
  %1508 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:3\00", ptr %1508, align 1
  %1509 = call ptr @make_candy_text(ptr %1508)
  store ptr %1509, ptr @"Core:iterator:takeWhile:3", align 8
  %1510 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:2\00", ptr %1510, align 1
  %1511 = call ptr @make_candy_text(ptr %1510)
  store ptr %1511, ptr @"Core:iterator:takeWhile:7:2", align 8
  %1512 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:3\00", ptr %1512, align 1
  %1513 = call ptr @make_candy_text(ptr %1512)
  store ptr %1513, ptr @"Core:iterator:takeWhile:7:3", align 8
  %1514 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:4\00", ptr %1514, align 1
  %1515 = call ptr @make_candy_text(ptr %1514)
  store ptr %1515, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  %1516 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:7\00", ptr %1516, align 1
  %1517 = call ptr @make_candy_text(ptr %1516)
  store ptr %1517, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  %1518 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:item\00", ptr %1518, align 1
  %1519 = call ptr @make_candy_text(ptr %1518)
  store ptr %1519, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  %1520 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:rest\00", ptr %1520, align 1
  %1521 = call ptr @make_candy_text(ptr %1520)
  store ptr %1521, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  %1522 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:8\00", ptr %1522, align 1
  %1523 = call ptr @make_candy_text(ptr %1522)
  store ptr %1523, ptr @"Core:iterator:takeWhile:8", align 8
  %1524 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:3\00", ptr %1524, align 1
  %1525 = call ptr @make_candy_text(ptr %1524)
  store ptr %1525, ptr @"Core:iterator:toList:3", align 8
  %1526 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:toList:6:10\00", ptr %1526, align 1
  %1527 = call ptr @make_candy_text(ptr %1526)
  store ptr %1527, ptr @"Core:iterator:toList:6:10", align 8
  %1528 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:7\00", ptr %1528, align 1
  %1529 = call ptr @make_candy_text(ptr %1528)
  store ptr %1529, ptr @"Core:iterator:toList:7", align 8
  %1530 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:14\00", ptr %1530, align 1
  %1531 = call ptr @make_candy_text(ptr %1530)
  store ptr %1531, ptr @"Core:iterator:where:14", align 8
  %1532 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:16\00", ptr %1532, align 1
  %1533 = call ptr @make_candy_text(ptr %1532)
  store ptr %1533, ptr @"Core:iterator:where:16", align 8
  %1534 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:19:2:2\00", ptr %1534, align 1
  %1535 = call ptr @make_candy_text(ptr %1534)
  store ptr %1535, ptr @"Core:iterator:where:19:2:2", align 8
  %1536 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:19:2:3\00", ptr %1536, align 1
  %1537 = call ptr @make_candy_text(ptr %1536)
  store ptr %1537, ptr @"Core:iterator:where:19:2:3", align 8
  %1538 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:19:2:3:4\00", ptr %1538, align 1
  %1539 = call ptr @make_candy_text(ptr %1538)
  store ptr %1539, ptr @"Core:iterator:where:19:2:3:4", align 8
  %1540 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:2\00", ptr %1540, align 1
  %1541 = call ptr @make_candy_text(ptr %1540)
  store ptr %1541, ptr @"Core:iterator:where:19:2:3:6:2", align 8
  %1542 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:4\00", ptr %1542, align 1
  %1543 = call ptr @make_candy_text(ptr %1542)
  store ptr %1543, ptr @"Core:iterator:where:19:2:3:6:4", align 8
  %1544 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:5\00", ptr %1544, align 1
  %1545 = call ptr @make_candy_text(ptr %1544)
  store ptr %1545, ptr @"Core:iterator:where:19:2:3:6:5", align 8
  %1546 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:19:2:3:6:5:item\00", ptr %1546, align 1
  %1547 = call ptr @make_candy_text(ptr %1546)
  store ptr %1547, ptr @"Core:iterator:where:19:2:3:6:5:item", align 8
  %1548 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:19:2:3:6:5:rest\00", ptr %1548, align 1
  %1549 = call ptr @make_candy_text(ptr %1548)
  store ptr %1549, ptr @"Core:iterator:where:19:2:3:6:5:rest", align 8
  %1550 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:19:2:3:7\00", ptr %1550, align 1
  %1551 = call ptr @make_candy_text(ptr %1550)
  store ptr %1551, ptr @"Core:iterator:where:19:2:3:7", align 8
  %1552 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:19:2:3:item\00", ptr %1552, align 1
  %1553 = call ptr @make_candy_text(ptr %1552)
  store ptr %1553, ptr @"Core:iterator:where:19:2:3:item", align 8
  %1554 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:19:2:3:rest\00", ptr %1554, align 1
  %1555 = call ptr @make_candy_text(ptr %1554)
  store ptr %1555, ptr @"Core:iterator:where:19:2:3:rest", align 8
  %1556 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:where:19:3\00", ptr %1556, align 1
  %1557 = call ptr @make_candy_text(ptr %1556)
  store ptr %1557, ptr @"Core:iterator:where:19:3", align 8
  %1558 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:20\00", ptr %1558, align 1
  %1559 = call ptr @make_candy_text(ptr %1558)
  store ptr %1559, ptr @"Core:iterator:where:20", align 8
  %1560 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:where:3\00", ptr %1560, align 1
  %1561 = call ptr @make_candy_text(ptr %1560)
  store ptr %1561, ptr @"Core:iterator:where:3", align 8
  %1562 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:16\00", ptr %1562, align 1
  %1563 = call ptr @make_candy_text(ptr %1562)
  store ptr %1563, ptr @"Core:iterator:windowed:16", align 8
  %1564 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:26\00", ptr %1564, align 1
  %1565 = call ptr @make_candy_text(ptr %1564)
  store ptr %1565, ptr @"Core:iterator:windowed:26", align 8
  %1566 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:28\00", ptr %1566, align 1
  %1567 = call ptr @make_candy_text(ptr %1566)
  store ptr %1567, ptr @"Core:iterator:windowed:28", align 8
  %1568 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:windowed:3\00", ptr %1568, align 1
  %1569 = call ptr @make_candy_text(ptr %1568)
  store ptr %1569, ptr @"Core:iterator:windowed:3", align 8
  %1570 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:40\00", ptr %1570, align 1
  %1571 = call ptr @make_candy_text(ptr %1570)
  store ptr %1571, ptr @"Core:iterator:windowed:40", align 8
  %1572 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:50\00", ptr %1572, align 1
  %1573 = call ptr @make_candy_text(ptr %1572)
  store ptr %1573, ptr @"Core:iterator:windowed:50", align 8
  %1574 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:52\00", ptr %1574, align 1
  %1575 = call ptr @make_candy_text(ptr %1574)
  store ptr %1575, ptr @"Core:iterator:windowed:52", align 8
  %1576 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:62\00", ptr %1576, align 1
  %1577 = call ptr @make_candy_text(ptr %1576)
  store ptr %1577, ptr @"Core:iterator:windowed:62", align 8
  %1578 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:64\00", ptr %1578, align 1
  %1579 = call ptr @make_candy_text(ptr %1578)
  store ptr %1579, ptr @"Core:iterator:windowed:64", align 8
  %1580 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:16\00", ptr %1580, align 1
  %1581 = call ptr @make_candy_text(ptr %1580)
  store ptr %1581, ptr @"Core:iterator:windowed:67:16", align 8
  %1582 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:22\00", ptr %1582, align 1
  %1583 = call ptr @make_candy_text(ptr %1582)
  store ptr %1583, ptr @"Core:iterator:windowed:67:22", align 8
  %1584 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:windowed:67:26:7\00", ptr %1584, align 1
  %1585 = call ptr @make_candy_text(ptr %1584)
  store ptr %1585, ptr @"Core:iterator:windowed:67:26:7", align 8
  %1586 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:28\00", ptr %1586, align 1
  %1587 = call ptr @make_candy_text(ptr %1586)
  store ptr %1587, ptr @"Core:iterator:windowed:67:28", align 8
  %1588 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:67:3\00", ptr %1588, align 1
  %1589 = call ptr @make_candy_text(ptr %1588)
  store ptr %1589, ptr @"Core:iterator:windowed:67:3", align 8
  %1590 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:67:5\00", ptr %1590, align 1
  %1591 = call ptr @make_candy_text(ptr %1590)
  store ptr %1591, ptr @"Core:iterator:windowed:67:5", align 8
  %1592 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:68\00", ptr %1592, align 1
  %1593 = call ptr @make_candy_text(ptr %1592)
  store ptr %1593, ptr @"Core:iterator:windowed:68", align 8
  %1594 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:1\00", ptr %1594, align 1
  %1595 = call ptr @make_candy_text(ptr %1594)
  store ptr %1595, ptr @"Core:iterator:withIndex:11:1", align 8
  %1596 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:4\00", ptr %1596, align 1
  %1597 = call ptr @make_candy_text(ptr %1596)
  store ptr %1597, ptr @"Core:iterator:withIndex:11:4", align 8
  %1598 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:5\00", ptr %1598, align 1
  %1599 = call ptr @make_candy_text(ptr %1598)
  store ptr %1599, ptr @"Core:iterator:withIndex:11:5", align 8
  %1600 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:withIndex:11:5:22\00", ptr %1600, align 1
  %1601 = call ptr @make_candy_text(ptr %1600)
  store ptr %1601, ptr @"Core:iterator:withIndex:11:5:22", align 8
  %1602 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:item\00", ptr %1602, align 1
  %1603 = call ptr @make_candy_text(ptr %1602)
  store ptr %1603, ptr @"Core:iterator:withIndex:11:5:item", align 8
  %1604 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:rest\00", ptr %1604, align 1
  %1605 = call ptr @make_candy_text(ptr %1604)
  store ptr %1605, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  %1606 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:withIndex:11:index\00", ptr %1606, align 1
  %1607 = call ptr @make_candy_text(ptr %1606)
  store ptr %1607, ptr @"Core:iterator:withIndex:11:index", align 8
  %1608 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:withIndex:11:iterator\00", ptr %1608, align 1
  %1609 = call ptr @make_candy_text(ptr %1608)
  store ptr %1609, ptr @"Core:iterator:withIndex:11:iterator", align 8
  %1610 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:withIndex:12\00", ptr %1610, align 1
  %1611 = call ptr @make_candy_text(ptr %1610)
  store ptr %1611, ptr @"Core:iterator:withIndex:12", align 8
  %1612 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:withIndex:3\00", ptr %1612, align 1
  %1613 = call ptr @make_candy_text(ptr %1612)
  store ptr %1613, ptr @"Core:iterator:withIndex:3", align 8
  %1614 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:11\00", ptr %1614, align 1
  %1615 = call ptr @make_candy_text(ptr %1614)
  store ptr %1615, ptr @"Core:iterator:wrapSafe:11", align 8
  %1616 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:12:9\00", ptr %1616, align 1
  %1617 = call ptr @make_candy_text(ptr %1616)
  store ptr %1617, ptr @"Core:iterator:wrapSafe:12:9", align 8
  %1618 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:16:1\00", ptr %1618, align 1
  %1619 = call ptr @make_candy_text(ptr %1618)
  store ptr %1619, ptr @"Core:iterator:wrapSafe:16:1", align 8
  %1620 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:13\00", ptr %1620, align 1
  %1621 = call ptr @make_candy_text(ptr %1620)
  store ptr %1621, ptr @"Core:iterator:wrapSafe:16:13", align 8
  %1622 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:16:1:10\00", ptr %1622, align 1
  %1623 = call ptr @make_candy_text(ptr %1622)
  store ptr %1623, ptr @"Core:iterator:wrapSafe:16:1:10", align 8
  %1624 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:1:function\00", ptr %1624, align 1
  %1625 = call ptr @make_candy_text(ptr %1624)
  store ptr %1625, ptr @"Core:iterator:wrapSafe:16:1:function", align 8
  %1626 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:22\00", ptr %1626, align 1
  %1627 = call ptr @make_candy_text(ptr %1626)
  store ptr %1627, ptr @"Core:iterator:wrapSafe:16:22", align 8
  %1628 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:24\00", ptr %1628, align 1
  %1629 = call ptr @make_candy_text(ptr %1628)
  store ptr %1629, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %1630 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:wrapSafe:16:26:10\00", ptr %1630, align 1
  %1631 = call ptr @make_candy_text(ptr %1630)
  store ptr %1631, ptr @"Core:iterator:wrapSafe:16:26:10", align 8
  %1632 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:wrapSafe:16:26:10:19\00", ptr %1632, align 1
  %1633 = call ptr @make_candy_text(ptr %1632)
  store ptr %1633, ptr @"Core:iterator:wrapSafe:16:26:10:19", align 8
  %1634 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:wrapSafe:16:26:10:7\00", ptr %1634, align 1
  %1635 = call ptr @make_candy_text(ptr %1634)
  store ptr %1635, ptr @"Core:iterator:wrapSafe:16:26:10:7", align 8
  %1636 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:26:10:item\00", ptr %1636, align 1
  %1637 = call ptr @make_candy_text(ptr %1636)
  store ptr %1637, ptr @"Core:iterator:wrapSafe:16:26:10:item", align 8
  %1638 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:26:10:rest\00", ptr %1638, align 1
  %1639 = call ptr @make_candy_text(ptr %1638)
  store ptr %1639, ptr @"Core:iterator:wrapSafe:16:26:10:rest", align 8
  %1640 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:16:26:9\00", ptr %1640, align 1
  %1641 = call ptr @make_candy_text(ptr %1640)
  store ptr %1641, ptr @"Core:iterator:wrapSafe:16:26:9", align 8
  %1642 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:17\00", ptr %1642, align 1
  %1643 = call ptr @make_candy_text(ptr %1642)
  store ptr %1643, ptr @"Core:iterator:wrapSafe:17", align 8
  %1644 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:wrapSafe:9\00", ptr %1644, align 1
  %1645 = call ptr @make_candy_text(ptr %1644)
  store ptr %1645, ptr @"Core:iterator:wrapSafe:9", align 8
  %1646 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:append:11\00", ptr %1646, align 1
  %1647 = call ptr @make_candy_text(ptr %1646)
  store ptr %1647, ptr @"Core:list:append:11", align 8
  %1648 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:4\00", ptr %1648, align 1
  %1649 = call ptr @make_candy_text(ptr %1648)
  store ptr %1649, ptr @"Core:list:append:4", align 8
  %1650 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:9\00", ptr %1650, align 1
  %1651 = call ptr @make_candy_text(ptr %1650)
  store ptr %1651, ptr @"Core:list:append:9", align 8
  %1652 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %1652, align 1
  %1653 = call ptr @make_candy_text(ptr %1652)
  store ptr %1653, ptr @"Core:result:is:1", align 8
  %1654 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:is:1:_\00", ptr %1654, align 1
  %1655 = call ptr @make_candy_text(ptr %1654)
  store ptr %1655, ptr @"Core:result:is:1:_", align 8
  %1656 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %1656, align 1
  %1657 = call ptr @make_candy_text(ptr %1656)
  store ptr %1657, ptr @"Core:result:mapOrElse:14", align 8
  %1658 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %1658, align 1
  %1659 = call ptr @make_candy_text(ptr %1658)
  store ptr %1659, ptr @"Core:result:mapOrElse:16", align 8
  %1660 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:2\00", ptr %1660, align 1
  %1661 = call ptr @make_candy_text(ptr %1660)
  store ptr %1661, ptr @"Core:result:mapOrElse:2", align 8
  %1662 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %1662, align 1
  %1663 = call ptr @make_candy_text(ptr %1662)
  store ptr %1663, ptr @"Core:result:mapOrElse:26", align 8
  %1664 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %1664, align 1
  %1665 = call ptr @make_candy_text(ptr %1664)
  store ptr %1665, ptr @"Core:result:mapOrElse:28", align 8
  %1666 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %1666, align 1
  %1667 = call ptr @make_candy_text(ptr %1666)
  store ptr %1667, ptr @"Core:result:mapOrElse:30", align 8
  %1668 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %1668, align 1
  %1669 = call ptr @make_candy_text(ptr %1668)
  store ptr %1669, ptr @"Core:result:mapOrElse:30:2", align 8
  %1670 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %1670, align 1
  %1671 = call ptr @make_candy_text(ptr %1670)
  store ptr %1671, ptr @"Core:result:mapOrElse:30:5", align 8
  %1672 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %1672, align 1
  %1673 = call ptr @make_candy_text(ptr %1672)
  store ptr %1673, ptr @"Core:result:mapOrElse:30:value", align 8
  %1674 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %1674, align 1
  %1675 = call ptr @make_candy_text(ptr %1674)
  store ptr %1675, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %1676 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %1676, align 1
  %1677 = call ptr @make_candy_text(ptr %1676)
  store ptr %1677, ptr @"Core:result:mapOrElse:4", align 8
  %1678 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:2\00", ptr %1678, align 1
  %1679 = call ptr @make_candy_text(ptr %1678)
  store ptr %1679, ptr @"Core:result:unwrapOr:2", align 8
  %1680 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %1680, align 1
  %1681 = call ptr @make_candy_text(ptr %1680)
  store ptr %1681, ptr @"Core:result:unwrapOr:4", align 8
  %1682 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %1682, align 1
  %1683 = call ptr @make_candy_text(ptr %1682)
  store ptr %1683, ptr @"Core:result:unwrapOr:8", align 8
  %1684 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:14\00", ptr %1684, align 1
  %1685 = call ptr @make_candy_text(ptr %1684)
  store ptr %1685, ptr @"Core:result:unwrapOrElse:14", align 8
  %1686 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:16\00", ptr %1686, align 1
  %1687 = call ptr @make_candy_text(ptr %1686)
  store ptr %1687, ptr @"Core:result:unwrapOrElse:16", align 8
  %1688 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:2\00", ptr %1688, align 1
  %1689 = call ptr @make_candy_text(ptr %1688)
  store ptr %1689, ptr @"Core:result:unwrapOrElse:2", align 8
  %1690 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:20:9\00", ptr %1690, align 1
  %1691 = call ptr @make_candy_text(ptr %1690)
  store ptr %1691, ptr @"Core:result:unwrapOrElse:20:9", align 8
  %1692 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:21\00", ptr %1692, align 1
  %1693 = call ptr @make_candy_text(ptr %1692)
  store ptr %1693, ptr @"Core:result:unwrapOrElse:21", align 8
  %1694 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %1694, align 1
  %1695 = call ptr @make_candy_text(ptr %1694)
  store ptr %1695, ptr @"Core:result:unwrapOrElse:4", align 8
  %1696 = alloca i8, i64 6, align 1
  store [6 x i8] c"Empty\00", ptr %1696, align 1
  %1697 = call ptr @make_candy_tag(ptr %1696, ptr null)
  store ptr %1697, ptr @tag_Empty, align 8
  %1698 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1698, align 1
  %1699 = call ptr @make_candy_tag(ptr %1698, ptr null)
  store ptr %1699, ptr @tag_Error, align 8
  %1700 = alloca i8, i64 6, align 1
  store [6 x i8] c"Index\00", ptr %1700, align 1
  %1701 = call ptr @make_candy_tag(ptr %1700, ptr null)
  store ptr %1701, ptr @tag_Index, align 8
  %1702 = alloca i8, i64 5, align 1
  store [5 x i8] c"Item\00", ptr %1702, align 1
  %1703 = call ptr @make_candy_tag(ptr %1702, ptr null)
  store ptr %1703, ptr @tag_Item, align 8
  %1704 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %1704, align 1
  %1705 = call ptr @make_candy_tag(ptr %1704, ptr null)
  store ptr %1705, ptr @tag_Iterator, align 8
  %1706 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %1706, align 1
  %1707 = call ptr @make_candy_tag(ptr %1706, ptr null)
  store ptr %1707, ptr @tag_More, align 8
  %1708 = alloca i8, i64 2, align 1
  store [2 x i8] c"N\00", ptr %1708, align 1
  %1709 = call ptr @make_candy_tag(ptr %1708, ptr null)
  store ptr %1709, ptr @tag_N, align 8
  %1710 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %1710, align 1
  %1711 = call ptr @make_candy_tag(ptr %1710, ptr null)
  store ptr %1711, ptr @tag_Ok, align 8
  %1712 = alloca i8, i64 5, align 1
  store [5 x i8] c"Rest\00", ptr %1712, align 1
  %1713 = call ptr @make_candy_tag(ptr %1712, ptr null)
  store ptr %1713, ptr @tag_Rest, align 8
  %1714 = alloca i8, i64 6, align 1
  store [6 x i8] c"State\00", ptr %1714, align 1
  %1715 = call ptr @make_candy_tag(ptr %1714, ptr null)
  store ptr %1715, ptr @tag_State, align 8
  %1716 = alloca i8, i64 6, align 1
  store [6 x i8] c"Value\00", ptr %1716, align 1
  %1717 = call ptr @make_candy_tag(ptr %1716, ptr null)
  store ptr %1717, ptr @tag_Value, align 8
  %1718 = alloca i8, i64 1, align 1
  store [1 x i8] zeroinitializer, ptr %1718, align 1
  %1719 = call ptr @make_candy_text(ptr %1718)
  store ptr %1719, ptr @text_, align 8
  %1720 = alloca i8, i64 37, align 1
  store [37 x i8] c"Can't `reduceLeft` an empty iterator\00", ptr %1720, align 1
  %1721 = call ptr @make_candy_text(ptr %1720)
  store ptr %1721, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1722 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Empty, got \00", ptr %1722, align 1
  %1723 = call ptr @make_candy_text(ptr %1722)
  store ptr %1723, ptr @"text_Expected Empty, got ", align 8
  %1724 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %1724, align 1
  %1725 = call ptr @make_candy_text(ptr %1724)
  store ptr %1725, ptr @"text_Expected Error, got ", align 8
  %1726 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected Iterator, got \00", ptr %1726, align 1
  %1727 = call ptr @make_candy_text(ptr %1726)
  store ptr %1727, ptr @"text_Expected Iterator, got ", align 8
  %1728 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected More, got \00", ptr %1728, align 1
  %1729 = call ptr @make_candy_text(ptr %1728)
  store ptr %1729, ptr @"text_Expected More, got ", align 8
  %1730 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %1730, align 1
  %1731 = call ptr @make_candy_text(ptr %1730)
  store ptr %1731, ptr @"text_Expected Ok, got ", align 8
  %1732 = alloca i8, i64 32, align 1
  store [32 x i8] c"Iterator items need to be ints.\00", ptr %1732, align 1
  %1733 = call ptr @make_candy_text(ptr %1732)
  store ptr %1733, ptr @"text_Iterator items need to be ints.", align 8
  %1734 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Index`: `\00", ptr %1734, align 1
  %1735 = call ptr @make_candy_text(ptr %1734)
  store ptr %1735, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %1736 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Item`: `\00", ptr %1736, align 1
  %1737 = call ptr @make_candy_text(ptr %1736)
  store ptr %1737, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %1738 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Iterator`: `\00", ptr %1738, align 1
  %1739 = call ptr @make_candy_text(ptr %1738)
  store ptr %1739, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %1740 = alloca i8, i64 34, align 1
  store [34 x i8] c"Struct doesn't contain key `N`: `\00", ptr %1740, align 1
  %1741 = call ptr @make_candy_text(ptr %1740)
  store ptr %1741, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %1742 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Rest`: `\00", ptr %1742, align 1
  %1743 = call ptr @make_candy_text(ptr %1742)
  store ptr %1743, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %1744 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `State`: `\00", ptr %1744, align 1
  %1745 = call ptr @make_candy_text(ptr %1744)
  store ptr %1745, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %1746 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Value`: `\00", ptr %1746, align 1
  %1747 = call ptr @make_candy_text(ptr %1746)
  store ptr %1747, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %1748 = alloca i8, i64 95, align 1
  store [95 x i8] c"The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `\00", ptr %1748, align 1
  %1749 = call ptr @make_candy_text(ptr %1748)
  store ptr %1749, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %1750 = alloca i8, i64 26, align 1
  store [26 x i8] c"The guard needs to panic.\00", ptr %1750, align 1
  %1751 = call ptr @make_candy_text(ptr %1750)
  store ptr %1751, ptr @"text_The guard needs to panic.", align 8
  %1752 = alloca i8, i64 2, align 1
  store [2 x i8] c"`\00", ptr %1752, align 1
  %1753 = call ptr @make_candy_text(ptr %1752)
  store ptr %1753, ptr @"text_`", align 8
  %1754 = alloca i8, i64 25, align 1
  store [25 x i8] c"`all` needs an iterator.\00", ptr %1754, align 1
  %1755 = call ptr @make_candy_text(ptr %1754)
  store ptr %1755, ptr @"text_`all` needs an iterator.", align 8
  %1756 = alloca i8, i64 25, align 1
  store [25 x i8] c"`any` needs an iterator.\00", ptr %1756, align 1
  %1757 = call ptr @make_candy_text(ptr %1756)
  store ptr %1757, ptr @"text_`any` needs an iterator.", align 8
  %1758 = alloca i8, i64 48, align 1
  store [48 x i8] c"`bool.is allowPartialWindows` was not satisfied\00", ptr %1758, align 1
  %1759 = call ptr @make_candy_text(ptr %1758)
  store ptr %1759, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %1760 = alloca i8, i64 39, align 1
  store [39 x i8] c"`bool.is itemResult` was not satisfied\00", ptr %1760, align 1
  %1761 = call ptr @make_candy_text(ptr %1760)
  store ptr %1761, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %1762 = alloca i8, i64 29, align 1
  store [29 x i8] c"`chunked` needs an iterator.\00", ptr %1762, align 1
  %1763 = call ptr @make_candy_text(ptr %1762)
  store ptr %1763, ptr @"text_`chunked` needs an iterator.", align 8
  %1764 = alloca i8, i64 28, align 1
  store [28 x i8] c"`ensure` needs an iterator.\00", ptr %1764, align 1
  %1765 = call ptr @make_candy_text(ptr %1764)
  store ptr %1765, ptr @"text_`ensure` needs an iterator.", align 8
  %1766 = alloca i8, i64 30, align 1
  store [30 x i8] c"`foldLeft` needs an iterator.\00", ptr %1766, align 1
  %1767 = call ptr @make_candy_text(ptr %1766)
  store ptr %1767, ptr @"text_`foldLeft` needs an iterator.", align 8
  %1768 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function.is0 defaultGetter` was not satisfied\00", ptr %1768, align 1
  %1769 = call ptr @make_candy_text(ptr %1768)
  store ptr %1769, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %1770 = alloca i8, i64 50, align 1
  store [50 x i8] c"`function.is0 notIteratorGuard` was not satisfied\00", ptr %1770, align 1
  %1771 = call ptr @make_candy_text(ptr %1770)
  store ptr %1771, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %1772 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %1772, align 1
  %1773 = call ptr @make_candy_text(ptr %1772)
  store ptr %1773, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %1774 = alloca i8, i64 39, align 1
  store [39 x i8] c"`function.is1 guard` was not satisfied\00", ptr %1774, align 1
  %1775 = call ptr @make_candy_text(ptr %1774)
  store ptr %1775, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %1776 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 mapper` was not satisfied\00", ptr %1776, align 1
  %1777 = call ptr @make_candy_text(ptr %1776)
  store ptr %1777, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %1778 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %1778, align 1
  %1779 = call ptr @make_candy_text(ptr %1778)
  store ptr %1779, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %1780 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 tester` was not satisfied\00", ptr %1780, align 1
  %1781 = call ptr @make_candy_text(ptr %1780)
  store ptr %1781, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %1782 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 valueGetter` was not satisfied\00", ptr %1782, align 1
  %1783 = call ptr @make_candy_text(ptr %1782)
  store ptr %1783, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %1784 = alloca i8, i64 41, align 1
  store [41 x i8] c"`function.is2 combine` was not satisfied\00", ptr %1784, align 1
  %1785 = call ptr @make_candy_text(ptr %1784)
  store ptr %1785, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %1786 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.fitsInRustU32 length` was not satisfied\00", ptr %1786, align 1
  %1787 = call ptr @make_candy_text(ptr %1786)
  store ptr %1787, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %1788 = alloca i8, i64 34, align 1
  store [34 x i8] c"`int.is length` was not satisfied\00", ptr %1788, align 1
  %1789 = call ptr @make_candy_text(ptr %1788)
  store ptr %1789, ptr @"text_`int.is length` was not satisfied", align 8
  %1790 = alloca i8, i64 29, align 1
  store [29 x i8] c"`int.is n` was not satisfied\00", ptr %1790, align 1
  %1791 = call ptr @make_candy_text(ptr %1790)
  store ptr %1791, ptr @"text_`int.is n` was not satisfied", align 8
  %1792 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is size` was not satisfied\00", ptr %1792, align 1
  %1793 = call ptr @make_candy_text(ptr %1792)
  store ptr %1793, ptr @"text_`int.is size` was not satisfied", align 8
  %1794 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is step` was not satisfied\00", ptr %1794, align 1
  %1795 = call ptr @make_candy_text(ptr %1794)
  store ptr %1795, ptr @"text_`int.is step` was not satisfied", align 8
  %1796 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.isNonNegative length` was not satisfied\00", ptr %1796, align 1
  %1797 = call ptr @make_candy_text(ptr %1796)
  store ptr %1797, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %1798 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isNonNegative n` was not satisfied\00", ptr %1798, align 1
  %1799 = call ptr @make_candy_text(ptr %1798)
  store ptr %1799, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %1800 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive size` was not satisfied\00", ptr %1800, align 1
  %1801 = call ptr @make_candy_text(ptr %1800)
  store ptr %1801, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %1802 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive step` was not satisfied\00", ptr %1802, align 1
  %1803 = call ptr @make_candy_text(ptr %1802)
  store ptr %1803, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %1804 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is list` was not satisfied\00", ptr %1804, align 1
  %1805 = call ptr @make_candy_text(ptr %1804)
  store ptr %1805, ptr @"text_`is list` was not satisfied", align 8
  %1806 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %1806, align 1
  %1807 = call ptr @make_candy_text(ptr %1806)
  store ptr %1807, ptr @"text_`is result` was not satisfied", align 8
  %1808 = alloca i8, i64 29, align 1
  store [29 x i8] c"`isEmpty` needs an iterator.\00", ptr %1808, align 1
  %1809 = call ptr @make_candy_text(ptr %1808)
  store ptr %1809, ptr @"text_`isEmpty` needs an iterator.", align 8
  %1810 = alloca i8, i64 32, align 1
  store [32 x i8] c"`joinToText` needs an iterator.\00", ptr %1810, align 1
  %1811 = call ptr @make_candy_text(ptr %1810)
  store ptr %1811, ptr @"text_`joinToText` needs an iterator.", align 8
  %1812 = alloca i8, i64 28, align 1
  store [28 x i8] c"`length` needs an iterator.\00", ptr %1812, align 1
  %1813 = call ptr @make_candy_text(ptr %1812)
  store ptr %1813, ptr @"text_`length` needs an iterator.", align 8
  %1814 = alloca i8, i64 30, align 1
  store [30 x i8] c"`list.is l` was not satisfied\00", ptr %1814, align 1
  %1815 = call ptr @make_candy_text(ptr %1814)
  store ptr %1815, ptr @"text_`list.is l` was not satisfied", align 8
  %1816 = alloca i8, i64 25, align 1
  store [25 x i8] c"`map` needs an iterator.\00", ptr %1816, align 1
  %1817 = call ptr @make_candy_text(ptr %1816)
  store ptr %1817, ptr @"text_`map` needs an iterator.", align 8
  %1818 = alloca i8, i64 26, align 1
  store [26 x i8] c"`next` needs an iterator.\00", ptr %1818, align 1
  %1819 = call ptr @make_candy_text(ptr %1818)
  store ptr %1819, ptr @"text_`next` needs an iterator.", align 8
  %1820 = alloca i8, i64 32, align 1
  store [32 x i8] c"`reduceLeft` needs an iterator.\00", ptr %1820, align 1
  %1821 = call ptr @make_candy_text(ptr %1820)
  store ptr %1821, ptr @"text_`reduceLeft` needs an iterator.", align 8
  %1822 = alloca i8, i64 26, align 1
  store [26 x i8] c"`skip` needs an iterator.\00", ptr %1822, align 1
  %1823 = call ptr @make_candy_text(ptr %1822)
  store ptr %1823, ptr @"text_`skip` needs an iterator.", align 8
  %1824 = alloca i8, i64 25, align 1
  store [25 x i8] c"`sum` needs an iterator.\00", ptr %1824, align 1
  %1825 = call ptr @make_candy_text(ptr %1824)
  store ptr %1825, ptr @"text_`sum` needs an iterator.", align 8
  %1826 = alloca i8, i64 31, align 1
  store [31 x i8] c"`takeWhile` needs an iterator.\00", ptr %1826, align 1
  %1827 = call ptr @make_candy_text(ptr %1826)
  store ptr %1827, ptr @"text_`takeWhile` needs an iterator.", align 8
  %1828 = alloca i8, i64 26, align 1
  store [26 x i8] c"`take` needs an iterator.\00", ptr %1828, align 1
  %1829 = call ptr @make_candy_text(ptr %1828)
  store ptr %1829, ptr @"text_`take` needs an iterator.", align 8
  %1830 = alloca i8, i64 33, align 1
  store [33 x i8] c"`text.is item` was not satisfied\00", ptr %1830, align 1
  %1831 = call ptr @make_candy_text(ptr %1830)
  store ptr %1831, ptr @"text_`text.is item` was not satisfied", align 8
  %1832 = alloca i8, i64 28, align 1
  store [28 x i8] c"`toList` needs an iterator.\00", ptr %1832, align 1
  %1833 = call ptr @make_candy_text(ptr %1832)
  store ptr %1833, ptr @"text_`toList` needs an iterator.", align 8
  %1834 = alloca i8, i64 27, align 1
  store [27 x i8] c"`where` needs an iterator.\00", ptr %1834, align 1
  %1835 = call ptr @make_candy_text(ptr %1834)
  store ptr %1835, ptr @"text_`where` needs an iterator.", align 8
  %1836 = alloca i8, i64 30, align 1
  store [30 x i8] c"`windowed` needs an iterator.\00", ptr %1836, align 1
  %1837 = call ptr @make_candy_text(ptr %1836)
  store ptr %1837, ptr @"text_`windowed` needs an iterator.", align 8
  %1838 = alloca i8, i64 31, align 1
  store [31 x i8] c"`withIndex` needs an iterator.\00", ptr %1838, align 1
  %1839 = call ptr @make_candy_text(ptr %1838)
  store ptr %1839, ptr @"text_`withIndex` needs an iterator.", align 8
  %1840 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1841 = call ptr @make_candy_function(ptr @Core_result_is, ptr %1840, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1841, ptr @fun_Core_result_is, align 8
  %1842 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1843 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %1842, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1843, ptr @fun_Core_result_mapOrElse, align 8
  %1844 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1845 = call ptr @make_candy_function(ptr @"Core_iterator_range_38, Core_result_unwrapOrElse_19", ptr %1844, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1845, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  %1846 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1847 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %1846, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1847, ptr @fun_Core_result_unwrapOr, align 8
  %1848 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1849 = call ptr @make_candy_function(ptr @Core_list_append, ptr %1848, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1849, ptr @fun_Core_list_append, align 8
  %1850 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1851 = call ptr @make_candy_function(ptr @"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", ptr %1850, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1851, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %1852 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1853 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe, ptr %1852, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1853, ptr @fun_Core_iterator_wrapSafe, align 8
  %1854 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1855 = call ptr @make_candy_function(ptr @Core_iterator_next, ptr %1854, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1855, ptr @fun_Core_iterator_next, align 8
  %1856 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1857 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState, ptr %1856, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1857, ptr @fun_Core_iterator_generateWithState, align 8
  %1858 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1859 = call ptr @make_candy_function(ptr @Core_iterator_generate, ptr %1858, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1859, ptr @fun_Core_iterator_generate, align 8
  %1860 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1861 = call ptr @make_candy_function(ptr @Core_iterator_map, ptr %1860, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1861, ptr @fun_Core_iterator_map, align 8
  %1862 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1863 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11, ptr %1862, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1863, ptr @fun_Core_iterator_withIndex_11, align 8
  %1864 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1865 = call ptr @make_candy_function(ptr @Core_iterator_ensure, ptr %1864, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1865, ptr @fun_Core_iterator_ensure, align 8
  %1866 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1867 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft, ptr %1866, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1867, ptr @fun_Core_iterator_foldLeft, align 8
  %1868 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1869 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1869, align 1
  %1870 = call ptr @make_candy_tag(ptr %1869, ptr %1868)
  store ptr %1870, ptr @tag_Error.505, align 8
  %1871 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1872 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-0_matched, ptr %1871, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1872, ptr @fun_Core_iterator_reduceLeft_18_case-0_matched, align 8
  %1873 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1874 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft, ptr %1873, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1874, ptr @fun_Core_iterator_reduceLeft, align 8
  %1875 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1876 = call ptr @make_candy_function(ptr @Core_iterator_sum_8, ptr %1875, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1876, ptr @fun_Core_iterator_sum_8, align 8
  %1877 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1878 = call ptr @make_candy_function(ptr @Core_iterator_sum, ptr %1877, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1878, ptr @fun_Core_iterator_sum, align 8
  %1879 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1880 = call ptr @make_candy_function(ptr @Core_iterator_length_5, ptr %1879, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1880, ptr @fun_Core_iterator_length_5, align 8
  %1881 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1882 = call ptr @make_candy_function(ptr @Core_iterator_all, ptr %1881, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1882, ptr @fun_Core_iterator_all, align 8
  %1883 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1884 = call ptr @make_candy_function(ptr @Core_iterator_any, ptr %1883, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1884, ptr @fun_Core_iterator_any, align 8
  %1885 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1886 = call ptr @make_candy_function(ptr @Core_iterator_joinToText, ptr %1885, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1886, ptr @fun_Core_iterator_joinToText, align 8
  %1887 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1888 = call ptr @make_candy_function(ptr @Core_iterator_where, ptr %1887, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1888, ptr @fun_Core_iterator_where, align 8
  %1889 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1890 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile, ptr %1889, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1890, ptr @fun_Core_iterator_takeWhile, align 8
  %1891 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1892 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_2, ptr %1891, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1892, ptr @fun_Core_iterator_withIndex_2, align 8
  %1893 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1894 = call ptr @make_candy_function(ptr @Core_iterator_take_34, ptr %1893, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1894, ptr @fun_Core_iterator_take_34, align 8
  %1895 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1896 = call ptr @make_candy_function(ptr @Core_iterator_take, ptr %1895, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1896, ptr @fun_Core_iterator_take, align 8
  %1897 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1898 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6, ptr %1897, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1898, ptr @fun_Core_iterator_skip_30_6, align 8
  %1899 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1900 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.678, ptr %1899, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1900, ptr @fun_Core_controlFlow_recursive_18.679, align 8
  %1901 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1902 = call ptr @make_candy_function(ptr @Core_iterator_skip, ptr %1901, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1902, ptr @fun_Core_iterator_skip, align 8
  %1903 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1904 = call ptr @make_candy_function(ptr @Core_iterator_fromList, ptr %1903, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1904, ptr @fun_Core_iterator_fromList, align 8
  %1905 = alloca ptr, i64 1, align 8
  %1906 = getelementptr ptr, ptr %1905, i64 0
  store ptr null, ptr %1906, align 8
  %1907 = call ptr @make_candy_list(ptr %1905)
  store ptr %1907, ptr @249, align 8
  %1908 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1909 = call ptr @make_candy_function(ptr @Core_iterator_toList_6, ptr %1908, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1909, ptr @fun_Core_iterator_toList_6, align 8
  %1910 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1911 = call ptr @make_candy_function(ptr @Core_iterator_toList_2, ptr %1910, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1911, ptr @fun_Core_iterator_toList_2, align 8
  %1912 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1913 = call ptr @make_candy_function(ptr @Core_iterator_windowed, ptr %1912, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1913, ptr @fun_Core_iterator_windowed, align 8
  %1914 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1915 = call ptr @make_candy_function(ptr @Core_iterator_chunked, ptr %1914, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1915, ptr @fun_Core_iterator_chunked, align 8
  %1916 = alloca ptr, i64 4, align 8
  %1917 = load ptr, ptr @num_1, align 8
  %1918 = getelementptr ptr, ptr %1916, i64 0
  store ptr %1917, ptr %1918, align 8
  %1919 = load ptr, ptr @num_2, align 8
  %1920 = getelementptr ptr, ptr %1916, i64 1
  store ptr %1919, ptr %1920, align 8
  %1921 = load ptr, ptr @num_3, align 8
  %1922 = getelementptr ptr, ptr %1916, i64 2
  store ptr %1921, ptr %1922, align 8
  %1923 = getelementptr ptr, ptr %1916, i64 3
  store ptr null, ptr %1923, align 8
  %1924 = call ptr @make_candy_list(ptr %1916)
  store ptr %1924, ptr @250, align 8
  %1925 = load ptr, ptr @250, align 8
  %1926 = call ptr @Core_iterator_fromList(ptr %1925)
  %1927 = call ptr @make_candy_int(i64 6)
  store ptr %1927, ptr @num_6, align 8
  %1928 = call ptr @make_candy_int(i64 7)
  store ptr %1928, ptr @num_7, align 8
  %1929 = call ptr @make_candy_int(i64 8)
  store ptr %1929, ptr @num_8, align 8
  %1930 = call ptr @make_candy_int(i64 9)
  store ptr %1930, ptr @num_9, align 8
  %1931 = alloca ptr, i64 11, align 8
  %1932 = load ptr, ptr @num_1, align 8
  %1933 = getelementptr ptr, ptr %1931, i64 0
  store ptr %1932, ptr %1933, align 8
  %1934 = load ptr, ptr @num_2, align 8
  %1935 = getelementptr ptr, ptr %1931, i64 1
  store ptr %1934, ptr %1935, align 8
  %1936 = load ptr, ptr @num_3, align 8
  %1937 = getelementptr ptr, ptr %1931, i64 2
  store ptr %1936, ptr %1937, align 8
  %1938 = load ptr, ptr @num_4, align 8
  %1939 = getelementptr ptr, ptr %1931, i64 3
  store ptr %1938, ptr %1939, align 8
  %1940 = load ptr, ptr @num_5, align 8
  %1941 = getelementptr ptr, ptr %1931, i64 4
  store ptr %1940, ptr %1941, align 8
  %1942 = load ptr, ptr @num_6, align 8
  %1943 = getelementptr ptr, ptr %1931, i64 5
  store ptr %1942, ptr %1943, align 8
  %1944 = load ptr, ptr @num_7, align 8
  %1945 = getelementptr ptr, ptr %1931, i64 6
  store ptr %1944, ptr %1945, align 8
  %1946 = load ptr, ptr @num_8, align 8
  %1947 = getelementptr ptr, ptr %1931, i64 7
  store ptr %1946, ptr %1947, align 8
  %1948 = load ptr, ptr @num_9, align 8
  %1949 = getelementptr ptr, ptr %1931, i64 8
  store ptr %1948, ptr %1949, align 8
  %1950 = load ptr, ptr @num_10, align 8
  %1951 = getelementptr ptr, ptr %1931, i64 9
  store ptr %1950, ptr %1951, align 8
  %1952 = getelementptr ptr, ptr %1931, i64 10
  store ptr null, ptr %1952, align 8
  %1953 = call ptr @make_candy_list(ptr %1931)
  store ptr %1953, ptr @251, align 8
  %1954 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:123\00", ptr %1954, align 1
  %1955 = call ptr @make_candy_text(ptr %1954)
  store ptr %1955, ptr @"Core:iterator:123", align 8
  %1956 = load ptr, ptr @251, align 8
  %1957 = call ptr @Core_iterator_fromList(ptr %1956)
  %1958 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:127\00", ptr %1958, align 1
  %1959 = call ptr @make_candy_text(ptr %1958)
  store ptr %1959, ptr @"Core:iterator:127", align 8
  %1960 = call ptr @Core_iterator_next(ptr %1926)
  %1961 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:128\00", ptr %1961, align 1
  %1962 = call ptr @make_candy_text(ptr %1961)
  store ptr %1962, ptr @"Core:iterator:128", align 8
  %1963 = call ptr @candy_builtin_type_of(ptr %1960)
  %1964 = load ptr, ptr @tag_Tag, align 8
  %1965 = call ptr @candy_builtin_equals(ptr %1964, ptr %1963)
  %1966 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1967 = getelementptr inbounds { ptr }, ptr %1966, i32 0, i32 0
  store ptr %1960, ptr %1967, align 8
  %1968 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then, ptr %1966, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1968, ptr @fun_Core_iterator_128_equals_then, align 8
  %1969 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1970 = getelementptr inbounds { ptr }, ptr %1969, i32 0, i32 0
  store ptr %1963, ptr %1970, align 8
  %1971 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.702, ptr %1969, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1971, ptr @fun_Core_iterator_128_equals_else.703, align 8
  %1972 = load ptr, ptr @fun_Core_iterator_128_equals_then, align 8
  %1973 = load ptr, ptr @fun_Core_iterator_128_equals_else.703, align 8
  %1974 = call ptr @candy_builtin_if_else(ptr %1965, ptr %1972, ptr %1973)
  %1975 = load ptr, ptr @num_0, align 8
  %1976 = call ptr @candy_builtin_list_get(ptr %1974, ptr %1975)
  %1977 = load ptr, ptr @tag_Match, align 8
  %1978 = call ptr @candy_builtin_equals(ptr %1976, ptr %1977)
  %1979 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1980 = getelementptr inbounds { ptr }, ptr %1979, i32 0, i32 0
  store ptr %1974, ptr %1980, align 8
  %1981 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.704, ptr %1979, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1981, ptr @fun_Core_iterator_128_isMatch_else.705, align 8
  %1982 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1983 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.705, align 8
  %1984 = call ptr @candy_builtin_if_else(ptr %1978, ptr %1982, ptr %1983)
  %1985 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:item\00", ptr %1985, align 1
  %1986 = call ptr @make_candy_text(ptr %1985)
  store ptr %1986, ptr @"Core:iterator:item", align 8
  %1987 = load ptr, ptr @num_1, align 8
  %1988 = call ptr @candy_builtin_list_get(ptr %1974, ptr %1987)
  %1989 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:rest\00", ptr %1989, align 1
  %1990 = call ptr @make_candy_text(ptr %1989)
  store ptr %1990, ptr @"Core:iterator:rest", align 8
  %1991 = load ptr, ptr @num_2, align 8
  %1992 = call ptr @candy_builtin_list_get(ptr %1974, ptr %1991)
  %1993 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:133\00", ptr %1993, align 1
  %1994 = call ptr @make_candy_text(ptr %1993)
  store ptr %1994, ptr @"Core:iterator:133", align 8
  %1995 = load ptr, ptr @num_1, align 8
  %1996 = call ptr @Core_check_checkEquals(ptr %1988, ptr %1995)
  %1997 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:136\00", ptr %1997, align 1
  %1998 = call ptr @make_candy_text(ptr %1997)
  store ptr %1998, ptr @"Core:iterator:136", align 8
  %1999 = call ptr @Core_iterator_next(ptr %1992)
  %2000 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:137\00", ptr %2000, align 1
  %2001 = call ptr @make_candy_text(ptr %2000)
  store ptr %2001, ptr @"Core:iterator:137", align 8
  %2002 = call ptr @candy_builtin_type_of(ptr %1999)
  %2003 = load ptr, ptr @tag_Tag, align 8
  %2004 = call ptr @candy_builtin_equals(ptr %2003, ptr %2002)
  %2005 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2006 = getelementptr inbounds { ptr }, ptr %2005, i32 0, i32 0
  store ptr %1999, ptr %2006, align 8
  %2007 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then, ptr %2005, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2007, ptr @fun_Core_iterator_137_equals_then, align 8
  %2008 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2009 = getelementptr inbounds { ptr }, ptr %2008, i32 0, i32 0
  store ptr %2002, ptr %2009, align 8
  %2010 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.724, ptr %2008, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2010, ptr @fun_Core_iterator_137_equals_else.725, align 8
  %2011 = load ptr, ptr @fun_Core_iterator_137_equals_then, align 8
  %2012 = load ptr, ptr @fun_Core_iterator_137_equals_else.725, align 8
  %2013 = call ptr @candy_builtin_if_else(ptr %2004, ptr %2011, ptr %2012)
  %2014 = load ptr, ptr @num_0, align 8
  %2015 = call ptr @candy_builtin_list_get(ptr %2013, ptr %2014)
  %2016 = load ptr, ptr @tag_Match, align 8
  %2017 = call ptr @candy_builtin_equals(ptr %2015, ptr %2016)
  %2018 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2019 = getelementptr inbounds { ptr }, ptr %2018, i32 0, i32 0
  store ptr %2013, ptr %2019, align 8
  %2020 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.726, ptr %2018, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2020, ptr @fun_Core_iterator_137_isMatch_else.727, align 8
  %2021 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2022 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.727, align 8
  %2023 = call ptr @candy_builtin_if_else(ptr %2017, ptr %2021, ptr %2022)
  %2024 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:item#1\00", ptr %2024, align 1
  %2025 = call ptr @make_candy_text(ptr %2024)
  store ptr %2025, ptr @"Core:iterator:item#1", align 8
  %2026 = load ptr, ptr @num_1, align 8
  %2027 = call ptr @candy_builtin_list_get(ptr %2013, ptr %2026)
  %2028 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:rest#1\00", ptr %2028, align 1
  %2029 = call ptr @make_candy_text(ptr %2028)
  store ptr %2029, ptr @"Core:iterator:rest#1", align 8
  %2030 = load ptr, ptr @num_2, align 8
  %2031 = call ptr @candy_builtin_list_get(ptr %2013, ptr %2030)
  %2032 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:142\00", ptr %2032, align 1
  %2033 = call ptr @make_candy_text(ptr %2032)
  store ptr %2033, ptr @"Core:iterator:142", align 8
  %2034 = load ptr, ptr @num_2, align 8
  %2035 = call ptr @Core_check_checkEquals(ptr %2027, ptr %2034)
  %2036 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:147\00", ptr %2036, align 1
  %2037 = call ptr @make_candy_text(ptr %2036)
  store ptr %2037, ptr @"Core:iterator:147", align 8
  %2038 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2039 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2, ptr %2038, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2039, ptr @fun_Core_iterator_isEmpty_2, align 8
  %2040 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %2041 = call ptr @Core_iterator_wrapSafe(ptr %1926, ptr %2040)
  %2042 = call ptr @Core_iterator_next(ptr %2041)
  %2043 = load ptr, ptr @tag_Empty, align 8
  %2044 = call ptr @candy_builtin_equals(ptr %2042, ptr %2043)
  %2045 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:149\00", ptr %2045, align 1
  %2046 = call ptr @make_candy_text(ptr %2045)
  store ptr %2046, ptr @"Core:iterator:149", align 8
  %2047 = load ptr, ptr @tag_False, align 8
  %2048 = call ptr @Core_check_checkEquals(ptr %2044, ptr %2047)
  %2049 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:154\00", ptr %2049, align 1
  %2050 = call ptr @make_candy_text(ptr %2049)
  store ptr %2050, ptr @"Core:iterator:154", align 8
  %2051 = load ptr, ptr @249, align 8
  %2052 = call ptr @Core_iterator_fromList(ptr %2051)
  %2053 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:155\00", ptr %2053, align 1
  %2054 = call ptr @make_candy_text(ptr %2053)
  store ptr %2054, ptr @"Core:iterator:155", align 8
  %2055 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2056 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2.728, ptr %2055, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2056, ptr @fun_Core_iterator_isEmpty_2.729, align 8
  %2057 = load ptr, ptr @fun_Core_iterator_isEmpty_2.729, align 8
  %2058 = call ptr @Core_iterator_wrapSafe(ptr %2052, ptr %2057)
  %2059 = call ptr @Core_iterator_next(ptr %2058)
  %2060 = load ptr, ptr @tag_Empty, align 8
  %2061 = call ptr @candy_builtin_equals(ptr %2059, ptr %2060)
  %2062 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:157\00", ptr %2062, align 1
  %2063 = call ptr @make_candy_text(ptr %2062)
  store ptr %2063, ptr @"Core:iterator:157", align 8
  %2064 = load ptr, ptr @tag_True, align 8
  %2065 = call ptr @Core_check_checkEquals(ptr %2061, ptr %2064)
  %2066 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:161:10\00", ptr %2066, align 1
  %2067 = call ptr @make_candy_text(ptr %2066)
  store ptr %2067, ptr @"Core:iterator:161:10", align 8
  %2068 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2069 = call ptr @make_candy_function(ptr @Core_iterator_161, ptr %2068, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2069, ptr @fun_Core_iterator_161, align 8
  %2070 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:162\00", ptr %2070, align 1
  %2071 = call ptr @make_candy_text(ptr %2070)
  store ptr %2071, ptr @"Core:iterator:162", align 8
  %2072 = load ptr, ptr @fun_Core_iterator_161, align 8
  %2073 = call ptr @Core_iterator_map(ptr %1926, ptr %2072)
  %2074 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:164\00", ptr %2074, align 1
  %2075 = call ptr @make_candy_text(ptr %2074)
  store ptr %2075, ptr @"Core:iterator:164", align 8
  %2076 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2077 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.730, ptr %2076, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2077, ptr @fun_Core_iterator_toList_2.731, align 8
  %2078 = load ptr, ptr @fun_Core_iterator_toList_2.731, align 8
  %2079 = call ptr @Core_iterator_wrapSafe(ptr %2073, ptr %2078)
  %2080 = load ptr, ptr @249, align 8
  %2081 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2082 = call ptr @Core_iterator_foldLeft(ptr %2079, ptr %2080, ptr %2081)
  %2083 = alloca ptr, i64 4, align 8
  %2084 = load ptr, ptr @num_2, align 8
  %2085 = getelementptr ptr, ptr %2083, i64 0
  store ptr %2084, ptr %2085, align 8
  %2086 = load ptr, ptr @num_4, align 8
  %2087 = getelementptr ptr, ptr %2083, i64 1
  store ptr %2086, ptr %2087, align 8
  %2088 = load ptr, ptr @num_6, align 8
  %2089 = getelementptr ptr, ptr %2083, i64 2
  store ptr %2088, ptr %2089, align 8
  %2090 = getelementptr ptr, ptr %2083, i64 3
  store ptr null, ptr %2090, align 8
  %2091 = call ptr @make_candy_list(ptr %2083)
  store ptr %2091, ptr @268, align 8
  %2092 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:169\00", ptr %2092, align 1
  %2093 = call ptr @make_candy_text(ptr %2092)
  store ptr %2093, ptr @"Core:iterator:169", align 8
  %2094 = load ptr, ptr @268, align 8
  %2095 = call ptr @Core_check_checkEquals(ptr %2082, ptr %2094)
  %2096 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:173\00", ptr %2096, align 1
  %2097 = call ptr @make_candy_text(ptr %2096)
  store ptr %2097, ptr @"Core:iterator:173", align 8
  %2098 = call ptr @Core_iterator_sum(ptr %1926)
  %2099 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:175\00", ptr %2099, align 1
  %2100 = call ptr @make_candy_text(ptr %2099)
  store ptr %2100, ptr @"Core:iterator:175", align 8
  %2101 = load ptr, ptr @num_6, align 8
  %2102 = call ptr @Core_check_checkEquals(ptr %2098, ptr %2101)
  %2103 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:179\00", ptr %2103, align 1
  %2104 = call ptr @make_candy_text(ptr %2103)
  store ptr %2104, ptr @"Core:iterator:179", align 8
  %2105 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2106 = call ptr @make_candy_function(ptr @Core_iterator_length_2, ptr %2105, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2106, ptr @fun_Core_iterator_length_2, align 8
  %2107 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %2108 = call ptr @Core_iterator_wrapSafe(ptr %1926, ptr %2107)
  %2109 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %2110 = call ptr @Core_iterator_map(ptr %2108, ptr %2109)
  %2111 = call ptr @Core_iterator_sum(ptr %2110)
  %2112 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:181\00", ptr %2112, align 1
  %2113 = call ptr @make_candy_text(ptr %2112)
  store ptr %2113, ptr @"Core:iterator:181", align 8
  %2114 = load ptr, ptr @num_3, align 8
  %2115 = call ptr @Core_check_checkEquals(ptr %2111, ptr %2114)
  %2116 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:185:9\00", ptr %2116, align 1
  %2117 = call ptr @make_candy_text(ptr %2116)
  store ptr %2117, ptr @"Core:iterator:185:9", align 8
  %2118 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2119 = call ptr @make_candy_function(ptr @Core_iterator_185, ptr %2118, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2119, ptr @fun_Core_iterator_185, align 8
  %2120 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:186\00", ptr %2120, align 1
  %2121 = call ptr @make_candy_text(ptr %2120)
  store ptr %2121, ptr @"Core:iterator:186", align 8
  %2122 = load ptr, ptr @fun_Core_iterator_185, align 8
  %2123 = call ptr @Core_iterator_all(ptr %1926, ptr %2122)
  %2124 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:188\00", ptr %2124, align 1
  %2125 = call ptr @make_candy_text(ptr %2124)
  store ptr %2125, ptr @"Core:iterator:188", align 8
  %2126 = load ptr, ptr @tag_True, align 8
  %2127 = call ptr @Core_check_checkEquals(ptr %2123, ptr %2126)
  %2128 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2129 = call ptr @make_candy_function(ptr @Core_iterator_192, ptr %2128, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2129, ptr @fun_Core_iterator_192, align 8
  %2130 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:193\00", ptr %2130, align 1
  %2131 = call ptr @make_candy_text(ptr %2130)
  store ptr %2131, ptr @"Core:iterator:193", align 8
  %2132 = load ptr, ptr @fun_Core_iterator_192, align 8
  %2133 = call ptr @Core_iterator_any(ptr %1926, ptr %2132)
  %2134 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:195\00", ptr %2134, align 1
  %2135 = call ptr @make_candy_text(ptr %2134)
  store ptr %2135, ptr @"Core:iterator:195", align 8
  %2136 = load ptr, ptr @tag_True, align 8
  %2137 = call ptr @Core_check_checkEquals(ptr %2133, ptr %2136)
  %2138 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:200\00", ptr %2138, align 1
  %2139 = call ptr @make_candy_text(ptr %2138)
  store ptr %2139, ptr @"Core:iterator:200", align 8
  %2140 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %2141 = call ptr @Core_iterator_map(ptr %1926, ptr %2140)
  %2142 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:202\00", ptr %2142, align 1
  %2143 = call ptr @make_candy_text(ptr %2142)
  store ptr %2143, ptr @"Core:iterator:202", align 8
  %2144 = call ptr @Core_iterator_joinToText(ptr %2141)
  %2145 = alloca i8, i64 4, align 1
  store [4 x i8] c"123\00", ptr %2145, align 1
  %2146 = call ptr @make_candy_text(ptr %2145)
  store ptr %2146, ptr @text_123, align 8
  %2147 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:210\00", ptr %2147, align 1
  %2148 = call ptr @make_candy_text(ptr %2147)
  store ptr %2148, ptr @"Core:iterator:210", align 8
  %2149 = load ptr, ptr @text_123, align 8
  %2150 = call ptr @Core_check_checkEquals(ptr %2144, ptr %2149)
  %2151 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:214:9\00", ptr %2151, align 1
  %2152 = call ptr @make_candy_text(ptr %2151)
  store ptr %2152, ptr @"Core:iterator:214:9", align 8
  %2153 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2154 = call ptr @make_candy_function(ptr @Core_iterator_214, ptr %2153, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2154, ptr @fun_Core_iterator_214, align 8
  %2155 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:215\00", ptr %2155, align 1
  %2156 = call ptr @make_candy_text(ptr %2155)
  store ptr %2156, ptr @"Core:iterator:215", align 8
  %2157 = load ptr, ptr @fun_Core_iterator_214, align 8
  %2158 = call ptr @Core_iterator_where(ptr %1957, ptr %2157)
  %2159 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:217\00", ptr %2159, align 1
  %2160 = call ptr @make_candy_text(ptr %2159)
  store ptr %2160, ptr @"Core:iterator:217", align 8
  %2161 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2162 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.732, ptr %2161, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2162, ptr @fun_Core_iterator_toList_2.733, align 8
  %2163 = load ptr, ptr @fun_Core_iterator_toList_2.733, align 8
  %2164 = call ptr @Core_iterator_wrapSafe(ptr %2158, ptr %2163)
  %2165 = load ptr, ptr @249, align 8
  %2166 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2167 = call ptr @Core_iterator_foldLeft(ptr %2164, ptr %2165, ptr %2166)
  %2168 = alloca ptr, i64 6, align 8
  %2169 = load ptr, ptr @num_1, align 8
  %2170 = getelementptr ptr, ptr %2168, i64 0
  store ptr %2169, ptr %2170, align 8
  %2171 = load ptr, ptr @num_3, align 8
  %2172 = getelementptr ptr, ptr %2168, i64 1
  store ptr %2171, ptr %2172, align 8
  %2173 = load ptr, ptr @num_5, align 8
  %2174 = getelementptr ptr, ptr %2168, i64 2
  store ptr %2173, ptr %2174, align 8
  %2175 = load ptr, ptr @num_7, align 8
  %2176 = getelementptr ptr, ptr %2168, i64 3
  store ptr %2175, ptr %2176, align 8
  %2177 = load ptr, ptr @num_9, align 8
  %2178 = getelementptr ptr, ptr %2168, i64 4
  store ptr %2177, ptr %2178, align 8
  %2179 = getelementptr ptr, ptr %2168, i64 5
  store ptr null, ptr %2179, align 8
  %2180 = call ptr @make_candy_list(ptr %2168)
  store ptr %2180, ptr @269, align 8
  %2181 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:224\00", ptr %2181, align 1
  %2182 = call ptr @make_candy_text(ptr %2181)
  store ptr %2182, ptr @"Core:iterator:224", align 8
  %2183 = load ptr, ptr @269, align 8
  %2184 = call ptr @Core_check_checkEquals(ptr %2167, ptr %2183)
  %2185 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:228:10\00", ptr %2185, align 1
  %2186 = call ptr @make_candy_text(ptr %2185)
  store ptr %2186, ptr @"Core:iterator:228:10", align 8
  %2187 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2188 = call ptr @make_candy_function(ptr @Core_iterator_228, ptr %2187, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2188, ptr @fun_Core_iterator_228, align 8
  %2189 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:229\00", ptr %2189, align 1
  %2190 = call ptr @make_candy_text(ptr %2189)
  store ptr %2190, ptr @"Core:iterator:229", align 8
  %2191 = load ptr, ptr @fun_Core_iterator_228, align 8
  %2192 = call ptr @Core_iterator_takeWhile(ptr %1957, ptr %2191)
  %2193 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:231\00", ptr %2193, align 1
  %2194 = call ptr @make_candy_text(ptr %2193)
  store ptr %2194, ptr @"Core:iterator:231", align 8
  %2195 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2196 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.734, ptr %2195, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2196, ptr @fun_Core_iterator_toList_2.735, align 8
  %2197 = load ptr, ptr @fun_Core_iterator_toList_2.735, align 8
  %2198 = call ptr @Core_iterator_wrapSafe(ptr %2192, ptr %2197)
  %2199 = load ptr, ptr @249, align 8
  %2200 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2201 = call ptr @Core_iterator_foldLeft(ptr %2198, ptr %2199, ptr %2200)
  %2202 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:236\00", ptr %2202, align 1
  %2203 = call ptr @make_candy_text(ptr %2202)
  store ptr %2203, ptr @"Core:iterator:236", align 8
  %2204 = load ptr, ptr @250, align 8
  %2205 = call ptr @Core_check_checkEquals(ptr %2201, ptr %2204)
  %2206 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:241\00", ptr %2206, align 1
  %2207 = call ptr @make_candy_text(ptr %2206)
  store ptr %2207, ptr @"Core:iterator:241", align 8
  %2208 = load ptr, ptr @num_4, align 8
  %2209 = call ptr @Core_iterator_take(ptr %1957, ptr %2208)
  %2210 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:243\00", ptr %2210, align 1
  %2211 = call ptr @make_candy_text(ptr %2210)
  store ptr %2211, ptr @"Core:iterator:243", align 8
  %2212 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2213 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.736, ptr %2212, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2213, ptr @fun_Core_iterator_toList_2.737, align 8
  %2214 = load ptr, ptr @fun_Core_iterator_toList_2.737, align 8
  %2215 = call ptr @Core_iterator_wrapSafe(ptr %2209, ptr %2214)
  %2216 = load ptr, ptr @249, align 8
  %2217 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2218 = call ptr @Core_iterator_foldLeft(ptr %2215, ptr %2216, ptr %2217)
  %2219 = alloca ptr, i64 5, align 8
  %2220 = load ptr, ptr @num_1, align 8
  %2221 = getelementptr ptr, ptr %2219, i64 0
  store ptr %2220, ptr %2221, align 8
  %2222 = load ptr, ptr @num_2, align 8
  %2223 = getelementptr ptr, ptr %2219, i64 1
  store ptr %2222, ptr %2223, align 8
  %2224 = load ptr, ptr @num_3, align 8
  %2225 = getelementptr ptr, ptr %2219, i64 2
  store ptr %2224, ptr %2225, align 8
  %2226 = load ptr, ptr @num_4, align 8
  %2227 = getelementptr ptr, ptr %2219, i64 3
  store ptr %2226, ptr %2227, align 8
  %2228 = getelementptr ptr, ptr %2219, i64 4
  store ptr null, ptr %2228, align 8
  %2229 = call ptr @make_candy_list(ptr %2219)
  store ptr %2229, ptr @270, align 8
  %2230 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:249\00", ptr %2230, align 1
  %2231 = call ptr @make_candy_text(ptr %2230)
  store ptr %2231, ptr @"Core:iterator:249", align 8
  %2232 = load ptr, ptr @270, align 8
  %2233 = call ptr @Core_check_checkEquals(ptr %2218, ptr %2232)
  %2234 = call ptr @make_candy_int(i64 12)
  store ptr %2234, ptr @num_12, align 8
  %2235 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:254\00", ptr %2235, align 1
  %2236 = call ptr @make_candy_text(ptr %2235)
  store ptr %2236, ptr @"Core:iterator:254", align 8
  %2237 = load ptr, ptr @num_12, align 8
  %2238 = call ptr @Core_iterator_take(ptr %1957, ptr %2237)
  %2239 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:256\00", ptr %2239, align 1
  %2240 = call ptr @make_candy_text(ptr %2239)
  store ptr %2240, ptr @"Core:iterator:256", align 8
  %2241 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2242 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.738, ptr %2241, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2242, ptr @fun_Core_iterator_toList_2.739, align 8
  %2243 = load ptr, ptr @fun_Core_iterator_toList_2.739, align 8
  %2244 = call ptr @Core_iterator_wrapSafe(ptr %2238, ptr %2243)
  %2245 = load ptr, ptr @249, align 8
  %2246 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2247 = call ptr @Core_iterator_foldLeft(ptr %2244, ptr %2245, ptr %2246)
  %2248 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:268\00", ptr %2248, align 1
  %2249 = call ptr @make_candy_text(ptr %2248)
  store ptr %2249, ptr @"Core:iterator:268", align 8
  %2250 = load ptr, ptr @251, align 8
  %2251 = call ptr @Core_check_checkEquals(ptr %2247, ptr %2250)
  %2252 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:273\00", ptr %2252, align 1
  %2253 = call ptr @make_candy_text(ptr %2252)
  store ptr %2253, ptr @"Core:iterator:273", align 8
  %2254 = load ptr, ptr @num_4, align 8
  %2255 = call ptr @Core_iterator_skip(ptr %1957, ptr %2254)
  %2256 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:275\00", ptr %2256, align 1
  %2257 = call ptr @make_candy_text(ptr %2256)
  store ptr %2257, ptr @"Core:iterator:275", align 8
  %2258 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2259 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.740, ptr %2258, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2259, ptr @fun_Core_iterator_toList_2.741, align 8
  %2260 = load ptr, ptr @fun_Core_iterator_toList_2.741, align 8
  %2261 = call ptr @Core_iterator_wrapSafe(ptr %2255, ptr %2260)
  %2262 = load ptr, ptr @249, align 8
  %2263 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2264 = call ptr @Core_iterator_foldLeft(ptr %2261, ptr %2262, ptr %2263)
  %2265 = alloca ptr, i64 7, align 8
  %2266 = load ptr, ptr @num_5, align 8
  %2267 = getelementptr ptr, ptr %2265, i64 0
  store ptr %2266, ptr %2267, align 8
  %2268 = load ptr, ptr @num_6, align 8
  %2269 = getelementptr ptr, ptr %2265, i64 1
  store ptr %2268, ptr %2269, align 8
  %2270 = load ptr, ptr @num_7, align 8
  %2271 = getelementptr ptr, ptr %2265, i64 2
  store ptr %2270, ptr %2271, align 8
  %2272 = load ptr, ptr @num_8, align 8
  %2273 = getelementptr ptr, ptr %2265, i64 3
  store ptr %2272, ptr %2273, align 8
  %2274 = load ptr, ptr @num_9, align 8
  %2275 = getelementptr ptr, ptr %2265, i64 4
  store ptr %2274, ptr %2275, align 8
  %2276 = load ptr, ptr @num_10, align 8
  %2277 = getelementptr ptr, ptr %2265, i64 5
  store ptr %2276, ptr %2277, align 8
  %2278 = getelementptr ptr, ptr %2265, i64 6
  store ptr null, ptr %2278, align 8
  %2279 = call ptr @make_candy_list(ptr %2265)
  store ptr %2279, ptr @271, align 8
  %2280 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:283\00", ptr %2280, align 1
  %2281 = call ptr @make_candy_text(ptr %2280)
  store ptr %2281, ptr @"Core:iterator:283", align 8
  %2282 = load ptr, ptr @271, align 8
  %2283 = call ptr @Core_check_checkEquals(ptr %2264, ptr %2282)
  %2284 = call ptr @make_candy_int(i64 40)
  store ptr %2284, ptr @num_40, align 8
  %2285 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:288\00", ptr %2285, align 1
  %2286 = call ptr @make_candy_text(ptr %2285)
  store ptr %2286, ptr @"Core:iterator:288", align 8
  %2287 = load ptr, ptr @num_40, align 8
  %2288 = call ptr @Core_iterator_skip(ptr %1957, ptr %2287)
  %2289 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:290\00", ptr %2289, align 1
  %2290 = call ptr @make_candy_text(ptr %2289)
  store ptr %2290, ptr @"Core:iterator:290", align 8
  %2291 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2292 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.742, ptr %2291, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2292, ptr @fun_Core_iterator_toList_2.743, align 8
  %2293 = load ptr, ptr @fun_Core_iterator_toList_2.743, align 8
  %2294 = call ptr @Core_iterator_wrapSafe(ptr %2288, ptr %2293)
  %2295 = load ptr, ptr @249, align 8
  %2296 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2297 = call ptr @Core_iterator_foldLeft(ptr %2294, ptr %2295, ptr %2296)
  %2298 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:292\00", ptr %2298, align 1
  %2299 = call ptr @make_candy_text(ptr %2298)
  store ptr %2299, ptr @"Core:iterator:292", align 8
  %2300 = load ptr, ptr @249, align 8
  %2301 = call ptr @Core_check_checkEquals(ptr %2297, ptr %2300)
  %2302 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:299\00", ptr %2302, align 1
  %2303 = call ptr @make_candy_text(ptr %2302)
  store ptr %2303, ptr @"Core:iterator:299", align 8
  %2304 = load ptr, ptr @num_4, align 8
  %2305 = load ptr, ptr @num_3, align 8
  %2306 = load ptr, ptr @tag_False, align 8
  %2307 = call ptr @Core_iterator_windowed(ptr %1957, ptr %2304, ptr %2305, ptr %2306)
  %2308 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:301\00", ptr %2308, align 1
  %2309 = call ptr @make_candy_text(ptr %2308)
  store ptr %2309, ptr @"Core:iterator:301", align 8
  %2310 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2311 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.744, ptr %2310, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2311, ptr @fun_Core_iterator_toList_2.745, align 8
  %2312 = load ptr, ptr @fun_Core_iterator_toList_2.745, align 8
  %2313 = call ptr @Core_iterator_wrapSafe(ptr %2307, ptr %2312)
  %2314 = load ptr, ptr @249, align 8
  %2315 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2316 = call ptr @Core_iterator_foldLeft(ptr %2313, ptr %2314, ptr %2315)
  %2317 = alloca ptr, i64 5, align 8
  %2318 = load ptr, ptr @num_4, align 8
  %2319 = getelementptr ptr, ptr %2317, i64 0
  store ptr %2318, ptr %2319, align 8
  %2320 = load ptr, ptr @num_5, align 8
  %2321 = getelementptr ptr, ptr %2317, i64 1
  store ptr %2320, ptr %2321, align 8
  %2322 = load ptr, ptr @num_6, align 8
  %2323 = getelementptr ptr, ptr %2317, i64 2
  store ptr %2322, ptr %2323, align 8
  %2324 = load ptr, ptr @num_7, align 8
  %2325 = getelementptr ptr, ptr %2317, i64 3
  store ptr %2324, ptr %2325, align 8
  %2326 = getelementptr ptr, ptr %2317, i64 4
  store ptr null, ptr %2326, align 8
  %2327 = call ptr @make_candy_list(ptr %2317)
  store ptr %2327, ptr @272, align 8
  %2328 = alloca ptr, i64 5, align 8
  %2329 = load ptr, ptr @num_7, align 8
  %2330 = getelementptr ptr, ptr %2328, i64 0
  store ptr %2329, ptr %2330, align 8
  %2331 = load ptr, ptr @num_8, align 8
  %2332 = getelementptr ptr, ptr %2328, i64 1
  store ptr %2331, ptr %2332, align 8
  %2333 = load ptr, ptr @num_9, align 8
  %2334 = getelementptr ptr, ptr %2328, i64 2
  store ptr %2333, ptr %2334, align 8
  %2335 = load ptr, ptr @num_10, align 8
  %2336 = getelementptr ptr, ptr %2328, i64 3
  store ptr %2335, ptr %2336, align 8
  %2337 = getelementptr ptr, ptr %2328, i64 4
  store ptr null, ptr %2337, align 8
  %2338 = call ptr @make_candy_list(ptr %2328)
  store ptr %2338, ptr @273, align 8
  %2339 = alloca ptr, i64 4, align 8
  %2340 = load ptr, ptr @270, align 8
  %2341 = getelementptr ptr, ptr %2339, i64 0
  store ptr %2340, ptr %2341, align 8
  %2342 = load ptr, ptr @272, align 8
  %2343 = getelementptr ptr, ptr %2339, i64 1
  store ptr %2342, ptr %2343, align 8
  %2344 = load ptr, ptr @273, align 8
  %2345 = getelementptr ptr, ptr %2339, i64 2
  store ptr %2344, ptr %2345, align 8
  %2346 = getelementptr ptr, ptr %2339, i64 3
  store ptr null, ptr %2346, align 8
  %2347 = call ptr @make_candy_list(ptr %2339)
  store ptr %2347, ptr @274, align 8
  %2348 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:318\00", ptr %2348, align 1
  %2349 = call ptr @make_candy_text(ptr %2348)
  store ptr %2349, ptr @"Core:iterator:318", align 8
  %2350 = load ptr, ptr @274, align 8
  %2351 = call ptr @Core_check_checkEquals(ptr %2316, ptr %2350)
  %2352 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:323\00", ptr %2352, align 1
  %2353 = call ptr @make_candy_text(ptr %2352)
  store ptr %2353, ptr @"Core:iterator:323", align 8
  %2354 = load ptr, ptr @num_3, align 8
  %2355 = call ptr @Core_iterator_chunked(ptr %1957, ptr %2354)
  %2356 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:325\00", ptr %2356, align 1
  %2357 = call ptr @make_candy_text(ptr %2356)
  store ptr %2357, ptr @"Core:iterator:325", align 8
  %2358 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2359 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.746, ptr %2358, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2359, ptr @fun_Core_iterator_toList_2.747, align 8
  %2360 = load ptr, ptr @fun_Core_iterator_toList_2.747, align 8
  %2361 = call ptr @Core_iterator_wrapSafe(ptr %2355, ptr %2360)
  %2362 = load ptr, ptr @249, align 8
  %2363 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2364 = call ptr @Core_iterator_foldLeft(ptr %2361, ptr %2362, ptr %2363)
  %2365 = alloca ptr, i64 4, align 8
  %2366 = load ptr, ptr @num_4, align 8
  %2367 = getelementptr ptr, ptr %2365, i64 0
  store ptr %2366, ptr %2367, align 8
  %2368 = load ptr, ptr @num_5, align 8
  %2369 = getelementptr ptr, ptr %2365, i64 1
  store ptr %2368, ptr %2369, align 8
  %2370 = load ptr, ptr @num_6, align 8
  %2371 = getelementptr ptr, ptr %2365, i64 2
  store ptr %2370, ptr %2371, align 8
  %2372 = getelementptr ptr, ptr %2365, i64 3
  store ptr null, ptr %2372, align 8
  %2373 = call ptr @make_candy_list(ptr %2365)
  store ptr %2373, ptr @275, align 8
  %2374 = alloca ptr, i64 4, align 8
  %2375 = load ptr, ptr @num_7, align 8
  %2376 = getelementptr ptr, ptr %2374, i64 0
  store ptr %2375, ptr %2376, align 8
  %2377 = load ptr, ptr @num_8, align 8
  %2378 = getelementptr ptr, ptr %2374, i64 1
  store ptr %2377, ptr %2378, align 8
  %2379 = load ptr, ptr @num_9, align 8
  %2380 = getelementptr ptr, ptr %2374, i64 2
  store ptr %2379, ptr %2380, align 8
  %2381 = getelementptr ptr, ptr %2374, i64 3
  store ptr null, ptr %2381, align 8
  %2382 = call ptr @make_candy_list(ptr %2374)
  store ptr %2382, ptr @276, align 8
  %2383 = alloca ptr, i64 2, align 8
  %2384 = load ptr, ptr @num_10, align 8
  %2385 = getelementptr ptr, ptr %2383, i64 0
  store ptr %2384, ptr %2385, align 8
  %2386 = getelementptr ptr, ptr %2383, i64 1
  store ptr null, ptr %2386, align 8
  %2387 = call ptr @make_candy_list(ptr %2383)
  store ptr %2387, ptr @277, align 8
  %2388 = alloca ptr, i64 5, align 8
  %2389 = load ptr, ptr @250, align 8
  %2390 = getelementptr ptr, ptr %2388, i64 0
  store ptr %2389, ptr %2390, align 8
  %2391 = load ptr, ptr @275, align 8
  %2392 = getelementptr ptr, ptr %2388, i64 1
  store ptr %2391, ptr %2392, align 8
  %2393 = load ptr, ptr @276, align 8
  %2394 = getelementptr ptr, ptr %2388, i64 2
  store ptr %2393, ptr %2394, align 8
  %2395 = load ptr, ptr @277, align 8
  %2396 = getelementptr ptr, ptr %2388, i64 3
  store ptr %2395, ptr %2396, align 8
  %2397 = getelementptr ptr, ptr %2388, i64 4
  store ptr null, ptr %2397, align 8
  %2398 = call ptr @make_candy_list(ptr %2388)
  store ptr %2398, ptr @278, align 8
  %2399 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:341\00", ptr %2399, align 1
  %2400 = call ptr @make_candy_text(ptr %2399)
  store ptr %2400, ptr @"Core:iterator:341", align 8
  %2401 = load ptr, ptr @278, align 8
  %2402 = call ptr @Core_check_checkEquals(ptr %2364, ptr %2401)
  %2403 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:sqrt:sqrt:9\00", ptr %2403, align 1
  %2404 = call ptr @make_candy_text(ptr %2403)
  store ptr %2404, ptr @"Examples:sqrt:sqrt:9", align 8
  %2405 = alloca i8, i64 38, align 1
  store [38 x i8] c"`fixedDecimal.is x` was not satisfied\00", ptr %2405, align 1
  %2406 = call ptr @make_candy_text(ptr %2405)
  store ptr %2406, ptr @"text_`fixedDecimal.is x` was not satisfied", align 8
  %2407 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:11\00", ptr %2407, align 1
  %2408 = call ptr @make_candy_text(ptr %2407)
  store ptr %2408, ptr @"Examples:sqrt:sqrt:11", align 8
  %2409 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:21\00", ptr %2409, align 1
  %2410 = call ptr @make_candy_text(ptr %2409)
  store ptr %2410, ptr @"Examples:sqrt:sqrt:21", align 8
  %2411 = alloca i8, i64 49, align 1
  store [49 x i8] c"`fixedDecimal.isNonNegative x` was not satisfied\00", ptr %2411, align 1
  %2412 = call ptr @make_candy_text(ptr %2411)
  store ptr %2412, ptr @"text_`fixedDecimal.isNonNegative x` was not satisfied", align 8
  %2413 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:23\00", ptr %2413, align 1
  %2414 = call ptr @make_candy_text(ptr %2413)
  store ptr %2414, ptr @"Examples:sqrt:sqrt:23", align 8
  %2415 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int.is precision` was not satisfied\00", ptr %2415, align 1
  %2416 = call ptr @make_candy_text(ptr %2415)
  store ptr %2416, ptr @"text_`int.is precision` was not satisfied", align 8
  %2417 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:35\00", ptr %2417, align 1
  %2418 = call ptr @make_candy_text(ptr %2417)
  store ptr %2418, ptr @"Examples:sqrt:sqrt:35", align 8
  %2419 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:45\00", ptr %2419, align 1
  %2420 = call ptr @make_candy_text(ptr %2419)
  store ptr %2420, ptr @"Examples:sqrt:sqrt:45", align 8
  %2421 = alloca i8, i64 48, align 1
  store [48 x i8] c"`int.isNonNegative precision` was not satisfied\00", ptr %2421, align 1
  %2422 = call ptr @make_candy_text(ptr %2421)
  store ptr %2422, ptr @"text_`int.isNonNegative precision` was not satisfied", align 8
  %2423 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:47\00", ptr %2423, align 1
  %2424 = call ptr @make_candy_text(ptr %2423)
  store ptr %2424, ptr @"Examples:sqrt:sqrt:47", align 8
  %2425 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:58\00", ptr %2425, align 1
  %2426 = call ptr @make_candy_text(ptr %2425)
  store ptr %2426, ptr @"Examples:sqrt:sqrt:58", align 8
  %2427 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:81\00", ptr %2427, align 1
  %2428 = call ptr @make_candy_text(ptr %2427)
  store ptr %2428, ptr @"Examples:sqrt:sqrt:81", align 8
  %2429 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:28\00", ptr %2429, align 1
  %2430 = call ptr @make_candy_text(ptr %2429)
  store ptr %2430, ptr @"Examples:sqrt:sqrt:82:28", align 8
  %2431 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:29\00", ptr %2431, align 1
  %2432 = call ptr @make_candy_text(ptr %2431)
  store ptr %2432, ptr @"Examples:sqrt:sqrt:82:29", align 8
  %2433 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:41\00", ptr %2433, align 1
  %2434 = call ptr @make_candy_text(ptr %2433)
  store ptr %2434, ptr @"Examples:sqrt:sqrt:82:41", align 8
  %2435 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:55\00", ptr %2435, align 1
  %2436 = call ptr @make_candy_text(ptr %2435)
  store ptr %2436, ptr @"Examples:sqrt:sqrt:82:55", align 8
  %2437 = alloca i8, i64 27, align 1
  store [27 x i8] c"Examples:sqrt:sqrt:82:57:2\00", ptr %2437, align 1
  %2438 = call ptr @make_candy_text(ptr %2437)
  store ptr %2438, ptr @"Examples:sqrt:sqrt:82:57:2", align 8
  %2439 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:sqrt:sqrt:82:58\00", ptr %2439, align 1
  %2440 = call ptr @make_candy_text(ptr %2439)
  store ptr %2440, ptr @"Examples:sqrt:sqrt:82:58", align 8
  %2441 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:sqrt:83\00", ptr %2441, align 1
  %2442 = call ptr @make_candy_text(ptr %2441)
  store ptr %2442, ptr @"Examples:sqrt:sqrt:83", align 8
  %2443 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2444 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt, ptr %2443, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2444, ptr @fun_Examples_sqrt_sqrt, align 8
  %2445 = call ptr @make_candy_int(i64 65)
  store ptr %2445, ptr @num_65, align 8
  %2446 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:14\00", ptr %2446, align 1
  %2447 = call ptr @make_candy_text(ptr %2446)
  store ptr %2447, ptr @"Examples:sqrt:main:14", align 8
  %2448 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:47\00", ptr %2448, align 1
  %2449 = call ptr @make_candy_text(ptr %2448)
  store ptr %2449, ptr @"Examples:sqrt:main:47", align 8
  %2450 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:48\00", ptr %2450, align 1
  %2451 = call ptr @make_candy_text(ptr %2450)
  store ptr %2451, ptr @"Examples:sqrt:main:48", align 8
  %2452 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:49\00", ptr %2452, align 1
  %2453 = call ptr @make_candy_text(ptr %2452)
  store ptr %2453, ptr @"Examples:sqrt:main:49", align 8
  %2454 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:sqrt:main:51:0\00", ptr %2454, align 1
  %2455 = call ptr @make_candy_text(ptr %2454)
  store ptr %2455, ptr @"Examples:sqrt:main:51:0", align 8
  %2456 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:52\00", ptr %2456, align 1
  %2457 = call ptr @make_candy_text(ptr %2456)
  store ptr %2457, ptr @"Examples:sqrt:main:52", align 8
  %2458 = alloca i8, i64 18, align 1
  store [18 x i8] c"The root of 2 is \00", ptr %2458, align 1
  %2459 = call ptr @make_candy_text(ptr %2458)
  store ptr %2459, ptr @"text_The root of 2 is ", align 8
  %2460 = alloca i8, i64 22, align 1
  store [22 x i8] c"Examples:sqrt:main:55\00", ptr %2460, align 1
  %2461 = call ptr @make_candy_text(ptr %2460)
  store ptr %2461, ptr @"Examples:sqrt:main:55", align 8
  %2462 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2463 = call ptr @make_candy_function(ptr @Examples_sqrt_main, ptr %2462, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2463, ptr @fun_Examples_sqrt_main, align 8
  %2464 = call ptr @run_candy_main(ptr @fun_Examples_sqrt_main, ptr @candy_environment)
  call void @print_candy_value(ptr %2464)
  %2465 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %2465)
  %2466 = load ptr, ptr @"Builtins::fitsInRustU128:10", align 8
  call void @free_candy_value(ptr %2466)
  %2467 = load ptr, ptr @"Builtins::fitsInRustU128:16", align 8
  call void @free_candy_value(ptr %2467)
  %2468 = load ptr, ptr @"Builtins::fitsInRustU128:5", align 8
  call void @free_candy_value(ptr %2468)
  %2469 = load ptr, ptr @"Builtins::fitsInRustU128:8", align 8
  call void @free_candy_value(ptr %2469)
  %2470 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %2470)
  %2471 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %2471)
  %2472 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %2472)
  %2473 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %2473)
  %2474 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %2474)
  %2475 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %2475)
  %2476 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %2476)
  %2477 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %2477)
  %2478 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %2478)
  %2479 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %2479)
  %2480 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %2480)
  %2481 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %2481)
  %2482 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %2482)
  %2483 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %2483)
  %2484 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %2484)
  %2485 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %2485)
  %2486 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %2486)
  %2487 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %2487)
  %2488 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %2488)
  %2489 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %2489)
  %2490 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %2490)
  %2491 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %2491)
  %2492 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %2492)
  %2493 = load ptr, ptr @"Builtins::intDivideTruncating:11", align 8
  call void @free_candy_value(ptr %2493)
  %2494 = load ptr, ptr @"Builtins::intDivideTruncating:17", align 8
  call void @free_candy_value(ptr %2494)
  %2495 = load ptr, ptr @"Builtins::intDivideTruncating:25", align 8
  call void @free_candy_value(ptr %2495)
  %2496 = load ptr, ptr @"Builtins::intDivideTruncating:32", align 8
  call void @free_candy_value(ptr %2496)
  %2497 = load ptr, ptr @"Builtins::intDivideTruncating:5", align 8
  call void @free_candy_value(ptr %2497)
  %2498 = load ptr, ptr @"Builtins::intMultiply:11", align 8
  call void @free_candy_value(ptr %2498)
  %2499 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %2499)
  %2500 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %2500)
  %2501 = load ptr, ptr @"Builtins::intRemainder:11", align 8
  call void @free_candy_value(ptr %2501)
  %2502 = load ptr, ptr @"Builtins::intRemainder:17", align 8
  call void @free_candy_value(ptr %2502)
  %2503 = load ptr, ptr @"Builtins::intRemainder:25", align 8
  call void @free_candy_value(ptr %2503)
  %2504 = load ptr, ptr @"Builtins::intRemainder:32", align 8
  call void @free_candy_value(ptr %2504)
  %2505 = load ptr, ptr @"Builtins::intRemainder:5", align 8
  call void @free_candy_value(ptr %2505)
  %2506 = load ptr, ptr @"Builtins::intShiftRight:11", align 8
  call void @free_candy_value(ptr %2506)
  %2507 = load ptr, ptr @"Builtins::intShiftRight:14", align 8
  call void @free_candy_value(ptr %2507)
  %2508 = load ptr, ptr @"Builtins::intShiftRight:23", align 8
  call void @free_candy_value(ptr %2508)
  %2509 = load ptr, ptr @"Builtins::intShiftRight:24", align 8
  call void @free_candy_value(ptr %2509)
  %2510 = load ptr, ptr @"Builtins::intShiftRight:26:0", align 8
  call void @free_candy_value(ptr %2510)
  %2511 = load ptr, ptr @"Builtins::intShiftRight:27", align 8
  call void @free_candy_value(ptr %2511)
  %2512 = load ptr, ptr @"Builtins::intShiftRight:29", align 8
  call void @free_candy_value(ptr %2512)
  %2513 = load ptr, ptr @"Builtins::intShiftRight:30", align 8
  call void @free_candy_value(ptr %2513)
  %2514 = load ptr, ptr @"Builtins::intShiftRight:31", align 8
  call void @free_candy_value(ptr %2514)
  %2515 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  call void @free_candy_value(ptr %2515)
  %2516 = load ptr, ptr @"Builtins::intShiftRight:42", align 8
  call void @free_candy_value(ptr %2516)
  %2517 = load ptr, ptr @"Builtins::intShiftRight:49", align 8
  call void @free_candy_value(ptr %2517)
  %2518 = load ptr, ptr @"Builtins::intShiftRight:5", align 8
  call void @free_candy_value(ptr %2518)
  %2519 = load ptr, ptr @"Builtins::intSubtract:11", align 8
  call void @free_candy_value(ptr %2519)
  %2520 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %2520)
  %2521 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %2521)
  %2522 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %2522)
  %2523 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %2523)
  %2524 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %2524)
  %2525 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %2525)
  %2526 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %2526)
  %2527 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %2527)
  %2528 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %2528)
  %2529 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %2529)
  %2530 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %2530)
  %2531 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %2531)
  %2532 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %2532)
  %2533 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %2533)
  %2534 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %2534)
  %2535 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %2535)
  %2536 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %2536)
  %2537 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %2537)
  %2538 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %2538)
  %2539 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %2539)
  %2540 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %2540)
  %2541 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %2541)
  %2542 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %2542)
  %2543 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %2543)
  %2544 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %2544)
  %2545 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %2545)
  %2546 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %2546)
  %2547 = load ptr, ptr @"Builtins::not:1", align 8
  call void @free_candy_value(ptr %2547)
  %2548 = load ptr, ptr @"Builtins::print:11", align 8
  call void @free_candy_value(ptr %2548)
  %2549 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %2549)
  %2550 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %2550)
  %2551 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %2551)
  %2552 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %2552)
  %2553 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %2553)
  %2554 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %2554)
  %2555 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %2555)
  %2556 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %2556)
  %2557 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %2557)
  %2558 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %2558)
  %2559 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %2559)
  %2560 = load ptr, ptr @"Builtins::textGetRange:11", align 8
  call void @free_candy_value(ptr %2560)
  %2561 = load ptr, ptr @"Builtins::textGetRange:14", align 8
  call void @free_candy_value(ptr %2561)
  %2562 = load ptr, ptr @"Builtins::textGetRange:16", align 8
  call void @free_candy_value(ptr %2562)
  %2563 = load ptr, ptr @"Builtins::textGetRange:24", align 8
  call void @free_candy_value(ptr %2563)
  %2564 = load ptr, ptr @"Builtins::textGetRange:25", align 8
  call void @free_candy_value(ptr %2564)
  %2565 = load ptr, ptr @"Builtins::textGetRange:27", align 8
  call void @free_candy_value(ptr %2565)
  %2566 = load ptr, ptr @"Builtins::textGetRange:33", align 8
  call void @free_candy_value(ptr %2566)
  %2567 = load ptr, ptr @"Builtins::textGetRange:36", align 8
  call void @free_candy_value(ptr %2567)
  %2568 = load ptr, ptr @"Builtins::textGetRange:38", align 8
  call void @free_candy_value(ptr %2568)
  %2569 = load ptr, ptr @"Builtins::textGetRange:46", align 8
  call void @free_candy_value(ptr %2569)
  %2570 = load ptr, ptr @"Builtins::textGetRange:47", align 8
  call void @free_candy_value(ptr %2570)
  %2571 = load ptr, ptr @"Builtins::textGetRange:49", align 8
  call void @free_candy_value(ptr %2571)
  %2572 = load ptr, ptr @"Builtins::textGetRange:5", align 8
  call void @free_candy_value(ptr %2572)
  %2573 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  call void @free_candy_value(ptr %2573)
  %2574 = load ptr, ptr @"Builtins::textGetRange:55", align 8
  call void @free_candy_value(ptr %2574)
  %2575 = load ptr, ptr @"Builtins::textGetRange:63", align 8
  call void @free_candy_value(ptr %2575)
  %2576 = load ptr, ptr @"Builtins::textLength:11", align 8
  call void @free_candy_value(ptr %2576)
  %2577 = load ptr, ptr @"Builtins::textLength:5", align 8
  call void @free_candy_value(ptr %2577)
  %2578 = load ptr, ptr @"Builtins::textStartsWith:11", align 8
  call void @free_candy_value(ptr %2578)
  %2579 = load ptr, ptr @"Builtins::textStartsWith:18", align 8
  call void @free_candy_value(ptr %2579)
  %2580 = load ptr, ptr @"Builtins::textStartsWith:5", align 8
  call void @free_candy_value(ptr %2580)
  %2581 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %2581)
  %2582 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %2582)
  %2583 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %2583)
  %2584 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %2584)
  %2585 = load ptr, ptr @"Core:bool:and:13", align 8
  call void @free_candy_value(ptr %2585)
  %2586 = load ptr, ptr @"Core:bool:and:2", align 8
  call void @free_candy_value(ptr %2586)
  %2587 = load ptr, ptr @"Core:bool:and:4", align 8
  call void @free_candy_value(ptr %2587)
  %2588 = load ptr, ptr @"Core:bool:and:7", align 8
  call void @free_candy_value(ptr %2588)
  %2589 = load ptr, ptr @"Core:bool:and:9", align 8
  call void @free_candy_value(ptr %2589)
  %2590 = load ptr, ptr @"Core:bool:implies:12", align 8
  call void @free_candy_value(ptr %2590)
  %2591 = load ptr, ptr @"Core:bool:implies:15", align 8
  call void @free_candy_value(ptr %2591)
  %2592 = load ptr, ptr @"Core:bool:implies:2", align 8
  call void @free_candy_value(ptr %2592)
  %2593 = load ptr, ptr @"Core:bool:implies:4", align 8
  call void @free_candy_value(ptr %2593)
  %2594 = load ptr, ptr @"Core:bool:implies:7", align 8
  call void @free_candy_value(ptr %2594)
  %2595 = load ptr, ptr @"Core:bool:implies:9", align 8
  call void @free_candy_value(ptr %2595)
  %2596 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %2596)
  %2597 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %2597)
  %2598 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %2598)
  %2599 = load ptr, ptr @"Core:bool:lazyAnd:18", align 8
  call void @free_candy_value(ptr %2599)
  %2600 = load ptr, ptr @"Core:bool:lazyAnd:18:13", align 8
  call void @free_candy_value(ptr %2600)
  %2601 = load ptr, ptr @"Core:bool:lazyAnd:18:21", align 8
  call void @free_candy_value(ptr %2601)
  %2602 = load ptr, ptr @"Core:bool:lazyAnd:18:9", align 8
  call void @free_candy_value(ptr %2602)
  %2603 = load ptr, ptr @"Core:bool:lazyAnd:2", align 8
  call void @free_candy_value(ptr %2603)
  %2604 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %2604)
  %2605 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %2605)
  %2606 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %2606)
  %2607 = load ptr, ptr @"Core:bool:lazyOr:18", align 8
  call void @free_candy_value(ptr %2607)
  %2608 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  call void @free_candy_value(ptr %2608)
  %2609 = load ptr, ptr @"Core:bool:lazyOr:18:14", align 8
  call void @free_candy_value(ptr %2609)
  %2610 = load ptr, ptr @"Core:bool:lazyOr:18:22", align 8
  call void @free_candy_value(ptr %2610)
  %2611 = load ptr, ptr @"Core:bool:lazyOr:2", align 8
  call void @free_candy_value(ptr %2611)
  %2612 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %2612)
  %2613 = load ptr, ptr @"Core:bool:not:2", align 8
  call void @free_candy_value(ptr %2613)
  %2614 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %2614)
  %2615 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %2615)
  %2616 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %2616)
  %2617 = load ptr, ptr @"Core:bool:or:2", align 8
  call void @free_candy_value(ptr %2617)
  %2618 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %2618)
  %2619 = load ptr, ptr @"Core:bool:or:7", align 8
  call void @free_candy_value(ptr %2619)
  %2620 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %2620)
  %2621 = load ptr, ptr @"Core:check:check:1", align 8
  call void @free_candy_value(ptr %2621)
  %2622 = load ptr, ptr @"Core:check:check:14", align 8
  call void @free_candy_value(ptr %2622)
  %2623 = load ptr, ptr @"Core:check:check:5", align 8
  call void @free_candy_value(ptr %2623)
  %2624 = load ptr, ptr @"Core:check:checkEquals:12", align 8
  call void @free_candy_value(ptr %2624)
  %2625 = load ptr, ptr @"Core:check:checkEquals:13", align 8
  call void @free_candy_value(ptr %2625)
  %2626 = load ptr, ptr @"Core:check:checkEquals:15:0", align 8
  call void @free_candy_value(ptr %2626)
  %2627 = load ptr, ptr @"Core:check:checkEquals:16", align 8
  call void @free_candy_value(ptr %2627)
  %2628 = load ptr, ptr @"Core:check:checkEquals:19", align 8
  call void @free_candy_value(ptr %2628)
  %2629 = load ptr, ptr @"Core:check:checkEquals:20", align 8
  call void @free_candy_value(ptr %2629)
  %2630 = load ptr, ptr @"Core:check:checkEquals:22:0", align 8
  call void @free_candy_value(ptr %2630)
  %2631 = load ptr, ptr @"Core:check:checkEquals:23", align 8
  call void @free_candy_value(ptr %2631)
  %2632 = load ptr, ptr @"Core:check:checkEquals:25", align 8
  call void @free_candy_value(ptr %2632)
  %2633 = load ptr, ptr @"Core:check:checkEquals:26", align 8
  call void @free_candy_value(ptr %2633)
  %2634 = load ptr, ptr @"Core:check:checkEquals:27", align 8
  call void @free_candy_value(ptr %2634)
  %2635 = load ptr, ptr @"Core:check:checkEquals:28", align 8
  call void @free_candy_value(ptr %2635)
  %2636 = load ptr, ptr @"Core:check:checkEquals:29", align 8
  call void @free_candy_value(ptr %2636)
  %2637 = load ptr, ptr @"Core:controlFlow:if:11", align 8
  call void @free_candy_value(ptr %2637)
  %2638 = load ptr, ptr @"Core:controlFlow:if:21", align 8
  call void @free_candy_value(ptr %2638)
  %2639 = load ptr, ptr @"Core:controlFlow:if:23", align 8
  call void @free_candy_value(ptr %2639)
  %2640 = load ptr, ptr @"Core:controlFlow:if:28", align 8
  call void @free_candy_value(ptr %2640)
  %2641 = load ptr, ptr @"Core:controlFlow:if:9", align 8
  call void @free_candy_value(ptr %2641)
  %2642 = load ptr, ptr @"Core:controlFlow:recursive:17", align 8
  call void @free_candy_value(ptr %2642)
  %2643 = load ptr, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  call void @free_candy_value(ptr %2643)
  %2644 = load ptr, ptr @"Core:controlFlow:recursive:18:5", align 8
  call void @free_candy_value(ptr %2644)
  %2645 = load ptr, ptr @"Core:controlFlow:recursive:23", align 8
  call void @free_candy_value(ptr %2645)
  %2646 = load ptr, ptr @"Core:controlFlow:recursive:9", align 8
  call void @free_candy_value(ptr %2646)
  %2647 = load ptr, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  call void @free_candy_value(ptr %2647)
  %2648 = load ptr, ptr @"Core:fixedDecimal:floorToInt:2", align 8
  call void @free_candy_value(ptr %2648)
  %2649 = load ptr, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  call void @free_candy_value(ptr %2649)
  %2650 = load ptr, ptr @"Core:fixedDecimal:floorToInt:21", align 8
  call void @free_candy_value(ptr %2650)
  %2651 = load ptr, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  call void @free_candy_value(ptr %2651)
  %2652 = load ptr, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  call void @free_candy_value(ptr %2652)
  %2653 = load ptr, ptr @"Core:fixedDecimal:fromInt:15", align 8
  call void @free_candy_value(ptr %2653)
  %2654 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  call void @free_candy_value(ptr %2654)
  %2655 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  call void @free_candy_value(ptr %2655)
  %2656 = load ptr, ptr @"Core:fixedDecimal:is:1", align 8
  call void @free_candy_value(ptr %2656)
  %2657 = load ptr, ptr @"Core:fixedDecimal:is:1:19", align 8
  call void @free_candy_value(ptr %2657)
  %2658 = load ptr, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  call void @free_candy_value(ptr %2658)
  %2659 = load ptr, ptr @"Core:fixedDecimal:is:1:scale", align 8
  call void @free_candy_value(ptr %2659)
  %2660 = load ptr, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  call void @free_candy_value(ptr %2660)
  %2661 = load ptr, ptr @"Core:fixedDecimal:isScale:19", align 8
  call void @free_candy_value(ptr %2661)
  %2662 = load ptr, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  call void @free_candy_value(ptr %2662)
  %2663 = load ptr, ptr @"Core:fixedDecimal:minorUnits:2", align 8
  call void @free_candy_value(ptr %2663)
  %2664 = load ptr, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  call void @free_candy_value(ptr %2664)
  %2665 = load ptr, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  call void @free_candy_value(ptr %2665)
  %2666 = load ptr, ptr @"Core:fixedDecimal:scale:19", align 8
  call void @free_candy_value(ptr %2666)
  %2667 = load ptr, ptr @"Core:fixedDecimal:scale:2", align 8
  call void @free_candy_value(ptr %2667)
  %2668 = load ptr, ptr @"Core:fixedDecimal:scale:21", align 8
  call void @free_candy_value(ptr %2668)
  %2669 = load ptr, ptr @"Core:fixedDecimal:scale:4", align 8
  call void @free_candy_value(ptr %2669)
  %2670 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:15", align 8
  call void @free_candy_value(ptr %2670)
  %2671 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  call void @free_candy_value(ptr %2671)
  %2672 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %2672)
  %2673 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %2673)
  %2674 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %2674)
  %2675 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %2675)
  %2676 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %2676)
  %2677 = load ptr, ptr @"Core:function:run:2", align 8
  call void @free_candy_value(ptr %2677)
  %2678 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %2678)
  %2679 = load ptr, ptr @"Core:int:compareTo:20", align 8
  call void @free_candy_value(ptr %2679)
  %2680 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %2680)
  %2681 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %2681)
  %2682 = load ptr, ptr @"Core:int:isEven:4", align 8
  call void @free_candy_value(ptr %2682)
  %2683 = load ptr, ptr @"Core:int:isEven:8", align 8
  call void @free_candy_value(ptr %2683)
  %2684 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %2684)
  %2685 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %2685)
  %2686 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %2686)
  %2687 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %2687)
  %2688 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %2688)
  %2689 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %2689)
  %2690 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %2690)
  %2691 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %2691)
  %2692 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %2692)
  %2693 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %2693)
  %2694 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %2694)
  %2695 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %2695)
  %2696 = load ptr, ptr @"Core:int:isNonNegative:16", align 8
  call void @free_candy_value(ptr %2696)
  %2697 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %2697)
  %2698 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %2698)
  %2699 = load ptr, ptr @"Core:int:max:14", align 8
  call void @free_candy_value(ptr %2699)
  %2700 = load ptr, ptr @"Core:int:max:17", align 8
  call void @free_candy_value(ptr %2700)
  %2701 = load ptr, ptr @"Core:int:max:4", align 8
  call void @free_candy_value(ptr %2701)
  %2702 = load ptr, ptr @"Core:int:max:9", align 8
  call void @free_candy_value(ptr %2702)
  %2703 = load ptr, ptr @"Core:int:negate:4", align 8
  call void @free_candy_value(ptr %2703)
  %2704 = load ptr, ptr @"Core:int:negate:8", align 8
  call void @free_candy_value(ptr %2704)
  %2705 = load ptr, ptr @"Core:int:pow:12", align 8
  call void @free_candy_value(ptr %2705)
  %2706 = load ptr, ptr @"Core:int:pow:14", align 8
  call void @free_candy_value(ptr %2706)
  %2707 = load ptr, ptr @"Core:int:pow:21:1", align 8
  call void @free_candy_value(ptr %2707)
  %2708 = load ptr, ptr @"Core:int:pow:21:4", align 8
  call void @free_candy_value(ptr %2708)
  %2709 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  call void @free_candy_value(ptr %2709)
  %2710 = load ptr, ptr @"Core:int:pow:21:4:5:10", align 8
  call void @free_candy_value(ptr %2710)
  %2711 = load ptr, ptr @"Core:int:pow:21:4:5:12", align 8
  call void @free_candy_value(ptr %2711)
  %2712 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  call void @free_candy_value(ptr %2712)
  %2713 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  call void @free_candy_value(ptr %2713)
  %2714 = load ptr, ptr @"Core:int:pow:21:4:6:15", align 8
  call void @free_candy_value(ptr %2714)
  %2715 = load ptr, ptr @"Core:int:pow:21:4:6:17", align 8
  call void @free_candy_value(ptr %2715)
  %2716 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  call void @free_candy_value(ptr %2716)
  %2717 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  call void @free_candy_value(ptr %2717)
  %2718 = load ptr, ptr @"Core:int:pow:21:4:7", align 8
  call void @free_candy_value(ptr %2718)
  %2719 = load ptr, ptr @"Core:int:pow:21:base", align 8
  call void @free_candy_value(ptr %2719)
  %2720 = load ptr, ptr @"Core:int:pow:21:exponent", align 8
  call void @free_candy_value(ptr %2720)
  %2721 = load ptr, ptr @"Core:int:pow:22", align 8
  call void @free_candy_value(ptr %2721)
  %2722 = load ptr, ptr @"Core:int:pow:4", align 8
  call void @free_candy_value(ptr %2722)
  %2723 = load ptr, ptr @"Core:int:pow:9", align 8
  call void @free_candy_value(ptr %2723)
  %2724 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  call void @free_candy_value(ptr %2724)
  %2725 = load ptr, ptr @"Core:text:removePrefix:15:4", align 8
  call void @free_candy_value(ptr %2725)
  %2726 = load ptr, ptr @"Core:text:removePrefix:15:7", align 8
  call void @free_candy_value(ptr %2726)
  %2727 = load ptr, ptr @"Core:text:removePrefix:15:8", align 8
  call void @free_candy_value(ptr %2727)
  %2728 = load ptr, ptr @"Core:text:removePrefix:17", align 8
  call void @free_candy_value(ptr %2728)
  %2729 = load ptr, ptr @"Core:text:removePrefix:4", align 8
  call void @free_candy_value(ptr %2729)
  %2730 = load ptr, ptr @"Core:text:removePrefix:9", align 8
  call void @free_candy_value(ptr %2730)
  %2731 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %2731)
  %2732 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %2732)
  %2733 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %2733)
  %2734 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %2734)
  %2735 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %2735)
  %2736 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %2736)
  %2737 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %2737)
  %2738 = load ptr, ptr @fun_candy_builtin_int_divide_truncating, align 8
  call void @free_candy_value(ptr %2738)
  %2739 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %2739)
  %2740 = load ptr, ptr @fun_candy_builtin_int_remainder, align 8
  call void @free_candy_value(ptr %2740)
  %2741 = load ptr, ptr @fun_candy_builtin_int_shift_right, align 8
  call void @free_candy_value(ptr %2741)
  %2742 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %2742)
  %2743 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %2743)
  %2744 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %2744)
  %2745 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %2745)
  %2746 = load ptr, ptr @fun_candy_builtin_print, align 8
  call void @free_candy_value(ptr %2746)
  %2747 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %2747)
  %2748 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %2748)
  %2749 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %2749)
  %2750 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %2750)
  %2751 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %2751)
  %2752 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %2752)
  %2753 = load ptr, ptr @fun_candy_builtin_text_get_range, align 8
  call void @free_candy_value(ptr %2753)
  %2754 = load ptr, ptr @fun_candy_builtin_text_length, align 8
  call void @free_candy_value(ptr %2754)
  %2755 = load ptr, ptr @fun_candy_builtin_text_starts_with, align 8
  call void @free_candy_value(ptr %2755)
  %2756 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %2756)
  %2757 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %2757)
  %2758 = load ptr, ptr @tag_Base, align 8
  call void @free_candy_value(ptr %2758)
  %2759 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %2759)
  %2760 = load ptr, ptr @tag_Exponent, align 8
  call void @free_candy_value(ptr %2760)
  %2761 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %2761)
  %2762 = load ptr, ptr @tag_FixedDecimal, align 8
  call void @free_candy_value(ptr %2762)
  %2763 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %2763)
  %2764 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %2764)
  %2765 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %2765)
  %2766 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %2766)
  %2767 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %2767)
  %2768 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %2768)
  %2769 = load ptr, ptr @tag_MinorUnits, align 8
  call void @free_candy_value(ptr %2769)
  %2770 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %2770)
  %2771 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %2771)
  %2772 = load ptr, ptr @tag_Scale, align 8
  call void @free_candy_value(ptr %2772)
  %2773 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %2773)
  %2774 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %2774)
  %2775 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %2775)
  %2776 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %2776)
  %2777 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %2777)
  %2778 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %2778)
  %2779 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %2779)
  %2780 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %2780)
  %2781 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %2781)
  %2782 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %2782)
  %2783 = load ptr, ptr @num_10, align 8
  call void @free_candy_value(ptr %2783)
  %2784 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  call void @free_candy_value(ptr %2784)
  %2785 = load ptr, ptr @"text_ to be ", align 8
  call void @free_candy_value(ptr %2785)
  %2786 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %2786)
  %2787 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  call void @free_candy_value(ptr %2787)
  %2788 = load ptr, ptr @"text_A check failed.", align 8
  call void @free_candy_value(ptr %2788)
  %2789 = load ptr, ptr @"text_A check failed: Expected ", align 8
  call void @free_candy_value(ptr %2789)
  %2790 = load ptr, ptr @"text_Expected Equal, got ", align 8
  call void @free_candy_value(ptr %2790)
  %2791 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %2791)
  %2792 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  call void @free_candy_value(ptr %2792)
  %2793 = load ptr, ptr @"text_Expected Greater, got ", align 8
  call void @free_candy_value(ptr %2793)
  %2794 = load ptr, ptr @"text_Expected Less, got ", align 8
  call void @free_candy_value(ptr %2794)
  %2795 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %2795)
  %2796 = load ptr, ptr @"text_Expected `0`, got `", align 8
  call void @free_candy_value(ptr %2796)
  %2797 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %2797)
  %2798 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %2798)
  %2799 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %2799)
  %2800 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %2800)
  %2801 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %2801)
  %2802 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  call void @free_candy_value(ptr %2802)
  %2803 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  call void @free_candy_value(ptr %2803)
  %2804 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  call void @free_candy_value(ptr %2804)
  %2805 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  call void @free_candy_value(ptr %2805)
  %2806 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  call void @free_candy_value(ptr %2806)
  %2807 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %2807)
  %2808 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %2808)
  %2809 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %2809)
  %2810 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  call void @free_candy_value(ptr %2810)
  %2811 = load ptr, ptr @"text_You can't divide by zero.", align 8
  call void @free_candy_value(ptr %2811)
  %2812 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %2812)
  %2813 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @free_candy_value(ptr %2813)
  %2814 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2814)
  %2815 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2815)
  %2816 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2816)
  %2817 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2817)
  %2818 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2818)
  %2819 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %2819)
  %2820 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %2820)
  %2821 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %2821)
  %2822 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2822)
  %2823 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2823)
  %2824 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2824)
  %2825 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2825)
  %2826 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %2826)
  %2827 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %2827)
  %2828 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2828)
  %2829 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2829)
  %2830 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2830)
  %2831 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2831)
  %2832 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2832)
  %2833 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %2833)
  %2834 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  call void @free_candy_value(ptr %2834)
  %2835 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %2835)
  %2836 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %2836)
  %2837 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %2837)
  %2838 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2838)
  %2839 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2839)
  %2840 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  call void @free_candy_value(ptr %2840)
  %2841 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %2841)
  %2842 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %2842)
  %2843 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  call void @free_candy_value(ptr %2843)
  %2844 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %2844)
  %2845 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  call void @free_candy_value(ptr %2845)
  %2846 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  call void @free_candy_value(ptr %2846)
  %2847 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %2847)
  %2848 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %2848)
  %2849 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %2849)
  %2850 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %2850)
  %2851 = load ptr, ptr @"text_`isConditionBool` was not satisfied", align 8
  call void @free_candy_value(ptr %2851)
  %2852 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %2852)
  %2853 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  call void @free_candy_value(ptr %2853)
  %2854 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %2854)
  %2855 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2855)
  %2856 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2856)
  %2857 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %2857)
  %2858 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %2858)
  %2859 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %2859)
  %2860 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2860)
  %2861 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %2861)
  %2862 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %2862)
  %2863 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2863)
  %2864 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %2864)
  %2865 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %2865)
  %2866 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %2866)
  %2867 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %2867)
  %2868 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %2868)
  %2869 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %2869)
  %2870 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %2870)
  %2871 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %2871)
  %2872 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %2872)
  %2873 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %2873)
  %2874 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %2874)
  %2875 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %2875)
  %2876 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %2876)
  %2877 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %2877)
  %2878 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %2878)
  %2879 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  call void @free_candy_value(ptr %2879)
  %2880 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %2880)
  %2881 = load ptr, ptr @fun_Builtins__not, align 8
  call void @free_candy_value(ptr %2881)
  %2882 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  call void @free_candy_value(ptr %2882)
  %2883 = load ptr, ptr @fun_Builtins__not_1_equals_then.2, align 8
  call void @free_candy_value(ptr %2883)
  %2884 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  call void @free_candy_value(ptr %2884)
  %2885 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %2885)
  %2886 = load ptr, ptr @fun_Builtins__not_1_equals_else.4, align 8
  call void @free_candy_value(ptr %2886)
  %2887 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %2887)
  %2888 = load ptr, ptr @fun_Builtins__not_1_equals_else.6, align 8
  call void @free_candy_value(ptr %2888)
  %2889 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %2889)
  %2890 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2890)
  %2891 = load ptr, ptr @fun_Builtins__not_1_equals_then.8, align 8
  call void @free_candy_value(ptr %2891)
  %2892 = load ptr, ptr @fun_Builtins__not_1_equals_then.10, align 8
  call void @free_candy_value(ptr %2892)
  %2893 = load ptr, ptr @fun_Builtins__not_1_equals_else.12, align 8
  call void @free_candy_value(ptr %2893)
  %2894 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %2894)
  %2895 = load ptr, ptr @fun_Builtins__not_1_equals_else.14, align 8
  call void @free_candy_value(ptr %2895)
  %2896 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %2896)
  %2897 = load ptr, ptr @fun_Builtins__not_1_equals_else.16, align 8
  call void @free_candy_value(ptr %2897)
  %2898 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %2898)
  %2899 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2899)
  %2900 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %2900)
  %2901 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  call void @free_candy_value(ptr %2901)
  %2902 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.18, align 8
  call void @free_candy_value(ptr %2902)
  %2903 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %2903)
  %2904 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %2904)
  %2905 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.20, align 8
  call void @free_candy_value(ptr %2905)
  %2906 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %2906)
  %2907 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %2907)
  %2908 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %2908)
  %2909 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.22, align 8
  call void @free_candy_value(ptr %2909)
  %2910 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.24, align 8
  call void @free_candy_value(ptr %2910)
  %2911 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.26, align 8
  call void @free_candy_value(ptr %2911)
  %2912 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %2912)
  %2913 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.28, align 8
  call void @free_candy_value(ptr %2913)
  %2914 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %2914)
  %2915 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2915)
  %2916 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.30, align 8
  call void @free_candy_value(ptr %2916)
  %2917 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.32, align 8
  call void @free_candy_value(ptr %2917)
  %2918 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.34, align 8
  call void @free_candy_value(ptr %2918)
  %2919 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %2919)
  %2920 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.36, align 8
  call void @free_candy_value(ptr %2920)
  %2921 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %2921)
  %2922 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2922)
  %2923 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %2923)
  %2924 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  call void @free_candy_value(ptr %2924)
  %2925 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.38, align 8
  call void @free_candy_value(ptr %2925)
  %2926 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %2926)
  %2927 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %2927)
  %2928 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.40, align 8
  call void @free_candy_value(ptr %2928)
  %2929 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %2929)
  %2930 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %2930)
  %2931 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %2931)
  %2932 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.42, align 8
  call void @free_candy_value(ptr %2932)
  %2933 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.44, align 8
  call void @free_candy_value(ptr %2933)
  %2934 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.46, align 8
  call void @free_candy_value(ptr %2934)
  %2935 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %2935)
  %2936 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.48, align 8
  call void @free_candy_value(ptr %2936)
  %2937 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %2937)
  %2938 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2938)
  %2939 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.50, align 8
  call void @free_candy_value(ptr %2939)
  %2940 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.52, align 8
  call void @free_candy_value(ptr %2940)
  %2941 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.54, align 8
  call void @free_candy_value(ptr %2941)
  %2942 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %2942)
  %2943 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.56, align 8
  call void @free_candy_value(ptr %2943)
  %2944 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %2944)
  %2945 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %2945)
  %2946 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %2946)
  %2947 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %2947)
  %2948 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.58, align 8
  call void @free_candy_value(ptr %2948)
  %2949 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %2949)
  %2950 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %2950)
  %2951 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.60, align 8
  call void @free_candy_value(ptr %2951)
  %2952 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %2952)
  %2953 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.62, align 8
  call void @free_candy_value(ptr %2953)
  %2954 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %2954)
  %2955 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2955)
  %2956 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2956)
  %2957 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.64, align 8
  call void @free_candy_value(ptr %2957)
  %2958 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.66, align 8
  call void @free_candy_value(ptr %2958)
  %2959 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.68, align 8
  call void @free_candy_value(ptr %2959)
  %2960 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %2960)
  %2961 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.70, align 8
  call void @free_candy_value(ptr %2961)
  %2962 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %2962)
  %2963 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.72, align 8
  call void @free_candy_value(ptr %2963)
  %2964 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %2964)
  %2965 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2965)
  %2966 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  call void @free_candy_value(ptr %2966)
  %2967 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  call void @free_candy_value(ptr %2967)
  %2968 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  call void @free_candy_value(ptr %2968)
  %2969 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  call void @free_candy_value(ptr %2969)
  %2970 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  call void @free_candy_value(ptr %2970)
  %2971 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %2971)
  %2972 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %2972)
  %2973 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  call void @free_candy_value(ptr %2973)
  %2974 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  call void @free_candy_value(ptr %2974)
  %2975 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %2975)
  %2976 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %2976)
  %2977 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %2977)
  %2978 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %2978)
  %2979 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  call void @free_candy_value(ptr %2979)
  %2980 = load ptr, ptr @fun_Core_bool_is_1_equals_then.74, align 8
  call void @free_candy_value(ptr %2980)
  %2981 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %2981)
  %2982 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %2982)
  %2983 = load ptr, ptr @fun_Core_bool_is_1_equals_else.76, align 8
  call void @free_candy_value(ptr %2983)
  %2984 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %2984)
  %2985 = load ptr, ptr @fun_Core_bool_is_1_equals_else.78, align 8
  call void @free_candy_value(ptr %2985)
  %2986 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %2986)
  %2987 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %2987)
  %2988 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %2988)
  %2989 = load ptr, ptr @fun_Core_bool_is_1_equals_then.80, align 8
  call void @free_candy_value(ptr %2989)
  %2990 = load ptr, ptr @fun_Core_bool_is_1_equals_then.82, align 8
  call void @free_candy_value(ptr %2990)
  %2991 = load ptr, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  call void @free_candy_value(ptr %2991)
  %2992 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %2992)
  %2993 = load ptr, ptr @fun_Core_bool_is_1_equals_else.86, align 8
  call void @free_candy_value(ptr %2993)
  %2994 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %2994)
  %2995 = load ptr, ptr @fun_Core_bool_is_1_equals_else.88, align 8
  call void @free_candy_value(ptr %2995)
  %2996 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %2996)
  %2997 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %2997)
  %2998 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %2998)
  %2999 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  call void @free_candy_value(ptr %2999)
  %3000 = load ptr, ptr @fun_Core_bool_not_6_equals_then.90, align 8
  call void @free_candy_value(ptr %3000)
  %3001 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %3001)
  %3002 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %3002)
  %3003 = load ptr, ptr @fun_Core_bool_not_6_equals_else.92, align 8
  call void @free_candy_value(ptr %3003)
  %3004 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %3004)
  %3005 = load ptr, ptr @fun_Core_bool_not_6_equals_else.94, align 8
  call void @free_candy_value(ptr %3005)
  %3006 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %3006)
  %3007 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3007)
  %3008 = load ptr, ptr @fun_Core_bool_not_6_equals_then.96, align 8
  call void @free_candy_value(ptr %3008)
  %3009 = load ptr, ptr @fun_Core_bool_not_6_equals_then.98, align 8
  call void @free_candy_value(ptr %3009)
  %3010 = load ptr, ptr @fun_Core_bool_not_6_equals_else.100, align 8
  call void @free_candy_value(ptr %3010)
  %3011 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %3011)
  %3012 = load ptr, ptr @fun_Core_bool_not_6_equals_else.102, align 8
  call void @free_candy_value(ptr %3012)
  %3013 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %3013)
  %3014 = load ptr, ptr @fun_Core_bool_not_6_equals_else.104, align 8
  call void @free_candy_value(ptr %3014)
  %3015 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %3015)
  %3016 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3016)
  %3017 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %3017)
  %3018 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  call void @free_candy_value(ptr %3018)
  %3019 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.106, align 8
  call void @free_candy_value(ptr %3019)
  %3020 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  call void @free_candy_value(ptr %3020)
  %3021 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %3021)
  %3022 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.108, align 8
  call void @free_candy_value(ptr %3022)
  %3023 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %3023)
  %3024 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.110, align 8
  call void @free_candy_value(ptr %3024)
  %3025 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %3025)
  %3026 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  call void @free_candy_value(ptr %3026)
  %3027 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3027)
  %3028 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.112, align 8
  call void @free_candy_value(ptr %3028)
  %3029 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.114, align 8
  call void @free_candy_value(ptr %3029)
  %3030 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.116, align 8
  call void @free_candy_value(ptr %3030)
  %3031 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %3031)
  %3032 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.118, align 8
  call void @free_candy_value(ptr %3032)
  %3033 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %3033)
  %3034 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.120, align 8
  call void @free_candy_value(ptr %3034)
  %3035 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %3035)
  %3036 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3036)
  %3037 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %3037)
  %3038 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  call void @free_candy_value(ptr %3038)
  %3039 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.122, align 8
  call void @free_candy_value(ptr %3039)
  %3040 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  call void @free_candy_value(ptr %3040)
  %3041 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %3041)
  %3042 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.124, align 8
  call void @free_candy_value(ptr %3042)
  %3043 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %3043)
  %3044 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.126, align 8
  call void @free_candy_value(ptr %3044)
  %3045 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %3045)
  %3046 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3046)
  %3047 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.128, align 8
  call void @free_candy_value(ptr %3047)
  %3048 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.130, align 8
  call void @free_candy_value(ptr %3048)
  %3049 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.132, align 8
  call void @free_candy_value(ptr %3049)
  %3050 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %3050)
  %3051 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.134, align 8
  call void @free_candy_value(ptr %3051)
  %3052 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %3052)
  %3053 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.136, align 8
  call void @free_candy_value(ptr %3053)
  %3054 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %3054)
  %3055 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  call void @free_candy_value(ptr %3055)
  %3056 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3056)
  %3057 = load ptr, ptr @fun_Core_bool_implies, align 8
  call void @free_candy_value(ptr %3057)
  %3058 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %3058)
  %3059 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.138", align 8
  call void @free_candy_value(ptr %3059)
  %3060 = load ptr, ptr @fun_Core_check_check, align 8
  call void @free_candy_value(ptr %3060)
  %3061 = load ptr, ptr @fun_Core_check_check_1_equals_then, align 8
  call void @free_candy_value(ptr %3061)
  %3062 = load ptr, ptr @fun_Core_check_check_1_equals_then.140, align 8
  call void @free_candy_value(ptr %3062)
  %3063 = load ptr, ptr @fun_Core_check_check_1_equals_else, align 8
  call void @free_candy_value(ptr %3063)
  %3064 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %3064)
  %3065 = load ptr, ptr @fun_Core_check_check_1_equals_else.142, align 8
  call void @free_candy_value(ptr %3065)
  %3066 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %3066)
  %3067 = load ptr, ptr @fun_Core_check_check_1_equals_else.144, align 8
  call void @free_candy_value(ptr %3067)
  %3068 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %3068)
  %3069 = load ptr, ptr @fun_Core_check_check_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3069)
  %3070 = load ptr, ptr @fun_Core_check_check_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3070)
  %3071 = load ptr, ptr @fun_Core_check_check_1_equals_then.146, align 8
  call void @free_candy_value(ptr %3071)
  %3072 = load ptr, ptr @fun_Core_check_check_1_equals_then.148, align 8
  call void @free_candy_value(ptr %3072)
  %3073 = load ptr, ptr @fun_Core_check_check_1_equals_else.150, align 8
  call void @free_candy_value(ptr %3073)
  %3074 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %3074)
  %3075 = load ptr, ptr @fun_Core_check_check_1_equals_else.152, align 8
  call void @free_candy_value(ptr %3075)
  %3076 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %3076)
  %3077 = load ptr, ptr @fun_Core_check_check_1_equals_else.154, align 8
  call void @free_candy_value(ptr %3077)
  %3078 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %3078)
  %3079 = load ptr, ptr @fun_Core_check_check_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3079)
  %3080 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.156", align 8
  call void @free_candy_value(ptr %3080)
  %3081 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.158", align 8
  call void @free_candy_value(ptr %3081)
  %3082 = load ptr, ptr @fun_Core_check_checkEquals, align 8
  call void @free_candy_value(ptr %3082)
  %3083 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  call void @free_candy_value(ptr %3083)
  %3084 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  call void @free_candy_value(ptr %3084)
  %3085 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  call void @free_candy_value(ptr %3085)
  %3086 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  call void @free_candy_value(ptr %3086)
  %3087 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %3087)
  %3088 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %3088)
  %3089 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %3089)
  %3090 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %3090)
  %3091 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %3091)
  %3092 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  call void @free_candy_value(ptr %3092)
  %3093 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %3093)
  %3094 = load ptr, ptr @fun_Core_int_isEven, align 8
  call void @free_candy_value(ptr %3094)
  %3095 = load ptr, ptr @fun_Core_int_max, align 8
  call void @free_candy_value(ptr %3095)
  %3096 = load ptr, ptr @fun_Core_int_max_15, align 8
  call void @free_candy_value(ptr %3096)
  %3097 = load ptr, ptr @fun_Core_int_max_16, align 8
  call void @free_candy_value(ptr %3097)
  %3098 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  call void @free_candy_value(ptr %3098)
  %3099 = load ptr, ptr @fun_Core_int_pow_21, align 8
  call void @free_candy_value(ptr %3099)
  %3100 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  call void @free_candy_value(ptr %3100)
  %3101 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  call void @free_candy_value(ptr %3101)
  %3102 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %3102)
  %3103 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  call void @free_candy_value(ptr %3103)
  %3104 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %3104)
  %3105 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3105)
  %3106 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.160, align 8
  call void @free_candy_value(ptr %3106)
  %3107 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %3107)
  %3108 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.162, align 8
  call void @free_candy_value(ptr %3108)
  %3109 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %3109)
  %3110 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.164, align 8
  call void @free_candy_value(ptr %3110)
  %3111 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %3111)
  %3112 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3112)
  %3113 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.166, align 8
  call void @free_candy_value(ptr %3113)
  %3114 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  call void @free_candy_value(ptr %3114)
  %3115 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %3115)
  %3116 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.168, align 8
  call void @free_candy_value(ptr %3116)
  %3117 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  call void @free_candy_value(ptr %3117)
  %3118 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %3118)
  %3119 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3119)
  %3120 = load ptr, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  call void @free_candy_value(ptr %3120)
  %3121 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  call void @free_candy_value(ptr %3121)
  %3122 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  call void @free_candy_value(ptr %3122)
  %3123 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  call void @free_candy_value(ptr %3123)
  %3124 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  call void @free_candy_value(ptr %3124)
  %3125 = load ptr, ptr @fun_Core_int_pow, align 8
  call void @free_candy_value(ptr %3125)
  %3126 = load ptr, ptr @fun_Core_text_removePrefix, align 8
  call void @free_candy_value(ptr %3126)
  %3127 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  call void @free_candy_value(ptr %3127)
  %3128 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  call void @free_candy_value(ptr %3128)
  %3129 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %3129)
  %3130 = load ptr, ptr @fun_Core_fixedDecimal_is, align 8
  call void @free_candy_value(ptr %3130)
  %3131 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  call void @free_candy_value(ptr %3131)
  %3132 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.170, align 8
  call void @free_candy_value(ptr %3132)
  %3133 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.172, align 8
  call void @free_candy_value(ptr %3133)
  %3134 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.174, align 8
  call void @free_candy_value(ptr %3134)
  %3135 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  call void @free_candy_value(ptr %3135)
  %3136 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %3136)
  %3137 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  call void @free_candy_value(ptr %3137)
  %3138 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %3138)
  %3139 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3139)
  %3140 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.176, align 8
  call void @free_candy_value(ptr %3140)
  %3141 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %3141)
  %3142 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.178, align 8
  call void @free_candy_value(ptr %3142)
  %3143 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %3143)
  %3144 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.180, align 8
  call void @free_candy_value(ptr %3144)
  %3145 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %3145)
  %3146 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3146)
  %3147 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.182, align 8
  call void @free_candy_value(ptr %3147)
  %3148 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  call void @free_candy_value(ptr %3148)
  %3149 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %3149)
  %3150 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.184, align 8
  call void @free_candy_value(ptr %3150)
  %3151 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.186, align 8
  call void @free_candy_value(ptr %3151)
  %3152 = load ptr, ptr @69, align 8
  call void @free_candy_value(ptr %3152)
  %3153 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.188, align 8
  call void @free_candy_value(ptr %3153)
  %3154 = load ptr, ptr @70, align 8
  call void @free_candy_value(ptr %3154)
  %3155 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %3155)
  %3156 = load ptr, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  call void @free_candy_value(ptr %3156)
  %3157 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  call void @free_candy_value(ptr %3157)
  %3158 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3158)
  %3159 = load ptr, ptr @fun_Core_fixedDecimal_minorUnits, align 8
  call void @free_candy_value(ptr %3159)
  %3160 = load ptr, ptr @fun_Core_fixedDecimal_scale, align 8
  call void @free_candy_value(ptr %3160)
  %3161 = load ptr, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  call void @free_candy_value(ptr %3161)
  %3162 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.190, align 8
  call void @free_candy_value(ptr %3162)
  %3163 = load ptr, ptr @tag_FixedDecimal.191, align 8
  call void @free_candy_value(ptr %3163)
  %3164 = load ptr, ptr @fun_Core_fixedDecimal_floorToInt, align 8
  call void @free_candy_value(ptr %3164)
  %3165 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.193, align 8
  call void @free_candy_value(ptr %3165)
  %3166 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:2", align 8
  call void @free_candy_value(ptr %3166)
  %3167 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  call void @free_candy_value(ptr %3167)
  %3168 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  call void @free_candy_value(ptr %3168)
  %3169 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  call void @free_candy_value(ptr %3169)
  %3170 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  call void @free_candy_value(ptr %3170)
  %3171 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23", align 8
  call void @free_candy_value(ptr %3171)
  %3172 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:2", align 8
  call void @free_candy_value(ptr %3172)
  %3173 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:14", align 8
  call void @free_candy_value(ptr %3173)
  %3174 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  call void @free_candy_value(ptr %3174)
  %3175 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  call void @free_candy_value(ptr %3175)
  %3176 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:26", align 8
  call void @free_candy_value(ptr %3176)
  %3177 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:2", align 8
  call void @free_candy_value(ptr %3177)
  %3178 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:23", align 8
  call void @free_candy_value(ptr %3178)
  %3179 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  call void @free_candy_value(ptr %3179)
  %3180 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  call void @free_candy_value(ptr %3180)
  %3181 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  call void @free_candy_value(ptr %3181)
  %3182 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:26", align 8
  call void @free_candy_value(ptr %3182)
  %3183 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  call void @free_candy_value(ptr %3183)
  %3184 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.195, align 8
  call void @free_candy_value(ptr %3184)
  %3185 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  call void @free_candy_value(ptr %3185)
  %3186 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.197, align 8
  call void @free_candy_value(ptr %3186)
  %3187 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  call void @free_candy_value(ptr %3187)
  %3188 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.199, align 8
  call void @free_candy_value(ptr %3188)
  %3189 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:2", align 8
  call void @free_candy_value(ptr %3189)
  %3190 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  call void @free_candy_value(ptr %3190)
  %3191 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:7", align 8
  call void @free_candy_value(ptr %3191)
  %3192 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  call void @free_candy_value(ptr %3192)
  %3193 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:20", align 8
  call void @free_candy_value(ptr %3193)
  %3194 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:23", align 8
  call void @free_candy_value(ptr %3194)
  %3195 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:24", align 8
  call void @free_candy_value(ptr %3195)
  %3196 = load ptr, ptr @tag_ValueA, align 8
  call void @free_candy_value(ptr %3196)
  %3197 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:30", align 8
  call void @free_candy_value(ptr %3197)
  %3198 = load ptr, ptr @tag_ValueB, align 8
  call void @free_candy_value(ptr %3198)
  %3199 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:35", align 8
  call void @free_candy_value(ptr %3199)
  %3200 = load ptr, ptr @tag_TargetScale, align 8
  call void @free_candy_value(ptr %3200)
  %3201 = load ptr, ptr @fun_Core_fixedDecimal_comparableMinorUnits, align 8
  call void @free_candy_value(ptr %3201)
  %3202 = load ptr, ptr @"Core:fixedDecimal:add:2", align 8
  call void @free_candy_value(ptr %3202)
  %3203 = load ptr, ptr @"text_`is summandA` was not satisfied", align 8
  call void @free_candy_value(ptr %3203)
  %3204 = load ptr, ptr @"Core:fixedDecimal:add:4", align 8
  call void @free_candy_value(ptr %3204)
  %3205 = load ptr, ptr @"Core:fixedDecimal:add:7", align 8
  call void @free_candy_value(ptr %3205)
  %3206 = load ptr, ptr @"text_`is summandB` was not satisfied", align 8
  call void @free_candy_value(ptr %3206)
  %3207 = load ptr, ptr @"Core:fixedDecimal:add:9", align 8
  call void @free_candy_value(ptr %3207)
  %3208 = load ptr, ptr @"Core:fixedDecimal:add:13", align 8
  call void @free_candy_value(ptr %3208)
  %3209 = load ptr, ptr @"Core:fixedDecimal:add:14", align 8
  call void @free_candy_value(ptr %3209)
  %3210 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  call void @free_candy_value(ptr %3210)
  %3211 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  call void @free_candy_value(ptr %3211)
  %3212 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  call void @free_candy_value(ptr %3212)
  %3213 = load ptr, ptr @"Core:fixedDecimal:add:valueA", align 8
  call void @free_candy_value(ptr %3213)
  %3214 = load ptr, ptr @"Core:fixedDecimal:add:valueB", align 8
  call void @free_candy_value(ptr %3214)
  %3215 = load ptr, ptr @"Core:fixedDecimal:add:targetScale", align 8
  call void @free_candy_value(ptr %3215)
  %3216 = load ptr, ptr @"Core:fixedDecimal:add:27", align 8
  call void @free_candy_value(ptr %3216)
  %3217 = load ptr, ptr @"Core:fixedDecimal:add:29", align 8
  call void @free_candy_value(ptr %3217)
  %3218 = load ptr, ptr @fun_Core_fixedDecimal_add, align 8
  call void @free_candy_value(ptr %3218)
  %3219 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_then, align 8
  call void @free_candy_value(ptr %3219)
  %3220 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then, align 8
  call void @free_candy_value(ptr %3220)
  %3221 = load ptr, ptr @71, align 8
  call void @free_candy_value(ptr %3221)
  %3222 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else, align 8
  call void @free_candy_value(ptr %3222)
  %3223 = load ptr, ptr @72, align 8
  call void @free_candy_value(ptr %3223)
  %3224 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then, align 8
  call void @free_candy_value(ptr %3224)
  %3225 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.201, align 8
  call void @free_candy_value(ptr %3225)
  %3226 = load ptr, ptr @73, align 8
  call void @free_candy_value(ptr %3226)
  %3227 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.203, align 8
  call void @free_candy_value(ptr %3227)
  %3228 = load ptr, ptr @74, align 8
  call void @free_candy_value(ptr %3228)
  %3229 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.205, align 8
  call void @free_candy_value(ptr %3229)
  %3230 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.207, align 8
  call void @free_candy_value(ptr %3230)
  %3231 = load ptr, ptr @75, align 8
  call void @free_candy_value(ptr %3231)
  %3232 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.209, align 8
  call void @free_candy_value(ptr %3232)
  %3233 = load ptr, ptr @76, align 8
  call void @free_candy_value(ptr %3233)
  %3234 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.211, align 8
  call void @free_candy_value(ptr %3234)
  %3235 = load ptr, ptr @77, align 8
  call void @free_candy_value(ptr %3235)
  %3236 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else, align 8
  call void @free_candy_value(ptr %3236)
  %3237 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.213, align 8
  call void @free_candy_value(ptr %3237)
  %3238 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.215, align 8
  call void @free_candy_value(ptr %3238)
  %3239 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_else, align 8
  call void @free_candy_value(ptr %3239)
  %3240 = load ptr, ptr @78, align 8
  call void @free_candy_value(ptr %3240)
  %3241 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.217, align 8
  call void @free_candy_value(ptr %3241)
  %3242 = load ptr, ptr @"Core:fixedDecimal:subtract:2", align 8
  call void @free_candy_value(ptr %3242)
  %3243 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  call void @free_candy_value(ptr %3243)
  %3244 = load ptr, ptr @"Core:fixedDecimal:subtract:4", align 8
  call void @free_candy_value(ptr %3244)
  %3245 = load ptr, ptr @"Core:fixedDecimal:subtract:7", align 8
  call void @free_candy_value(ptr %3245)
  %3246 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  call void @free_candy_value(ptr %3246)
  %3247 = load ptr, ptr @"Core:fixedDecimal:subtract:9", align 8
  call void @free_candy_value(ptr %3247)
  %3248 = load ptr, ptr @"Core:fixedDecimal:subtract:13", align 8
  call void @free_candy_value(ptr %3248)
  %3249 = load ptr, ptr @"Core:fixedDecimal:subtract:14", align 8
  call void @free_candy_value(ptr %3249)
  %3250 = load ptr, ptr @"Core:fixedDecimal:subtract:valueA", align 8
  call void @free_candy_value(ptr %3250)
  %3251 = load ptr, ptr @"Core:fixedDecimal:subtract:valueB", align 8
  call void @free_candy_value(ptr %3251)
  %3252 = load ptr, ptr @"Core:fixedDecimal:subtract:targetScale", align 8
  call void @free_candy_value(ptr %3252)
  %3253 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  call void @free_candy_value(ptr %3253)
  %3254 = load ptr, ptr @"Core:fixedDecimal:subtract:29", align 8
  call void @free_candy_value(ptr %3254)
  %3255 = load ptr, ptr @fun_Core_fixedDecimal_subtract, align 8
  call void @free_candy_value(ptr %3255)
  %3256 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  call void @free_candy_value(ptr %3256)
  %3257 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  call void @free_candy_value(ptr %3257)
  %3258 = load ptr, ptr @79, align 8
  call void @free_candy_value(ptr %3258)
  %3259 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  call void @free_candy_value(ptr %3259)
  %3260 = load ptr, ptr @80, align 8
  call void @free_candy_value(ptr %3260)
  %3261 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  call void @free_candy_value(ptr %3261)
  %3262 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.219, align 8
  call void @free_candy_value(ptr %3262)
  %3263 = load ptr, ptr @81, align 8
  call void @free_candy_value(ptr %3263)
  %3264 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.221, align 8
  call void @free_candy_value(ptr %3264)
  %3265 = load ptr, ptr @82, align 8
  call void @free_candy_value(ptr %3265)
  %3266 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.223, align 8
  call void @free_candy_value(ptr %3266)
  %3267 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.225, align 8
  call void @free_candy_value(ptr %3267)
  %3268 = load ptr, ptr @83, align 8
  call void @free_candy_value(ptr %3268)
  %3269 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.227, align 8
  call void @free_candy_value(ptr %3269)
  %3270 = load ptr, ptr @84, align 8
  call void @free_candy_value(ptr %3270)
  %3271 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.229, align 8
  call void @free_candy_value(ptr %3271)
  %3272 = load ptr, ptr @85, align 8
  call void @free_candy_value(ptr %3272)
  %3273 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  call void @free_candy_value(ptr %3273)
  %3274 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.231, align 8
  call void @free_candy_value(ptr %3274)
  %3275 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.233, align 8
  call void @free_candy_value(ptr %3275)
  %3276 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  call void @free_candy_value(ptr %3276)
  %3277 = load ptr, ptr @86, align 8
  call void @free_candy_value(ptr %3277)
  %3278 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.235, align 8
  call void @free_candy_value(ptr %3278)
  %3279 = load ptr, ptr @"Core:fixedDecimal:negate:2", align 8
  call void @free_candy_value(ptr %3279)
  %3280 = load ptr, ptr @"Core:fixedDecimal:negate:4", align 8
  call void @free_candy_value(ptr %3280)
  %3281 = load ptr, ptr @"Core:fixedDecimal:negate:8", align 8
  call void @free_candy_value(ptr %3281)
  %3282 = load ptr, ptr @"Core:fixedDecimal:negate:17", align 8
  call void @free_candy_value(ptr %3282)
  %3283 = load ptr, ptr @"Core:fixedDecimal:negate:20", align 8
  call void @free_candy_value(ptr %3283)
  %3284 = load ptr, ptr @"Core:fixedDecimal:negate:21", align 8
  call void @free_candy_value(ptr %3284)
  %3285 = load ptr, ptr @fun_Core_fixedDecimal_negate, align 8
  call void @free_candy_value(ptr %3285)
  %3286 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  call void @free_candy_value(ptr %3286)
  %3287 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  call void @free_candy_value(ptr %3287)
  %3288 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:2", align 8
  call void @free_candy_value(ptr %3288)
  %3289 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:4", align 8
  call void @free_candy_value(ptr %3289)
  %3290 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:7", align 8
  call void @free_candy_value(ptr %3290)
  %3291 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:9", align 8
  call void @free_candy_value(ptr %3291)
  %3292 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:14", align 8
  call void @free_candy_value(ptr %3292)
  %3293 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:17", align 8
  call void @free_candy_value(ptr %3293)
  %3294 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:29", align 8
  call void @free_candy_value(ptr %3294)
  %3295 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:37", align 8
  call void @free_candy_value(ptr %3295)
  %3296 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:41", align 8
  call void @free_candy_value(ptr %3296)
  %3297 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:42", align 8
  call void @free_candy_value(ptr %3297)
  %3298 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueA", align 8
  call void @free_candy_value(ptr %3298)
  %3299 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:valueB", align 8
  call void @free_candy_value(ptr %3299)
  %3300 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:56", align 8
  call void @free_candy_value(ptr %3300)
  %3301 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:57", align 8
  call void @free_candy_value(ptr %3301)
  %3302 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:67", align 8
  call void @free_candy_value(ptr %3302)
  %3303 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:69", align 8
  call void @free_candy_value(ptr %3303)
  %3304 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale, align 8
  call void @free_candy_value(ptr %3304)
  %3305 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.237, align 8
  call void @free_candy_value(ptr %3305)
  %3306 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, align 8
  call void @free_candy_value(ptr %3306)
  %3307 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, align 8
  call void @free_candy_value(ptr %3307)
  %3308 = load ptr, ptr @87, align 8
  call void @free_candy_value(ptr %3308)
  %3309 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, align 8
  call void @free_candy_value(ptr %3309)
  %3310 = load ptr, ptr @88, align 8
  call void @free_candy_value(ptr %3310)
  %3311 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, align 8
  call void @free_candy_value(ptr %3311)
  %3312 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.239, align 8
  call void @free_candy_value(ptr %3312)
  %3313 = load ptr, ptr @89, align 8
  call void @free_candy_value(ptr %3313)
  %3314 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.241, align 8
  call void @free_candy_value(ptr %3314)
  %3315 = load ptr, ptr @90, align 8
  call void @free_candy_value(ptr %3315)
  %3316 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.243, align 8
  call void @free_candy_value(ptr %3316)
  %3317 = load ptr, ptr @91, align 8
  call void @free_candy_value(ptr %3317)
  %3318 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, align 8
  call void @free_candy_value(ptr %3318)
  %3319 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.245, align 8
  call void @free_candy_value(ptr %3319)
  %3320 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, align 8
  call void @free_candy_value(ptr %3320)
  %3321 = load ptr, ptr @92, align 8
  call void @free_candy_value(ptr %3321)
  %3322 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.247, align 8
  call void @free_candy_value(ptr %3322)
  %3323 = load ptr, ptr @"Core:fixedDecimal:compareTo:2", align 8
  call void @free_candy_value(ptr %3323)
  %3324 = load ptr, ptr @"Core:fixedDecimal:compareTo:4", align 8
  call void @free_candy_value(ptr %3324)
  %3325 = load ptr, ptr @"Core:fixedDecimal:compareTo:7", align 8
  call void @free_candy_value(ptr %3325)
  %3326 = load ptr, ptr @"Core:fixedDecimal:compareTo:9", align 8
  call void @free_candy_value(ptr %3326)
  %3327 = load ptr, ptr @"Core:fixedDecimal:compareTo:13", align 8
  call void @free_candy_value(ptr %3327)
  %3328 = load ptr, ptr @"Core:fixedDecimal:compareTo:14", align 8
  call void @free_candy_value(ptr %3328)
  %3329 = load ptr, ptr @"Core:fixedDecimal:compareTo:valueA#1", align 8
  call void @free_candy_value(ptr %3329)
  %3330 = load ptr, ptr @"Core:fixedDecimal:compareTo:valueB#1", align 8
  call void @free_candy_value(ptr %3330)
  %3331 = load ptr, ptr @"Core:fixedDecimal:compareTo:26", align 8
  call void @free_candy_value(ptr %3331)
  %3332 = load ptr, ptr @"Core:fixedDecimal:compareTo:45", align 8
  call void @free_candy_value(ptr %3332)
  %3333 = load ptr, ptr @"Core:fixedDecimal:compareTo:46", align 8
  call void @free_candy_value(ptr %3333)
  %3334 = load ptr, ptr @fun_Core_fixedDecimal_compareTo, align 8
  call void @free_candy_value(ptr %3334)
  %3335 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_then, align 8
  call void @free_candy_value(ptr %3335)
  %3336 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then, align 8
  call void @free_candy_value(ptr %3336)
  %3337 = load ptr, ptr @93, align 8
  call void @free_candy_value(ptr %3337)
  %3338 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else, align 8
  call void @free_candy_value(ptr %3338)
  %3339 = load ptr, ptr @94, align 8
  call void @free_candy_value(ptr %3339)
  %3340 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then, align 8
  call void @free_candy_value(ptr %3340)
  %3341 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then.249, align 8
  call void @free_candy_value(ptr %3341)
  %3342 = load ptr, ptr @95, align 8
  call void @free_candy_value(ptr %3342)
  %3343 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else.251, align 8
  call void @free_candy_value(ptr %3343)
  %3344 = load ptr, ptr @96, align 8
  call void @free_candy_value(ptr %3344)
  %3345 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then.253, align 8
  call void @free_candy_value(ptr %3345)
  %3346 = load ptr, ptr @97, align 8
  call void @free_candy_value(ptr %3346)
  %3347 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else, align 8
  call void @free_candy_value(ptr %3347)
  %3348 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.255, align 8
  call void @free_candy_value(ptr %3348)
  %3349 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_else, align 8
  call void @free_candy_value(ptr %3349)
  %3350 = load ptr, ptr @98, align 8
  call void @free_candy_value(ptr %3350)
  %3351 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.257, align 8
  call void @free_candy_value(ptr %3351)
  %3352 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:2", align 8
  call void @free_candy_value(ptr %3352)
  %3353 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %3353)
  %3354 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:7", align 8
  call void @free_candy_value(ptr %3354)
  %3355 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %3355)
  %3356 = load ptr, ptr @"Core:fixedDecimal:isGreaterThan:14", align 8
  call void @free_candy_value(ptr %3356)
  %3357 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:2", align 8
  call void @free_candy_value(ptr %3357)
  %3358 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %3358)
  %3359 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:7", align 8
  call void @free_candy_value(ptr %3359)
  %3360 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %3360)
  %3361 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %3361)
  %3362 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %3362)
  %3363 = load ptr, ptr @fun_Core_fixedDecimal_isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %3363)
  %3364 = load ptr, ptr @"Core:fixedDecimal:isNegative:2", align 8
  call void @free_candy_value(ptr %3364)
  %3365 = load ptr, ptr @"Core:fixedDecimal:isNegative:4", align 8
  call void @free_candy_value(ptr %3365)
  %3366 = load ptr, ptr @"Core:fixedDecimal:isNegative:7", align 8
  call void @free_candy_value(ptr %3366)
  %3367 = load ptr, ptr @"Core:fixedDecimal:isNegative:17", align 8
  call void @free_candy_value(ptr %3367)
  %3368 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:2", align 8
  call void @free_candy_value(ptr %3368)
  %3369 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:4", align 8
  call void @free_candy_value(ptr %3369)
  %3370 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  call void @free_candy_value(ptr %3370)
  %3371 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:16", align 8
  call void @free_candy_value(ptr %3371)
  %3372 = load ptr, ptr @"Core:fixedDecimal:absolute:2", align 8
  call void @free_candy_value(ptr %3372)
  %3373 = load ptr, ptr @"Core:fixedDecimal:absolute:4", align 8
  call void @free_candy_value(ptr %3373)
  %3374 = load ptr, ptr @"Core:fixedDecimal:absolute:8", align 8
  call void @free_candy_value(ptr %3374)
  %3375 = load ptr, ptr @"Core:fixedDecimal:absolute:9:2", align 8
  call void @free_candy_value(ptr %3375)
  %3376 = load ptr, ptr @"Core:fixedDecimal:absolute:11", align 8
  call void @free_candy_value(ptr %3376)
  %3377 = load ptr, ptr @fun_Core_fixedDecimal_absolute, align 8
  call void @free_candy_value(ptr %3377)
  %3378 = load ptr, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  call void @free_candy_value(ptr %3378)
  %3379 = load ptr, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  call void @free_candy_value(ptr %3379)
  %3380 = load ptr, ptr @"Core:fixedDecimal:approxEquals:2", align 8
  call void @free_candy_value(ptr %3380)
  %3381 = load ptr, ptr @"Core:fixedDecimal:approxEquals:4", align 8
  call void @free_candy_value(ptr %3381)
  %3382 = load ptr, ptr @"Core:fixedDecimal:approxEquals:7", align 8
  call void @free_candy_value(ptr %3382)
  %3383 = load ptr, ptr @"Core:fixedDecimal:approxEquals:9", align 8
  call void @free_candy_value(ptr %3383)
  %3384 = load ptr, ptr @"Core:fixedDecimal:approxEquals:12", align 8
  call void @free_candy_value(ptr %3384)
  %3385 = load ptr, ptr @"text_`is delta` was not satisfied", align 8
  call void @free_candy_value(ptr %3385)
  %3386 = load ptr, ptr @"Core:fixedDecimal:approxEquals:14", align 8
  call void @free_candy_value(ptr %3386)
  %3387 = load ptr, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  call void @free_candy_value(ptr %3387)
  %3388 = load ptr, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  call void @free_candy_value(ptr %3388)
  %3389 = load ptr, ptr @"Core:fixedDecimal:approxEquals:19", align 8
  call void @free_candy_value(ptr %3389)
  %3390 = load ptr, ptr @"Core:fixedDecimal:approxEquals:23", align 8
  call void @free_candy_value(ptr %3390)
  %3391 = load ptr, ptr @"Core:fixedDecimal:approxEquals:25", align 8
  call void @free_candy_value(ptr %3391)
  %3392 = load ptr, ptr @"Core:fixedDecimal:approxEquals:28", align 8
  call void @free_candy_value(ptr %3392)
  %3393 = load ptr, ptr @fun_Core_fixedDecimal_approxEquals, align 8
  call void @free_candy_value(ptr %3393)
  %3394 = load ptr, ptr @"Core:fixedDecimal:toText:2", align 8
  call void @free_candy_value(ptr %3394)
  %3395 = load ptr, ptr @"Core:fixedDecimal:toText:4", align 8
  call void @free_candy_value(ptr %3395)
  %3396 = load ptr, ptr @"Core:fixedDecimal:toText:7", align 8
  call void @free_candy_value(ptr %3396)
  %3397 = load ptr, ptr @"Core:fixedDecimal:toText:10:2", align 8
  call void @free_candy_value(ptr %3397)
  %3398 = load ptr, ptr @"Core:fixedDecimal:toText:10:4", align 8
  call void @free_candy_value(ptr %3398)
  %3399 = load ptr, ptr @"Core:fixedDecimal:toText:10:8", align 8
  call void @free_candy_value(ptr %3399)
  %3400 = load ptr, ptr @"Core:fixedDecimal:toText:10:18", align 8
  call void @free_candy_value(ptr %3400)
  %3401 = load ptr, ptr @"Core:fixedDecimal:toText:10:30", align 8
  call void @free_candy_value(ptr %3401)
  %3402 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  call void @free_candy_value(ptr %3402)
  %3403 = load ptr, ptr @text_1, align 8
  call void @free_candy_value(ptr %3403)
  %3404 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:28", align 8
  call void @free_candy_value(ptr %3404)
  %3405 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  call void @free_candy_value(ptr %3405)
  %3406 = load ptr, ptr @text_-1, align 8
  call void @free_candy_value(ptr %3406)
  %3407 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:28", align 8
  call void @free_candy_value(ptr %3407)
  %3408 = load ptr, ptr @"Core:fixedDecimal:toText:10:33", align 8
  call void @free_candy_value(ptr %3408)
  %3409 = load ptr, ptr @"Core:fixedDecimal:toText:11", align 8
  call void @free_candy_value(ptr %3409)
  %3410 = load ptr, ptr @"Core:fixedDecimal:toText:20", align 8
  call void @free_candy_value(ptr %3410)
  %3411 = load ptr, ptr @"Core:fixedDecimal:toText:21", align 8
  call void @free_candy_value(ptr %3411)
  %3412 = load ptr, ptr @"Core:fixedDecimal:toText:23:0", align 8
  call void @free_candy_value(ptr %3412)
  %3413 = load ptr, ptr @"Core:fixedDecimal:toText:24", align 8
  call void @free_candy_value(ptr %3413)
  %3414 = load ptr, ptr @"Core:fixedDecimal:toText:27", align 8
  call void @free_candy_value(ptr %3414)
  %3415 = load ptr, ptr @"Core:fixedDecimal:toText:28", align 8
  call void @free_candy_value(ptr %3415)
  %3416 = load ptr, ptr @"Core:fixedDecimal:toText:30:0", align 8
  call void @free_candy_value(ptr %3416)
  %3417 = load ptr, ptr @"Core:fixedDecimal:toText:31", align 8
  call void @free_candy_value(ptr %3417)
  %3418 = load ptr, ptr @"Core:fixedDecimal:toText:32", align 8
  call void @free_candy_value(ptr %3418)
  %3419 = load ptr, ptr @"Core:fixedDecimal:toText:33", align 8
  call void @free_candy_value(ptr %3419)
  %3420 = load ptr, ptr @fun_Core_fixedDecimal_toText, align 8
  call void @free_candy_value(ptr %3420)
  %3421 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  call void @free_candy_value(ptr %3421)
  %3422 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.259, align 8
  call void @free_candy_value(ptr %3422)
  %3423 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  call void @free_candy_value(ptr %3423)
  %3424 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  call void @free_candy_value(ptr %3424)
  %3425 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  call void @free_candy_value(ptr %3425)
  %3426 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  call void @free_candy_value(ptr %3426)
  %3427 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  call void @free_candy_value(ptr %3427)
  %3428 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  call void @free_candy_value(ptr %3428)
  %3429 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %3429)
  %3430 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %3430)
  %3431 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %3431)
  %3432 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %3432)
  %3433 = load ptr, ptr @"Core:int:fitsInRustU32:15", align 8
  call void @free_candy_value(ptr %3433)
  %3434 = load ptr, ptr @"Core:int:fitsInRustU32:4", align 8
  call void @free_candy_value(ptr %3434)
  %3435 = load ptr, ptr @"Core:int:fitsInRustU32:7", align 8
  call void @free_candy_value(ptr %3435)
  %3436 = load ptr, ptr @"Core:int:fitsInRustU32:9", align 8
  call void @free_candy_value(ptr %3436)
  %3437 = load ptr, ptr @"Core:int:isOdd:4", align 8
  call void @free_candy_value(ptr %3437)
  %3438 = load ptr, ptr @"Core:int:isOdd:8", align 8
  call void @free_candy_value(ptr %3438)
  %3439 = load ptr, ptr @"Core:int:isPositive:4", align 8
  call void @free_candy_value(ptr %3439)
  %3440 = load ptr, ptr @"Core:int:isPositive:8", align 8
  call void @free_candy_value(ptr %3440)
  %3441 = load ptr, ptr @num_4294967295, align 8
  call void @free_candy_value(ptr %3441)
  %3442 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  call void @free_candy_value(ptr %3442)
  %3443 = load ptr, ptr @fun_Core_int_isOdd, align 8
  call void @free_candy_value(ptr %3443)
  %3444 = load ptr, ptr @"Core:iterator:109", align 8
  call void @free_candy_value(ptr %3444)
  %3445 = load ptr, ptr @"Core:iterator:all:11", align 8
  call void @free_candy_value(ptr %3445)
  %3446 = load ptr, ptr @"Core:iterator:all:15", align 8
  call void @free_candy_value(ptr %3446)
  %3447 = load ptr, ptr @"Core:iterator:all:18:13", align 8
  call void @free_candy_value(ptr %3447)
  %3448 = load ptr, ptr @"Core:iterator:all:18:15", align 8
  call void @free_candy_value(ptr %3448)
  %3449 = load ptr, ptr @"Core:iterator:all:18:2", align 8
  call void @free_candy_value(ptr %3449)
  %3450 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  call void @free_candy_value(ptr %3450)
  %3451 = load ptr, ptr @"Core:iterator:all:19", align 8
  call void @free_candy_value(ptr %3451)
  %3452 = load ptr, ptr @"Core:iterator:all:9", align 8
  call void @free_candy_value(ptr %3452)
  %3453 = load ptr, ptr @"Core:iterator:any:11", align 8
  call void @free_candy_value(ptr %3453)
  %3454 = load ptr, ptr @"Core:iterator:any:15", align 8
  call void @free_candy_value(ptr %3454)
  %3455 = load ptr, ptr @"Core:iterator:any:18:13", align 8
  call void @free_candy_value(ptr %3455)
  %3456 = load ptr, ptr @"Core:iterator:any:18:15", align 8
  call void @free_candy_value(ptr %3456)
  %3457 = load ptr, ptr @"Core:iterator:any:18:2", align 8
  call void @free_candy_value(ptr %3457)
  %3458 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  call void @free_candy_value(ptr %3458)
  %3459 = load ptr, ptr @"Core:iterator:any:19", align 8
  call void @free_candy_value(ptr %3459)
  %3460 = load ptr, ptr @"Core:iterator:any:9", align 8
  call void @free_candy_value(ptr %3460)
  %3461 = load ptr, ptr @"Core:iterator:chunked:11", align 8
  call void @free_candy_value(ptr %3461)
  %3462 = load ptr, ptr @"Core:iterator:chunked:21", align 8
  call void @free_candy_value(ptr %3462)
  %3463 = load ptr, ptr @"Core:iterator:chunked:23", align 8
  call void @free_candy_value(ptr %3463)
  %3464 = load ptr, ptr @"Core:iterator:chunked:27", align 8
  call void @free_candy_value(ptr %3464)
  %3465 = load ptr, ptr @"Core:iterator:chunked:32", align 8
  call void @free_candy_value(ptr %3465)
  %3466 = load ptr, ptr @"Core:iterator:ensure:11", align 8
  call void @free_candy_value(ptr %3466)
  %3467 = load ptr, ptr @"Core:iterator:ensure:15", align 8
  call void @free_candy_value(ptr %3467)
  %3468 = load ptr, ptr @"Core:iterator:ensure:19:2", align 8
  call void @free_candy_value(ptr %3468)
  %3469 = load ptr, ptr @"Core:iterator:ensure:20", align 8
  call void @free_candy_value(ptr %3469)
  %3470 = load ptr, ptr @"Core:iterator:ensure:9", align 8
  call void @free_candy_value(ptr %3470)
  %3471 = load ptr, ptr @"Core:iterator:foldLeft:14", align 8
  call void @free_candy_value(ptr %3471)
  %3472 = load ptr, ptr @"Core:iterator:foldLeft:16", align 8
  call void @free_candy_value(ptr %3472)
  %3473 = load ptr, ptr @"Core:iterator:foldLeft:23:1", align 8
  call void @free_candy_value(ptr %3473)
  %3474 = load ptr, ptr @"Core:iterator:foldLeft:23:4", align 8
  call void @free_candy_value(ptr %3474)
  %3475 = load ptr, ptr @"Core:iterator:foldLeft:23:5", align 8
  call void @free_candy_value(ptr %3475)
  %3476 = load ptr, ptr @"Core:iterator:foldLeft:23:5:10", align 8
  call void @free_candy_value(ptr %3476)
  %3477 = load ptr, ptr @"Core:iterator:foldLeft:23:5:8", align 8
  call void @free_candy_value(ptr %3477)
  %3478 = load ptr, ptr @"Core:iterator:foldLeft:23:5:item", align 8
  call void @free_candy_value(ptr %3478)
  %3479 = load ptr, ptr @"Core:iterator:foldLeft:23:5:rest", align 8
  call void @free_candy_value(ptr %3479)
  %3480 = load ptr, ptr @"Core:iterator:foldLeft:23:iterator", align 8
  call void @free_candy_value(ptr %3480)
  %3481 = load ptr, ptr @"Core:iterator:foldLeft:23:value", align 8
  call void @free_candy_value(ptr %3481)
  %3482 = load ptr, ptr @"Core:iterator:foldLeft:24", align 8
  call void @free_candy_value(ptr %3482)
  %3483 = load ptr, ptr @"Core:iterator:foldLeft:3", align 8
  call void @free_candy_value(ptr %3483)
  %3484 = load ptr, ptr @"Core:iterator:fromList:11", align 8
  call void @free_candy_value(ptr %3484)
  %3485 = load ptr, ptr @"Core:iterator:fromList:22", align 8
  call void @free_candy_value(ptr %3485)
  %3486 = load ptr, ptr @"Core:iterator:fromList:23:10", align 8
  call void @free_candy_value(ptr %3486)
  %3487 = load ptr, ptr @"Core:iterator:fromList:24", align 8
  call void @free_candy_value(ptr %3487)
  %3488 = load ptr, ptr @"Core:iterator:generate:11", align 8
  call void @free_candy_value(ptr %3488)
  %3489 = load ptr, ptr @"Core:iterator:generate:21", align 8
  call void @free_candy_value(ptr %3489)
  %3490 = load ptr, ptr @"Core:iterator:generate:23", align 8
  call void @free_candy_value(ptr %3490)
  %3491 = load ptr, ptr @"Core:iterator:generate:33", align 8
  call void @free_candy_value(ptr %3491)
  %3492 = load ptr, ptr @"Core:iterator:generate:35", align 8
  call void @free_candy_value(ptr %3492)
  %3493 = load ptr, ptr @"Core:iterator:generate:45", align 8
  call void @free_candy_value(ptr %3493)
  %3494 = load ptr, ptr @"Core:iterator:generate:47", align 8
  call void @free_candy_value(ptr %3494)
  %3495 = load ptr, ptr @"Core:iterator:generate:50:6:16", align 8
  call void @free_candy_value(ptr %3495)
  %3496 = load ptr, ptr @"Core:iterator:generate:50:6:4", align 8
  call void @free_candy_value(ptr %3496)
  %3497 = load ptr, ptr @"Core:iterator:generate:50:7", align 8
  call void @free_candy_value(ptr %3497)
  %3498 = load ptr, ptr @"Core:iterator:generate:51", align 8
  call void @free_candy_value(ptr %3498)
  %3499 = load ptr, ptr @"Core:iterator:generateWithState:11", align 8
  call void @free_candy_value(ptr %3499)
  %3500 = load ptr, ptr @"Core:iterator:generateWithState:14:1:2", align 8
  call void @free_candy_value(ptr %3500)
  %3501 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3", align 8
  call void @free_candy_value(ptr %3501)
  %3502 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:19", align 8
  call void @free_candy_value(ptr %3502)
  %3503 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:20", align 8
  call void @free_candy_value(ptr %3503)
  %3504 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:22:0", align 8
  call void @free_candy_value(ptr %3504)
  %3505 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:23", align 8
  call void @free_candy_value(ptr %3505)
  %3506 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:25", align 8
  call void @free_candy_value(ptr %3506)
  %3507 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:26", align 8
  call void @free_candy_value(ptr %3507)
  %3508 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:27", align 8
  call void @free_candy_value(ptr %3508)
  %3509 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:6", align 8
  call void @free_candy_value(ptr %3509)
  %3510 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:item", align 8
  call void @free_candy_value(ptr %3510)
  %3511 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:state", align 8
  call void @free_candy_value(ptr %3511)
  %3512 = load ptr, ptr @"Core:iterator:generateWithState:15", align 8
  call void @free_candy_value(ptr %3512)
  %3513 = load ptr, ptr @"Core:iterator:generateWithState:9", align 8
  call void @free_candy_value(ptr %3513)
  %3514 = load ptr, ptr @"Core:iterator:isEmpty:3", align 8
  call void @free_candy_value(ptr %3514)
  %3515 = load ptr, ptr @"Core:iterator:isEmpty:7", align 8
  call void @free_candy_value(ptr %3515)
  %3516 = load ptr, ptr @"Core:iterator:joinToText:12:11", align 8
  call void @free_candy_value(ptr %3516)
  %3517 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  call void @free_candy_value(ptr %3517)
  %3518 = load ptr, ptr @"Core:iterator:joinToText:13", align 8
  call void @free_candy_value(ptr %3518)
  %3519 = load ptr, ptr @"Core:iterator:joinToText:3", align 8
  call void @free_candy_value(ptr %3519)
  %3520 = load ptr, ptr @"Core:iterator:length:3", align 8
  call void @free_candy_value(ptr %3520)
  %3521 = load ptr, ptr @"Core:iterator:length:6", align 8
  call void @free_candy_value(ptr %3521)
  %3522 = load ptr, ptr @"Core:iterator:length:8", align 8
  call void @free_candy_value(ptr %3522)
  %3523 = load ptr, ptr @"Core:iterator:map:14", align 8
  call void @free_candy_value(ptr %3523)
  %3524 = load ptr, ptr @"Core:iterator:map:16", align 8
  call void @free_candy_value(ptr %3524)
  %3525 = load ptr, ptr @"Core:iterator:map:19:2", align 8
  call void @free_candy_value(ptr %3525)
  %3526 = load ptr, ptr @"Core:iterator:map:19:3", align 8
  call void @free_candy_value(ptr %3526)
  %3527 = load ptr, ptr @"Core:iterator:map:19:3:5", align 8
  call void @free_candy_value(ptr %3527)
  %3528 = load ptr, ptr @"Core:iterator:map:19:3:item", align 8
  call void @free_candy_value(ptr %3528)
  %3529 = load ptr, ptr @"Core:iterator:map:19:3:rest", align 8
  call void @free_candy_value(ptr %3529)
  %3530 = load ptr, ptr @"Core:iterator:map:20", align 8
  call void @free_candy_value(ptr %3530)
  %3531 = load ptr, ptr @"Core:iterator:map:3", align 8
  call void @free_candy_value(ptr %3531)
  %3532 = load ptr, ptr @"Core:iterator:next:17", align 8
  call void @free_candy_value(ptr %3532)
  %3533 = load ptr, ptr @"Core:iterator:next:3", align 8
  call void @free_candy_value(ptr %3533)
  %3534 = load ptr, ptr @"Core:iterator:next:6", align 8
  call void @free_candy_value(ptr %3534)
  %3535 = load ptr, ptr @"Core:iterator:next:nextFunction", align 8
  call void @free_candy_value(ptr %3535)
  %3536 = load ptr, ptr @"Core:iterator:reduceLeft:11", align 8
  call void @free_candy_value(ptr %3536)
  %3537 = load ptr, ptr @"Core:iterator:reduceLeft:15", align 8
  call void @free_candy_value(ptr %3537)
  %3538 = load ptr, ptr @"Core:iterator:reduceLeft:17", align 8
  call void @free_candy_value(ptr %3538)
  %3539 = load ptr, ptr @"Core:iterator:reduceLeft:18", align 8
  call void @free_candy_value(ptr %3539)
  %3540 = load ptr, ptr @"Core:iterator:reduceLeft:18:14", align 8
  call void @free_candy_value(ptr %3540)
  %3541 = load ptr, ptr @"Core:iterator:reduceLeft:18:item", align 8
  call void @free_candy_value(ptr %3541)
  %3542 = load ptr, ptr @"Core:iterator:reduceLeft:18:rest", align 8
  call void @free_candy_value(ptr %3542)
  %3543 = load ptr, ptr @"Core:iterator:reduceLeft:9", align 8
  call void @free_candy_value(ptr %3543)
  %3544 = load ptr, ptr @"Core:iterator:skip:16", align 8
  call void @free_candy_value(ptr %3544)
  %3545 = load ptr, ptr @"Core:iterator:skip:26", align 8
  call void @free_candy_value(ptr %3545)
  %3546 = load ptr, ptr @"Core:iterator:skip:28", align 8
  call void @free_candy_value(ptr %3546)
  %3547 = load ptr, ptr @"Core:iterator:skip:3", align 8
  call void @free_candy_value(ptr %3547)
  %3548 = load ptr, ptr @"Core:iterator:skip:30:6:1", align 8
  call void @free_candy_value(ptr %3548)
  %3549 = load ptr, ptr @"Core:iterator:skip:30:6:7:2", align 8
  call void @free_candy_value(ptr %3549)
  %3550 = load ptr, ptr @"Core:iterator:skip:30:6:8:2", align 8
  call void @free_candy_value(ptr %3550)
  %3551 = load ptr, ptr @"Core:iterator:skip:30:6:8:3", align 8
  call void @free_candy_value(ptr %3551)
  %3552 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  call void @free_candy_value(ptr %3552)
  %3553 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:17", align 8
  call void @free_candy_value(ptr %3553)
  %3554 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:rest", align 8
  call void @free_candy_value(ptr %3554)
  %3555 = load ptr, ptr @"Core:iterator:skip:30:6:9", align 8
  call void @free_candy_value(ptr %3555)
  %3556 = load ptr, ptr @"Core:iterator:skip:30:6:iterator", align 8
  call void @free_candy_value(ptr %3556)
  %3557 = load ptr, ptr @"Core:iterator:skip:30:6:n", align 8
  call void @free_candy_value(ptr %3557)
  %3558 = load ptr, ptr @"Core:iterator:skip:30:7", align 8
  call void @free_candy_value(ptr %3558)
  %3559 = load ptr, ptr @"Core:iterator:sum:19", align 8
  call void @free_candy_value(ptr %3559)
  %3560 = load ptr, ptr @"Core:iterator:sum:3", align 8
  call void @free_candy_value(ptr %3560)
  %3561 = load ptr, ptr @"Core:iterator:sum:5:17", align 8
  call void @free_candy_value(ptr %3561)
  %3562 = load ptr, ptr @"Core:iterator:sum:6", align 8
  call void @free_candy_value(ptr %3562)
  %3563 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  call void @free_candy_value(ptr %3563)
  %3564 = load ptr, ptr @"Core:iterator:sum:9", align 8
  call void @free_candy_value(ptr %3564)
  %3565 = load ptr, ptr @"Core:iterator:take:11", align 8
  call void @free_candy_value(ptr %3565)
  %3566 = load ptr, ptr @"Core:iterator:take:21", align 8
  call void @free_candy_value(ptr %3566)
  %3567 = load ptr, ptr @"Core:iterator:take:23", align 8
  call void @free_candy_value(ptr %3567)
  %3568 = load ptr, ptr @"Core:iterator:take:27", align 8
  call void @free_candy_value(ptr %3568)
  %3569 = load ptr, ptr @"Core:iterator:take:29", align 8
  call void @free_candy_value(ptr %3569)
  %3570 = load ptr, ptr @"Core:iterator:take:31:1", align 8
  call void @free_candy_value(ptr %3570)
  %3571 = load ptr, ptr @"Core:iterator:take:31:12", align 8
  call void @free_candy_value(ptr %3571)
  %3572 = load ptr, ptr @"Core:iterator:take:31:index", align 8
  call void @free_candy_value(ptr %3572)
  %3573 = load ptr, ptr @"Core:iterator:take:31:item", align 8
  call void @free_candy_value(ptr %3573)
  %3574 = load ptr, ptr @"Core:iterator:take:32", align 8
  call void @free_candy_value(ptr %3574)
  %3575 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  call void @free_candy_value(ptr %3575)
  %3576 = load ptr, ptr @"Core:iterator:take:35", align 8
  call void @free_candy_value(ptr %3576)
  %3577 = load ptr, ptr @"Core:iterator:takeWhile:3", align 8
  call void @free_candy_value(ptr %3577)
  %3578 = load ptr, ptr @"Core:iterator:takeWhile:7:2", align 8
  call void @free_candy_value(ptr %3578)
  %3579 = load ptr, ptr @"Core:iterator:takeWhile:7:3", align 8
  call void @free_candy_value(ptr %3579)
  %3580 = load ptr, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  call void @free_candy_value(ptr %3580)
  %3581 = load ptr, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  call void @free_candy_value(ptr %3581)
  %3582 = load ptr, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  call void @free_candy_value(ptr %3582)
  %3583 = load ptr, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  call void @free_candy_value(ptr %3583)
  %3584 = load ptr, ptr @"Core:iterator:takeWhile:8", align 8
  call void @free_candy_value(ptr %3584)
  %3585 = load ptr, ptr @"Core:iterator:toList:3", align 8
  call void @free_candy_value(ptr %3585)
  %3586 = load ptr, ptr @"Core:iterator:toList:6:10", align 8
  call void @free_candy_value(ptr %3586)
  %3587 = load ptr, ptr @"Core:iterator:toList:7", align 8
  call void @free_candy_value(ptr %3587)
  %3588 = load ptr, ptr @"Core:iterator:where:14", align 8
  call void @free_candy_value(ptr %3588)
  %3589 = load ptr, ptr @"Core:iterator:where:16", align 8
  call void @free_candy_value(ptr %3589)
  %3590 = load ptr, ptr @"Core:iterator:where:19:2:2", align 8
  call void @free_candy_value(ptr %3590)
  %3591 = load ptr, ptr @"Core:iterator:where:19:2:3", align 8
  call void @free_candy_value(ptr %3591)
  %3592 = load ptr, ptr @"Core:iterator:where:19:2:3:4", align 8
  call void @free_candy_value(ptr %3592)
  %3593 = load ptr, ptr @"Core:iterator:where:19:2:3:6:2", align 8
  call void @free_candy_value(ptr %3593)
  %3594 = load ptr, ptr @"Core:iterator:where:19:2:3:6:4", align 8
  call void @free_candy_value(ptr %3594)
  %3595 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5", align 8
  call void @free_candy_value(ptr %3595)
  %3596 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5:item", align 8
  call void @free_candy_value(ptr %3596)
  %3597 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5:rest", align 8
  call void @free_candy_value(ptr %3597)
  %3598 = load ptr, ptr @"Core:iterator:where:19:2:3:7", align 8
  call void @free_candy_value(ptr %3598)
  %3599 = load ptr, ptr @"Core:iterator:where:19:2:3:item", align 8
  call void @free_candy_value(ptr %3599)
  %3600 = load ptr, ptr @"Core:iterator:where:19:2:3:rest", align 8
  call void @free_candy_value(ptr %3600)
  %3601 = load ptr, ptr @"Core:iterator:where:19:3", align 8
  call void @free_candy_value(ptr %3601)
  %3602 = load ptr, ptr @"Core:iterator:where:20", align 8
  call void @free_candy_value(ptr %3602)
  %3603 = load ptr, ptr @"Core:iterator:where:3", align 8
  call void @free_candy_value(ptr %3603)
  %3604 = load ptr, ptr @"Core:iterator:windowed:16", align 8
  call void @free_candy_value(ptr %3604)
  %3605 = load ptr, ptr @"Core:iterator:windowed:26", align 8
  call void @free_candy_value(ptr %3605)
  %3606 = load ptr, ptr @"Core:iterator:windowed:28", align 8
  call void @free_candy_value(ptr %3606)
  %3607 = load ptr, ptr @"Core:iterator:windowed:3", align 8
  call void @free_candy_value(ptr %3607)
  %3608 = load ptr, ptr @"Core:iterator:windowed:40", align 8
  call void @free_candy_value(ptr %3608)
  %3609 = load ptr, ptr @"Core:iterator:windowed:50", align 8
  call void @free_candy_value(ptr %3609)
  %3610 = load ptr, ptr @"Core:iterator:windowed:52", align 8
  call void @free_candy_value(ptr %3610)
  %3611 = load ptr, ptr @"Core:iterator:windowed:62", align 8
  call void @free_candy_value(ptr %3611)
  %3612 = load ptr, ptr @"Core:iterator:windowed:64", align 8
  call void @free_candy_value(ptr %3612)
  %3613 = load ptr, ptr @"Core:iterator:windowed:67:16", align 8
  call void @free_candy_value(ptr %3613)
  %3614 = load ptr, ptr @"Core:iterator:windowed:67:22", align 8
  call void @free_candy_value(ptr %3614)
  %3615 = load ptr, ptr @"Core:iterator:windowed:67:26:7", align 8
  call void @free_candy_value(ptr %3615)
  %3616 = load ptr, ptr @"Core:iterator:windowed:67:28", align 8
  call void @free_candy_value(ptr %3616)
  %3617 = load ptr, ptr @"Core:iterator:windowed:67:3", align 8
  call void @free_candy_value(ptr %3617)
  %3618 = load ptr, ptr @"Core:iterator:windowed:67:5", align 8
  call void @free_candy_value(ptr %3618)
  %3619 = load ptr, ptr @"Core:iterator:windowed:68", align 8
  call void @free_candy_value(ptr %3619)
  %3620 = load ptr, ptr @"Core:iterator:withIndex:11:1", align 8
  call void @free_candy_value(ptr %3620)
  %3621 = load ptr, ptr @"Core:iterator:withIndex:11:4", align 8
  call void @free_candy_value(ptr %3621)
  %3622 = load ptr, ptr @"Core:iterator:withIndex:11:5", align 8
  call void @free_candy_value(ptr %3622)
  %3623 = load ptr, ptr @"Core:iterator:withIndex:11:5:22", align 8
  call void @free_candy_value(ptr %3623)
  %3624 = load ptr, ptr @"Core:iterator:withIndex:11:5:item", align 8
  call void @free_candy_value(ptr %3624)
  %3625 = load ptr, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  call void @free_candy_value(ptr %3625)
  %3626 = load ptr, ptr @"Core:iterator:withIndex:11:index", align 8
  call void @free_candy_value(ptr %3626)
  %3627 = load ptr, ptr @"Core:iterator:withIndex:11:iterator", align 8
  call void @free_candy_value(ptr %3627)
  %3628 = load ptr, ptr @"Core:iterator:withIndex:12", align 8
  call void @free_candy_value(ptr %3628)
  %3629 = load ptr, ptr @"Core:iterator:withIndex:3", align 8
  call void @free_candy_value(ptr %3629)
  %3630 = load ptr, ptr @"Core:iterator:wrapSafe:11", align 8
  call void @free_candy_value(ptr %3630)
  %3631 = load ptr, ptr @"Core:iterator:wrapSafe:12:9", align 8
  call void @free_candy_value(ptr %3631)
  %3632 = load ptr, ptr @"Core:iterator:wrapSafe:16:1", align 8
  call void @free_candy_value(ptr %3632)
  %3633 = load ptr, ptr @"Core:iterator:wrapSafe:16:13", align 8
  call void @free_candy_value(ptr %3633)
  %3634 = load ptr, ptr @"Core:iterator:wrapSafe:16:1:10", align 8
  call void @free_candy_value(ptr %3634)
  %3635 = load ptr, ptr @"Core:iterator:wrapSafe:16:1:function", align 8
  call void @free_candy_value(ptr %3635)
  %3636 = load ptr, ptr @"Core:iterator:wrapSafe:16:22", align 8
  call void @free_candy_value(ptr %3636)
  %3637 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  call void @free_candy_value(ptr %3637)
  %3638 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10", align 8
  call void @free_candy_value(ptr %3638)
  %3639 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:19", align 8
  call void @free_candy_value(ptr %3639)
  %3640 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:7", align 8
  call void @free_candy_value(ptr %3640)
  %3641 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:item", align 8
  call void @free_candy_value(ptr %3641)
  %3642 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:rest", align 8
  call void @free_candy_value(ptr %3642)
  %3643 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:9", align 8
  call void @free_candy_value(ptr %3643)
  %3644 = load ptr, ptr @"Core:iterator:wrapSafe:17", align 8
  call void @free_candy_value(ptr %3644)
  %3645 = load ptr, ptr @"Core:iterator:wrapSafe:9", align 8
  call void @free_candy_value(ptr %3645)
  %3646 = load ptr, ptr @"Core:list:append:11", align 8
  call void @free_candy_value(ptr %3646)
  %3647 = load ptr, ptr @"Core:list:append:4", align 8
  call void @free_candy_value(ptr %3647)
  %3648 = load ptr, ptr @"Core:list:append:9", align 8
  call void @free_candy_value(ptr %3648)
  %3649 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %3649)
  %3650 = load ptr, ptr @"Core:result:is:1:_", align 8
  call void @free_candy_value(ptr %3650)
  %3651 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %3651)
  %3652 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %3652)
  %3653 = load ptr, ptr @"Core:result:mapOrElse:2", align 8
  call void @free_candy_value(ptr %3653)
  %3654 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %3654)
  %3655 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %3655)
  %3656 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %3656)
  %3657 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %3657)
  %3658 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %3658)
  %3659 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %3659)
  %3660 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %3660)
  %3661 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %3661)
  %3662 = load ptr, ptr @"Core:result:unwrapOr:2", align 8
  call void @free_candy_value(ptr %3662)
  %3663 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %3663)
  %3664 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %3664)
  %3665 = load ptr, ptr @"Core:result:unwrapOrElse:14", align 8
  call void @free_candy_value(ptr %3665)
  %3666 = load ptr, ptr @"Core:result:unwrapOrElse:16", align 8
  call void @free_candy_value(ptr %3666)
  %3667 = load ptr, ptr @"Core:result:unwrapOrElse:2", align 8
  call void @free_candy_value(ptr %3667)
  %3668 = load ptr, ptr @"Core:result:unwrapOrElse:20:9", align 8
  call void @free_candy_value(ptr %3668)
  %3669 = load ptr, ptr @"Core:result:unwrapOrElse:21", align 8
  call void @free_candy_value(ptr %3669)
  %3670 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %3670)
  %3671 = load ptr, ptr @tag_Empty, align 8
  call void @free_candy_value(ptr %3671)
  %3672 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %3672)
  %3673 = load ptr, ptr @tag_Index, align 8
  call void @free_candy_value(ptr %3673)
  %3674 = load ptr, ptr @tag_Item, align 8
  call void @free_candy_value(ptr %3674)
  %3675 = load ptr, ptr @tag_Iterator, align 8
  call void @free_candy_value(ptr %3675)
  %3676 = load ptr, ptr @tag_More, align 8
  call void @free_candy_value(ptr %3676)
  %3677 = load ptr, ptr @tag_N, align 8
  call void @free_candy_value(ptr %3677)
  %3678 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %3678)
  %3679 = load ptr, ptr @tag_Rest, align 8
  call void @free_candy_value(ptr %3679)
  %3680 = load ptr, ptr @tag_State, align 8
  call void @free_candy_value(ptr %3680)
  %3681 = load ptr, ptr @tag_Value, align 8
  call void @free_candy_value(ptr %3681)
  %3682 = load ptr, ptr @text_, align 8
  call void @free_candy_value(ptr %3682)
  %3683 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  call void @free_candy_value(ptr %3683)
  %3684 = load ptr, ptr @"text_Expected Empty, got ", align 8
  call void @free_candy_value(ptr %3684)
  %3685 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %3685)
  %3686 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  call void @free_candy_value(ptr %3686)
  %3687 = load ptr, ptr @"text_Expected More, got ", align 8
  call void @free_candy_value(ptr %3687)
  %3688 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %3688)
  %3689 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  call void @free_candy_value(ptr %3689)
  %3690 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  call void @free_candy_value(ptr %3690)
  %3691 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  call void @free_candy_value(ptr %3691)
  %3692 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  call void @free_candy_value(ptr %3692)
  %3693 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  call void @free_candy_value(ptr %3693)
  %3694 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  call void @free_candy_value(ptr %3694)
  %3695 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  call void @free_candy_value(ptr %3695)
  %3696 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  call void @free_candy_value(ptr %3696)
  %3697 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  call void @free_candy_value(ptr %3697)
  %3698 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @free_candy_value(ptr %3698)
  %3699 = load ptr, ptr @"text_`", align 8
  call void @free_candy_value(ptr %3699)
  %3700 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @free_candy_value(ptr %3700)
  %3701 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @free_candy_value(ptr %3701)
  %3702 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  call void @free_candy_value(ptr %3702)
  %3703 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  call void @free_candy_value(ptr %3703)
  %3704 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @free_candy_value(ptr %3704)
  %3705 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @free_candy_value(ptr %3705)
  %3706 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %3706)
  %3707 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %3707)
  %3708 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  call void @free_candy_value(ptr %3708)
  %3709 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %3709)
  %3710 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  call void @free_candy_value(ptr %3710)
  %3711 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  call void @free_candy_value(ptr %3711)
  %3712 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %3712)
  %3713 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  call void @free_candy_value(ptr %3713)
  %3714 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %3714)
  %3715 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  call void @free_candy_value(ptr %3715)
  %3716 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  call void @free_candy_value(ptr %3716)
  %3717 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  call void @free_candy_value(ptr %3717)
  %3718 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  call void @free_candy_value(ptr %3718)
  %3719 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  call void @free_candy_value(ptr %3719)
  %3720 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  call void @free_candy_value(ptr %3720)
  %3721 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  call void @free_candy_value(ptr %3721)
  %3722 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  call void @free_candy_value(ptr %3722)
  %3723 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  call void @free_candy_value(ptr %3723)
  %3724 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  call void @free_candy_value(ptr %3724)
  %3725 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  call void @free_candy_value(ptr %3725)
  %3726 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %3726)
  %3727 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @free_candy_value(ptr %3727)
  %3728 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @free_candy_value(ptr %3728)
  %3729 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @free_candy_value(ptr %3729)
  %3730 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  call void @free_candy_value(ptr %3730)
  %3731 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @free_candy_value(ptr %3731)
  %3732 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @free_candy_value(ptr %3732)
  %3733 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %3733)
  %3734 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @free_candy_value(ptr %3734)
  %3735 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @free_candy_value(ptr %3735)
  %3736 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @free_candy_value(ptr %3736)
  %3737 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @free_candy_value(ptr %3737)
  %3738 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  call void @free_candy_value(ptr %3738)
  %3739 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @free_candy_value(ptr %3739)
  %3740 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @free_candy_value(ptr %3740)
  %3741 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @free_candy_value(ptr %3741)
  %3742 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @free_candy_value(ptr %3742)
  %3743 = load ptr, ptr @fun_Core_result_is, align 8
  call void @free_candy_value(ptr %3743)
  %3744 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %3744)
  %3745 = load ptr, ptr @fun_Core_result_is_1_equals_then.261, align 8
  call void @free_candy_value(ptr %3745)
  %3746 = load ptr, ptr @fun_Core_result_is_1_equals_then.263, align 8
  call void @free_candy_value(ptr %3746)
  %3747 = load ptr, ptr @99, align 8
  call void @free_candy_value(ptr %3747)
  %3748 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %3748)
  %3749 = load ptr, ptr @fun_Core_result_is_1_equals_else.265, align 8
  call void @free_candy_value(ptr %3749)
  %3750 = load ptr, ptr @100, align 8
  call void @free_candy_value(ptr %3750)
  %3751 = load ptr, ptr @fun_Core_result_is_1_equals_else.267, align 8
  call void @free_candy_value(ptr %3751)
  %3752 = load ptr, ptr @101, align 8
  call void @free_candy_value(ptr %3752)
  %3753 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3753)
  %3754 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3754)
  %3755 = load ptr, ptr @fun_Core_result_is_1_equals_then.269, align 8
  call void @free_candy_value(ptr %3755)
  %3756 = load ptr, ptr @fun_Core_result_is_1_equals_then.271, align 8
  call void @free_candy_value(ptr %3756)
  %3757 = load ptr, ptr @fun_Core_result_is_1_equals_then.273, align 8
  call void @free_candy_value(ptr %3757)
  %3758 = load ptr, ptr @102, align 8
  call void @free_candy_value(ptr %3758)
  %3759 = load ptr, ptr @fun_Core_result_is_1_equals_else.275, align 8
  call void @free_candy_value(ptr %3759)
  %3760 = load ptr, ptr @fun_Core_result_is_1_equals_else.277, align 8
  call void @free_candy_value(ptr %3760)
  %3761 = load ptr, ptr @103, align 8
  call void @free_candy_value(ptr %3761)
  %3762 = load ptr, ptr @fun_Core_result_is_1_equals_else.279, align 8
  call void @free_candy_value(ptr %3762)
  %3763 = load ptr, ptr @104, align 8
  call void @free_candy_value(ptr %3763)
  %3764 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %3764)
  %3765 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3765)
  %3766 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %3766)
  %3767 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %3767)
  %3768 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.281, align 8
  call void @free_candy_value(ptr %3768)
  %3769 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.283, align 8
  call void @free_candy_value(ptr %3769)
  %3770 = load ptr, ptr @105, align 8
  call void @free_candy_value(ptr %3770)
  %3771 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %3771)
  %3772 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.285, align 8
  call void @free_candy_value(ptr %3772)
  %3773 = load ptr, ptr @106, align 8
  call void @free_candy_value(ptr %3773)
  %3774 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.287, align 8
  call void @free_candy_value(ptr %3774)
  %3775 = load ptr, ptr @107, align 8
  call void @free_candy_value(ptr %3775)
  %3776 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  call void @free_candy_value(ptr %3776)
  %3777 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3777)
  %3778 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.289, align 8
  call void @free_candy_value(ptr %3778)
  %3779 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.291, align 8
  call void @free_candy_value(ptr %3779)
  %3780 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.293, align 8
  call void @free_candy_value(ptr %3780)
  %3781 = load ptr, ptr @108, align 8
  call void @free_candy_value(ptr %3781)
  %3782 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.295, align 8
  call void @free_candy_value(ptr %3782)
  %3783 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.297, align 8
  call void @free_candy_value(ptr %3783)
  %3784 = load ptr, ptr @109, align 8
  call void @free_candy_value(ptr %3784)
  %3785 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.299, align 8
  call void @free_candy_value(ptr %3785)
  %3786 = load ptr, ptr @110, align 8
  call void @free_candy_value(ptr %3786)
  %3787 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  call void @free_candy_value(ptr %3787)
  %3788 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3788)
  %3789 = load ptr, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  call void @free_candy_value(ptr %3789)
  %3790 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %3790)
  %3791 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %3791)
  %3792 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  call void @free_candy_value(ptr %3792)
  %3793 = load ptr, ptr @fun_Core_list_append, align 8
  call void @free_candy_value(ptr %3793)
  %3794 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  call void @free_candy_value(ptr %3794)
  %3795 = load ptr, ptr @fun_Core_iterator_wrapSafe, align 8
  call void @free_candy_value(ptr %3795)
  %3796 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  call void @free_candy_value(ptr %3796)
  %3797 = load ptr, ptr @fun_Core_iterator_wrapSafe_16, align 8
  call void @free_candy_value(ptr %3797)
  %3798 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  call void @free_candy_value(ptr %3798)
  %3799 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.301, align 8
  call void @free_candy_value(ptr %3799)
  %3800 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.303, align 8
  call void @free_candy_value(ptr %3800)
  %3801 = load ptr, ptr @111, align 8
  call void @free_candy_value(ptr %3801)
  %3802 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  call void @free_candy_value(ptr %3802)
  %3803 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.305, align 8
  call void @free_candy_value(ptr %3803)
  %3804 = load ptr, ptr @112, align 8
  call void @free_candy_value(ptr %3804)
  %3805 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.307, align 8
  call void @free_candy_value(ptr %3805)
  %3806 = load ptr, ptr @113, align 8
  call void @free_candy_value(ptr %3806)
  %3807 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_matched, align 8
  call void @free_candy_value(ptr %3807)
  %3808 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3808)
  %3809 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  call void @free_candy_value(ptr %3809)
  %3810 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  call void @free_candy_value(ptr %3810)
  %3811 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.309, align 8
  call void @free_candy_value(ptr %3811)
  %3812 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  call void @free_candy_value(ptr %3812)
  %3813 = load ptr, ptr @114, align 8
  call void @free_candy_value(ptr %3813)
  %3814 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.311, align 8
  call void @free_candy_value(ptr %3814)
  %3815 = load ptr, ptr @115, align 8
  call void @free_candy_value(ptr %3815)
  %3816 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.313, align 8
  call void @free_candy_value(ptr %3816)
  %3817 = load ptr, ptr @116, align 8
  call void @free_candy_value(ptr %3817)
  %3818 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3818)
  %3819 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.315, align 8
  call void @free_candy_value(ptr %3819)
  %3820 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.317, align 8
  call void @free_candy_value(ptr %3820)
  %3821 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.319, align 8
  call void @free_candy_value(ptr %3821)
  %3822 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.321, align 8
  call void @free_candy_value(ptr %3822)
  %3823 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  call void @free_candy_value(ptr %3823)
  %3824 = load ptr, ptr @117, align 8
  call void @free_candy_value(ptr %3824)
  %3825 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  call void @free_candy_value(ptr %3825)
  %3826 = load ptr, ptr @118, align 8
  call void @free_candy_value(ptr %3826)
  %3827 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  call void @free_candy_value(ptr %3827)
  %3828 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.323, align 8
  call void @free_candy_value(ptr %3828)
  %3829 = load ptr, ptr @119, align 8
  call void @free_candy_value(ptr %3829)
  %3830 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.325, align 8
  call void @free_candy_value(ptr %3830)
  %3831 = load ptr, ptr @120, align 8
  call void @free_candy_value(ptr %3831)
  %3832 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.327, align 8
  call void @free_candy_value(ptr %3832)
  %3833 = load ptr, ptr @121, align 8
  call void @free_candy_value(ptr %3833)
  %3834 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  call void @free_candy_value(ptr %3834)
  %3835 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.329, align 8
  call void @free_candy_value(ptr %3835)
  %3836 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.331, align 8
  call void @free_candy_value(ptr %3836)
  %3837 = load ptr, ptr @122, align 8
  call void @free_candy_value(ptr %3837)
  %3838 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.333, align 8
  call void @free_candy_value(ptr %3838)
  %3839 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.335, align 8
  call void @free_candy_value(ptr %3839)
  %3840 = load ptr, ptr @123, align 8
  call void @free_candy_value(ptr %3840)
  %3841 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.337, align 8
  call void @free_candy_value(ptr %3841)
  %3842 = load ptr, ptr @124, align 8
  call void @free_candy_value(ptr %3842)
  %3843 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_matched, align 8
  call void @free_candy_value(ptr %3843)
  %3844 = load ptr, ptr @tag_More.338, align 8
  call void @free_candy_value(ptr %3844)
  %3845 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3845)
  %3846 = load ptr, ptr @tag_Iterator.339, align 8
  call void @free_candy_value(ptr %3846)
  %3847 = load ptr, ptr @fun_Core_controlFlow_recursive_18.341, align 8
  call void @free_candy_value(ptr %3847)
  %3848 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.343, align 8
  call void @free_candy_value(ptr %3848)
  %3849 = load ptr, ptr @fun_Core_iterator_next, align 8
  call void @free_candy_value(ptr %3849)
  %3850 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  call void @free_candy_value(ptr %3850)
  %3851 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  call void @free_candy_value(ptr %3851)
  %3852 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.345, align 8
  call void @free_candy_value(ptr %3852)
  %3853 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.347, align 8
  call void @free_candy_value(ptr %3853)
  %3854 = load ptr, ptr @125, align 8
  call void @free_candy_value(ptr %3854)
  %3855 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  call void @free_candy_value(ptr %3855)
  %3856 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.349, align 8
  call void @free_candy_value(ptr %3856)
  %3857 = load ptr, ptr @126, align 8
  call void @free_candy_value(ptr %3857)
  %3858 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.351, align 8
  call void @free_candy_value(ptr %3858)
  %3859 = load ptr, ptr @127, align 8
  call void @free_candy_value(ptr %3859)
  %3860 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  call void @free_candy_value(ptr %3860)
  %3861 = load ptr, ptr @fun_Core_iterator_generateWithState, align 8
  call void @free_candy_value(ptr %3861)
  %3862 = load ptr, ptr @fun_Core_iterator_generateWithState_14, align 8
  call void @free_candy_value(ptr %3862)
  %3863 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  call void @free_candy_value(ptr %3863)
  %3864 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  call void @free_candy_value(ptr %3864)
  %3865 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.353, align 8
  call void @free_candy_value(ptr %3865)
  %3866 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.355, align 8
  call void @free_candy_value(ptr %3866)
  %3867 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.357, align 8
  call void @free_candy_value(ptr %3867)
  %3868 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  call void @free_candy_value(ptr %3868)
  %3869 = load ptr, ptr @128, align 8
  call void @free_candy_value(ptr %3869)
  %3870 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  call void @free_candy_value(ptr %3870)
  %3871 = load ptr, ptr @129, align 8
  call void @free_candy_value(ptr %3871)
  %3872 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  call void @free_candy_value(ptr %3872)
  %3873 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.359, align 8
  call void @free_candy_value(ptr %3873)
  %3874 = load ptr, ptr @130, align 8
  call void @free_candy_value(ptr %3874)
  %3875 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.361, align 8
  call void @free_candy_value(ptr %3875)
  %3876 = load ptr, ptr @131, align 8
  call void @free_candy_value(ptr %3876)
  %3877 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.363, align 8
  call void @free_candy_value(ptr %3877)
  %3878 = load ptr, ptr @132, align 8
  call void @free_candy_value(ptr %3878)
  %3879 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  call void @free_candy_value(ptr %3879)
  %3880 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.365, align 8
  call void @free_candy_value(ptr %3880)
  %3881 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  call void @free_candy_value(ptr %3881)
  %3882 = load ptr, ptr @133, align 8
  call void @free_candy_value(ptr %3882)
  %3883 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.367, align 8
  call void @free_candy_value(ptr %3883)
  %3884 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.369, align 8
  call void @free_candy_value(ptr %3884)
  %3885 = load ptr, ptr @134, align 8
  call void @free_candy_value(ptr %3885)
  %3886 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.371, align 8
  call void @free_candy_value(ptr %3886)
  %3887 = load ptr, ptr @135, align 8
  call void @free_candy_value(ptr %3887)
  %3888 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_matched, align 8
  call void @free_candy_value(ptr %3888)
  %3889 = load ptr, ptr @tag_More.372, align 8
  call void @free_candy_value(ptr %3889)
  %3890 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3890)
  %3891 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.374, align 8
  call void @free_candy_value(ptr %3891)
  %3892 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.376, align 8
  call void @free_candy_value(ptr %3892)
  %3893 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.378, align 8
  call void @free_candy_value(ptr %3893)
  %3894 = load ptr, ptr @136, align 8
  call void @free_candy_value(ptr %3894)
  %3895 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.380, align 8
  call void @free_candy_value(ptr %3895)
  %3896 = load ptr, ptr @137, align 8
  call void @free_candy_value(ptr %3896)
  %3897 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.382, align 8
  call void @free_candy_value(ptr %3897)
  %3898 = load ptr, ptr @138, align 8
  call void @free_candy_value(ptr %3898)
  %3899 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3899)
  %3900 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_matched, align 8
  call void @free_candy_value(ptr %3900)
  %3901 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  call void @free_candy_value(ptr %3901)
  %3902 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  call void @free_candy_value(ptr %3902)
  %3903 = load ptr, ptr @tag_Iterator.383, align 8
  call void @free_candy_value(ptr %3903)
  %3904 = load ptr, ptr @fun_Core_controlFlow_recursive_18.385, align 8
  call void @free_candy_value(ptr %3904)
  %3905 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.387, align 8
  call void @free_candy_value(ptr %3905)
  %3906 = load ptr, ptr @fun_Core_iterator_generate, align 8
  call void @free_candy_value(ptr %3906)
  %3907 = load ptr, ptr @fun_Core_iterator_generate_50, align 8
  call void @free_candy_value(ptr %3907)
  %3908 = load ptr, ptr @fun_Core_iterator_generate_50_6, align 8
  call void @free_candy_value(ptr %3908)
  %3909 = load ptr, ptr @tag_More.388, align 8
  call void @free_candy_value(ptr %3909)
  %3910 = load ptr, ptr @fun_Core_iterator_map, align 8
  call void @free_candy_value(ptr %3910)
  %3911 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  call void @free_candy_value(ptr %3911)
  %3912 = load ptr, ptr @fun_Core_iterator_map_19, align 8
  call void @free_candy_value(ptr %3912)
  %3913 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  call void @free_candy_value(ptr %3913)
  %3914 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.390, align 8
  call void @free_candy_value(ptr %3914)
  %3915 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  call void @free_candy_value(ptr %3915)
  %3916 = load ptr, ptr @139, align 8
  call void @free_candy_value(ptr %3916)
  %3917 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.392, align 8
  call void @free_candy_value(ptr %3917)
  %3918 = load ptr, ptr @140, align 8
  call void @free_candy_value(ptr %3918)
  %3919 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.394, align 8
  call void @free_candy_value(ptr %3919)
  %3920 = load ptr, ptr @141, align 8
  call void @free_candy_value(ptr %3920)
  %3921 = load ptr, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3921)
  %3922 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.396, align 8
  call void @free_candy_value(ptr %3922)
  %3923 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.398, align 8
  call void @free_candy_value(ptr %3923)
  %3924 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.400, align 8
  call void @free_candy_value(ptr %3924)
  %3925 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.402, align 8
  call void @free_candy_value(ptr %3925)
  %3926 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  call void @free_candy_value(ptr %3926)
  %3927 = load ptr, ptr @142, align 8
  call void @free_candy_value(ptr %3927)
  %3928 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  call void @free_candy_value(ptr %3928)
  %3929 = load ptr, ptr @143, align 8
  call void @free_candy_value(ptr %3929)
  %3930 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  call void @free_candy_value(ptr %3930)
  %3931 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then.404, align 8
  call void @free_candy_value(ptr %3931)
  %3932 = load ptr, ptr @144, align 8
  call void @free_candy_value(ptr %3932)
  %3933 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else.406, align 8
  call void @free_candy_value(ptr %3933)
  %3934 = load ptr, ptr @145, align 8
  call void @free_candy_value(ptr %3934)
  %3935 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then.408, align 8
  call void @free_candy_value(ptr %3935)
  %3936 = load ptr, ptr @146, align 8
  call void @free_candy_value(ptr %3936)
  %3937 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  call void @free_candy_value(ptr %3937)
  %3938 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else.410, align 8
  call void @free_candy_value(ptr %3938)
  %3939 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.412, align 8
  call void @free_candy_value(ptr %3939)
  %3940 = load ptr, ptr @147, align 8
  call void @free_candy_value(ptr %3940)
  %3941 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.414, align 8
  call void @free_candy_value(ptr %3941)
  %3942 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.416, align 8
  call void @free_candy_value(ptr %3942)
  %3943 = load ptr, ptr @148, align 8
  call void @free_candy_value(ptr %3943)
  %3944 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.418, align 8
  call void @free_candy_value(ptr %3944)
  %3945 = load ptr, ptr @149, align 8
  call void @free_candy_value(ptr %3945)
  %3946 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_matched, align 8
  call void @free_candy_value(ptr %3946)
  %3947 = load ptr, ptr @tag_More.419, align 8
  call void @free_candy_value(ptr %3947)
  %3948 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %3948)
  %3949 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  call void @free_candy_value(ptr %3949)
  %3950 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  call void @free_candy_value(ptr %3950)
  %3951 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  call void @free_candy_value(ptr %3951)
  %3952 = load ptr, ptr @150, align 8
  call void @free_candy_value(ptr %3952)
  %3953 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  call void @free_candy_value(ptr %3953)
  %3954 = load ptr, ptr @151, align 8
  call void @free_candy_value(ptr %3954)
  %3955 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  call void @free_candy_value(ptr %3955)
  %3956 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.421, align 8
  call void @free_candy_value(ptr %3956)
  %3957 = load ptr, ptr @152, align 8
  call void @free_candy_value(ptr %3957)
  %3958 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.423, align 8
  call void @free_candy_value(ptr %3958)
  %3959 = load ptr, ptr @153, align 8
  call void @free_candy_value(ptr %3959)
  %3960 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.425, align 8
  call void @free_candy_value(ptr %3960)
  %3961 = load ptr, ptr @154, align 8
  call void @free_candy_value(ptr %3961)
  %3962 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  call void @free_candy_value(ptr %3962)
  %3963 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.427, align 8
  call void @free_candy_value(ptr %3963)
  %3964 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  call void @free_candy_value(ptr %3964)
  %3965 = load ptr, ptr @155, align 8
  call void @free_candy_value(ptr %3965)
  %3966 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.429, align 8
  call void @free_candy_value(ptr %3966)
  %3967 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  call void @free_candy_value(ptr %3967)
  %3968 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.431, align 8
  call void @free_candy_value(ptr %3968)
  %3969 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  call void @free_candy_value(ptr %3969)
  %3970 = load ptr, ptr @156, align 8
  call void @free_candy_value(ptr %3970)
  %3971 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.433, align 8
  call void @free_candy_value(ptr %3971)
  %3972 = load ptr, ptr @157, align 8
  call void @free_candy_value(ptr %3972)
  %3973 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.435, align 8
  call void @free_candy_value(ptr %3973)
  %3974 = load ptr, ptr @158, align 8
  call void @free_candy_value(ptr %3974)
  %3975 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %3975)
  %3976 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.437, align 8
  call void @free_candy_value(ptr %3976)
  %3977 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.439, align 8
  call void @free_candy_value(ptr %3977)
  %3978 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.441, align 8
  call void @free_candy_value(ptr %3978)
  %3979 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.443, align 8
  call void @free_candy_value(ptr %3979)
  %3980 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  call void @free_candy_value(ptr %3980)
  %3981 = load ptr, ptr @159, align 8
  call void @free_candy_value(ptr %3981)
  %3982 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  call void @free_candy_value(ptr %3982)
  %3983 = load ptr, ptr @160, align 8
  call void @free_candy_value(ptr %3983)
  %3984 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  call void @free_candy_value(ptr %3984)
  %3985 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.445, align 8
  call void @free_candy_value(ptr %3985)
  %3986 = load ptr, ptr @161, align 8
  call void @free_candy_value(ptr %3986)
  %3987 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.447, align 8
  call void @free_candy_value(ptr %3987)
  %3988 = load ptr, ptr @162, align 8
  call void @free_candy_value(ptr %3988)
  %3989 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.449, align 8
  call void @free_candy_value(ptr %3989)
  %3990 = load ptr, ptr @163, align 8
  call void @free_candy_value(ptr %3990)
  %3991 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  call void @free_candy_value(ptr %3991)
  %3992 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.451, align 8
  call void @free_candy_value(ptr %3992)
  %3993 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.453, align 8
  call void @free_candy_value(ptr %3993)
  %3994 = load ptr, ptr @164, align 8
  call void @free_candy_value(ptr %3994)
  %3995 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.455, align 8
  call void @free_candy_value(ptr %3995)
  %3996 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.457, align 8
  call void @free_candy_value(ptr %3996)
  %3997 = load ptr, ptr @165, align 8
  call void @free_candy_value(ptr %3997)
  %3998 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.459, align 8
  call void @free_candy_value(ptr %3998)
  %3999 = load ptr, ptr @166, align 8
  call void @free_candy_value(ptr %3999)
  %4000 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  call void @free_candy_value(ptr %4000)
  %4001 = load ptr, ptr @tag_More.460, align 8
  call void @free_candy_value(ptr %4001)
  %4002 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4002)
  %4003 = load ptr, ptr @fun_Core_iterator_ensure, align 8
  call void @free_candy_value(ptr %4003)
  %4004 = load ptr, ptr @fun_Core_iterator_ensure_14, align 8
  call void @free_candy_value(ptr %4004)
  %4005 = load ptr, ptr @fun_Core_iterator_ensure_19, align 8
  call void @free_candy_value(ptr %4005)
  %4006 = load ptr, ptr @fun_Core_iterator_foldLeft, align 8
  call void @free_candy_value(ptr %4006)
  %4007 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  call void @free_candy_value(ptr %4007)
  %4008 = load ptr, ptr @fun_Core_iterator_foldLeft_23, align 8
  call void @free_candy_value(ptr %4008)
  %4009 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  call void @free_candy_value(ptr %4009)
  %4010 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  call void @free_candy_value(ptr %4010)
  %4011 = load ptr, ptr @167, align 8
  call void @free_candy_value(ptr %4011)
  %4012 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  call void @free_candy_value(ptr %4012)
  %4013 = load ptr, ptr @168, align 8
  call void @free_candy_value(ptr %4013)
  %4014 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4014)
  %4015 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.462, align 8
  call void @free_candy_value(ptr %4015)
  %4016 = load ptr, ptr @169, align 8
  call void @free_candy_value(ptr %4016)
  %4017 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.464, align 8
  call void @free_candy_value(ptr %4017)
  %4018 = load ptr, ptr @170, align 8
  call void @free_candy_value(ptr %4018)
  %4019 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.466, align 8
  call void @free_candy_value(ptr %4019)
  %4020 = load ptr, ptr @171, align 8
  call void @free_candy_value(ptr %4020)
  %4021 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4021)
  %4022 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.468, align 8
  call void @free_candy_value(ptr %4022)
  %4023 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  call void @free_candy_value(ptr %4023)
  %4024 = load ptr, ptr @172, align 8
  call void @free_candy_value(ptr %4024)
  %4025 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.470, align 8
  call void @free_candy_value(ptr %4025)
  %4026 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  call void @free_candy_value(ptr %4026)
  %4027 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.472, align 8
  call void @free_candy_value(ptr %4027)
  %4028 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  call void @free_candy_value(ptr %4028)
  %4029 = load ptr, ptr @173, align 8
  call void @free_candy_value(ptr %4029)
  %4030 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.474, align 8
  call void @free_candy_value(ptr %4030)
  %4031 = load ptr, ptr @174, align 8
  call void @free_candy_value(ptr %4031)
  %4032 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.476, align 8
  call void @free_candy_value(ptr %4032)
  %4033 = load ptr, ptr @175, align 8
  call void @free_candy_value(ptr %4033)
  %4034 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_matched, align 8
  call void @free_candy_value(ptr %4034)
  %4035 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4035)
  %4036 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.478, align 8
  call void @free_candy_value(ptr %4036)
  %4037 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.480, align 8
  call void @free_candy_value(ptr %4037)
  %4038 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.482, align 8
  call void @free_candy_value(ptr %4038)
  %4039 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.484, align 8
  call void @free_candy_value(ptr %4039)
  %4040 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  call void @free_candy_value(ptr %4040)
  %4041 = load ptr, ptr @176, align 8
  call void @free_candy_value(ptr %4041)
  %4042 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  call void @free_candy_value(ptr %4042)
  %4043 = load ptr, ptr @177, align 8
  call void @free_candy_value(ptr %4043)
  %4044 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  call void @free_candy_value(ptr %4044)
  %4045 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.486, align 8
  call void @free_candy_value(ptr %4045)
  %4046 = load ptr, ptr @178, align 8
  call void @free_candy_value(ptr %4046)
  %4047 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.488, align 8
  call void @free_candy_value(ptr %4047)
  %4048 = load ptr, ptr @179, align 8
  call void @free_candy_value(ptr %4048)
  %4049 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.490, align 8
  call void @free_candy_value(ptr %4049)
  %4050 = load ptr, ptr @180, align 8
  call void @free_candy_value(ptr %4050)
  %4051 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  call void @free_candy_value(ptr %4051)
  %4052 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.492, align 8
  call void @free_candy_value(ptr %4052)
  %4053 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.494, align 8
  call void @free_candy_value(ptr %4053)
  %4054 = load ptr, ptr @181, align 8
  call void @free_candy_value(ptr %4054)
  %4055 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.496, align 8
  call void @free_candy_value(ptr %4055)
  %4056 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.498, align 8
  call void @free_candy_value(ptr %4056)
  %4057 = load ptr, ptr @182, align 8
  call void @free_candy_value(ptr %4057)
  %4058 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.500, align 8
  call void @free_candy_value(ptr %4058)
  %4059 = load ptr, ptr @183, align 8
  call void @free_candy_value(ptr %4059)
  %4060 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_matched, align 8
  call void @free_candy_value(ptr %4060)
  %4061 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4061)
  %4062 = load ptr, ptr @fun_Core_controlFlow_recursive_18.502, align 8
  call void @free_candy_value(ptr %4062)
  %4063 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.504, align 8
  call void @free_candy_value(ptr %4063)
  %4064 = load ptr, ptr @tag_Error.505, align 8
  call void @free_candy_value(ptr %4064)
  %4065 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_matched, align 8
  call void @free_candy_value(ptr %4065)
  %4066 = load ptr, ptr @fun_Core_iterator_reduceLeft, align 8
  call void @free_candy_value(ptr %4066)
  %4067 = load ptr, ptr @fun_Core_iterator_reduceLeft_14, align 8
  call void @free_candy_value(ptr %4067)
  %4068 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  call void @free_candy_value(ptr %4068)
  %4069 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.507, align 8
  call void @free_candy_value(ptr %4069)
  %4070 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  call void @free_candy_value(ptr %4070)
  %4071 = load ptr, ptr @184, align 8
  call void @free_candy_value(ptr %4071)
  %4072 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.509, align 8
  call void @free_candy_value(ptr %4072)
  %4073 = load ptr, ptr @185, align 8
  call void @free_candy_value(ptr %4073)
  %4074 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.511, align 8
  call void @free_candy_value(ptr %4074)
  %4075 = load ptr, ptr @186, align 8
  call void @free_candy_value(ptr %4075)
  %4076 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4076)
  %4077 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.513, align 8
  call void @free_candy_value(ptr %4077)
  %4078 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.515, align 8
  call void @free_candy_value(ptr %4078)
  %4079 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.517, align 8
  call void @free_candy_value(ptr %4079)
  %4080 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.519, align 8
  call void @free_candy_value(ptr %4080)
  %4081 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  call void @free_candy_value(ptr %4081)
  %4082 = load ptr, ptr @187, align 8
  call void @free_candy_value(ptr %4082)
  %4083 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  call void @free_candy_value(ptr %4083)
  %4084 = load ptr, ptr @188, align 8
  call void @free_candy_value(ptr %4084)
  %4085 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  call void @free_candy_value(ptr %4085)
  %4086 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.521, align 8
  call void @free_candy_value(ptr %4086)
  %4087 = load ptr, ptr @189, align 8
  call void @free_candy_value(ptr %4087)
  %4088 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.523, align 8
  call void @free_candy_value(ptr %4088)
  %4089 = load ptr, ptr @190, align 8
  call void @free_candy_value(ptr %4089)
  %4090 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.525, align 8
  call void @free_candy_value(ptr %4090)
  %4091 = load ptr, ptr @191, align 8
  call void @free_candy_value(ptr %4091)
  %4092 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  call void @free_candy_value(ptr %4092)
  %4093 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.527, align 8
  call void @free_candy_value(ptr %4093)
  %4094 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.529, align 8
  call void @free_candy_value(ptr %4094)
  %4095 = load ptr, ptr @192, align 8
  call void @free_candy_value(ptr %4095)
  %4096 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.531, align 8
  call void @free_candy_value(ptr %4096)
  %4097 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.533, align 8
  call void @free_candy_value(ptr %4097)
  %4098 = load ptr, ptr @193, align 8
  call void @free_candy_value(ptr %4098)
  %4099 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.535, align 8
  call void @free_candy_value(ptr %4099)
  %4100 = load ptr, ptr @194, align 8
  call void @free_candy_value(ptr %4100)
  %4101 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_matched, align 8
  call void @free_candy_value(ptr %4101)
  %4102 = load ptr, ptr @tag_Ok.536, align 8
  call void @free_candy_value(ptr %4102)
  %4103 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4103)
  %4104 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  call void @free_candy_value(ptr %4104)
  %4105 = load ptr, ptr @fun_Core_iterator_sum, align 8
  call void @free_candy_value(ptr %4105)
  %4106 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  call void @free_candy_value(ptr %4106)
  %4107 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  call void @free_candy_value(ptr %4107)
  %4108 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  call void @free_candy_value(ptr %4108)
  %4109 = load ptr, ptr @fun_Core_iterator_all, align 8
  call void @free_candy_value(ptr %4109)
  %4110 = load ptr, ptr @fun_Core_iterator_all_14, align 8
  call void @free_candy_value(ptr %4110)
  %4111 = load ptr, ptr @fun_Core_iterator_all_18, align 8
  call void @free_candy_value(ptr %4111)
  %4112 = load ptr, ptr @fun_Core_bool_and_12, align 8
  call void @free_candy_value(ptr %4112)
  %4113 = load ptr, ptr @fun_Core_iterator_any, align 8
  call void @free_candy_value(ptr %4113)
  %4114 = load ptr, ptr @fun_Core_iterator_any_14, align 8
  call void @free_candy_value(ptr %4114)
  %4115 = load ptr, ptr @fun_Core_iterator_any_18, align 8
  call void @free_candy_value(ptr %4115)
  %4116 = load ptr, ptr @fun_Core_bool_or_12.538, align 8
  call void @free_candy_value(ptr %4116)
  %4117 = load ptr, ptr @fun_Core_iterator_joinToText, align 8
  call void @free_candy_value(ptr %4117)
  %4118 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  call void @free_candy_value(ptr %4118)
  %4119 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  call void @free_candy_value(ptr %4119)
  %4120 = load ptr, ptr @fun_Core_iterator_where, align 8
  call void @free_candy_value(ptr %4120)
  %4121 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  call void @free_candy_value(ptr %4121)
  %4122 = load ptr, ptr @fun_Core_iterator_where_19, align 8
  call void @free_candy_value(ptr %4122)
  %4123 = load ptr, ptr @fun_Core_iterator_where_19_2, align 8
  call void @free_candy_value(ptr %4123)
  %4124 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  call void @free_candy_value(ptr %4124)
  %4125 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.540, align 8
  call void @free_candy_value(ptr %4125)
  %4126 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  call void @free_candy_value(ptr %4126)
  %4127 = load ptr, ptr @195, align 8
  call void @free_candy_value(ptr %4127)
  %4128 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.542, align 8
  call void @free_candy_value(ptr %4128)
  %4129 = load ptr, ptr @196, align 8
  call void @free_candy_value(ptr %4129)
  %4130 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.544, align 8
  call void @free_candy_value(ptr %4130)
  %4131 = load ptr, ptr @197, align 8
  call void @free_candy_value(ptr %4131)
  %4132 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4132)
  %4133 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.546, align 8
  call void @free_candy_value(ptr %4133)
  %4134 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.548, align 8
  call void @free_candy_value(ptr %4134)
  %4135 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.550, align 8
  call void @free_candy_value(ptr %4135)
  %4136 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.552, align 8
  call void @free_candy_value(ptr %4136)
  %4137 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  call void @free_candy_value(ptr %4137)
  %4138 = load ptr, ptr @198, align 8
  call void @free_candy_value(ptr %4138)
  %4139 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  call void @free_candy_value(ptr %4139)
  %4140 = load ptr, ptr @199, align 8
  call void @free_candy_value(ptr %4140)
  %4141 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  call void @free_candy_value(ptr %4141)
  %4142 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.554, align 8
  call void @free_candy_value(ptr %4142)
  %4143 = load ptr, ptr @200, align 8
  call void @free_candy_value(ptr %4143)
  %4144 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.556, align 8
  call void @free_candy_value(ptr %4144)
  %4145 = load ptr, ptr @201, align 8
  call void @free_candy_value(ptr %4145)
  %4146 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.558, align 8
  call void @free_candy_value(ptr %4146)
  %4147 = load ptr, ptr @202, align 8
  call void @free_candy_value(ptr %4147)
  %4148 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  call void @free_candy_value(ptr %4148)
  %4149 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.560, align 8
  call void @free_candy_value(ptr %4149)
  %4150 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.562, align 8
  call void @free_candy_value(ptr %4150)
  %4151 = load ptr, ptr @203, align 8
  call void @free_candy_value(ptr %4151)
  %4152 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.564, align 8
  call void @free_candy_value(ptr %4152)
  %4153 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.566, align 8
  call void @free_candy_value(ptr %4153)
  %4154 = load ptr, ptr @204, align 8
  call void @free_candy_value(ptr %4154)
  %4155 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.568, align 8
  call void @free_candy_value(ptr %4155)
  %4156 = load ptr, ptr @205, align 8
  call void @free_candy_value(ptr %4156)
  %4157 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_matched, align 8
  call void @free_candy_value(ptr %4157)
  %4158 = load ptr, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  call void @free_candy_value(ptr %4158)
  %4159 = load ptr, ptr @tag_More.569, align 8
  call void @free_candy_value(ptr %4159)
  %4160 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  call void @free_candy_value(ptr %4160)
  %4161 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  call void @free_candy_value(ptr %4161)
  %4162 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.571, align 8
  call void @free_candy_value(ptr %4162)
  %4163 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  call void @free_candy_value(ptr %4163)
  %4164 = load ptr, ptr @206, align 8
  call void @free_candy_value(ptr %4164)
  %4165 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.573, align 8
  call void @free_candy_value(ptr %4165)
  %4166 = load ptr, ptr @207, align 8
  call void @free_candy_value(ptr %4166)
  %4167 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.575, align 8
  call void @free_candy_value(ptr %4167)
  %4168 = load ptr, ptr @208, align 8
  call void @free_candy_value(ptr %4168)
  %4169 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4169)
  %4170 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.577, align 8
  call void @free_candy_value(ptr %4170)
  %4171 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.579, align 8
  call void @free_candy_value(ptr %4171)
  %4172 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.581, align 8
  call void @free_candy_value(ptr %4172)
  %4173 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.583, align 8
  call void @free_candy_value(ptr %4173)
  %4174 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  call void @free_candy_value(ptr %4174)
  %4175 = load ptr, ptr @209, align 8
  call void @free_candy_value(ptr %4175)
  %4176 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  call void @free_candy_value(ptr %4176)
  %4177 = load ptr, ptr @210, align 8
  call void @free_candy_value(ptr %4177)
  %4178 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  call void @free_candy_value(ptr %4178)
  %4179 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.585, align 8
  call void @free_candy_value(ptr %4179)
  %4180 = load ptr, ptr @211, align 8
  call void @free_candy_value(ptr %4180)
  %4181 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.587, align 8
  call void @free_candy_value(ptr %4181)
  %4182 = load ptr, ptr @212, align 8
  call void @free_candy_value(ptr %4182)
  %4183 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.589, align 8
  call void @free_candy_value(ptr %4183)
  %4184 = load ptr, ptr @213, align 8
  call void @free_candy_value(ptr %4184)
  %4185 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  call void @free_candy_value(ptr %4185)
  %4186 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.591, align 8
  call void @free_candy_value(ptr %4186)
  %4187 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.593, align 8
  call void @free_candy_value(ptr %4187)
  %4188 = load ptr, ptr @214, align 8
  call void @free_candy_value(ptr %4188)
  %4189 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.595, align 8
  call void @free_candy_value(ptr %4189)
  %4190 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.597, align 8
  call void @free_candy_value(ptr %4190)
  %4191 = load ptr, ptr @215, align 8
  call void @free_candy_value(ptr %4191)
  %4192 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.599, align 8
  call void @free_candy_value(ptr %4192)
  %4193 = load ptr, ptr @216, align 8
  call void @free_candy_value(ptr %4193)
  %4194 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_matched, align 8
  call void @free_candy_value(ptr %4194)
  %4195 = load ptr, ptr @tag_More.600, align 8
  call void @free_candy_value(ptr %4195)
  %4196 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4196)
  %4197 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4197)
  %4198 = load ptr, ptr @fun_Core_controlFlow_recursive_18.602, align 8
  call void @free_candy_value(ptr %4198)
  %4199 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.604, align 8
  call void @free_candy_value(ptr %4199)
  %4200 = load ptr, ptr @fun_Core_iterator_takeWhile, align 8
  call void @free_candy_value(ptr %4200)
  %4201 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  call void @free_candy_value(ptr %4201)
  %4202 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  call void @free_candy_value(ptr %4202)
  %4203 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  call void @free_candy_value(ptr %4203)
  %4204 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.606, align 8
  call void @free_candy_value(ptr %4204)
  %4205 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  call void @free_candy_value(ptr %4205)
  %4206 = load ptr, ptr @217, align 8
  call void @free_candy_value(ptr %4206)
  %4207 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.608, align 8
  call void @free_candy_value(ptr %4207)
  %4208 = load ptr, ptr @218, align 8
  call void @free_candy_value(ptr %4208)
  %4209 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.610, align 8
  call void @free_candy_value(ptr %4209)
  %4210 = load ptr, ptr @219, align 8
  call void @free_candy_value(ptr %4210)
  %4211 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4211)
  %4212 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.612, align 8
  call void @free_candy_value(ptr %4212)
  %4213 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.614, align 8
  call void @free_candy_value(ptr %4213)
  %4214 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.616, align 8
  call void @free_candy_value(ptr %4214)
  %4215 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.618, align 8
  call void @free_candy_value(ptr %4215)
  %4216 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  call void @free_candy_value(ptr %4216)
  %4217 = load ptr, ptr @220, align 8
  call void @free_candy_value(ptr %4217)
  %4218 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  call void @free_candy_value(ptr %4218)
  %4219 = load ptr, ptr @221, align 8
  call void @free_candy_value(ptr %4219)
  %4220 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  call void @free_candy_value(ptr %4220)
  %4221 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.620, align 8
  call void @free_candy_value(ptr %4221)
  %4222 = load ptr, ptr @222, align 8
  call void @free_candy_value(ptr %4222)
  %4223 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.622, align 8
  call void @free_candy_value(ptr %4223)
  %4224 = load ptr, ptr @223, align 8
  call void @free_candy_value(ptr %4224)
  %4225 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.624, align 8
  call void @free_candy_value(ptr %4225)
  %4226 = load ptr, ptr @224, align 8
  call void @free_candy_value(ptr %4226)
  %4227 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  call void @free_candy_value(ptr %4227)
  %4228 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.626, align 8
  call void @free_candy_value(ptr %4228)
  %4229 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.628, align 8
  call void @free_candy_value(ptr %4229)
  %4230 = load ptr, ptr @225, align 8
  call void @free_candy_value(ptr %4230)
  %4231 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.630, align 8
  call void @free_candy_value(ptr %4231)
  %4232 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.632, align 8
  call void @free_candy_value(ptr %4232)
  %4233 = load ptr, ptr @226, align 8
  call void @free_candy_value(ptr %4233)
  %4234 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.634, align 8
  call void @free_candy_value(ptr %4234)
  %4235 = load ptr, ptr @227, align 8
  call void @free_candy_value(ptr %4235)
  %4236 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  call void @free_candy_value(ptr %4236)
  %4237 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  call void @free_candy_value(ptr %4237)
  %4238 = load ptr, ptr @tag_More.635, align 8
  call void @free_candy_value(ptr %4238)
  %4239 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4239)
  %4240 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  call void @free_candy_value(ptr %4240)
  %4241 = load ptr, ptr @fun_Core_iterator_take_34, align 8
  call void @free_candy_value(ptr %4241)
  %4242 = load ptr, ptr @fun_Core_iterator_take, align 8
  call void @free_candy_value(ptr %4242)
  %4243 = load ptr, ptr @fun_Core_iterator_take_26, align 8
  call void @free_candy_value(ptr %4243)
  %4244 = load ptr, ptr @fun_Core_iterator_take_31, align 8
  call void @free_candy_value(ptr %4244)
  %4245 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  call void @free_candy_value(ptr %4245)
  %4246 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  call void @free_candy_value(ptr %4246)
  %4247 = load ptr, ptr @228, align 8
  call void @free_candy_value(ptr %4247)
  %4248 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  call void @free_candy_value(ptr %4248)
  %4249 = load ptr, ptr @229, align 8
  call void @free_candy_value(ptr %4249)
  %4250 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4250)
  %4251 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then.637, align 8
  call void @free_candy_value(ptr %4251)
  %4252 = load ptr, ptr @230, align 8
  call void @free_candy_value(ptr %4252)
  %4253 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else.639, align 8
  call void @free_candy_value(ptr %4253)
  %4254 = load ptr, ptr @231, align 8
  call void @free_candy_value(ptr %4254)
  %4255 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then.641, align 8
  call void @free_candy_value(ptr %4255)
  %4256 = load ptr, ptr @232, align 8
  call void @free_candy_value(ptr %4256)
  %4257 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4257)
  %4258 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.643, align 8
  call void @free_candy_value(ptr %4258)
  %4259 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  call void @free_candy_value(ptr %4259)
  %4260 = load ptr, ptr @233, align 8
  call void @free_candy_value(ptr %4260)
  %4261 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.645, align 8
  call void @free_candy_value(ptr %4261)
  %4262 = load ptr, ptr @fun_Core_iterator_skip_30_6, align 8
  call void @free_candy_value(ptr %4262)
  %4263 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  call void @free_candy_value(ptr %4263)
  %4264 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  call void @free_candy_value(ptr %4264)
  %4265 = load ptr, ptr @234, align 8
  call void @free_candy_value(ptr %4265)
  %4266 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  call void @free_candy_value(ptr %4266)
  %4267 = load ptr, ptr @235, align 8
  call void @free_candy_value(ptr %4267)
  %4268 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  call void @free_candy_value(ptr %4268)
  %4269 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.647, align 8
  call void @free_candy_value(ptr %4269)
  %4270 = load ptr, ptr @236, align 8
  call void @free_candy_value(ptr %4270)
  %4271 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.649, align 8
  call void @free_candy_value(ptr %4271)
  %4272 = load ptr, ptr @237, align 8
  call void @free_candy_value(ptr %4272)
  %4273 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.651, align 8
  call void @free_candy_value(ptr %4273)
  %4274 = load ptr, ptr @238, align 8
  call void @free_candy_value(ptr %4274)
  %4275 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  call void @free_candy_value(ptr %4275)
  %4276 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.653, align 8
  call void @free_candy_value(ptr %4276)
  %4277 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  call void @free_candy_value(ptr %4277)
  %4278 = load ptr, ptr @239, align 8
  call void @free_candy_value(ptr %4278)
  %4279 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.655, align 8
  call void @free_candy_value(ptr %4279)
  %4280 = load ptr, ptr @fun_Core_iterator_skip_30_6_7, align 8
  call void @free_candy_value(ptr %4280)
  %4281 = load ptr, ptr @fun_Core_iterator_skip_30_6_8, align 8
  call void @free_candy_value(ptr %4281)
  %4282 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  call void @free_candy_value(ptr %4282)
  %4283 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.657, align 8
  call void @free_candy_value(ptr %4283)
  %4284 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  call void @free_candy_value(ptr %4284)
  %4285 = load ptr, ptr @240, align 8
  call void @free_candy_value(ptr %4285)
  %4286 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.659, align 8
  call void @free_candy_value(ptr %4286)
  %4287 = load ptr, ptr @241, align 8
  call void @free_candy_value(ptr %4287)
  %4288 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.661, align 8
  call void @free_candy_value(ptr %4288)
  %4289 = load ptr, ptr @242, align 8
  call void @free_candy_value(ptr %4289)
  %4290 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %4290)
  %4291 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.663, align 8
  call void @free_candy_value(ptr %4291)
  %4292 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.665, align 8
  call void @free_candy_value(ptr %4292)
  %4293 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.667, align 8
  call void @free_candy_value(ptr %4293)
  %4294 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.669, align 8
  call void @free_candy_value(ptr %4294)
  %4295 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  call void @free_candy_value(ptr %4295)
  %4296 = load ptr, ptr @243, align 8
  call void @free_candy_value(ptr %4296)
  %4297 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  call void @free_candy_value(ptr %4297)
  %4298 = load ptr, ptr @244, align 8
  call void @free_candy_value(ptr %4298)
  %4299 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  call void @free_candy_value(ptr %4299)
  %4300 = load ptr, ptr @245, align 8
  call void @free_candy_value(ptr %4300)
  %4301 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  call void @free_candy_value(ptr %4301)
  %4302 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.671, align 8
  call void @free_candy_value(ptr %4302)
  %4303 = load ptr, ptr @246, align 8
  call void @free_candy_value(ptr %4303)
  %4304 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.673, align 8
  call void @free_candy_value(ptr %4304)
  %4305 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.675, align 8
  call void @free_candy_value(ptr %4305)
  %4306 = load ptr, ptr @247, align 8
  call void @free_candy_value(ptr %4306)
  %4307 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.677, align 8
  call void @free_candy_value(ptr %4307)
  %4308 = load ptr, ptr @248, align 8
  call void @free_candy_value(ptr %4308)
  %4309 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_matched, align 8
  call void @free_candy_value(ptr %4309)
  %4310 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %4310)
  %4311 = load ptr, ptr @fun_Core_controlFlow_recursive_18.679, align 8
  call void @free_candy_value(ptr %4311)
  %4312 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.681, align 8
  call void @free_candy_value(ptr %4312)
  %4313 = load ptr, ptr @fun_Core_iterator_skip, align 8
  call void @free_candy_value(ptr %4313)
  %4314 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  call void @free_candy_value(ptr %4314)
  %4315 = load ptr, ptr @fun_Core_iterator_skip_30, align 8
  call void @free_candy_value(ptr %4315)
  %4316 = load ptr, ptr @tag_Iterator.682, align 8
  call void @free_candy_value(ptr %4316)
  %4317 = load ptr, ptr @fun_Core_iterator_fromList, align 8
  call void @free_candy_value(ptr %4317)
  %4318 = load ptr, ptr @fun_Core_iterator_fromList_23, align 8
  call void @free_candy_value(ptr %4318)
  %4319 = load ptr, ptr @249, align 8
  call void @free_candy_value(ptr %4319)
  %4320 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  call void @free_candy_value(ptr %4320)
  %4321 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  call void @free_candy_value(ptr %4321)
  %4322 = load ptr, ptr @fun_Core_iterator_windowed, align 8
  call void @free_candy_value(ptr %4322)
  %4323 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  call void @free_candy_value(ptr %4323)
  %4324 = load ptr, ptr @fun_Core_iterator_windowed_67, align 8
  call void @free_candy_value(ptr %4324)
  %4325 = load ptr, ptr @fun_Core_iterator_windowed_67_20, align 8
  call void @free_candy_value(ptr %4325)
  %4326 = load ptr, ptr @fun_Core_iterator_windowed_67_21, align 8
  call void @free_candy_value(ptr %4326)
  %4327 = load ptr, ptr @fun_Core_iterator_windowed_67_26, align 8
  call void @free_candy_value(ptr %4327)
  %4328 = load ptr, ptr @tag_More.683, align 8
  call void @free_candy_value(ptr %4328)
  %4329 = load ptr, ptr @fun_Core_iterator_chunked, align 8
  call void @free_candy_value(ptr %4329)
  %4330 = load ptr, ptr @fun_Core_iterator_chunked_26, align 8
  call void @free_candy_value(ptr %4330)
  %4331 = load ptr, ptr @250, align 8
  call void @free_candy_value(ptr %4331)
  %4332 = load ptr, ptr @num_6, align 8
  call void @free_candy_value(ptr %4332)
  %4333 = load ptr, ptr @num_7, align 8
  call void @free_candy_value(ptr %4333)
  %4334 = load ptr, ptr @num_8, align 8
  call void @free_candy_value(ptr %4334)
  %4335 = load ptr, ptr @num_9, align 8
  call void @free_candy_value(ptr %4335)
  %4336 = load ptr, ptr @251, align 8
  call void @free_candy_value(ptr %4336)
  %4337 = load ptr, ptr @"Core:iterator:123", align 8
  call void @free_candy_value(ptr %4337)
  %4338 = load ptr, ptr @"Core:iterator:127", align 8
  call void @free_candy_value(ptr %4338)
  %4339 = load ptr, ptr @"Core:iterator:128", align 8
  call void @free_candy_value(ptr %4339)
  %4340 = load ptr, ptr @fun_Core_iterator_128_equals_then, align 8
  call void @free_candy_value(ptr %4340)
  %4341 = load ptr, ptr @fun_Core_iterator_128_equals_then.685, align 8
  call void @free_candy_value(ptr %4341)
  %4342 = load ptr, ptr @fun_Core_iterator_128_equals_then.687, align 8
  call void @free_candy_value(ptr %4342)
  %4343 = load ptr, ptr @fun_Core_iterator_128_equals_then.689, align 8
  call void @free_candy_value(ptr %4343)
  %4344 = load ptr, ptr @fun_Core_iterator_128_hasKey_then, align 8
  call void @free_candy_value(ptr %4344)
  %4345 = load ptr, ptr @252, align 8
  call void @free_candy_value(ptr %4345)
  %4346 = load ptr, ptr @fun_Core_iterator_128_hasKey_else, align 8
  call void @free_candy_value(ptr %4346)
  %4347 = load ptr, ptr @253, align 8
  call void @free_candy_value(ptr %4347)
  %4348 = load ptr, ptr @fun_Core_iterator_128_isMatch_then, align 8
  call void @free_candy_value(ptr %4348)
  %4349 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.691, align 8
  call void @free_candy_value(ptr %4349)
  %4350 = load ptr, ptr @254, align 8
  call void @free_candy_value(ptr %4350)
  %4351 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.693, align 8
  call void @free_candy_value(ptr %4351)
  %4352 = load ptr, ptr @255, align 8
  call void @free_candy_value(ptr %4352)
  %4353 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.695, align 8
  call void @free_candy_value(ptr %4353)
  %4354 = load ptr, ptr @256, align 8
  call void @free_candy_value(ptr %4354)
  %4355 = load ptr, ptr @fun_Core_iterator_128_isMatch_else, align 8
  call void @free_candy_value(ptr %4355)
  %4356 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.697, align 8
  call void @free_candy_value(ptr %4356)
  %4357 = load ptr, ptr @fun_Core_iterator_128_equals_else, align 8
  call void @free_candy_value(ptr %4357)
  %4358 = load ptr, ptr @257, align 8
  call void @free_candy_value(ptr %4358)
  %4359 = load ptr, ptr @fun_Core_iterator_128_equals_else.699, align 8
  call void @free_candy_value(ptr %4359)
  %4360 = load ptr, ptr @fun_Core_iterator_128_equals_else.701, align 8
  call void @free_candy_value(ptr %4360)
  %4361 = load ptr, ptr @258, align 8
  call void @free_candy_value(ptr %4361)
  %4362 = load ptr, ptr @fun_Core_iterator_128_equals_else.703, align 8
  call void @free_candy_value(ptr %4362)
  %4363 = load ptr, ptr @259, align 8
  call void @free_candy_value(ptr %4363)
  %4364 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.705, align 8
  call void @free_candy_value(ptr %4364)
  %4365 = load ptr, ptr @"Core:iterator:item", align 8
  call void @free_candy_value(ptr %4365)
  %4366 = load ptr, ptr @"Core:iterator:rest", align 8
  call void @free_candy_value(ptr %4366)
  %4367 = load ptr, ptr @"Core:iterator:133", align 8
  call void @free_candy_value(ptr %4367)
  %4368 = load ptr, ptr @"Core:iterator:136", align 8
  call void @free_candy_value(ptr %4368)
  %4369 = load ptr, ptr @"Core:iterator:137", align 8
  call void @free_candy_value(ptr %4369)
  %4370 = load ptr, ptr @fun_Core_iterator_137_equals_then, align 8
  call void @free_candy_value(ptr %4370)
  %4371 = load ptr, ptr @fun_Core_iterator_137_equals_then.707, align 8
  call void @free_candy_value(ptr %4371)
  %4372 = load ptr, ptr @fun_Core_iterator_137_equals_then.709, align 8
  call void @free_candy_value(ptr %4372)
  %4373 = load ptr, ptr @fun_Core_iterator_137_equals_then.711, align 8
  call void @free_candy_value(ptr %4373)
  %4374 = load ptr, ptr @fun_Core_iterator_137_hasKey_then, align 8
  call void @free_candy_value(ptr %4374)
  %4375 = load ptr, ptr @260, align 8
  call void @free_candy_value(ptr %4375)
  %4376 = load ptr, ptr @fun_Core_iterator_137_hasKey_else, align 8
  call void @free_candy_value(ptr %4376)
  %4377 = load ptr, ptr @261, align 8
  call void @free_candy_value(ptr %4377)
  %4378 = load ptr, ptr @fun_Core_iterator_137_isMatch_then, align 8
  call void @free_candy_value(ptr %4378)
  %4379 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.713, align 8
  call void @free_candy_value(ptr %4379)
  %4380 = load ptr, ptr @262, align 8
  call void @free_candy_value(ptr %4380)
  %4381 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.715, align 8
  call void @free_candy_value(ptr %4381)
  %4382 = load ptr, ptr @263, align 8
  call void @free_candy_value(ptr %4382)
  %4383 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.717, align 8
  call void @free_candy_value(ptr %4383)
  %4384 = load ptr, ptr @264, align 8
  call void @free_candy_value(ptr %4384)
  %4385 = load ptr, ptr @fun_Core_iterator_137_isMatch_else, align 8
  call void @free_candy_value(ptr %4385)
  %4386 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.719, align 8
  call void @free_candy_value(ptr %4386)
  %4387 = load ptr, ptr @fun_Core_iterator_137_equals_else, align 8
  call void @free_candy_value(ptr %4387)
  %4388 = load ptr, ptr @265, align 8
  call void @free_candy_value(ptr %4388)
  %4389 = load ptr, ptr @fun_Core_iterator_137_equals_else.721, align 8
  call void @free_candy_value(ptr %4389)
  %4390 = load ptr, ptr @fun_Core_iterator_137_equals_else.723, align 8
  call void @free_candy_value(ptr %4390)
  %4391 = load ptr, ptr @266, align 8
  call void @free_candy_value(ptr %4391)
  %4392 = load ptr, ptr @fun_Core_iterator_137_equals_else.725, align 8
  call void @free_candy_value(ptr %4392)
  %4393 = load ptr, ptr @267, align 8
  call void @free_candy_value(ptr %4393)
  %4394 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.727, align 8
  call void @free_candy_value(ptr %4394)
  %4395 = load ptr, ptr @"Core:iterator:item#1", align 8
  call void @free_candy_value(ptr %4395)
  %4396 = load ptr, ptr @"Core:iterator:rest#1", align 8
  call void @free_candy_value(ptr %4396)
  %4397 = load ptr, ptr @"Core:iterator:142", align 8
  call void @free_candy_value(ptr %4397)
  %4398 = load ptr, ptr @"Core:iterator:147", align 8
  call void @free_candy_value(ptr %4398)
  %4399 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  call void @free_candy_value(ptr %4399)
  %4400 = load ptr, ptr @"Core:iterator:149", align 8
  call void @free_candy_value(ptr %4400)
  %4401 = load ptr, ptr @"Core:iterator:154", align 8
  call void @free_candy_value(ptr %4401)
  %4402 = load ptr, ptr @"Core:iterator:155", align 8
  call void @free_candy_value(ptr %4402)
  %4403 = load ptr, ptr @fun_Core_iterator_isEmpty_2.729, align 8
  call void @free_candy_value(ptr %4403)
  %4404 = load ptr, ptr @"Core:iterator:157", align 8
  call void @free_candy_value(ptr %4404)
  %4405 = load ptr, ptr @"Core:iterator:161:10", align 8
  call void @free_candy_value(ptr %4405)
  %4406 = load ptr, ptr @fun_Core_iterator_161, align 8
  call void @free_candy_value(ptr %4406)
  %4407 = load ptr, ptr @"Core:iterator:162", align 8
  call void @free_candy_value(ptr %4407)
  %4408 = load ptr, ptr @"Core:iterator:164", align 8
  call void @free_candy_value(ptr %4408)
  %4409 = load ptr, ptr @fun_Core_iterator_toList_2.731, align 8
  call void @free_candy_value(ptr %4409)
  %4410 = load ptr, ptr @268, align 8
  call void @free_candy_value(ptr %4410)
  %4411 = load ptr, ptr @"Core:iterator:169", align 8
  call void @free_candy_value(ptr %4411)
  %4412 = load ptr, ptr @"Core:iterator:173", align 8
  call void @free_candy_value(ptr %4412)
  %4413 = load ptr, ptr @"Core:iterator:175", align 8
  call void @free_candy_value(ptr %4413)
  %4414 = load ptr, ptr @"Core:iterator:179", align 8
  call void @free_candy_value(ptr %4414)
  %4415 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  call void @free_candy_value(ptr %4415)
  %4416 = load ptr, ptr @"Core:iterator:181", align 8
  call void @free_candy_value(ptr %4416)
  %4417 = load ptr, ptr @"Core:iterator:185:9", align 8
  call void @free_candy_value(ptr %4417)
  %4418 = load ptr, ptr @fun_Core_iterator_185, align 8
  call void @free_candy_value(ptr %4418)
  %4419 = load ptr, ptr @"Core:iterator:186", align 8
  call void @free_candy_value(ptr %4419)
  %4420 = load ptr, ptr @"Core:iterator:188", align 8
  call void @free_candy_value(ptr %4420)
  %4421 = load ptr, ptr @fun_Core_iterator_192, align 8
  call void @free_candy_value(ptr %4421)
  %4422 = load ptr, ptr @"Core:iterator:193", align 8
  call void @free_candy_value(ptr %4422)
  %4423 = load ptr, ptr @"Core:iterator:195", align 8
  call void @free_candy_value(ptr %4423)
  %4424 = load ptr, ptr @"Core:iterator:200", align 8
  call void @free_candy_value(ptr %4424)
  %4425 = load ptr, ptr @"Core:iterator:202", align 8
  call void @free_candy_value(ptr %4425)
  %4426 = load ptr, ptr @text_123, align 8
  call void @free_candy_value(ptr %4426)
  %4427 = load ptr, ptr @"Core:iterator:210", align 8
  call void @free_candy_value(ptr %4427)
  %4428 = load ptr, ptr @"Core:iterator:214:9", align 8
  call void @free_candy_value(ptr %4428)
  %4429 = load ptr, ptr @fun_Core_iterator_214, align 8
  call void @free_candy_value(ptr %4429)
  %4430 = load ptr, ptr @"Core:iterator:215", align 8
  call void @free_candy_value(ptr %4430)
  %4431 = load ptr, ptr @"Core:iterator:217", align 8
  call void @free_candy_value(ptr %4431)
  %4432 = load ptr, ptr @fun_Core_iterator_toList_2.733, align 8
  call void @free_candy_value(ptr %4432)
  %4433 = load ptr, ptr @269, align 8
  call void @free_candy_value(ptr %4433)
  %4434 = load ptr, ptr @"Core:iterator:224", align 8
  call void @free_candy_value(ptr %4434)
  %4435 = load ptr, ptr @"Core:iterator:228:10", align 8
  call void @free_candy_value(ptr %4435)
  %4436 = load ptr, ptr @fun_Core_iterator_228, align 8
  call void @free_candy_value(ptr %4436)
  %4437 = load ptr, ptr @"Core:iterator:229", align 8
  call void @free_candy_value(ptr %4437)
  %4438 = load ptr, ptr @"Core:iterator:231", align 8
  call void @free_candy_value(ptr %4438)
  %4439 = load ptr, ptr @fun_Core_iterator_toList_2.735, align 8
  call void @free_candy_value(ptr %4439)
  %4440 = load ptr, ptr @"Core:iterator:236", align 8
  call void @free_candy_value(ptr %4440)
  %4441 = load ptr, ptr @"Core:iterator:241", align 8
  call void @free_candy_value(ptr %4441)
  %4442 = load ptr, ptr @"Core:iterator:243", align 8
  call void @free_candy_value(ptr %4442)
  %4443 = load ptr, ptr @fun_Core_iterator_toList_2.737, align 8
  call void @free_candy_value(ptr %4443)
  %4444 = load ptr, ptr @270, align 8
  call void @free_candy_value(ptr %4444)
  %4445 = load ptr, ptr @"Core:iterator:249", align 8
  call void @free_candy_value(ptr %4445)
  %4446 = load ptr, ptr @num_12, align 8
  call void @free_candy_value(ptr %4446)
  %4447 = load ptr, ptr @"Core:iterator:254", align 8
  call void @free_candy_value(ptr %4447)
  %4448 = load ptr, ptr @"Core:iterator:256", align 8
  call void @free_candy_value(ptr %4448)
  %4449 = load ptr, ptr @fun_Core_iterator_toList_2.739, align 8
  call void @free_candy_value(ptr %4449)
  %4450 = load ptr, ptr @"Core:iterator:268", align 8
  call void @free_candy_value(ptr %4450)
  %4451 = load ptr, ptr @"Core:iterator:273", align 8
  call void @free_candy_value(ptr %4451)
  %4452 = load ptr, ptr @"Core:iterator:275", align 8
  call void @free_candy_value(ptr %4452)
  %4453 = load ptr, ptr @fun_Core_iterator_toList_2.741, align 8
  call void @free_candy_value(ptr %4453)
  %4454 = load ptr, ptr @271, align 8
  call void @free_candy_value(ptr %4454)
  %4455 = load ptr, ptr @"Core:iterator:283", align 8
  call void @free_candy_value(ptr %4455)
  %4456 = load ptr, ptr @num_40, align 8
  call void @free_candy_value(ptr %4456)
  %4457 = load ptr, ptr @"Core:iterator:288", align 8
  call void @free_candy_value(ptr %4457)
  %4458 = load ptr, ptr @"Core:iterator:290", align 8
  call void @free_candy_value(ptr %4458)
  %4459 = load ptr, ptr @fun_Core_iterator_toList_2.743, align 8
  call void @free_candy_value(ptr %4459)
  %4460 = load ptr, ptr @"Core:iterator:292", align 8
  call void @free_candy_value(ptr %4460)
  %4461 = load ptr, ptr @"Core:iterator:299", align 8
  call void @free_candy_value(ptr %4461)
  %4462 = load ptr, ptr @"Core:iterator:301", align 8
  call void @free_candy_value(ptr %4462)
  %4463 = load ptr, ptr @fun_Core_iterator_toList_2.745, align 8
  call void @free_candy_value(ptr %4463)
  %4464 = load ptr, ptr @272, align 8
  call void @free_candy_value(ptr %4464)
  %4465 = load ptr, ptr @273, align 8
  call void @free_candy_value(ptr %4465)
  %4466 = load ptr, ptr @274, align 8
  call void @free_candy_value(ptr %4466)
  %4467 = load ptr, ptr @"Core:iterator:318", align 8
  call void @free_candy_value(ptr %4467)
  %4468 = load ptr, ptr @"Core:iterator:323", align 8
  call void @free_candy_value(ptr %4468)
  %4469 = load ptr, ptr @"Core:iterator:325", align 8
  call void @free_candy_value(ptr %4469)
  %4470 = load ptr, ptr @fun_Core_iterator_toList_2.747, align 8
  call void @free_candy_value(ptr %4470)
  %4471 = load ptr, ptr @275, align 8
  call void @free_candy_value(ptr %4471)
  %4472 = load ptr, ptr @276, align 8
  call void @free_candy_value(ptr %4472)
  %4473 = load ptr, ptr @277, align 8
  call void @free_candy_value(ptr %4473)
  %4474 = load ptr, ptr @278, align 8
  call void @free_candy_value(ptr %4474)
  %4475 = load ptr, ptr @"Core:iterator:341", align 8
  call void @free_candy_value(ptr %4475)
  %4476 = load ptr, ptr @"Examples:sqrt:sqrt:9", align 8
  call void @free_candy_value(ptr %4476)
  %4477 = load ptr, ptr @"text_`fixedDecimal.is x` was not satisfied", align 8
  call void @free_candy_value(ptr %4477)
  %4478 = load ptr, ptr @"Examples:sqrt:sqrt:11", align 8
  call void @free_candy_value(ptr %4478)
  %4479 = load ptr, ptr @"Examples:sqrt:sqrt:21", align 8
  call void @free_candy_value(ptr %4479)
  %4480 = load ptr, ptr @"text_`fixedDecimal.isNonNegative x` was not satisfied", align 8
  call void @free_candy_value(ptr %4480)
  %4481 = load ptr, ptr @"Examples:sqrt:sqrt:23", align 8
  call void @free_candy_value(ptr %4481)
  %4482 = load ptr, ptr @"text_`int.is precision` was not satisfied", align 8
  call void @free_candy_value(ptr %4482)
  %4483 = load ptr, ptr @"Examples:sqrt:sqrt:35", align 8
  call void @free_candy_value(ptr %4483)
  %4484 = load ptr, ptr @"Examples:sqrt:sqrt:45", align 8
  call void @free_candy_value(ptr %4484)
  %4485 = load ptr, ptr @"text_`int.isNonNegative precision` was not satisfied", align 8
  call void @free_candy_value(ptr %4485)
  %4486 = load ptr, ptr @"Examples:sqrt:sqrt:47", align 8
  call void @free_candy_value(ptr %4486)
  %4487 = load ptr, ptr @"Examples:sqrt:sqrt:58", align 8
  call void @free_candy_value(ptr %4487)
  %4488 = load ptr, ptr @"Examples:sqrt:sqrt:81", align 8
  call void @free_candy_value(ptr %4488)
  %4489 = load ptr, ptr @"Examples:sqrt:sqrt:82:28", align 8
  call void @free_candy_value(ptr %4489)
  %4490 = load ptr, ptr @"Examples:sqrt:sqrt:82:29", align 8
  call void @free_candy_value(ptr %4490)
  %4491 = load ptr, ptr @"Examples:sqrt:sqrt:82:41", align 8
  call void @free_candy_value(ptr %4491)
  %4492 = load ptr, ptr @"Examples:sqrt:sqrt:82:55", align 8
  call void @free_candy_value(ptr %4492)
  %4493 = load ptr, ptr @"Examples:sqrt:sqrt:82:57:2", align 8
  call void @free_candy_value(ptr %4493)
  %4494 = load ptr, ptr @"Examples:sqrt:sqrt:82:58", align 8
  call void @free_candy_value(ptr %4494)
  %4495 = load ptr, ptr @"Examples:sqrt:sqrt:83", align 8
  call void @free_candy_value(ptr %4495)
  %4496 = load ptr, ptr @fun_Examples_sqrt_sqrt, align 8
  call void @free_candy_value(ptr %4496)
  %4497 = load ptr, ptr @fun_Examples_sqrt_sqrt_82, align 8
  call void @free_candy_value(ptr %4497)
  %4498 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_56, align 8
  call void @free_candy_value(ptr %4498)
  %4499 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_57, align 8
  call void @free_candy_value(ptr %4499)
  %4500 = load ptr, ptr @fun_Core_controlFlow_recursive_18.749, align 8
  call void @free_candy_value(ptr %4500)
  %4501 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.751, align 8
  call void @free_candy_value(ptr %4501)
  %4502 = load ptr, ptr @num_65, align 8
  call void @free_candy_value(ptr %4502)
  %4503 = load ptr, ptr @"Examples:sqrt:main:14", align 8
  call void @free_candy_value(ptr %4503)
  %4504 = load ptr, ptr @"Examples:sqrt:main:47", align 8
  call void @free_candy_value(ptr %4504)
  %4505 = load ptr, ptr @"Examples:sqrt:main:48", align 8
  call void @free_candy_value(ptr %4505)
  %4506 = load ptr, ptr @"Examples:sqrt:main:49", align 8
  call void @free_candy_value(ptr %4506)
  %4507 = load ptr, ptr @"Examples:sqrt:main:51:0", align 8
  call void @free_candy_value(ptr %4507)
  %4508 = load ptr, ptr @"Examples:sqrt:main:52", align 8
  call void @free_candy_value(ptr %4508)
  %4509 = load ptr, ptr @"text_The root of 2 is ", align 8
  call void @free_candy_value(ptr %4509)
  %4510 = load ptr, ptr @"Examples:sqrt:main:55", align 8
  call void @free_candy_value(ptr %4510)
  %4511 = load ptr, ptr @fun_Examples_sqrt_main, align 8
  call void @free_candy_value(ptr %4511)
  %4512 = load ptr, ptr @fun_Examples_sqrt_main_50, align 8
  call void @free_candy_value(ptr %4512)
  %4513 = load ptr, ptr @fun_Examples_sqrt_main_51, align 8
  call void @free_candy_value(ptr %4513)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_divide_truncating(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_remainder(ptr, ptr)

declare ptr @candy_builtin_int_shift_right(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

declare ptr @candy_builtin_print(ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_text_get_range(ptr, ptr, ptr)

declare ptr @candy_builtin_text_length(ptr)

declare ptr @candy_builtin_text_starts_with(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_itera":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %2, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %1, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__not(ptr %0) {
Builtins__not:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Builtins__not_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.5, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__not_1_equals_else.6, align 8
  %10 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Builtins__not_1_equals_else.6, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__not_1_case-0_didNotMatch, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %21 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %22 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %16, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Builtins__not_1_equals_then(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.1, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.2, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.3, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.4, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.2, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.4, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.1(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__not_1_equals_else.3(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__not_1_equals_else.5(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__not_1_case-0_didNotMatch(ptr %0) {
Builtins__not_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.7, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Builtins__not_1_equals_then.8, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.15, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__not_1_equals_else.16, align 8
  %18 = load ptr, ptr @fun_Builtins__not_1_equals_then.8, align 8
  %19 = load ptr, ptr @fun_Builtins__not_1_equals_else.16, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__not_1_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Builtins__not_1_equals_then.7(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.9, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.10, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.13, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.14, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.10, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.14, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.9(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.11, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else.12, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else.12, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else.11(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__not_1_equals_else.13(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__not_1_equals_else.15(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__not_1_case-1_didNotMatch(ptr %0) {
Builtins__not_1_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %7, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then)
  %12 = call ptr @Builtins__isNonNegative_13_equals_then(ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %7, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %29, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Builtins__isNonNegative_13_equals_then(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.17, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.18, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.19, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.20, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.18, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.20, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.17(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @7, align 8
  ret ptr @7
}

define ptr @Builtins__isNonNegative_13_equals_else.19(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.21, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.22, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.22)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.21(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isNonNegative_13_equals_then.21(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.23, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.24, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.27, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.28, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.24, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.28, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.23(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.25, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.26, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.26, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.25(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @9, align 8
  ret ptr @9
}

define ptr @Builtins__isNonNegative_13_equals_else.27(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @10, align 8
  ret ptr @10
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.29, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_then.30, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.30)
  %11 = call ptr @Builtins__isNonNegative_13_equals_then.29(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isNonNegative_13_equals_then.29(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.31, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.32, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.35, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.36, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.32, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.36, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.31(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.33, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.34, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.34, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.33(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @11, align 8
  ret ptr @11
}

define ptr @Builtins__isNonNegative_13_equals_else.35(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %12, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then)
  %17 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %12, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_0, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %30, ptr %31)
  %33 = load ptr, ptr @tag_Match, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %34, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.37, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.38, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.39, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.40, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.38, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.40, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.37(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @13, align 8
  ret ptr @13
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.39(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.41, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.42, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.42)
  %7 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.41(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.41(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.43, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.44, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.47, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.48, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.44, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.48, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.43(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.45, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.46, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.46, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.45(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @15, align 8
  ret ptr @15
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.47(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @16, align 8
  ret ptr @16
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.49, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.50, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.50)
  %11 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.49(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.49(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.51, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.52, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.55, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.56, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.52, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.56, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.51(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.53, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.54, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.54, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.53(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @17, align 8
  ret ptr @17
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.55(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.61, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.62, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.62, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %36 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_type_of(ptr %1)
  %41 = load ptr, ptr @tag_Function, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr null)
  %45 = call ptr @candy_builtin_type_of(ptr %1)
  %46 = load ptr, ptr @tag_Function, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %49 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr %49)
  %51 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %52 = load ptr, ptr @num_0, align 8
  %53 = call ptr @candy_builtin_equals(ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %55 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr null)
  %56 = call ptr @candy_builtin_type_of(ptr %2)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr null)
  %61 = call ptr @candy_builtin_type_of(ptr %2)
  %62 = load ptr, ptr @tag_Function, align 8
  %63 = call ptr @candy_builtin_equals(ptr %61, ptr %62)
  %64 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %65 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_equals(ptr %67, ptr %68)
  %70 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %71 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr null)
  %72 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %72
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.57, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.58, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.59, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.60, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.58, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.60, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.57(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @19, align 8
  ret ptr @19
}

define ptr @Builtins__ifElse_1_equals_else.59(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Builtins__ifElse_1_equals_else.61(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.63, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.64, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.71, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.72, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.64, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.72, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.63(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.65, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.66, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.69, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.70, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.66, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.70, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.65(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.67, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.68, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.68, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else.67(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @22, align 8
  ret ptr @22
}

define ptr @Builtins__ifElse_1_equals_else.69(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Builtins__ifElse_1_equals_else.71(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Builtins__ifElse_1_case-0_didNotMatch(ptr %0) {
Builtins__ifElse_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Builtins__intDivideTruncating(ptr %0, ptr %1) {
Builtins__intDivideTruncating:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_divide_truncating(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intRemainder(ptr %0, ptr %1) {
Builtins__intRemainder:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_remainder(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intShiftRight(ptr %0, ptr %1) {
Builtins__intShiftRight:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftRight_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftRight_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_right(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftRight_25(ptr %0) {
Builtins__intShiftRight_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftRight_26(ptr %0) {
Builtins__intShiftRight_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_list_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %20
}

define ptr @Builtins__textGetRange(ptr %0, ptr %1, ptr %2) {
Builtins__textGetRange:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_text_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_type_of(ptr %2)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @Builtins__isNonNegative(ptr %2)
  %26 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_text_length(ptr %0)
  %29 = call ptr @Builtins__isLessThanOrEqualTo(ptr %2, ptr %28)
  %30 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %2)
  %33 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = call ptr @candy_builtin_text_get_range(ptr %0, ptr %1, ptr %2)
  ret ptr %35
}

define ptr @"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText"(ptr %0) {
"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText":
  %1 = call ptr @candy_builtin_to_debug_text(ptr %0)
  ret ptr %1
}

define ptr @Core_function_is0(ptr %0) {
Core_function_is0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @Core_function_is0(ptr %0)
  %2 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Function, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:function:run:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:function:run:14", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %0)
  %17 = call ptr @get_candy_function_environment(ptr %0)
  %18 = call ptr (...) %16(ptr %17)
  ret ptr %18
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.77, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.78, align 8
  %10 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.78, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_is_1_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %34 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_is_1_equals_then(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.73, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.74, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.75, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.76, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.74, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.76, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.73(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_is_1_equals_else.75(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_is_1_equals_else.77(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.79, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.80, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.87, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.88, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.80, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.88, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.79(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.81, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.82, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.85, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.86, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.82, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.86, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.81(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.83, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else.84, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else.83(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_is_1_equals_else.85(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_is_1_equals_else.87(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_is_1_case-0_didNotMatch(ptr %0) {
Core_bool_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.93, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_not_6_equals_else.94, align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_else.94, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %19, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_bool_not_6_equals_then(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.89, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.90, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.91, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.92, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.90, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.92, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.89(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @31, align 8
  ret ptr @31
}

define ptr @Core_bool_not_6_equals_else.91(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Core_bool_not_6_equals_else.93(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.95, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_not_6_equals_then.96, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.103, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_not_6_equals_else.104, align 8
  %18 = load ptr, ptr @fun_Core_bool_not_6_equals_then.96, align 8
  %19 = load ptr, ptr @fun_Core_bool_not_6_equals_else.104, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_not_6_equals_then.95(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.97, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.98, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.101, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.102, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.98, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.102, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.97(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.99, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else.100, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else.100, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else.99(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @34, align 8
  ret ptr @34
}

define ptr @Core_bool_not_6_equals_else.101(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Core_bool_not_6_equals_else.103(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Core_bool_not_6_case-1_didNotMatch(ptr %0) {
Core_bool_not_6_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1) {
Core_bool_lazyAnd:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.109, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyAnd_18_equals_else.110, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.110, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %19, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %0, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %32 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %23, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_bool_lazyAnd_18_equals_then(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.105, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.106, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.107, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.108, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.106, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.108, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.105(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @37, align 8
  ret ptr @37
}

define ptr @Core_bool_lazyAnd_18_equals_else.107(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @38, align 8
  ret ptr @38
}

define ptr @Core_bool_lazyAnd_18_equals_else.109(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @39, align 8
  ret ptr @39
}

define ptr @Core_bool_lazyAnd_18_case-0_matched(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.111, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.112, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.119, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.120, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.112, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.120, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.111(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.113, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.114, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.117, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.118, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.114, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.118, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.113(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.115, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.116, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.116, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.115(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @40, align 8
  ret ptr @40
}

define ptr @Core_bool_lazyAnd_18_equals_else.117(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @41, align 8
  ret ptr @41
}

define ptr @Core_bool_lazyAnd_18_equals_else.119(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1) {
Core_bool_lazyOr:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.125, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyOr_18_equals_else.126, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.126, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %0, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %1, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 2
  store ptr %19, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %30 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %23, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_bool_lazyOr_18_equals_then(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.121, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.122, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.123, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.124, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.122, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.124, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.121(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @43, align 8
  ret ptr @43
}

define ptr @Core_bool_lazyOr_18_equals_else.123(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @44, align 8
  ret ptr @44
}

define ptr @Core_bool_lazyOr_18_equals_else.125(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @45, align 8
  ret ptr @45
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.127, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.128, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.135, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.136, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.128, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.136, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %20, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %33 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %34 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %24, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_lazyOr_18_equals_then.127(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.129, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.130, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.133, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.134, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.130, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.134, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.129(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.131, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.132, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.132, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.131(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @46, align 8
  ret ptr @46
}

define ptr @Core_bool_lazyOr_18_equals_else.133(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @47, align 8
  ret ptr @47
}

define ptr @Core_bool_lazyOr_18_equals_else.135(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Core_bool_lazyOr_18_case-1_matched(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_implies(ptr %0, ptr %1) {
Core_bool_implies:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_bool_is(ptr %1)
  %6 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_bool_not(ptr %0)
  %9 = call ptr @Core_bool_is(ptr %8)
  %10 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:bool:implies:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_bool_is(ptr %1)
  %14 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:bool:implies:15", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_or_12, align 8
  %20 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %21 = call ptr @Core_bool_lazyOr(ptr %8, ptr %20)
  ret ptr %21
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @"anonymous_$generated__needs_isConditionBool_else.137"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_check_check(ptr %0) {
Core_check_check:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_check_check_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else.143, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_check_check_1_equals_else.144, align 8
  %10 = load ptr, ptr @fun_Core_check_check_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_check_check_1_equals_else.144, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_check_check_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_check_check_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_check_check_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_check_check_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_check_check_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_check_check_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_check_check_1_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_check_check_1_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %34 = load ptr, ptr @fun_Core_check_check_1_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @"text_`isConditionBool` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = load ptr, ptr @tag_True, align 8
  %39 = call ptr @candy_builtin_equals(ptr %0, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr }, ptr %40, i32 0, i32 0
  store ptr %0, ptr %41, align 8
  %42 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else.155", ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %42, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.156", align 8
  %43 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %44 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else.156", align 8
  %45 = call ptr @candy_builtin_if_else(ptr %39, ptr %43, ptr %44)
  %46 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %47 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else.138", align 8
  %48 = call ptr @candy_builtin_if_else(ptr %45, ptr %46, ptr %47)
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %50 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else.157", ptr %49, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %50, ptr @"fun_anonymous_$generated__needs_condition_else.158", align 8
  %51 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %52 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else.158", align 8
  %53 = call ptr @candy_builtin_if_else(ptr %0, ptr %51, ptr %52)
  ret ptr %53
}

define ptr @Core_check_check_1_equals_then(ptr %0) {
Core_check_check_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_then.139, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_check_check_1_equals_then.140, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else.141, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_check_check_1_equals_else.142, align 8
  %14 = load ptr, ptr @fun_Core_check_check_1_equals_then.140, align 8
  %15 = load ptr, ptr @fun_Core_check_check_1_equals_else.142, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_check_check_1_equals_then.139(ptr %0) {
Core_check_check_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_check_check_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_check_check_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_check_check_1_equals_else(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_check_check_1_equals_else.141(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_check_check_1_equals_else.143(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_check_check_1_isMatch_then(ptr %0) {
Core_check_check_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_check_1_isMatch_else(ptr %0) {
Core_check_check_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_then.145, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_check_check_1_equals_then.146, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else.153, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_check_check_1_equals_else.154, align 8
  %14 = load ptr, ptr @fun_Core_check_check_1_equals_then.146, align 8
  %15 = load ptr, ptr @fun_Core_check_check_1_equals_else.154, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_check_check_1_equals_then.145(ptr %0) {
Core_check_check_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_then.147, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_check_check_1_equals_then.148, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else.151, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_check_check_1_equals_else.152, align 8
  %14 = load ptr, ptr @fun_Core_check_check_1_equals_then.148, align 8
  %15 = load ptr, ptr @fun_Core_check_check_1_equals_else.152, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_check_check_1_equals_then.147(ptr %0) {
Core_check_check_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_check_check_1_equals_else.149, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_check_check_1_equals_else.150, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_check_check_1_equals_else.150, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_check_check_1_equals_else.149(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_check_check_1_equals_else.151(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_check_check_1_equals_else.153(ptr %0) {
Core_check_check_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_check_check_1_case-0_didNotMatch(ptr %0) {
Core_check_check_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else.155"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_condition_else.157"() {
"anonymous_$generated__needs_condition_else":
  %0 = load ptr, ptr @"text_A check failed.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_check_checkEquals(ptr %0, ptr %1) {
Core_check_checkEquals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_check_checkEquals_14, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_check_checkEquals_14, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %0, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_check_checkEquals_15, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_check_checkEquals_15, align 8
  %12 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  %13 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %1)
  %16 = load ptr, ptr @tag_Text, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_check_checkEquals_21, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_check_checkEquals_21, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %1, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_check_checkEquals_22, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_check_checkEquals_22, align 8
  %24 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  %25 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_A check failed: Expected ", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %27, ptr %14)
  %29 = load ptr, ptr @"text_ to be ", align 8
  %30 = call ptr @candy_builtin_text_concatenate(ptr %28, ptr %29)
  %31 = call ptr @candy_builtin_text_concatenate(ptr %30, ptr %26)
  %32 = load ptr, ptr @text_., align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %31, ptr %32)
  %34 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %33, ptr null)
  ret ptr %34
}

define ptr @Core_check_checkEquals_14(ptr %0) {
Core_check_checkEquals_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_15(ptr %0) {
Core_check_checkEquals_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_check_checkEquals_21(ptr %0) {
Core_check_checkEquals_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_22(ptr %0) {
Core_check_checkEquals_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is2(ptr %0) {
Core_function_is2:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is2_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_compareTo(ptr %0, ptr %1) {
Core_int_compareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %24
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1) {
Core_int_isLessThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1) {
Core_int_isGreaterThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Greater, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1) {
Core_int_isGreaterThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_isLessThan(ptr %0, ptr %1)
  %13 = call ptr @Core_bool_not(ptr %12)
  ret ptr %13
}

define ptr @Core_int_isNonNegative(ptr %0) {
Core_int_isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @Core_int_isLessThan(ptr %0, ptr %12)
  %14 = call ptr @Core_bool_not(ptr %13)
  ret ptr %14
}

define ptr @Core_int_isEven(ptr %0) {
Core_int_isEven:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isEven:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_int_max(ptr %0, ptr %1) {
Core_int_max:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_int_max_15, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_int_max_15, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_max_16, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_max_16, align 8
  %19 = load ptr, ptr @fun_Core_int_max_15, align 8
  %20 = load ptr, ptr @fun_Core_int_max_16, align 8
  %21 = call ptr @Builtins__ifElse(ptr %12, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_int_max_15(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_4_case-0_matched() {
Core_int_pow_21_4_case-0_matched:
  %0 = load ptr, ptr @num_1, align 8
  ret ptr %0
}

define ptr @Core_int_pow_21(ptr %0, ptr %1) {
Core_int_pow_21:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.167, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_int_pow_21_1_isMatch_else.168, align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.168, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %25, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %27, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 2
  store ptr %35, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 3
  store ptr %0, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %46 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %47 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %48 = call ptr @candy_builtin_if_else(ptr %39, ptr %46, ptr %47)
  ret ptr %48
}

define ptr @Core_int_pow_21_1_equals_then(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.165, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.166, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.166, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_int_pow_21_1_hasKey_else(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @56, align 8
  ret ptr @56
}

define ptr @Core_int_pow_21_1_isMatch_then(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.159, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.160, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.161, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.162, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.160, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.162, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.163, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.164, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.164, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.159(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_int_pow_21_1_hasKey_else.161(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_int_pow_21_1_isMatch_then.163(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_int_pow_21_1_isMatch_else(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.165(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_int_pow_21_1_isMatch_else.167(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5, i32 0, i32 2
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-1_matched, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_int_pow_21_4_case-1_matched)
  %17 = call ptr @Core_int_pow_21_4_case-1_matched(ptr %16)
  ret ptr %17
}

define ptr @Core_int_pow_21_4_case-1_matched(ptr %0) {
Core_int_pow_21_4_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isEven(ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 2
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_4_5, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %20, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 2
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_int_pow_21_4_6, align 8
  %26 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  %27 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  %28 = call ptr @Builtins__ifElse(ptr %3, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_int_pow_21_4_5(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_multiply(ptr %18, ptr %20)
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @Builtins__intShiftRight(ptr %23, ptr %24)
  %26 = alloca ptr, i64 3, align 8
  %27 = alloca ptr, i64 3, align 8
  %28 = load ptr, ptr @tag_Exponent, align 8
  %29 = getelementptr ptr, ptr %26, i64 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %25, ptr %30, align 8
  %31 = load ptr, ptr @tag_Base, align 8
  %32 = getelementptr ptr, ptr %26, i64 1
  store ptr %31, ptr %32, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %21, ptr %33, align 8
  %34 = getelementptr ptr, ptr %26, i64 2
  store ptr null, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = call ptr @make_candy_struct(ptr %26, ptr %27)
  %37 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %38 = load ptr, ptr %37, align 8
  %39 = call ptr @get_candy_function_pointer(ptr %38)
  %40 = call ptr @get_candy_function_environment(ptr %38)
  %41 = call ptr (...) %39(ptr %36, ptr %40)
  ret ptr %41
}

define ptr @Core_int_pow_21_4_6(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_multiply(ptr %18, ptr %20)
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_subtract(ptr %31, ptr %32)
  %34 = load ptr, ptr @num_1, align 8
  %35 = call ptr @Builtins__intShiftRight(ptr %33, ptr %34)
  %36 = alloca ptr, i64 3, align 8
  %37 = alloca ptr, i64 3, align 8
  %38 = load ptr, ptr @tag_Base, align 8
  %39 = getelementptr ptr, ptr %36, i64 0
  store ptr %38, ptr %39, align 8
  %40 = getelementptr ptr, ptr %37, i64 0
  store ptr %21, ptr %40, align 8
  %41 = load ptr, ptr @tag_Exponent, align 8
  %42 = getelementptr ptr, ptr %36, i64 1
  store ptr %41, ptr %42, align 8
  %43 = getelementptr ptr, ptr %37, i64 1
  store ptr %35, ptr %43, align 8
  %44 = getelementptr ptr, ptr %36, i64 2
  store ptr null, ptr %44, align 8
  %45 = getelementptr ptr, ptr %37, i64 2
  store ptr null, ptr %45, align 8
  %46 = call ptr @make_candy_struct(ptr %36, ptr %37)
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %48 = load ptr, ptr %47, align 8
  %49 = call ptr @get_candy_function_pointer(ptr %48)
  %50 = call ptr @get_candy_function_environment(ptr %48)
  %51 = call ptr (...) %49(ptr %46, ptr %50)
  %52 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %53 = load ptr, ptr %52, align 8
  %54 = call ptr @candy_builtin_type_of(ptr %53)
  %55 = load ptr, ptr @tag_Int, align 8
  %56 = call ptr @candy_builtin_equals(ptr %54, ptr %55)
  %57 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = call ptr @candy_builtin_type_of(ptr %51)
  %61 = load ptr, ptr @tag_Int, align 8
  %62 = call ptr @candy_builtin_equals(ptr %60, ptr %61)
  %63 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %64 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  %65 = call ptr @"anonymous_$generated__needs"(ptr %62, ptr %63, ptr %64)
  %66 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %67 = load ptr, ptr %66, align 8
  %68 = call ptr @candy_builtin_int_multiply(ptr %67, ptr %51)
  ret ptr %68
}

define ptr @Core_controlFlow_recursive_18(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %6 = call ptr @Core_int_pow_21(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_int_pow(ptr %0, ptr %1) {
Core_int_pow:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = alloca ptr, i64 3, align 8
  %16 = alloca ptr, i64 3, align 8
  %17 = load ptr, ptr @tag_Exponent, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %17, ptr %18, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %1, ptr %19, align 8
  %20 = load ptr, ptr @tag_Base, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %16, i64 1
  store ptr %0, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %24, align 8
  %25 = call ptr @make_candy_struct(ptr %15, ptr %16)
  %26 = load ptr, ptr @fun_Core_int_pow_21, align 8
  %27 = call ptr @Core_function_is2(ptr %26)
  %28 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %29 = load ptr, ptr @"Core:int:pow:22", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr %29)
  %31 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  %32 = call ptr @Core_controlFlow_recursive_18(ptr %31, ptr %25)
  ret ptr %32
}

define ptr @Core_text_removePrefix(ptr %0, ptr %1) {
Core_text_removePrefix:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Text, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Text, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_text_starts_with(ptr %0, ptr %1)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %1, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %0, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_text_removePrefix_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_text_removePrefix_15, align 8
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_text_removePrefix_16, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_text_removePrefix_16, align 8
  %32 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  %33 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  %34 = call ptr @Builtins__ifElse(ptr %24, ptr %32, ptr %33)
  ret ptr %34
}

define ptr @Core_text_removePrefix_15(ptr %0) {
Core_text_removePrefix_15:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:text:removePrefix:15:4", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_text_length(ptr %10)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @candy_builtin_type_of(ptr %13)
  %15 = load ptr, ptr @tag_Text, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:text:removePrefix:15:7", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = call ptr @candy_builtin_text_length(ptr %21)
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @Builtins__textGetRange(ptr %24, ptr %11, ptr %22)
  ret ptr %25
}

define ptr @Core_text_removePrefix_16(ptr %0) {
Core_text_removePrefix_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is(ptr %0) {
Core_fixedDecimal_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.187, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_else.188, align 8
  %10 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.188, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %12, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Core_fixedDecimal_is_1_equals_then(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.169, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.170, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.185, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.186, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.170, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.186, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.169(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.171, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.172, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.183, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.184, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.172, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.184, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.171(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.173, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.174, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.174, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.173(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.181, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.182, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.182, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_fixedDecimal_is_1_hasKey_else(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_fixedDecimal_is_1_isMatch_then(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.175, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.176, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.177, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.178, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.176, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.178, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.179, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.180, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.180, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.175(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.177(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.179(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @67, align 8
  ret ptr @67
}

define ptr @Core_fixedDecimal_is_1_isMatch_else(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.181(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @68, align 8
  ret ptr @68
}

define ptr @Core_fixedDecimal_is_1_equals_else.183(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_fixedDecimal_is_1_equals_else.185(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @69, align 8
  ret ptr @69
}

define ptr @Core_fixedDecimal_is_1_equals_else.187(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @70, align 8
  ret ptr @70
}

define ptr @Core_fixedDecimal_is_1_case-0_matched(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_18, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_18(ptr %0) {
Core_fixedDecimal_is_1_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %12 = call ptr @Core_bool_lazyAnd(ptr %5, ptr %11)
  ret ptr %12
}

define ptr @Core_fixedDecimal_isScale_18(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_didNotMatch(ptr %0) {
Core_fixedDecimal_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_fixedDecimal_minorUnits(ptr %0) {
Core_fixedDecimal_minorUnits:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = call ptr @candy_builtin_type_of(ptr %14)
  %16 = load ptr, ptr @tag_Struct, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @tag_MinorUnits, align 8
  %22 = call ptr @candy_builtin_struct_has_key(ptr %14, ptr %21)
  %23 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_MinorUnits, align 8
  %27 = call ptr @candy_builtin_struct_get(ptr %14, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_scale(ptr %0) {
Core_fixedDecimal_scale:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:fixedDecimal:scale:19", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:fixedDecimal:scale:19", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = call ptr @candy_builtin_type_of(ptr %14)
  %16 = load ptr, ptr @tag_Struct, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:scale:21", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @tag_Scale, align 8
  %22 = call ptr @candy_builtin_struct_has_key(ptr %14, ptr %21)
  %23 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:fixedDecimal:scale:21", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Scale, align 8
  %27 = call ptr @candy_builtin_struct_get(ptr %14, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_fromIntScaled(ptr %0, ptr %1) {
Core_fixedDecimal_fromIntScaled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %1, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.189, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_isScale_18.190, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.190, align 8
  %14 = call ptr @Core_bool_lazyAnd(ptr %9, ptr %13)
  %15 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_Scale, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %1, ptr %21, align 8
  %22 = load ptr, ptr @tag_MinorUnits, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %0, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %28, align 1
  %29 = call ptr @make_candy_tag(ptr %28, ptr %27)
  store ptr %29, ptr @tag_FixedDecimal.191, align 8
  ret ptr @tag_FixedDecimal.191
}

define ptr @Core_fixedDecimal_isScale_18.189(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_floorToInt(ptr %0) {
Core_fixedDecimal_floorToInt:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Core_fixedDecimal_minorUnits(ptr %0)
  %5 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %6 = call ptr @candy_builtin_type_of(ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %5, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.192, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_fixedDecimal_isScale_18.193, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.193, align 8
  %13 = call ptr @Core_bool_lazyAnd(ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_10, align 8
  %18 = call ptr @Core_int_pow(ptr %17, ptr %5)
  %19 = call ptr @Builtins__intDivideTruncating(ptr %4, ptr %18)
  ret ptr %19
}

define ptr @Core_fixedDecimal_isScale_18.192(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %1) {
Core_fixedDecimal_rescaledMinorUnits:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @candy_builtin_type_of(ptr %1)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @candy_builtin_equals(ptr %5, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.194, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_isScale_18.195, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.195, align 8
  %12 = call ptr @Core_bool_lazyAnd(ptr %7, ptr %11)
  %13 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %16 = call ptr @Core_int_isGreaterThan(ptr %15, ptr %1)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0
  store ptr %1, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1
  store ptr %0, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_24, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %1, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_25, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  %25 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  %26 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  %27 = call ptr @Builtins__ifElse(ptr %16, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_isScale_18.194(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_24(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_24:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_minorUnits(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @Core_fixedDecimal_scale(ptr %5)
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @candy_builtin_type_of(ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @candy_builtin_int_subtract(ptr %6, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %23, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.196, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_fixedDecimal_isScale_18.197, align 8
  %27 = load ptr, ptr @tag_True, align 8
  %28 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.197, align 8
  %29 = call ptr @Core_bool_lazyAnd(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @num_10, align 8
  %34 = call ptr @Core_int_pow(ptr %33, ptr %23)
  %35 = call ptr @Builtins__intDivideTruncating(ptr %3, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_isScale_18.196(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_25(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_25:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_minorUnits(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @Core_fixedDecimal_scale(ptr %5)
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %6)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @candy_builtin_int_subtract(ptr %22, ptr %6)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %23, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.198, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_fixedDecimal_isScale_18.199, align 8
  %27 = load ptr, ptr @tag_True, align 8
  %28 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.199, align 8
  %29 = call ptr @Core_bool_lazyAnd(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @num_10, align 8
  %34 = call ptr @Core_int_pow(ptr %33, ptr %23)
  %35 = call ptr @candy_builtin_type_of(ptr %3)
  %36 = load ptr, ptr @tag_Int, align 8
  %37 = call ptr @candy_builtin_equals(ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %39 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr %39)
  %41 = call ptr @candy_builtin_type_of(ptr %34)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %45 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_int_multiply(ptr %3, ptr %34)
  ret ptr %47
}

define ptr @Core_fixedDecimal_isScale_18.198(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1) {
Core_fixedDecimal_comparableMinorUnits:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %9 = call ptr @Core_fixedDecimal_scale(ptr %1)
  %10 = call ptr @Core_int_max(ptr %8, ptr %9)
  %11 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %10)
  %12 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %10)
  %13 = alloca ptr, i64 4, align 8
  %14 = alloca ptr, i64 4, align 8
  %15 = load ptr, ptr @tag_ValueA, align 8
  %16 = getelementptr ptr, ptr %13, i64 0
  store ptr %15, ptr %16, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %11, ptr %17, align 8
  %18 = load ptr, ptr @tag_ValueB, align 8
  %19 = getelementptr ptr, ptr %13, i64 1
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %12, ptr %20, align 8
  %21 = load ptr, ptr @tag_TargetScale, align 8
  %22 = getelementptr ptr, ptr %13, i64 2
  store ptr %21, ptr %22, align 8
  %23 = getelementptr ptr, ptr %14, i64 2
  store ptr %10, ptr %23, align 8
  %24 = getelementptr ptr, ptr %13, i64 3
  store ptr null, ptr %24, align 8
  %25 = getelementptr ptr, ptr %14, i64 3
  store ptr null, ptr %25, align 8
  %26 = call ptr @make_candy_struct(ptr %13, ptr %14)
  ret ptr %26
}

define ptr @Core_fixedDecimal_add(ptr %0, ptr %1) {
Core_fixedDecimal_add:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is summandA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is summandB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1)
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Struct, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_equals_then, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_add_14_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %9, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_equals_else, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_fixedDecimal_add_14_equals_else, align 8
  %18 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_add_14_equals_else, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %11, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else.216, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.217, align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.217, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_1, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %20, ptr %31)
  %33 = load ptr, ptr @num_2, align 8
  %34 = call ptr @candy_builtin_list_get(ptr %20, ptr %33)
  %35 = load ptr, ptr @num_3, align 8
  %36 = call ptr @candy_builtin_list_get(ptr %20, ptr %35)
  %37 = call ptr @candy_builtin_type_of(ptr %32)
  %38 = load ptr, ptr @tag_Int, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %41 = load ptr, ptr @"Core:fixedDecimal:add:27", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr %41)
  %43 = call ptr @candy_builtin_type_of(ptr %34)
  %44 = load ptr, ptr @tag_Int, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:fixedDecimal:add:27", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = call ptr @candy_builtin_int_add(ptr %32, ptr %34)
  %50 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %49, ptr %36)
  ret ptr %50
}

define ptr @Core_fixedDecimal_add_14_equals_then(ptr %0) {
Core_fixedDecimal_add_14_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_add_14_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_add_14_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_add_14_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else.214, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.215, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.215, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_add_14_hasKey_then(ptr %0) {
Core_fixedDecimal_add_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @71, align 8
  ret ptr @71
}

define ptr @Core_fixedDecimal_add_14_hasKey_else(ptr %0) {
Core_fixedDecimal_add_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @72, align 8
  ret ptr @72
}

define ptr @Core_fixedDecimal_add_14_isMatch_then(ptr %0) {
Core_fixedDecimal_add_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_then.200, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.201, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_else.202, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.203, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.201, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.203, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_then.204, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.205, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else.212, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.213, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.205, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else.213, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_add_14_hasKey_then.200(ptr %0) {
Core_fixedDecimal_add_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @73, align 8
  ret ptr @73
}

define ptr @Core_fixedDecimal_add_14_hasKey_else.202(ptr %0) {
Core_fixedDecimal_add_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @74, align 8
  ret ptr @74
}

define ptr @Core_fixedDecimal_add_14_isMatch_then.204(ptr %0) {
Core_fixedDecimal_add_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_TargetScale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_then.206, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.207, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_hasKey_else.208, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.209, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_then.207, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_add_14_hasKey_else.209, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_then.210, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.211, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_add_14_isMatch_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_add_14_isMatch_else, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_then.211, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_add_14_isMatch_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_add_14_hasKey_then.206(ptr %0) {
Core_fixedDecimal_add_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_TargetScale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @75, align 8
  ret ptr @75
}

define ptr @Core_fixedDecimal_add_14_hasKey_else.208(ptr %0) {
Core_fixedDecimal_add_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @76, align 8
  ret ptr @76
}

define ptr @Core_fixedDecimal_add_14_isMatch_then.210(ptr %0) {
Core_fixedDecimal_add_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 5, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr ptr, ptr %5, i64 2
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 3
  store ptr %4, ptr %14, align 8
  %15 = getelementptr ptr, ptr %5, i64 4
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_list(ptr %5)
  store ptr %16, ptr @77, align 8
  ret ptr @77
}

define ptr @Core_fixedDecimal_add_14_isMatch_else(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_add_14_isMatch_else.212(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_add_14_isMatch_else.214(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_add_14_equals_else(ptr %0) {
Core_fixedDecimal_add_14_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @78, align 8
  ret ptr @78
}

define ptr @Core_fixedDecimal_add_14_isMatch_else.216(ptr %0) {
Core_fixedDecimal_add_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_subtract(ptr %0, ptr %1) {
Core_fixedDecimal_subtract:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1)
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Struct, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_equals_then, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %9, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_equals_else, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  %18 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %11, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.234, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.235, align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.235, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_1, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %20, ptr %31)
  %33 = load ptr, ptr @num_2, align 8
  %34 = call ptr @candy_builtin_list_get(ptr %20, ptr %33)
  %35 = load ptr, ptr @num_3, align 8
  %36 = call ptr @candy_builtin_list_get(ptr %20, ptr %35)
  %37 = call ptr @candy_builtin_type_of(ptr %32)
  %38 = load ptr, ptr @tag_Int, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %41 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr %41)
  %43 = call ptr @candy_builtin_type_of(ptr %34)
  %44 = load ptr, ptr @tag_Int, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = call ptr @candy_builtin_int_subtract(ptr %32, ptr %34)
  %50 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %49, ptr %36)
  ret ptr %50
}

define ptr @Core_fixedDecimal_subtract_14_equals_then(ptr %0) {
Core_fixedDecimal_subtract_14_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.232, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.233, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.233, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @79, align 8
  ret ptr @79
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @80, align 8
  ret ptr @80
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then.218, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.219, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else.220, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.221, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.219, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.221, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then.222, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.223, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.230, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.231, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.223, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.231, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then.218(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @81, align 8
  ret ptr @81
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else.220(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @82, align 8
  ret ptr @82
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then.222(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_TargetScale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then.224, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.225, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else.226, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.227, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.225, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.227, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %29, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then.228, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.229, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.229, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then.224(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_TargetScale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @83, align 8
  ret ptr @83
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else.226(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @84, align 8
  ret ptr @84
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then.228(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 5, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr ptr, ptr %5, i64 2
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 3
  store ptr %4, ptr %14, align 8
  %15 = getelementptr ptr, ptr %5, i64 4
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_list(ptr %5)
  store ptr %16, ptr @85, align 8
  ret ptr @85
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.230(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.232(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_equals_else(ptr %0) {
Core_fixedDecimal_subtract_14_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @86, align 8
  ret ptr @86
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.234(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_negate(ptr %0) {
Core_fixedDecimal_negate:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Core_fixedDecimal_minorUnits(ptr %0)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @candy_builtin_equals(ptr %5, ptr %6)
  %8 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %9 = load ptr, ptr @"Core:fixedDecimal:negate:17", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr %9)
  %11 = call ptr @candy_builtin_type_of(ptr %4)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:int:negate:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_int_subtract(ptr %17, ptr %4)
  %19 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %20 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_divideTruncatingAtScale:
  %3 = call ptr @Core_fixedDecimal_is(ptr %0)
  %4 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_fixedDecimal_is(ptr %1)
  %7 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @candy_builtin_type_of(ptr %2)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %2, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.236, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_isScale_18.237, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.237, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  %17 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr null)
  %19 = call ptr @Core_fixedDecimal_minorUnits(ptr %1)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = call ptr @Core_bool_not(ptr %21)
  %23 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1)
  %26 = call ptr @candy_builtin_type_of(ptr %25)
  %27 = load ptr, ptr @tag_Struct, align 8
  %28 = call ptr @candy_builtin_equals(ptr %27, ptr %26)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %25, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %26, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, align 8
  %35 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_then, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_equals_else, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %28, ptr %35, ptr %36)
  %38 = load ptr, ptr @num_0, align 8
  %39 = call ptr @candy_builtin_list_get(ptr %37, ptr %38)
  %40 = load ptr, ptr @tag_Match, align 8
  %41 = call ptr @candy_builtin_equals(ptr %39, ptr %40)
  %42 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %43 = getelementptr inbounds { ptr }, ptr %42, i32 0, i32 0
  store ptr %37, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.246, ptr %42, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.247, align 8
  %45 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %46 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.247, align 8
  %47 = call ptr @candy_builtin_if_else(ptr %41, ptr %45, ptr %46)
  %48 = load ptr, ptr @num_1, align 8
  %49 = call ptr @candy_builtin_list_get(ptr %37, ptr %48)
  %50 = load ptr, ptr @num_2, align 8
  %51 = call ptr @candy_builtin_list_get(ptr %37, ptr %50)
  %52 = call ptr @candy_builtin_type_of(ptr %2)
  %53 = load ptr, ptr @tag_Int, align 8
  %54 = call ptr @candy_builtin_equals(ptr %52, ptr %53)
  %55 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.237, align 8
  %56 = call ptr @Core_bool_lazyAnd(ptr %54, ptr %55)
  %57 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:56", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = load ptr, ptr @num_10, align 8
  %61 = call ptr @Core_int_pow(ptr %60, ptr %2)
  %62 = call ptr @candy_builtin_type_of(ptr %49)
  %63 = load ptr, ptr @tag_Int, align 8
  %64 = call ptr @candy_builtin_equals(ptr %62, ptr %63)
  %65 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %66 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:57", align 8
  %67 = call ptr @"anonymous_$generated__needs"(ptr %64, ptr %65, ptr %66)
  %68 = call ptr @candy_builtin_type_of(ptr %61)
  %69 = load ptr, ptr @tag_Int, align 8
  %70 = call ptr @candy_builtin_equals(ptr %68, ptr %69)
  %71 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %72 = load ptr, ptr @"Core:fixedDecimal:divideTruncatingAtScale:57", align 8
  %73 = call ptr @"anonymous_$generated__needs"(ptr %70, ptr %71, ptr %72)
  %74 = call ptr @candy_builtin_int_multiply(ptr %49, ptr %61)
  %75 = call ptr @Builtins__intDivideTruncating(ptr %74, ptr %51)
  %76 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %75, ptr %2)
  ret ptr %76
}

define ptr @Core_fixedDecimal_isScale_18.236(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_then(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.244, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.245, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.245, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @87, align 8
  ret ptr @87
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @88, align 8
  ret ptr @88
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.238, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.239, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.240, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.241, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.239, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.241, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.242, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.243, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.243, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then.238(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @89, align 8
  ret ptr @89
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else.240(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @90, align 8
  ret ptr @90
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then.242(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @91, align 8
  ret ptr @91
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.244(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_equals_else(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @92, align 8
  ret ptr @92
}

define ptr @Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else.246(ptr %0) {
Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_compareTo(ptr %0, ptr %1) {
Core_fixedDecimal_compareTo:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1)
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Struct, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_equals_then, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_compareTo_14_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %9, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_equals_else, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_fixedDecimal_compareTo_14_equals_else, align 8
  %18 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_equals_else, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %11, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_else.256, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.257, align 8
  %28 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.257, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_1, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %20, ptr %31)
  %33 = load ptr, ptr @num_2, align 8
  %34 = call ptr @candy_builtin_list_get(ptr %20, ptr %33)
  %35 = call ptr @Core_int_compareTo(ptr %32, ptr %34)
  %36 = load ptr, ptr @tag_Equal, align 8
  %37 = call ptr @candy_builtin_equals(ptr %35, ptr %36)
  %38 = call ptr @candy_builtin_equals(ptr %32, ptr %34)
  %39 = call ptr @Core_bool_implies(ptr %37, ptr %38)
  %40 = call ptr @Core_check_check(ptr %39)
  ret ptr %35
}

define ptr @Core_fixedDecimal_compareTo_14_equals_then(ptr %0) {
Core_fixedDecimal_compareTo_14_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_else.254, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.255, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else.255, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_then(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @93, align 8
  ret ptr @93
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_else(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @94, align 8
  ret ptr @94
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_then(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_then.248, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then.249, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_hasKey_else.250, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else.251, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_then.249, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_hasKey_else.251, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_then.252, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then.253, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_compareTo_14_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_then.253, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_compareTo_14_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_then.248(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @95, align 8
  ret ptr @95
}

define ptr @Core_fixedDecimal_compareTo_14_hasKey_else.250(ptr %0) {
Core_fixedDecimal_compareTo_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @96, align 8
  ret ptr @96
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_then.252(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @97, align 8
  ret ptr @97
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_else(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_else.254(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_compareTo_14_equals_else(ptr %0) {
Core_fixedDecimal_compareTo_14_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @98, align 8
  ret ptr @98
}

define ptr @Core_fixedDecimal_compareTo_14_isMatch_else.256(ptr %0) {
Core_fixedDecimal_compareTo_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %0, ptr %1) {
Core_fixedDecimal_isLessThanOrEqualTo:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_is(ptr %0)
  %9 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @Core_fixedDecimal_is(ptr %1)
  %13 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:fixedDecimal:isLessThanOrEqualTo:13", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @Core_fixedDecimal_compareTo(ptr %0, ptr %1)
  %17 = load ptr, ptr @tag_Greater, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = call ptr @Core_bool_not(ptr %18)
  ret ptr %19
}

define ptr @Core_fixedDecimal_absolute(ptr %0) {
Core_fixedDecimal_absolute:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Core_fixedDecimal_is(ptr %0)
  %5 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:fixedDecimal:absolute:8", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @Core_fixedDecimal_minorUnits(ptr %0)
  %9 = load ptr, ptr @num_0, align 8
  %10 = call ptr @Core_int_isLessThan(ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute_9, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %0, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_fixedDecimal_absolute_10, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  %17 = load ptr, ptr @fun_Core_fixedDecimal_absolute_9, align 8
  %18 = load ptr, ptr @fun_Core_fixedDecimal_absolute_10, align 8
  %19 = call ptr @Builtins__ifElse(ptr %10, ptr %17, ptr %18)
  ret ptr %19
}

define ptr @Core_fixedDecimal_absolute_9(ptr %0) {
Core_fixedDecimal_absolute_9:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_negate(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_absolute_10(ptr %0) {
Core_fixedDecimal_absolute_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_approxEquals(ptr %0, ptr %1, ptr %2) {
Core_fixedDecimal_approxEquals:
  %3 = call ptr @Core_fixedDecimal_is(ptr %0)
  %4 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_fixedDecimal_is(ptr %1)
  %7 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_fixedDecimal_is(ptr %2)
  %10 = load ptr, ptr @"text_`is delta` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_fixedDecimal_is(ptr %2)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:fixedDecimal:approxEquals:17", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @Core_fixedDecimal_is(ptr %2)
  %17 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = call ptr @Core_fixedDecimal_minorUnits(ptr %2)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @Core_int_isLessThan(ptr %20, ptr %21)
  %23 = call ptr @Core_bool_not(ptr %22)
  %24 = load ptr, ptr @"text_`isNonNegative delta` was not satisfied", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %24, ptr null)
  %26 = call ptr @Core_fixedDecimal_subtract(ptr %0, ptr %1)
  %27 = call ptr @Core_fixedDecimal_absolute(ptr %26)
  %28 = call ptr @Core_fixedDecimal_isLessThanOrEqualTo(ptr %27, ptr %2)
  ret ptr %28
}

define ptr @Core_fixedDecimal_toText(ptr %0) {
Core_fixedDecimal_toText:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Core_fixedDecimal_floorToInt(ptr %0)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %8 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %9 = call ptr @Core_function_run(ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %4)
  %11 = load ptr, ptr @tag_Text, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %4, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_22, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %4, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_23, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_type_of(ptr %9)
  %23 = load ptr, ptr @tag_Text, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %9, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_29, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %9, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_30, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  %34 = load ptr, ptr @text_., align 8
  %35 = call ptr @candy_builtin_text_concatenate(ptr %21, ptr %34)
  %36 = call ptr @candy_builtin_text_concatenate(ptr %35, ptr %33)
  ret ptr %36
}

define ptr @Core_fixedDecimal_toText_10(ptr %0) {
Core_fixedDecimal_toText_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_scale(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Int, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.258, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_isScale_18.259, align 8
  %10 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.259, align 8
  %11 = call ptr @Core_bool_lazyAnd(ptr %6, ptr %10)
  %12 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:fixedDecimal:toText:10:4", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_10, align 8
  %16 = call ptr @Core_int_pow(ptr %15, ptr %3)
  %17 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @Core_fixedDecimal_minorUnits(ptr %18)
  %20 = call ptr @Builtins__intRemainder(ptr %19, ptr %16)
  %21 = call ptr @Core_int_isNonNegative(ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %16, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %20, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_31, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %16, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %20, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_32, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  %30 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  %32 = call ptr @Builtins__ifElse(ptr %21, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_isScale_18.258(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_10_31(ptr %0) {
Core_fixedDecimal_toText_10_31:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_add(ptr %18, ptr %20)
  %22 = call ptr @candy_builtin_to_debug_text(ptr %21)
  %23 = load ptr, ptr @text_1, align 8
  %24 = call ptr @Core_text_removePrefix(ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_fixedDecimal_toText_10_32(ptr %0) {
Core_fixedDecimal_toText_10_32:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_subtract(ptr %18, ptr %20)
  %22 = call ptr @candy_builtin_to_debug_text(ptr %21)
  %23 = load ptr, ptr @text_-1, align 8
  %24 = call ptr @Core_text_removePrefix(ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_fixedDecimal_toText_22(ptr %0) {
Core_fixedDecimal_toText_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_23(ptr %0) {
Core_fixedDecimal_toText_23:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_29(ptr %0) {
Core_fixedDecimal_toText_29:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_30(ptr %0) {
Core_fixedDecimal_toText_30:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is1(ptr %0) {
Core_function_is1:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is1_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_isOdd(ptr %0) {
Core_int_isOdd:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isOdd:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %12)
  %14 = load ptr, ptr @num_1, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_result_is(ptr %0) {
Core_result_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.266, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.267, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.267, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %37 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.260, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.261, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.264, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.265, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.261, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.265, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.260(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.262, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.263, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.263, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.262(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @99, align 8
  ret ptr @99
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.264(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @100, align 8
  ret ptr @100
}

define ptr @Core_result_is_1_equals_else.266(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @101, align 8
  ret ptr @101
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.268, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.269, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.278, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.279, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.269, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.279, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.268(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.270, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.271, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.276, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.277, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.271, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.277, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.270(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.272, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.273, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.274, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.275, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.273, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.275, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.272(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @102, align 8
  ret ptr @102
}

define ptr @Core_result_is_1_equals_else.274(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.276(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @103, align 8
  ret ptr @103
}

define ptr @Core_result_is_1_equals_else.278(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @104, align 8
  ret ptr @104
}

define ptr @Core_result_is_1_case-0_matched(ptr %0) {
Core_result_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_True, align 8
  ret ptr %5
}

define ptr @Core_result_is_1_case-0_didNotMatch(ptr %0) {
Core_result_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_function_is1(ptr %2)
  %10 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Tag, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.286, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_mapOrElse_30_equals_else.287, align 8
  %21 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %22 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.287, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_matched, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 0
  store ptr %0, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 1
  store ptr %23, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 2
  store ptr %2, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %38 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %27, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.280, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.281, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.284, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.285, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.281, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.285, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.280(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.282, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.283, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.283, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.282(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @105, align 8
  ret ptr @105
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.284(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @106, align 8
  ret ptr @106
}

define ptr @Core_result_mapOrElse_30_equals_else.286(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @107, align 8
  ret ptr @107
}

define ptr @Core_result_mapOrElse_30_case-0_matched(ptr %0) {
Core_result_mapOrElse_30_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.288, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_result_mapOrElse_30_equals_then.289, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.298, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_else.299, align 8
  %18 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.289, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.299, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_result_mapOrElse_30_equals_then.288(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.290, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.291, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.296, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.297, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.291, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.297, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.290(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.292, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.293, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.294, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.295, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.293, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.295, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.292(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @108, align 8
  ret ptr @108
}

define ptr @Core_result_mapOrElse_30_equals_else.294(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.296(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @109, align 8
  ret ptr @109
}

define ptr @Core_result_mapOrElse_30_equals_else.298(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @110, align 8
  ret ptr @110
}

define ptr @Core_result_mapOrElse_30_case-1_matched(ptr %0) {
Core_result_mapOrElse_30_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @"Core_iterator_range_38, Core_result_unwrapOrElse_19"(ptr %0) {
"Core_iterator_range_38, Core_result_unwrapOrElse_19":
  ret ptr %0
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_unwrapOr_7, align 8
  %8 = call ptr @Core_result_is(ptr %0)
  %9 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %13 = call ptr @Core_function_is0(ptr %12)
  %14 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_20, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  %20 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %21 = call ptr @Core_result_mapOrElse(ptr %0, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_unwrapOrElse_20(ptr %0) {
Core_result_unwrapOrElse_20:
  %1 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %2 = call ptr @Core_function_run(ptr %1)
  ret ptr %2
}

define ptr @Core_list_append(ptr %0, ptr %1) {
Core_list_append:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_List, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:list:append:9", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_list_length(ptr %0)
  %14 = call ptr @Builtins__listInsert(ptr %0, ptr %13, ptr %1)
  ret ptr %14
}

define ptr @"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched"() {
"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched":
  %0 = load ptr, ptr @tag_Empty, align 8
  ret ptr %0
}

define ptr @Core_iterator_wrapSafe(ptr %0, ptr %1) {
Core_iterator_wrapSafe:
  %2 = call ptr @Core_function_is0(ptr %1)
  %3 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_12, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16, ptr %8, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16, align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_16, align 8
  %11 = call ptr @Core_function_is2(ptr %10)
  %12 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %13 = load ptr, ptr @"Core:iterator:wrapSafe:17", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %16 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.340, ptr %15, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_controlFlow_recursive_18.341, align 8
  %17 = load ptr, ptr @fun_Core_controlFlow_recursive_18.341, align 8
  %18 = call ptr @Core_controlFlow_recursive_18.340(ptr %17, ptr %0)
  ret ptr %18
}

define ptr @Core_iterator_wrapSafe_12(ptr %0) {
Core_iterator_wrapSafe_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_wrapSafe_16(ptr %0, ptr %1) {
Core_iterator_wrapSafe_16:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else.306, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.307, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.307, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_case-0_matched, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_matched, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %13, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_case-0_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_matched, align 8
  %25 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = call ptr @Core_function_is0(ptr %26)
  %28 = call ptr @Core_bool_not(ptr %27)
  %29 = call ptr @Core_bool_is(ptr %28)
  %30 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %34 = call ptr @Core_function_is0(ptr %33)
  %35 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %39 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %40 = call ptr @Builtins__ifElse(ptr %28, ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %0, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %26, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  %45 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  %46 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %46, align 1
  %47 = call ptr @make_candy_tag(ptr %46, ptr %45)
  store ptr %47, ptr @tag_Iterator.339, align 8
  ret ptr @tag_Iterator.339
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then.300, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.301, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else.304, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.305, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.301, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.305, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then.300(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then.302, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.303, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.303, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then.302(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @111, align 8
  ret ptr @111
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else.304(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @112, align 8
  ret ptr @112
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else.306(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @113, align 8
  ret ptr @113
}

define ptr @Core_iterator_wrapSafe_16_1_case-0_matched(ptr %0) {
Core_iterator_wrapSafe_16_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_1_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_16_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %6 = call ptr @Core_function_run(ptr %5)
  ret ptr %6
}

define ptr @Core_iterator_wrapSafe_16_26(ptr %0) {
Core_iterator_wrapSafe_16_26:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.312, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.313, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.313, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %3, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %15, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  %27 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %28 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %19, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.308, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.309, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.310, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.311, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.309, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.311, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.308(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @114, align 8
  ret ptr @114
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.310(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @115, align 8
  ret ptr @115
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.312(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @116, align 8
  ret ptr @116
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.314, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.315, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.336, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.337, align 8
  %18 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.315, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.337, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.314(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.316, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.317, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.334, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.335, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.317, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.335, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.316(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.318, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.319, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.332, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.333, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.319, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.333, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.318(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.320, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.321, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.330, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.331, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.321, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.331, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.320(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else.328, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.329, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.329, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @117, align 8
  ret ptr @117
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @118, align 8
  ret ptr @118
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then.322, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.323, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else.324, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.325, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.323, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.325, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then.326, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.327, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.327, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then.322(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @119, align 8
  ret ptr @119
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else.324(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @120, align 8
  ret ptr @120
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then.326(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @121, align 8
  ret ptr @121
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else.328(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.330(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @122, align 8
  ret ptr @122
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.332(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.334(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @123, align 8
  ret ptr @123
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.336(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @124, align 8
  ret ptr @124
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-1_matched(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.338, align 8
  ret ptr @tag_More.338
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %6 = call ptr @Core_function_run(ptr %5)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18.340(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.342, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.343, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.343, align 8
  %6 = call ptr @Core_iterator_wrapSafe_16(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0.342(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_next(ptr %0) {
Core_iterator_next:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_next_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_next_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @candy_builtin_equals(ptr %6, ptr %5)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %4, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %5, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.350, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.351, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.351, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %7, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %24 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_1, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %16, ptr %27)
  %29 = call ptr @Core_function_run(ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_next_2() {
Core_iterator_next_2:
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_next_6_equals_then(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.344, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.345, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.348, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.349, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.345, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.349, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.344(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.346, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.347, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.347, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.346(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @125, align 8
  ret ptr @125
}

define ptr @Core_iterator_next_6_equals_else(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_next_6_equals_else.348(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @126, align 8
  ret ptr @126
}

define ptr @Core_iterator_next_6_equals_else.350(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @127, align 8
  ret ptr @127
}

define ptr @Core_iterator_next_6_isMatch_else(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_generateWithState(ptr %0, ptr %1) {
Core_iterator_generateWithState:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_generateWithState_14, align 8
  %8 = load ptr, ptr @fun_Core_iterator_generateWithState_14, align 8
  %9 = call ptr @Core_function_is2(ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = load ptr, ptr @"Core:iterator:generateWithState:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.384, ptr %13, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.385, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.385, align 8
  %16 = call ptr @Core_controlFlow_recursive_18.384(ptr %15, ptr %0)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14(ptr %0, ptr %1, ptr %2) {
Core_iterator_generateWithState_14:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  %10 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  %11 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %11, align 1
  %12 = call ptr @make_candy_tag(ptr %11, ptr %10)
  store ptr %12, ptr @tag_Iterator.383, align 8
  ret ptr @tag_Iterator.383
}

define ptr @Core_iterator_generateWithState_14_1(ptr %0) {
Core_iterator_generateWithState_14_1:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %7)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %7, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.370, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.371, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.371, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %26, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %19, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-0_matched, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_matched, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %19, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %23, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.352, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.353, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.368, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.369, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.353, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.369, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.352(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.354, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.355, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.366, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.367, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.355, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.367, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.354(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.356, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.357, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.357, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.356(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_else.364, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.365, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.365, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @128, align 8
  ret ptr @128
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @129, align 8
  ret ptr @129
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_then.358, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.359, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_else.360, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.361, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.359, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.361, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_then.362, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.363, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.363, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_then.358(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @130, align 8
  ret ptr @130
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_else.360(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @131, align 8
  ret ptr @131
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_then.362(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @132, align 8
  ret ptr @132
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_else.364(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @133, align 8
  ret ptr @133
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.366(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.368(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @134, align 8
  ret ptr @134
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.370(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @135, align 8
  ret ptr @135
}

define ptr @Core_iterator_generateWithState_14_1_3_case-0_matched(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.372, align 8
  ret ptr @tag_More.372
}

define ptr @Core_iterator_generateWithState_14_1_3_case-0_didNotMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.373, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.374, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.381, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.382, align 8
  %18 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.374, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.382, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  %31 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.373(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.375, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.376, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.379, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.380, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.376, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.380, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.375(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.377, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.378, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.378, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.377(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @136, align 8
  ret ptr @136
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.379(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @137, align 8
  ret ptr @137
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.381(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @138, align 8
  ret ptr @138
}

define ptr @Core_iterator_generateWithState_14_1_3_case-1_didNotMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-2_matched, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_matched, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_matched)
  %11 = call ptr @Core_iterator_generateWithState_14_1_3_case-2_matched(ptr %10)
  ret ptr %11
}

define ptr @Core_iterator_generateWithState_14_1_3_case-2_matched(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-2_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_21, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_22, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr null)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_14_1_3_21(ptr %0) {
Core_iterator_generateWithState_14_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_22(ptr %0) {
Core_iterator_generateWithState_14_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_controlFlow_recursive_18.384(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.386, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.387, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.387, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_14)
  %7 = call ptr @Core_iterator_generateWithState_14(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.386(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_generate(ptr %0, ptr %1) {
Core_iterator_generate:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %0)
  %8 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @candy_builtin_type_of(ptr %0)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:33", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @Core_int_isNonNegative(ptr %0)
  %17 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:iterator:generate:33", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_4294967295, align 8
  %21 = call ptr @Core_int_isLessThan(ptr %0, ptr %20)
  %22 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_function_is1(ptr %1)
  %25 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %0, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generate_50, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generate_50, align 8
  %31 = load ptr, ptr @num_0, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generate_50, align 8
  %33 = call ptr @Core_iterator_generateWithState(ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generate_50(ptr %0, ptr %1) {
Core_iterator_generate_50:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %0, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generate_50_6, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generate_50_6, align 8
  %11 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %12 = load ptr, ptr @fun_Core_iterator_generate_50_6, align 8
  %13 = call ptr @Builtins__ifElse(ptr %4, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generate_50_6(ptr %0) {
Core_iterator_generate_50_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:50:6:16", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @num_1, align 8
  %19 = call ptr @candy_builtin_int_add(ptr %17, ptr %18)
  %20 = alloca ptr, i64 3, align 8
  %21 = alloca ptr, i64 3, align 8
  %22 = load ptr, ptr @tag_State, align 8
  %23 = getelementptr ptr, ptr %20, i64 0
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %21, i64 0
  store ptr %19, ptr %24, align 8
  %25 = load ptr, ptr @tag_Item, align 8
  %26 = getelementptr ptr, ptr %20, i64 1
  store ptr %25, ptr %26, align 8
  %27 = getelementptr ptr, ptr %21, i64 1
  store ptr %7, ptr %27, align 8
  %28 = getelementptr ptr, ptr %20, i64 2
  store ptr null, ptr %28, align 8
  %29 = getelementptr ptr, ptr %21, i64 2
  store ptr null, ptr %29, align 8
  %30 = call ptr @make_candy_struct(ptr %20, ptr %21)
  %31 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %31, align 1
  %32 = call ptr @make_candy_tag(ptr %31, ptr %30)
  store ptr %32, ptr @tag_More.388, align 8
  ret ptr @tag_More.388
}

define ptr @Core_iterator_map(ptr %0, ptr %1) {
Core_iterator_map:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_map_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_map_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_map_19, align 8
  %13 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_2() {
Core_iterator_map_2:
  %0 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_map_19(ptr %0, ptr %1) {
Core_iterator_map_19:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.393, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19_3_equals_else.394, align 8
  %12 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.394, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %2, ptr %20, align 8
  %21 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %14, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  %26 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %27 = load ptr, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %18, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_map_19_3_equals_then(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.389, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.390, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.391, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.392, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.390, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.392, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.389(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_map_19_3_equals_else(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @139, align 8
  ret ptr @139
}

define ptr @Core_iterator_map_19_3_equals_else.391(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @140, align 8
  ret ptr @140
}

define ptr @Core_iterator_map_19_3_equals_else.393(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @141, align 8
  ret ptr @141
}

define ptr @Core_iterator_map_19_3_case-0_didNotMatch(ptr %0) {
Core_iterator_map_19_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.395, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_19_3_equals_then.396, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.417, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_map_19_3_equals_else.418, align 8
  %18 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.396, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.418, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_19_3_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_map_19_3_equals_then.395(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.397, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.398, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.415, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.416, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.398, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.416, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.397(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.399, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.400, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.413, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.414, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.400, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.414, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.399(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.401, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_19_3_equals_then.402, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.411, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_map_19_3_equals_else.412, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.402, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.412, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_map_19_3_equals_then.401(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_else.409, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_19_3_isMatch_else.410, align 8
  %31 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else.410, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_map_19_3_hasKey_then(ptr %0) {
Core_iterator_map_19_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @142, align 8
  ret ptr @142
}

define ptr @Core_iterator_map_19_3_hasKey_else(ptr %0) {
Core_iterator_map_19_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @143, align 8
  ret ptr @143
}

define ptr @Core_iterator_map_19_3_isMatch_then(ptr %0) {
Core_iterator_map_19_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_then.403, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_hasKey_then.404, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_else.405, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_map_19_3_hasKey_else.406, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then.404, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else.406, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_then.407, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_map_19_3_isMatch_then.408, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then.408, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_map_19_3_hasKey_then.403(ptr %0) {
Core_iterator_map_19_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @144, align 8
  ret ptr @144
}

define ptr @Core_iterator_map_19_3_hasKey_else.405(ptr %0) {
Core_iterator_map_19_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @145, align 8
  ret ptr @145
}

define ptr @Core_iterator_map_19_3_isMatch_then.407(ptr %0) {
Core_iterator_map_19_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @146, align 8
  ret ptr @146
}

define ptr @Core_iterator_map_19_3_isMatch_else(ptr %0) {
Core_iterator_map_19_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_19_3_isMatch_else.409(ptr %0) {
Core_iterator_map_19_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_19_3_equals_else.411(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @147, align 8
  ret ptr @147
}

define ptr @Core_iterator_map_19_3_equals_else.413(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_map_19_3_equals_else.415(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @148, align 8
  ret ptr @148
}

define ptr @Core_iterator_map_19_3_equals_else.417(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @149, align 8
  ret ptr @149
}

define ptr @Core_iterator_map_19_3_case-1_matched(ptr %0) {
Core_iterator_map_19_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_State, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %8, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.419, align 8
  ret ptr @tag_More.419
}

define ptr @Core_iterator_map_19_3_case-1_didNotMatch(ptr %0) {
Core_iterator_map_19_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_withIndex_11(ptr %0) {
Core_iterator_withIndex_11:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_else, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %10 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.428, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.429, align 8
  %20 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.429, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_1, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_2, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %12, ptr %25)
  %27 = call ptr @Core_iterator_next(ptr %24)
  %28 = call ptr @candy_builtin_type_of(ptr %27)
  %29 = load ptr, ptr @tag_Tag, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %27, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %28, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.434, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_withIndex_11_5_equals_else.435, align 8
  %37 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %38 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.435, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %30, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_0, align 8
  %41 = call ptr @candy_builtin_list_get(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Match, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr, ptr, ptr }, ptr %44, i32 0, i32 0
  store ptr %26, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr }, ptr %44, i32 0, i32 1
  store ptr %27, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %44, i32 0, i32 2
  store ptr %39, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %49 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %50 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %51 = call ptr @candy_builtin_if_else(ptr %43, ptr %49, ptr %50)
  ret ptr %51
}

define ptr @Core_iterator_withIndex_11_1_equals_then(ptr %0) {
Core_iterator_withIndex_11_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.426, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.427, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.427, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @150, align 8
  ret ptr @150
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @151, align 8
  ret ptr @151
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then.420, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.421, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else.422, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.423, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.421, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.423, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then.424, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.425, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.425, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then.420(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @152, align 8
  ret ptr @152
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else.422(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @153, align 8
  ret ptr @153
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then.424(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @154, align 8
  ret ptr @154
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.426(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_equals_else(ptr %0) {
Core_iterator_withIndex_11_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @155, align 8
  ret ptr @155
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.428(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_withIndex_11_5_equals_then(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.430, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.431, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.432, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.433, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.431, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.433, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.430(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_withIndex_11_5_equals_else(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @156, align 8
  ret ptr @156
}

define ptr @Core_iterator_withIndex_11_5_equals_else.432(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @157, align 8
  ret ptr @157
}

define ptr @Core_iterator_withIndex_11_5_equals_else.434(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @158, align 8
  ret ptr @158
}

define ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.436, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_equals_then.437, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.458, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_withIndex_11_5_equals_else.459, align 8
  %18 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.437, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.459, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_withIndex_11_5_equals_then.436(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.438, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.439, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.456, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.457, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.439, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.457, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.438(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.440, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.441, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.454, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.455, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.441, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.455, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.440(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.442, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_equals_then.443, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.452, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_withIndex_11_5_equals_else.453, align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.443, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.453, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_withIndex_11_5_equals_then.442(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else.450, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.451, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.451, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @159, align 8
  ret ptr @159
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @160, align 8
  ret ptr @160
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then.444, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.445, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else.446, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.447, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.445, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.447, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then.448, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.449, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.449, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then.444(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @161, align 8
  ret ptr @161
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else.446(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @162, align 8
  ret ptr @162
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then.448(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @163, align 8
  ret ptr @163
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else.450(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_equals_else.452(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @164, align 8
  ret ptr @164
}

define ptr @Core_iterator_withIndex_11_5_equals_else.454(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_withIndex_11_5_equals_else.456(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @165, align 8
  ret ptr @165
}

define ptr @Core_iterator_withIndex_11_5_equals_else.458(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @166, align 8
  ret ptr @166
}

define ptr @Core_iterator_withIndex_11_5_case-1_matched(ptr %0) {
Core_iterator_withIndex_11_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_Index, align 8
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 1
  store ptr %16, ptr %18, align 8
  %19 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %19, align 8
  %20 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %20, align 8
  %21 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:iterator:withIndex:11:5:22", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_add(ptr %31, ptr %32)
  %34 = alloca ptr, i64 3, align 8
  %35 = alloca ptr, i64 3, align 8
  %36 = load ptr, ptr @tag_Index, align 8
  %37 = getelementptr ptr, ptr %34, i64 0
  store ptr %36, ptr %37, align 8
  %38 = getelementptr ptr, ptr %35, i64 0
  store ptr %33, ptr %38, align 8
  %39 = load ptr, ptr @tag_Iterator, align 8
  %40 = getelementptr ptr, ptr %34, i64 1
  store ptr %39, ptr %40, align 8
  %41 = getelementptr ptr, ptr %35, i64 1
  store ptr %8, ptr %41, align 8
  %42 = getelementptr ptr, ptr %34, i64 2
  store ptr null, ptr %42, align 8
  %43 = getelementptr ptr, ptr %35, i64 2
  store ptr null, ptr %43, align 8
  %44 = call ptr @make_candy_struct(ptr %34, ptr %35)
  %45 = alloca ptr, i64 3, align 8
  %46 = alloca ptr, i64 3, align 8
  %47 = load ptr, ptr @tag_Item, align 8
  %48 = getelementptr ptr, ptr %45, i64 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr ptr, ptr %46, i64 0
  store ptr %21, ptr %49, align 8
  %50 = load ptr, ptr @tag_State, align 8
  %51 = getelementptr ptr, ptr %45, i64 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr ptr, ptr %46, i64 1
  store ptr %44, ptr %52, align 8
  %53 = getelementptr ptr, ptr %45, i64 2
  store ptr null, ptr %53, align 8
  %54 = getelementptr ptr, ptr %46, i64 2
  store ptr null, ptr %54, align 8
  %55 = call ptr @make_candy_struct(ptr %45, ptr %46)
  %56 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %56, align 1
  %57 = call ptr @make_candy_tag(ptr %56, ptr %55)
  store ptr %57, ptr @tag_More.460, align 8
  ret ptr @tag_More.460
}

define ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_ensure(ptr %0, ptr %1) {
Core_iterator_ensure:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_ensure_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_ensure_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_ensure_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_ensure_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_ensure_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_ensure_19, align 8
  %13 = call ptr @Core_iterator_map(ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_ensure_14() {
Core_iterator_ensure_14:
  %0 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_ensure_19(ptr %0, ptr %1) {
Core_iterator_ensure_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %0
}

define ptr @Core_iterator_foldLeft(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_2, ptr %3, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_iterator_foldLeft_2, align 8
  %5 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %5)
  %7 = call ptr @Core_function_is2(ptr %2)
  %8 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = alloca ptr, i64 3, align 8
  %11 = alloca ptr, i64 3, align 8
  %12 = load ptr, ptr @tag_Value, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %11, i64 0
  store ptr %1, ptr %14, align 8
  %15 = load ptr, ptr @tag_Iterator, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %15, ptr %16, align 8
  %17 = getelementptr ptr, ptr %11, i64 1
  store ptr %6, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = getelementptr ptr, ptr %11, i64 2
  store ptr null, ptr %19, align 8
  %20 = call ptr @make_candy_struct(ptr %10, ptr %11)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %2, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_foldLeft_23, align 8
  %24 = load ptr, ptr @fun_Core_iterator_foldLeft_23, align 8
  %25 = call ptr @Core_function_is2(ptr %24)
  %26 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %27 = load ptr, ptr @"Core:iterator:foldLeft:24", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %30 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.501, ptr %29, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_controlFlow_recursive_18.502, align 8
  %31 = load ptr, ptr @fun_Core_controlFlow_recursive_18.502, align 8
  %32 = call ptr @Core_controlFlow_recursive_18.501(ptr %31, ptr %20)
  ret ptr %32
}

define ptr @Core_iterator_foldLeft_2() {
Core_iterator_foldLeft_2:
  %0 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_foldLeft_23(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft_23:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else.469, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.470, align 8
  %22 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.470, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = call ptr @Core_iterator_next(ptr %26)
  %30 = call ptr @candy_builtin_type_of(ptr %29)
  %31 = load ptr, ptr @tag_Tag, align 8
  %32 = call ptr @candy_builtin_equals(ptr %31, ptr %30)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %29, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  %36 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %37 = getelementptr inbounds { ptr }, ptr %36, i32 0, i32 0
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.475, ptr %36, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.476, align 8
  %39 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  %40 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.476, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %32, ptr %39, ptr %40)
  %42 = load ptr, ptr @num_0, align 8
  %43 = call ptr @candy_builtin_list_get(ptr %41, ptr %42)
  %44 = load ptr, ptr @tag_Match, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %47 = getelementptr inbounds { ptr }, ptr %46, i32 0, i32 0
  store ptr %28, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-0_matched, ptr %46, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_iterator_foldLeft_23_5_case-0_matched, align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 0
  store ptr %0, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 1
  store ptr %41, ptr %51, align 8
  %52 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 2
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 3
  store ptr %28, ptr %55, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 4
  store ptr %29, ptr %56, align 8
  %57 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-0_didNotMatch, ptr %49, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %57, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  %58 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_matched, align 8
  %59 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  %60 = call ptr @candy_builtin_if_else(ptr %45, ptr %58, ptr %59)
  ret ptr %60
}

define ptr @Core_iterator_foldLeft_23_1_equals_then(ptr %0) {
Core_iterator_foldLeft_23_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else.467, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.468, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.468, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_then(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @167, align 8
  ret ptr @167
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_else(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @168, align 8
  ret ptr @168
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_then(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Value, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_then.461, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.462, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_else.463, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.464, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.462, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.464, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_then.465, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.466, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.466, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_then.461(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Value, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @169, align 8
  ret ptr @169
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_else.463(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @170, align 8
  ret ptr @170
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_then.465(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @171, align 8
  ret ptr @171
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else.467(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_1_equals_else(ptr %0) {
Core_iterator_foldLeft_23_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @172, align 8
  ret ptr @172
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else.469(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_foldLeft_23_5_equals_then(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.471, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.472, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.473, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.474, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.472, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.474, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.471(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_foldLeft_23_5_equals_else(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @173, align 8
  ret ptr @173
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.473(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @174, align 8
  ret ptr @174
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.475(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @175, align 8
  ret ptr @175
}

define ptr @Core_iterator_foldLeft_23_5_case-0_matched(ptr %0) {
Core_iterator_foldLeft_23_5_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_case-0_didNotMatch(ptr %0) {
Core_iterator_foldLeft_23_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.477, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.478, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.499, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.500, align 8
  %18 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.478, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.500, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 3
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_foldLeft_23_5_case-1_matched, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr }, ptr %37, i32 0, i32 0
  store ptr %20, ptr %38, align 8
  %39 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-1_didNotMatch, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %39, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  %40 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_matched, align 8
  %41 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  %42 = call ptr @candy_builtin_if_else(ptr %24, ptr %40, ptr %41)
  ret ptr %42
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.477(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.479, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.480, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.497, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.498, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.480, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.498, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.479(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.481, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.482, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.495, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.496, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.482, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.496, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.481(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.483, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.484, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.493, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.494, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.484, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.494, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.483(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_else.491, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.492, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.492, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_then(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @176, align 8
  ret ptr @176
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_else(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @177, align 8
  ret ptr @177
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_then(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_then.485, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.486, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_else.487, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.488, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.486, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.488, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_then.489, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.490, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.490, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_then.485(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @178, align 8
  ret ptr @178
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_else.487(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @179, align 8
  ret ptr @179
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_then.489(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @180, align 8
  ret ptr @180
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_else(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_else.491(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.493(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @181, align 8
  ret ptr @181
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.495(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.497(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @182, align 8
  ret ptr @182
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.499(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @183, align 8
  ret ptr @183
}

define ptr @Core_iterator_foldLeft_23_5_case-1_matched(ptr %0) {
Core_iterator_foldLeft_23_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %10, ptr %4, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %8, ptr %20, align 8
  %21 = load ptr, ptr @tag_Value, align 8
  %22 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %22, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %15, ptr %23, align 8
  %24 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %26, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_foldLeft_23_5_case-1_didNotMatch(ptr %0) {
Core_iterator_foldLeft_23_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_18.501(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.503, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.504, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.504, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_foldLeft_23)
  %7 = call ptr @Core_iterator_foldLeft_23(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.503(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_reduceLeft_18_case-0_matched() {
Core_iterator_reduceLeft_18_case-0_matched:
  %0 = load ptr, ptr @tag_Error.505, align 8
  ret ptr %0
}

define ptr @Core_iterator_reduceLeft(ptr %0, ptr %1) {
Core_iterator_reduceLeft:
  %2 = call ptr @Core_function_is2(ptr %1)
  %3 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_reduceLeft_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_reduceLeft_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = call ptr @Core_iterator_next(ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_Tag, align 8
  %12 = call ptr @candy_builtin_equals(ptr %11, ptr %10)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %9, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %10, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.510, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_18_equals_else.511, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.511, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %1, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %9, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-0_didNotMatch, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_matched, align 8
  %32 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %25, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_reduceLeft_14() {
Core_iterator_reduceLeft_14:
  %0 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_reduceLeft_18_equals_then(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.506, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.507, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.508, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.509, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.507, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.509, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.506(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_reduceLeft_18_equals_else(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @184, align 8
  ret ptr @184
}

define ptr @Core_iterator_reduceLeft_18_equals_else.508(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @185, align 8
  ret ptr @185
}

define ptr @Core_iterator_reduceLeft_18_equals_else.510(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @186, align 8
  ret ptr @186
}

define ptr @Core_iterator_reduceLeft_18_case-0_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.512, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_18_equals_then.513, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.534, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_reduceLeft_18_equals_else.535, align 8
  %18 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.513, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.535, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_18_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_reduceLeft_18_equals_then.512(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.514, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.515, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.532, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.533, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.515, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.533, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.514(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.516, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.517, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.530, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.531, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.517, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.531, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.516(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.518, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_18_equals_then.519, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.528, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_reduceLeft_18_equals_else.529, align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.519, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.529, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_reduceLeft_18_equals_then.518(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_else.526, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.527, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.527, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_reduceLeft_18_hasKey_then(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @187, align 8
  ret ptr @187
}

define ptr @Core_iterator_reduceLeft_18_hasKey_else(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @188, align 8
  ret ptr @188
}

define ptr @Core_iterator_reduceLeft_18_isMatch_then(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_then.520, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.521, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_else.522, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.523, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.521, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.523, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_then.524, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.525, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.525, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_reduceLeft_18_hasKey_then.520(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @189, align 8
  ret ptr @189
}

define ptr @Core_iterator_reduceLeft_18_hasKey_else.522(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @190, align 8
  ret ptr @190
}

define ptr @Core_iterator_reduceLeft_18_isMatch_then.524(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @191, align 8
  ret ptr @191
}

define ptr @Core_iterator_reduceLeft_18_isMatch_else(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_18_isMatch_else.526(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_18_equals_else.528(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @192, align 8
  ret ptr @192
}

define ptr @Core_iterator_reduceLeft_18_equals_else.530(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_reduceLeft_18_equals_else.532(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @193, align 8
  ret ptr @193
}

define ptr @Core_iterator_reduceLeft_18_equals_else.534(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @194, align 8
  ret ptr @194
}

define ptr @Core_iterator_reduceLeft_18_case-1_matched(ptr %0) {
Core_iterator_reduceLeft_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %4, ptr %10)
  %12 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %12, align 1
  %13 = call ptr @make_candy_tag(ptr %12, ptr %11)
  store ptr %13, ptr @tag_Ok.536, align 8
  ret ptr @tag_Ok.536
}

define ptr @Core_iterator_reduceLeft_18_case-1_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_sum_8(ptr %0, ptr %1) {
Core_iterator_sum_8:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %14
}

define ptr @Core_iterator_sum(ptr %0) {
Core_iterator_sum:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_sum_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_sum_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_sum_5, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_sum_5, align 8
  %7 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  %8 = call ptr @Core_iterator_ensure(ptr %4, ptr %7)
  %9 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  %10 = call ptr @Core_iterator_reduceLeft(ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @Core_result_unwrapOr(ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_iterator_sum_2() {
Core_iterator_sum_2:
  %0 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_sum_5(ptr %0) {
Core_iterator_sum_5:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  ret ptr %5
}

define ptr @Core_iterator_length_5(ptr %0) {
Core_iterator_length_5:
  %1 = load ptr, ptr @num_1, align 8
  ret ptr %1
}

define ptr @Core_iterator_all(ptr %0, ptr %1) {
Core_iterator_all:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_all_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_all_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_all_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_all_18, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_all_18, align 8
  %12 = load ptr, ptr @tag_True, align 8
  %13 = load ptr, ptr @fun_Core_iterator_all_18, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_all_14() {
Core_iterator_all_14:
  %0 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_all_18(ptr %0, ptr %1, ptr %2) {
Core_iterator_all_18:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_and_12, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_and_12, align 8
  %22 = load ptr, ptr @fun_Core_bool_and_12, align 8
  %23 = call ptr @Core_bool_lazyAnd(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_and_12(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_any(ptr %0, ptr %1) {
Core_iterator_any:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_any_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_any_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_any_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_any_18, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_any_18, align 8
  %12 = load ptr, ptr @tag_False, align 8
  %13 = load ptr, ptr @fun_Core_iterator_any_18, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_any_14() {
Core_iterator_any_14:
  %0 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_any_18(ptr %0, ptr %1, ptr %2) {
Core_iterator_any_18:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_or_12.537, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_or_12.538, align 8
  %22 = load ptr, ptr @fun_Core_bool_or_12.538, align 8
  %23 = call ptr @Core_bool_lazyOr(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_or_12.537(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_joinToText(ptr %0) {
Core_iterator_joinToText:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_joinToText_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_joinToText_12, align 8
  %7 = load ptr, ptr @text_, align 8
  %8 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %4, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_iterator_joinToText_2() {
Core_iterator_joinToText_2:
  %0 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_joinToText_12(ptr %0, ptr %1) {
Core_iterator_joinToText_12:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %19
}

define ptr @Core_iterator_where(ptr %0, ptr %1) {
Core_iterator_where:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_where_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_where_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_where_19, align 8
  %13 = call ptr @Core_function_is2(ptr %12)
  %14 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %15 = load ptr, ptr @"Core:iterator:where:20", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.601, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_controlFlow_recursive_18.602, align 8
  %19 = load ptr, ptr @fun_Core_controlFlow_recursive_18.602, align 8
  %20 = call ptr @Core_controlFlow_recursive_18.601(ptr %19, ptr %5)
  ret ptr %20
}

define ptr @Core_iterator_where_2() {
Core_iterator_where_2:
  %0 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_where_19(ptr %0, ptr %1, ptr %2) {
Core_iterator_where_19:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %6, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_where_19_2, align 8
  %9 = load ptr, ptr @fun_Core_iterator_where_19_2, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %1, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_where_19_2(ptr %0, ptr %1) {
Core_iterator_where_19_2:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.543, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_equals_else.544, align 8
  %12 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.544, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %2, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %14, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 3
  store ptr %26, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %30 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %18, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_where_19_2_3_equals_then(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.539, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.540, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.541, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.542, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.540, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.542, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.539(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_where_19_2_3_equals_else(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @195, align 8
  ret ptr @195
}

define ptr @Core_iterator_where_19_2_3_equals_else.541(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @196, align 8
  ret ptr @196
}

define ptr @Core_iterator_where_19_2_3_equals_else.543(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @197, align 8
  ret ptr @197
}

define ptr @Core_iterator_where_19_2_3_case-0_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.545, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_equals_then.546, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.567, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_equals_else.568, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.546, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.568, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_where_19_2_3_case-1_matched, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-1_didNotMatch, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_matched, align 8
  %38 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %24, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_iterator_where_19_2_3_equals_then.545(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.547, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.548, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.565, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.566, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.548, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.566, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.547(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.549, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.550, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.563, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.564, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.550, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.564, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.549(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.551, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_equals_then.552, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.561, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_19_2_3_equals_else.562, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.552, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.562, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_19_2_3_equals_then.551(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_else.559, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.560, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.560, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_hasKey_then(ptr %0) {
Core_iterator_where_19_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @198, align 8
  ret ptr @198
}

define ptr @Core_iterator_where_19_2_3_hasKey_else(ptr %0) {
Core_iterator_where_19_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @199, align 8
  ret ptr @199
}

define ptr @Core_iterator_where_19_2_3_isMatch_then(ptr %0) {
Core_iterator_where_19_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_then.553, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.554, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_else.555, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.556, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.554, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.556, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_then.557, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.558, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.558, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_19_2_3_hasKey_then.553(ptr %0) {
Core_iterator_where_19_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @200, align 8
  ret ptr @200
}

define ptr @Core_iterator_where_19_2_3_hasKey_else.555(ptr %0) {
Core_iterator_where_19_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @201, align 8
  ret ptr @201
}

define ptr @Core_iterator_where_19_2_3_isMatch_then.557(ptr %0) {
Core_iterator_where_19_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @202, align 8
  ret ptr @202
}

define ptr @Core_iterator_where_19_2_3_isMatch_else(ptr %0) {
Core_iterator_where_19_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_isMatch_else.559(ptr %0) {
Core_iterator_where_19_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_equals_else.561(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @203, align 8
  ret ptr @203
}

define ptr @Core_iterator_where_19_2_3_equals_else.563(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_19_2_3_equals_else.565(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @204, align 8
  ret ptr @204
}

define ptr @Core_iterator_where_19_2_3_equals_else.567(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @205, align 8
  ret ptr @205
}

define ptr @Core_iterator_where_19_2_3_case-1_matched(ptr %0) {
Core_iterator_where_19_2_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %4, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 1
  store ptr %8, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  %24 = load ptr, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  %25 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  %26 = call ptr @Builtins__ifElse(ptr %13, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_where_19_2_3_5(ptr %0) {
Core_iterator_where_19_2_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.569, align 8
  ret ptr @tag_More.569
}

define ptr @Core_iterator_where_19_2_3_6(ptr %0) {
Core_iterator_where_19_2_3_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @Core_iterator_next(ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Tag, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %9, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.574, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.575, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.575, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %11, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %8, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %30 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %24, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.570, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.571, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.572, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.573, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.571, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.573, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.570(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @206, align 8
  ret ptr @206
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.572(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @207, align 8
  ret ptr @207
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.574(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @208, align 8
  ret ptr @208
}

define ptr @Core_iterator_where_19_2_3_6_5_case-0_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.576, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.577, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.598, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.599, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.577, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.599, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_matched, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_matched, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.576(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.578, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.579, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.596, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.597, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.579, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.597, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.578(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.580, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.581, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.594, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.595, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.581, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.595, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.580(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.582, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.583, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.592, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.593, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.583, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.593, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.582(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_else.590, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.591, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.591, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @209, align 8
  ret ptr @209
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @210, align 8
  ret ptr @210
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_then.584, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.585, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_else.586, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.587, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.585, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.587, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_then.588, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.589, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.589, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_then.584(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @211, align 8
  ret ptr @211
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_else.586(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @212, align 8
  ret ptr @212
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_then.588(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @213, align 8
  ret ptr @213
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_else.590(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.592(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @214, align 8
  ret ptr @214
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.594(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.596(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @215, align 8
  ret ptr @215
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.598(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @216, align 8
  ret ptr @216
}

define ptr @Core_iterator_where_19_2_3_6_5_case-1_matched(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_State, align 8
  %15 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %15, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %8, ptr %16, align 8
  %17 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %20 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %20, align 1
  %21 = call ptr @make_candy_tag(ptr %20, ptr %19)
  store ptr %21, ptr @tag_More.600, align 8
  ret ptr @tag_More.600
}

define ptr @Core_iterator_where_19_2_3_6_5_case-1_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_where_19_2_3_case-1_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_18.601(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.603, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.604, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.604, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_where_19)
  %7 = call ptr @Core_iterator_where_19(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.603(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_takeWhile(ptr %0, ptr %1) {
Core_iterator_takeWhile:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_takeWhile_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7, align 8
  %9 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_takeWhile_2() {
Core_iterator_takeWhile_2:
  %0 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_takeWhile_7(ptr %0, ptr %1) {
Core_iterator_takeWhile_7:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.609, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.610, align 8
  %12 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.610, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %2, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %14, ptr %21, align 8
  %22 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %26 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %27 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %18, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_takeWhile_7_3_equals_then(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.605, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.606, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.607, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.608, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.606, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.608, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.605(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_takeWhile_7_3_equals_else(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @217, align 8
  ret ptr @217
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.607(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @218, align 8
  ret ptr @218
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.609(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @219, align 8
  ret ptr @219
}

define ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.611, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.612, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.633, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.634, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.612, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.634, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.611(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.613, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.614, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.631, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.632, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.614, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.632, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.613(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.615, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.616, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.629, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.630, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.616, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.630, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.615(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.617, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.618, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.627, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.628, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.618, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.628, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.617(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else.625, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.626, align 8
  %31 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.626, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @220, align 8
  ret ptr @220
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @221, align 8
  ret ptr @221
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then.619, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.620, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else.621, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.622, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.620, align 8
  %20 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.622, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then.623, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.624, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.624, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then.619(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @222, align 8
  ret ptr @222
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else.621(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @223, align 8
  ret ptr @223
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then.623(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @224, align 8
  ret ptr @224
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else.625(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.627(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @225, align 8
  ret ptr @225
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.629(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.631(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @226, align 8
  ret ptr @226
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.633(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @227, align 8
  ret ptr @227
}

define ptr @Core_iterator_takeWhile_7_3_case-1_matched(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %4, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %20 = call ptr @Builtins__ifElse(ptr %13, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_iterator_takeWhile_7_3_5(ptr %0) {
Core_iterator_takeWhile_7_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.635, align 8
  ret ptr @tag_More.635
}

define ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_withIndex_2() {
Core_iterator_withIndex_2:
  %0 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_34(ptr %0) {
Core_iterator_take_34:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Item, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Item, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_take(ptr %0, ptr %1) {
Core_iterator_take:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %1)
  %8 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %11 = call ptr @make_candy_function(ptr @Core_iterator_take_26, ptr %10, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_take_26, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_26, align 8
  %13 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %12)
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %15 = call ptr @Core_iterator_wrapSafe(ptr %13, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %15, ptr %20, align 8
  %21 = load ptr, ptr @tag_Index, align 8
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %23, align 8
  %24 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %24, align 8
  %25 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %28 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %29 = call ptr @Core_iterator_generateWithState(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_31, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_31, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_31, align 8
  %34 = call ptr @Core_iterator_takeWhile(ptr %29, ptr %33)
  %35 = load ptr, ptr @fun_Core_iterator_take_34, align 8
  %36 = call ptr @Core_iterator_map(ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_take_26() {
Core_iterator_take_26:
  %0 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_31(ptr %0, ptr %1) {
Core_iterator_take_31:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else.644, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_take_31_1_isMatch_else.645, align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.645, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @Core_int_isLessThan(ptr %27, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_take_31_1_equals_then(ptr %0) {
Core_iterator_take_31_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else.642, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_take_31_1_isMatch_else.643, align 8
  %31 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.643, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_take_31_1_hasKey_then(ptr %0) {
Core_iterator_take_31_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @228, align 8
  ret ptr @228
}

define ptr @Core_iterator_take_31_1_hasKey_else(ptr %0) {
Core_iterator_take_31_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @229, align 8
  ret ptr @229
}

define ptr @Core_iterator_take_31_1_isMatch_then(ptr %0) {
Core_iterator_take_31_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_then.636, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_take_31_1_hasKey_then.637, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_else.638, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_take_31_1_hasKey_else.639, align 8
  %19 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then.637, align 8
  %20 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else.639, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_then.640, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_take_31_1_isMatch_then.641, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then.641, align 8
  %34 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_take_31_1_hasKey_then.636(ptr %0) {
Core_iterator_take_31_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @230, align 8
  ret ptr @230
}

define ptr @Core_iterator_take_31_1_hasKey_else.638(ptr %0) {
Core_iterator_take_31_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @231, align 8
  ret ptr @231
}

define ptr @Core_iterator_take_31_1_isMatch_then.640(ptr %0) {
Core_iterator_take_31_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @232, align 8
  ret ptr @232
}

define ptr @Core_iterator_take_31_1_isMatch_else(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_31_1_isMatch_else.642(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_31_1_equals_else(ptr %0) {
Core_iterator_take_31_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @233, align 8
  ret ptr @233
}

define ptr @Core_iterator_take_31_1_isMatch_else.644(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_30_6(ptr %0, ptr %1) {
Core_iterator_skip_30_6:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else.654, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.655, align 8
  %21 = load ptr, ptr @"fun_Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_sqrt_then, Examples_sqrt_19_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.655, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_7, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_30_6_7, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %27, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 2
  store ptr %0, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_skip_30_6_8, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_30_6_7, align 8
  %39 = load ptr, ptr @fun_Core_iterator_skip_30_6_8, align 8
  %40 = call ptr @Builtins__ifElse(ptr %29, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_skip_30_6_1_equals_then(ptr %0) {
Core_iterator_skip_30_6_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else.652, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.653, align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.653, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_skip_30_6_1_hasKey_then(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @234, align 8
  ret ptr @234
}

define ptr @Core_iterator_skip_30_6_1_hasKey_else(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @235, align 8
  ret ptr @235
}

define ptr @Core_iterator_skip_30_6_1_isMatch_then(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_N, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_then.646, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.647, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_else.648, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.649, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.647, align 8
  %20 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.649, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_then.650, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.651, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.651, align 8
  %34 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_skip_30_6_1_hasKey_then.646(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_N, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @236, align 8
  ret ptr @236
}

define ptr @Core_iterator_skip_30_6_1_hasKey_else.648(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @237, align 8
  ret ptr @237
}

define ptr @Core_iterator_skip_30_6_1_isMatch_then.650(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @238, align 8
  ret ptr @238
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else.652(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_1_equals_else(ptr %0) {
Core_iterator_skip_30_6_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @239, align 8
  ret ptr @239
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else.654(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_30_6_7(ptr %0) {
Core_iterator_skip_30_6_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_skip_30_6_8(ptr %0) {
Core_iterator_skip_30_6_8:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.660, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.661, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.661, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %3, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 3
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  %30 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %19, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.656, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.657, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.658, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.659, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.657, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.659, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.656(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_single_6_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @240, align 8
  ret ptr @240
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.658(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @241, align 8
  ret ptr @241
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.660(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @242, align 8
  ret ptr @242
}

define ptr @Core_iterator_skip_30_6_8_3_case-0_didNotMatch(ptr %0) {
Core_iterator_skip_30_6_8_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.662, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.663, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.676, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.677, align 8
  %18 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.663, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.677, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_matched, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-1_didNotMatch, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_matched, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %24, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.662(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.664, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.665, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.674, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.675, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.665, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.675, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.664(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.666, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.667, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.672, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.673, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.667, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.673, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.666(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.668, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.669, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.670, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.671, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.669, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.671, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.668(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_skip_30_6_8_3_hasKey_then(ptr %0) {
Core_iterator_skip_30_6_8_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @243, align 8
  ret ptr @243
}

define ptr @Core_iterator_skip_30_6_8_3_hasKey_else(ptr %0) {
Core_iterator_skip_30_6_8_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @244, align 8
  ret ptr @244
}

define ptr @Core_iterator_skip_30_6_8_3_isMatch_then(ptr %0) {
Core_iterator_skip_30_6_8_3_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @245, align 8
  ret ptr @245
}

define ptr @Core_iterator_skip_30_6_8_3_isMatch_else(ptr %0) {
Core_iterator_skip_30_6_8_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.670(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @246, align 8
  ret ptr @246
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.672(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.674(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @247, align 8
  ret ptr @247
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.676(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @248, align 8
  ret ptr @248
}

define ptr @Core_iterator_skip_30_6_8_3_case-1_matched(ptr %0) {
Core_iterator_skip_30_6_8_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @num_1, align 8
  %16 = call ptr @candy_builtin_int_subtract(ptr %14, ptr %15)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_N, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %16, ptr %21, align 8
  %22 = load ptr, ptr @tag_Iterator, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %4, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %27, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_skip_30_6_8_3_case-1_didNotMatch(ptr %0) {
Core_iterator_skip_30_6_8_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_18.678(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.680, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.681, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.681, align 8
  %6 = call ptr @Core_iterator_skip_30_6(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0.680(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_skip(ptr %0, ptr %1) {
Core_iterator_skip:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_skip_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_skip_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @candy_builtin_type_of(ptr %1)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_int_isNonNegative(ptr %1)
  %12 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %5, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %1, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_skip_30, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_skip_30, align 8
  %18 = load ptr, ptr @fun_Core_iterator_skip_30, align 8
  %19 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_Iterator.682, align 8
  ret ptr @tag_Iterator.682
}

define ptr @Core_iterator_skip_2() {
Core_iterator_skip_2:
  %0 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_skip_30(ptr %0) {
Core_iterator_skip_30:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6, align 8
  %17 = call ptr @Core_function_is2(ptr %16)
  %18 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %19 = load ptr, ptr @"Core:iterator:skip:30:7", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @fun_Core_controlFlow_recursive_18.679, align 8
  %22 = call ptr @Core_controlFlow_recursive_18.678(ptr %21, ptr %15)
  ret ptr %22
}

define ptr @Core_iterator_fromList(ptr %0) {
Core_iterator_fromList:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:fromList:22", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @candy_builtin_list_length(ptr %0)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_fromList_23, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_fromList_23, align 8
  %16 = load ptr, ptr @fun_Core_iterator_fromList_23, align 8
  %17 = call ptr @Core_iterator_generate(ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_iterator_fromList_23(ptr %0, ptr %1) {
Core_iterator_fromList_23:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Builtins__listGet(ptr %3, ptr %0)
  ret ptr %4
}

define ptr @Core_iterator_toList_6(ptr %0, ptr %1) {
Core_iterator_toList_6:
  %2 = call ptr @Core_list_append(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_iterator_windowed:
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Core_iterator_windowed_2, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_windowed_2, align 8
  %6 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  %7 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Int, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:windowed:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = load ptr, ptr @num_0, align 8
  %20 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %19)
  %21 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @candy_builtin_type_of(ptr %2)
  %24 = load ptr, ptr @tag_Int, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_type_of(ptr %2)
  %29 = load ptr, ptr @tag_Int, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:iterator:windowed:50", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @num_0, align 8
  %35 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = call ptr @Core_bool_is(ptr %3)
  %39 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %3, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %1, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %2, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_iterator_windowed_67, align 8
  %46 = load ptr, ptr @fun_Core_iterator_windowed_67, align 8
  %47 = call ptr @Core_iterator_generateWithState(ptr %7, ptr %46)
  ret ptr %47
}

define ptr @Core_iterator_windowed_2() {
Core_iterator_windowed_2:
  %0 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed_67(ptr %0, ptr %1) {
Core_iterator_windowed_67:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Core_iterator_take(ptr %0, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %4, ptr %5)
  %7 = load ptr, ptr @249, align 8
  %8 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_List, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:windowed:67:16", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_list_length(ptr %9)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %16, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_20, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_windowed_67_20, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %16, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_21, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_windowed_67_21, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @fun_Core_iterator_windowed_67_20, align 8
  %29 = load ptr, ptr @fun_Core_iterator_windowed_67_21, align 8
  %30 = call ptr @Builtins__ifElse(ptr %27, ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %0, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %9, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %35, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_26, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_windowed_67_26, align 8
  %38 = load ptr, ptr @fun_Core_iterator_windowed_67_26, align 8
  %39 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %40 = call ptr @Builtins__ifElse(ptr %30, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_windowed_67_20(ptr %0) {
Core_iterator_windowed_67_20:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_windowed_67_21(ptr %0) {
Core_iterator_windowed_67_21:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @candy_builtin_equals(ptr %2, ptr %4)
  ret ptr %5
}

define ptr @Core_iterator_windowed_67_26(ptr %0) {
Core_iterator_windowed_67_26:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @Core_iterator_skip(ptr %2, ptr %4)
  %6 = alloca ptr, i64 3, align 8
  %7 = alloca ptr, i64 3, align 8
  %8 = load ptr, ptr @tag_Item, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %6, i64 0
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %7, i64 0
  store ptr %10, ptr %12, align 8
  %13 = load ptr, ptr @tag_State, align 8
  %14 = getelementptr ptr, ptr %6, i64 1
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %7, i64 1
  store ptr %5, ptr %15, align 8
  %16 = getelementptr ptr, ptr %6, i64 2
  store ptr null, ptr %16, align 8
  %17 = getelementptr ptr, ptr %7, i64 2
  store ptr null, ptr %17, align 8
  %18 = call ptr @make_candy_struct(ptr %6, ptr %7)
  %19 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_More.683, align 8
  ret ptr @tag_More.683
}

define ptr @Core_iterator_chunked(ptr %0, ptr %1) {
Core_iterator_chunked:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:chunked:21", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %13)
  %15 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_iterator_chunked_26, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_chunked_26, align 8
  %19 = load ptr, ptr @fun_Core_iterator_chunked_26, align 8
  %20 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %19)
  %21 = load ptr, ptr @tag_True, align 8
  %22 = call ptr @Core_iterator_windowed(ptr %20, ptr %1, ptr %1, ptr %21)
  ret ptr %22
}

define ptr @Core_iterator_chunked_26() {
Core_iterator_chunked_26:
  %0 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_128_equals_then(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.684, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.685, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.700, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.701, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.685, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.701, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.684(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.686, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.687, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.698, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.699, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.687, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.699, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.686(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.688, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.689, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.689, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.688(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.696, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.697, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.697, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @252, align 8
  ret ptr @252
}

define ptr @Core_iterator_128_hasKey_else(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @253, align 8
  ret ptr @253
}

define ptr @Core_iterator_128_isMatch_then(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.690, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.691, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.692, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.693, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.691, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.693, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.694, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.695, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.695, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.690(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @254, align 8
  ret ptr @254
}

define ptr @Core_iterator_128_hasKey_else.692(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @255, align 8
  ret ptr @255
}

define ptr @Core_iterator_128_isMatch_then.694(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @256, align 8
  ret ptr @256
}

define ptr @Core_iterator_128_isMatch_else(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.696(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @257, align 8
  ret ptr @257
}

define ptr @Core_iterator_128_equals_else.698(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.700(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @258, align 8
  ret ptr @258
}

define ptr @Core_iterator_128_equals_else.702(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @259, align 8
  ret ptr @259
}

define ptr @Core_iterator_128_isMatch_else.704(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.706, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.707, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.722, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.723, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.707, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.723, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.706(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.708, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.709, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.720, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.721, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.709, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.721, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.708(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.710, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.711, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.711, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.710(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.718, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.719, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.719, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @260, align 8
  ret ptr @260
}

define ptr @Core_iterator_137_hasKey_else(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @261, align 8
  ret ptr @261
}

define ptr @Core_iterator_137_isMatch_then(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.712, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.713, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.714, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.715, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.713, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.715, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.716, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.717, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.717, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.712(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @262, align 8
  ret ptr @262
}

define ptr @Core_iterator_137_hasKey_else.714(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @263, align 8
  ret ptr @263
}

define ptr @Core_iterator_137_isMatch_then.716(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @264, align 8
  ret ptr @264
}

define ptr @Core_iterator_137_isMatch_else(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.718(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @265, align 8
  ret ptr @265
}

define ptr @Core_iterator_137_equals_else.720(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @62, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.722(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @266, align 8
  ret ptr @266
}

define ptr @Core_iterator_137_equals_else.724(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @267, align 8
  ret ptr @267
}

define ptr @Core_iterator_137_isMatch_else.726(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_isEmpty_2() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_isEmpty_2.728() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_161(ptr %0) {
Core_iterator_161:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:161:10", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_int_multiply(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_toList_2.730() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_length_2() {
Core_iterator_length_2:
  %0 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_185(ptr %0) {
Core_iterator_185:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:185:9", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_0, align 8
  %8 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_192(ptr %0) {
Core_iterator_192:
  %1 = load ptr, ptr @num_2, align 8
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_214(ptr %0) {
Core_iterator_214:
  %1 = call ptr @Core_int_isOdd(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_toList_2.732() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_228(ptr %0) {
Core_iterator_228:
  %1 = load ptr, ptr @num_4, align 8
  %2 = call ptr @Core_int_isLessThan(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2.734() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.736() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.738() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.740() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.742() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.744() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.746() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Examples_sqrt_sqrt(ptr %0, ptr %1) {
Examples_sqrt_sqrt:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`fixedDecimal.is x` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %0)
  %6 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %7 = load ptr, ptr @"Examples:sqrt:sqrt:21", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = call ptr @Core_fixedDecimal_is(ptr %0)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:fixedDecimal:isNonNegative:7", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @Core_fixedDecimal_minorUnits(ptr %0)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @Core_int_isLessThan(ptr %13, ptr %14)
  %16 = call ptr @Core_bool_not(ptr %15)
  %17 = load ptr, ptr @"text_`fixedDecimal.isNonNegative x` was not satisfied", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr null)
  %19 = call ptr @candy_builtin_type_of(ptr %1)
  %20 = load ptr, ptr @tag_Int, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`int.is precision` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_int_isNonNegative(ptr %1)
  %25 = load ptr, ptr @"text_`int.isNonNegative precision` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = load ptr, ptr @num_10, align 8
  %28 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %27, ptr %1)
  %29 = load ptr, ptr @num_2, align 8
  %30 = load ptr, ptr @num_0, align 8
  %31 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %29, ptr %30)
  %32 = call ptr @Core_fixedDecimal_divideTruncatingAtScale(ptr %0, ptr %31, ptr %1)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %0, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 2
  store ptr %28, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_82, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Examples_sqrt_sqrt_82, align 8
  %38 = load ptr, ptr @fun_Examples_sqrt_sqrt_82, align 8
  %39 = call ptr @Core_function_is2(ptr %38)
  %40 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %41 = load ptr, ptr @"Examples:sqrt:sqrt:83", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr %41)
  %43 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %44 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.748, ptr %43, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_controlFlow_recursive_18.749, align 8
  %45 = load ptr, ptr @fun_Core_controlFlow_recursive_18.749, align 8
  %46 = call ptr @Core_controlFlow_recursive_18.748(ptr %45, ptr %32)
  ret ptr %46
}

define ptr @Examples_sqrt_sqrt_82(ptr %0, ptr %1, ptr %2) {
Examples_sqrt_sqrt_82:
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @Core_fixedDecimal_divideTruncatingAtScale(ptr %4, ptr %1, ptr %6)
  %8 = call ptr @Core_fixedDecimal_add(ptr %1, ptr %7)
  %9 = load ptr, ptr @num_2, align 8
  %10 = load ptr, ptr @num_0, align 8
  %11 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %9, ptr %10)
  %12 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @Core_fixedDecimal_divideTruncatingAtScale(ptr %8, ptr %11, ptr %13)
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %2, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = call ptr @Core_fixedDecimal_approxEquals(ptr %1, ptr %14, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_82_56, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Examples_sqrt_sqrt_82_56, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %14, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Examples_sqrt_sqrt_82_57, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Examples_sqrt_sqrt_82_57, align 8
  %25 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_56, align 8
  %26 = load ptr, ptr @fun_Examples_sqrt_sqrt_82_57, align 8
  %27 = call ptr @Builtins__ifElse(ptr %17, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Examples_sqrt_sqrt_82_56(ptr %0) {
Examples_sqrt_sqrt_82_56:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_sqrt_sqrt_82_57(ptr %0) {
Examples_sqrt_sqrt_82_57:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18.748(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.750, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.751, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.751, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Examples_sqrt_sqrt_82)
  %7 = call ptr @Examples_sqrt_sqrt_82(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.750(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Examples_sqrt_main(ptr %0) {
Examples_sqrt_main:
  %1 = load ptr, ptr @num_2, align 8
  %2 = load ptr, ptr @num_0, align 8
  %3 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %1, ptr %2)
  %4 = load ptr, ptr @num_65, align 8
  %5 = call ptr @Examples_sqrt_sqrt(ptr %3, ptr %4)
  %6 = call ptr @Core_fixedDecimal_toText(ptr %5)
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %6, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Examples_sqrt_main_50, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Examples_sqrt_main_50, align 8
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %6, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Examples_sqrt_main_51, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Examples_sqrt_main_51, align 8
  %16 = load ptr, ptr @fun_Examples_sqrt_main_50, align 8
  %17 = load ptr, ptr @fun_Examples_sqrt_main_51, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %9, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The root of 2 is ", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = call ptr @candy_builtin_print(ptr %20)
  ret ptr %21
}

define ptr @Examples_sqrt_main_50(ptr %0) {
Examples_sqrt_main_50:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_sqrt_main_51(ptr %0) {
Examples_sqrt_main_51:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}
